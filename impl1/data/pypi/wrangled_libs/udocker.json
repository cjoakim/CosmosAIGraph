{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: end users/desktop",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: system",
    "topic :: utilities"
  ],
  "description": "[![pypi version](https://badge.fury.io/py/udocker.svg)](https://badge.fury.io/py/udocker)\n[![build status](https://jenkins.eosc-synergy.eu/buildstatus/icon?job=indigo-dc%2fudocker%2fmaster)](https://jenkins.eosc-synergy.eu/job/indigo-dc/job/udocker/job/master/)\n\n[![sqaaas badge](https://github.com/eosc-synergy/sqaaas/raw/master/badges/badges_150x116/badge_software_gold.png)](https://api.eu.badgr.io/public/assertions/70dstwykqpmev7dfy6tf3w \"sqaaas gold badge achieved\")\n\n---\n![logo](docs/logo-small.png)\n\nudocker is a basic user tool to execute simple docker containers in user\nspace without requiring root privileges. enables download and execution\nof docker containers by non-privileged users in linux systems where\ndocker is not available. it can be used to pull and execute docker\ncontainers in linux batch systems and interactive clusters that are\nmanaged by other entities such as grid infrastructures or externally\nmanaged batch or interactive systems.\n\nudocker does not require any type of privileges nor the deployment of\nservices by system administrators. it can be downloaded and executed\nentirely by the end user. the limited root functionality provided by\nsome of the udocker execution modes is either simulated or provided\nvia user namespaces.\n\nudocker is a wrapper around several tools and libraries to mimic a\nsubset of the docker capabilities including pulling images and running\ncontainers with minimal functionality.\n\n## documentation\n\nthe full documentation is available at:\n\n* [udocker documentation](https://indigo-dc.github.io/udocker/)\n* [installation manual](https://indigo-dc.github.io/udocker/installation_manual.html)\n* [user manual](https://indigo-dc.github.io/udocker/user_manual.html)\n* [reference card](https://indigo-dc.github.io/udocker/reference_card.html)\n\n## how does it work\n\nudocker is written in python, it has a minimal set of dependencies so\nthat can be executed in a wide range of linux systems.\n\nudocker does not make use of docker nor requires its presence.\n\nudocker \"executes\" the containers by simply providing a chroot like\nenvironment over the extracted container. the current implementation\nsupports different methods to mimic chroot thus enabling execution of\ncontainers under a chroot like environment without requiring privileges.\nudocker transparently supports several methods to execute the containers\nbased on external tools and libraries such as:\n\n* proot\n* fakechroot\n* runc\n* crun\n* singularity\n\nwith the exception of singularity the tools and libraries to support\nexecution are downloaded and deployed by udocker during the installation\nprocess. this installation is performed in the user home directory\nand does not require privileges. the udocker related files such as\nlibraries, executables, documentation, licenses, container images and\nextracted directory trees are placed by default under `$home/.udocker`.\n\n## advantages\n\n* can be deployed by the end-user\n* does not require privileges for installation\n* does not require privileges for execution\n* does not require compilation, just transfer the python code\n* encapsulates several tools and execution methods\n* includes the required tools already statically compiled to work\n  across systems\n* provides a docker like command line interface\n* supports a subset of docker commands:\n  search, pull, import, export, load, save, login, logout, create and run\n* understands docker container metadata\n* allows loading of docker and oci containers\n* supports nvidia gpgpu applications\n* can execute in systems and environments where linux namespaces\n  support is unavailable\n* runs both on new and older linux distributions including:\n  centos 6, centos 7, centos 8, ubuntu 14, ubuntu 16, ubuntu 18, ubuntu 20,\n  ubuntu 21, alpine, fedora, etc\n\n## python 2 and python 3\n\nsince v1.3.0, udocker supports python 2.6, 2.7 and python >= 3.6.\nthe original udocker v1.1.x for python 2 is no longer maintained\nbut is still available\n[here](https://github.com/indigo-dc/udocker/tree/v1.1.8).\n\n## syntax\n\n```txt\n        commands:\n          search <repo/expression>      :search dockerhub for container images\n          pull <repo/image:tag>         :pull container image from dockerhub\n          create <repo/image:tag>       :create container from a pulled image\n          run <container>               :execute container\n          run <repo/image:tag>          :pull, create and execute container\n\n          images -l                     :list container images\n          ps -m -s                      :list created containers\n          name <container_id> <name>    :give name to container\n          rmname <name>                 :delete name from container\n          rename <name> <new_name>      :change container name\n          clone <container_id>          :duplicate container\n          rm <container-id>             :delete container\n          rmi <repo/image:tag>          :delete image\n          tag <repo/image:tag> <repo2/image2:tag2> :tag image\n\n          import <tar> <repo/image:tag> :import tar file (exported by docker)\n          import - <repo/image:tag>     :import from stdin (exported by docker)\n          export -o <tar> <container>   :export container directory tree\n          export - <container>          :export container directory tree\n          load -i <imagefile>           :load image from file (saved by docker)\n          load                          :load image from stdin (saved by docker)\n          save -o <imagefile> <repo/image:tag>  :save image with layers to file\n\n          inspect -p <repo/image:tag>   :return low level information on image\n          verify <repo/image:tag>       :verify a pulled or loaded image\n          manifest inspect <repo/image:tag> :print manifest metadata\n\n          protect <repo/image:tag>      :protect repository\n          unprotect <repo/image:tag>    :unprotect repository\n          protect <container>           :protect container\n          unprotect <container>         :unprotect container\n\n          mkrepo <top-repo-dir>         :create another repository in location\n          setup                         :change container execution settings\n          login                         :login into docker repository\n          logout                        :logout from docker repository\n\n          help                          :this help\n          run --help                    :command specific help\n          version                       :shows udocker version\n\n        options common to all commands must appear before the command:\n          -d                            :debug\n          --quiet                       :less verbosity\n          --repo=<directory>            :use repository at directory\n          --insecure                    :allow insecure non authenticated https\n          --allow-root                  :allow execution by root not recommended\n```\n\n## examples\n\nsome examples of usage:\n\nsearch container images in dockerhub.\n\n```bash\nudocker search  fedora\nudocker search  ubuntu\nudocker search  indigodatacloud\n```\n\npull from dockerhub and list the pulled images.\n\n```bash\nudocker pull   fedora:29\nudocker pull   busybox\nudocker pull   iscampos/openqcd\nudocker images\n```\n\npull from a registry other than dockerhub.\n\n```bash\nudocker search  quay.io/bio\nudocker search  --list-tags  quay.io/biocontainers/scikit-bio\nudocker pull    quay.io/biocontainers/scikit-bio:0.2.3--np112py35_0\nudocker images\n```\n\npull a different architecture such as arm64 instead of amd64.\n\n```bash\nudocker manifest inspect centos/centos8\nudocker pull --platform=linux/arm64 centos/centos8\nudocker tag centos/centos8  mycentos/centos8:arm64\n```\n\ncreate a container from a pulled image, assign a name to the created\ncontainer and run it. a created container can be run multiple times\nuntil it is explicitely removed.\n\n```bash\nudocker create --name=myfed  fedora:29\nudocker run  myfed  cat /etc/redhat-release\n```\n\nthe three steps of pulling, creating and running can be also achieved\nin a single command, however this will be much slower for multiple\ninvocations of the same container, as a new container will be created\nfor each invocation. this approach will also consume more storage space.\nthe following example creates a new container for each invocation.\n\n```bash\nudocker run  fedora:29  cat /etc/redhat-release\n```\n\nexecute mounting the host /home/u457 into the container directory /home/cuser.\nnotice that you can \"mount\" any host directory inside the container.\ndepending on the execution mode the \"mount\" is implemented differently and\nmay have restrictions.\n\n```bash\nudocker run -v /home/u457:/home/cuser -w /home/user myfed  /bin/bash\nudocker run -v /var -v /proc -v /sys -v /tmp  myfed  /bin/bash\n```\n\nplace a script in your host /tmp and execute it in the container. notice\nthat the behavior of `--entrypoint` changed from the previous versions\nfor better compatibility with docker.\n\n```bash\nudocker run  -v /tmp  --entrypoint=\"\" myfed  /bin/bash -c 'cd /tmp; ./myscript.sh'\n\nudocker run  -v /tmp  --entrypoint=/bin/bash  myfed  -c 'cd /tmp; ./myscript.sh'\n```\n\nexecute mounting the host /var, /proc, /sys and /tmp in the same container\ndirectories. notice that the content of these container directories will\nbe obfuscated.\n\n```bash\nudocker run -v /var -v /proc -v /sys -v /tmp  myfed  /bin/bash\n```\n\ninstall software inside the container.\n\n```bash\nudocker run  --user=root myfed  yum install -y firefox pulseaudio gnash-plugin\n```\n\nrun as some user. the usernames should exist in the container.\n\n```bash\nudocker run --user 1000:1001  myfed  /bin/id\nudocker run --user root   myfed  /bin/id\nudocker run --user jorge  myfed  /bin/id\n```\n\nrunning firefox.\n\n```bash\nudocker run --bindhome --hostauth --hostenv \\\n   -v /sys -v /proc -v /var/run -v /dev --user=jorge --dri myfed  firefox\n```\n\nchange execution engine mode from proot to fakechroot and run.\n\n```bash\nudocker setup  --execmode=f3  myfed\n\nudocker run --bindhome --hostauth --hostenv \\\n   -v /sys -v /proc -v /var/run -v /dev --user=jorge --dri myfed  firefox\n```\n\nchange execution engine mode to accelerated proot.\n\n```bash\nudocker setup  --execmode=p1  myfed\n```\n\nchange execution engine to runc.\n\n```bash\nudocker setup  --execmode=r1  myfed\n```\n\nchange execution engine to singularity. requires the availability of\nsingularity in the host system.\n\n```bash\n./udocker setup  --execmode=s1  myfed\n```\n\ninstall software running as root emulation in singularity:\n\n```bash\nudocker setup  --execmode=s1  myfed\nudocker run  --user=root myfed  yum install -y firefox pulseaudio gnash-plugin\n```\n\n## security\n\nby default udocker via proot offers the emulation of the root user. this\nemulation mimics a real root user (e.g getuid will return 0). this is just\nan emulation no root privileges are involved. this feature makes possible\nthe execution of some tools that do not require actual privileges but which\nrefuse to work if the username or id are not root or 0. this enables for\ninstance software installation using rpm, yum or dnf inside the container.\n\nudocker does not offer robust isolation features such as the ones offered\nby docker. therefore if the containers content is not trusted then these\ncontainers should not be executed with udocker as they will run inside the\nuser environment. for this reason udocker should not be run by privileged\nusers.\n\ncontainer images and filesystems will be unpacked and stored in the user\nhome directory under `$home/.udocker` or other location of choice. therefore\nthe containers data will be subjected to the same filesystem protections as\nother files owned by the user. if the containers have sensitive information\nthe files and directories should be adequately protected by the user.\n\nudocker does not require privileges and runs under the identity of the user\ninvoking it. users can downloaded udocker and execute it without requiring\nsystem administrators intervention.\n\nudocker also provides execution with runc, crun and singularity, these modes\nmake use of rootless namespaces and enable a normal user to execute as root\nwith the limitations that apply to user namespaces and to these tools.\n\nwhen executed by normal unprivileged users, udocker limits privilege\nescalation issues since it does not use or require system privileges.\n\n## general limitations\n\nsince root privileges are not involved any operation that really\nrequires such privileges will not be possible. the following  are\nexamples of operations that are not possible:\n\n* accessing host protected devices and files\n* listening on tcp/ip privileged ports (range below 1024)\n* mount file-systems\n* the su command will not work\n* change the system time\n* changing routing tables, firewall rules, or network interfaces\n\nif the containers require such privilege capabilities then docker\nshould be used instead.\n\nudocker is not meant to create containers. creation of containers\nis better performed using docker and dockerfiles.\n\nudocker does not provide all the docker features, and is not intended\nas a docker replacement.\n\nudocker is mainly oriented at providing a run-time environment for\ncontainers execution in user space. udocker is particularly suited to\nrun user applications encapsulated in docker containers.\n\ndebugging inside of udocker with the proot engine will not work due to\nthe way proot implements the chroot environment\n\n## execution mode specific limitations\n\nudocker offers multiple execution modes leveraging several external tools\nsuch as proot (p mode), fakechroot (f mode), runc (r mode), crun (r mode)\nand singularity (s mode).\n\nwhen using execution fakechroot modes such as f2, f3 and f4 the created\ncontainers cannot be moved across hosts. in this case convert back to a pn\nmode before transfer.\nthis is not needed if the hosts are part of an homogeneous cluster where\nthe mount points and directory structure is the same. this limitation\napplies whenever the absolute realpath to the container directory changes.\n\nthe default accelerated mode of proot (mode p1) may exhibit problems in linux\nkernels above 4.0 due to kernel changes and upstream issues, in this case use\nmode p2 or any of the other execution modes.\n\n```bash\n./udocker setup  --execmode=p2  my-container-id\n```\n\nthe fakechroot modes (fn modes) require shared libraries compiled against\nthe libc shipped with the container. udocker provides these libraries for\nseveral linux distributions, these shared libraries are installed by\nudocker under:\n\n```bash\n$home/.udocker/lib/libfakechroot-*\n```\n\nthe runc and crun modes (r modes) require a kernel with user namespaces enabled.\n\nthe singularity mode (s mode) requires the availability of singularity in\nthe host system. singularity is not shipped with udocker.\n\n## metadata generation\n\nthe `codemeta.json` metadata file was initially generated with `codemetapy`\npackage:\n\n```bash\ncodemetapy udocker --with-orcid --affiliation \"lip lisbon\" \\\n  --buildinstructions \"https://https://github.com/indigo-dc/udocker/blob/master/docs/installation_manual.md#3-source-code-and-build\" \\\n  --citation \"https://doi.org/10.1016/j.cpc.2018.05.021\" \\\n  --coderepository \"https://github.com/indigo-dc/udocker\" \\\n  --contintegration \"https://jenkins.eosc-synergy.eu/job/indigo-dc/job/udocker/job/master/\" --contributor \"mario david\" \\\n  --copyrightholder \"lip\"  --copyrightyear \"2016\" --creator \"jorge gomes\" \\\n  --datecreated \"2021-05-26\" --maintainer \"jorge gomes\" \\\n  --readme \"https://github.com/indigo-dc/udocker/blob/master/readme.md\" \\\n  --referencepublication \"https://doi.org/10.1016/j.cpc.2018.05.021\" \\\n  --releasenotes \"https://github.com/indigo-dc/udocker/blob/master/changelog\" \\\n  -o codemeta.json\n```\n\nfurther updates may be needed to add the correct values in the metadata file.\n\n## contributing\n\nsee: [contributing](contributing.md)\n\n## citing\n\nsee: [citing](citing.md)\n\nwhen citing udocker please use the following:\n\n* jorge gomes, emanuele bagnaschi, isabel campos, mario david,\n  lu\u00eds alves, jo\u00e3o martins, jo\u00e3o pina, alvaro l\u00f3pez-garc\u00eda, pablo orviz,\n  enabling rootless linux containers in multi-user environments: the udocker\n  tool, computer physics communications, available online 6 june 2018,\n  issn 0010-4655, <https://doi.org/10.1016/j.cpc.2018.05.021>\n\n## licensing\n\nredistribution, commercial use and code changes must regard all licenses\nshipped with udocker. these include the [udocker license](license) and the\nindividual licences of the external tools and libraries packaged for use\nwith udocker. for further information see the\n[software licenses section](https://indigo-dc.github.io/udocker/installation_manual.html#62-software-licenses)\nof the installation manual.\n\n## acknowledgements\n\n* docker <https://www.docker.com/>\n* proot <https://proot-me.github.io/>\n* fakechroot <https://github.com/dex4er/fakechroot/wiki>\n* patchelf <https://github.com/nixos/patchelf>\n* runc <https://runc.io/>\n* crun <https://github.com/containers/crun>\n* singularity <https://www.sylabs.io/>\n* open container initiative <https://www.opencontainers.org/>\n* indigo datacloud <https://www.indigo-datacloud.eu>\n* deep-hybrid-datacloud <https://deep-hybrid-datacloud.eu>\n* eosc-hub <https://eosc-hub.eu>\n* egi-ace <https://www.egi.eu/projects/egi-ace/>\n* eosc-synergy <https://www.eosc-synergy.eu/>\n* dt-geo <https://dtgeo.eu/>\n* lip [https://www.lip.pt](https://www.lip.pt/?section=home&page=homepage&lang=en)\n* incd [https://www.incd.pt](https://www.incd.pt/?lang=en)\n\nthis work was performed in the framework of the h2020 project indigo-datacloud\n(ria 653549) and further developed with co-funding by the projects eosc-hub\n(horizon 2020) under grant number 777536, deep-hybrid-datacloud\n(horizon 2020) under grant number 777435, dt-geo (horizon europe) under grant\nnumber 101058129. software quality assurance is performed with the support of\nby the project eosc-synergy (horizon 2020).\nthe authors wish to acknowleadge the support of incd-infraestrutura nacional de\ncomputa\u00e7\u00e3o distribu\u00edda (funded by fct, p2020, lisboa2020, compete and feder\nunder the project number 22153-01/saict/2016).\n\n\n# changelog\n\n## udocker (1.3.12)\n\n* fix units tests, no modifications w.r.t. 1.3.11\n\n## udocker (1.3.11)\n\n* add support for hard link to symbolic link conversion in pn modes\n  as hard links cannot be created by unprivileged users - partially\n  addresses: #388\n* check of availability of network extensions for port mapping and\n  netcoop in pn modes and only use them if supported by the proot\n  engine being invoked.\n* improve image metadata generated by udocker on import - closes: #398\n\n## udocker (1.3.10)\n\n* improved handling of container platform information\n* added support for qemu on pn modes enabling execution of containers\n  with architectures different than the host\n* selection of executable for sn mode now defaults to apptainer and\n  in second place to singularity\n* the new command `manifest inspect` allows display of image manifests\n  therefore enabling access to the catalogue of platforms supported by\n  a given image\n* the new command `tag` enables changing the name of an existing image\n* new option `pull --platform=os/architecture` enables pulling of images\n  of a given architecture possibly different from the host\n* new option `run --platform=os/architecture` enables pull and run of\n  images of a given architecture possibly different from the host\n* new option `import --platform=os/architecture` enables to specify\n  an architecture for the image\n* new option `ps -p` enables list of the architectures of containers\n* new option `images -p` enables list of the architectures of containers\n* build udockertools 1.2.10 and set it as default\n* the udockertools support for fn now includes ubuntu 23:04, fedora 38,\n  alpine 3.17 and 3.18.\n* experimental support for native fn execution on arm64 for fedora 36,\n  fedora 37, fedora 38, centos 7, almalinux 8, almalinux 9 and ubuntu 22,\n  ubuntu 20, ubuntu 18 and similar.\n* experimental support for native fn execution on ppc64le for centos 7,\n  almalinux 8, almalinux 9, ubuntu 22, ubuntu 20, ubuntu 18 and similar.\n* experimental support for runc in arm64 and ppc64le\n* updated version of pn engines for x86, x86_64, arm64.\n\n## udocker (1.3.9)\n\n* add support to access non-config metadata from containers\n* added support for multiplatform manifests and indices solves #392 and #355\n\n## udocker (1.3.8)\n\n* build udockertools 1.2.9 and set it as default\n* add fn support for ubuntu:22\n* remove files to be installed\n* set fn preference to use runc\n\n## udocker (1.3.7)\n\n* remove deprecated unit tests. udocker is the same as version 1.3.6\n\n## udocker (1.3.6)\n\n* re-implement udocker namespace solves #380\n* login fails all the time solves #379\n* ignore image loading if already exists solves #378\n\n## udocker (1.3.5)\n\n* fix python backwards compatibility issues - closes: #374\n* fix incorrectly reported errors by image verification\n* fix image search returning empty results\n* fix issue with logical links in the udocker executable path\n* add check to verify if container name exists before creation\n  or cloning\n* add --force option to create and clone to allow creation\n  of container even if the intended name given by --name exists\n* prevent closing of file descriptors upon engine invocation\n  improves pmi process management interface interoperability\n* fix issues in import and export while using pipes.\n* fix image name parsing where \"library\" component is missing - closes: #359\n\n## udocker (1.3.4)\n\n* fix 2 unit tests\n\n## udocker (1.3.3)\n\n* image list does not truncate long names - solve #349\n* fix conditional warning in verify image\n* fix and improve udocker high level tests\n\n## udocker (1.3.2)\n\n* fix missing f (format) for string\n* fix bugs with dict .items()\n* solving several pylint issues\n* remove use2to3, fix issue #358\n\n## udocker (1.3.1)\n\n* add --entrypoint to run --help\n* set docker hub registry registry-1.docker.io\n* fix repository name in search --list-tags\n* improve tests: udocker_test.sh and udocker_test-run.sh\n* documentation revision and improvements\n* add licenses and licenses notice to documentation\n* add test instructions\n* issues with --allow-root in python 3.8\n* add security policy security.md\n* remove old python 2 tests\n* fix configuration hierarchy, configuration files\n* update documentation: readme, user and install manuals\n* fix sqa and config\n\n## udocker (1.3.0)\n\n* prepare to move the stable code for python 3 and python 2 >= 2.6 to master\n* installation procedure changed since 1.1.x series see the `installation_manual`\n* improve user and installation documentation\n* extract documentation upon installation\n* add codemeta.json, metadata for the software\n* add support for `faccessat2()` in pn and fn execution modes\n* fix support for `newfstatat()` in pn execution modes\n* add fn libraries for fedora 34 and ubuntu 21.04\n* remove broken links in fileutil.remove()\n* update minimum udocker tools tarball to 1.2.8\n* cmd and entrypoint metadata and arguments processing changed to mimic docker\n* improve removal of files and links in install and filebind restore\n* add follow location option to geturl()\n* implement use of `--entrypoint=<cmd>` to force execution of command - closes: #306\n* implement use of `--entrypoint=\"\"` to bypass entrypoint in metadata - closes: #306\n\n## udocker (1.2.9)\n\n* method unshare.unshare os.strerror() takes one argument - closes: #254\n* add unit test for #254\n* method chown udocker.utils.fileutil fileutil - closes: #276\n* several fixes of unit tests and pylint\n* fix confusion between exit code 0 and inferred false\n* dereference on `safe_prefixes`\n* untar exclude dev\n* fix rmi for referenced layers\n* set default for `proot_tmp_dir`\n* sysdir mountpoint not found and set tmpdir\n* update installation instructions\n* improve `oskernel_isgreater()`\n* improve `osinfo()`\n* fix repository login/logout\n* improve keystore logic\n* fix pull /v2\n\n## udocker (1.2.8b2)\n\n* fix rn modes to enable containers execution from readonly dirs\n* documentation centralized installation and readonly setups\n* fix handling of dockerhub repository names in /v2\n* improve documentation and algn with 1.1.8b2\n* add credits\n* fix delete of paths with symlinks - closes: #267, #265\n* fix issues with login credentials - closes: #310\n* fix pull images from docker hub in termux - closes: #307\n* fix issues on running udocker in googlecolab - closes: #286\n* fix execution with pn modes in alternate /tmp - closes: #284\n* add conditional delay-directory-restore to untar layers\n* add exclude of whiteouts on layer untar\n* add --nobanner to udocker run\n\n## udocker (1.2.7)\n\n* major restructuring of the code\n* major restructuring of the unit tests\n* porting to python 3, still supports python 2.7\n* all fixes up to previous 1.1.7 version have been applied\n* added scripts tests udocker: `utils/udocker_test.sh utils/udocker_test-run.sh`\n\n## udocker (1.1.7)\n\n* fix p1 when linux 4.8.0 seccomp is backported, affects newer centos 7 - closes: #282\n* check for file ownership on remove wrongly follows symlinks - closes: #266, #267\n* udocker unexpectedly uses p1 exec mode instead of p2 - closes: #274\n* allow passing of `proot_tmp_dir` environment variable - closes: #284\n\n## udocker (1.1.6)\n\n* complete fix for of elf paths in modes fn for $origin:$origin - closes: #255\n\n## udocker (1.1.5)\n\n* preliminary fix for of elf paths in modes fn for $origin:$origin\n* add fn libraries for ubuntu20, fedora32, fedora33\n* add fn libraries for alpine 3.12, 3.13\n\n## udocker (1.1.4-1)\n\n* fix run --location\n* fix udocker integrated help\n* fix naming of containers\n* improve parsing of image names\n* documentation improvements\n* `os._exit` from unshare.unshare()\n* disable `fakechroot_disallow_env_changes` in f4 mode\n\n## udocker (1.1.4)\n\n* use hub.docker.com as default registry\n* search using v1 and v2 apis\n* implement api /v2/search/repositories\n* adjust search results to screen size\n* list container size with ps -s\n* list container execution modes with ps -m\n* added support for nameat() and statx() in pn and fn modes\n* added fn libraries for ubuntu18, ubuntu19, fedora29, fedora30, fedora31, centos8\n* added fn libraries for alpine 3.8, 3.9, 3.10, 3.11\n* added support for sha512 hashes\n* added support for opaque whiteouts\n* added search --list-tags to available tags for a given repository\n* add cli support for image names in format host/repository:tag\n* support for fake root in sn execution modes via --user=root\n* improve verify of loaded/pulled images\n* improve handling of mountpoints\n* added --containerauth to enable direct use of the container passwd and group\n* added support for file mount bindings in singularity\n* added `udocker_use_proot_executable` env var to select proot location\n* added `udocker_use_runc_executable` env var to select runc location\n* added `udocker_use_singularity_executable` env var to select singularity\n* added `udocker_default_execution_mode` env var to select default execution mode\n* added r2 and r3 execution modes for proot overlay execution in runc\n* added setup --purge for cleanup of mountpoints and files\n* added setup --fixperms to fix container file permissions\n* added run --env-file= to load file with environment variables\n* improve file and directory binding support for singularity and runc\n* add command rename for renaming of containers\n* create processes without shell context\n* safer parsing of config files and removal of directories\n* improve installation\n* improved fix of seccomp accelerated mode for p1 mode\n* added loading and handling of container images in oci format\n* fixes for udocker in arm aarch64\n* fix processing of --dri in sn mode - closes: #241\n* improve handling of container and host authentication - partially addresses: #239\n* fixes to address authentication and redirects in pull - closes: #225, #230\n* added minimal support to load oci images - closes: #111\n* added pn support for newer distributions - closes: #192\n* improve the installation of udockertools - closes: #220, #228\n* read environment variables from file with --env-file= - closes: #212\n* prepare for pypy - closes: #211\n* fixes for verification of container images - closes: #209\n* fix command line processing for \"-\" in argument - closes: #202\n* fix file protections on extraction making files u+r - closes: #202, #206\n* fix comparison of kernel versions having non-integers - closes: #183\n* support for both manifest v2 schema 1 and schema 2 - closes: #218, #225\n* further improved pathname translation in fn modes - closes: #160\n* implement save images in docker format - closes: #74\n* useradd and groupadd not working in containers - closes: #141\n* fix return code when exporting to stdin - closes: #202\n\n## udocker (1.1.3)\n\n* support for nvidia drivers on ubuntu - closes: #162\n* installation improvements - closes: #166\n* fix issue on fn mode symlink conversion - partially addresses: #160\n\n## udocker (1.1.2)\n\n* improve parsing of quotes in the command line - closes: #98\n* fix version command to exit with 0 - closes: #107\n* add kill-on-exit to proot on pn modes\n* improve download of udocker utils\n* handle authentication headers when pulling - closes: #110\n* handle of redirects when pulling\n* fix registries table\n* support search quay.io\n* fix auth header when no standard docker registry is used\n* add registry detection on image name\n* add --version option\n* force python2 as interpreter - closes: #131\n* fix handling of volumes in metadata\n* handle empty metadata\n* fix http proxy functionality - closes: #115\n* ignore --no-trunc and --all in the images command - closes: #108\n* implement verification of layers in manifest\n* add --nvidia to support gpus and related drivers\n* send download messages to stderr\n* enable override of curl executable\n* fix building on centos 6 - closes: #157\n* mitigation for upstream limitation in runc without tty - closes: #132\n* fix detection of executable with symlinks in container - closes: #118\n* updated runc to v1.0.0-rc5\n* experimental support for alpine in fn modes\n* improve pathname translation in fn modes for mounted dirs - partially addresses: #160\n\n## udocker (1.1.1)\n\n* new execution engine using singularity\n* updated documentation with openmpi information and examples\n* additional unit tests\n* redirect messages to stderr\n* improved parsing of quotes in the command line - closes: #87\n* allow override of the home environment variable\n* allow override of libfakechroot.so at the container level\n* automatic selection of libfakechroot.so from container info\n* improve automatic install\n* enable resetting prefix paths in fn modes in remote hosts\n* do not set `af_unix_path` in fn modes when the host /tmp is a volume\n* export containers in both docker and udocker format\n* import containers docker and udocker format\n* load, import and export to/from stdin/stdout\n* clone existing containers\n* support for tcp/ip port remap in execution modes pn\n* fix run with basenames failing - closes: #89\n* allow run as root flag - closes: #91\n\n## udocker (1.1.0)\n\n* support image names prefixed by registry similarly to docker\n* add execution engine selection logic\n* add fr execution engine based on shared library interception\n* add rc execution engine based on rootless namespaces\n* improve proot tmp files cleanup on non ext filesystems\n* improve search returning empty on docker repositories\n* improve runc execution portability\n* add environment variable `udocker_keystore` - closes: #75\n* prevent creation of .udocker when `udocker_keystore` is used - closes: #75\n\n## udocker (1.0.4)\n\n* documentation fixes\n\n## udocker (1.0.3)\n\n* support for import docker containers in newer metadata structure\n* improve the command line parsing\n* improve temporary file handling and removal\n* support for additional execution engines to be provided in the future\n* improved parsing of entrypoint and cmd metadata - closes: #53\n* increase name alias length - closes: #52\n* add support for change dir into volume directories - closes: #51\n* fix deletion of files upon container import - closes: #50\n* fix exporting of host environment variables to the containers - closes: #48\n* change misleading behavior of import tarball from move to copy - closes: #44\n* fix validation of volumes specification - closes: #43\n\n## udocker (1.0.2)\n\n* improve download on repositories that fail authentication on /v2\n* improve run verification of binaries with recursive symbolic links\n* improve accelerated seccomp on kernels >= 4.8.0 - closes: #40\n\n## udocker (1.0.1)\n\n* minor bugfixes\n* executable name changed from udocker.py to udocker\n* added support for login into docker repositories\n* added support for private repositories\n* added support for listing of v2 repositories catalog\n* added checksum verification for sha256 layers\n* improved download handling for v1 and v2 repositories\n* improved installation tarball structure\n* insecure flag fixed\n* address seccomp change introduced on kernels >= 4.8.0\n* utilities for packaging\n* improved verbose levels, messaging and output - closes: #24, #23\n* fully implement support for registry selection --registry parameter - closes: #29\n* provide support for private repositories e.g. gitlab registries - closes: #30\n* provide --insecure command line parameter for ssl requests - closes: #31\n\n## udocker (1.0.0)\n\n* initial version\n",
  "docs_url": null,
  "keywords": "linux containers,hpc on cloud,virtualization",
  "license": "apache software license 2.0",
  "name": "udocker",
  "package_url": "https://pypi.org/project/udocker/",
  "project_url": "https://pypi.org/project/udocker/",
  "project_urls": {
    "Homepage": "https://github.com/indigo-dc/udocker"
  },
  "release_url": "https://pypi.org/project/udocker/1.3.12/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a basic user tool to execute simple docker         containers in batch or interactive systems without root privileges",
  "version": "1.3.12",
  "releases": [],
  "developers": [
    "jorge_gomes",
    "udocker@lip.pt"
  ],
  "kwds": "badge badges badge_software_gold icon badges_150x116",
  "license_kwds": "apache software license 2.0",
  "libtype": "pypi",
  "id": "pypi_udocker",
  "homepage": "https://github.com/indigo-dc/udocker",
  "release_count": 17,
  "dependency_ids": []
}
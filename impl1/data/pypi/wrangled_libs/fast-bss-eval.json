{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: build tools"
  ],
  "description": "fast\\_bss\\_eval\n==============\n\n[![pypi version](https://badge.fury.io/py/fast-bss-eval.svg)](https://badge.fury.io/py/fast-bss-eval)\n[![documentation status](https://readthedocs.org/projects/fast-bss-eval/badge/?version=latest)](https://fast-bss-eval.readthedocs.io/en/latest/?badge=latest)\n[![black](https://github.com/fakufaku/fast_bss_eval/actions/workflows/lint.yml/badge.svg?branch=main)](https://github.com/fakufaku/fast_bss_eval/actions/workflows/lint.yml)\n[![tests](https://github.com/fakufaku/fast_bss_eval/actions/workflows/pythonpackage.yml/badge.svg)](https://github.com/fakufaku/fast_bss_eval/actions/workflows/pythonpackage.yml)\n[![codecov](https://codecov.io/gh/fakufaku/fast_bss_eval/branch/main/graph/badge.svg?token=n0of1r2owg)](https://codecov.io/gh/fakufaku/fast_bss_eval)\n\n> do you have a zillion bss audio files to process and it is taking days ?\n> is your simulation never ending ?\n>\n> fear no more! `fast_bss_eval` is here to help **you!**\n\n`fast_bss_eval` is a fast implementation of the bss\\_eval metrics for the\nevaluation of blind source separation.  our implementation of the bss\\_eval\nmetrics has the following advantages compared to other existing ones.\n\n* seamlessly works with **both** [numpy](https://numpy.org/) arrays and [pytorch](https://pytorch.org) tensors\n* very fast\n* can be even faster by using an iterative solver (add `use_cg_iter=10` option to the function call)\n* differentiable via pytorch\n* can run on gpu via pytorch\n\nauthor\n------\n\n* [robin scheibler](robin.scheibler@linecorp.com)\n\nquick start\n-----------\n\n### install\n\n```bash\n# from pypi\npip install fast-bss-eval\n\n# or from source\ngit clone https://github.com/fakufaku/fast_bss_eval\ncd fast_bss_eval\npip install -e .\n```\n\n### use\n\nassuming you have multichannel signals for the estmated and reference sources\nstored in wav format files names ``my_estimate_file.wav`` and\n``my_reference_file.wav``, respectively, you can quickly evaluate the bss_eval\nmetrics as follows.\n\n\n```python\nfrom scipy.io import wavfile\nimport fast_bss_eval\n\n# open the files, we assume the sampling rate is known\n# to be the same\nfs, ref = wavfile.read(\"my_reference_file.wav\")\n_, est = wavfile.read(\"my_estimate_file.wav\")\n\n# compute the metrics\nsdr, sir, sar, perm = fast_bss_eval.bss_eval_sources(ref.t, est.t)\n```\n\nbenchmark\n---------\n\nthis package is significantly faster than other packages that also allow\nto compute bss\\_eval metrics such as [mir\\_eval](https://github.com/craffel/mir_eval) or [sigsep/bsseval](https://github.com/sigsep/bsseval).\nwe did a benchmark using numpy/torch, single/double precision floating point\narithmetic (fp32/fp64), and using either gaussian elimination or a [conjugate\ngradient descent](https://en.wikipedia.org/wiki/conjugate_gradient_method)\n(solve/cgd10).\n\n<img src=\"./docs/figures/channels_vs_runtime.png\">\n\n\ncitation\n--------\n\nif you use this package in your own research, please cite [our paper](https://arxiv.org/abs/2110.06440) describing it.\n\n```bibtex\n@misc{scheibler_sdr_2021,\n  title={sdr --- medium rare with fast computations},\n  author={robin scheibler},\n  year={2021},\n  eprint={2110.06440},\n  archiveprefix={arxiv},\n  primaryclass={eess.as}\n}\n```\n\n\nlicense\n-------\n\n2021 (c) robin scheibler, line corporation\n\nall of this code is released under [mit license](https://opensource.org/licenses/mit) with the exception of `fast_bss_eval/torch/hungarian.py` which is under [3-clause bsd license](https://opensource.org/licenses/bsd-3-clause).",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "fast-bss-eval",
  "package_url": "https://pypi.org/project/fast-bss-eval/",
  "project_url": "https://pypi.org/project/fast-bss-eval/",
  "project_urls": {
    "Bug Reports": "https://github.com/fakufaku/fast_bss_eval/issues",
    "Homepage": "https://github.com/fakufaku/fast_bss_eval",
    "Source": "https://github.com/fakufaku/fast_bss_eval/"
  },
  "release_url": "https://pypi.org/project/fast-bss-eval/0.1.4/",
  "requires_dist": [],
  "requires_python": ">=3.6, <4",
  "summary": "package for fast computation of bss eval metrics for source separation",
  "version": "0.1.4",
  "releases": [],
  "developers": [
    "fakufaku@gmail.com",
    "robin_scheibler"
  ],
  "kwds": "fast_bss_eval bss_eval badge bss_eval_sources bsseval",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_fast_bss_eval",
  "homepage": "https://github.com/fakufaku/fast_bss_eval",
  "release_count": 7,
  "dependency_ids": []
}
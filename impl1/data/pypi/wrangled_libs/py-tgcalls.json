{
  "classifiers": [
    "license :: osi approved :: gnu lesser general public license v3 (lgplv3)",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython"
  ],
  "description": "<p align=\"center\">\n    <a href=\"https://github.com/pytgcalls/pytgcalls\">\n        <img src=\"https://user-images.githubusercontent.com/32808683/111091141-62473b00-8508-11eb-9c05-3e0fd4a21af3.png\" alt=\"pytgcalls logo\" />\n    </a>\n    <br>\n    <b>a simple and elegant client that allows you to make group voice calls quickly and easily.</b>\n    <br>\n    <a href=\"https://github.com/pytgcalls/pytgcalls/tree/master/example\">\n        examples\n    </a>\n    \u2022\n    <a href=\"https://pytgcalls.github.io/\">\n        documentation\n    </a>\n    \u2022\n    <a href=\"https://pypi.org/project/py-tgcalls/\">\n        pypi\n    </a>\n    \u2022\n    <a href=\"https://t.me/pytgcallsnews\">\n        channel\n    </a>\n    \u2022\n    <a href=\"https://t.me/pytgcallschat\">\n        chat\n    </a>\n</p>\n\n\n# pytgcalls\n\n[![pre-commit.ci status][pre-commit.ci-badge]][pre-commit.ci]\n[![pypi](https://img.shields.io/pypi/v/py-tgcalls.svg?style=flat)](https://pypi.org/project/py-tgcalls/)\n[![pypi - python version](https://img.shields.io/pypi/pyversions/py-tgcalls)](https://www.python.org/)\n[![github](https://img.shields.io/github/license/pytgcalls/pytgcalls)](https://github.com/pytgcalls/pytgcalls/blob/master/license)\n![os](https://img.shields.io/badge/platform-linux%20%7c%20wsl2.0%20%7c%20windows%20%7c%20macos-lightgrey)\n[![node version](https://img.shields.io/badge/node-%3e%20%3d%2015.0.0%20-brightgreen)](https://nodejs.org/it/)\n![architectures](https://img.shields.io/badge/architectures-x86__64%20%7c%20arm64v8%20%7c%20win__amd64%20%7c%20darwin__x64-blue)\n[![downloads](https://pepy.tech/badge/py-tgcalls)](https://pepy.tech/project/py-tgcalls)\n\nthis project allows making telegram group call using mtproto and webrtc, this is possible thanks to the power of [ntgcalls] library and [@evgeny-nadymov]\n\n## what are the supported clients?\nthe supported clients for now are pyrogram, telethon and hydrogram, but we accept other clients too, you can open a pull request with the edits\n\n## how to install?\nhere's how to install the pytgcalls lib, the commands are given below:\n\n``` bash\n# with git\npip install git+https://github.com/pytgcalls/pytgcalls -u\n\n# with pypi (recommended)\npip install py-tgcalls -u\n```\n\n## conversion command (video)\nfrom file to raw video\n``` bash\nffmpeg -i {input_file} -f rawvideo -pix_fmt yuv420p -vf scale=640:-1 {output_file}\n```\n\nfrom h264/vp8/vp9 to audio and video\n``` bash\nffmpeg -i {input_file} -f s16le -ac 1 -ar {bitrate} {output_audio_file} -f rawvideo -r {framerate} -pix_fmt yuv420p -vf scale={scaling}:-1 {output_video_file}\n```\n\nfrom youtube video/live-stream to audio and video\n``` bash\nffmpeg -i \"$(youtube-dl -x -g \"{youtube_link}\")\" -f s16le -ac 1 -ar {bitrate} {output_audio_file} -f rawvideo -r {framerate} -pix_fmt yuv420p -vf scale={scaling}:-1 {output_video_file}\n```\n\nfrom youtube live stream to video\n\n> ### important!\n> the max resolution allowed by telegram is of 720p at 30 fps\n> here also listed the scaling format\n> - 360p = 640\n> - 480p = 854\n> - 720p = 1280\n>\n> if you have any problem with green screen or un-synchronized video, it can be one of these problems:\n> - invalid ffmpeg command\n> - the video quality specified to convert is higher than the original video one\n> - invalid pytgcalls video parameters\n> - if you're using fifo, the fifo max buffer size is too low and this cause the lag problem.\n\n## conversion commands\n\nfrom file to raw format\n``` bash\nffmpeg -i {input_file} -f s16le -ac 1 -ar {bitrate} {output_file}\n```\n\nfrom stream link to raw format\n``` bash\nffmpeg -y -i {stream_link} -f s16le -ac 1 -ar {bitrate} {output_file}\n```\n\nfrom youtube video/live-stream to raw format\n``` bash\nffmpeg -i \"$(youtube-dl -x -g \"{youtube_link}\")\" -f s16le -ac 1 -ar {bitrate} {output_file}\n```\n\n## credits\n\nmany thanks to [@evgeny-nadymov] for graciously permitting us to utilize their code from [telegram-react].\nadditionally, we extend our gratitude to [@alemidev] for their invaluable assistance in reconstructing this library,\nand to [@turiog] for implementing ntgcalls within the library.\n\nthis library is based on [tgcallsjs] developed [@andrewlanex] and pyservercall by [@laky-64]\n\n[pre-commit.ci-badge]: https://results.pre-commit.ci/badge/github/pytgcalls/pytgcalls/master.svg\n[pre-commit.ci]: https://results.pre-commit.ci/latest/github/pytgcalls/pytgcalls/master\n[@evgeny-nadymov]: https://github.com/evgeny-nadymov/\n[@andrewlanex]: https://github.com/andrewlanex/\n[telegram-react]: https://github.com/evgeny-nadymov/telegram-react/\n[tgcallsjs]: https://github.com/tgcallsjs/tgcalls\n[pyservercall]: https://github.com/pytgcalls/pyservercall/\n[@laky-64]: https://github.com/laky-64/\n[@alemidev]: https://github.com/alemidev/\n[@turiog]: https://github.com/turiog/\n[ntgcalls]: https://github.com/pytgcalls/ntgcalls\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "lgpl-3.0",
  "name": "py-tgcalls",
  "package_url": "https://pypi.org/project/py-tgcalls/",
  "project_url": "https://pypi.org/project/py-tgcalls/",
  "project_urls": {
    "Homepage": "https://github.com/pytgcalls/pytgcalls"
  },
  "release_url": "https://pypi.org/project/py-tgcalls/1.0.9/",
  "requires_dist": [
    "aiohttp",
    "deprecation",
    "ntgcalls (>=1.0.2)",
    "psutil",
    "screeninfo"
  ],
  "requires_python": ">=3.8",
  "summary": "",
  "version": "1.0.9",
  "releases": [],
  "developers": [
    "iraci.matteo@gmail.com",
    "laky"
  ],
  "kwds": "pytgcallsnews pytgcalls voice pytgcallschat output_audio_file",
  "license_kwds": "lgpl-3.0",
  "libtype": "pypi",
  "id": "pypi_py_tgcalls",
  "homepage": "https://github.com/pytgcalls/pytgcalls",
  "release_count": 26,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_deprecation",
    "pypi_ntgcalls",
    "pypi_psutil",
    "pypi_screeninfo"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mozilla public license 2.0 (mpl 2.0)",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: terminals"
  ],
  "description": ".. start-badges\n\n| |docs| |gh_actions| |codecov|\n| |pypi| |supported-versions| |supported-implementations|\n\n.. |docs| image:: https://img.shields.io/readthedocs/prefixed.svg?style=plastic&logo=read-the-docs\n    :target: https://prefixed.readthedocs.org\n    :alt: documentation status\n\n.. |gh_actions| image:: https://img.shields.io/github/actions/workflow/status/rockhopper-technologies/prefixed/tests.yml?event=push&logo=github-actions&style=plastic\n    :target: https://github.com/rockhopper-technologies/prefixed/actions/workflows/tests.yml\n    :alt: github actions status\n\n.. |travis| image:: https://img.shields.io/travis/com/rockhopper-technologies/prefixed.svg?style=plastic&logo=travis\n    :target: https://travis-ci.com/rockhopper-technologies/prefixed\n    :alt: travis-ci build status\n\n.. |codecov| image:: https://img.shields.io/codecov/c/github/rockhopper-technologies/prefixed.svg?style=plastic&logo=codecov\n    :target: https://codecov.io/gh/rockhopper-technologies/prefixed\n    :alt: coverage status\n\n.. |pypi| image:: https://img.shields.io/pypi/v/prefixed.svg?style=plastic&logo=pypi\n    :alt: pypi package latest release\n    :target: https://pypi.python.org/pypi/prefixed\n\n.. |supported-versions| image:: https://img.shields.io/pypi/pyversions/prefixed.svg?style=plastic&logo=pypi\n    :alt: supported versions\n    :target: https://pypi.python.org/pypi/prefixed\n\n.. |supported-implementations| image:: https://img.shields.io/pypi/implementation/prefixed.svg?style=plastic&logo=pypi\n    :alt: supported implementations\n    :target: https://pypi.python.org/pypi/prefixed\n\n.. end-badges\n\n\noverview\n========\n\nprefixed provides an alternative implementation of the built-in float_ which supports\nformatted output with `si (decimal)`_ and `iec (binary)`_ prefixes.\n\n.. code-block:: python\n\n  >>> from prefixed import float\n\n  >>> f'{float(3250):.2h}'\n  '3.25k'\n\n  >>> '{:.2h}s'.format(float(.00001534))\n  '15.34\u03bcs'\n\n  >>> '{:.2k}b'.format(float(42467328))\n  '40.50mib'\n\n  >>> f'{float(2048):.2m}b'\n  '2.00kb'\n\nbecause `prefixed.float`_ inherits from the built-in float_, it behaves\nexactly the same in most cases.\n\nwhen a math operation is performed with another real number type\n(float_, int_), the result will be a `prefixed.float`_ instance.\n\n\npresentation types\n^^^^^^^^^^^^^^^^^^\n\nadditional presentation types ``'h'``, ``'h'``, ``'k'``, ``'k'``,\n``'m'``, and ``'m'`` are supported for f-strings and `format()`_.\n\n+---------+-------------------------------------------------------------------+\n| type    | meaning                                                           |\n+=========+===================================================================+\n| ``'h'`` | si format. outputs the number with closest divisible si prefix.   |\n|         | (k, m, g, ...)                                                    |\n+---------+-------------------------------------------------------------------+\n| ``'h'`` | same as ``'h'`` with precision indicating significant digits.     |\n+---------+-------------------------------------------------------------------+\n| ``'k'`` | iec format. outputs the number with closest divisible iec prefix. |\n|         | (ki, mi, gi, ...)                                                 |\n+---------+-------------------------------------------------------------------+\n| ``'k'`` | same as ``'k'`` with precision indicating significant digits.     |\n+---------+-------------------------------------------------------------------+\n| ``'m'`` | short iec format. same as ``'k'`` but only a single character.    |\n|         | (k, m, g, ...)                                                    |\n+---------+-------------------------------------------------------------------+\n| ``'m'`` | same as ``'m'`` with precision indicating significant digits.     |\n+---------+-------------------------------------------------------------------+\n|         |                                                                   |\n+---------+-------------------------------------------------------------------+\n| ``'j'`` | alias for ``'k'`` - deprecated                                    |\n+---------+-------------------------------------------------------------------+\n| ``'j'`` | alias for ``'m'`` - deprecated                                    |\n+---------+-------------------------------------------------------------------+\n\n\nstring initialization\n^^^^^^^^^^^^^^^^^^^^^\n\nwhen initializing from strings, si and iec prefixes are honored\n\n.. code-block:: python\n\n    >>> float('2k')\n    float(2000.0)\n\n    >>> float('2ki')\n    float(2048.0)\n\n\nadditional flags\n^^^^^^^^^^^^^^^^\n\nan additional format flag '!' is available which adds a space before the prefix\n\n.. code-block:: python\n\n  >>> f'{float(3250):!.2h}'\n  '3.25 k'\n\n\nsignificant digits\n^^^^^^^^^^^^^^^^^^\n\nwhen the ``'h'``, ``'k``, or ``'m'`` presentation types are used, precision is treated as\nthe number of `significant digits`_ to include. standard rounding will occur for the final digit.\n\n.. code-block:: python\n\n  >>> f'{float(1246):.3h}'\n  '1.246k'\n\n  >>> f'{float(1246):.3h}'\n  '1.25k'\n\nby default, trailing zeros are removed.\n\n.. code-block:: python\n\n  >>> f'{float(1000):.3h}'\n  '1k'\n\nto preserve trailing zeros, include the ``'#'`` flag.\n\n.. code-block:: python\n\n  >>> f'{float(1000):#.3h}'\n  '1.00k'\n\n\nadjustable thresholds\n^^^^^^^^^^^^^^^^^^^^^\n\nan additional field, margin, can be specified which lowers or raises the threshold for\nfor each prefix by the given percentage.\nmargin is specified before precision with the syntax  ``%[-]digit+``.\n\n.. code-block:: python\n\n    >>> f'{float(950):.2h}'\n    '950.00'\n\n    >>> f'{float(950):%-5.2h}'\n    '0.95k'\n\n    >>> f'{float(1000):%5.2h}'\n    '1000.00'\n\n    >>> f'{float(1050):%5.2h}'\n    '1.05k'\n\n\n.. _si (decimal): https://en.wikipedia.org/wiki/metric_prefix\n.. _iec (binary): https://en.wikipedia.org/wiki/binary_prefix\n.. _signifigant digits: https://en.wikipedia.org/wiki/significant_figures\n\n\nsupported prefixes\n==================\n\nsi (decimal) prefixes\n^^^^^^^^^^^^^^^^^^^^^\n\n+--------+--------+----------+\n| prefix | name   |   base   |\n+========+========+==========+\n|   q    | quetta | |10^30|  |\n+--------+--------+----------+\n|   r    | ronna  | |10^27|  |\n+--------+--------+----------+\n|   y    | yotta  | |10^24|  |\n+--------+--------+----------+\n|   z    | zetta  | |10^21|  |\n+--------+--------+----------+\n|   e    | exa    | |10^18|  |\n+--------+--------+----------+\n|   p    | peta   | |10^15|  |\n+--------+--------+----------+\n|   t    | tera   | |10^12|  |\n+--------+--------+----------+\n|   g    | giga   | |10^9|   |\n+--------+--------+----------+\n|   m    | mega   | |10^6|   |\n+--------+--------+----------+\n|   k    | kilo   | |10^3|   |\n+--------+--------+----------+\n|   m    | milli  | |10^-3|  |\n+--------+--------+----------+\n|   \u03bc    | micro  | |10^-6|  |\n+--------+--------+----------+\n|   n    | nano   | |10^-9|  |\n+--------+--------+----------+\n|   p    | pico   | |10^-12| |\n+--------+--------+----------+\n|   f    | femto  | |10^-15| |\n+--------+--------+----------+\n|   a    | atto   | |10^-18| |\n+--------+--------+----------+\n|   z    | zepto  | |10^-21| |\n+--------+--------+----------+\n|   y    | yocto  | |10^-24| |\n+--------+--------+----------+\n|   r    | ronto  | |10^-27| |\n+--------+--------+----------+\n|   q    | quecto | |10^-30| |\n+--------+--------+----------+\n\niec (binary) prefixes\n^^^^^^^^^^^^^^^^^^^^^\n\n+--------+------+--------+\n| prefix | name |  base  |\n+========+======+========+\n|   y    | yobi | |2^80| |\n+--------+------+--------+\n|   z    | zebi | |2^70| |\n+--------+------+--------+\n|   e    | exbi | |2^60| |\n+--------+------+--------+\n|   p    | pedi | |2^50| |\n+--------+------+--------+\n|   t    | tebi | |2^40| |\n+--------+------+--------+\n|   g    | gibi | |2^30| |\n+--------+------+--------+\n|   m    | mebi | |2^20| |\n+--------+------+--------+\n|   k    | kibi | |2^10| |\n+--------+------+--------+\n\n.. _si (decimal): https://en.wikipedia.org/wiki/metric_prefix\n.. _iec (binary): https://en.wikipedia.org/wiki/binary_prefix\n.. _float: https://docs.python.org/3/library/functions.html#float\n.. _int: https://docs.python.org/3/library/functions.html#int\n.. _prefixed.float: https://prefixed.readthedocs.io/en/stable/api.html#prefixed.float\n.. _format(): https://docs.python.org/3/library/functions.html#format\n\n.. |10^30| replace:: 10\\ :sup:`30`\\\n.. |10^27| replace:: 10\\ :sup:`27`\\\n.. |10^24| replace:: 10\\ :sup:`24`\\\n.. |10^21| replace:: 10\\ :sup:`21`\\\n.. |10^18| replace:: 10\\ :sup:`18`\\\n.. |10^15| replace:: 10\\ :sup:`15`\\\n.. |10^12| replace:: 10\\ :sup:`12`\\\n.. |10^9| replace:: 10\\ :sup:`9`\\\n.. |10^6| replace:: 10\\ :sup:`6`\\\n.. |10^3| replace:: 10\\ :sup:`3`\\\n.. |10^-3| replace:: 10\\ :sup:`-3`\\\n.. |10^-6| replace:: 10\\ :sup:`-6`\\\n.. |10^-9| replace:: 10\\ :sup:`-9`\\\n.. |10^-12| replace:: 10\\ :sup:`-12`\\\n.. |10^-15| replace:: 10\\ :sup:`-15`\\\n.. |10^-18| replace:: 10\\ :sup:`-18`\\\n.. |10^-21| replace:: 10\\ :sup:`-21`\\\n.. |10^-24| replace:: 10\\ :sup:`-24`\\\n.. |10^-27| replace:: 10\\ :sup:`-27`\\\n.. |10^-30| replace:: 10\\ :sup:`-30`\\\n\n.. |2^80| replace:: 2\\ :sup:`80`\\\n.. |2^70| replace:: 2\\ :sup:`70`\\\n.. |2^60| replace:: 2\\ :sup:`60`\\\n.. |2^50| replace:: 2\\ :sup:`50`\\\n.. |2^40| replace:: 2\\ :sup:`40`\\\n.. |2^30| replace:: 2\\ :sup:`30`\\\n.. |2^20| replace:: 2\\ :sup:`20`\\\n.. |2^10| replace:: 2\\ :sup:`10`\\\n",
  "docs_url": null,
  "keywords": "si iec prefix nist",
  "license": "mplv2.0",
  "name": "prefixed",
  "package_url": "https://pypi.org/project/prefixed/",
  "project_url": "https://pypi.org/project/prefixed/",
  "project_urls": {
    "Documentation": "https://prefixed.readthedocs.io",
    "Homepage": "https://github.com/Rockhopper-Technologies/prefixed"
  },
  "release_url": "https://pypi.org/project/prefixed/0.7.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "prefixed alternative numeric library",
  "version": "0.7.0",
  "releases": [],
  "developers": [
    "avram_lubkin",
    "avylove@rockhopper.net"
  ],
  "kwds": "_iec gh_actions documentation iec prefixes",
  "license_kwds": "mplv2.0",
  "libtype": "pypi",
  "id": "pypi_prefixed",
  "homepage": "https://github.com/rockhopper-technologies/prefixed",
  "release_count": 14,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: documentation",
    "topic :: software development :: documentation",
    "topic :: text processing :: markup :: markdown",
    "typing :: typed"
  ],
  "description": "# mkdocstrings-crystal\n\n**[crystal][] language doc generator for [mkdocs][], via [mkdocstrings][]**\n\n[![pypi](https://img.shields.io/pypi/v/mkdocstrings-crystal)](https://pypi.org/project/mkdocstrings-crystal/)\n[![github](https://img.shields.io/github/license/oprypin/mkdocstrings-crystal)](https://github.com/mkdocstrings/crystal/blob/master/license.md)\n[![github workflow status](https://img.shields.io/github/actions/workflow/status/oprypin/mkdocstrings-crystal/ci.yml.svg)](https://github.com/mkdocstrings/crystal/actions?query=event%3apush+branch%3amaster)\n\n## introduction\n\n*mkdocstrings-crystal* allows you to insert api documentation (generated from [crystal][]'s source code and doc comments) as part of any page on a [mkdocs][] site.\n\n[see it in action][showcase].\n\nto install it, run (possibly in a [virtualenv][]):\n\n```shell\npip install mkdocstrings-crystal\n```\n\n**continue to the [documentation site][].**\n\n## usage\n\nwith [mkdocs][], add/merge this base config as your _mkdocs.yml_:\n\n```yaml\nsite_name: my project\n\ntheme:\n  name: material\n\nplugins:\n  - search\n  - mkdocstrings:\n      default_handler: crystal\n\nmarkdown_extensions:\n  - pymdownx.highlight\n  - deduplicate-toc\n```\n\nthen, in any `docs/**/*.md` file, you can **mention a crystal identifier alone on a line, after `:::`**:\n\n```md\n::: myclass\n\n::: other::class#some_method\n\n::: foo::constant\n```\n\n-- and in the output this will be replaced with generated api documentation for it, much like crystal's own doc generator does.\n\nthis, of course, happens as part of a normal mkdocs build process:\n\n```shell\nmkdocs build  # generate from docs/ into site/\nmkdocs serve  # live preview\n```\n\n**continue to the [documentation site][].**\n\n\n[crystal]: https://crystal-lang.org/\n[mkdocs]: https://www.mkdocs.org/\n[mkdocstrings]: https://mkdocstrings.github.io/\n[virtualenv]: https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/#creating-a-virtual-environment\n[documentation site]: https://mkdocstrings.github.io/crystal/\n[showcase]: https://mkdocstrings.github.io/crystal/showcase.html\n",
  "docs_url": null,
  "keywords": "crystal,mkdocs,mkdocs-plugin,mkdocstrings",
  "license": "",
  "name": "mkdocstrings-crystal",
  "package_url": "https://pypi.org/project/mkdocstrings-crystal/",
  "project_url": "https://pypi.org/project/mkdocstrings-crystal/",
  "project_urls": {
    "Documentation": "https://mkdocstrings.github.io/crystal/",
    "History": "https://github.com/mkdocstrings/crystal/releases",
    "Issues": "https://github.com/mkdocstrings/crystal/issues",
    "Source": "https://github.com/mkdocstrings/crystal"
  },
  "release_url": "https://pypi.org/project/mkdocstrings-crystal/0.3.7/",
  "requires_dist": [
    "jinja2>=2.11.2",
    "markdown-callouts>=0.1.0",
    "markupsafe>=1.1.1",
    "mkdocs-autorefs>=0.3.1",
    "mkdocstrings>=0.19.0"
  ],
  "requires_python": ">=3.8",
  "summary": "crystal language doc generator for mkdocstrings",
  "version": "0.3.7",
  "releases": [],
  "developers": [
    "oleh@pryp.in"
  ],
  "kwds": "mkdocstrings mkdocs _mkdocs crystal markdown_extensions",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_mkdocstrings_crystal",
  "homepage": "",
  "release_count": 12,
  "dependency_ids": [
    "pypi_jinja2",
    "pypi_markdown_callouts",
    "pypi_markupsafe",
    "pypi_mkdocs_autorefs",
    "pypi_mkdocstrings"
  ]
}
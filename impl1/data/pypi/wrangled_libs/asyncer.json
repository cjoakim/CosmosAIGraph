{
  "classifiers": [
    "development status :: 4 - beta",
    "framework :: asyncio",
    "framework :: trio",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "intended audience :: system administrators",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet",
    "typing :: typed"
  ],
  "description": "<p align=\"center\">\n  <a href=\"https://asyncer.tiangolo.com\"><img src=\"https://asyncer.tiangolo.com/img/logo-margin/logo-margin-vector.svg\" alt=\"asyncer\"></a>\n</p>\n<p align=\"center\">\n    <em>asyncer, async and await, focused on developer experience.</em>\n</p>\n<p align=\"center\">\n<a href=\"https://github.com/tiangolo/asyncer/actions?query=workflow%3atest\" target=\"_blank\">\n    <img src=\"https://github.com/tiangolo/asyncer/workflows/test/badge.svg\" alt=\"test\">\n</a>\n<a href=\"https://github.com/tiangolo/asyncer/actions?query=workflow%3apublish\" target=\"_blank\">\n    <img src=\"https://github.com/tiangolo/asyncer/workflows/publish/badge.svg\" alt=\"publish\">\n</a>\n<a href=\"https://coverage-badge.samuelcolvin.workers.dev/redirect/tiangolo/asyncer\" target=\"_blank\">\n    <img src=\"https://coverage-badge.samuelcolvin.workers.dev/tiangolo/asyncer.svg\" alt=\"coverage\">\n<a href=\"https://pypi.org/project/asyncer\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/v/asyncer?color=%2334d058&label=pypi%20package\" alt=\"package version\">\n</a>\n</p>\n\n---\n\n**documentation**: <a href=\"https://asyncer.tiangolo.com\" target=\"_blank\">https://asyncer.tiangolo.com</a>\n\n**source code**: <a href=\"https://github.com/tiangolo/asyncer\" target=\"_blank\">https://github.com/tiangolo/asyncer</a>\n\n---\n\n**asyncer** is a small library built on top of <a href=\"https://anyio.readthedocs.io/en/stable/\" class=\"external-link\" target=\"_blank\">anyio</a>.\n\n**asyncer** has a small number of utility functions that allow working with `async`, `await`, and concurrent code in a more convenient way under my (<a href=\"https://twitter.com/tiangolo\" class=\"external-link\" target=\"_blank\">@tiangolo - sebasti\u00e1n ram\u00edrez</a>) very opinionated and subjective point of view.\n\nthe main goal of **asyncer** is to improve **developer experience** by providing better support for **autocompletion** and **inline errors** in the editor, and **more certainty** that the code is **bug-free** by providing better support for type checking tools like **mypy**.\n\n**asyncer** also tries to improve **convenience** and simplicity when working with **async** code **mixed** with regular <abbr title=\"synchronous code, code that is not async\">**blocking code**</abbr>, allowing to use them together in a simpler way... again, under my very **subjective** point of view.\n\n## \ud83d\udea8 warning\n\nthis small library only exists to be able to use these **utility functions** until (and if) they are integrated into **anyio**.\n\nit will probably take some time for that to happen (or to be decided if it will be included or not).\n\nso i made this to be able to use these ideas right now. \ud83e\udd13\n\n## can i use it?\n\nyes \ud83c\udf89 (but continue reading).\n\nyou can use this and evaluate the **library api design** i'm proposing. it will probably be useful to know if it works and is useful for you (i hope so).\n\nbut still, consider this lab material, expect it to change a bit. \ud83e\uddea\n\nif you use it, **pin the exact asyncer version** for your project, to make sure it all works.\n\nhave **tests** for your project (as you should, anyway). and **upgrade the version** once you know that the new version continues to work correctly.\n\nstill, it's **just 4 functions**, so there's not much to change, if you had to refactor your code to update something it would not be much.\n\nand if you don't want to add `asyncer` as a dependency to your project, you can also just copy the main file and try out those functions, it's quite small (but in that case you won't get updates easily).\n\n## requirements\n\nas **asyncer** is based on **anyio** it will be also installed automatically when you install **asyncer**.\n\n## installation\n\n<div class=\"termy\">\n\n```console\n$ pip install asyncer\n---> 100%\nsuccessfully installed asyncer anyio\n```\n\n</div>\n\n## how to use\n\nyou can read more about each of the use cases and utility functions in **asyncer** in the <a href=\"https://asyncer.tiangolo.com/tutorial/\" class=\"external-link\" target=\"_blank\">tutorial</a>.\n\nas a sneak preview of one of the utilities, you can **call sync code from async code** using `asyncify()`:\n\n```python\nimport time\n\nimport anyio\nfrom asyncer import asyncify\n\n\ndef do_sync_work(name: str):\n    time.sleep(1)\n    return f\"hello, {name}\"\n\n\nasync def main():\n    message = await asyncify(do_sync_work)(name=\"world\")\n    print(message)\n\n\nanyio.run(main)\n```\n\n**asyncer**'s `asyncify()` will use anyio underneath to do *the smart thing*, avoid blocking the main **async** event loop, and run the **sync**/blocking function in a **worker thread**.\n\n### editor support\n\neverything in **asyncer** is designed to get the best **developer experience** possible, with the best editor support.\n\n* **autocompletion** for function arguments:\n\n<img class=\"shadow\" src=\"https://asyncer.tiangolo.com/img/tutorial/asyncify/image01.png\">\n\n* **autocompletion** for return values:\n\n<img class=\"shadow\" src=\"https://asyncer.tiangolo.com/img/tutorial/asyncify/image02.png\">\n\n* **inline errors** in editor:\n\n<img class=\"shadow\" src=\"https://asyncer.tiangolo.com/img/tutorial/soonify/image02.png\">\n\n* support for tools like **mypy**, that can help you verify that your **code is correct**, and prevent many bugs.\n\n## license\n\nthis project is licensed under the terms of the [mit license](https://github.com/tiangolo/asyncer/blob/main/license).\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "asyncer",
  "package_url": "https://pypi.org/project/asyncer/",
  "project_url": "https://pypi.org/project/asyncer/",
  "project_urls": {
    "Documentation": "https://asyncer.tiangolo.com",
    "Homepage": "https://github.com/tiangolo/asyncer",
    "Repository": "https://github.com/tiangolo/asyncer"
  },
  "release_url": "https://pypi.org/project/asyncer/0.0.2/",
  "requires_dist": [
    "anyio (>=3.4.0,<4.0.0)"
  ],
  "requires_python": ">=3.6.2,<4.0.0",
  "summary": "asyncer, async and await, focused on developer experience.",
  "version": "0.0.2",
  "releases": [],
  "developers": [
    "tiangolo@gmail.com"
  ],
  "kwds": "asyncer async await logo asyncify",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_asyncer",
  "homepage": "https://github.com/tiangolo/asyncer",
  "release_count": 2,
  "dependency_ids": [
    "pypi_anyio"
  ]
}
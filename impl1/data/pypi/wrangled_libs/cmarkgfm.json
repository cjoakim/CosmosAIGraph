{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: build tools"
  ],
  "description": "cmarkgfm - python bindings to github's cmark\n============================================\n\nminimalist python bindings to github's fork of cmark.\n\ninstallation\n------------\n\nthis package is published on pypi as `cmarkgfm <https://pypi.org/project/cmarkgfm/>`__\nand can be installed with `pip` or `pipenv`::\n\n    pip install --user cmarkgfm\n    pipenv install cmarkgfm\n\nwheels are provided for macos, linux, and windows for python 3.6, 3.7, 3.8, 3.9, 3.10 and 3.11.\n\n\nusage\n-----\n\nhigh-level usage is really straightforward. to render normal commonmark\nmarkdown:\n\n.. code-block:: python\n\n    import cmarkgfm\n\n    html = cmarkgfm.markdown_to_html(markdown_text)\n\n\nto render github-flavored markdown:\n\n.. code-block:: python\n\n    import cmarkgfm\n\n    html = cmarkgfm.github_flavored_markdown_to_html(markdown_text)\n\n\nadvanced usage\n--------------\n\n**options**\n\nboth rendering methods ``markdown_to_html`` and ``github_flavored_markdown_to_html`` have\nan optional ``options`` argument that can be used to activate `options of cmark <https://manpages.debian.org/stretch/cmark/cmark.1.en.html>`_.\nfor example:\n\n.. code-block:: python\n\n    import cmarkgfm\n    from cmarkgfm.cmark import options as cmarkgfmoptions\n\n    options = (\n        cmarkgfmoptions.cmark_opt_github_pre_lang\n        | cmarkgfmoptions.cmark_opt_smart\n    )\n    html = cmarkgfm.markdown_to_html(markdown_text, options)\n\nthe options are:\n\n+-----------------------------------------+----------------------------------------------------+\n|                  option                 |                       effect                       |\n+=========================================+====================================================+\n| cmark_opt_unsafe (>=0.5.0)              | allows rendering unsafe html and links.            |\n+-----------------------------------------+----------------------------------------------------+\n| cmark_opt_safe (<0.5.0)                 | prevents rendering unsafe html and links.          |\n+-----------------------------------------+----------------------------------------------------+\n| cmark_opt_smart                         | render curly quotes, en/em-dashes, ellipses        |\n+-----------------------------------------+----------------------------------------------------+\n| cmark_opt_normalize                     | consolidate adjacent text nodes.                   |\n+-----------------------------------------+----------------------------------------------------+\n| cmark_opt_hardbreaks                    | renders line breaks within paragraphs as ``<br>``  |\n+-----------------------------------------+----------------------------------------------------+\n| cmark_opt_nobreaks                      | render soft line breaks as spaces.                 |\n+-----------------------------------------+----------------------------------------------------+\n| cmark_opt_sourcepos                     | adds ``data-sourcepos`` to html tags indicating    |\n|                                         | the corresponding line/col ranges in the input     |\n+-----------------------------------------+----------------------------------------------------+\n| cmark_opt_footnotes                     | parse footnotes.                                   |\n+-----------------------------------------+----------------------------------------------------+\n| cmark_opt_validate_utf8                 | validate utf\\-8 in the input before parsing,       |\n|                                         | replacing illegal sequenceswith the replacement    |\n|                                         | character u+fffd.                                  |\n+-----------------------------------------+----------------------------------------------------+\n| cmark_opt_github_pre_lang               | use github\\-style  tags for code blocks.           |\n+-----------------------------------------+----------------------------------------------------+\n| cmark_opt_liberal_html_tag              | be liberal in interpreting inline html tags.       |\n+-----------------------------------------+----------------------------------------------------+\n| cmark_opt_strikethrough_double_tilde    | only parse strikethroughs if surrounded by exactly |\n|                                         | 2 tildes. gives some compatibility with redcarpet. |\n+-----------------------------------------+----------------------------------------------------+\n| cmark_opt_table_prefer_style_attributes | use style attributes to align table cells instead  |\n|                                         | of align attributes.                               |\n+-----------------------------------------+----------------------------------------------------+\n\n\n**unsafe rendering**\n\nsince version 0.5.0, the default behavior is safe. in earlier versions, the default behavior is unsafe, as described below. to render potentially unsafe html since 0.5.0 pass the ``cmark_opt_unsafe`` option.\n\ncommonmark can render potentially unsafe html, including raw html, raw javascript, and potentially unsafe links (including links that run scripts). although ``github_flavored_markdown_to_html`` prevents some raw html tags (including ``script``) from being rendered, it does not block unsafe urls in links.\n\ntherefore it is recommend to call the rendering method with the safe option turned on. the safe option does not render raw html or potentially dangerous urls. (raw html is replaced by a placeholder comment; potentially dangerous urls are replaced by empty strings.) dangerous urls are those that begin with ``javascript:``, ``vbscript:``, ``file:``, or ``data:`` (except for ``image/png``, ``image/gif``, ``image/jpeg``, or ``image/webp`` mime types) to do this, use:\n\n.. code-block:: python\n\n    # cmarkgfm<0.5.0\n    import cmarkgfm\n    from cmarkgfm.cmark import options as cmarkgfmoptions\n\n    html = cmarkgfm.markdown_to_html(markdown_text, options=cmarkgfmoptions.cmark_opt_safe)\n    # or\n    html = cmarkgfm.github_flavored_markdown_to_html(markdown_text, options=cmarkgfmoptions.cmark_opt_safe)\n\nif you trust the markdown text to not include any unsafe tags and links, then you may skip this.\n\n\ncontributing\n------------\n\npull requests are welcome. :)\n\n\nlicense\n-------\n\nthis project is under the mit license. it includes components under differing\ncopyright under the ``third_party`` directory in this source tree.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "cmarkgfm",
  "package_url": "https://pypi.org/project/cmarkgfm/",
  "project_url": "https://pypi.org/project/cmarkgfm/",
  "project_urls": {
    "Bug Reports": "https://github.com/theacodes/cmarkgfm/issues",
    "Funding": "https://donate.pypi.org",
    "Homepage": "https://github.com/theacodes/cmarkgfm",
    "Source": "https://github.com/theacodes/cmarkgfm"
  },
  "release_url": "https://pypi.org/project/cmarkgfm/2022.10.27/",
  "requires_dist": [
    "cffi (>=1.15.0)"
  ],
  "requires_python": "",
  "summary": "minimal bindings to github's fork of cmark",
  "version": "2022.10.27",
  "releases": [],
  "developers": [
    "me@thea.codes",
    "pypa-dev@googlegroups.com",
    "the_python_packaging_authority"
  ],
  "kwds": "cmark_opt_github_pre_lang cmark cmark_opt_smart cmarkgfm cmark_opt_sourcepos",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_cmarkgfm",
  "homepage": "https://github.com/theacodes/cmarkgfm",
  "release_count": 18,
  "dependency_ids": [
    "pypi_cffi"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "topic :: software development :: build tools"
  ],
  "description": "python-codacy-coverage\n======================\n\ncredits to ryan for creating this! python coverage reporter for codacy https://www.codacy.com\n\n.. image:: https://api.codacy.com/project/badge/grade/3a8cf06a9db94d0ab3d55e0357bc8f9d\n   :target: https://www.codacy.com/app/codacy/python-codacy-coverage\n   :alt: codacy badge\n.. image:: https://api.codacy.com/project/badge/coverage/3a8cf06a9db94d0ab3d55e0357bc8f9d\n   :target: https://www.codacy.com/app/codacy/python-codacy-coverage\n   :alt: codacy badge\n.. image:: https://circleci.com/gh/codacy/python-codacy-coverage.png?style=shield&circle-token=:circle-token\n   :target: https://circleci.com/gh/codacy/python-codacy-coverage\n   :alt: build status\n.. image:: https://badge.fury.io/py/codacy-coverage.svg\n   :target: https://badge.fury.io/py/codacy-coverage\n   :alt: pypi version\n   \nsetup\n-----\n\ncodacy assumes that coverage is previously configured for your project.\n\nto generate the required coverage xml file, calculate coverage for your project as normal, by running:\n\n``coverage xml``\n\ninstall codacy-coverage\n~~~~~~~~~~~~~~~~~~~~~~~\n\nyou can install the coverage reporter by running:\n\n``pip install codacy-coverage``\n\nupdating codacy\n---------------\n\nto update codacy, you will need your project api token. you can create the token in `project -> settings -> integrations -> add integration -> project api`\n\nthen set it in your terminal, replacing %project_token% with your own token:\n\n``export codacy_project_token=%project_token%``\n\n**enterprise only** (skip this step if you are using https://www.codacy.com)\n\nto send coverage in the enterprise version you should:\n\n``export codacy_api_base_url=<codacy_instance_url>:16006``\n\n**upload coverage**\n\nnext, simply run the codacy reporter. it will find the current commit and send all details to your project dashboard:\n\n``python-codacy-coverage -r coverage.xml``\n\nnote: you should keep your api token well **protected**, as it grants owner permissions to your projects.\n\ntroubleshoot\n---------------\n\nif you are using any ci that does not have .git information, you can specify the commit with -c and the clone directory with -d. for example if you are using appveyor you can:\n\n``python-codacy-coverage -c $appveyor_repo_commit -d $appveyor_build_folder -r coverage.xml``\n",
  "docs_url": null,
  "keywords": "development coverage",
  "license": "mit",
  "name": "codacy-coverage",
  "package_url": "https://pypi.org/project/codacy-coverage/",
  "project_url": "https://pypi.org/project/codacy-coverage/",
  "project_urls": {
    "Homepage": "https://github.com/codacy/python-codacy-coverage"
  },
  "release_url": "https://pypi.org/project/codacy-coverage/1.3.11/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "codacy coverage reporter for python",
  "version": "1.3.11",
  "releases": [],
  "developers": [
    "codacy",
    "team@codacy.com"
  ],
  "kwds": "coverage codacy_project_token shield badge codacy_api_base_url",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_codacy_coverage",
  "homepage": "https://github.com/codacy/python-codacy-coverage",
  "release_count": 25,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: web environment",
    "framework :: django",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.2",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": ".. image:: http://media.charlesleifer.com/blog/photos/micawber-logo-0.png\n\na small library for extracting rich content from urls.\n\n\nwhat does it do?\n----------------\n\nmicawber supplies a few methods for retrieving rich metadata about a variety of\nlinks, such as links to youtube videos.  micawber also provides functions for\nparsing blocks of text and html and replacing links to videos with rich embedded\ncontent.\n\nexamples\n--------\n\nhere is a quick example:\n\n.. code-block:: python\n\n    import micawber\n\n    # load up rules for some default providers, such as youtube and flickr\n    providers = micawber.bootstrap_basic()\n\n    providers.request('http://www.youtube.com/watch?v=54xhduohuzu')\n\n    # returns the following dictionary:\n    {\n        'author_name': 'pascalbrax',\n        'author_url': u'http://www.youtube.com/user/pascalbrax'\n        'height': 344,\n        'html': u'<iframe width=\"459\" height=\"344\" src=\"http://www.youtube.com/embed/54xhduohuzu?fs=1&feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>',\n        'provider_name': 'youtube',\n        'provider_url': 'http://www.youtube.com/',\n        'title': 'future crew - second reality demo - hd',\n        'type': u'video',\n        'thumbnail_height': 360,\n        'thumbnail_url': u'http://i2.ytimg.com/vi/54xhduohuzu/hqdefault.jpg',\n        'thumbnail_width': 480,\n        'url': 'http://www.youtube.com/watch?v=54xhduohuzu',\n        'width': 459,\n        'version': '1.0',\n    }\n\n    providers.parse_text('this is a test:\\nhttp://www.youtube.com/watch?v=54xhduohuzu')\n\n    # returns the following string:\n    this is a test:\n    <iframe width=\"459\" height=\"344\" src=\"http://www.youtube.com/embed/54xhduohuzu?fs=1&feature=oembed\" frameborder=\"0\" allowfullscreen></iframe>\n\n    providers.parse_html('<p>http://www.youtube.com/watch?v=54xhduohuzu</p>')\n\n    # returns the following html:\n    <p><iframe width=\"459\" height=\"344\" src=\"http://www.youtube.com/embed/54xhduohuzu?fs=1&amp;feature=oembed\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "micawber",
  "package_url": "https://pypi.org/project/micawber/",
  "project_url": "https://pypi.org/project/micawber/",
  "project_urls": {
    "Homepage": "http://github.com/coleifer/micawber/"
  },
  "release_url": "https://pypi.org/project/micawber/0.5.5/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "a small library for extracting rich content from urls",
  "version": "0.5.5",
  "releases": [],
  "developers": [
    "charles_leifer",
    "coleifer@gmail.com"
  ],
  "kwds": "thumbnail_url parse_html urls http extracting",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_micawber",
  "homepage": "http://github.com/coleifer/micawber/",
  "release_count": 25,
  "dependency_ids": []
}
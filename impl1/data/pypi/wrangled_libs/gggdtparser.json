{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# gggdtparser\r\n\r\n\u901a\u7528\u65f6\u95f4\u89e3\u6790\u5668(general general general datetime parser)\r\n\uff0c\u662f\u57fa\u4e8epython\u7f16\u5199\u7684\u5b57\u7b26\u4e32\u65f6\u95f4\u62bd\u53d6\u89e3\u6790\u5de5\u5177,\u7ecf\u8fc7\u4e86\u4f17\u591a\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5177\u6709\u901a\u7528\u3001\u9ad8\u6548\u3001\u51c6\u786e\u7684\u89e3\u6790\u80fd\u529b\u3002\r\n\r\n## \u9879\u76ee\u80cc\u666f\r\n\r\n1. \u5728\u65e5\u5e38\u5f00\u53d1\u4e2d\uff0c\u7279\u522b\u662f\u722c\u866b\u91c7\u96c6\u65f6\uff0c\u6765\u81ea\u5404\u79cd\u8bed\u8a00\u3001\u5404\u79cd\u683c\u5f0f\u3001\u8bed\u4e49\u5316\u8bdd\u7684\u5b57\u7b26\u4e32\u65f6\u95f4\uff0c\u5bf9\u5176\u89e3\u6790\u975e\u5e38\u590d\u6742\u7e41\u7410\u3002\r\n2. \u901a\u7528\u7684\u5b57\u7b26\u4e32\u89e3\u6790\u9700\u8981\u8003\u8651\u7684\u60c5\u51b5\u5f88\u591a\uff0c\u65e2\u8981\u5c3d\u53ef\u80fd\u591a\u5730\u6ee1\u8db3\u5404\u7c7b\u5b57\u7b26\u4e32\u65f6\u95f4\u683c\u5f0f\uff0c\u8fd8\u9700\u5bf9\u89e3\u6790\u51fa\u7684\u7ed3\u679c\u7684\u51c6\u786e\u6709\u5f88\u9ad8\u8981\u6c42\u3002\r\n3. python\u4e2d\u5404\u7c7b\u89e3\u6790\u5e93\uff0c\u5728\u89e3\u6790\u524d\u7684\u8981\u6c42\u5f88\u9ad8\uff0c\u53ea\u80fd\u89e3\u6790\u65e0\u566a\u58f0\u7684\u5b57\u7b26\u4e32\u65f6\u95f4\uff0c\u6781\u4e3a\u4e0d\u65b9\u4fbf\u3002\r\n\r\n## \u9879\u76ee\u539f\u7406\r\n\r\n1. \u91c7\u7528\u6b63\u5219\u7684\u65b9\u5f0f\u5b8c\u6210\u5bf9\u65f6\u95f4\u7684\u62bd\u53d6\uff0c\u8fdb\u4e00\u6b65\u5bf9\u62bd\u53d6\u5230\u7684\u65f6\u95f4\u8fdb\u884c\u89e3\u6790\uff0c\u5373\u62bd\u53d6\u548c\u89e3\u6790\u4e00\u4f53\uff0c\u7528\u6237\u7ed9\u4e0e\u7684\u65f6\u95f4\u6587\u672c\u53ef\u4ee5\u6709\u5f88\u591a\u975e\u65f6\u95f4\u5185\u5bb9\uff0c\u4f7f\u5f97\u89e3\u6790\u66f4\u52a0\u4fbf\u6377\u3002\r\n2. \u5bf9\u8bed\u4e49\u8bdd\u65f6\u95f4\u8fdb\u884c\u8ba1\u7b97\uff0c\u5bf9\u5176\u4ed6\u8bed\u8a00\u8fdb\u884c\u652f\u6301\u3002\r\n3. \u4f7f\u7528\u6b63\u5219\u89c4\u5219\uff0c\u540e\u7eed\u589e\u52a0\u7279\u6b8a\u65f6\u95f4\u683c\u5f0f\u8f83\u4e3a\u65b9\u4fbf\u3002\r\n\r\n## \u9879\u76ee\u7279\u8272\r\n\r\n1. \u6a21\u7cca\u62bd\u53d6\u89e3\u6790\r\n2. \u89e3\u6790\u901f\u5ea6\u5feb\r\n3. \u652f\u6301\u81ea\u5b9a\u4e49\u89e3\u6790\u89c4\u5219\r\n\r\n## \u4f7f\u7528\u65b9\u6cd5\r\n\r\n### \u5b89\u88c5\r\n\r\n    pip install gggdtparser\r\n\r\n### \u4f7f\u7528\r\n\r\n    import gggdtparser\r\n    parse_dt = gggdtparser.parse(\"\u53d1\u5e03\uff1a2022/02/02 02:02:02\uff0c\u6765\u6e90\uff1axxx\u7f51\")\r\n    print(parse_dt)  # 2022-02-02 02:02:02\r\n\r\n### \u6d4b\u8bd5\r\n\r\n    import datetime\r\n    import gggdtparser\r\n    parse_dt = gggdtparser.parse(\"\u53d1\u5e03\uff1a2022/02/02 02:02:02\uff0c\u6765\u6e90\uff1axxx\u7f51\")\r\n    is_right = gggdtparser.check(parse_dt, datetime.datetime(year=2022, month=2, day=2, hour=2, minute=2, second=2))\r\n    print(is_right)  # true\r\n\r\n## \u4f7f\u7528\u6848\u4f8b\r\n\r\n### \u8be6\u7ec6\u6848\u4f8b\r\n\r\n1. \u53c2\u8003dtformat.md\u4e2d\u652f\u6301\u7684\u683c\u5f0f\u3002\r\n2. \u53c2\u8003test.py\u4e2d\u7684\u6d4b\u8bd5\u6848\u4f8b\u3002\r\n\r\n### \u7279\u8272\u6848\u4f8b\r\n\r\n1. \u8bed\u4e49\u65f6\u95f4\u7684\u652f\u6301\r\n\r\n```\r\n   il y a 26 minutes\r\n   il y a 1 heure\r\n   publi\u00e9 aujourd\u2019hui \u00e0 10h34, modifi\u00e9 \u00e0 10h39\r\n   23\u5206\u9418\u524d\r\n   ......      \r\n\r\n```\r\n\r\n2. \u5141\u8bb8\u566a\u97f3\r\n\r\n```\r\n   \u53d1\u5e03\u4e8e\uff1a2023/2/20\r\n   hoje macau - 4 abr 2023 \r\n   2023\u5e7404\u670810\u65e5 07:46\u3000\u6765\u6e90\uff1a\u65b0\u95fb\u7f51\r\n   ......\r\n```\r\n\r\n3. \u652f\u6301\u591a\u79cd\u8bed\u8a00\r\n\r\n```\r\n   31 \u043c\u0430\u0440\u0442 2023  # \u4fc4\u8bed\r\n   31 de marzo de 2023  # \u897f\u73ed\u7259\u8bed\r\n   27 fev 2023  # \u5361\u62dc\u5c14\u8bed\r\n   ......\r\n```\r\n\r\n4. \u6307\u5b9aformats\u89e3\u6790\r\n\r\n```python\r\nimport gggdtparser\r\n\r\ndt = gggdtparser.parse(\"2023-02-20\", format_list=[\"%y-%m-%d\"])\r\nprint(dt)\r\n```\r\n\r\n5. \u6307\u5b9a\u6b63\u5219\u89e3\u6790\r\n\r\n\u6b63\u5219\u4f7f\u7528\u6709\u540d\u5206\u7ec4\u5f62\u5f0f\uff0c\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a\r\n\r\n| \u5173\u952e\u8bcd |     \u542b\u4e49      |            \u793a\u4f8b            |\r\n|:---:|:-----------:|:------------------------:|\r\n|  y  |      \u5e74      |      (?p\\<y>\\d{4})\u5e74       |\r\n|  m  |      \u6708      |     (?p\\<m >\\d{1,2})\u6708      |\r\n|  d  |      \u65e5      |     (?p\\<d>\\d{1,2})\u65e5      |\r\n|  h  |      \u65f6      |     (?p\\<h>\\d{1,2})\u65f6      |\r\n|  m  |      \u5206      |     (?p\\<m>\\d{1,2})\u5206      |\r\n|  s  |      \u79d2      |     (?p\\<s>\\d{1,2})\u79d2      |\r\n| by  |   \u5728...\u5e74\u524d    | (?p\\<by>\\d+)\\s*(\u5e74)\\s*(\u524d)  |\r\n| bm  |   \u5728...\u6708\u524d    | (?p\\<bm>\\d+)\\s*(\u6708)\\s*(\u524d)  |\r\n| bd  |   \u5728...\u65e5\u524d    | (?p\\<bd>\\d+)\\s*(\u5929)\\s*(\u524d)  |\r\n| bh  |   \u5728...\u65f6\u524d    | (?p\\<bh>\\d+)\\s*(\u5c0f\u65f6)\\s*(\u524d) |\r\n| bm  |   \u5728...\u5206\u524d    | (?p\\<bm>\\d+)\\s*(\u5206\u949f)\\s*(\u524d) |\r\n| bs  |   \u5728...\u79d2\u524d    | (?p\\<bs>\\d+)\\s*(\u79d2)\\s*(\u524d)  |\r\n| ba  |   \u5728...\u661f\u671f\u524d   | (?p\\<ba>\\d+)\\s*(\u5468)\\s*(\u524d)  |\r\n| wy  |   \u5728...\u5e74\u5185    | (?p\\<wy>\\d+)\\s*(\u5e74)\\s*(\u5185)  |\r\n| wm  |   \u5728...\u6708\u5185    | (?p\\<wm>\\d+)\\s*(\u6708)\\s*(\u5185) |\r\n| wd  |   \u5728...\u65e5\u5185    | (?p\\<wd>\\d+)\\s*(\u5929)\\s*(\u5185)  |\r\n| wh  |   \u5728...\u65f6\u5185    | (?p\\<wh>\\d+)\\s*(\u5c0f\u65f6)\\s*(\u5185) |\r\n| wm  |   \u5728...\u5206\u5185    | (?p\\<wm>\\d+)\\s*(\u5206\u949f)\\s*(\u5185) |\r\n| ws  |   \u5728...\u79d2\u5185    | (?p\\<ws>\\d+)\\s*(\u79d2)\\s*(\u5185)  |\r\n| wa  |   \u5728...\u661f\u671f\u5185   | (?p\\<wa>\\d+)\\s*(\u5468)\\s*(\u5185)  |\r\n| ay  |   \u5728...\u5e74\u540e    | (?p\\<wy>\\d+)\\s*(\u5e74)\\s*(\u540e)  |\r\n| am  |   \u5728...\u6708\u540e    | (?p\\<wm>\\d+)\\s*(\u6708)\\s*(\u540e) |\r\n| ad  |   \u5728...\u65e5\u540e    | (?p\\<wd>\\d+)\\s*(\u5929)\\s*(\u540e)  |\r\n| ah  |   \u5728...\u65f6\u540e    | (?p\\<wh>\\d+)\\s*(\u5c0f\u65f6)\\s*(\u540e) |\r\n| am  |   \u5728...\u5206\u540e    | (?p\\<wm>\\d+)\\s*(\u5206\u949f)\\s*(\u540e) |\r\n| as  |   \u5728...\u79d2\u540e    | (?p\\<ws>\\d+)\\s*(\u79d2)\\s*(\u540e)  |\r\n| aa  |   \u5728...\u661f\u671f\u540e   | (?p\\<wa>\\d+)\\s*(\u5468)\\s*(\u540e)  |\r\n| sd  | \u4eca\u5929/\u6628\u5929/\u524d\u5929/\u521a\u521a |        (?p\\<sd>\u524d\u5929)        | \r\n| apm |    \u4e0a\u5348\u4e0b\u5348     |       (?p\\<apm>am)        | \r\n\r\n\u793a\u4f8b\u5982\u4e0b\uff1a\r\n\r\n```python\r\nimport gggdtparser\r\n\r\ndt = gggdtparser.parse(\"2023-02-20\",\r\n                       regex_list=[r\"(?p<y>\\d{4})(?p<m>\\d{2})(?p<d>\\d{2})\"])\r\nprint(dt)\r\n```\r\n\r\n6. \u81ea\u5b9a\u4e49\u7ffb\u8bd1\r\n\r\n```python\r\nimport gggdtparser\r\n\r\n\r\ndef translate(s):\r\n    # \u7ffb\u8bd1\r\n    return \"\"\r\n\r\n\r\ndt = gggdtparser.parse(\"xxx\", translate_func=translate)\r\nprint(dt)\r\n\r\n```\r\n\r\n7. \u65f6\u95f4\u8303\u56f4\u89e3\u6790\r\n```python\r\n\r\nimport datetime\r\nfrom gggdtparser import parse_frame\r\n\r\nprint(parse_frame('2022\u5e7410\u67081\u65e5\u81f32023\u5e7410\u67081\u65e5', regex_list=[none, ('(?p<am>\\d+)\\s*(\u4e2a)?\u6708',)], base_datetime=datetime.datetime(year=2023, month=1, day=1)))\r\nprint(parse_frame('10\u4e2a\u6708', regex_list=[none, ('(?p<am>\\d+)\\s*(\u4e2a)?\u6708',)], base_datetime=datetime.datetime(year=2023, month=1, day=1)))\r\n\r\n```\r\n\r\n## \u5f85\u5b8c\u5584\r\n\r\n1. \u517c\u5bb9\u66f4\u591a\u8bed\u8a00\r\n2. \u5bf9\u65f6\u533a\u7684\u89e3\u6790\r\n\r\n## \u5173\u4e8e\u4f5c\u8005\r\n\r\n1. \u90ae\u7bb1\uff1a1194542196@qq.com\r\n2. \u5fae\u4fe1\uff1ahu1194542196\r\n3. \u76ee\u524d\u5bf9\u5e38\u89c1\u7684\u65f6\u95f4\u683c\u5f0f\u89e3\u6790\u652f\u6301\u6bd4\u8f83\u5168\uff0c\u4f46\u662f\u4e00\u4e9b\u7279\u6b8a\u7684\u65f6\u95f4\u683c\u5f0f\u548c\u5176\u4ed6\u8bed\u8a00\u7684\u652f\u6301\u4e0d\u591f\u5b8c\u5584\uff0c\u5982\u679c\u9047\u5230\u89e3\u6790bug\r\n   \u6216\u4e0d\u80fd\u89e3\u6790\u7684\u65f6\u95f4\u683c\u5f0f\uff0c\u53ef\u4ee5\u79c1\u4fe1\u4f5c\u8005\uff0c\u4f60\u4eec\u7684\u63d0\u4f9b\u8d8a\u591a\uff0c\u672c\u5e93\u624d\u80fd\u66f4\u5b8c\u5584\u3002\r\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "gggdtparser",
  "package_url": "https://pypi.org/project/gggdtparser/",
  "project_url": "https://pypi.org/project/gggdtparser/",
  "project_urls": {
    "Bug Tracker": "https://github.com/kusen-alpha/gggdtparser/issues",
    "Documentation": "https://github.com/kusen-alpha/gggdtparser/blob/master/README.md",
    "Homepage": "https://github.com/kusen-alpha/gggdtparser",
    "Source Code": "https://github.com/kusen-alpha/gggdtparser"
  },
  "release_url": "https://pypi.org/project/gggdtparser/0.1.5/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "\u901a\u7528\u3001\u4fbf\u6377\u3001\u51c6\u786e\u7684\u5b57\u7b26\u4e32\u65f6\u95f4\u89e3\u6790\u5de5\u5177",
  "version": "0.1.5",
  "releases": [],
  "developers": [
    "1194542196@qq.com",
    "kusen"
  ],
  "kwds": "python\u4e2d\u5404\u7c7b\u89e3\u6790\u5e93 \u662f\u57fa\u4e8epython\u7f16\u5199\u7684\u5b57\u7b26\u4e32\u65f6\u95f4\u62bd\u53d6\u89e3\u6790\u5de5\u5177 \u5728\u65e5\u5e38\u5f00\u53d1\u4e2d py\u4e2d\u7684\u6d4b\u8bd5\u6848\u4f8b \u5728\u89e3\u6790\u524d\u7684\u8981\u6c42\u5f88\u9ad8",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_gggdtparser",
  "homepage": "https://github.com/kusen-alpha/gggdtparser",
  "release_count": 12,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: physics"
  ],
  "description": "<p align=\"center\">\n  <!-- tests (github actions) -->\n  <a href=\"https://github.com/pennylaneai/pennylane/actions?query=workflow%3atests\">\n    <img src=\"https://img.shields.io/github/actions/workflow/status/pennylaneai/pennylane/tests.yml?branch=master&style=flat-square\" />\n  </a>\n  <!-- codecov -->\n  <a href=\"https://codecov.io/gh/pennylaneai/pennylane\">\n    <img src=\"https://img.shields.io/codecov/c/github/pennylaneai/pennylane/master.svg?logo=codecov&style=flat-square\" />\n  </a>\n  <!-- readthedocs -->\n  <a href=\"https://docs.pennylane.ai/en/latest\">\n    <img src=\"https://readthedocs.com/projects/xanaduai-pennylane/badge/?version=latest&style=flat-square\" />\n  </a>\n  <!-- pypi -->\n  <a href=\"https://pypi.org/project/pennylane\">\n    <img src=\"https://img.shields.io/pypi/v/pennylane.svg?style=flat-square\" />\n  </a>\n  <!-- forum -->\n  <a href=\"https://discuss.pennylane.ai\">\n    <img src=\"https://img.shields.io/discourse/https/discuss.pennylane.ai/posts.svg?logo=discourse&style=flat-square\" />\n  </a>\n  <!-- license -->\n  <a href=\"https://www.apache.org/licenses/license-2.0\">\n    <img src=\"https://img.shields.io/pypi/l/pennylane.svg?logo=apache&style=flat-square\" />\n  </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://pennylane.ai\">pennylane</a> is a cross-platform python library for <a\n  href=\"https://en.wikipedia.org/wiki/differentiable_programming\">differentiable\n  programming</a> of quantum computers.\n</p>\n\n<p align=\"center\">\n  <strong>train a quantum computer the same way as a neural network.</strong>\n  <img src=\"https://raw.githubusercontent.com/pennylaneai/pennylane/master/doc/_static/header.png#gh-light-mode-only\" width=\"700px\">\n    <!--\n    use a relative import for the dark mode image. when loading on pypi, this\n    will fail automatically and show nothing.\n    -->\n    <img src=\"./doc/_static/header-dark-mode.png#gh-dark-mode-only\" width=\"700px\" onerror=\"this.style.display='none'\" alt=\"\"/>\n</p>\n\n## key features\n\n<img src=\"https://raw.githubusercontent.com/pennylaneai/pennylane/master/doc/_static/code.png\" width=\"400px\" align=\"right\">\n\n- *machine learning on quantum hardware*. connect to quantum hardware using **pytorch**, **tensorflow**, **jax**, **keras**, or **numpy**. build rich and flexible hybrid quantum-classical models.\n\n- *just in time compilation*. experimental support for just-in-time\n  compilation. compile your entire hybrid workflow, with support for \n  advanced features such as adaptive circuits, real-time measurement \n  feedback, and unbounded loops. see\n  [catalyst](https://github.com/pennylaneai/catalyst) for more details.\n\n- *device-independent*. run the same quantum circuit on different quantum backends. install\n  [plugins](https://pennylane.ai/plugins.html) to access even more devices, including **strawberry\n  fields**, **amazon braket**, **ibm q**, **google cirq**, **rigetti forest**, **qulacs**, **pasqal**, **honeywell**, and more.\n\n- *follow the gradient*. hardware-friendly **automatic differentiation** of quantum circuits.\n\n- *batteries included*. built-in tools for **quantum machine learning**, **optimization**, and\n  **quantum chemistry**. rapidly prototype using built-in quantum simulators with\n  backpropagation support.\n\n## installation\n\npennylane requires python version 3.9 and above. installation of pennylane, as well as all\ndependencies, can be done using pip:\n\n```console\npython -m pip install pennylane\n```\n\n## docker support\n\n**docker** support exists for building using **cpu** and **gpu** (nvidia cuda\n11.1+) images. [see a more detailed description\nhere](https://pennylane.readthedocs.io/en/stable/development/guide/installation.html#docker).\n\n## getting started\n\nfor an introduction to quantum machine learning, guides and resources are available on\npennylane's [quantum machine learning hub](https://pennylane.ai/qml/):\n\n<img src=\"https://raw.githubusercontent.com/pennylaneai/pennylane/master/doc/_static/readme/gpu_to_qpu.png\" align=\"right\" width=\"400px\">\n\n* [what is quantum machine learning?](https://pennylane.ai/qml/whatisqml.html)\n* [qml tutorials and demos](https://pennylane.ai/qml/demonstrations.html)\n* [frequently asked questions](https://pennylane.ai/faq.html)\n* [key concepts of qml](https://pennylane.ai/qml/glossary.html)\n* [qml videos](https://pennylane.ai/qml/videos.html)\n\nyou can also check out our [documentation](https://pennylane.readthedocs.io) for [quickstart\nguides](https://pennylane.readthedocs.io/en/stable/introduction/pennylane.html) to using pennylane,\nand detailed developer guides on [how to write your\nown](https://pennylane.readthedocs.io/en/stable/development/plugins.html) pennylane-compatible\nquantum device.\n\n## tutorials and demonstrations\n\ntake a deeper dive into quantum machine learning by exploring cutting-edge algorithms on our [demonstrations\npage](https://pennylane.ai/qml/demonstrations.html).\n\n<a href=\"https://pennylane.ai/qml/demonstrations.html\">\n  <img src=\"https://raw.githubusercontent.com/pennylaneai/pennylane/master/doc/_static/readme/demos.png\" width=\"900px\">\n</a>\n\nall demonstrations are fully executable, and can be downloaded as jupyter notebooks and python\nscripts.\n\nif you would like to contribute your own demo, see our [demo submission\nguide](https://pennylane.ai/qml/demos_submission.html).\n\n## videos\n\nseeing is believing! check out [our videos](https://pennylane.ai/qml/videos.html) to learn about\npennylane, quantum computing concepts, and more. \n\n<a href=\"https://pennylane.ai/qml/videos.html\">\n  <img src=\"https://raw.githubusercontent.com/pennylaneai/pennylane/master/doc/_static/readme/videos.png\" width=\"900px\">\n</a>\n\n## contributing to pennylane\n\nwe welcome contributions\u2014simply fork the pennylane repository, and then make a [pull\nrequest](https://help.github.com/articles/about-pull-requests/) containing your contribution. all\ncontributors to pennylane will be listed as authors on the releases. all users who contribute\nsignificantly to the code (new plugins, new functionality, etc.) will be listed on the pennylane\narxiv paper.\n\nwe also encourage bug reports, suggestions for new features and enhancements, and even links to cool\nprojects or applications built on pennylane.\n\nsee our [contributions\npage](https://github.com/pennylaneai/pennylane/blob/master/.github/contributing.md) and our\n[developer hub](https://pennylane.readthedocs.io/en/stable/development/guide.html) for more\ndetails.\n\n## support\n\n- **source code:** https://github.com/pennylaneai/pennylane\n- **issue tracker:** https://github.com/pennylaneai/pennylane/issues\n\nif you are having issues, please let us know by posting the issue on our github issue tracker.\n\nwe also have a [pennylane discussion forum](https://discuss.pennylane.ai)\u2014come join the community\nand chat with the pennylane team.\n\nnote that we are committed to providing a friendly, safe, and welcoming environment for all.\nplease read and respect the [code of conduct](.github/code_of_conduct.md).\n\n## authors\n\npennylane is the work of [many contributors](https://github.com/pennylaneai/pennylane/graphs/contributors).\n\nif you are doing research using pennylane, please cite [our paper](https://arxiv.org/abs/1811.04968):\n\n> ville bergholm et al. *pennylane: automatic differentiation of hybrid quantum-classical\n> computations.* 2018. arxiv:1811.04968\n\n## license\n\npennylane is **free** and **open source**, released under the apache license, version 2.0.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "pennylane",
  "package_url": "https://pypi.org/project/PennyLane/",
  "project_url": "https://pypi.org/project/PennyLane/",
  "project_urls": {
    "Homepage": "https://github.com/PennyLaneAI/pennylane"
  },
  "release_url": "https://pypi.org/project/PennyLane/0.33.1/",
  "requires_dist": [
    "numpy",
    "scipy",
    "networkx",
    "rustworkx",
    "autograd",
    "toml",
    "appdirs",
    "semantic-version >=2.7",
    "autoray >=0.6.1",
    "cachetools",
    "pennylane-lightning >=0.33",
    "requests",
    "typing-extensions",
    "cvxpy ; extra == 'kernels'",
    "cvxopt ; extra == 'kernels'"
  ],
  "requires_python": "",
  "summary": "pennylane is a python quantum machine learning library by xanadu inc.",
  "version": "0.33.1",
  "releases": [],
  "developers": [
    "software@xanadu.ai",
    "xanadu_inc"
  ],
  "kwds": "href html links header code",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_pennylane",
  "homepage": "https://github.com/pennylaneai/pennylane",
  "release_count": 46,
  "dependency_ids": [
    "pypi_appdirs",
    "pypi_autograd",
    "pypi_autoray",
    "pypi_cachetools",
    "pypi_cvxopt",
    "pypi_cvxpy",
    "pypi_networkx",
    "pypi_numpy",
    "pypi_pennylane_lightning",
    "pypi_requests",
    "pypi_rustworkx",
    "pypi_scipy",
    "pypi_semantic_version",
    "pypi_toml",
    "pypi_typing_extensions"
  ]
}
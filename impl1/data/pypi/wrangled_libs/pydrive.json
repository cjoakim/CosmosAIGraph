{
  "classifiers": [],
  "description": "pydrive\n-------\n\n*pydrive* is a wrapper library of\n`google-api-python-client <https://code.google.com/p/google-api-python-client/>`_\nthat simplifies many common google drive api tasks.\n\nproject info\n------------\n\n- homepage: `https://pypi.python.org/pypi/pydrive <https://pypi.python.org/pypi/pydrive>`_\n- documentation: `official documentation on github pages <https://googledrive.github.io/pydrive/docs/build/html/index.html>`_\n- github: `https://github.com/googledrive/pydrive <https://github.com/googledrive/pydrive>`_\n\nfeatures of pydrive\n-------------------\n\n-  simplifies oauth2.0 into just few lines with flexible settings.\n-  wraps `google drive api <https://developers.google.com/drive/>`_ into\n   classes of each resource to make your program more object-oriented.\n-  helps common operations else than api calls, such as content fetching\n   and pagination control.\n\nhow to install\n--------------\n\nyou can install pydrive with regular ``pip`` command.\n\n::\n\n    $ pip install pydrive\n\nto install the current development version from github, use:\n\n::\n\n    $  pip install git+https://github.com/googledrive/pydrive.git#egg=pydrive\n\noauth made easy\n---------------\n\ndownload *client\\_secrets.json* from google api console and oauth2.0 is\ndone in two lines. you can customize behavior of oauth2 in one settings\nfile *settings.yaml*.\n\n.. code:: python\n\n\n    from pydrive.auth import googleauth\n    from pydrive.drive import googledrive\n\n    gauth = googleauth()\n    gauth.localwebserverauth()\n\n    drive = googledrive(gauth)\n\nfile management made easy\n-------------------------\n\nupload/update the file with one method. pydrive will do it in the most\nefficient way.\n\n.. code:: python\n\n    file1 = drive.createfile({'title': 'hello.txt'})\n    file1.setcontentstring('hello')\n    file1.upload() # files.insert()\n\n    file1['title'] = 'helloworld.txt'  # change title of the file\n    file1.upload() # files.patch()\n\n    content = file1.getcontentstring()  # 'hello'\n    file1.setcontentstring(content+' world!')  # 'hello world!'\n    file1.upload() # files.update()\n\n    file2 = drive.createfile()\n    file2.setcontentfile('hello.png')\n    file2.upload()\n    print('created file %s with mimetype %s' % (file2['title'],\n    file2['mimetype']))\n    # created file hello.png with mimetype image/png\n\n    file3 = drive.createfile({'id': file2['id']})\n    print('downloading file %s from google drive' % file3['title']) # 'hello.png'\n    file3.getcontentfile('world.png')  # save drive file as a local file\n\n    # or download google docs files in an export format provided.\n    # downloading a docs document as an html file:\n    docsfile.getcontentfile('test.html', mimetype='text/html')\n\nfile listing pagination made easy\n---------------------------------\n\n*pydrive* handles file listing pagination for you.\n\n.. code:: python\n\n    # auto-iterate through all files that matches this query\n    file_list = drive.listfile({'q': \"'root' in parents\"}).getlist()\n    for file1 in file_list:\n      print('title: %s, id: %s' % (file1['title'], file1['id']))\n\n    # paginate file lists by specifying number of max results\n    for file_list in drive.listfile({'maxresults': 10}):\n      print 'received %s files from files.list()' % len(file_list) # <= 10\n      for file1 in file_list:\n        print('title: %s, id: %s' % (file1['title'], file1['id']))\n\nconcurrent access made easy\n---------------------------\n\nall calls made are thread-safe. the underlying implementation in the\ngoogle-api-client library\n`is not thread-safe <https://developers.google.com/api-client-library/python/guide/thread_safety>`_,\nwhich means that every request has to re-authenticate an http object. you\ncan avoid this overhead by\ncreating your own http object for each thread and re-use it for every call.\n\nthis can be done as follows:\n\n.. code:: python\n\n    # create httplib.http() object.\n    http = drive.auth.get_http_object()\n\n    # create file object to upload.\n    file_obj = drive.createfile()\n    file_obj['title'] = \"file name\"\n\n    # upload the file and pass the http object into the call to upload.\n    file_obj.upload(param={\"http\": http})\n\nyou can specify the http-object in every access method which takes a *param*\nparameter.",
  "docs_url": "https://pythonhosted.org/PyDrive/",
  "keywords": "",
  "license": "license",
  "name": "pydrive",
  "package_url": "https://pypi.org/project/PyDrive/",
  "project_url": "https://pypi.org/project/PyDrive/",
  "project_urls": {
    "Download": "UNKNOWN",
    "Homepage": "https://github.com/googledrive/PyDrive"
  },
  "release_url": "https://pypi.org/project/PyDrive/1.3.1/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "google drive api made easy.",
  "version": "1.3.1",
  "releases": [],
  "developers": [
    "rnabel@ucdavis.edu",
    "robin_nabel"
  ],
  "kwds": "googledrive pydrive googleauth api oauth2",
  "license_kwds": "license",
  "libtype": "pypi",
  "id": "pypi_pydrive",
  "homepage": "https://github.com/googledrive/pydrive",
  "release_count": 4,
  "dependency_ids": []
}
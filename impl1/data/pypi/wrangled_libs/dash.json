{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: dash",
    "framework :: flask",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: financial and insurance industry",
    "intended audience :: healthcare industry",
    "intended audience :: manufacturing",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: database :: front-ends",
    "topic :: office/business :: financial :: spreadsheet",
    "topic :: scientific/engineering :: visualization",
    "topic :: software development :: libraries :: application frameworks",
    "topic :: software development :: widget sets"
  ],
  "description": "# dash\n\n[![circleci](https://img.shields.io/circleci/project/github/plotly/dash/master.svg)](https://circleci.com/gh/plotly/dash)\n[![github](https://img.shields.io/github/license/plotly/dash.svg?color=dark-green)](https://github.com/plotly/dash/blob/master/license)\n[![pypi](https://img.shields.io/pypi/v/dash.svg?color=dark-green)](https://pypi.org/project/dash/)\n[![pypi - python version](https://img.shields.io/pypi/pyversions/dash.svg?color=dark-green)](https://pypi.org/project/dash/)\n[![github commit activity](https://img.shields.io/github/commit-activity/y/plotly/dash.svg?color=dark-green)](https://github.com/plotly/dash/graphs/contributors)\n\n#### *dash is the most downloaded, trusted python framework for building ml & data science web apps*.\n\nbuilt on top of [plotly.js](https://github.com/plotly/plotly.js), [react](https://reactjs.org/) and [flask](https://palletsprojects.com/p/flask/), dash ties modern ui elements like dropdowns, sliders, and graphs directly to your analytical python code. read [our tutorial](https://dash.plotly.com/getting-started) (proudly crafted \u2764\ufe0f with dash itself).\n\n- [docs](https://dash.plotly.com/getting-started): create your first dash app in under 5 minutes\n\n- [dash.gallery](https://dash.gallery): dash app gallery with python & r code\n\n### dash app examples\n\n| dash app | description |\n|--- | :---: |\n|![sample dash app](https://user-images.githubusercontent.com/1280389/30086128-9bb4a28e-9267-11e7-8fe4-bbac7d53f2b0.gif) | here\u2019s a simple example of a dash app that ties a dropdown to a plotly graph. as the user selects a value in the dropdown, the application code dynamically exports data from google finance into a pandas dataframe. this app was written in just **43** lines of code ([view the source](https://gist.github.com/chriddyp/3d2454905d8f01886d651f207e2419f0)). |\n|![crossfiltering dash app](https://user-images.githubusercontent.com/1280389/30086123-97c58bde-9267-11e7-98a0-7f626de5199a.gif)|dash app code is declarative and reactive, which makes it easy to build complex apps that contain many interactive elements. here\u2019s an example with 5 inputs, 3 outputs, and cross filtering. this app was composed in just 160 lines of code, all of which were python.|\n|![dash app with mapbox map showing walmart store openings](https://user-images.githubusercontent.com/1280389/30086299-768509d0-9268-11e7-8e6b-626ac9ca512c.gif)| dash uses [plotly.js](https://github.com/plotly/plotly.js) for charting. about 50 chart types are supported, including maps. |\n|![financial report](https://user-images.githubusercontent.com/2678795/161153710-57952401-6e07-42d5-ba3e-bab6419998c7.gif)| dash isn't just for dashboards. you have full control over the look and feel of your applications. here's a dash app that's styled to look like a pdf report. |\n\nto learn more about dash, read the [extensive announcement letter](https://medium.com/@plotlygraphs/introducing-dash-5ecf7191b503) or [jump in with the user guide](https://plotly.com/dash).\n\n### dash oss & dash enterprise\n\nwith dash open source, dash apps run on your local laptop or workstation, but cannot be easily accessed by others in your organization.\n\nscale up with dash enterprise when your dash app is ready for department or company-wide consumption. or, launch your initiative with dash enterprise from the start to unlock developer productivity gains and hands-on acceleration from plotly's team.\n\nml ops features: a one-stop shop for ml ops: horizontally scalable hosting, deployment, and authentication for your dash apps. no it or devops required.\n- [**app manager**](https://plotly.com/dash/app-manager/) deploy & manage dash apps without needing it or a devops team. app manager gives you point & click control over all aspects of your dash deployments.\n- [**kubernetes scaling**](https://plotly.com/dash/kubernetes/) ensure high availability of dash apps and scale horizontally with dash enterprise\u2019s kubernetes architecture. no it or helm required.\n- [**no code auth**](https://plotly.com/dash/authentication/) control dash app access in a few clicks. dash enterprise supports ldap, ad, pki, okta, saml, openid connect, oauth, sso, and simple email authentication.\n- [**job queue**](https://plotly.com/dash/job-queue/) the job queue is the key to building scalable dash apps. move heavy computation from synchronous dash callbacks to the job queue for asynchronous background processing.\n\nlow-code features: low-code dash app capabilities that supercharge developer productivity.\n- [**design kit**](https://plotly.com/dash/design-kit/) design like a pro without writing a line of css. easily arrange, style, brand, and customize your dash apps.\n- [**snapshot engine**](https://plotly.com/dash/snapshot-engine/) save & share dash app views as links or pdfs. or, run a python job through dash and have snapshot engine email a report when the job is done.\n- [**dashboard toolkit**](https://plotly.com/dash/toolkit/) drag & drop layouts, chart editing, and crossfilter for your dash apps.\n- [**embedding**](https://plotly.com/dash/embedding/) natively embed dash apps in an existing web application or website without the use of iframes.\n\nenterprise ai features: everything that your data science team needs to rapidly deliver ai/ml research and business initiatives.\n- [**ai app marketplace**](https://plotly.com/dash/ai-and-ml-templates/) dash enterprise ships with dozens of dash app templates for business problems where ai/ml is having the greatest impact.\n- [**big data for pything**](https://plotly.com/dash/big-data-for-python/) connect to python's most popular big data back ends: dask, databricks, nvidia rapids, snowflake, postgres, vaex, and more.\n- [**gpu & dask acceleration**](https://plotly.com/dash/gpu-dask-acceleration/) dash enterprise puts python\u2019s most popular hpc stack for gpu and parallel cpu computing in the hands of business users.\n- [**data science workspaces**](https://plotly.com/dash/workspaces/) be productive from day 1. write and execute python, r, & julia code from dash enterprise's onboard code editor.\n\nsee [https://plotly.com/contact-us/](https://plotly.com/contact-us/) to get in touch.\n\n![dash enterprise](https://user-images.githubusercontent.com/2678795/161155614-21c54a22-f821-4dda-b910-ee27e27fb5f2.png)\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "dash",
  "package_url": "https://pypi.org/project/dash/",
  "project_url": "https://pypi.org/project/dash/",
  "project_urls": {
    "Documentation": "https://dash.plotly.com",
    "Homepage": "https://plotly.com/dash",
    "Issue Tracker": "https://github.com/plotly/dash/issues",
    "Source": "https://github.com/plotly/dash"
  },
  "release_url": "https://pypi.org/project/dash/2.14.2/",
  "requires_dist": [
    "Flask (<3.1,>=1.0.4)",
    "Werkzeug (<3.1)",
    "plotly (>=5.0.0)",
    "dash-html-components (==2.0.0)",
    "dash-core-components (==2.0.0)",
    "dash-table (==5.0.0)",
    "typing-extensions (>=4.1.1)",
    "requests",
    "retrying",
    "ansi2html",
    "nest-asyncio",
    "setuptools",
    "importlib-metadata (==4.8.3) ; python_version < \"3.7\"",
    "contextvars (==2.4) ; python_version < \"3.7\"",
    "importlib-metadata ; python_version >= \"3.7\"",
    "redis (>=3.5.3) ; extra == 'celery'",
    "celery[redis] (>=5.1.2) ; extra == 'celery'",
    "importlib-metadata (<5) ; (python_version < \"3.8\") and extra == 'celery'",
    "dash-flow-example (==0.0.5) ; extra == 'ci'",
    "dash-dangerously-set-inner-html ; extra == 'ci'",
    "flake8 (==3.9.2) ; extra == 'ci'",
    "flaky (==3.7.0) ; extra == 'ci'",
    "flask-talisman (==1.0.0) ; extra == 'ci'",
    "mimesis ; extra == 'ci'",
    "mock (==4.0.3) ; extra == 'ci'",
    "numpy (<=1.25.2) ; extra == 'ci'",
    "preconditions ; extra == 'ci'",
    "pylint (==2.13.5) ; extra == 'ci'",
    "pytest-mock ; extra == 'ci'",
    "pytest-sugar (==0.9.6) ; extra == 'ci'",
    "pytest-rerunfailures ; extra == 'ci'",
    "jupyterlab (<4.0.0) ; extra == 'ci'",
    "black (==21.6b0) ; (python_version < \"3.7\") and extra == 'ci'",
    "isort (==4.3.21) ; (python_version < \"3.7\") and extra == 'ci'",
    "orjson (==3.5.4) ; (python_version < \"3.7\") and extra == 'ci'",
    "pyarrow (<3) ; (python_version < \"3.7\") and extra == 'ci'",
    "pandas (==1.1.5) ; (python_version < \"3.8\") and extra == 'ci'",
    "xlrd (<2) ; (python_version < \"3.8\") and extra == 'ci'",
    "black (==22.3.0) ; (python_version >= \"3.7\") and extra == 'ci'",
    "orjson (==3.6.7) ; (python_version >= \"3.7\") and extra == 'ci'",
    "pyarrow ; (python_version >= \"3.7\") and extra == 'ci'",
    "openpyxl ; (python_version >= \"3.8\") and extra == 'ci'",
    "pandas (>=1.4.0) ; (python_version >= \"3.8\") and extra == 'ci'",
    "xlrd (>=2.0.1) ; (python_version >= \"3.8\") and extra == 'ci'",
    "flask-compress ; extra == 'compress'",
    "coloredlogs (>=15.0.1) ; extra == 'dev'",
    "fire (>=0.4.0) ; extra == 'dev'",
    "PyYAML (>=5.4.1) ; extra == 'dev'",
    "diskcache (>=5.2.1) ; extra == 'diskcache'",
    "multiprocess (>=0.70.12) ; extra == 'diskcache'",
    "psutil (>=5.8.0) ; extra == 'diskcache'",
    "beautifulsoup4 (>=4.8.2) ; extra == 'testing'",
    "lxml (>=4.6.2) ; extra == 'testing'",
    "percy (>=2.0.2) ; extra == 'testing'",
    "pytest (>=6.0.2) ; extra == 'testing'",
    "requests[security] (>=2.21.0) ; extra == 'testing'",
    "selenium (<=4.2.0,>=3.141.0) ; extra == 'testing'",
    "waitress (>=1.4.4) ; extra == 'testing'",
    "multiprocess (>=0.70.12) ; extra == 'testing'",
    "psutil (>=5.8.0) ; extra == 'testing'",
    "dash-testing-stub (>=0.0.2) ; extra == 'testing'",
    "cryptography (<3.4) ; (python_version < \"3.7\") and extra == 'testing'"
  ],
  "requires_python": ">=3.6",
  "summary": "a python framework for building reactive web-apps. developed by plotly.",
  "version": "2.14.2",
  "releases": [],
  "developers": [
    "chris@plotly.com",
    "chris_parmer"
  ],
  "kwds": "plotly dash plotlygraphs pypi circleci",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_dash",
  "homepage": "https://plotly.com/dash",
  "release_count": 174,
  "dependency_ids": [
    "pypi_ansi2html",
    "pypi_beautifulsoup4",
    "pypi_black",
    "pypi_celery",
    "pypi_coloredlogs",
    "pypi_contextvars",
    "pypi_cryptography",
    "pypi_dash_core_components",
    "pypi_dash_dangerously_set_inner_html",
    "pypi_dash_flow_example",
    "pypi_dash_html_components",
    "pypi_dash_table",
    "pypi_dash_testing_stub",
    "pypi_diskcache",
    "pypi_fire",
    "pypi_flake8",
    "pypi_flaky",
    "pypi_flask",
    "pypi_flask_compress",
    "pypi_flask_talisman",
    "pypi_importlib_metadata",
    "pypi_isort",
    "pypi_jupyterlab",
    "pypi_lxml",
    "pypi_mimesis",
    "pypi_mock",
    "pypi_multiprocess",
    "pypi_nest_asyncio",
    "pypi_numpy",
    "pypi_openpyxl",
    "pypi_orjson",
    "pypi_pandas",
    "pypi_percy",
    "pypi_plotly",
    "pypi_preconditions",
    "pypi_psutil",
    "pypi_pyarrow",
    "pypi_pylint",
    "pypi_pytest",
    "pypi_pytest_mock",
    "pypi_pytest_rerunfailures",
    "pypi_pytest_sugar",
    "pypi_pyyaml",
    "pypi_redis",
    "pypi_requests",
    "pypi_retrying",
    "pypi_selenium",
    "pypi_setuptools",
    "pypi_typing_extensions",
    "pypi_waitress",
    "pypi_werkzeug",
    "pypi_xlrd"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "environment :: macos x",
    "environment :: other environment",
    "environment :: win32 (ms windows)",
    "environment :: x11 applications",
    "framework :: ipython",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: end users/desktop",
    "intended audience :: other audience",
    "intended audience :: system administrators",
    "license :: osi approved :: mozilla public license 2.0 (mpl 2.0)",
    "operating system :: macos",
    "operating system :: macos :: macos x",
    "operating system :: microsoft",
    "operating system :: microsoft :: ms-dos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: posix :: bsd",
    "operating system :: posix :: bsd :: freebsd",
    "operating system :: posix :: linux",
    "operating system :: posix :: sunos/solaris",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation",
    "programming language :: python :: implementation :: ironpython",
    "programming language :: python :: implementation :: pypy",
    "programming language :: unix shell",
    "topic :: desktop environment",
    "topic :: education :: computer aided instruction (cai)",
    "topic :: education :: testing",
    "topic :: office/business",
    "topic :: other/nonlisted topic",
    "topic :: software development :: build tools",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: pre-processors",
    "topic :: software development :: user interfaces",
    "topic :: system :: installation/setup",
    "topic :: system :: logging",
    "topic :: system :: monitoring",
    "topic :: system :: shells",
    "topic :: terminals",
    "topic :: utilities"
  ],
  "description": "argopt\n======\n\ndoc to ``argparse`` driven by ``docopt``\n\n|py-versions| |pypi| |conda-forge|\n\n|build-status| |coverage-status| |branch-coverage-status| |codacy-grade| |libraries-rank| |pypi-downloads|\n\n|licence| |openhub-status| |gift-casper|\n\ndefine your command line interface (cli) from a docstring (rather than the\nother way around). because it's easy. it's quick. painless. then focus on\nwhat's actually important - using the arguments in the rest of your program.\n\nthe problem is that this is not always flexible. still need all the features of\n`argparse`? now have the best of both worlds... all the extension such as\n`shtab <https://github.com/iterative/shtab>`__ or\n`gooey <https://github.com/chriskiehl/gooey>`__ but with the simple syntax of\n`docopt <https://github.com/docopt/docopt>`__.\n\n------------------------------------------\n\n.. contents:: table of contents\n   :backlinks: top\n   :local:\n\n\ninstallation\n------------\n\nlatest pypi stable release\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n|pypi| |pypi-downloads| |libraries-dependents|\n\n.. code:: sh\n\n    pip install argopt\n\nlatest development release on github\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n|github-status| |github-stars| |github-commits| |github-forks| |github-updated|\n\npull and install:\n\n.. code:: sh\n\n    pip install \"git+https://github.com/casperdcl/argopt.git@master#egg=argopt\"\n\nlatest conda release\n~~~~~~~~~~~~~~~~~~~~\n\n|conda-forge|\n\n.. code:: sh\n\n    conda install -c conda-forge argopt\n\n\nchangelog\n---------\n\nthe list of all changes is available on the releases page: |github-status|.\n\n\nusage\n-----\n\nstandard `docopt <https://github.com/docopt/docopt>`__ docstring syntax applies.\nadditionally, some improvements and enhancements are supported, such as type\nchecking and default positional arguments.\n\n.. code:: python\n\n    '''example programme description.\n    you should be able to do\n        args = argopt(__doc__).parse_args()\n    instead of\n        args = docopt(__doc__)\n\n    usage:\n        test.py [options] <x> [<y>...]\n\n    arguments:\n        <x>                   a file.\n        --anarg=<a>           description here [default: 1e3:int].\n        -p pat, --patts pat   or [default: none:file].\n        --bar=<b>             another [default: something] should\n                              auto-wrap something in quotes and assume str.\n        -f, --force           force.\n    '''\n    from argopt import argopt\n    __version__ = \"0.1.2-3.4\"\n\n\n    parser = argopt(__doc__, version=__version__)\n    args = parser.parse_args()\n    if args.force:\n        print(args)\n    else:\n        print(args.x)\n\nfor comparison, the `docopt` equivalent would be:\n\n.. code:: python\n\n    '''example programme description.\n\n    usage:\n        test.py [options] <x> [<y>...]\n\n    arguments:\n        <x>                   a file.\n        --anarg=<a>           int, description here [default: 1e3].\n        -p pat, --patts pat   file, or (default: none).\n        --bar=<b>             str, another [default: something] should\n                              assume str like everything else.\n        -f, --force           force.\n        -h, --help            show this help message and exit.\n        -v, --version         show program's version number and exit.\n\n    '''\n    from docopt import docopt\n    __version__ = \"0.1.2-3.4\"\n\n\n    args = docopt(__doc__, version=__version__)\n    args[\"--anarg\"] = int(eval(args[\"--anarg\"]))\n    if args[\"--patts\"]:\n        args[\"--patts\"] = open(args[\"--patts\"])\n    if args[\"--force\"]:\n        print(args)\n    else:\n        print(args[\"<x>\"])\n\nadvanced usage and examples\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nsee the `examples <https://github.com/casperdcl/argopt/tree/master/examples>`__\nfolder.\n\n\ndocumentation\n-------------\n\n|py-versions| |readme-hits|\n\n.. code:: python\n\n    def argopt(doc='', argparser=argumentparser,\n               formatter_class=rawdescriptionhelpformatter,\n               loglevel=logging.notset, **_kwargs):\n      \"\"\"\n      note that `docopt` supports neither type specifiers nor default\n      positional arguments. we support both here.\n\n      parameters\n      ----------\n      doc  : docopt compatible, with optional type specifiers\n          [default: '':str]\n      argparser  : argument parser class [default: argparse.argumentparser]\n      version  : version string [default: none:str]\n      formatter_class  : [default: argparse.rawdescriptionhelpformatter]\n      loglevel  : [default: logging.notset]\n      _kwargs  : any `argparser` initialiser arguments\n          n.b.: `prog`, `description`, and `epilog` are automatically\n          inferred if not `none`\n\n      returns\n      -------\n      out  : argparser object (default: argparse.argumentparser)\n\n      usage\n      -----\n      extension syntax example: [default: 1e3:int].\n\n      you should be able to do\n          parser = argopt(__doc__)\n          args   = parser.parse_args()\n      instead of\n          args = docopt(__doc__)\n\n      todo\n      ----\n      add_argument_group\n      add_mutually_exclusive_group\n      (better) subparser support\n      (docopt extension) action choices\n      (docopt extension) action count\n      \"\"\"\n\n\ncontributions\n-------------\n\n|github-commits| |github-issues| |github-prs| |openhub-status|\n\nall source code is hosted on `github <https://github.com/casperdcl/argopt>`__.\ncontributions are welcome.\n\n\nlicence\n-------\n\nopen source (osi approved): |licence|\n\n\nauthors\n-------\n\n|openhub-status|\n\n- casper da costa-luis (`casperdcl <https://github.com/casperdcl>`__ |gift-casper|)\n\nwe are grateful for all |github-contributions|.\n\n|readme-hits|\n\n.. |build-status| image:: https://img.shields.io/github/actions/workflow/status/casperdcl/argopt/test.yml?branch=master&label=argopt&logo=github\n   :target: https://github.com/casperdcl/argopt/actions/workflows/test.yml\n.. |coverage-status| image:: https://img.shields.io/coveralls/github/casperdcl/argopt/master?logo=coveralls\n   :target: https://coveralls.io/github/casperdcl/argopt\n.. |branch-coverage-status| image:: https://codecov.io/gh/casperdcl/argopt/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/casperdcl/argopt\n.. |codacy-grade| image:: https://api.codacy.com/project/badge/grade/5282d52c142d4c6ea24f978b03981c6f\n   :target: https://app.codacy.com/gh/casperdcl/argopt\n.. |github-status| image:: https://img.shields.io/github/tag/casperdcl/argopt.svg?maxage=86400&logo=github\n   :target: https://github.com/casperdcl/argopt/releases\n.. |github-forks| image:: https://img.shields.io/github/forks/casperdcl/argopt.svg?logo=github\n   :target: https://github.com/casperdcl/argopt/network\n.. |github-stars| image:: https://img.shields.io/github/stars/casperdcl/argopt.svg?logo=github\n   :target: https://github.com/casperdcl/argopt/stargazers\n.. |github-commits| image:: https://img.shields.io/github/commit-activity/y/casperdcl/argopt?label=commits&logo=git\n   :target: https://github.com/casperdcl/argopt/graphs/commit-activity\n.. |github-issues| image:: https://img.shields.io/github/issues-closed/casperdcl/argopt.svg?logo=github\n   :target: https://github.com/casperdcl/argopt/issues\n.. |github-prs| image:: https://img.shields.io/github/issues-pr-closed/casperdcl/argopt.svg?logo=github\n   :target: https://github.com/casperdcl/argopt/pulls\n.. |github-contributions| image:: https://img.shields.io/github/contributors/casperdcl/argopt.svg?logo=github\n   :target: https://github.com/casperdcl/argopt/graphs/contributors\n.. |github-updated| image:: https://img.shields.io/github/last-commit/casperdcl/argopt?label=pushed&logo=github\n   :target: https://github.com/casperdcl/argopt/pulse\n.. |gift-casper| image:: https://img.shields.io/badge/gift-donate-dc10ff.svg?logo=contactless%20payment\n   :target: https://caspersci.uk.to/donate\n.. |pypi| image:: https://img.shields.io/pypi/v/argopt.svg?logo=pypi&logocolor=white\n   :target: https://pypi.org/project/argopt\n.. |pypi-downloads| image:: https://img.shields.io/pypi/dm/argopt.svg?label=pypi%20downloads&logo=docusign\n   :target: https://pypi.org/project/argopt\n.. |py-versions| image:: https://img.shields.io/pypi/pyversions/argopt.svg?logo=python&logocolor=white\n   :target: https://pypi.org/project/argopt\n.. |conda-forge| image:: https://img.shields.io/conda/v/conda-forge/argopt.svg?label=conda-forge&logo=conda-forge\n   :target: https://anaconda.org/conda-forge/argopt\n.. |libraries-rank| image:: https://img.shields.io/librariesio/sourcerank/pypi/argopt.svg?color=green&logo=koding\n   :target: https://libraries.io/pypi/argopt\n.. |libraries-dependents| image:: https://img.shields.io/librariesio/dependent-repos/pypi/argopt.svg?logo=koding\n    :target: https://github.com/casperdcl/argopt/network/dependents\n.. |openhub-status| image:: https://www.openhub.net/p/arg-opt/widgets/project_thin_badge?format=gif\n   :target: https://www.openhub.net/p/arg-opt?ref=thin+badge\n.. |licence| image:: https://img.shields.io/pypi/l/argopt.svg?color=purple&logo=spdx\n   :target: https://raw.githubusercontent.com/casperdcl/argopt/master/licence\n.. |readme-hits| image:: https://caspersci.uk.to/cgi-bin/hits.cgi?q=argopt&style=social&r=https://github.com/casperdcl/argopt\n   :target: https://caspersci.uk.to/cgi-bin/hits.cgi?q=argopt&a=plot&r=https://github.com/casperdcl/argopt&style=social\n",
  "docs_url": null,
  "keywords": "docopt,argparse,doc,docstring,commandline,argument,option,optional,parameter,positional,console,terminal,command line,cli,ui,gui,gooey",
  "license": "",
  "name": "argopt",
  "package_url": "https://pypi.org/project/argopt/",
  "project_url": "https://pypi.org/project/argopt/",
  "project_urls": {
    "Changelog": "https://github.com/casperdcl/argopt/releases",
    "Documentation": "https://github.com/casperdcl/argopt/#argopt",
    "Homepage": "https://github.com/casperdcl/argopt"
  },
  "release_url": "https://pypi.org/project/argopt/0.8.2/",
  "requires_dist": [
    "py-make (>=0.1.0) ; extra == 'dev'",
    "twine ; extra == 'dev'",
    "wheel ; extra == 'dev'"
  ],
  "requires_python": ">=3.7",
  "summary": "doc to argparse driven by docopt",
  "version": "0.8.2",
  "releases": [],
  "developers": [
    "casper.dcl@physics.org",
    "casper_da_costa"
  ],
  "kwds": "argparse commandline docopt argparser parse_args",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_argopt",
  "homepage": "https://github.com/casperdcl/argopt",
  "release_count": 19,
  "dependency_ids": [
    "pypi_py_make",
    "pypi_twine",
    "pypi_wheel"
  ]
}
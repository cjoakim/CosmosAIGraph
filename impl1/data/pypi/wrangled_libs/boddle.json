{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: gnu lesser general public license v3 (lgplv3)",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3"
  ],
  "description": ".. figure:: https://cloud.githubusercontent.com/assets/2049665/21398745/27452db6-c76e-11e6-8605-8e5f3301472b.png\n   :alt: image\n\n   image\n\nboddle\n======\n\na unit testing tool for python\u2019s bottle library. we wrote this for our\nown testing purposes at https://www.hvst.com. thanks\n`brenguyen711 <https://github.com/brenguyen711>`__ for the great name!\n\ninstall\n-------\n\n::\n\n   sudo pip install boddle\n\nusage\n-----\n\nassuming you have a bottle route like this:\n\n.. code:: python\n\n   @bottle.get('/woot')\n   def woot():\n     return bottle.request.params['name']\n\nyou can unit test it like:\n\n.. code:: python\n\n   import unittest\n   from boddle import boddle\n\n   class testit(unittest.testcase):\n     def testwoot(self):\n       with boddle(params={'name':'derek'}):\n         self.assertequal(woot(), 'derek')\n\nsee ```example.py`` <example.py>`__.\n\noptions\n~~~~~~~\n\nthe bottle-specific params that are supported are:\n\n+-----------------------------------------+----------------------------+\n| argument                                | notes                      |\n+=========================================+============================+\n| ``params``                              | populates                  |\n|                                         | ``request.params``. takes  |\n|                                         | a ``dict`` or list of      |\n|                                         | pairs. useful for both     |\n|                                         | post and get params.       |\n+-----------------------------------------+----------------------------+\n| ``path``                                | the path component of the  |\n|                                         | url. populates             |\n|                                         | ``request.path``, which    |\n|                                         | always has a preceeding    |\n|                                         | ``/``.                     |\n+-----------------------------------------+----------------------------+\n| ``method``                              | post, get, etc. bottle     |\n|                                         | will uppercase the value.  |\n+-----------------------------------------+----------------------------+\n| ``headers``                             | any http headers. takes a  |\n|                                         | ``dict``.                  |\n+-----------------------------------------+----------------------------+\n| ``json``                                | takes anything that can be |\n|                                         | consumed by                |\n|                                         | ``json.dumps()``. also     |\n|                                         | sets the content type of   |\n|                                         | the request.               |\n+-----------------------------------------+----------------------------+\n| ``url``                                 | the full url, protocol,    |\n|                                         | domain, port, path, etc.   |\n|                                         | will be parsed until its   |\n|                                         | ``urlparts`` before        |\n|                                         | populating                 |\n|                                         | ``request.url``.           |\n+-----------------------------------------+----------------------------+\n| ``body``                                | the raw body of the        |\n|                                         | request. takes either a    |\n|                                         | ``str`` or a file-like     |\n|                                         | object. ``str``\\ s will be |\n|                                         | converted into file-like   |\n|                                         | objects. populated         |\n|                                         | ``request.body``.          |\n+-----------------------------------------+----------------------------+\n| ``query``                               | populates                  |\n|                                         | ``request.query``. takes a |\n|                                         | ``dict``.                  |\n+-----------------------------------------+----------------------------+\n\nall other keyword arguments will be assigned to the request object. for\ninstance, we often do:\n\n.. code:: python\n\n   with boddle(current_user=someone):\n     # code that accesses bottle.request.current_user\n\nyou can also nest ``boddle`` calls. for instance:\n\n.. code:: python\n\n   with boddle(path='/woot'):\n     with boddle(params={'name':'derek'}):\n       # both path and params are set here\n     # only path is set here\n\n**all changes to ``bottle.request`` are reverted when the with block\nends.**\n\ntesting\n-------\n\n.. figure:: https://api.travis-ci.org/keredson/boddle.svg?branch=master\n   :alt: image\n\n   image\n\n::\n\n   $ git clone https://github.com/keredson/boddle.git\n   $ cd boddle\n   $ python tests.py \n   ............\n   ----------------------------------------------------------------------\n   ran 12 tests in 0.001s\n\n   ok\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "boddle",
  "package_url": "https://pypi.org/project/boddle/",
  "project_url": "https://pypi.org/project/boddle/",
  "project_urls": {
    "Homepage": "https://github.com/keredson/boddle"
  },
  "release_url": "https://pypi.org/project/boddle/0.2.9/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a unit testing tool for python's bottle library.",
  "version": "0.2.9",
  "releases": [],
  "developers": [
    "derek_anderson",
    "public@kered.org"
  ],
  "kwds": "testwoot boddle pip unittest testit",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_boddle",
  "homepage": "https://github.com/keredson/boddle",
  "release_count": 11,
  "dependency_ids": []
}
{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# robot framework database library\n\nthe database library for [robot framework](https://robotframework.org) allows you to query a database and verify the results.\nit requires an appropriate **python module to be installed separately** - depending on your database, like e.g. `oracledb` or `pymysql`. \n\nthe library consists of some keywords designed to perform different checks on your database.\nhere you can find the [keyword docs](http://marketsquare.github.io/robotframework-database-library/).\n\n# requirements\n- python\n- robot framework\n- python database module you're going to use - e.g. `oracledb`\n# installation\n```\npip install robotframework-databaselibrary\n```\n# usage examples\n## basic usage\n```robotframework\n*** settings ***\nlibrary       databaselibrary\ntest setup    connect to my oracle db\n\n*** keywords ***\nconnect to my oracle db\n    connect to database\n    ...    oracledb\n    ...    dbname=db\n    ...    dbusername=my_user\n    ...    dbpassword=my_pass\n    ...    dbhost=127.0.0.1\n    ...    dbport=1521\n\n*** test cases ***\nperson table contains expected records\n    ${output}=    query    select last_name from person\n    length should be    ${output}    2\n    should be equal    ${output}[0][0]    see\n    should be equal    ${output}[1][0]    schneider\n\nperson table contains no joe\n    ${sql}=    catenate    select id from person\n    ...                    where first_name= 'joe'    \n    check if not exists in database    ${sql}\n```\n## handling multiple database connections\n```robotframework\n*** settings ***\nlibrary          databaselibrary\ntest setup       connect to all databases\ntest teardown    disconnect from all databases\n\n*** keywords ***\nconnect to all databases\n    connect to database    psycopg2    db    db_user    pass    127.0.0.1    5432\n    ...    alias=postgres\n    connect to database    pymysql    db    db_user    pass    127.0.0.1    3306\n    ...    alias=mysql\n\n*** test cases ***\nusing aliases\n    ${names}=    query    select last_name from person    alias=postgres\n    execute sql string    drop table xyz                  alias=mysql\n\nswitching default alias\n    switch database    postgres\n    ${names}=    query    select last_name from person\n    switch database    mysql\n    execute sql string    drop table xyz\n```\n\nsee more examples in the folder `tests`.\n# database modules compatibility\nthe library is basically compatible with any [python database api specification 2.0](https://peps.python.org/pep-0249/) module.\n\nhowever, the actual implementation in existing python modules is sometimes quite different, which requires custom handling in the library.\ntherefore there are some modules, which are \"natively\" supported in the library - and others, which may work and may not.\n\n## python modules currently \"natively\" supported\n### oracle\n- [oracledb](https://oracle.github.io/python-oracledb/)\n    - both thick and thin client modes are supported - you can select one using the `drivermode` parameter.\n    - however, due to current limitations of the oracledb module, **it's not possible to switch between thick and thin modes during a test execution session** - even in different suites.\n- [cx_oracle](https://oracle.github.io/python-cx_oracle/)\n### mysql\n- [pymysql](https://github.com/pymysql/pymysql)\n- [mysqldb](https://mysqlclient.readthedocs.io/index.html)\n### postgresql\n- [psycopg2](https://www.psycopg.org/docs/)\n### ms sql server\n- [pymssql](https://github.com/pymssql/pymssql)\n### sqlite\n- [sqlite3](https://docs.python.org/3/library/sqlite3.html)\n### teradata\n- [teradata](https://github.com/teradata/pytd)\n### ibm db2\n- [ibm_db](https://github.com/ibmdb/python-ibmdb)\n- [ibm_db_dbi](https://github.com/ibmdb/python-ibmdb)\n### odbc\n- [pyodbc](https://github.com/mkleehammer/pyodbc)\n- [pypyodbc](https://github.com/pypyodbc/pypyodbc)\n### kingbase\n- ksycopg2\n\n# further references (partly outdated)\n- [list of python db interfaces](https://wiki.python.org/moin/databaseinterfaces)\n- [python db programming](https://wiki.python.org/moin/databaseprogramming)\n",
  "docs_url": "https://pythonhosted.org/robotframework-databaselibrary/",
  "keywords": "",
  "license": "apache license 2.0",
  "name": "robotframework-databaselibrary",
  "package_url": "https://pypi.org/project/robotframework-databaselibrary/",
  "project_url": "https://pypi.org/project/robotframework-databaselibrary/",
  "project_urls": {
    "Homepage": "https://github.com/MarketSquare/Robotframework-Database-Library",
    "Keyword docs": "http://marketsquare.github.io/Robotframework-Database-Library/"
  },
  "release_url": "https://pypi.org/project/robotframework-databaselibrary/1.4.3/",
  "requires_dist": [
    "robotframework",
    "robotframework-excellib"
  ],
  "requires_python": ">=3.7",
  "summary": "database library for robot framework",
  "version": "1.4.3",
  "releases": [],
  "developers": [
    "franz.see@gmail.com"
  ],
  "kwds": "oracledb databaselibrary databaseprogramming ibm_db pymysql",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_robotframework_databaselibrary",
  "homepage": "",
  "release_count": 23,
  "dependency_ids": [
    "pypi_robotframework",
    "pypi_robotframework_excellib"
  ]
}
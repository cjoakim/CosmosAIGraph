{
  "classifiers": [
    "development status :: 4 - beta",
    "programming language :: python :: 3"
  ],
  "description": "# antimeridian\n\n[![ci status](https://img.shields.io/github/actions/workflow/status/gadomski/antimeridian/ci.yaml?style=for-the-badge&label=ci)](https://github.com/gadomski/antimeridian/actions/workflows/ci.yaml)\n[![read the docs](https://img.shields.io/readthedocs/antimeridian?style=for-the-badge)](https://antimeridian.readthedocs.io/en/stable/)\n[![pypi](https://img.shields.io/pypi/v/antimeridian?style=for-the-badge)](https://pypi.org/project/antimeridian/)\n\n[![github](https://img.shields.io/github/license/gadomski/antimeridian?style=for-the-badge)](https://github.com/gadomski/antimeridian/blob/main/license)\n[![contributor covenant](https://img.shields.io/badge/contributor%20covenant-2.1-4baaaa.svg?style=for-the-badge)](https://github.com/gadomski/antimeridian/blob/main/code_of_conduct)\n\n<img src=\"docs/img/complex-split.png\" style=\"width: 600px;\" alt=\"demonstration image\" />\n\nfix shapes that cross the antimeridian.\nsee [the documentation](https://antimeridian.readthedocs.io) for information about the underlying algorithm.\ndepends on [shapely](https://shapely.readthedocs.io) and [numpy](https://numpy.org/).\n\ncan fix:\n\n- shapely [`polygon`](https://shapely.readthedocs.io/en/stable/reference/shapely.polygon.html#shapely.polygon), [`multipolygon`](https://shapely.readthedocs.io/en/stable/reference/shapely.multipolygon.html#shapely.multipolygon), [`linestring`](https://shapely.readthedocs.io/en/stable/reference/shapely.linestring.html#shapely.linestring), and [`multilinestring`](https://shapely.readthedocs.io/en/stable/reference/shapely.multilinestring.html#shapely.multilinestring) objects\n- geojson [polygons](https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.6), [multipolygons](https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.7), [features](https://datatracker.ietf.org/doc/html/rfc7946#section-3.2) and [featurecollections](https://datatracker.ietf.org/doc/html/rfc7946#section-3.3), as dictionaries\n- anything that has a [`__geo_interface__`](https://gist.github.com/sgillies/2217756)\n\n## usage\n\n```shell\npip install antimeridian\n```\n\nthen:\n\n```python\nimport antimeridian\n\nfixed = antimeridian.fix_geojson(geojson)\n```\n\nwe also have some utilities to create [bounding boxes](https://antimeridian.readthedocs.io/en/latest/api.html#antimeridian.bbox) and [centroids](https://antimeridian.readthedocs.io/en/latest/api.html#antimeridian.centroid) from antimeridian-crossing polygons and multipolygons.\nsee [the documentation](https://antimeridian.readthedocs.io/) for a complete api reference.\n\n### command line interface\n\nuse the `cli` optional dependency to install the `antimeridian` cli:\n\n```shell\npip install 'antimeridian[cli]'\nantimeridian fix input.json > output.json\n```\n\n## developing\n\nclone and install in editable mode with the development optional dependencies:\n\n```shell\ngit clone https://github.com/gadomski/antimeridian\ncd antimeridian\npip install -e '.[dev,docs]'\n```\n\nwe use [pytest](https://docs.pytest.org) for tests:\n\n```shell\npytest\n```\n\nwe use [sphinx](https://www.sphinx-doc.org) for docs:\n\n```shell\nmake -c docs html\n```\n\n## contributing\n\ngithub [issues](https://github.com/gadomski/antimeridian/issues) and [pull requests](https://github.com/gadomski/antimeridian/pulls), please and thank you!\n\n## license\n\n[apache-2.0](https://github.com/gadomski/antimeridian/blob/main/license)\n",
  "docs_url": null,
  "keywords": "geojson,antimeridian,shapely",
  "license": "apache-2.0",
  "name": "antimeridian",
  "package_url": "https://pypi.org/project/antimeridian/",
  "project_url": "https://pypi.org/project/antimeridian/",
  "project_urls": {
    "Changelog": "https://github.com/gadomski/antimeridian/blob/main/CHANGELOG.md",
    "Documentation": "https://antimeridian.readthedocs.io",
    "Github": "https://github.com/gadomski/antimeridan"
  },
  "release_url": "https://pypi.org/project/antimeridian/0.3.3/",
  "requires_dist": [
    "numpy >=1.17.4",
    "shapely >=2.0",
    "click ~=8.1.6 ; extra == 'cli'",
    "black ~=23.3 ; extra == 'dev'",
    "blacken-docs ~=1.13 ; extra == 'dev'",
    "mypy ~=1.2 ; extra == 'dev'",
    "packaging ~=23.1 ; extra == 'dev'",
    "pre-commit ~=3.2 ; extra == 'dev'",
    "pytest ~=7.3 ; extra == 'dev'",
    "pytest-console-scripts ~=1.3 ; extra == 'dev'",
    "ruff ==0.0.285 ; extra == 'dev'",
    "typing-extensions ; (python_version < \"3.10\") and extra == 'dev'",
    "tomli ~=2.0 ; (python_version < \"3.11\") and extra == 'dev'",
    "cartopy ~=0.21 ; extra == 'docs'",
    "ipykernel ~=6.22 ; extra == 'docs'",
    "jupytext ~=1.14 ; extra == 'docs'",
    "nbsphinx ~=0.9 ; extra == 'docs'",
    "pydata-sphinx-theme ~=0.13 ; extra == 'docs'",
    "scipy ~=1.10.0 ; extra == 'docs'",
    "sphinx ~=7.0 ; extra == 'docs'",
    "sphinx-click ~=5.0 ; extra == 'docs'"
  ],
  "requires_python": ">=3.8",
  "summary": "fix geojson geometries that cross the antimeridian",
  "version": "0.3.3",
  "releases": [],
  "developers": [
    "pete.gadomski@gmail.com"
  ],
  "kwds": "antimeridian badge geojson shields fix_geojson",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_antimeridian",
  "homepage": "",
  "release_count": 17,
  "dependency_ids": [
    "pypi_black",
    "pypi_blacken_docs",
    "pypi_cartopy",
    "pypi_click",
    "pypi_ipykernel",
    "pypi_jupytext",
    "pypi_mypy",
    "pypi_nbsphinx",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pre_commit",
    "pypi_pydata_sphinx_theme",
    "pypi_pytest",
    "pypi_pytest_console_scripts",
    "pypi_ruff",
    "pypi_scipy",
    "pypi_shapely",
    "pypi_sphinx",
    "pypi_sphinx_click",
    "pypi_tomli",
    "pypi_typing_extensions"
  ]
}
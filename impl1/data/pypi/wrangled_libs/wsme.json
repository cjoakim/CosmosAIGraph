{
  "classifiers": [
    "development status :: 3 - alpha",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "topic :: internet :: www/http :: wsgi",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "web services made easy\n======================\n\nintroduction\n------------\n\nweb services made easy (wsme) simplifies the writing of rest web services\nby providing simple yet powerful typing, removing the need to directly\nmanipulate the request and the response objects.\n\nwsme can work standalone or on top of your favorite python web\n(micro)framework, so you can use both your preferred way of routing your rest\nrequests and most of the features of wsme that rely on the typing system like:\n\n- alternate protocols, including those supporting batch-calls\n- easy documentation through a sphinx_ extension\n\nwsme is originally a rewrite of tgwebservices with a focus on extensibility,\nframework-independence and better type handling.\n\nhow easy?\n~~~~~~~~~\n\nhere is a standalone wsgi example::\n\n    from wsme import wsroot, expose\n\n    class myservice(wsroot):\n        @expose(unicode, unicode)  # first parameter is the return type,\n                                   # then the function argument types\n        def hello(self, who=u'world'):\n            return u\"hello {0} !\".format(who)\n\n    ws = myservice(protocols=['restjson', 'restxml'])\n    application = ws.wsgiapp()\n\nwith this published at the ``/ws`` path of your application, you can access your\nhello function in various protocols:\n\n.. list-table::\n    :header-rows: 1\n\n    * - url\n      - returns\n\n    * - ``http://<server>/ws/hello.json?who=you``\n      - ``\"hello you !\"``\n\n    * - ``http://<server>/ws/hello.xml``\n      - ``<result>hello world !</result>``\n\nmain features\n~~~~~~~~~~~~~\n\n- very simple api.\n\n- supports user-defined simple and complex types.\n\n- multi-protocol : rest+json, rest+xml and more possible.\n\n- extensible : easy to add more protocols or more base types.\n\n- framework independence : adapters are provided to easily integrate your api in\n  any web framework, for example an wsgi container, pecan_, flask_, ...\n\n- very few runtime dependencies: webob, simplegeneric.\n\n- integration in `sphinx`_ for making clean documentation with\n  ``wsmeext.sphinxext``.\n\n.. _pecan: http://pecanpy.org/\n.. _flask: http://flask.pocoo.org/\n\ninstall\n~~~~~~~\n\n::\n\n    pip install wsme\n\nchanges\n~~~~~~~\n\n- read the `changelog`_\n\ngetting help\n~~~~~~~~~~~~\n\n- read the `wsme documentation`_.\n- questions about wsme should go to the `python-wsme mailinglist`_.\n\ncontribute\n~~~~~~~~~~\n\n- documentation: http://packages.python.org/wsme/\n- source: http://git.openstack.org/cgit/openstack/wsme\n- bugs: https://bugs.launchpad.net/wsme/+bugs\n- code review: https://review.openstack.org/#/q/project:openstack/wsme,n,z\n\n.. _changelog: http://packages.python.org/wsme/changes.html\n.. _python-wsme mailinglist: http://groups.google.com/group/python-wsme\n.. _wsme documentation: http://packages.python.org/wsme/\n.. _wsme issue tracker: https://bugs.launchpad.net/wsme/+bugs\n.. _sphinx: http://sphinx.pocoo.org/\n\n",
  "docs_url": "https://pythonhosted.org/WSME/",
  "keywords": "",
  "license": "mit",
  "name": "wsme",
  "package_url": "https://pypi.org/project/WSME/",
  "project_url": "https://pypi.org/project/WSME/",
  "project_urls": {
    "Homepage": "https://opendev.org/x/wsme"
  },
  "release_url": "https://pypi.org/project/WSME/0.12.1/",
  "requires_dist": [
    "WebOb >=1.8.0",
    "simplegeneric",
    "pytz",
    "netaddr >=0.7.12",
    "importlib-metadata >=4.4"
  ],
  "requires_python": ">=3.8",
  "summary": "simplify the writing of rest apis, and extend them with additional protocols.",
  "version": "0.12.1",
  "releases": [],
  "developers": [
    "christophe_de_vienne",
    "python-wsme@googlegroups.com"
  ],
  "kwds": "wsgi sphinxext wsme wsgiapp tgwebservices",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_wsme",
  "homepage": "https://opendev.org/x/wsme",
  "release_count": 30,
  "dependency_ids": [
    "pypi_importlib_metadata",
    "pypi_netaddr",
    "pypi_pytz",
    "pypi_simplegeneric",
    "pypi_webob"
  ]
}
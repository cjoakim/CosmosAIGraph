{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: plugins",
    "framework :: sphinx :: extension",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "sphinx autoapi\n==============\n\n.. image:: https://readthedocs.org/projects/sphinx-autoapi/badge/?version=latest\n    :target: https://sphinx-autoapi.readthedocs.org\n    :alt: documentation\n\n.. image:: https://github.com/readthedocs/sphinx-autoapi/actions/workflows/main.yml/badge.svg?branch=main\n    :target: https://github.com/readthedocs/sphinx-autoapi/actions/workflows/main.yml?query=branch%3amain\n    :alt: github build status\n\n.. image:: https://img.shields.io/pypi/v/sphinx-autoapi.svg\n    :target: https://pypi.org/project/sphinx-autoapi/\n    :alt: pypi version\n\n.. image:: https://img.shields.io/pypi/pyversions/sphinx-autoapi.svg\n    :target: https://pypi.org/project/sphinx-autoapi/\n    :alt: supported python versions\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/python/black\n    :alt: formatted with black\n\nsphinx autoapi is a sphinx extension for generating complete api documentation\nwithout needing to load, run, or import the project being documented.\n\nin contrast to the traditional `sphinx autodoc <https://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html>`_,\nwhich requires manual authoring and uses code imports,\nautoapi finds and generates documentation by parsing source code.\n\ngetting started\n---------------\n\nthe following steps will walk through how to add autoapi to an existing sphinx project.\nfor instructions on how to set up a sphinx project,\nsee sphinx's documentation on\n`getting started <https://www.sphinx-doc.org/en/master/usage/quickstart.html>`_.\n\ninstallation\n~~~~~~~~~~~~\n\nautoapi can be installed through pip:\n\n.. code-block:: bash\n\n    pip install sphinx-autoapi\n\nnext, add and configure autoapi in your sphinx project's `conf.py`.\n\n.. code-block:: python\n\n    extensions.append('autoapi.extension')\n\n    autoapi_dirs = ['path/to/source/files', 'src']\n\nwhen the documentation is built,\nautoapi will now generate api documentation into an `autoapi/` directory\nand add an entry to the documentation in your top level table of contents!\n\nto configure autoapi behaviour further,\nsee the `configuration documentation <https://sphinx-autoapi.readthedocs.io/en/latest/reference/config.html>`_.\n\n\ncontributing\n------------\n\nrunning the tests\n~~~~~~~~~~~~~~~~~\n\ntests are executed through `tox <https://tox.readthedocs.io/en/latest/>`_.\n\n.. code-block:: bash\n\n    tox\n\ncode style\n~~~~~~~~~~\n\ncode is formatted using `black <https://github.com/python/black>`_.\n\nyou can check your formatting using black's check mode:\n\n.. code-block:: bash\n\n    tox -e formatting\n\nyou can also get black to format your changes for you:\n\n.. code-block:: bash\n\n    black autoapi/ tests/\n\nyou can even get black to format changes automatically when you commit using `pre-commit <https://pre-commit.com/>`_:\n\n\n.. code-block:: bash\n\n    pip install pre-commit\n    pre-commit install\n\nrelease notes\n~~~~~~~~~~~~~\n\nrelease notes are managed through `towncrier <https://towncrier.readthedocs.io/en/stable/index.html>`_.\nwhen making a pull request you will need to create a news fragment to document your change:\n\n.. code-block:: bash\n\n    tox -e release_notes -- create --help\n\nversioning\n----------\n\nwe use `semver <https://semver.org/>`_ for versioning. for the versions available, see the `tags on this repository <https://github.com/readthedocs/sphinx-autoapi/tags>`_.\n\nlicense\n-------\n\nthis project is licensed under the mit license.\nsee the `license.rst <license.rst>`_ file for details.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "sphinx-autoapi",
  "package_url": "https://pypi.org/project/sphinx-autoapi/",
  "project_url": "https://pypi.org/project/sphinx-autoapi/",
  "project_urls": {
    "Documentation": "https://sphinx-autoapi.readthedocs.io/en/latest/",
    "Homepage": "http://github.com/readthedocs/sphinx-autoapi"
  },
  "release_url": "https://pypi.org/project/sphinx-autoapi/3.0.0/",
  "requires_dist": [
    "anyascii",
    "Jinja2",
    "PyYAML",
    "sphinx >=6.1.0",
    "astroid >=2.7 ; python_version < \"3.12\"",
    "astroid >=3.0.0a1 ; python_version >= \"3.12\"",
    "furo ; extra == 'docs'",
    "sphinx ; extra == 'docs'",
    "sphinx-design ; extra == 'docs'"
  ],
  "requires_python": ">=3.8",
  "summary": "sphinx api documentation generator",
  "version": "3.0.0",
  "releases": [],
  "developers": [
    "ashley@awhetter.co.uk",
    "ashley_whetter",
    "eric@ericholscher.com",
    "eric_holscher"
  ],
  "kwds": "sphinx autoapi_dirs autoapi autodoc documentation",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_sphinx_autoapi",
  "homepage": "http://github.com/readthedocs/sphinx-autoapi",
  "release_count": 31,
  "dependency_ids": [
    "pypi_anyascii",
    "pypi_astroid",
    "pypi_furo",
    "pypi_jinja2",
    "pypi_pyyaml",
    "pypi_sphinx",
    "pypi_sphinx_design"
  ]
}
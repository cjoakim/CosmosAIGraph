{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "environment :: web environment",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7"
  ],
  "description": "# transform mql\n\n## auth setup:\n```bash\n# follow the prompts to either enter api_key or perform mfa\nmql setup\n```\n\n**note:** all configs including pinned models, api_key, bearer tokens will be stored under the default directory at `~/.transform/config.yml`. if another location is desired, please set an env variable at `$tfd_config_dir` with the desired path.\n\n## cli usage:\nrun `mql --help` for a list of all available commands\n```\nusage: mql [options] command [args]...\n\noptions:\n  -v, --verbose\n  --debug-log-file\n  --help            show this message and exit.\n\ncommands:\n  commit-configs         commit yaml configs found in specified config...\n  contact                instructions for how to contact transform for help.\n  drop-cache             drop the mql cache.\n  drop-materialization   ***new*** create a new mql drop materialization...\n  get-dimension-values   list all dimension values that are queryable...\n  health-report          completes a health check on mql servers.\n  identify               identify the currently authenticated user.\n  latest-mql-image       outputs the latest mql server image details\n  list-dimensions        list all unique dimensions for the organization.\n  list-materializations  list the materializations for the organization...\n  list-metrics           list the metrics for the organization with their...\n  list-queries           retrieve queries from mql server\n  list-servers           lists available mql servers.\n  materialize            ***new*** create a new mql materialization...\n  pin-model              pin a model id from configs that are already...\n  ping                   perform basic http health check against...\n  query                  create a new mql query, polls for completion and...\n  setup                  guides user through cli setup.\n  stream-query-logs      retrieve queries from mql server\n  unpin-model            unpin a model id\n  validate-configs       validate yaml configs found in specified config...\n  version                print the current version of the mql cli.\n```\n#### examples:\n```\nmql query --metrics messages --dimensions ds --limit 10\nmql materialize --materialization-name name --start-time 2021-10-01 --end_time 2021-11-01\n```\n\n## python library\n#### examples:\n```python\n# instantiating the object manually\nfrom transform.mql import mqlclient\n\n\"\"\"\npass: \n  - api_key if you want to manually provide an api_key\n  - mql_server_url if you want to override the mql server\n\ndefault: values in ~/.transform/config.yml\n\"\"\"\nmql = mqlclient(api_key: optional[str], mql_server_url: optional[str])\n\ndf = mql.query(metrics=[\"messages\"], dimensions=[\"ds\"], where=\"is_thread\")\n```\n```python\n# if authentication already exists in config\nfrom transform import mql\n\ndf = mql.query(metrics=[\"messages\"], dimensions=[\"ds\"], where=\"is_thread\")\n```\n## api references\nsee more details at https://docs.transform.co/\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "transform",
  "package_url": "https://pypi.org/project/transform/",
  "project_url": "https://pypi.org/project/transform/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/transform/1.4.3/",
  "requires_dist": [],
  "requires_python": ">=3.8",
  "summary": "transform mql client library",
  "version": "1.4.3",
  "releases": [],
  "developers": [
    "marco@transformdata.io",
    "transform_data"
  ],
  "kwds": "mql mql_server_url mqlclient config configs",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_transform",
  "homepage": "",
  "release_count": 80,
  "dependency_ids": []
}
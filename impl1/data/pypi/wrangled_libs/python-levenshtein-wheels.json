{
  "classifiers": [
    "license :: osi approved :: gnu general public license v2 or later (gplv2+)",
    "programming language :: c",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "programming language :: python :: implementation :: cpython"
  ],
  "description": ".. contents ::\n\nintroduction\n------------\n\nthis is a fork of `python-levenshtein <https://github.com/ztane/python-levenshtein>`_ which also\ndistributes binary wheels for a lot of operating systems and architectures:\n\n* windows (amd64 and x86)\n* osx (10.6+)\n* linux (x86_64 and i686)\n\nthe wheels can be installed with the ``python-levenshtein-wheels`` package on pypi.\n\nthe levenshtein python c extension module contains functions for fast\ncomputation of\n\n* levenshtein (edit) distance, and edit operations\n\n* string similarity\n\n* approximate median strings, and generally string averaging\n\n* string sequence and set similarity\n\nit supports both normal and unicode strings.\n\npython 2.2 or newer is required; python 3 is supported.\n\nstringmatcher.py is an example sequencematcher-like class built on the top of\nlevenshtein.  it misses some sequencematcher's functionality, and has some\nextra otoh.\n\nlevenshtein.c can be used as a pure c library, too.  you only have to define\nno_python preprocessor symbol (-dno_python) when compiling it.  the\nfunctionality is similar to that of the python extension.  no separate docs\nare provided yet, rtfs.  but they are not interchangeable:\n\n* c functions exported when compiling with -dno_python (see levenshtein.h)\n  are not exported when compiling as a python extension (and vice versa)\n\n* unicode character type used with -dno_python is wchar_t, python extension\n  uses py_unicode, they may be the same but don't count on it\n\ndocumentation\n--------------\n\n* `documentation for the current version <https://rawgit.com/ztane/python-levenshtein/master/docs/levenshtein.html>`_\n\ngendoc.sh generates html api documentation,\nyou probably want a selfcontained instead of includable version, so run\nin ``./gendoc.sh --selfcontained``.  it needs levenshtein already installed\nand genextdoc.py.\n\nlicense\n-------\n\nlevenshtein is free software; you can redistribute it and/or modify it\nunder the terms of the gnu general public license as published by the free\nsoftware foundation; either version 2 of the license, or (at your option)\nany later version.\n\nsee the file copying for the full text of gnu general public license version 2.\n\nhistory\n-------\n\nthis package was long missing from the python package index and available as source checkout only, but can now `be found on pypi again <https://pypi.python.org/pypi/python-levenshtein>`_.\n\nwe needed to restore this package for `go mobile for plone <http://webandmobile.mfabrik.com>`_\nand `pywurfl <http://celljam.net/>`_ projects which depend on this.\n\nsource code\n-----------\n\n* http://github.com/ztane/python-levenshtein/\n\nauthors\n-------\n\n* maintainer: `toby harradine <me@tobyharradine.id.au>`\n\n* python 3 compatibility: esa m\u00e4\u00e4tt\u00e4\n\n* jonatas cd: fixed documentation generation\n\n* previous maintainers: `antti haapala <antti@haapala.name>`, `mikko ohtamaa <http://opensourcehacker.com>`_\n\n* original code: david necas (yeti) <yeti at physics.muni.cz>\n\n============\n changelog\n============\n\n0.13.0\n------\n\n* distributed with wheels.\n\n0.12.0\n------\n\n* fixed a bug in stringmatcher.stringmatcher.get_matching_blocks /\n  extract_editops for python 3; now allow only `str` editops on\n  both python 2 and python 3, for simpler and working code.\n\n* added documentation in the source distribution and in git\n\n* fixed the package layout: renamed the .so/.dll to _levenshtein,\n  and made it reside inside a package, along with the stringmatcher\n  class.\n\n* fixed spelling errors.\n\n0.11.2\n------\n\n* fixed a bug in setup.py: installation would fail on python 3 if the locale\n  did not specify utf-8 charset (felix yan).\n\n* added copying, stringmatcher.py, gendoc.sh and news in manifest.in, as they\n  were missing from source distributions.\n\n0.11.1\n------\n\n* added levenshtein.h to manifest.in\n\n0.11.0\n------\n\n* python 3 support, maintainership passed to antti haapala\n\n0.10.1 - 0.10.2\n---------------\n\n* made python-lehvenstein git compatible and use setuptools for pypi upload\n\n* created history.txt and made readme rest compatible",
  "docs_url": null,
  "keywords": "string levenshtein comparison edit-distance",
  "license": "gpl",
  "name": "python-levenshtein-wheels",
  "package_url": "https://pypi.org/project/python-Levenshtein-wheels/",
  "project_url": "https://pypi.org/project/python-Levenshtein-wheels/",
  "project_urls": {
    "Homepage": "http://github.com/Tobotimus/python-Levenshtein"
  },
  "release_url": "https://pypi.org/project/python-Levenshtein-wheels/0.13.2/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python extension for computing string edit distances and similarities.",
  "version": "0.13.2",
  "releases": [],
  "developers": [
    "antti@haapala.name",
    "antti_haapala",
    "me@tobyharradine.id.au",
    "tobotimus"
  ],
  "kwds": "levenshtein _levenshtein stringmatcher py_unicode sequencematcher",
  "license_kwds": "gpl",
  "libtype": "pypi",
  "id": "pypi_python_levenshtein_wheels",
  "homepage": "http://github.com/tobotimus/python-levenshtein",
  "release_count": 3,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# hexbytes\n\n[![join the conversation on discord](https://img.shields.io/discord/809793915578089484?color=blue&label=chat&logo=discord&logocolor=white)](https://discord.gg/ghryrvpb84)\n[![build status](https://circleci.com/gh/ethereum/hexbytes.svg?style=shield)](https://circleci.com/gh/ethereum/hexbytes)\n[![pypi version](https://badge.fury.io/py/hexbytes.svg)](https://badge.fury.io/py/hexbytes)\n[![python versions](https://img.shields.io/pypi/pyversions/hexbytes.svg)](https://pypi.python.org/pypi/hexbytes)\n[![docs build](https://readthedocs.org/projects/hexbytes/badge/?version=latest)](https://hexbytes.readthedocs.io/en/latest/?badge=latest)\n\npython `bytes` subclass that decodes hex, with a readable console output\n\nread more in the [documentation on readthedocs](https://hexbytes.readthedocs.io/). [view the change log](https://hexbytes.readthedocs.io/en/latest/release_notes.html).\n\n## quickstart\n\n```sh\npythom -m pip install hexbytes\n```\n\n```py\n# convert from bytes to a prettier representation at the console\n>>> hexbytes(b\"\\x03\\x08wf\\xbfh\\xe7\\x86q\\xd1\\xeacj\\xe0\\x87\\xdat\\xa1'a\\xda\\xc0 \\x01\\x1a\\x9e\\xdd\\xc4\\x90\\x0b\\xf1;\")\nhexbytes('0x03087766bf68e78671d1ea436ae087da74a12761dac020011a9eddc4900bf13b')\n\n# hexbytes accepts the hex string representation as well, ignoring case and 0x prefixes\n>>> hb = hexbytes('03087766bf68e78671d1ea436ae087da74a12761dac020011a9eddc4900bf13b')\nhexbytes('0x03087766bf68e78671d1ea436ae087da74a12761dac020011a9eddc4900bf13b')\n\n# get the first byte:\n>>> hb[0]\n3\n\n# show how many bytes are in the value\n>>> len(hb)\n32\n\n# cast back to the basic `bytes` type\n>>> bytes(hb)\nb\"\\x03\\x08wf\\xbfh\\xe7\\x86q\\xd1\\xeacj\\xe0\\x87\\xdat\\xa1'a\\xda\\xc0 \\x01\\x1a\\x9e\\xdd\\xc4\\x90\\x0b\\xf1;\"\n```\n\n## developer setup\n\nif you would like to hack on hexbytes, please check out the [snake charmers\ntactical manual](https://github.com/ethereum/snake-charmers-tactical-manual)\nfor information on how we do:\n\n- testing\n- pull requests\n- documentation\n\nwe use [pre-commit](https://pre-commit.com/) to maintain consistent code style. once\ninstalled, it will run automatically with every commit. you can also run it manually\nwith `make lint`. if you need to make a commit that skips the `pre-commit` checks, you\ncan do so with `git commit --no-verify`.\n\n### development environment setup\n\nyou can set up your dev environment with:\n\n```sh\ngit clone git@github.com:carver/hexbytes.git\ncd hexbytes\nvirtualenv -p python3 venv\n. venv/bin/activate\npython -m pip install -e \".[dev]\"\npre-commit install\n```\n\n### release setup\n\nto release a new version:\n\n```sh\nmake release bump=$$version_part_to_bump$$\n```\n\n#### how to bumpversion\n\nthe version format for this repo is `{major}.{minor}.{patch}` for stable, and\n`{major}.{minor}.{patch}-{stage}.{devnum}` for unstable (`stage` can be alpha or beta).\n\nto issue the next version in line, specify which part to bump,\nlike `make release bump=minor` or `make release bump=devnum`. this is typically done from the\nmaster branch, except when releasing a beta (in which case the beta is released from master,\nand the previous stable branch is released from said branch).\n\nif you are in a beta version, `make release bump=stage` will switch to a stable.\n\nto issue an unstable version when the current version is stable, specify the\nnew version explicitly, like `make release bump=\"--new-version 4.0.0-alpha.1 devnum\"`\n",
  "docs_url": null,
  "keywords": "ethereum",
  "license": "mit",
  "name": "hexbytes",
  "package_url": "https://pypi.org/project/hexbytes/",
  "project_url": "https://pypi.org/project/hexbytes/",
  "project_urls": {
    "Homepage": "https://github.com/ethereum/hexbytes"
  },
  "release_url": "https://pypi.org/project/hexbytes/1.0.0/",
  "requires_dist": [
    "build >=0.9.0 ; extra == 'dev'",
    "bumpversion >=0.5.3 ; extra == 'dev'",
    "ipython ; extra == 'dev'",
    "pre-commit >=3.4.0 ; extra == 'dev'",
    "tox >=4.0.0 ; extra == 'dev'",
    "twine ; extra == 'dev'",
    "wheel ; extra == 'dev'",
    "sphinx >=5.3.0 ; extra == 'dev'",
    "sphinx-rtd-theme >=1.0.0 ; extra == 'dev'",
    "towncrier <22,>=21 ; extra == 'dev'",
    "eth-utils >=2.0.0 ; extra == 'dev'",
    "hypothesis <=6.31.6,>=3.44.24 ; extra == 'dev'",
    "pytest >=7.0.0 ; extra == 'dev'",
    "pytest-xdist >=2.4.0 ; extra == 'dev'",
    "sphinx >=5.3.0 ; extra == 'docs'",
    "sphinx-rtd-theme >=1.0.0 ; extra == 'docs'",
    "towncrier <22,>=21 ; extra == 'docs'",
    "eth-utils >=2.0.0 ; extra == 'test'",
    "hypothesis <=6.31.6,>=3.44.24 ; extra == 'test'",
    "pytest >=7.0.0 ; extra == 'test'",
    "pytest-xdist >=2.4.0 ; extra == 'test'"
  ],
  "requires_python": ">=3.8, <4",
  "summary": "hexbytes: python `bytes` subclass that decodes hex, with a readable console output",
  "version": "1.0.0",
  "releases": [],
  "developers": [
    "snakecharmers@ethereum.org",
    "the_ethereum_foundation"
  ],
  "kwds": "hexbytes hex python3 xe0 pyversions",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_hexbytes",
  "homepage": "https://github.com/ethereum/hexbytes",
  "release_count": 12,
  "dependency_ids": [
    "pypi_build",
    "pypi_bumpversion",
    "pypi_eth_utils",
    "pypi_hypothesis",
    "pypi_ipython",
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_pytest_xdist",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_towncrier",
    "pypi_tox",
    "pypi_twine",
    "pypi_wheel"
  ]
}
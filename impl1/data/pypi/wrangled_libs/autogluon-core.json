{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: customer service",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: financial and insurance industry",
    "intended audience :: healthcare industry",
    "intended audience :: science/research",
    "intended audience :: telecommunications industry",
    "license :: osi approved :: apache software license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: scientific/engineering :: image recognition",
    "topic :: scientific/engineering :: information analysis",
    "topic :: software development"
  ],
  "description": "\n\n\n<div align=\"left\">\n  <img src=\"https://user-images.githubusercontent.com/16392542/77208906-224aa500-6aba-11ea-96bd-e81806074030.png\" width=\"350\">\n</div>\n\n## automl for image, text, time series, and tabular data\n\n[![latest release](https://img.shields.io/github/v/release/autogluon/autogluon)](https://github.com/autogluon/autogluon/releases)\n[![continuous integration](https://github.com/autogluon/autogluon/actions/workflows/continuous_integration.yml/badge.svg)](https://github.com/autogluon/autogluon/actions/workflows/continuous_integration.yml)\n[![platform tests](https://github.com/autogluon/autogluon/actions/workflows/platform_tests-command.yml/badge.svg?event=schedule)](https://github.com/autogluon/autogluon/actions/workflows/platform_tests-command.yml)\n[![python versions](https://img.shields.io/badge/python-3.8%20%7c%203.9%20%7c%203.10%20%7c%203.11-blue)](https://pypi.org/project/autogluon/)\n[![github license](https://img.shields.io/badge/license-apache_2.0-blue.svg)](./license)\n[![downloads](https://pepy.tech/badge/autogluon/month)](https://pepy.tech/project/autogluon)\n[![](https://img.shields.io/discord/1043248669505368144?logo=discord&style=flat)](https://discord.gg/wjumjqac2n)\n[![twitter](https://img.shields.io/twitter/follow/autogluon?style=social)](https://twitter.com/autogluon)\n\n[install instructions](https://auto.gluon.ai/stable/install.html) | documentation ([stable](https://auto.gluon.ai/stable/index.html) | [latest](https://auto.gluon.ai/dev/index.html))\n\nautogluon automates machine learning tasks enabling you to easily achieve strong predictive performance in your applications.  with just a few lines of code, you can train and deploy high-accuracy machine learning and deep learning models on image, text, time series, and tabular data.\n\n## example\n\n```python\n# first install package from terminal:\n# pip install -u pip\n# pip install -u setuptools wheel\n# pip install autogluon  # autogluon==1.0.0\n\nfrom autogluon.tabular import tabulardataset, tabularpredictor\ntrain_data = tabulardataset('https://autogluon.s3.amazonaws.com/datasets/inc/train.csv')\ntest_data = tabulardataset('https://autogluon.s3.amazonaws.com/datasets/inc/test.csv')\npredictor = tabularpredictor(label='class').fit(train_data, time_limit=120)  # fit models for 120s\nleaderboard = predictor.leaderboard(test_data)\n```\n\n| autogluon task      |                                                                                quickstart                                                                                |                                                                                api                                                                                |\n|:--------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------:|\n| tabularpredictor    | [![quick start](https://img.shields.io/static/v1?label=&message=tutorial&color=grey)](https://auto.gluon.ai/stable/tutorials/tabular/tabular-quick-start.html) |                 [![api](https://img.shields.io/badge/api-reference-blue.svg)](https://auto.gluon.ai/stable/api/autogluon.tabular.tabularpredictor.html)                 |\n| multimodalpredictor | [![quick start](https://img.shields.io/static/v1?label=&message=tutorial&color=grey)](https://auto.gluon.ai/stable/tutorials/multimodal/multimodal_prediction/multimodal-quick-start.html)            | [![api](https://img.shields.io/badge/api-reference-blue.svg)](https://auto.gluon.ai/stable/api/autogluon.multimodal.multimodalpredictor.html) |\n| timeseriespredictor | [![quick start](https://img.shields.io/static/v1?label=&message=tutorial&color=grey)](https://auto.gluon.ai/stable/tutorials/timeseries/forecasting-quick-start.html)            | [![api](https://img.shields.io/badge/api-reference-blue.svg)](https://auto.gluon.ai/stable/api/autogluon.timeseries.timeseriespredictor.html) |\n\n## resources\n\nsee the [autogluon website](https://auto.gluon.ai/stable/index.html) for documentation and instructions on:\n- [installing autogluon](https://auto.gluon.ai/stable/index.html#installation)\n- [learning with tabular data](https://auto.gluon.ai/stable/tutorials/tabular/tabular-quick-start.html)\n  - [tips to maximize accuracy](https://auto.gluon.ai/stable/tutorials/tabular/tabular-essentials.html#maximizing-predictive-performance) (if **benchmarking**, make sure to run `fit()` with argument `presets='best_quality'`).\n\n- [learning with multimodal data (image, text, etc.)](https://auto.gluon.ai/stable/tutorials/multimodal/multimodal_prediction/multimodal-quick-start.html)\n- [learning with time series data](https://auto.gluon.ai/stable/tutorials/timeseries/forecasting-quick-start.html)\n\nrefer to the [autogluon roadmap](https://github.com/autogluon/autogluon/blob/master/roadmap.md) for details on upcoming features and releases.\n\n### scientific publications\n- [autogluon-tabular: robust and accurate automl for structured data](https://arxiv.org/pdf/2003.06505.pdf) (*arxiv*, 2020)\n- [fast, accurate, and simple models for tabular data via augmented distillation](https://proceedings.neurips.cc/paper/2020/hash/62d75fb2e3075506e8837d8f55021ab1-abstract.html) (*neurips*, 2020)\n- [multimodal automl on structured tables with text fields](https://openreview.net/pdf?id=ohaivool7vl) (*icml automl workshop*, 2021)\n\n### articles\n- [autogluon for tabular data: 3 lines of code to achieve top 1% in kaggle competitions](https://aws.amazon.com/blogs/opensource/machine-learning-with-autogluon-an-open-source-automl-library/) (*aws open source blog*, mar 2020)\n- [accurate image classification in 3 lines of code with autogluon](https://medium.com/@zhanghang0704/image-classification-on-kaggle-using-autogluon-fc896e74d7e8) (*medium*, feb 2020)\n- [autogluon overview & example applications](https://towardsdatascience.com/autogluon-deep-learning-automl-5cdb4e2388ec?source=friends_link&sk=e3d17d06880ac714e47f07f39178fdf2) (*towards data science*, dec 2019)\n\n### hands-on tutorials\n- [practical automated machine learning with tabular, text, and image data (kdd 2020)](https://jwmueller.github.io/kdd20-tutorial/)\n\n### train/deploy autogluon in the cloud\n- [autogluon-tabular on aws marketplace](https://aws.amazon.com/marketplace/pp/prodview-n4zf5pmjt7ism)\n- [autogluon-tabular on amazon sagemaker](https://github.com/aws/amazon-sagemaker-examples/tree/master/advanced_functionality/autogluon-tabular-containers)\n- [autogluon deep learning containers](https://github.com/aws/deep-learning-containers/blob/master/available_images.md#autogluon-training-containers)\n\n## contributing to autogluon\n\nwe are actively accepting code contributions to the autogluon project. if you are interested in contributing to autogluon, please read the [contributing guide](https://github.com/autogluon/autogluon/blob/master/contributing.md) to get started.\n\n## citing autogluon\n\nif you use autogluon in a scientific publication, please cite the following paper:\n\nerickson, nick, et al. [\"autogluon-tabular: robust and accurate automl for structured data.\"](https://arxiv.org/abs/2003.06505) arxiv preprint arxiv:2003.06505 (2020).\n\nbibtex entry:\n\n```bibtex\n@article{agtabular,\n  title={autogluon-tabular: robust and accurate automl for structured data},\n  author={erickson, nick and mueller, jonas and shirkov, alexander and zhang, hang and larroy, pedro and li, mu and smola, alexander},\n  journal={arxiv preprint arxiv:2003.06505},\n  year={2020}\n}\n```\n\nif you are using autogluon tabular's model distillation functionality, please cite the following paper:\n\nfakoor, rasool, et al. [\"fast, accurate, and simple models for tabular data via augmented distillation.\"](https://proceedings.neurips.cc/paper/2020/hash/62d75fb2e3075506e8837d8f55021ab1-abstract.html) advances in neural information processing systems 33 (2020).\n\nbibtex entry:\n\n```bibtex\n@article{agtabulardistill,\n  title={fast, accurate, and simple models for tabular data via augmented distillation},\n  author={fakoor, rasool and mueller, jonas w and erickson, nick and chaudhari, pratik and smola, alexander j},\n  journal={advances in neural information processing systems},\n  volume={33},\n  year={2020}\n}\n```\n\nif you use autogluon's multimodal text+tabular functionality in a scientific publication, please cite the following paper:\n\nshi, xingjian, et al. [\"multimodal automl on structured tables with text fields.\"](https://openreview.net/forum?id=ohaivool7vl) 8th icml workshop on automated machine learning (automl). 2021.\n\nbibtex entry:\n\n```bibtex\n@inproceedings{agmultimodaltext,\n  title={multimodal automl on structured tables with text fields},\n  author={shi, xingjian and mueller, jonas and erickson, nick and li, mu and smola, alex},\n  booktitle={8th icml workshop on automated machine learning (automl)},\n  year={2021}\n}\n```\n\nif you use autogluon's time series forecasting functionality in a scientific publication, please cite the following paper:\n```bibtex\n@inproceedings{agtimeseries,\n  title={{autogluon-timeseries}: {automl} for probabilistic time series forecasting},\n  author={shchur, oleksandr and turkmen, caner and erickson, nick and shen, huibin and shirkov, alexander and hu, tony and wang, yuyang},\n  booktitle={international conference on automated machine learning},\n  year={2023}\n}\n```\n\n\n## autogluon for hyperparameter optimization\n\nautogluon's state-of-the-art tools for hyperparameter optimization, such as asha, hyperband, bayesian optimization and bohb have moved to the stand-alone package [syne-tune](https://github.com/awslabs/syne-tune).\n\nto learn more, checkout our paper [\"model-based asynchronous hyperparameter and neural architecture search\"](https://arxiv.org/abs/2003.10865) arxiv preprint arxiv:2003.10865 (2020).\n\n```bibtex\n@article{abohb,\n  title={model-based asynchronous hyperparameter and neural architecture search},\n  author={klein, aaron and tiao, louis and lienart, thibaut and archambeau, cedric and seeger, matthias},\n  journal={arxiv preprint arxiv:2003.10865},\n  year={2020}\n}\n```\n\n\n## license\n\nthis library is licensed under the apache 2.0 license.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "autogluon.core",
  "package_url": "https://pypi.org/project/autogluon.core/",
  "project_url": "https://pypi.org/project/autogluon.core/",
  "project_urls": {
    "Bug Reports": "https://github.com/autogluon/autogluon/issues",
    "Contribute!": "https://github.com/autogluon/autogluon/blob/master/CONTRIBUTING.md",
    "Documentation": "https://auto.gluon.ai",
    "Homepage": "https://github.com/autogluon/autogluon",
    "Source": "https://github.com/autogluon/autogluon/"
  },
  "release_url": "https://pypi.org/project/autogluon.core/1.0.0/",
  "requires_dist": [
    "numpy <1.29,>=1.21",
    "scipy <1.13,>=1.5.4",
    "scikit-learn <1.5,>=1.3.0",
    "networkx <4,>=3.0",
    "pandas <2.2.0,>=2.0.0",
    "tqdm <5,>=4.38",
    "requests",
    "matplotlib",
    "boto3 <2,>=1.10",
    "autogluon.common ==1.0.0",
    "ray[default] <2.7,>=2.6.3 ; extra == 'all'",
    "ray[default,tune] <2.7,>=2.6.3 ; extra == 'all'",
    "async-timeout ; extra == 'all'",
    "hyperopt <0.2.8,>=0.2.7 ; extra == 'all'",
    "ray[default] <2.7,>=2.6.3 ; extra == 'ray'",
    "async-timeout ; extra == 'ray'",
    "ray[default,tune] <2.7,>=2.6.3 ; extra == 'raytune'",
    "hyperopt <0.2.8,>=0.2.7 ; extra == 'raytune'",
    "pytest ; extra == 'tests'",
    "types-requests ; extra == 'tests'",
    "types-setuptools ; extra == 'tests'",
    "pytest-mypy ; extra == 'tests'"
  ],
  "requires_python": ">=3.8, <3.12",
  "summary": "automl for image, text, and tabular data",
  "version": "1.0.0",
  "releases": [],
  "developers": [
    "autogluon_community"
  ],
  "kwds": "automl autogluon auto html tabular",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_autogluon.core",
  "homepage": "https://github.com/autogluon/autogluon",
  "release_count": 1183,
  "dependency_ids": [
    "pypi_async_timeout",
    "pypi_autogluon.common",
    "pypi_boto3",
    "pypi_hyperopt",
    "pypi_matplotlib",
    "pypi_networkx",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pytest",
    "pypi_pytest_mypy",
    "pypi_ray",
    "pypi_requests",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_tqdm",
    "pypi_types_requests",
    "pypi_types_setuptools"
  ]
}
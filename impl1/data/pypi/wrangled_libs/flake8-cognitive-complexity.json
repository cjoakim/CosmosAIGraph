{
  "classifiers": [
    "environment :: console",
    "framework :: flake8",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: software development :: documentation",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: quality assurance"
  ],
  "description": "# flake8-cognitive-complexity\n\n[![build status](https://travis-ci.org/melevir/flake8-cognitive-complexity.svg?branch=master)](https://travis-ci.org/melevir/flake8-cognitive-complexity)\n[![maintainability](https://api.codeclimate.com/v1/badges/579738d149e489c631a6/maintainability)](https://codeclimate.com/github/melevir/flake8-cognitive-complexity/maintainability)\n[![test coverage](https://api.codeclimate.com/v1/badges/579738d149e489c631a6/test_coverage)](https://codeclimate.com/github/melevir/flake8-cognitive-complexity/test_coverage)\n[![pypi version](https://badge.fury.io/py/flake8-cognitive-complexity.svg)](https://badge.fury.io/py/flake8-cognitive-complexity)\n![pypi - python version](https://img.shields.io/pypi/pyversions/flake8-cognitive-complexity)\n\nan extension for flake8 that validates cognitive functions complexity.\n\ncognitive complexity is analog of cyclomatic complexity, that measure\nhow difficult to understand piece of code. introduced by [g. ann campbell](https://github.com/ganncamp)\nand currently used by sonarsource, codeclimate and others.\nyou can find more readings about cognitive complexity in\n[cognitive-complexity readme file](https://github.com/melevir/cognitive_complexity/blob/master/readme.md#what-is-cognitive-complexity).\n\ndefault complexity is 7, can be configured via `--max-cognitive-complexity` option.\n\n## installation\n\n```terminal\npip install flake8-cognitive-complexity\n```\n\n## example\n\n```python\ndef f(a, b):\n    if a:\n        for i in range(b):\n            if b:\n                return 1\n```\n\nusage:\n\n```terminal\n$ flake8 --max-cognitive-complexity=3 test.py\ntext.py:1:5: ccr001 cognitive complexity is too high (6 > 3)\n```\n\ntested on python 3.7.x and flake8 3.7.8.\n\n## error codes\n\n| error code |                     description          |\n|:----------:|:----------------------------------------:|\n|   ccr001   | cognitive complexity is too high (x > y) |",
  "docs_url": null,
  "keywords": "flake8",
  "license": "mit",
  "name": "flake8-cognitive-complexity",
  "package_url": "https://pypi.org/project/flake8-cognitive-complexity/",
  "project_url": "https://pypi.org/project/flake8-cognitive-complexity/",
  "project_urls": {
    "Homepage": "https://github.com/Melevir/flake8-cognitive-complexity"
  },
  "release_url": "https://pypi.org/project/flake8-cognitive-complexity/0.1.0/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "an extension for flake8 that validates cognitive functions complexity",
  "version": "0.1.0",
  "releases": [],
  "developers": [
    "ilya_lebedev",
    "melevir@gmail.com"
  ],
  "kwds": "flake8 cognitive_complexity maintainability test_coverage build",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_flake8_cognitive_complexity",
  "homepage": "https://github.com/melevir/flake8-cognitive-complexity",
  "release_count": 3,
  "dependency_ids": []
}
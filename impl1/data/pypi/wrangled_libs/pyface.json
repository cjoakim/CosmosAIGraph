{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "==========================================\npyface: traits-capable windowing framework\n==========================================\n\nthe pyface project contains a toolkit-independent gui abstraction layer,\nwhich is used to support the \"visualization\" features of the enthought tool\nsuite libraries.  pyface contains traits-aware wrappers of standard gui\nelements such as windows, dialogs and fields, together with the \"tasks\"\napplication framework which provides a rich gui experience with dock panes,\ntabbed editors, and so forth.  this permits you to write cross-platform\ninteractive gui code without needing to use the underlying gui backend.\n\nthe following gui backends are supported:\n\n- pyside2 (stable) and pyside6 (experimental)\n- pyqt5 (stable) and pyqt6 (in development)\n- wxpython 4 (experimental)\n\nexample\n-------\n\nthe following code creates a window with a simple python shell:\n\n..  code-block:: python\n\n    from pyface.api import applicationwindow, gui, ipythonshell\n\n    class mainwindow(applicationwindow):\n        \"\"\" the main application window. \"\"\"\n\n        #: the pythonshell that forms the contents of the window\n        shell = instance(ipythonshell, allow_none=false)\n\n        def _create_contents(self, parent):\n            \"\"\" create the editor. \"\"\"\n            self.shell.create(parent)\n            return self.shell.control\n\n        def destroy(self):\n            self.shell.destroy()\n            super().destroy()\n\n        def _shell_default(self):\n            from pyface.api import pythonshell\n            return pythonshell()\n\n    # application entry point.\n    if __name__ == \"__main__\":\n        # create the gui.\n        gui = gui()\n\n        # create and open the main window.\n        window = mainwindow(title=\"python shell\", size=(640, 480))\n        window.open()\n\n        # start the gui event loop!\n        gui.start_event_loop()\n\n..  image:: https://raw.github.com/enthought/pyface/main/shell_window.png\n    :alt: a pyface gui window containing a python shell.\n\ninstallation\n------------\n\npyface is a pure python package.  in most cases pyface will be installable\nusing a simple ``pip install`` command.\n\nto install with a backend, choose one of the following, as appropriate:\n\n..  code-block:: console\n\n    $ pip install pyface[pyside2]\n\n    $ pip install pyface[pyside6]\n\n    $ pip install pyface[pyqt5]\n\n    $ pip install pyface[wx]\n\nsome optional functionality uses ``pillow`` and ``numpy`` and these can be\ninstalled using optional dependencies:\n\n..  code-block:: console\n\n    $ pip install pyface[pillow]\n\n    $ pip install pyface[numpy]\n\nfor running tests a few more packages are required:\n\n..  code-block:: console\n\n    $ pip install pyface[test]\n\ndocumentation\n-------------\n\n* `online documentation <http://docs.enthought.com/pyface/>`_.\n\n* `api documentation <http://docs.enthought.com/pyface/api/pyface.html>`_.\n\n.. end_of_long_description\n\ndeveloping pyface\n-----------------\n\nthe `etstool.py` script provides utilities to assist developers wanting to work\non pyface.  to use it, you will need to have the source checked out via git,\nenthought's `edm <http://docs.enthought.com/edm/>`__ distribution manager, and\na minimal environment containing at least the\n`click <http://click.pocoo.org/>`__ library.\n\nyou can then follow the instructions in ``etstool.py``.  in particular:\n\n- use `etstool.py install` to create environments for particular toolkits and\n  runtimes\n- use `etstool.py shell` to activate those environments\n- use `etstool.py test` to run the tests in those environments\n- use `etstool.py flake8` to perform style checks\n- use `etstool.py docs` to build the documentation\n- use `etstool.py test-all` to run the tests across all supported runtimes and toolkits\n\nlicense\n-------\n\npyface source code is licensed with a bsd-style license.  some default images\nare licensed with other licenses. see the license files for further\ninformation.\n",
  "docs_url": null,
  "keywords": "gui,traits,traitsui,pyqt,pyside,wxpython",
  "license": "this software is osi certified open source software. osi certified is a certification mark of the open source initiative.  copyright (c) 2006, enthought, inc. all rights reserved.  redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  * redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * neither the name of enthought, inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.  this software is provided by the copyright holders and contributors \"as is\" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. in no event shall the copyright owner or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage. ",
  "name": "pyface",
  "package_url": "https://pypi.org/project/pyface/",
  "project_url": "https://pypi.org/project/pyface/",
  "project_urls": {
    "docs": "https://docs.enthought.com/pyface",
    "source": "https://github.com/enthought/pyface"
  },
  "release_url": "https://pypi.org/project/pyface/8.0.0/",
  "requires_dist": [
    "traits (>=6.2)",
    "importlib-metadata (>=3.6) ; python_version < \"3.10\"",
    "importlib-resources (>=1.1.0) ; python_version < \"3.9\"",
    "enthought-sphinx-theme ; extra == 'docs'",
    "sphinx ; extra == 'docs'",
    "sphinx-copybutton ; extra == 'docs'",
    "traitsui ; extra == 'examples'",
    "numpy ; extra == 'examples'",
    "numpy ; extra == 'numpy'",
    "pillow ; extra == 'pillow'",
    "pyqt5 ; extra == 'pyqt5'",
    "pygments ; extra == 'pyqt5'",
    "pyqt6 ; extra == 'pyqt6'",
    "pygments ; extra == 'pyqt6'",
    "pyside2 ; extra == 'pyside2'",
    "pygments ; extra == 'pyside2'",
    "pyside6 ; extra == 'pyside6'",
    "pygments ; extra == 'pyside6'",
    "packaging ; extra == 'test'",
    "traitsui ; extra == 'traitsui'",
    "wxPython (>=4) ; extra == 'wx'",
    "numpy ; extra == 'wx'"
  ],
  "requires_python": ">=3.7",
  "summary": "traits-capable windowing framework",
  "version": "8.0.0",
  "releases": [],
  "developers": [
    "info@enthought.com"
  ],
  "kwds": "gui pyface pyqt pyqt5 applicationwindow",
  "license_kwds": "osi copyright disclaimer software disclaimed",
  "libtype": "pypi",
  "id": "pypi_pyface",
  "homepage": "",
  "release_count": 28,
  "dependency_ids": [
    "pypi_enthought_sphinx_theme",
    "pypi_importlib_metadata",
    "pypi_importlib_resources",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pillow",
    "pypi_pygments",
    "pypi_pyqt5",
    "pypi_pyqt6",
    "pypi_pyside2",
    "pypi_pyside6",
    "pypi_sphinx",
    "pypi_sphinx_copybutton",
    "pypi_traits",
    "pypi_traitsui",
    "pypi_wxpython"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "environment :: web environment",
    "framework :: sphinx :: extension",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "topic :: documentation",
    "topic :: utilities"
  ],
  "description": "plantuml for sphinx\n===================\n\ninstallation\n------------\n\n.. code-block::\n\n   pip install sphinxcontrib-plantuml\n\nusage\n-----\n\nadd ``sphinxcontrib.plantuml`` to your extensions list in your ``conf.py``:\n\n\n.. code-block:: python\n\n   extensions = [\n       'sphinxcontrib.plantuml',\n   ]\n\nyou may also need to specify the plantuml command in your **conf.py**:\n\n.. code-block:: python\n\n   plantuml = 'java -jar /path/to/plantuml.jar'\n\ninstead, you can install a wrapper script in your path:\n\n.. code-block:: console\n\n   % cat <<eot > /usr/local/bin/plantuml\n   #!/bin/sh -e\n   java -jar /path/to/plantuml.jar \"$@\"\n   eot\n   % chmod +x /usr/local/bin/plantuml\n\nthen, write plantuml text under the ``.. uml::`` directive::\n\n    .. uml::\n\n       alice -> bob: hi!\n       alice <- bob: how are you?\n\nor specify path to an external plantuml file::\n\n    .. uml:: external.uml\n\nyou can specify ``height``, ``width``, ``scale`` and ``align``::\n\n    .. uml::\n       :scale: 50 %\n       :align: center\n\n       foo <|-- bar\n\nyou can also specify a caption::\n\n    .. uml::\n       :caption: caption with **bold** and *italic*\n       :width: 50mm\n\n       foo <|-- bar\n\nfor details, please see plantuml_ documentation.\n\n.. _plantuml: http://plantuml.com/\n\nconfiguration\n-------------\n\nplantuml\n  path to plantuml executable. (default: 'plantuml')\n\nplantuml_output_format\n  type of output image for html renderer. (default: 'png')\n\n  :png: generate only .png inside </img>\n  :svg: generate .svg inside <object/> with .png inside </img> as a fallback\n  :svg_img: generate only .svg inside <img/> (`browser support <svg_img_>`_)\n  :svg_obj: generate only .svg inside <object/> (`browser support <svg_obj_>`_)\n  :none: do not generate any images (ignore uml directive)\n\n  when svg is inside <object/> it will always render full size, possibly bigger\n  than the container. when svg is inside <img/> it will respect container size\n  and scale if necessary.\n\nplantuml_latex_output_format\n  type of output image for latex renderer. (default: 'png')\n\n  :eps: generate .eps (not supported by `pdflatex`)\n  :pdf: generate .eps and convert it to .pdf (requires `epstopdf`)\n  :png: generate .png\n  :tikz: generate .latex in the tikz format\n  :none: do not generate any images (ignore uml directive)\n\n  because embedded png looks pretty bad, it is recommended to choose `pdf`\n  for `pdflatex` or `eps` for `platex`.\n\nplantuml_epstopdf\n  path to epstopdf executable. (default: 'epstopdf')\n\n.. _svg_img: https://caniuse.com/svg-img\n.. _svg_obj: https://caniuse.com/svg\n\nplantuml_syntax_error_image\n  should plantuml generate images with render errors. (default: false)\n\nplantuml_cache_path\n  directory where image cache is stored. (default: '_plantuml')\n\nplantuml_batch_size\n  **(experimental)**\n  run plantuml command per the specified number of images. (default: 1)\n\n  if enabled, plantuml documents will be first written to the cache directory,\n  and rendered in batches. this eliminates bootstrapping overhead of java\n  runtime and allows plantuml to leverage multiple cpu cores.\n\n  to enable batch rendering, set the size to 100-1000.\n\ndeveloping\n----------\n\ninstall the python test dependencies with\n\n.. code-block::\n\n   pip install sphinxcontrib-plantuml[test]\n\nin addition the following non-python dependencies are required in order to run the tests:\n\n* `latexmk`\n* `plantuml`\n* `texlive`\n* `texlive-font-utils`\n* `texlive-latex-extra`\n\nthe tests can be executed using `pytest`\n\n.. code-block::\n\n    pytest\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "sphinxcontrib-plantuml",
  "package_url": "https://pypi.org/project/sphinxcontrib-plantuml/",
  "project_url": "https://pypi.org/project/sphinxcontrib-plantuml/",
  "project_urls": {
    "Download": "https://pypi.python.org/pypi/sphinxcontrib-plantuml",
    "Homepage": "https://github.com/sphinx-contrib/plantuml/"
  },
  "release_url": "https://pypi.org/project/sphinxcontrib-plantuml/0.27/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "sphinx \"plantuml\" extension",
  "version": "0.27",
  "releases": [],
  "developers": [
    "yuya@tcha.org",
    "yuya_nishihara"
  ],
  "kwds": "sphinxcontrib sphinx plantuml_syntax_error_image plantuml_cache_path plantuml_latex_output_format",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_sphinxcontrib_plantuml",
  "homepage": "https://github.com/sphinx-contrib/plantuml/",
  "release_count": 34,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: gnu general public license v3 or later (gplv3+)",
    "operating system :: os independent",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: games/entertainment :: board games",
    "topic :: games/entertainment :: turn based strategy",
    "topic :: software development :: libraries :: python modules",
    "typing :: typed"
  ],
  "description": "python-chess: a chess library for python\n========================================\n\n.. image:: https://github.com/niklasf/python-chess/workflows/test/badge.svg\n    :target: https://github.com/niklasf/python-chess/actions\n    :alt: test status\n\n.. image:: https://badge.fury.io/py/chess.svg\n    :target: https://pypi.python.org/pypi/chess\n    :alt: pypi package\n\n.. image:: https://readthedocs.org/projects/python-chess/badge/?version=v1.10.0\n    :target: https://python-chess.readthedocs.io/en/v1.10.0/\n    :alt: docs\n\n.. image:: https://badges.gitter.im/python-chess/community.svg\n    :target: https://gitter.im/python-chess/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\n    :alt: chat on gitter\n\nintroduction\n------------\n\npython-chess is a chess library for python, with move generation,\nmove validation, and support for common formats. this is the scholar's mate in\npython-chess:\n\n.. code:: python\n\n    >>> import chess\n\n    >>> board = chess.board()\n\n    >>> board.legal_moves\n    <legalmovegenerator at ... (nh3, nf3, nc3, na3, h3, g3, f3, e3, d3, c3, ...)>\n    >>> chess.move.from_uci(\"a8a1\") in board.legal_moves\n    false\n\n    >>> board.push_san(\"e4\")\n    move.from_uci('e2e4')\n    >>> board.push_san(\"e5\")\n    move.from_uci('e7e5')\n    >>> board.push_san(\"qh5\")\n    move.from_uci('d1h5')\n    >>> board.push_san(\"nc6\")\n    move.from_uci('b8c6')\n    >>> board.push_san(\"bc4\")\n    move.from_uci('f1c4')\n    >>> board.push_san(\"nf6\")\n    move.from_uci('g8f6')\n    >>> board.push_san(\"qxf7\")\n    move.from_uci('h5f7')\n\n    >>> board.is_checkmate()\n    true\n\n    >>> board\n    board('r1bqkb1r/pppp1qpp/2n2n2/4p3/2b1p3/8/pppp1ppp/rnb1k1nr b kqkq - 0 4')\n\ninstalling\n----------\n\nrequires python 3.7+. download and install the latest release:\n\n::\n\n    pip install chess\n\n\n`documentation <https://python-chess.readthedocs.io/en/v1.10.0/>`__\n--------------------------------------------------------------------\n\n* `core <https://python-chess.readthedocs.io/en/v1.10.0/core.html>`_\n* `pgn parsing and writing <https://python-chess.readthedocs.io/en/v1.10.0/pgn.html>`_\n* `polyglot opening book reading <https://python-chess.readthedocs.io/en/v1.10.0/polyglot.html>`_\n* `gaviota endgame tablebase probing <https://python-chess.readthedocs.io/en/v1.10.0/gaviota.html>`_\n* `syzygy endgame tablebase probing <https://python-chess.readthedocs.io/en/v1.10.0/syzygy.html>`_\n* `uci/xboard engine communication <https://python-chess.readthedocs.io/en/v1.10.0/engine.html>`_\n* `variants <https://python-chess.readthedocs.io/en/v1.10.0/variant.html>`_\n* `changelog <https://python-chess.readthedocs.io/en/v1.10.0/changelog.html>`_\n\nfeatures\n--------\n\n* includes mypy typings.\n\n* ipython/jupyter notebook integration.\n  `svg rendering docs <https://python-chess.readthedocs.io/en/v1.10.0/svg.html>`_.\n\n  .. code:: python\n\n      >>> board\n\n  .. image:: https://backscattering.de/web-boardimage/board.png?fen=r1bqkb1r/pppp1qpp/2n2n2/4p3/2b1p3/8/pppp1ppp/rnb1k1nr&lastmove=h5f7&check=e8\n      :alt: r1bqkb1r/pppp1qpp/2n2n2/4p3/2b1p3/8/pppp1ppp/rnb1k1nr\n\n* chess variants: standard, chess960, suicide, giveaway, atomic,\n  king of the hill, racing kings, horde, three-check, crazyhouse.\n  `variant docs <https://python-chess.readthedocs.io/en/v1.10.0/variant.html>`_.\n\n* make and unmake moves.\n\n  .. code:: python\n\n      >>> nf3 = chess.move.from_uci(\"g1f3\")\n      >>> board.push(nf3)  # make the move\n\n      >>> board.pop()  # unmake the last move\n      move.from_uci('g1f3')\n\n* show a simple ascii board.\n\n  .. code:: python\n\n      >>> board = chess.board(\"r1bqkb1r/pppp1qpp/2n2n2/4p3/2b1p3/8/pppp1ppp/rnb1k1nr b kqkq - 0 4\")\n      >>> print(board)\n      r . b q k b . r\n      p p p p . q p p\n      . . n . . n . .\n      . . . . p . . .\n      . . b . p . . .\n      . . . . . . . .\n      p p p p . p p p\n      r n b . k . n r\n\n* detects checkmates, stalemates and draws by insufficient material.\n\n  .. code:: python\n\n      >>> board.is_stalemate()\n      false\n      >>> board.is_insufficient_material()\n      false\n      >>> board.outcome()\n      outcome(termination=<termination.checkmate: 1>, winner=true)\n\n* detects repetitions. has a half-move clock.\n\n  .. code:: python\n\n      >>> board.can_claim_threefold_repetition()\n      false\n      >>> board.halfmove_clock\n      0\n      >>> board.can_claim_fifty_moves()\n      false\n      >>> board.can_claim_draw()\n      false\n\n  with the new rules from july 2014, a game ends as a draw (even without a\n  claim) once a fivefold repetition occurs or if there are 75 moves without\n  a pawn push or capture. other ways of ending a game take precedence.\n\n  .. code:: python\n\n      >>> board.is_fivefold_repetition()\n      false\n      >>> board.is_seventyfive_moves()\n      false\n\n* detects checks and attacks.\n\n  .. code:: python\n\n      >>> board.is_check()\n      true\n      >>> board.is_attacked_by(chess.white, chess.e8)\n      true\n\n      >>> attackers = board.attackers(chess.white, chess.f3)\n      >>> attackers\n      squareset(0x0000_0000_0000_4040)\n      >>> chess.g2 in attackers\n      true\n      >>> print(attackers)\n      . . . . . . . .\n      . . . . . . . .\n      . . . . . . . .\n      . . . . . . . .\n      . . . . . . . .\n      . . . . . . . .\n      . . . . . . 1 .\n      . . . . . . 1 .\n\n* parses and creates san representation of moves.\n\n  .. code:: python\n\n      >>> board = chess.board()\n      >>> board.san(chess.move(chess.e2, chess.e4))\n      'e4'\n      >>> board.parse_san('nf3')\n      move.from_uci('g1f3')\n      >>> board.variation_san([chess.move.from_uci(m) for m in [\"e2e4\", \"e7e5\", \"g1f3\"]])\n      '1. e4 e5 2. nf3'\n\n* parses and creates fens, extended fens and shredder fens.\n\n  .. code:: python\n\n      >>> board.fen()\n      'rnbqkbnr/pppppppp/8/8/8/8/pppppppp/rnbqkbnr w kqkq - 0 1'\n      >>> board.shredder_fen()\n      'rnbqkbnr/pppppppp/8/8/8/8/pppppppp/rnbqkbnr w haha - 0 1'\n      >>> board = chess.board(\"8/8/8/2k5/4k3/8/8/8 w - - 4 45\")\n      >>> board.piece_at(chess.c5)\n      piece.from_symbol('k')\n\n* parses and creates epds.\n\n  .. code:: python\n\n      >>> board = chess.board()\n      >>> board.epd(bm=board.parse_uci(\"d2d4\"))\n      'rnbqkbnr/pppppppp/8/8/8/8/pppppppp/rnbqkbnr w kqkq - bm d4;'\n\n      >>> ops = board.set_epd(\"1k1r4/pp1b1r2/3q2pp/4p3/2b5/4q3/ppp2b2/2k5 b - - bm qd1+; id \\\"bk.01\\\";\")\n      >>> ops == {'bm': [chess.move.from_uci('d6d1')], 'id': 'bk.01'}\n      true\n\n* detects `absolute pins and their directions <https://python-chess.readthedocs.io/en/v1.10.0/core.html#chess.board.pin>`_.\n\n* reads polyglot opening books.\n  `docs <https://python-chess.readthedocs.io/en/v1.10.0/polyglot.html>`__.\n\n  .. code:: python\n\n      >>> import chess.polyglot\n\n      >>> book = chess.polyglot.open_reader(\"data/polyglot/performance.bin\")\n\n      >>> board = chess.board()\n      >>> main_entry = book.find(board)\n      >>> main_entry.move\n      move.from_uci('e2e4')\n      >>> main_entry.weight\n      1\n\n      >>> book.close()\n\n* reads and writes pgns. supports headers, comments, nags and a tree of\n  variations.\n  `docs <https://python-chess.readthedocs.io/en/v1.10.0/pgn.html>`__.\n\n  .. code:: python\n\n      >>> import chess.pgn\n\n      >>> with open(\"data/pgn/molinari-bordais-1979.pgn\") as pgn:\n      ...     first_game = chess.pgn.read_game(pgn)\n\n      >>> first_game.headers[\"white\"]\n      'molinari'\n      >>> first_game.headers[\"black\"]\n      'bordais'\n\n      >>> first_game.mainline()\n      <mainline at ... (1. e4 c5 2. c4 nc6 3. ne2 nf6 4. nbc3 nb4 5. g3 nd3#)>\n\n      >>> first_game.headers[\"result\"]\n      '0-1'\n\n* probe gaviota endgame tablebases (dtm, wdl).\n  `docs <https://python-chess.readthedocs.io/en/v1.10.0/gaviota.html>`__.\n\n* probe syzygy endgame tablebases (dtz, wdl).\n  `docs <https://python-chess.readthedocs.io/en/v1.10.0/syzygy.html>`__.\n\n  .. code:: python\n\n      >>> import chess.syzygy\n\n      >>> tablebase = chess.syzygy.open_tablebase(\"data/syzygy/regular\")\n\n      >>> # black to move is losing in 53 half moves (distance to zero) in this\n      >>> # knbvk endgame.\n      >>> board = chess.board(\"8/2k5/4b3/3n4/8/8/4k3/8 b - - 0 1\")\n      >>> tablebase.probe_dtz(board)\n      -53\n\n      >>> tablebase.close()\n\n* communicate with uci/xboard engines. based on ``asyncio``.\n  `docs <https://python-chess.readthedocs.io/en/v1.10.0/engine.html>`__.\n\n  .. code:: python\n\n      >>> import chess.engine\n\n      >>> engine = chess.engine.simpleengine.popen_uci(\"stockfish\")\n\n      >>> board = chess.board(\"1k1r4/pp1b1r2/3q2pp/4p3/2b5/4q3/ppp2b2/2k5 b - - 0 1\")\n      >>> limit = chess.engine.limit(time=2.0)\n      >>> engine.play(board, limit)\n      <playresult at ... (move=d6d1, ponder=c1d1, info={...}, draw_offered=false, resigned=false)>\n\n      >>> engine.quit()\n\nselected projects\n-----------------\n\nif you like, share interesting things you are using python-chess for, for example:\n\n+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+\n| .. image:: https://github.com/niklasf/python-chess/blob/master/docs/images/syzygy.png?raw=true       | https://syzygy-tables.info/                                                                  |\n|     :height: 64                                                                                      |                                                                                              |\n|     :width: 64                                                                                       |                                                                                              |\n|     :target: https://syzygy-tables.info/                                                             | a website to probe syzygy endgame tablebases                                                 |\n+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+\n| .. image:: https://github.com/niklasf/python-chess/blob/master/docs/images/maia.png?raw=true         | https://maiachess.com/                                                                       |\n|     :height: 64                                                                                      |                                                                                              |\n|     :width: 64                                                                                       |                                                                                              |\n|     :target: https://maiachess.com/                                                                  | a human-like neural network chess engine                                                     |\n+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+\n| .. image:: https://github.com/niklasf/python-chess/blob/master/docs/images/clente-chess.png?raw=true | `clente/chess <https://github.com/clente/chess>`_                                            |\n|     :height: 64                                                                                      |                                                                                              |\n|     :width: 64                                                                                       |                                                                                              |\n|     :target: https://github.com/clente/chess                                                         | oppinionated wrapper to use python-chess from the r programming language                     |\n+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+\n| .. image:: https://github.com/niklasf/python-chess/blob/master/docs/images/crazyara.png?raw=true     | https://crazyara.org/                                                                        |\n|     :height: 64                                                                                      |                                                                                              |\n|     :width: 64                                                                                       |                                                                                              |\n|     :target: https://crazyara.org/                                                                   | deep learning for crazyhouse                                                                 |\n+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+\n| .. image:: https://github.com/niklasf/python-chess/blob/master/docs/images/jcchess.png?raw=true      | `http://johncheetham.com <http://johncheetham.com/projects/jcchess/>`_                       |\n|     :height: 64                                                                                      |                                                                                              |\n|     :width: 64                                                                                       |                                                                                              |\n|     :target: http://johncheetham.com/projects/jcchess/                                               | a gui to play against uci chess engines                                                      |\n+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+\n| .. image:: https://github.com/niklasf/python-chess/blob/master/docs/images/pettingzoo.png?raw=true   | `https://pettingzoo.farama.org <https://pettingzoo.farama.org/environments/classic/chess/>`_ |\n|     :width: 64                                                                                       |                                                                                              |\n|     :height: 64                                                                                      |                                                                                              |\n|     :target: https://pettingzoo.farama.org/environments/classic/chess/                               | a multi-agent reinforcement learning environment                                             |\n+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+\n| .. image:: https://github.com/niklasf/python-chess/blob/master/docs/images/cli-chess.png?raw=true    | `cli-chess <https://github.com/trevorbayless/cli-chess>`_                                    |\n|     :width: 64                                                                                       |                                                                                              |\n|     :height: 64                                                                                      |                                                                                              |\n|     :target: https://github.com/trevorbayless/cli-chess                                              | a highly customizable way to play chess in your terminal                                     |\n+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+\n\n* extensions to build engines (search and evaluation) \u2013 https://github.com/mk-chan/python-chess-engine-extensions\n* a stand-alone chess computer based on dgt board \u2013 http://www.picochess.org/\n* a bridge between lichess api and chess engines \u2013 https://github.com/careless25/lichess-bot\n* a command-line pgn annotator \u2013 https://github.com/rpdelaney/python-chess-annotator\n* an http microservice to render board images \u2013 https://github.com/niklasf/web-boardimage\n* building a toy chess engine with alpha-beta pruning, piece-square tables, and move ordering \u2013 https://healeycodes.com/building-my-own-chess-engine/\n* a jit compiled chess engine \u2013 https://github.com/samragusa/batch-first\n* teaching cognitive science \u2013 `https://jupyter.brynmawr.edu <https://jupyter.brynmawr.edu/services/public/dblank/cs371%20cognitive%20science/2016-fall/programming%20a%20chess%20player.ipynb>`_\n* an `alexa skill to play blindfold chess <https://www.amazon.com/laynr-blindfold-chess/dp/b0859qf8yl>`_ \u2013 https://github.com/laynr/blindfold-chess\n* a chessboard widget for pyside2 \u2013 https://github.com/h-a-y-k/hichesslib\n* django rest framework api for multiplayer chess \u2013 https://github.com/workshoft/capablanca-api\n* a `browser based pgn viewer <https://about.nmstoker.com/chess2.html>`_ written in pyscript \u2013 https://github.com/nmstoker/chessmatchviewer\n* an accessible chessboard that allows blind and visually impaired  players  to play chess against stockfish \u2013 https://github.com/blindpandas/chessmart\n\n\nacknowledgements\n----------------\n\nthanks to the stockfish authors and thanks to sam tannous for publishing his\napproach to `avoid rotated bitboards with direct lookup (pdf) <http://arxiv.org/pdf/0704.3773.pdf>`_\nalongside his gpl2+ engine `shatranj <https://github.com/stannous/shatranj>`_.\nsome move generation ideas are taken from these sources.\n\nthanks to ronald de man for his\n`syzygy endgame tablebases <https://github.com/syzygy1/tb>`_.\nthe probing code in python-chess is very directly ported from his c probing code.\n\nthanks to `kristian glass <https://github.com/doismellburning>`_ for\ntransferring the namespace ``chess`` on pypi.\n\nlicense\n-------\n\npython-chess is licensed under the gpl 3 (or any later version at your option).\ncheck out license.txt for the full text.\n",
  "docs_url": null,
  "keywords": "chess fen epd pgn polyglot syzygy gaviota uci xboard",
  "license": "gpl-3.0+",
  "name": "chess",
  "package_url": "https://pypi.org/project/chess/",
  "project_url": "https://pypi.org/project/chess/",
  "project_urls": {
    "Documentation": "https://python-chess.readthedocs.io",
    "Homepage": "https://github.com/niklasf/python-chess"
  },
  "release_url": "https://pypi.org/project/chess/1.10.0/",
  "requires_dist": [],
  "requires_python": ">=3.7",
  "summary": "a chess library with move generation and validation, polyglot opening book probing, pgn reading and writing, gaviota tablebase probing, syzygy tablebase probing, and xboard/uci engine communication.",
  "version": "1.10.0",
  "releases": [],
  "developers": [
    "niklas.fiekas@backscattering.de",
    "niklas_fiekas"
  ],
  "kwds": "chessboard chess2 chessmatchviewer chess chess960",
  "license_kwds": "gpl-3.0+",
  "libtype": "pypi",
  "id": "pypi_chess",
  "homepage": "https://github.com/niklasf/python-chess",
  "release_count": 23,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: os independent",
    "operating system :: posix",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: system :: archiving :: compression"
  ],
  "description": "\n.. image:: https://img.shields.io/pypi/v/pyzipper.svg\n        :target: https://pypi.org/project/pyzipper/\n        :alt: current version on pypi\n\n.. image:: https://img.shields.io/pypi/pyversions/pyzipper.svg\n        :target: https://pypi.org/project/pyzipper/\n        :alt: supported python versions\n\n\npyzipper\n========\n\na replacement for python's ``zipfile`` that can read and write aes encrypted\nzip files. forked from python 3.7's ``zipfile`` module, it features the same\n``zipfile`` api from that time (most notably, lacking support for\n``pathlib``-compatible wrappers that were introduced in python 3.8).\n\ninstallation\n------------\n\n.. code-block:: bash\n\n   pip install pyzipper\n\n\nusage\n-----\n\n.. code-block:: python\n\n   import pyzipper\n\n   secret_password = b'lost art of keeping a secret'\n\n   with pyzipper.aeszipfile('new_test.zip',\n                            'w',\n                            compression=pyzipper.zip_lzma,\n                            encryption=pyzipper.wz_aes) as zf:\n       zf.setpassword(secret_password)\n       zf.writestr('test.txt', \"what ever you do, don't tell anyone!\")\n\n   with pyzipper.aeszipfile('new_test.zip') as zf:\n       zf.setpassword(secret_password)\n       my_secrets = zf.read('test.txt')\n\n\naes strength\n------------\n\nthe strength of the aes encryption can be configure to be 128, 192 or 256 bits.\nby default it is 256 bits. use the ``setencryption()`` method to specify the\nencryption kwargs:\n\n.. code-block:: python\n\n   import pyzipper\n\n   secret_password = b'lost art of keeping a secret'\n\n   with pyzipper.aeszipfile('new_test.zip',\n                            'w',\n                            compression=pyzipper.zip_lzma) as zf:\n       zf.setpassword(secret_password)\n       zf.setencryption(pyzipper.wz_aes, nbits=128)\n       zf.writestr('test.txt', \"what ever you do, don't tell anyone!\")\n\n   with pyzipper.aeszipfile('new_test.zip') as zf:\n       zf.setpassword(secret_password)\n       my_secrets = zf.read('test.txt')\n\ndocumentation\n-------------\n\nofficial python zipfile documentation is available here: https://docs.python.org/3/library/zipfile.html\n\ncredits\n-------\n\nthe docs skeleton was created with cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n",
  "docs_url": null,
  "keywords": "zip aes encrypt decrypt",
  "license": "mit",
  "name": "pyzipper",
  "package_url": "https://pypi.org/project/pyzipper/",
  "project_url": "https://pypi.org/project/pyzipper/",
  "project_urls": {
    "Homepage": "https://github.com/danifus/pyzipper"
  },
  "release_url": "https://pypi.org/project/pyzipper/0.3.6/",
  "requires_dist": [
    "pycryptodomex"
  ],
  "requires_python": ">=3.4",
  "summary": "aes encryption for zipfile.",
  "version": "0.3.6",
  "releases": [],
  "developers": [
    "daniel.hillier@gmail.com",
    "daniel_hillier"
  ],
  "kwds": "pyzipper zipfile aeszipfile pypackage encryption",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pyzipper",
  "homepage": "https://github.com/danifus/pyzipper",
  "release_count": 9,
  "dependency_ids": [
    "pypi_pycryptodomex"
  ]
}
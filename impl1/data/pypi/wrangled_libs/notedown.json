{
  "classifiers": [],
  "description": "*python 2/3 and ipython 4 / jupyter compatible!*\n\nconvert ipython notebooks to markdown (and back)\n------------------------------------------------\n\n`notedown <http://github.com/aaren/notedown>`__ is a simple tool to\ncreate `ipython notebooks <http://www.ipython.org/notebook>`__ from\nmarkdown (and r-markdown).\n\n``notedown`` separates your markdown into code and not code. code blocks\n(fenced or indented) go into input cells, everything else goes into\nmarkdown cells.\n\nusage:\n\n::\n\n    notedown input.md > output.ipynb\n\ninstallation:\n\n::\n\n    pip install notedown\n\nor the latest on github:\n\n::\n\n    pip install https://github.com/aaren/notedown/tarball/master\n\nconversion to markdown\n~~~~~~~~~~~~~~~~~~~~~~\n\nconvert a notebook into markdown, stripping all outputs:\n\n::\n\n    notedown input.ipynb --to markdown --strip > output.md\n\nconvert a notebook into markdown, with output json intact:\n\n::\n\n    notedown input.ipynb --to markdown > output_with_outputs.md\n\nthe outputs are placed as json in a code-block immediately after the\ncorresponding input code-block. ``notedown`` understands this convention\nas well, so it is possible to convert this markdown-with-json back into\na notebook.\n\nthis means it is possible to edit markdown, convert to notebook, play\naround a bit and convert back to markdown.\n\nnb: currently, notebook and cell metadata is not preserved in the\nconversion.\n\nstrip the output cells from markdown:\n\n::\n\n    notedown with_output_cells.md --to markdown --strip > no_output_cells.md\n\nrunning an ipython notebook\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    notedown notebook.md --run > executed_notebook.ipynb\n\nediting in the browser *(new!)*\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nyou can configure ipython / jupyter to seamlessly use markdown as its\nstorage format. add the following to your config file:\n\n::\n\n    c.notebookapp.contents_manager_class = 'notedown.notedowncontentsmanager'\n\nnow you can edit your markdown files in the browser, execute code,\ncreate plots - all stored in markdown!\n\nfor jupyter, your config file is ``jupyter_notebook_config.py`` in\n``~/.jupyter``. for ipython your config is\n``ipython_notebook_config.py`` in your ipython profile (probably\n``~/.ipython/profile_default``):\n\nr-markdown\n~~~~~~~~~~\n\nyou can use ``notedown`` to convert r-markdown as well. we just need to\ntell ``notedown`` to use `knitr <yihui.name/knitr>`__ to convert the\nr-markdown. this requires that you have r installed with\n`knitr <yihui.name/knitr>`__.\n\nconvert r-markdown into markdown:\n\n::\n\n    notedown input.rmd --to markdown --knit > output.md\n\nconvert r-markdown into an ipython notebook:\n\n::\n\n    notedown input.rmd --knit > output.ipynb\n\n-  ``--rmagic`` will add ``%load_ext rpy2.ipython`` at the start of the\n   notebook, allowing you to execute code cells using the rmagic\n   extension (requires `rpy2 <http://rpy.sourceforge.net/>`__). notedown\n   does the appropriate ``%r`` cell magic automatically.\n\nmagic\n~~~~~\n\nfenced code blocks annotated with a language other than python are read\ninto cells using ipython's ``%%`` `cell\nmagic <http://nbviewer.ipython.org/github/ipython/ipython/blob/1.x/examples/notebooks/cell%20magics.ipynb>`__.\n\nyou can disable this with ``--nomagic``.\n\n-  ``--pre`` lets you add arbitrary code to the start of the notebook.\n   e.g.\n   ``notedown file.md --pre '%matplotlib inline' 'import numpy as np'``\n\nhow do i put a literal code block in my markdown?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nby using the ``--match`` argument. ``notedown`` defaults to converting\n*all* code-blocks into code-cells. this behaviour can be changed by\ngiving a different argument to ``--match``:\n\n-  ``--match=all``: convert all code blocks (the default)\n-  ``--match=fenced``: only convert fenced code blocks\n-  ``--match=language``: only convert fenced code blocks with 'language'\n   as the syntax specifier (or any member of the block attributes)\n-  ``--match=strict``: only convert code blocks with pandoc style\n   attributes containing 'python' and 'input' as classes. i.e. code\n   blocks must look like\n\n   ::\n\n       ```{.python .input}\n       code\n       ```\n\nthis isn't very interactive!\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\ntry editing the markdown in the ipython notebook using the\n``notedowncontentsmanager`` (see above).\n\nyou can get an interactive ipython session in vim by using\n`vim-ipython <http://www.github.com/ivanov/vim-ipython>`__, which allows\nyou to connect to a running ipython kernel. you can send code from vim\nto ipython and get code completion from the running kernel. try it!\n\nwhere's my syntax highlighting?!\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\ntry using either\n`vim-markdown <https://github.com/tpope/vim-markdown>`__ or\n`vim-pandoc <https://github.com/vim-pandoc/vim-pandoc>`__. both are\nclever enough to highlight code in markdown.\n\nrendering outputs in markdown\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nthis is experimental!\n\nconvert a notebook into markdown, rendering cell outputs as native\nmarkdown elements:\n\n::\n\n    notedown input.ipynb --render\n\nthis means that e.g. png outputs become ``![](data-uri)`` images and\nthat text is placed in the document.\n\nof course, you can use this in conjuntion with runipy to produce\nmarkdown-with-code-and-figures from markdown-with-code:\n\n::\n\n    notedown input.md --run --render > output.md\n\nnot a notebook in sight!\n\nthe ``--render`` flag forces the output format to markdown.\n\ntodo\n~~~~\n\n-  [x] python 3 support\n-  [x] unicode support\n-  [x] ipython 3 support\n-  [x] ipython 4 (jupyter) support\n-  [ ] allow kernel specification\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd 2-clause",
  "name": "notedown",
  "package_url": "https://pypi.org/project/notedown/",
  "project_url": "https://pypi.org/project/notedown/",
  "project_urls": {
    "Homepage": "http://github.com/aaren/notedown"
  },
  "release_url": "https://pypi.org/project/notedown/1.5.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "convert markdown to ipython notebook.",
  "version": "1.5.1",
  "releases": [],
  "developers": [
    "aaron_o",
    "dev@aaren.me"
  ],
  "kwds": "ipython_notebook_config ipython jupyter_notebook_config markdown jupyter",
  "license_kwds": "bsd 2-clause",
  "libtype": "pypi",
  "id": "pypi_notedown",
  "homepage": "http://github.com/aaren/notedown",
  "release_count": 26,
  "dependency_ids": []
}
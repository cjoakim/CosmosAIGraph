{
  "classifiers": [],
  "description": "# datagradients\n<div align=\"center\">\n<p align=\"center\">\n  <a href=\"https://github.com/deci-ai/super-gradients#prerequisites\"><img src=\"https://img.shields.io/badge/python-3.7%20%7c%203.8%20%7c%203.9-blue\" /></a>\n  <a href=\"https://pypi.org/project/data-gradients/\"><img src=\"https://img.shields.io/pypi/v/data-gradients\" /></a>\n  <a href=\"https://github.com/deci-ai/data-gradients/releases\"><img src=\"https://img.shields.io/github/v/release/deci-ai/data-gradients\" /></a>\n  <a href=\"https://github.com/deci-ai/data-gradients/blob/master/license.md\"><img src=\"https://img.shields.io/badge/license-apache%202.0-blue\" /></a>\n</p>   \n</div>\n\n\ndatagradients is an open-source python based library designed for **computer vision dataset analysis**. \n\nextract **valuable insights** from your datasets and get **comprehensive reports effortlessly**.\n\n### \ud83d\udd0d detect common data issues\n- corrupted data\n- labeling errors\n- underlying biases, and more.\n\n### \ud83d\udca1 extract insights for better model design\n- informed decisions based on data characteristics.\n- object size and location distributions.\n- high frequency details.\n\n### \ud83c\udfaf reduce guesswork for hyperparameters\n- define the correct nms and filtering parameters.\n- identify class distribution issues.\n- calibrate metrics for your unique dataset.\n\n## \ud83d\udee0 capabilities \nnon-exhaustive list of supported features.\n- **general image metrics**: explore key attributes like resolution, color distribution, and average brightness.\n- **class overview**: get a snapshot of class distributions, most frequent classes, and unlabelled images.\n- **positional heatmaps**: visualize where objects tend to appear within your images.\n- **bounding box & mask details**: delve into dimensions, area coverages, and resolutions of objects.\n- **class frequencies deep dive**: dive deeper into class distributions, understanding anomalies and rare classes.\n- **detailed object counts**: examine the granularity of components per image, identifying patterns and outliers.\n- and **[many more](./documentation/feature_description.md)**!\n\n> \ud83d\udcd8 **deep dive into data profiling**  \n> puzzled by some dataset challenges while using datagradients? we've got you covered.  \n> enrich your understanding with this **[\ud83c\udf93free online course](https://deci.ai/course/profiling-computer-vision-datasets-overview/?utm_campaign[\u2026]=dg-pdf-report&utm_medium=dg-repo&utm_content=dg-report-to-course)**. dive into dataset profiling, confront its complexities, and harness the full potential of datagradients.\n\n\n<div align=\"center\">\n  <a href=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/report_image_stats.png\"><img src=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/report_image_stats.png\" width=\"250px\"></a>\n  <a href=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/report_mask_sample.png\"><img src=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/report_mask_sample.png\" width=\"250px\"></a>\n  <a href=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/report_classes_distribution.png\"><img src=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/report_classes_distribution.png\" width=\"250px\"></a>\n  <p><em>example of pages from the report</em>\n</div>\n\n<div align=\"center\">\n  <a href=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/segmentationboundingboxarea.png\"><img src=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/segmentationboundingboxarea.png\" width=\"375px\"></a>\n  <a href=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/segmentationboundingboxresolution.png\"><img src=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/segmentationboundingboxresolution.png\" width=\"375px\"></a>\n  <br />\n  <a href=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/segmentationclassfrequency.png\"><img src=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/segmentationclassfrequency.png\" width=\"375px\"></a>\n  <a href=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/segmentationcomponentsperimagecount.png\"><img src=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/segmentationcomponentsperimagecount.png\" width=\"375px\"></a>\n  <p><em>example of specific features</em>\n</div>\n\n> check out the [pre-computed dataset analysis](#pre-computed-dataset-analysis) for a deeper dive into reports.\n\n\n## table of contents\n- [installation](#installation)\n- [quick start](#quick-start)\n   - [prerequisites](#prerequisites)\n   - [dataset analysis](#dataset-analysis)\n   - [report](#report)\n- [feature configuration](#feature-configuration)\n- [dataset extractors](#dataset-extractors)\n- [pre-computed dataset analysis](#pre-computed-dataset-analysis)\n- [license](#license)\n\n\n\n## installation\nyou can install datagradients directly from the github repository.\n\n```\npip install data-gradients\n```\n\n\n## quick start\n\n### prerequisites\n\n- **dataset**: includes a **train** set and a **validation** or a **test** set.\n- **dataset iterable**: a method to iterate over your dataset providing images and labels. can be any of the following:\n  - pytorch **dataloader**\n  - pytorch **dataset**\n  - generator that yields image/label pairs\n  - any other iterable you use for model training/validation\n- one of:\n  - **class names**: either the list of all class names in the dataset or dictionary mapping of `class_id` -> `class_name`.\n  - **number of classes**:  indicate how many unique classes are in your dataset. ensure this number is greater than the highest class index (e.g., if your highest class index is 9, the number of classes should be at least 10).\n\nplease ensure all the points above are checked before you proceed with **datagradients**.\n\n**example**\n``` python\nfrom torchvision.datasets import cocodetection\n\ntrain_data = cocodetection(...)\nval_data = cocodetection(...)\nclass_names = [\"person\", \"bicycle\", \"car\", \"motorcycle\", ...]\n# or\n# class_names = {0: \"person\", 1:\"bicycle\", 2:\"car\", 3: \"motorcycle\", ...}\n```\n\n> **good to know** - datagradients will try to find out how the dataset returns images and labels.\n> - if something cannot be automatically determined, you will be asked to provide some extra information through a text input.\n> - in some extreme cases, the process will crash and invite you to implement a custom [dataset extractor](#dataset-extractors)\n\n> **heads up** - datagradients provides a few out-of-the-box [dataset/dataloader](./documentation/datasets.md) implementation. \n> you can find more dataset implementations in [pytorch](https://pytorch.org/vision/stable/datasets.html) \n> or [supergradients](https://docs.deci.ai/super-gradients/src/super_gradients/training/datasets/dataset_setup_instructions.html). \n\n\n## dataset analysis\nyou are now ready to go, chose the relevant analyzer for your task and run it over your datasets!\n\n**image classification**\n```python\nfrom data_gradients.managers.classification_manager import classificationanalysismanager \n\ntrain_data = ...  # your dataset iterable (torch dataset/dataloader/...)\nval_data = ...    # your dataset iterable (torch dataset/dataloader/...)\nclass_names = ... # [<class-1>, <class-2>, ...]\n\nanalyzer = classificationanalysismanager(\n    report_title=\"testing data-gradients classification\",\n    train_data=train_data,\n    val_data=val_data,\n    class_names=class_names,\n)\n\nanalyzer.run()\n```\n\n**object detection**\n```python\nfrom data_gradients.managers.detection_manager import detectionanalysismanager\n\ntrain_data = ...  # your dataset iterable (torch dataset/dataloader/...)\nval_data = ...    # your dataset iterable (torch dataset/dataloader/...)\nclass_names = ... # [<class-1>, <class-2>, ...]\n\nanalyzer = detectionanalysismanager(\n    report_title=\"testing data-gradients object detection\",\n    train_data=train_data,\n    val_data=val_data,\n    class_names=class_names,\n)\n\nanalyzer.run()\n```\n\n\n**semantic segmentation**\n```python\nfrom data_gradients.managers.segmentation_manager import segmentationanalysismanager \n\ntrain_data = ...  # your dataset iterable (torch dataset/dataloader/...)\nval_data = ...    # your dataset iterable (torch dataset/dataloader/...)\nclass_names = ... # [<class-1>, <class-2>, ...]\n\nanalyzer = segmentationanalysismanager(\n    report_title=\"testing data-gradients segmentation\",\n    train_data=train_data,\n    val_data=val_data,\n    class_names=class_names,\n)\n\nanalyzer.run()\n```\n\n**example**\n\nyou can test the segmentation analysis tool in the following [example](https://github.com/deci-ai/data-gradients/blob/master/examples/segmentation_example.py)\nwhich does not require you to download any additional data.\n\n\n## report\nonce the analysis is done, the path to your pdf report will be printed. you can find here examples of [pre-computed dataset analysis reports](#pre-computed-dataset-analysis).\n\n\n## feature configuration\n \nthe feature configuration allows you to run the analysis on a subset of features or adjust the parameters of existing features. \nif you are interested in customizing this configuration, you can check out the [documentation](documentation/feature_configuration.md) on that topic.\n\n\n## dataset extractors\n**ensuring comprehensive dataset compatibility**\n\ndatagradients is adept at automatic dataset inference; however, certain specificities, such as nested annotations structures or unique annotation format, may necessitate a tailored approach.\n\nto address this, datagradients offers `extractors` tailored for enhancing compatibility with diverse dataset formats.\n\nfor an in-depth understanding and implementation details, we encourage a thorough review of the [dataset extractors documentation](./documentation/dataset_extractors.md).\n\n\n\n## pre-computed dataset analysis\n\n<table style=\"border: 0\">\n  <tr>\n    <td><img src=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/colab.png\" width=\"80pt\"></td>\n    <td><a href=\"https://colab.research.google.com/drive/1dswgek0kf-n61p6ixrdfgbqkhetou8se?usp=sharing\"> example notebook on colab</a></td>\n  </tr>\n</table>\n\n<details>\n\n<summary><h3>detection</h3></summary>\n\ncommon datasets\n\n- [coco](https://dgreports.deci.ai/detection/coco/report.pdf)\n\n- [voc](https://dgreports.deci.ai/detection/voc/report.pdf)\n\n[roboflow 100](https://universe.roboflow.com/roboflow-100?ref=blog.roboflow.com) datasets\n\n- [4-fold-defect](https://dgreports.deci.ai/detection/rf100_4-fold-defect/report.pdf)\n\n- [abdomen-mri](https://dgreports.deci.ai/detection/rf100_abdomen-mri/report.pdf)\n\n- [acl-x-ray](https://dgreports.deci.ai/detection/rf100_acl-x-ray/report.pdf)\n\n- [activity-diagrams-qdobr](https://dgreports.deci.ai/detection/rf100_activity-diagrams-qdobr/report.pdf)\n\n- [aerial-cows](https://dgreports.deci.ai/detection/rf100_aerial-cows/report.pdf)\n\n- [aerial-pool](https://dgreports.deci.ai/detection/rf100_aerial-pool/report.pdf)\n\n- [aerial-spheres](https://dgreports.deci.ai/detection/rf100_aerial-spheres/report.pdf)\n\n- [animals-ij5d2](https://dgreports.deci.ai/detection/rf100_animals-ij5d2/report.pdf)\n\n- [apex-videogame](https://dgreports.deci.ai/detection/rf100_apex-videogame/report.pdf)\n\n- [apples-fvpl5](https://dgreports.deci.ai/detection/rf100_apples-fvpl5/report.pdf)\n\n- [aquarium-qlnqy](https://dgreports.deci.ai/detection/rf100_aquarium-qlnqy/report.pdf)\n\n- [asbestos](https://dgreports.deci.ai/detection/rf100_asbestos/report.pdf)\n\n- [avatar-recognition-nuexe](https://dgreports.deci.ai/detection/rf100_avatar-recognition-nuexe/report.pdf)\n\n- [axial-mri](https://dgreports.deci.ai/detection/rf100_axial-mri/report.pdf)\n\n- [bacteria-ptywi](https://dgreports.deci.ai/detection/rf100_bacteria-ptywi/report.pdf)\n\n- [bccd-ouzjz](https://dgreports.deci.ai/detection/rf100_bccd-ouzjz/report.pdf)\n\n- [bees-jt5in](https://dgreports.deci.ai/detection/rf100_bees-jt5in/report.pdf)\n\n- [bone-fracture-7fylg](https://dgreports.deci.ai/detection/rf100_bone-fracture-7fylg/report.pdf)\n\n- [brain-tumor-m2pbp](https://dgreports.deci.ai/detection/rf100_brain-tumor-m2pbp/report.pdf)\n\n- [cable-damage](https://dgreports.deci.ai/detection/rf100_cable-damage/report.pdf)\n\n- [cables-nl42k](https://dgreports.deci.ai/detection/rf100_cables-nl42k/report.pdf)\n\n- [cavity-rs0uf](https://dgreports.deci.ai/detection/rf100_cavity-rs0uf/report.pdf)\n\n- [cell-towers](https://dgreports.deci.ai/detection/rf100_cell-towers/report.pdf)\n\n- [cells-uyemf](https://dgreports.deci.ai/detection/rf100_cells-uyemf/report.pdf)\n\n- [chess-pieces-mjzgj](https://dgreports.deci.ai/detection/rf100_chess-pieces-mjzgj/report.pdf)\n\n- [circuit-elements](https://dgreports.deci.ai/detection/rf100_circuit-elements/report.pdf)\n\n- [circuit-voltages](https://dgreports.deci.ai/detection/rf100_circuit-voltages/report.pdf)\n\n- [cloud-types](https://dgreports.deci.ai/detection/rf100_cloud-types/report.pdf)\n\n- [coins-1apki](https://dgreports.deci.ai/detection/rf100_coins-1apki/report.pdf)\n\n- [construction-safety-gsnvb](https://dgreports.deci.ai/detection/rf100_construction-safety-gsnvb/report.pdf)\n\n- [coral-lwptl](https://dgreports.deci.ai/detection/rf100_coral-lwptl/report.pdf)\n\n- [corrosion-bi3q3](https://dgreports.deci.ai/detection/rf100_corrosion-bi3q3/report.pdf)\n\n- [cotton-20xz5](https://dgreports.deci.ai/detection/rf100_cotton-20xz5/report.pdf)\n\n- [cotton-plant-disease](https://dgreports.deci.ai/detection/rf100_cotton-plant-disease/report.pdf)\n\n- [csgo-videogame](https://dgreports.deci.ai/detection/rf100_csgo-videogame/report.pdf)\n\n- [currency-v4f8j](https://dgreports.deci.ai/detection/rf100_currency-v4f8j/report.pdf)\n\n- [digits-t2eg6](https://dgreports.deci.ai/detection/rf100_digits-t2eg6/report.pdf)\n\n- [document-parts](https://dgreports.deci.ai/detection/rf100_document-parts/report.pdf)\n\n- [excavators-czvg9](https://dgreports.deci.ai/detection/rf100_excavators-czvg9/report.pdf)\n\n- [farcry6-videogame](https://dgreports.deci.ai/detection/rf100_farcry6-videogame/report.pdf)\n\n- [fish-market-ggjso](https://dgreports.deci.ai/detection/rf100_fish-market-ggjso/report.pdf)\n\n- [flir-camera-objects](https://dgreports.deci.ai/detection/rf100_flir-camera-objects/report.pdf)\n\n- [furniture-ngpea](https://dgreports.deci.ai/detection/rf100_furniture-ngpea/report.pdf)\n\n- [gauge-u2lwv](https://dgreports.deci.ai/detection/rf100_gauge-u2lwv/report.pdf)\n\n- [grass-weeds](https://dgreports.deci.ai/detection/rf100_grass-weeds/report.pdf)\n\n- [gynecology-mri](https://dgreports.deci.ai/detection/rf100_gynecology-mri/report.pdf)\n\n- [halo-infinite-angel-videogame](https://dgreports.deci.ai/detection/rf100_halo-infinite-angel-videogame/report.pdf)\n\n- [hand-gestures-jps7z](https://dgreports.deci.ai/detection/rf100_hand-gestures-jps7z/report.pdf)\n\n- [insects-mytwu](https://dgreports.deci.ai/detection/rf100_insects-mytwu/report.pdf)\n\n- [leaf-disease-nsdsr](https://dgreports.deci.ai/detection/rf100_leaf-disease-nsdsr/report.pdf)\n\n- [lettuce-pallets](https://dgreports.deci.ai/detection/rf100_lettuce-pallets/report.pdf)\n\n- [liver-disease](https://dgreports.deci.ai/detection/rf100_liver-disease/report.pdf)\n\n- [marbles](https://dgreports.deci.ai/detection/rf100_marbles/report.pdf)\n\n- [mask-wearing-608pr](https://dgreports.deci.ai/detection/rf100_mask-wearing-608pr/report.pdf)\n\n- [mitosis-gjs3g](https://dgreports.deci.ai/detection/rf100_mitosis-gjs3g/report.pdf)\n\n- [number-ops](https://dgreports.deci.ai/detection/rf100_number-ops/report.pdf)\n\n- [paper-parts](https://dgreports.deci.ai/detection/rf100_paper-parts/report.pdf)\n\n- [paragraphs-co84b](https://dgreports.deci.ai/detection/rf100_paragraphs-co84b/report.pdf)\n\n- [parasites-1s07h](https://dgreports.deci.ai/detection/rf100_parasites-1s07h/report.pdf)\n\n- [peanuts-sd4kf](https://dgreports.deci.ai/detection/rf100_peanuts-sd4kf/report.pdf)\n\n- [peixos-fish](https://dgreports.deci.ai/detection/rf100_peixos-fish/report.pdf)\n\n- [people-in-paintings](https://dgreports.deci.ai/detection/rf100_people-in-paintings/report.pdf)\n\n- [pests-2xlvx](https://dgreports.deci.ai/detection/rf100_pests-2xlvx/report.pdf)\n\n- [phages](https://dgreports.deci.ai/detection/rf100_phages/report.pdf)\n\n- [pills-sxdht](https://dgreports.deci.ai/detection/rf100_pills-sxdht/report.pdf)\n\n- [poker-cards-cxcvz](https://dgreports.deci.ai/detection/rf100_poker-cards-cxcvz/report.pdf)\n\n- [printed-circuit-board](https://dgreports.deci.ai/detection/rf100_printed-circuit-board/report.pdf)\n\n- [radio-signal](https://dgreports.deci.ai/detection/rf100_radio-signal/report.pdf)\n\n- [road-signs-6ih4y](https://dgreports.deci.ai/detection/rf100_road-signs-6ih4y/report.pdf)\n\n- [road-traffic](https://dgreports.deci.ai/detection/rf100_road-traffic/report.pdf)\n\n- [robomasters-285km](https://dgreports.deci.ai/detection/rf100_robomasters-285km/report.pdf)\n\n- [secondary-chains](https://dgreports.deci.ai/detection/rf100_secondary-chains/report.pdf)\n\n- [sedimentary-features-9eosf](https://dgreports.deci.ai/detection/rf100_sedimentary-features-9eosf/report.pdf)\n\n- [shark-teeth-5atku](https://dgreports.deci.ai/detection/rf100_shark-teeth-5atku/report.pdf)\n\n- [sign-language-sokdr](https://dgreports.deci.ai/detection/rf100_sign-language-sokdr/report.pdf)\n\n- [signatures-xc8up](https://dgreports.deci.ai/detection/rf100_signatures-xc8up/report.pdf)\n\n- [smoke-uvylj](https://dgreports.deci.ai/detection/rf100_smoke-uvylj/report.pdf)\n\n- [soccer-players-5fuqs](https://dgreports.deci.ai/detection/rf100_soccer-players-5fuqs/report.pdf)\n\n- [soda-bottles](https://dgreports.deci.ai/detection/rf100_soda-bottles/report.pdf)\n\n- [solar-panels-taxvb](https://dgreports.deci.ai/detection/rf100_solar-panels-taxvb/report.pdf)\n\n- [stomata-cells](https://dgreports.deci.ai/detection/rf100_stomata-cells/report.pdf)\n\n- [street-work](https://dgreports.deci.ai/detection/rf100_street-work/report.pdf)\n\n- [tabular-data-wf9uh](https://dgreports.deci.ai/detection/rf100_tabular-data-wf9uh/report.pdf)\n\n- [team-fight-tactics](https://dgreports.deci.ai/detection/rf100_team-fight-tactics/report.pdf)\n\n- [thermal-cheetah-my4dp](https://dgreports.deci.ai/detection/rf100_thermal-cheetah-my4dp/report.pdf)\n\n- [thermal-dogs-and-people-x6ejw](https://dgreports.deci.ai/detection/rf100_thermal-dogs-and-people-x6ejw/report.pdf)\n\n- [trail-camera](https://dgreports.deci.ai/detection/rf100_trail-camera/report.pdf)\n\n- [truck-movement](https://dgreports.deci.ai/detection/rf100_truck-movement/report.pdf)\n\n- [tweeter-posts](https://dgreports.deci.ai/detection/rf100_tweeter-posts/report.pdf)\n\n- [tweeter-profile](https://dgreports.deci.ai/detection/rf100_tweeter-profile/report.pdf)\n\n- [underwater-objects-5v7p8](https://dgreports.deci.ai/detection/rf100_underwater-objects-5v7p8/report.pdf)\n\n- [underwater-pipes-4ng4t](https://dgreports.deci.ai/detection/rf100_underwater-pipes-4ng4t/report.pdf)\n\n- [uno-deck](https://dgreports.deci.ai/detection/rf100_uno-deck/report.pdf)\n\n- [valentines-chocolate](https://dgreports.deci.ai/detection/rf100_valentines-chocolate/report.pdf)\n\n- [vehicles-q0x2v](https://dgreports.deci.ai/detection/rf100_vehicles-q0x2v/report.pdf)\n\n- [wall-damage](https://dgreports.deci.ai/detection/rf100_wall-damage/report.pdf)\n\n- [washroom-rf1fa](https://dgreports.deci.ai/detection/rf100_washroom-rf1fa/report.pdf)\n\n- [weed-crop-aerial](https://dgreports.deci.ai/detection/rf100_weed-crop-aerial/report.pdf)\n\n- [wine-labels](https://dgreports.deci.ai/detection/rf100_wine-labels/report.pdf)\n\n- [x-ray-rheumatology](https://dgreports.deci.ai/detection/rf100_x-ray-rheumatology/report.pdf)\n\n</details>\n\n\n<details>\n\n<summary><h3>segmentation</h3></summary>\n\n- [coco](https://dgreports.deci.ai/segmentation/coco/report.pdf)\n\n- [cityspace](https://dgreports.deci.ai/segmentation/cityspace/report.pdf)\n\n- [voc](https://dgreports.deci.ai/segmentation/voc/report.pdf)\n\n</details>\n\n## community\n<table style=\"border: 0\">\n  <tr>\n    <td><img src=\"https://github.com/deci-ai/data-gradients/raw/master/documentation/assets/discord.png\" width=\"60pt\"></td>\n    <td><a href=\"https://discord.gg/2v6cegmren\"> click here to join our discord community</a></td>\n  </tr>\n</table>\n\n## license\n\nthis project is released under the [apache 2.0 license](https://dgreports.deci.ai/detection/license.md).\n",
  "docs_url": null,
  "keywords": "deci,ai,data,deep learning,computer vision,pytorch",
  "license": "",
  "name": "data-gradients",
  "package_url": "https://pypi.org/project/data-gradients/",
  "project_url": "https://pypi.org/project/data-gradients/",
  "project_urls": {
    "Homepage": "https://github.com/Deci-AI/data-gradients"
  },
  "release_url": "https://pypi.org/project/data-gradients/0.3.1/",
  "requires_dist": [
    "hydra-core >=1.2.0",
    "omegaconf >=2.2.3",
    "pygments >=2.13.0",
    "tqdm >=4.64.1",
    "platformdirs >=2.5.2",
    "opencv-python",
    "Pillow",
    "tensorboard",
    "torch",
    "torchvision",
    "numpy",
    "matplotlib",
    "scipy",
    "rapidfuzz",
    "coverage ~=5.3.1",
    "seaborn",
    "xhtml2pdf ==0.2.11",
    "jinja2",
    "imagededup"
  ],
  "requires_python": "",
  "summary": "datagradients",
  "version": "0.3.1",
  "releases": [],
  "developers": [
    "deci_ai",
    "rnd@deci.ai"
  ],
  "kwds": "super_gradients data_gradients gradients datagradients supergradients",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_data_gradients",
  "homepage": "https://github.com/deci-ai/data-gradients",
  "release_count": 12,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_hydra_core",
    "pypi_imagededup",
    "pypi_jinja2",
    "pypi_matplotlib",
    "pypi_numpy",
    "pypi_omegaconf",
    "pypi_opencv_python",
    "pypi_pillow",
    "pypi_platformdirs",
    "pypi_pygments",
    "pypi_rapidfuzz",
    "pypi_scipy",
    "pypi_seaborn",
    "pypi_tensorboard",
    "pypi_torch",
    "pypi_torchvision",
    "pypi_tqdm",
    "pypi_xhtml2pdf"
  ]
}
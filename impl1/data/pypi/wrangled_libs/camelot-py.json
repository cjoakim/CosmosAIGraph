{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8"
  ],
  "description": "<p align=\"center\">\n   <img src=\"https://raw.githubusercontent.com/camelot-dev/camelot/master/docs/_static/camelot.png\" width=\"200\">\n</p>\n\n# camelot: pdf table extraction for humans\n\n[![tests](https://github.com/camelot-dev/camelot/actions/workflows/tests.yml/badge.svg)](https://github.com/camelot-dev/camelot/actions/workflows/tests.yml) [![documentation status](https://readthedocs.org/projects/camelot-py/badge/?version=master)](https://camelot-py.readthedocs.io/en/master/)\n [![codecov.io](https://codecov.io/github/camelot-dev/camelot/badge.svg?branch=master&service=github)](https://codecov.io/github/camelot-dev/camelot?branch=master)\n [![image](https://img.shields.io/pypi/v/camelot-py.svg)](https://pypi.org/project/camelot-py/) [![image](https://img.shields.io/pypi/l/camelot-py.svg)](https://pypi.org/project/camelot-py/) [![image](https://img.shields.io/pypi/pyversions/camelot-py.svg)](https://pypi.org/project/camelot-py/) [![gitter chat](https://badges.gitter.im/camelot-dev/lobby.png)](https://gitter.im/camelot-dev/lobby)\n[![image](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n**camelot** is a python library that can help you extract tables from pdfs!\n\n**note:** you can also check out [excalibur](https://github.com/camelot-dev/excalibur), the web interface to camelot!\n\n---\n\n**here's how you can extract tables from pdfs.** you can check out the pdf used in this example [here](https://github.com/camelot-dev/camelot/blob/master/docs/_static/pdf/foo.pdf).\n\n<pre>\n>>> import camelot\n>>> tables = camelot.read_pdf('foo.pdf')\n>>> tables\n&lt;tablelist n=1&gt;\n>>> tables.export('foo.csv', f='csv', compress=true) # json, excel, html, markdown, sqlite\n>>> tables[0]\n&lt;table shape=(7, 7)&gt;\n>>> tables[0].parsing_report\n{\n    'accuracy': 99.02,\n    'whitespace': 12.24,\n    'order': 1,\n    'page': 1\n}\n>>> tables[0].to_csv('foo.csv') # to_json, to_excel, to_html, to_markdown, to_sqlite\n>>> tables[0].df # get a pandas dataframe!\n</pre>\n\n| cycle name | ki (1/km) | distance (mi) | percent fuel savings |                 |                 |                |\n|------------|-----------|---------------|----------------------|-----------------|-----------------|----------------|\n|            |           |               | improved speed       | decreased accel | eliminate stops | decreased idle |\n| 2012_2     | 3.30      | 1.3           | 5.9%                 | 9.5%            | 29.2%           | 17.4%          |\n| 2145_1     | 0.68      | 11.2          | 2.4%                 | 0.1%            | 9.5%            | 2.7%           |\n| 4234_1     | 0.59      | 58.7          | 8.5%                 | 1.3%            | 8.5%            | 3.3%           |\n| 2032_2     | 0.17      | 57.8          | 21.7%                | 0.3%            | 2.7%            | 1.2%           |\n| 4171_1     | 0.07      | 173.9         | 58.1%                | 1.6%            | 2.1%            | 0.5%           |\n\ncamelot also comes packaged with a [command-line interface](https://camelot-py.readthedocs.io/en/master/user/cli.html)!\n\n**note:** camelot only works with text-based pdfs and not scanned documents. (as tabula [explains](https://github.com/tabulapdf/tabula#why-tabula), \"if you can click and drag to select text in your table in a pdf viewer, then your pdf is text-based\".)\n\nyou can check out some frequently asked questions [here](https://camelot-py.readthedocs.io/en/master/user/faq.html).\n\n## why camelot?\n\n- **configurability**: camelot gives you control over the table extraction process with [tweakable settings](https://camelot-py.readthedocs.io/en/master/user/advanced.html).\n- **metrics**: you can discard bad tables based on metrics like accuracy and whitespace, without having to manually look at each table.\n- **output**: each table is extracted into a **pandas dataframe**, which seamlessly integrates into [etl and data analysis workflows](https://gist.github.com/vinayak-mehta/e5949f7c2410a0e12f25d3682dc9e873). you can also export tables to multiple formats, which include csv, json, excel, html, markdown, and sqlite.\n\nsee [comparison with similar libraries and tools](https://github.com/camelot-dev/camelot/wiki/comparison-with-other-pdf-table-extraction-libraries-and-tools).\n\n## support the development\n\nif camelot has helped you, please consider supporting its development with a one-time or monthly donation [on opencollective](https://opencollective.com/camelot).\n\n## installation\n\n### using conda\n\nthe easiest way to install camelot is with [conda](https://conda.io/docs/), which is a package manager and environment management system for the [anaconda](http://docs.continuum.io/anaconda/) distribution.\n\n<pre>\n$ conda install -c conda-forge camelot-py\n</pre>\n\n### using pip\n\nafter [installing the dependencies](https://camelot-py.readthedocs.io/en/master/user/install-deps.html) ([tk](https://packages.ubuntu.com/bionic/python/python-tk) and [ghostscript](https://www.ghostscript.com/)), you can also just use pip to install camelot:\n\n<pre>\n$ pip install \"camelot-py[base]\"\n</pre>\n\n### from the source code\n\nafter [installing the dependencies](https://camelot-py.readthedocs.io/en/master/user/install.html#using-pip), clone the repo using:\n\n<pre>\n$ git clone https://www.github.com/camelot-dev/camelot\n</pre>\n\nand install camelot using pip:\n\n<pre>\n$ cd camelot\n$ pip install \".[base]\"\n</pre>\n\n## documentation\n\nthe documentation is available at [http://camelot-py.readthedocs.io/](http://camelot-py.readthedocs.io/).\n\n## wrappers\n\n- [camelot-php](https://github.com/randomstate/camelot-php) provides a [php](https://www.php.net/) wrapper on camelot.\n\n## contributing\n\nthe [contributor's guide](https://camelot-py.readthedocs.io/en/master/dev/contributing.html) has detailed information about contributing issues, documentation, code, and tests.\n\n## versioning\n\ncamelot uses [semantic versioning](https://semver.org/). for the available versions, see the tags on this repository. for the changelog, you can check out [history.md](https://github.com/camelot-dev/camelot/blob/master/history.md).\n\n## license\n\nthis project is licensed under the mit license, see the [license](https://github.com/camelot-dev/camelot/blob/master/license) file for details.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "camelot-py",
  "package_url": "https://pypi.org/project/camelot-py/",
  "project_url": "https://pypi.org/project/camelot-py/",
  "project_urls": {
    "Homepage": "http://camelot-py.readthedocs.io/"
  },
  "release_url": "https://pypi.org/project/camelot-py/0.11.0/",
  "requires_dist": [
    "chardet (>=3.0.4)",
    "click (>=6.7)",
    "numpy (>=1.13.3)",
    "openpyxl (>=2.5.8)",
    "pandas (>=0.23.4)",
    "pdfminer.six (>=20200726)",
    "pypdf (>=3.0.0)",
    "tabulate (>=0.8.9)",
    "ghostscript (>=0.7) ; extra == 'all'",
    "opencv-python (>=3.4.2.17) ; extra == 'all'",
    "pdftopng (>=0.2.3) ; extra == 'all'",
    "matplotlib (>=2.2.3) ; extra == 'all'",
    "ghostscript (>=0.7) ; extra == 'base'",
    "opencv-python (>=3.4.2.17) ; extra == 'base'",
    "pdftopng (>=0.2.3) ; extra == 'base'",
    "ghostscript (>=0.7) ; extra == 'cv'",
    "opencv-python (>=3.4.2.17) ; extra == 'cv'",
    "pdftopng (>=0.2.3) ; extra == 'cv'",
    "codecov (>=2.0.15) ; extra == 'dev'",
    "pytest (>=5.4.3) ; extra == 'dev'",
    "pytest-cov (>=2.10.0) ; extra == 'dev'",
    "pytest-mpl (>=0.11) ; extra == 'dev'",
    "pytest-runner (>=5.2) ; extra == 'dev'",
    "Sphinx (>=3.1.2) ; extra == 'dev'",
    "sphinx-autobuild (>=2021.3.14) ; extra == 'dev'",
    "ghostscript (>=0.7) ; extra == 'dev'",
    "opencv-python (>=3.4.2.17) ; extra == 'dev'",
    "pdftopng (>=0.2.3) ; extra == 'dev'",
    "matplotlib (>=2.2.3) ; extra == 'dev'",
    "matplotlib (>=2.2.3) ; extra == 'plot'"
  ],
  "requires_python": "",
  "summary": "pdf table extraction for humans.",
  "version": "0.11.0",
  "releases": [],
  "developers": [
    "vinayak_mehta",
    "vmehta94@gmail.com"
  ],
  "kwds": "camelot badge badges tabulapdf pip",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_camelot_py",
  "homepage": "http://camelot-py.readthedocs.io/",
  "release_count": 24,
  "dependency_ids": [
    "pypi_chardet",
    "pypi_click",
    "pypi_codecov",
    "pypi_ghostscript",
    "pypi_matplotlib",
    "pypi_numpy",
    "pypi_opencv_python",
    "pypi_openpyxl",
    "pypi_pandas",
    "pypi_pdfminer.six",
    "pypi_pdftopng",
    "pypi_pypdf",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_mpl",
    "pypi_pytest_runner",
    "pypi_sphinx",
    "pypi_sphinx_autobuild",
    "pypi_tabulate"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: science/research",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": "<p align=\"center\">\n<img width=50% src=\"https://alteryx-oss-web-images.s3.amazonaws.com/evalml_horizontal.svg\" alt=\"evalml\" />\n</p>\n\n<p align=\"center\">\n    <a href=\"https://github.com/alteryx/woodwork/actions?query=branch%3amain+workflow%3atests\" target=\"_blank\">\n        <img src=\"https://github.com/alteryx/woodwork/workflows/tests/badge.svg?branch=main\" alt=\"tests\" />\n    </a>\n    <a href=\"https://codecov.io/gh/alteryx/evalml\">\n        <img src=\"https://codecov.io/gh/alteryx/evalml/branch/main/graph/badge.svg?token=jdc0ib7kyl\"/>\n    </a>\n    <a href=\"https://evalml.alteryx.com/en/latest/?badge=stable\" target=\"_blank\">\n        <img src=\"https://readthedocs.com/projects/feature-labs-inc-evalml/badge/?version=stable\" alt=\"documentation status\" />\n    </a>\n    <a href=\"https://badge.fury.io/py/evalml\" target=\"_blank\">\n        <img src=\"https://badge.fury.io/py/evalml.svg?maxage=2592000\" alt=\"pypi version\" />\n    </a>\n    <a href=\"https://anaconda.org/conda-forge/evalml\" target=\"_blank\">\n        <img src=\"https://anaconda.org/conda-forge/evalml/badges/version.svg\" alt=\"anaconda version\" />\n    </a>\n    <a href=\"https://pepy.tech/project/evalml\" target=\"_blank\">\n        <img src=\"https://pepy.tech/badge/evalml/month\" alt=\"pypi downloads\" />\n    </a>\n</p>\n<hr>\n\nevalml is an automl library which builds, optimizes, and evaluates machine learning pipelines using domain-specific objective functions.\n\n**key functionality**\n\n* **automation** - makes machine learning easier. avoid training and tuning models by hand. includes data quality checks, cross-validation and more.\n* **data checks** - catches and warns of problems with your data and problem setup before modeling.\n* **end-to-end** - constructs and optimizes pipelines that include state-of-the-art preprocessing, feature engineering, feature selection, and a variety of modeling techniques.\n* **model understanding** - provides tools to understand and introspect on models, to learn how they'll behave in your problem domain.\n* **domain-specific** - includes repository of domain-specific objective functions and an interface to define your own.\n\n## installation \n\ninstall from [pypi](https://pypi.org/project/evalml/):\n\n```bash\npip install evalml\n```\n\nor from the conda-forge channel on [conda](https://anaconda.org/conda-forge/evalml):\n\n```bash\nconda install -c conda-forge evalml\n```\n\n### add-ons\n**update checker** - receive automatic notifications of new woodwork releases\n\npypi:\n\n```bash\npip install \"evalml[updater]\"\n```\nconda:\n```\nconda install -c conda-forge alteryx-open-src-update-checker\n```\n\n## start\n\n#### load and split example data \n```python\nimport evalml\nx, y = evalml.demos.load_breast_cancer()\nx_train, x_test, y_train, y_test = evalml.preprocessing.split_data(x, y, problem_type='binary')\n```\n\n#### run automl\n```python\nfrom evalml.automl import automlsearch\nautoml = automlsearch(x_train=x_train, y_train=y_train, problem_type='binary')\nautoml.search()\n```\n\n#### view pipeline rankings\n```python\nautoml.rankings\n```\n\n#### get best pipeline and predict on new data\n```python\npipeline = automl.best_pipeline\npipeline.predict(x_test)\n```\n\n## next steps\n\nread more about evalml on our [documentation page](https://evalml.alteryx.com/):\n\n* [installation](https://evalml.alteryx.com/en/stable/install.html) and [getting started](https://evalml.alteryx.com/en/stable/start.html).\n* [tutorials](https://evalml.alteryx.com/en/stable/tutorials.html) on how to use evalml.\n* [user guide](https://evalml.alteryx.com/en/stable/user_guide.html) which describes evalml's features.\n* full [api reference](https://evalml.alteryx.com/en/stable/api_reference.html)\n\n## support\n\nthe evalml community is happy to provide support to users of evalml. project support can be found in four places depending on the type of question:\n1. for usage questions, use [stack overflow](https://stackoverflow.com/questions/tagged/evalml) with the `evalml` tag.\n2. for bugs, issues, or feature requests start a [github issue](https://github.com/alteryx/evalml/issues).\n3. for discussion regarding development on the core library, use [slack](https://join.slack.com/t/alteryx-oss/shared_invite/zt-182tyvuxv-nzin6eicef8tbziukp0bna).\n4. for everything else, the core developers can be reached by email at open_source_support@alteryx.com\n\n## built at alteryx\n\n**evalml** is an open source project built by [alteryx](https://www.alteryx.com). to see the other open source projects we\u2019re working on visit [alteryx open source](https://www.alteryx.com/open-source). if building impactful data science pipelines is important to you or your business, please get in touch.\n\n<p align=\"center\">\n  <a href=\"https://www.alteryx.com/open-source\">\n    <img src=\"https://alteryx-oss-web-images.s3.amazonaws.com/opensource_logo-01.png\" alt=\"alteryx open source\" width=\"800\"/>\n  </a>\n</p>\n",
  "docs_url": null,
  "keywords": "data science,machine learning,optimization,automl",
  "license": "bsd 3-clause license  copyright (c) 2019, alteryx, inc. all rights reserved.  redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  * redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.  * redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.  * neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.  this software is provided by the copyright holders and contributors \"as is\" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. in no event shall the copyright holder or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage. ",
  "name": "evalml",
  "package_url": "https://pypi.org/project/evalml/",
  "project_url": "https://pypi.org/project/evalml/",
  "project_urls": {
    "Changes": "https://evalml.alteryx.com/en/latest/release_notes.html",
    "Chat": "https://join.slack.com/t/alteryx-oss/shared_invite/zt-182tyvuxv-NzIn6eiCEf8TBziuKp0bNA",
    "Documentation": "https://evalml.alteryx.com",
    "Issue Tracker": "https://github.com/alteryx/evalml/issues",
    "Source Code": "https://github.com/alteryx/evalml/",
    "Twitter": "https://twitter.com/alteryxoss"
  },
  "release_url": "https://pypi.org/project/evalml/0.82.0/",
  "requires_dist": [
    "numpy >=1.22.0",
    "pandas <2.1.0,>=1.5.0",
    "scipy >=1.5.0",
    "scikit-learn >=1.3.0",
    "scikit-optimize >=0.9.0",
    "pyzmq >=20.0.0",
    "colorama >=0.4.4",
    "cloudpickle >=1.5.0",
    "click >=8.0.0",
    "shap >=0.42.0",
    "statsmodels >=0.12.2",
    "texttable >=1.6.2",
    "woodwork[dask] >=0.22.0",
    "dask !=2022.10.1,>=2022.2.0",
    "distributed !=2022.10.1,>=2022.2.0",
    "featuretools[dask] >=1.16.0",
    "nlp-primitives >=2.9.0",
    "networkx <3.2,>=2.6",
    "plotly >=5.0.0",
    "kaleido >=0.1.0",
    "ipywidgets >=7.5",
    "xgboost >=1.7.0",
    "catboost >=1.1.1",
    "lightgbm >=4.0.0",
    "matplotlib >=3.3.3",
    "seaborn >=0.11.1",
    "category-encoders <=2.5.1.post0,>=2.2.2",
    "imbalanced-learn >=0.11.0",
    "pmdarima >=1.8.5",
    "sktime >=0.21.0",
    "lime >=0.2.0.1",
    "vowpalwabbit >=8.11.0",
    "tomli >=2.0.1",
    "packaging >=23.0",
    "black[jupyter] >=22.3.0",
    "holidays <0.21,>=0.13",
    "graphviz >=0.13 ; platform_system != \"Windows\"",
    "evalml[prophet,updater] ; extra == 'complete'",
    "ruff ==0.0.228 ; extra == 'dev'",
    "darglint ==1.8.0 ; extra == 'dev'",
    "pre-commit >=2.20.0 ; extra == 'dev'",
    "evalml[docs,test] ; extra == 'dev'",
    "docutils <0.17,>=0.15.2 ; extra == 'docs'",
    "pydata-sphinx-theme >=0.3.1 ; extra == 'docs'",
    "astroid <=2.6.6 ; extra == 'docs'",
    "Sphinx >=4.5.0 ; extra == 'docs'",
    "nbconvert >=6.4.5 ; extra == 'docs'",
    "nbsphinx <0.9.0,>=0.8.5 ; extra == 'docs'",
    "sphinx-autoapi ; extra == 'docs'",
    "sphinx-inline-tabs ==2022.1.2b11 ; extra == 'docs'",
    "sphinx-copybutton ==0.4.0 ; extra == 'docs'",
    "myst-parser ==0.16.1 ; extra == 'docs'",
    "prophet >=1.1.2 ; extra == 'prophet'",
    "pytest ==7.1.2 ; extra == 'test'",
    "pytest-xdist ==2.1.0 ; extra == 'test'",
    "pytest-timeout ==1.4.2 ; extra == 'test'",
    "pytest-cov ==2.10.1 ; extra == 'test'",
    "nbval ==0.9.3 ; extra == 'test'",
    "IPython <8.12.1,>=8.10.0 ; extra == 'test'",
    "PyYAML ==5.4 ; extra == 'test'",
    "coverage[toml] >=6.4 ; extra == 'test'",
    "alteryx-open-src-update-checker >=2.1.0 ; extra == 'updater'"
  ],
  "requires_python": "<4,>=3.8",
  "summary": "an automl library that builds, optimizes, and evaluates machine learning pipelines using domain-specific objective functions",
  "version": "0.82.0",
  "releases": [],
  "developers": [
    "open_source_support@alteryx.com"
  ],
  "kwds": "automl workflow badge workflows automlsearch",
  "license_kwds": "copyright liability liable negligence disclaimer",
  "libtype": "pypi",
  "id": "pypi_evalml",
  "homepage": "",
  "release_count": 85,
  "dependency_ids": [
    "pypi_alteryx_open_src_update_checker",
    "pypi_astroid",
    "pypi_black",
    "pypi_catboost",
    "pypi_category_encoders",
    "pypi_click",
    "pypi_cloudpickle",
    "pypi_colorama",
    "pypi_coverage",
    "pypi_darglint",
    "pypi_dask",
    "pypi_distributed",
    "pypi_docutils",
    "pypi_evalml",
    "pypi_featuretools",
    "pypi_graphviz",
    "pypi_holidays",
    "pypi_imbalanced_learn",
    "pypi_ipython",
    "pypi_ipywidgets",
    "pypi_kaleido",
    "pypi_lightgbm",
    "pypi_lime",
    "pypi_matplotlib",
    "pypi_myst_parser",
    "pypi_nbconvert",
    "pypi_nbsphinx",
    "pypi_nbval",
    "pypi_networkx",
    "pypi_nlp_primitives",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_plotly",
    "pypi_pmdarima",
    "pypi_pre_commit",
    "pypi_prophet",
    "pypi_pydata_sphinx_theme",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_timeout",
    "pypi_pytest_xdist",
    "pypi_pyyaml",
    "pypi_pyzmq",
    "pypi_ruff",
    "pypi_scikit_learn",
    "pypi_scikit_optimize",
    "pypi_scipy",
    "pypi_seaborn",
    "pypi_shap",
    "pypi_sktime",
    "pypi_sphinx",
    "pypi_sphinx_autoapi",
    "pypi_sphinx_copybutton",
    "pypi_sphinx_inline_tabs",
    "pypi_statsmodels",
    "pypi_texttable",
    "pypi_tomli",
    "pypi_vowpalwabbit",
    "pypi_woodwork",
    "pypi_xgboost"
  ]
}
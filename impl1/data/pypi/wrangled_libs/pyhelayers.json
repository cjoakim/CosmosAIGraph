{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "license :: other/proprietary license",
    "operating system :: os independent",
    "topic :: security :: cryptography"
  ],
  "description": "# helayers sdk for homomorphic encryption\n\nibm helayers is software development kit (sdk) for the practical and efficient\nexecution of encrypted workloads using fully homomorphic encrypted data.\nhelayers is designed to enable application developers and data scientists to\nseamlessly apply advanced privacy preserving techniques without requiring\nspecialized skills in cryptography.\n\nthis package is provided under a community edition license for non-commercial\nuse; see [license](https://ibm.ent.box.com/s/zfl6rt2p09811nyy8yow8t3mpsmkmsw6).\nfor commercial deployments and access to the source code, please contact\n[chamliam@ie.ibm.com](mailto:chamliam@ie.ibm.com) for the premium edition\nlicense.\n",
  "docs_url": null,
  "keywords": "helayers,fhe,ai",
  "license": "community edition license for non-commercial use",
  "name": "pyhelayers",
  "package_url": "https://pypi.org/project/pyhelayers/",
  "project_url": "https://pypi.org/project/pyhelayers/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/pyhelayers/1.5.3.0/",
  "requires_dist": [
    "numpy (>=1.14.5)",
    "scikit-learn (>=0.20.0) ; extra == 'ext'",
    "sklearn-json (>=0.1.0) ; extra == 'ext'",
    "tensorflow (>=2.0.0) ; extra == 'ext'"
  ],
  "requires_python": "",
  "summary": "helayers sdk for homomorphic encryption",
  "version": "1.5.3.0",
  "releases": [],
  "developers": [
    "fhestart@us.ibm.com",
    "ibm"
  ],
  "kwds": "homomorphic helayers encryption cryptography encrypted",
  "license_kwds": "community edition license for non-commercial use",
  "libtype": "pypi",
  "id": "pypi_pyhelayers",
  "homepage": "",
  "release_count": 10,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_scikit_learn",
    "pypi_sklearn_json",
    "pypi_tensorflow"
  ]
}
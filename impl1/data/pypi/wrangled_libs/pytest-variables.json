{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing",
    "topic :: utilities"
  ],
  "description": "pytest-variables\n================\n\npytest-variables is a plugin for pytest_ that provides variables to\ntests/fixtures as a dictionary via a file specified on the command line.\n\n.. image:: https://img.shields.io/badge/license-mpl%202.0-blue.svg\n   :target: https://github.com/pytest-dev/pytest-variables/blob/master/license\n   :alt: license\n.. image:: https://img.shields.io/pypi/v/pytest-variables.svg\n   :target: https://pypi.python.org/pypi/pytest-variables/\n   :alt: pypi\n.. image:: https://img.shields.io/travis/pytest-dev/pytest-variables.svg\n   :target: https://travis-ci.org/pytest-dev/pytest-variables/\n   :alt: travis\n.. image:: https://img.shields.io/github/issues-raw/pytest-dev/pytest-variables.svg\n   :target: https://github.com/pytest-dev/pytest-variables/issues\n   :alt: issues\n.. image:: https://img.shields.io/requires/github/pytest-dev/pytest-variables.svg\n   :target: https://requires.io/github/pytest-dev/pytest-variables/requirements/?branch=master\n   :alt: requirements\n\nrequirements\n------------\n\nyou will need the following prerequisites in order to use pytest-variables:\n\n- python 3.7+ or pypy3\n\ninstallation\n------------\n\nto install pytest-variables:\n\n.. code-block:: bash\n\n  $ pip install pytest-variables\n\nadditional formats\n------------------\n\nthe following optional formats are supported, but must be explicitly installed\nas they require additional dependencies:\n\nhuman json\n~~~~~~~~~~\n\n`human json`_ is a configuration file format that caters to humans and helps\nreduce the errors they make. to install human json support:\n\n.. code-block:: bash\n\n  $ pip install pytest-variables[hjson]\n\nyaml\n~~~~\n\nyaml_ is a human friendly data serialization standard for all programming\nlanguages. to install yaml support:\n\n.. code-block:: bash\n\n  $ pip install pytest-variables[yaml]\n\nyaml loader\n^^^^^^^^^^^\n\nyou can specify which loader to use by setting ``yaml_loader`` in ``pytest.ini`` (or similar file)\nto one of the following:\n\n  * baseloader\n  * safeloader\n  * fullloader (default)\n  * unsafeloader\n\n.. code-block:: ini\n\n  [pytest]\n  yaml_loader = baseloader\n\n**note** that loader is case-sensitive.\n\nto learn more about the loader, see `here <https://github.com/yaml/pyyaml/wiki/pyyaml-yaml.load(input)-deprecation>`_\n\ntoml\n~~~~~~~~~~\n\ntoml_ aims to be a minimal configuration file format that's easy to read due to obvious semantics. toml is designed to map unambiguously to a hash table.\nto install toml support:\n\n.. code-block:: bash\n\n  $ pip install pytest-variables[toml]\n\ncontributing\n------------\n\nwe welcome contributions.\n\nto learn more, see `development <https://github.com/pytest-dev/pytest-variables/blob/master/development.rst>`_\n\nspecifying variables\n--------------------\n\nuse the `--variables` command line option one or more times to specify paths to\nfiles containing your variables:\n\n.. code-block:: bash\n\n  $ pytest --variables firefox-53.json --variables windows-10.json\n\n\nwith the following contents for the ``firefox-53.json`` file:\n\n.. code-block:: json\n\n  {\n    \"capabilities\": {\n      \"browser\": \"firefox\",\n      \"browser_version\": \"53.0\"\n    }\n  }\n\nand another file named ``windows-10.json`` with:\n\n.. code-block:: json\n\n  {\n    \"capabilities\": {\n      \"os\": \"windows\",\n      \"os_version\": \"10\",\n      \"resolution\": \"1280x1024\"\n    }\n  }\n\nyou'll get the merged version of your variables:\n\n.. code-block:: json\n\n  {\n    \"capabilities\": {\n      \"browser\": \"firefox\",\n      \"browser_version\": \"53.0\",\n      \"os\": \"windows\",\n      \"os_version\": \"10\",\n      \"resolution\": \"1280x1024\"\n    }\n  }\n\nif multiple files are specified then they will be applied in the order they\nappear on the command line. when duplicate keys with non dictionary_ values\nare encountered, the last to be applied will take priority.\n\naccessing variables\n-------------------\n\nwith a json variables file such as:\n\n.. code-block:: json\n\n  {\n    \"foo\": \"bar\",\n    \"bar\": \"foo\"\n  }\n\nspecify the `variables` funcarg to make the variables available to your tests.\nthe contents of the files are made available as a dictionary_:\n\n.. code-block:: python\n\n  def test_foo(self, variables):\n      assert variables['foo'] == 'bar'\n      assert variables.get('bar') == 'foo'\n      assert variables.get('missing') is none\n\nresources\n---------\n\n- `release notes`_\n- `issue tracker`_\n- code_\n\n.. _pytest: http://pytest.org\n.. _human json: http://hjson.org\n.. _yaml: http://yaml.org\n.. _toml: https://github.com/toml-lang/toml\n.. _dictionary: https://docs.python.org/tutorial/datastructures.html#dictionaries\n.. _release notes:  http://github.com/pytest-dev/pytest-variables/blob/master/changes.rst\n.. _issue tracker: http://github.com/pytest-dev/pytest-variables/issues\n.. _code: http://github.com/pytest-dev/pytest-variables\n",
  "docs_url": null,
  "keywords": "json,pytest,variables",
  "license": "",
  "name": "pytest-variables",
  "package_url": "https://pypi.org/project/pytest-variables/",
  "project_url": "https://pypi.org/project/pytest-variables/",
  "project_urls": {
    "Homepage": "https://github.com/pytest-dev/pytest-variables",
    "Source": "https://github.com/pytest-dev/pytest-variables",
    "Tracker": "https://github.com/pytest-dev/pytest-variables/issues"
  },
  "release_url": "https://pypi.org/project/pytest-variables/3.0.0/",
  "requires_dist": [
    "pytest>=7.0.0",
    "hjson; extra == 'hjson'",
    "black>=22.1.0; extra == 'test'",
    "flake8>=4.0.1; extra == 'test'",
    "pre-commit>=2.17.0; extra == 'test'",
    "tox>=3.24.5; extra == 'test'",
    "toml; extra == 'toml'",
    "pyyaml; extra == 'yaml'"
  ],
  "requires_python": ">=3.7",
  "summary": "pytest plugin for providing variables to tests/fixtures",
  "version": "3.0.0",
  "releases": [],
  "developers": [
    "dhunt@mozilla.com",
    "jimbrannlund@fastmail.com"
  ],
  "kwds": "pytest pytest_ _pytest test_foo dictionary",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pytest_variables",
  "homepage": "",
  "release_count": 15,
  "dependency_ids": [
    "pypi_black",
    "pypi_flake8",
    "pypi_hjson",
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_pyyaml",
    "pypi_toml",
    "pypi_tox"
  ]
}
{
  "classifiers": [
    "development status :: 7 - inactive",
    "framework :: aws cdk",
    "framework :: aws cdk :: 1",
    "intended audience :: developers",
    "license :: osi approved",
    "operating system :: os independent",
    "programming language :: javascript",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "typing :: typed"
  ],
  "description": "# aws iot construct library\n\n<!--begin stability banner-->---\n\n\n![end-of-support](https://img.shields.io/badge/end--of--support-critical.svg?style=for-the-badge)\n\n> aws cdk v1 has reached end-of-support on 2023-06-01.\n> this package is no longer being updated, and users should migrate to aws cdk v2.\n>\n> for more information on how to migrate, see the [*migrating to aws cdk v2* guide](https://docs.aws.amazon.com/cdk/v2/guide/migrating-v2.html).\n\n---\n<!--end stability banner-->\n\naws iot core lets you connect billions of iot devices and route trillions of\nmessages to aws services without managing infrastructure.\n\n## installation\n\ninstall the module:\n\n```console\n$ npm i @aws-cdk/aws-iot\n```\n\nimport it into your code:\n\n```python\nimport aws_cdk.aws_iot as iot\nimport aws_cdk.aws_iot_actions as actions\n```\n\n## `topicrule`\n\ncreate a topic rule that give your devices the ability to interact with aws services.\nyou can create a topic rule with an action that invoke the lambda action as following:\n\n```python\nfunc = lambda_.function(self, \"myfunction\",\n    runtime=lambda_.runtime.nodejs_14_x,\n    handler=\"index.handler\",\n    code=lambda_.code.from_inline(\"\"\"\n            exports.handler = (event) => {\n              console.log(\"it is test for lambda action of aws iot rule.\", event);\n            };\"\"\")\n)\n\niot.topicrule(self, \"topicrule\",\n    topic_rule_name=\"mytopicrule\",  # optional\n    description=\"invokes the lambda function\",  # optional\n    sql=iot.iotsql.from_string_as_ver20160323(\"select topic(2) as device_id, timestamp() as timestamp from 'device/+/data'\"),\n    actions=[actions.lambdafunctionaction(func)]\n)\n```\n\nor, you can add an action after constructing the `topicrule` instance as following:\n\n```python\n# func: lambda.function\n\n\ntopic_rule = iot.topicrule(self, \"topicrule\",\n    sql=iot.iotsql.from_string_as_ver20160323(\"select topic(2) as device_id, timestamp() as timestamp from 'device/+/data'\")\n)\ntopic_rule.add_action(actions.lambdafunctionaction(func))\n```\n\nyou can also supply `erroraction` as following,\nand the iot rule will trigger it if a rule's action is unable to perform:\n\n```python\nimport aws_cdk.aws_logs as logs\n\n\nlog_group = logs.loggroup(self, \"myloggroup\")\n\niot.topicrule(self, \"topicrule\",\n    sql=iot.iotsql.from_string_as_ver20160323(\"select topic(2) as device_id, timestamp() as timestamp from 'device/+/data'\"),\n    error_action=actions.cloudwatchlogsaction(log_group)\n)\n```\n\nif you wanna make the topic rule disable, add property `enabled: false` as following:\n\n```python\niot.topicrule(self, \"topicrule\",\n    sql=iot.iotsql.from_string_as_ver20160323(\"select topic(2) as device_id, timestamp() as timestamp from 'device/+/data'\"),\n    enabled=false\n)\n```\n\nsee also [@aws-cdk/aws-iot-actions](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-iot-actions-readme.html) for other actions.\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "aws-cdk.aws-iot",
  "package_url": "https://pypi.org/project/aws-cdk.aws-iot/",
  "project_url": "https://pypi.org/project/aws-cdk.aws-iot/",
  "project_urls": {
    "Homepage": "https://github.com/aws/aws-cdk",
    "Source": "https://github.com/aws/aws-cdk.git"
  },
  "release_url": "https://pypi.org/project/aws-cdk.aws-iot/1.204.0/",
  "requires_dist": [
    "aws-cdk.core (==1.204.0)",
    "constructs (<4.0.0,>=3.3.69)",
    "jsii (<2.0.0,>=1.84.0)",
    "publication (>=0.0.3)",
    "typeguard (~=2.13.3)"
  ],
  "requires_python": "~=3.7",
  "summary": "the cdk construct library for aws::iot",
  "version": "1.204.0",
  "releases": [],
  "developers": [
    "amazon_web_services"
  ],
  "kwds": "aws_iot aws_iot_actions aws_cdk aws iot",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_aws_cdk.aws_iot",
  "homepage": "https://github.com/aws/aws-cdk",
  "release_count": 258,
  "dependency_ids": [
    "pypi_aws_cdk.core",
    "pypi_constructs",
    "pypi_jsii",
    "pypi_publication",
    "pypi_typeguard"
  ]
}
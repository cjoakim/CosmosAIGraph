{
  "classifiers": [
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "\n.. image:: https://readthedocs.org/projects/pywin32-ctypes/badge/?version=master\n   :target: http://pywin32-ctypes.readthedocs.org/en/latest/?badge=master\n   :alt: documentation status\n\na reimplementation of pywin32 that is pure python. the default\nbehaviour will try to use cffi (>= 1.3.0), if available, and fall back\nto using ctypes. please note that there is no need to have a compiler\navailable on installation or at runtime.\n\nusage\n=====\n\nexample::\n\n  # equivalent to 'import win32api' from pywin32.\n  from win32ctypes.pywin32 import win32api\n\n  win32api.loadlibraryex(sys.executable, 0, win32api.load_library_as_datafile)\n\n.. note::\n\n   currently pywin32ctypes implements only a very small subset\n   of pywin32, for internal needs at enthought. we do welcome\n   additional features and prs, though.\n\ndevelopment setup\n=================\n\nthe following should be good enough::\n\n  pip install -r test_requirements.txt\n  python install -e .\n\n.. note::\n\n   - while pywin32-ctypes should regularly be tested on windows, you can also\n     develop/test on unix by using wine\n\nchange log\n==========\n\nversion 0.2.2\n-------------\n\n- use ctypes.set_last_error to avoid race conditions (#122)\n\nversion 0.2.1\n-------------\n\n- use faulthandler when testing and fix discovered errors (#115, #117).\n- fix support for none username in credentials to be consistent in all backends (#99).\n- test also on cp38, cp39, cp310, cp311 and use cp38 for linking (#114, #107, #100).\n- add support for credenumerate extending code from @markb-ee (#110, #109, #111)\n- remove support for older python versions < cp36 (#104, #120).\n\nversion 0.2.0\n-------------\n\n- fix syntax error when installing in python 3.7 (#81).\n- support testing on python 3.7 (#82).\n- support testing on python 3.3 and python 3.4 (#77).\n- do not use 2to3 (#75).\n- support lazy wrapping of win32 functions (#67).\n- add cred_persist constants (#79 contributed by @tivnet).\n\nversion 0.1.2\n-------------\n\n(bugfix release)\n\n- fix implementation for the deprecated api (#64).\n\nversion 0.1.1\n-------------\n\n(bugfix release)\n\n- update manifest.in entries (#63)\n- fix version path in manifest.in (#62 contributed by @minchinweb)\n\n\nversion 0.1.0\n-------------\n\n- update tests and provide better compatibility with pywin32 for\n  resource functions\n- fix: python 3.5 and 3.6 support (#52).\n- api additions to allow pywin32-ctypes to work with pyinstaller (#46\n  and #57 contributed by @virtuald).\n- fix: do not update the global copy of the windows dlls (#42)\n- add documentation and setup automatic builds in readthedocs (#3, #36).\n- add cffi backend to be used when available (#31).\n- fix: enumresourcetypes and enumresourcenames would only return ints\n  (#21, #30).\n- restructure package layout to split core wrapping modules from\n  pywin32 emulation (#15, #17).\n\nversion 0.0.1\n-------------\n\n7/04/2014\n\n- python 2.6 support (#13)\n- python 3 support (#12)\n- basic maintenance work (#11, #7)\n- fix error raising to be pywin32 compatible (#8)\n- package rename mini_pywin32 -> pywin32-ctypes\n- add travis-ci integration using wine! (#2)\n- support basic library and resource loading (#1)\n- mini_pywin32 is born\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd-3-clause",
  "name": "pywin32-ctypes",
  "package_url": "https://pypi.org/project/pywin32-ctypes/",
  "project_url": "https://pypi.org/project/pywin32-ctypes/",
  "project_urls": {
    "Homepage": "https://github.com/enthought/pywin32-ctypes"
  },
  "release_url": "https://pypi.org/project/pywin32-ctypes/0.2.2/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "a (partial) reimplementation of pywin32 using ctypes/cffi",
  "version": "0.2.2",
  "releases": [],
  "developers": [
    "enthought_inc",
    "info@enthough.com"
  ],
  "kwds": "pywin32ctypes pywin32 win32ctypes mini_pywin32 win32api",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_pywin32_ctypes",
  "homepage": "https://github.com/enthought/pywin32-ctypes",
  "release_count": 7,
  "dependency_ids": []
}
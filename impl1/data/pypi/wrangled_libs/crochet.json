{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "crochet: use twisted anywhere!\n==============================\n\ncrochet is an mit-licensed library that makes it easier to use twisted from\nregular blocking code. some use cases include:\n\n* easily use twisted from a blocking framework like django or flask.\n* write a library that provides a blocking api, but uses twisted for its\n  implementation.\n* port blocking code to twisted more easily, by keeping a backwards\n  compatibility layer.\n* allow normal twisted programs that use threads to interact with twisted more\n  cleanly from their threaded parts. for example, this can be useful when using\n  twisted as a `wsgi container`_.\n\n.. _wsgi container: https://twistedmatrix.com/documents/current/web/howto/web-in-60/wsgi.html\n\ncrochet is maintained by itamar turner-trauring.\n\n  **note:** crochet development is pretty slow these days because mostly it **just works**. pypi shows about 30,000 downloads a month, so existing users seem happy: https://pypistats.org/packages/crochet\n\nyou can install crochet by running::\n\n  $ pip install crochet\n\ndownloads are available on `pypi`_.\n\ndocumentation can be found on `read the docs`_.\n\nbugs and feature requests should be filed at the project `github page`_.\n\n.. _read the docs: https://crochet.readthedocs.org/\n.. _github page: https://github.com/itamarst/crochet/\n.. _pypi: https://pypi.python.org/pypi/crochet\n\n\napi and features\n================\n\ncrochet supports python 3.8, 3.9, 3.10, and 3.11 as well as pypy3.\n\ncrochet provides the following basic apis:\n\n* allow blocking code to call into twisted and block until results are available\n  or a timeout is hit, using the ``crochet.wait_for`` decorator.\n* a lower-level api (``crochet.run_in_reactor``) allows blocking code to run\n  code \"in the background\" in the twisted thread, with the ability to repeatedly\n  check if it's done.\n\ncrochet will do the following on your behalf in order to enable these apis:\n\n* transparently start twisted's reactor in a thread it manages.\n* shut down the reactor automatically when the process' main thread finishes.\n* hook up twisted's log system to the python standard library ``logging``\n  framework. unlike twisted's built-in ``logging`` bridge, this includes\n  support for blocking `handler` instances.\n\nwhat's new\n==========\n\n2.1.0\n^^^^^\n\n* various internal modernizations and maintenance.\n* dropped python 3.6 and 3.7 support.\n\n2.0.0\n^^^^^\n\nnew features:\n\n* it's possible to decorate ``async/await`` twisted functions with ``@wait_for`` and ``@run_in_reactor``, thanks to \u00e1rni m\u00e1r j\u00f3nsson.\n* added type hints, thanks to merlin davis.\n* added formal support for python 3.9.\n\n\nremoved features:\n\n* dropped the deprecated apis ``@wait_for_reactor``, ``@in_reactor``, ``deferredresult``, the ``wrapped_function`` attribute, and unlimited timeouts on ``eventualresult.wait()``.\n* dropped support for python 2.7 and 3.5.\n\n1.12.0\n^^^^^^\n\nbug fixes:\n\n* fix a timeout overflow bug in 32-bit machines.\n\n\n1.11.0\n^^^^^^\n\nnew features:\n\n* added support for python 3.8 and pypy 3.\n\nbackwards incompatibility:\n\n* dropped support for python 3.4, since latest twisted doesn't support it.\n\n1.10.0\n^^^^^^\n\nnew features:\n\n* added support for python 3.7. thanks to jeremy cline for the patch.\n\n1.9.0\n^^^^^\n\nnew features:\n\n* the underlying callable wrapped ``@run_in_reactor`` and ``@wait_for`` is now available via the more standard ``__wrapped__`` attribute.\n\nbackwards incompatibility (in tests):\n\n* this was actually introduced in 1.8.0: ``wrapped_function`` may not always be available on decorated callables.\n  you should use ``__wrapped__`` instead.\n\nbug fixes:\n\n* fixed regression in 1.8.0 where bound method couldn't be wrapped.\n  thanks to 2mf for the bug report.\n\n1.8.0\n^^^^^\n\nnew features:\n\n* signatures on decorated functions now match the original functions.\n  thanks to mikhail terekhov for the original patch.\n* documentation improvements, including an api reference.\n\nbug fixes:\n\n* switched to epoll reactor for logging thread.\n  anecdotal evidence suggests this fixes some issues on aws lambda, but it's not clear why.\n  thanks to rolando espinoza for the patch.\n* it's now possible to call ``@run_in_reactor`` and ``@wait_for`` above a ``@classmethod``.\n  thanks to vak for the bug report.\n\n1.7.0\n^^^^^\n\nbug fixes:\n\n* if the python ``logging.handler`` throws an exception crochet no longer goes into a death spiral.\n  thanks to michael schlenker for the bug report.\n\nremoved features:\n\n* versions of twisted < 16.0 are no longer supported (i.e. no longer tested in ci.)\n\n1.6.0\n^^^^^\n\nnew features:\n\n* added support for python 3.6.\n\n1.5.0\n^^^^^\n\nnew features:\n\n* added support for python 3.5.\n\nremoved features:\n\n* python 2.6, python 3.3, and versions of twisted < 15.0 are no longer supported.\n\n1.4.0\n^^^^^\n\nnew features:\n\n* added support for python 3.4.\n\ndocumentation:\n\n* added a section on known issues and workarounds.\n\nbug fixes:\n\n* main thread detection (used to determine when crochet should shutdown) is now less fragile.\n  this means crochet now supports more environments, e.g. uwsgi.\n  thanks to ben picolo for the patch.\n\n1.3.0\n^^^^^\n\nbug fixes:\n\n* it is now possible to call ``eventualresult.wait()`` (or functions\n  wrapped in ``wait_for``) at import time if another thread holds the\n  import lock. thanks to ken struys for the patch.\n\n1.2.0\n^^^^^\nnew features:\n\n* ``crochet.wait_for`` implements the timeout/cancellation pattern documented\n  in previous versions of crochet. ``crochet.wait_for_reactor`` and\n  ``eventualresult.wait(timeout=none)`` are now deprecated, since lacking\n  timeouts they could potentially block forever.\n* functions wrapped with ``wait_for`` and ``run_in_reactor`` can now be accessed\n  via the ``wrapped_function`` attribute, to ease unit testing of the underlying\n  twisted code.\n\napi changes:\n\n* it is no longer possible to call ``eventualresult.wait()`` (or functions\n  wrapped with ``wait_for``) at import time, since this can lead to deadlocks\n  or prevent other threads from importing. thanks to tom prince for the bug\n  report.\n\nbug fixes:\n\n* ``warnings`` are no longer erroneously turned into twisted log messages.\n* the reactor is now only imported when ``crochet.setup()`` or\n  ``crochet.no_setup()`` are called, allowing daemonization if only ``crochet``\n  is imported (http://tm.tl/7105). thanks to daniel nephin for the bug report.\n\ndocumentation:\n\n* improved motivation, added contact info and news to the documentation.\n* better example of using crochet from a normal twisted application.\n\n1.1.0\n^^^^^\nbug fixes:\n\n* ``eventualresult.wait()`` can now be used safely from multiple threads,\n  thanks to gavin panella for reporting the bug.\n* fixed reentrancy deadlock in the logging code caused by\n  http://bugs.python.org/issue14976, thanks to rod morehead for reporting the\n  bug.\n* crochet now installs on python 3.3 again, thanks to ben cordero.\n* crochet should now work on windows, thanks to konstantinos koukopoulos.\n* crochet tests can now run without adding its absolute path to pythonpath or\n  installing it first.\n\ndocumentation:\n\n* ``eventualresult.original_failure`` is now documented.\n\n1.0.0\n^^^^^\ndocumentation:\n\n* added section on use cases and alternatives. thanks to tobias oberstein for\n  the suggestion.\n\nbug fixes:\n\n* twisted does not have to be pre-installed to run ``setup.py``, thanks to\n  paul weaver for bug report and chris scutcher for patch.\n* importing crochet does not have side-effects (installing reactor event)\n  any more.\n* blocking calls are interrupted earlier in the shutdown process, to reduce\n  scope for deadlocks. thanks to rmorehead for bug report.\n\n0.9.0\n^^^^^\nnew features:\n\n* expanded and much improved documentation, including a new section with\n  design suggestions.\n* new decorator ``@wait_for_reactor`` added, a simpler alternative to\n  ``@run_in_reactor``.\n* refactored ``@run_in_reactor``, making it a bit more responsive.\n* blocking operations which would otherwise never finish due to reactor having\n  stopped (``eventualresult.wait()`` or ``@wait_for_reactor`` decorated call)\n  will be interrupted with a ``reactorstopped`` exception. thanks to rmorehead\n  for the bug report.\n\nbug fixes:\n\n* ``@run_in_reactor`` decorated functions (or rather, their generated wrapper)\n  are interrupted by ctrl-c.\n* on posix platforms, a workaround is installed to ensure processes started by\n  `reactor.spawnprocess` have their exit noticed. see `twisted ticket 6378`_\n  for more details about the underlying issue.\n\n.. _twisted ticket 6378: http://tm.tl/6738\n\n0.8.1\n^^^^^\n* ``eventualresult.wait()`` now raises error if called in the reactor thread,\n  thanks to david buchmann.\n* unittests are now included in the release tarball.\n* allow ctrl-c to interrupt ``eventualresult.wait(timeout=none)``.\n\n0.7.0\n^^^^^\n* improved documentation.\n\n0.6.0\n^^^^^\n* renamed ``deferredresult`` to ``eventualresult``, to reduce confusion with\n  twisted's ``deferred`` class. the old name still works, but is deprecated.\n* deprecated ``@in_reactor``, replaced with ``@run_in_reactor`` which doesn't\n  change the arguments to the wrapped function. the deprecated api still works,\n  however.\n* unhandled exceptions in ``eventualresult`` objects are logged.\n* added more examples.\n* ``setup.py sdist`` should work now.\n\n0.5.0\n^^^^^\n* initial release.\n",
  "docs_url": null,
  "keywords": "twisted threading",
  "license": "mit",
  "name": "crochet",
  "package_url": "https://pypi.org/project/crochet/",
  "project_url": "https://pypi.org/project/crochet/",
  "project_urls": {
    "Homepage": "https://github.com/itamarst/crochet"
  },
  "release_url": "https://pypi.org/project/crochet/2.1.1/",
  "requires_dist": [
    "Twisted (>=16.0)",
    "wrapt"
  ],
  "requires_python": ">=3.8.0",
  "summary": "use twisted anywhere!",
  "version": "2.1.1",
  "releases": [],
  "developers": [
    "itamar@itamarst.org",
    "itamar_turner"
  ],
  "kwds": "twisted twistedmatrix crochet _twisted wsgi",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_crochet",
  "homepage": "https://github.com/itamarst/crochet",
  "release_count": 19,
  "dependency_ids": [
    "pypi_twisted",
    "pypi_wrapt"
  ]
}
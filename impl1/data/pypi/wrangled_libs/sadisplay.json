{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3"
  ],
  "description": "=========\nsadisplay\n=========\n\nabout\n=====\nsimple package for describing sqlalchemy schema and display raw database\ntables. relation detecting by `foreignkey` columns.\nsupports mapped class inherit. bsd licensed.\n\n\noutput formats:\n\n* `plantuml <http://plantuml.sourceforge.net/>`_ class diagram\n* `dot <http://www.graphviz.org/>`_ graphviz directed graphs\n\n\nrequirements\n============\n* python >= 2.5\n* sqlalchemy >= 0.5\n\n\ninstall\n=======\n\n::\n\n    pip install sadisplay\n\nfrom bitbucket::\n\n    pip install http://bitbucket.org/estin/sadisplay/get/tip.tar.gz\n    # or\n    easy_install http://bitbucket.org/estin/sadisplay/get/tip.tar.gz\n\n\nusage\n=====\n\nwrite simple script in your project environment::\n\n    import codecs\n    import sadisplay\n    from yourapp import model\n\n    desc = sadisplay.describe(\n        [getattr(model, attr) for attr in dir(model)],\n        show_methods=true,\n        show_properties=true,\n        show_indexes=true,\n    )\n    with codecs.open('schema.plantuml', 'w', encoding='utf-8') as f:\n        f.write(sadisplay.plantuml(desc))\n    with codecs.open('schema.dot', 'w', encoding='utf-8') as f:\n        f.write(sadisplay.dot(desc))\n\n    # or only part of schema\n    desc = sadisplay.describe([model.user, model.group, model.persmission])\n    with codecs.open('auth.plantuml', 'w', encoding='utf-8') as f:\n        f.write(sadisplay.plantuml(desc))\n    with codecs.open('auth.dot', 'w', encoding='utf-8') as f:\n        f..write(sadisplay.dot(desc))\n\n\nrender plantuml class diagram::\n\n    $ java -jar plantuml.jar schema.plantuml\n\n    # or for svg format\n    $ java -jar plantuml.jar -tsvg schema.plantuml\n\n\nrender graph by graphviz::\n\n    $ dot -tpng schema.dot > schema.png\n\n\nalso you can display you sql database tables by reflecting feature::\n\n    $ sadisplay -u <url connection string to db> -r dot > schema.dot\n    $ dot -tpng schema.dot > schema.png\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "sadisplay",
  "package_url": "https://pypi.org/project/sadisplay/",
  "project_url": "https://pypi.org/project/sadisplay/",
  "project_urls": {
    "Homepage": "http://bitbucket.org/estin/sadisplay"
  },
  "release_url": "https://pypi.org/project/sadisplay/0.4.9/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "sqlalchemy schema display script",
  "version": "0.4.9",
  "releases": [],
  "developers": [
    "evgeniy_tatarkin",
    "tatarkin.evg@gmail.com"
  ],
  "kwds": "sqlalchemy schema database tables foreignkey",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_sadisplay",
  "homepage": "http://bitbucket.org/estin/sadisplay",
  "release_count": 20,
  "dependency_ids": []
}
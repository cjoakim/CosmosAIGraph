{
  "classifiers": [
    "development status :: 2 - pre-alpha",
    "intended audience :: developers",
    "license :: free for non-commercial use",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: artificial intelligence"
  ],
  "description": "<div align=\"center\">\n<br/>\n<p align=\"center\">\n    <i>this repository is part of <a href=\"https://sdv.dev\">the synthetic data vault project</a>, a project from <a href=\"https://datacebo.com\">datacebo</a>.</i>\n</p>\n\n[![development status](https://img.shields.io/badge/development%20status-2%20--%20pre--alpha-yellow)](https://pypi.org/search/?c=development+status+%3a%3a+2+-+pre-alpha)\n[![pypi shield](https://img.shields.io/pypi/v/ctgan.svg)](https://pypi.python.org/pypi/ctgan)\n[![unit tests](https://github.com/sdv-dev/ctgan/actions/workflows/unit.yml/badge.svg)](https://github.com/sdv-dev/ctgan/actions/workflows/unit.yml)\n[![downloads](https://pepy.tech/badge/ctgan)](https://pepy.tech/project/ctgan)\n[![coverage status](https://codecov.io/gh/sdv-dev/ctgan/branch/main/graph/badge.svg)](https://codecov.io/gh/sdv-dev/ctgan)\n\n<div align=\"left\">\n<br/>\n<p align=\"center\">\n<a href=\"https://github.com/sdv-dev/ctgan\">\n<img align=\"center\" width=40% src=\"https://github.com/sdv-dev/sdv/blob/stable/docs/images/ctgan-datacebo.png\"></img>\n</a>\n</p>\n</div>\n\n</div>\n\n# overview\n\nctgan\u00a0is a collection of deep learning based\u00a0synthetic data generators\u00a0for\u00a0single table\u00a0data, which are able to learn from real data and generate synthetic data with high fidelity.\n\n| important links                               |                                                                      |\n| --------------------------------------------- | -------------------------------------------------------------------- |\n| :computer: **[website]**                      | check out the sdv website for more information about our overall synthetic data ecosystem.|\n| :orange_book: **[blog]**                      | a deeper look at open source, synthetic data creation and evaluation.|\n| :book: **[documentation]**                    | quickstarts, user and development guides, and api reference.         |\n| :octocat: **[repository]**                    | the link to the github repository of this library.                   |\n| :keyboard: **[development status]**           | this software is in its pre-alpha stage.                             |\n| [![][slack logo] **community**][community]    | join our slack workspace for announcements and discussions.          |\n\n[website]: https://sdv.dev\n[blog]: https://datacebo.com/blog\n[documentation]: https://bit.ly/sdv-docs\n[repository]: https://github.com/sdv-dev/ctgan\n[license]: https://github.com/sdv-dev/ctgan/blob/main/license\n[development status]: https://pypi.org/search/?c=development+status+%3a%3a+2+-+pre-alpha\n[slack logo]: https://github.com/sdv-dev/sdv/blob/stable/docs/images/slack.png\n[community]: https://bit.ly/sdv-slack-invite\n\ncurrently, this library implements the **ctgan** and **tvae** models described in the [modeling tabular data using conditional gan](https://arxiv.org/abs/1907.00503) paper, presented at the 2019 neurips conference.\n\n# install\n\n## use ctgan through the sdv library\n\n:warning: if you're just getting started with synthetic data, we recommend installing the sdv library which provides user-friendly apis for accessing ctgan. :warning:\n\nthe sdv library provides wrappers for preprocessing your data as well as additional usability features like constraints. see the [sdv documentation](https://bit.ly/sdv-docs) to get started.\n\n## use the ctgan standalone library\n\nalternatively, you can also install and use **ctgan** directly, as a standalone library:\n\n**using `pip`:**\n\n```bash\npip install ctgan\n```\n\n**using `conda`:**\n\n```bash\nconda install -c pytorch -c conda-forge ctgan\n```\n\nwhen using the ctgan library directly, you may need to manually preprocess your data into the correct format, for example:\n\n* continuous data must be represented as floats\n* discrete data must be represented as ints or strings\n* the data should not contain any missing values\n\n# usage example\n\nin this example we load the [adult census dataset](https://archive.ics.uci.edu/ml/datasets/adult)* which is a built-in demo dataset. we use ctgan to learn from the real data and then generate some synthetic data.\n\n```python3\nfrom ctgan import ctgan\nfrom ctgan import load_demo\n\nreal_data = load_demo()\n\n# names of the columns that are discrete\ndiscrete_columns = [\n    'workclass',\n    'education',\n    'marital-status',\n    'occupation',\n    'relationship',\n    'race',\n    'sex',\n    'native-country',\n    'income'\n]\n\nctgan = ctgan(epochs=10)\nctgan.fit(real_data, discrete_columns)\n\n# create synthetic data\nsynthetic_data = ctgan.sample(1000)\n```\n\n*for more information about the dataset see:\ndua, d. and graff, c. (2019). uci machine learning repository [http://archive.ics.uci.edu/ml].\nirvine, ca: university of california, school of information and computer science.\n\n# join our community\n\njoin our [slack channel](https://bit.ly/sdv-slack-invite) to discuss more about ctgan and synthetic data. if you find a bug or have a feature request, you can also [open an issue](https://github.com/sdv-dev/ctgan/issues) on our github.\n\n**interested in contributing to ctgan?** read our [contribution guide](contributing.rst) to get started.\n\n# citing ctgan\n\nif you use ctgan, please cite the following work:\n\n*lei xu, maria skoularidou, alfredo cuesta-infante, kalyan veeramachaneni.* **modeling tabular data using conditional gan**. neurips, 2019.\n\n```latex\n@inproceedings{ctgan,\n  title={modeling tabular data using conditional gan},\n  author={xu, lei and skoularidou, maria and cuesta-infante, alfredo and veeramachaneni, kalyan},\n  booktitle={advances in neural information processing systems},\n  year={2019}\n}\n```\n\n# related projects\nplease note that these projects are external to the sdv ecosystem. they are not affiliated with or maintained by datacebo.\n\n* **r interface for ctgan**: a wrapper around **ctgan** that brings the functionalities to **r** users.\nmore details can be found in the corresponding repository: https://github.com/kasaai/ctgan\n* **ctgan server cli**: a package to easily deploy ctgan onto a remote server. created by timothy pillow @oregonpillow at: https://github.com/oregonpillow/ctgan-server-cli\n\n---\n\n\n<div align=\"center\">\n<a href=\"https://datacebo.com\"><img align=\"center\" width=40% src=\"https://github.com/sdv-dev/sdv/blob/stable/docs/images/datacebo.png\"></img></a>\n</div>\n<br/>\n<br/>\n\n[the synthetic data vault project](https://sdv.dev) was first created at mit's [data to ai lab](\nhttps://dai.lids.mit.edu/) in 2016. after 4 years of research and traction with enterprise, we\ncreated [datacebo](https://datacebo.com) in 2020 with the goal of growing the project.\ntoday, datacebo is the proud developer of sdv, the largest ecosystem for\nsynthetic data generation & evaluation. it is home to multiple libraries that support synthetic\ndata, including:\n\n* \ud83d\udd04 data discovery & transformation. reverse the transforms to reproduce realistic data.\n* \ud83e\udde0 multiple machine learning models -- ranging from copulas to deep learning -- to create tabular,\n  multi table and time series data.\n* \ud83d\udcca measuring quality and privacy of synthetic data, and comparing different synthetic data\n  generation models.\n\n[get started using the sdv package](https://sdv.dev/sdv/getting_started/install.html) -- a fully\nintegrated solution and your one-stop shop for synthetic data. or, use the standalone libraries\nfor specific needs.\n\n\n# history\n\n## v0.8.0 - 2023-11-13\n\nthis release adds a progress bar that will show when setting the `verbose` parameter to `true`\nwhen initializing `tvae`.\n\n### new features\n\n* add verbosity tvae (progress bar + save the loss values) - issue [#300]((https://github.com/sdv-dev/ctgan/issues/300) by @frances-h\n\n## v0.7.5 - 2023-10-05\n\nthis release adds a progress bar that will show when setting the `verbose` parameter to true when initializing `ctgan`. it also removes a warning that was showing.\n\n### maintenance\n\n* remove model_missing_values from clusterbasednormalizer call - pr [#310](https://github.com/sdv-dev/ctgan/pull/310) by @fealho\n* switch default branch from master to main - issue [#311](https://github.com/sdv-dev/ctgan/issues/311) by @amontanez24\n* remove or implement ctgan tests - issue [#312](https://github.com/sdv-dev/ctgan/issues/312) by @fealho\n\n### new features\n\n* add progress bar for ctgan fitting (+ save the loss values) - issue [#298](https://github.com/sdv-dev/ctgan/issues/298) by @frances-h\n\n## v0.7.4 - 2023-07-25\n\nthis release adds support for python 3.11 and drops support for python 3.7.\n\n### maintenance\n\n* why is there an upper bound in the packaging requirement? (packaging<22) - issue [#276](https://github.com/sdv-dev/ctgan/issues/276) by @fealho\n* add support for python 3.11 - issue [#296](https://github.com/sdv-dev/ctgan/issues/296) by @fealho\n* drop support for python 3.7 - issue [#302](https://github.com/sdv-dev/ctgan/issues/302) by @fealho\n\n## v0.7.3 - 2023-05-25\n\nthis release adds support for torch 2.0!\n\n### bugs fixed\n\n* torch 2.0 fails with cuda=false - issue [#288](https://github.com/sdv-dev/ctgan/issues/288) by @amontanez24\n\n### maintenance\n\n* upgrade to torch 2.0 - issue [#280](https://github.com/sdv-dev/ctgan/issues/280) by @frances-h\n\n## v0.7.2 - 2023-05-09\n\nthis release adds support for pandas 2.0! it also fixes a bug in the `load_demo` function.\n\n### bugs fixed\n\n* load_demo raises urllib.error.httperror: http error 403: forbidden - issue [#284](https://github.com/sdv-dev/ctgan/issues/284) by @amontanez24\n\n### maintenance\n\n* remove upper bound for pandas - issue [#282](https://github.com/sdv-dev/ctgan/issues/282) by @frances-h\n\n## v0.7.1 - 2023-02-23\n\nthis release fixes a bug that prevented the `ctgan` model from being saved after sampling.\n\n### bugs fixed\n\n* cannot save ctgansynthesizer after sampling (typeerror) - issue [#270](https://github.com/sdv-dev/ctgan/issues/270) by @pvk-developer\n\n## v0.7.0 - 2023-01-20\n\nthis release adds support for python 3.10 and drops support for python 3.6. it also fixes a couple of the most common warnings that were surfacing.\n\n### new features\n\n* support python 3.10 and 3.11 - issue [#259](https://github.com/sdv-dev/ctgan/issues/259) by @pvk-developer\n\n### bugs fixed\n\n* fix settingwithcopywarning (may be leading to a numerical calculation bug) - issue [#215](https://github.com/sdv-dev/ctgan/issues/215) by @amontanez24\n* futurewarning in data_transformer with pandas 1.5.0 - issue [#246](https://github.com/sdv-dev/ctgan/issues/246) by @amontanez24\n\n### maintenance\n\n* ctgan package maintenance updates - issue [#257](https://github.com/sdv-dev/ctgan/issues/257) by @amontanez24\n\n## v0.6.0 - 2022-10-07\n\nthis release renames the models in ctgan. `ctgansynthesizer` is now called `ctgan` and `tvaesynthesizer` is now called `tvae`.\n\n### new features\n\n* rename synthesizers - issue [#243](https://github.com/sdv-dev/ctgan/issues/243) by @amontanez24\n\n## v0.5.2 - 2022-08-18\n\nthis release updates ctgan to use the latest version of rdt. it also includes performance and robustness updates to the data transformer.\n\n### issues closed\n* bump rdt version - issue [#242](https://github.com/sdv-dev/ctgan/issues/242) by @katxiao\n* single thread data transform is slow for huge table - issue [#151](https://github.com/sdv-dev/ctgan/issues/151) by @mfhbree\n* fix rdt api - issue [#232](https://github.com/sdv-dev/ctgan/issues/232) by @pvk-developer\n* update macos to use latest version. - issue [#237](https://github.com/sdv-dev/ctgan/issues/237) by @pvk-developer\n* update the rdt version to 1.0 - issue [#224](https://github.com/sdv-dev/ctgan/issues/224) by @pvk-developer\n* update slack invite link. - issue [#222](https://github.com/sdv-dev/ctgan/issues/222) by @pvk-developer\n* robustness fix, when data have less rows than the default number of cl\u2026 - issue [#211](https://github.com/sdv-dev/ctgan/issues/211) by @deathn0t\n\n## v0.5.1 - 2022-02-25\n\nthis release fixes a bug with the decoder instantiation, and also allows users to set a random state for the model\nfitting and sampling.\n\n### issues closed\n\n* update self.decoder with correct variable name - issue [#203](https://github.com/sdv-dev/ctgan/issues/203) by @tejuafonja\n* add random state - issue [#204](https://github.com/sdv-dev/ctgan/issues/204) by @katxiao\n\n## v0.5.0 - 2021-11-18\n\nthis release adds support for python 3.9 and updates dependencies to ensure compatibility with the\nrest of the sdv ecosystem, and upgrades to the latests [rdt](https://github.com/sdv-dev/rdt/releases/tag/v0.6.1)\nrelease.\n\n### issues closed\n\n* add support for python 3.9 - issue [#177](https://github.com/sdv-dev/ctgan/issues/177) by @pvk-developer\n* add pip check to ci workflows - issue [#174](https://github.com/sdv-dev/ctgan/issues/174) by @pvk-developer\n* typo in `ctgan` code - issue [#158](https://github.com/sdv-dev/ctgan/issues/158) by @ori-katz100 and @fealho\n\n## v0.4.3 - 2021-07-12\n\ndependency upgrades to ensure compatibility with the rest of the sdv ecosystem.\n\n## v0.4.2 - 2021-04-27\n\nin this release, the way in which the loss function of the tvae model was computed has been fixed.\nin addition, the default value of the `discriminator_decay` has been changed to a more optimal\nvalue. also some improvements to the tests were added.\n\n### issues closed\n\n* `tvae`: loss function - issue [#143](https://github.com/sdv-dev/ctgan/issues/143) by @fealho and @dingfanchen\n* set `discriminator_decay` to `1e-6` - pull request [#145](https://github.com/sdv-dev/ctgan/pull/145/) by @fealho\n* adds unit tests - pull requests [#140](https://github.com/sdv-dev/ctgan/pull/140) by @fealho\n\n## v0.4.1 - 2021-03-30\n\nthis release exposes all the hyperparameters which the user may find useful for both `ctgan`\nand `tvae`. also `tvae` can now be fitted on datasets that are shorter than the batch\nsize and drops the last batch only if the data size is not divisible by the batch size.\n\n### issues closed\n\n* `tvae`: adapt `batch_size` to data size - issue [#135](https://github.com/sdv-dev/ctgan/issues/135) by @fealho and @csala\n* `valueerror` from `validate_discre_columns` with `uniquecombinationconstraint` - issue [133](https://github.com/sdv-dev/ctgan/issues/133) by @fealho and @mljungg\n\n## v0.4.0 - 2021-02-24\n\nmaintenance relese to upgrade dependencies to ensure compatibility with the rest\nof the sdv libraries.\n\nalso add a validation on the ctgan `condition_column` and `condition_value` inputs.\n\n### improvements\n\n* validate condition_column and condition_value - issue [#124](https://github.com/sdv-dev/ctgan/issues/124) by @fealho\n\n## v0.3.1 - 2021-01-27\n\n### improvements\n\n* check discrete_columns valid before fitting - [issue #35](https://github.com/sdv-dev/ctgan/issues/35) by @fealho\n\n## bugs fixed\n\n* valueerror: max() arg is an empty sequence - [issue #115](https://github.com/sdv-dev/ctgan/issues/115) by @fealho\n\n## v0.3.0 - 2020-12-18\n\nin this release we add a new tvae model which was presented in the original ctgan paper.\nit also exposes more hyperparameters and moves epochs and log_frequency from fit to the constructor.\n\na new verbose argument has been added to optionally disable unnecessary printing, and a new hyperparameter\ncalled `discriminator_steps` has been added to ctgan to control the number of optimization steps performed\nin the discriminator for each generator epoch.\n\nthe code has also been reorganized and cleaned up for better readability and interpretability.\n\nspecial thanks to @baukebrenninkmeijer @fealho @leix28 @csala for the contributions!\n\n### improvements\n\n* add tvae - [issue #111](https://github.com/sdv-dev/ctgan/issues/111) by @fealho\n* move `log_frequency` to `__init__` - [issue #102](https://github.com/sdv-dev/ctgan/issues/102) by @fealho\n* add discriminator steps hyperparameter - [issue #101](https://github.com/sdv-dev/ctgan/issues/101) by @baukebrenninkmeijer\n* code cleanup / expose hyperparameters - [issue #59](https://github.com/sdv-dev/ctgan/issues/59) by @fealho and @leix28\n* publish to conda repo - [issue #54](https://github.com/sdv-dev/ctgan/issues/54) by @fealho\n\n### bugs fixed\n\n* fixed nan != nan counting bug. - [issue #100](https://github.com/sdv-dev/ctgan/issues/100) by @fealho\n* update dependencies and testing - [issue #90](https://github.com/sdv-dev/ctgan/issues/90) by @csala\n\n## v0.2.2 - 2020-11-13\n\nin this release we introduce several minor improvements to make ctgan more versatile and\npropertly support new types of data, such as categorical nan values, as well as conditional\nsampling and features to save and load models.\n\nadditionally, the dependency ranges and python versions have been updated to support up\nto date runtimes.\n\nmany thanks @fealho @leix28 @csala @oregonpillow and @lurosenb for working on making this release possible!\n\n### improvements\n\n* drop python 3.5 support - [issue #79](https://github.com/sdv-dev/ctgan/issues/79) by @fealho\n* support nan values in categorical variables - [issue #78](https://github.com/sdv-dev/ctgan/issues/78) by @fealho\n* sample synthetic data conditioning on a discrete column - [issue #69](https://github.com/sdv-dev/ctgan/issues/69) by @leix28\n* support recent versions of pandas - [issue #57](https://github.com/sdv-dev/ctgan/issues/57) by @csala\n* easy solution for restoring original dtypes - [issue #26](https://github.com/sdv-dev/ctgan/issues/26) by @oregonpillow\n\n### bugs fixed\n\n* loss to nan - [issue #73](https://github.com/sdv-dev/ctgan/issues/73) by @fealho\n* swapped the sklearn utils testing import statement - [issue #53](https://github.com/sdv-dev/ctgan/issues/53) by @lurosenb\n\n## v0.2.1 - 2020-01-27\n\nminor version including changes to ensure the logs are properly printed and\nthe option to disable the log transformation to the discrete column frequencies.\n\nspecial thanks to @kevinykuo for the contributions!\n\n### issues resolved:\n\n* option to sample from true data frequency instead of logged frequency - [issue #16](https://github.com/sdv-dev/ctgan/issues/16) by @kevinykuo\n* flush stdout buffer for epoch updates - [issue #14](https://github.com/sdv-dev/ctgan/issues/14) by @kevinykuo\n\n## v0.2.0 - 2019-12-18\n\nreorganization of the project structure with a new python api, new command line interface\nand increased data format support.\n\n### issues resolved:\n\n* reorganize the project structure - [issue #10](https://github.com/sdv-dev/ctgan/issues/10) by @csala\n* move epochs to the fit method - [issue #5](https://github.com/sdv-dev/ctgan/issues/5) by @csala\n\n## v0.1.0 - 2019-11-07\n\nfirst release - neurips 2019 version.\n\n\n",
  "docs_url": null,
  "keywords": "ctgan ctgan",
  "license": "bsl-1.1",
  "name": "ctgan",
  "package_url": "https://pypi.org/project/ctgan/",
  "project_url": "https://pypi.org/project/ctgan/",
  "project_urls": {
    "Homepage": "https://github.com/sdv-dev/CTGAN"
  },
  "release_url": "https://pypi.org/project/ctgan/0.8.0/",
  "requires_dist": [
    "tqdm (<5,>=4.15)",
    "rdt (<2.0,>=1.6.1)",
    "numpy (<2,>=1.20.0) ; python_version < \"3.10\"",
    "pandas (>=1.1.3) ; python_version < \"3.10\"",
    "torch (>=1.8.0) ; python_version < \"3.10\"",
    "numpy (<2,>=1.23.3) ; python_version >= \"3.10\"",
    "scikit-learn (<2,>=1.1.3) ; python_version >= \"3.10\"",
    "pandas (>=1.3.4) ; python_version >= \"3.10\" and python_version < \"3.11\"",
    "torch (>=1.11.0) ; python_version >= \"3.10\" and python_version < \"3.11\"",
    "pandas (>=1.5.0) ; python_version >= \"3.11\"",
    "torch (>=2.0.0) ; python_version >= \"3.11\"",
    "pip (>=9.0.1) ; extra == 'dev'",
    "bumpversion (<0.6,>=0.5.3) ; extra == 'dev'",
    "watchdog (<0.11,>=0.8.3) ; extra == 'dev'",
    "flake8 (<4,>=3.7.7) ; extra == 'dev'",
    "isort (<5,>=4.3.4) ; extra == 'dev'",
    "dlint (<0.12,>=0.11.0) ; extra == 'dev'",
    "flake8-debugger (<4.1,>=4.0.0) ; extra == 'dev'",
    "flake8-mock (<0.4,>=0.3) ; extra == 'dev'",
    "flake8-mutable (<1.3,>=1.2.0) ; extra == 'dev'",
    "flake8-absolute-import (<2,>=1.0) ; extra == 'dev'",
    "flake8-multiline-containers (<0.1,>=0.0.18) ; extra == 'dev'",
    "flake8-print (<4.1,>=4.0.0) ; extra == 'dev'",
    "flake8-quotes (<4,>=3.3.0) ; extra == 'dev'",
    "flake8-fixme (<1.2,>=1.1.1) ; extra == 'dev'",
    "flake8-expression-complexity (<0.1,>=0.0.9) ; extra == 'dev'",
    "flake8-eradicate (<1.2,>=1.1.0) ; extra == 'dev'",
    "flake8-builtins (<1.6,>=1.5.3) ; extra == 'dev'",
    "flake8-variables-names (<0.1,>=0.0.4) ; extra == 'dev'",
    "pandas-vet (<0.3,>=0.2.2) ; extra == 'dev'",
    "flake8-comprehensions (<3.7,>=3.6.1) ; extra == 'dev'",
    "flake8-docstrings (<2,>=1.5.0) ; extra == 'dev'",
    "flake8-sfs (<0.1,>=0.0.3) ; extra == 'dev'",
    "flake8-pytest-style (<2,>=1.5.0) ; extra == 'dev'",
    "autoflake (<2,>=1.1) ; extra == 'dev'",
    "autopep8 (<1.6,>=1.4.3) ; extra == 'dev'",
    "twine (<4,>=1.10.0) ; extra == 'dev'",
    "wheel (>=0.30.0) ; extra == 'dev'",
    "coverage (<6,>=4.5.1) ; extra == 'dev'",
    "tox (<4,>=2.9.1) ; extra == 'dev'",
    "invoke ; extra == 'dev'",
    "pytest (>=3.4.2) ; extra == 'dev'",
    "pytest-rerunfailures (<10,>=9.1.1) ; extra == 'dev'",
    "pytest-cov (>=2.6.0) ; extra == 'dev'",
    "rundoc (<0.5,>=0.4.3) ; extra == 'dev'",
    "pytest (>=3.4.2) ; extra == 'test'",
    "pytest-rerunfailures (<10,>=9.1.1) ; extra == 'test'",
    "pytest-cov (>=2.6.0) ; extra == 'test'",
    "rundoc (<0.5,>=0.4.3) ; extra == 'test'"
  ],
  "requires_python": ">=3.8,<3.12",
  "summary": "create tabular synthetic data using a conditional gan",
  "version": "0.8.0",
  "releases": [],
  "developers": [
    "datacebo",
    "info@sdv.dev"
  ],
  "kwds": "ctgan ctgansynthesizer datacebo vault gan",
  "license_kwds": "bsl-1.1",
  "libtype": "pypi",
  "id": "pypi_ctgan",
  "homepage": "https://github.com/sdv-dev/ctgan",
  "release_count": 60,
  "dependency_ids": [
    "pypi_autoflake",
    "pypi_autopep8",
    "pypi_bumpversion",
    "pypi_coverage",
    "pypi_dlint",
    "pypi_flake8",
    "pypi_flake8_absolute_import",
    "pypi_flake8_builtins",
    "pypi_flake8_comprehensions",
    "pypi_flake8_debugger",
    "pypi_flake8_docstrings",
    "pypi_flake8_eradicate",
    "pypi_flake8_expression_complexity",
    "pypi_flake8_fixme",
    "pypi_flake8_mock",
    "pypi_flake8_multiline_containers",
    "pypi_flake8_mutable",
    "pypi_flake8_print",
    "pypi_flake8_pytest_style",
    "pypi_flake8_quotes",
    "pypi_flake8_sfs",
    "pypi_flake8_variables_names",
    "pypi_invoke",
    "pypi_isort",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pandas_vet",
    "pypi_pip",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_rerunfailures",
    "pypi_rdt",
    "pypi_rundoc",
    "pypi_scikit_learn",
    "pypi_torch",
    "pypi_tox",
    "pypi_tqdm",
    "pypi_twine",
    "pypi_watchdog",
    "pypi_wheel"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: science/research",
    "intended audience :: system administrators",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: distributed computing",
    "typing :: typed"
  ],
  "description": "<!-- project shields -->\n<!--\n*** i'm using markdown \"reference style\" links for readability.\n*** reference links are enclosed in brackets [ ] instead of parentheses ( ).\n*** see the bottom of this document for the declaration of the reference variables\n*** for contributors-url, forks-url, etc. this is an optional, concise syntax you may use.\n*** https://www.markdownguide.org/basic-syntax/#reference-style-links\n-->\n\n<div align=\"center\">\n\n  <!-- project logo -->\n  <br />\n    <a href=\"https://zenml.io\">\n      <img alt=\"zenml logo\" src=\"docs/book/.gitbook/assets/header.png\" alt=\"zenml logo\">\n    </a>\n  <br />\n\n  [![pypi][pypi-shield]][pypi-url]\n  [![pypi][pypiversion-shield]][pypi-url]\n  [![pypi][downloads-shield]][downloads-url]\n  [![contributors][contributors-shield]][contributors-url]\n  [![license][license-shield]][license-url]\n  <!-- [![build][build-shield]][build-url] -->\n  <!-- [![codecov][codecov-shield]][codecov-url] -->\n\n</div>\n\n<!-- markdown links & images -->\n<!-- https://www.markdownguide.org/basic-syntax/#reference-style-links -->\n\n[pypi-shield]: https://img.shields.io/pypi/pyversions/zenml?color=281158\n\n[pypi-url]: https://pypi.org/project/zenml/\n\n[pypiversion-shield]: https://img.shields.io/pypi/v/zenml?color=361776\n\n[downloads-shield]: https://img.shields.io/pypi/dm/zenml?color=431d93\n\n[downloads-url]: https://pypi.org/project/zenml/\n\n[codecov-shield]: https://img.shields.io/codecov/c/gh/zenml-io/zenml?color=7a3ef4\n\n[codecov-url]: https://codecov.io/gh/zenml-io/zenml\n\n[contributors-shield]: https://img.shields.io/github/contributors/zenml-io/zenml?color=7a3ef4\n\n[contributors-url]: https://github.com/othneildrew/best-readme-template/graphs/contributors\n\n[license-shield]: https://img.shields.io/github/license/zenml-io/zenml?color=9565f6\n\n[license-url]: https://github.com/zenml-io/zenml/blob/main/license\n\n[linkedin-shield]: https://img.shields.io/badge/-linkedin-black.svg?style=for-the-badge&logo=linkedin&colorb=555\n\n[linkedin-url]: https://www.linkedin.com/company/zenml/\n\n[twitter-shield]: https://img.shields.io/twitter/follow/zenml_io?style=for-the-badge\n\n[twitter-url]: https://twitter.com/zenml_io\n\n[slack-shield]: https://img.shields.io/badge/-slack-black.svg?style=for-the-badge&logo=linkedin&colorb=555\n\n[slack-url]: https://zenml.io/slack-invite\n\n[build-shield]: https://img.shields.io/github/workflow/status/zenml-io/zenml/build,%20lint,%20unit%20&%20integration%20test/develop?logo=github&style=for-the-badge\n\n[build-url]: https://github.com/zenml-io/zenml/actions/workflows/ci.yml\n\n<div align=\"center\">\n  <h3 align=\"center\">build portable, production-ready mlops pipelines.</h3>\n  <p align=\"center\">\n    <div align=\"center\">\n      join our <a href=\"https://zenml.io/slack-invite\" target=\"_blank\">\n      <img width=\"18\" src=\"https://cdn3.iconfinder.com/data/icons/logos-and-brands-adobe/512/306_slack-512.png\" alt=\"slack\"/>\n    <b>slack community</b> </a> and be part of the zenml family.\n    </div>\n    <br />\n    <a href=\"https://zenml.io/features\">features</a>\n    \u00b7\n    <a href=\"https://zenml.io/roadmap\">roadmap</a>\n    \u00b7\n    <a href=\"https://github.com/zenml-io/zenml/issues\">report bug</a>\n    \u00b7\n    <a href=\"https://zenml.io/discussion\">vote new features</a>\n    \u00b7\n    <a href=\"https://blog.zenml.io/\">read blog</a>\n    \u00b7\n    <a href=\"https://www.zenml.io/company#team\">meet the team</a>\n    <br />\n    <br />\n    \ud83c\udf89 version 0.53.1 is out. check out the release notes\n    <a href=\"https://github.com/zenml-io/zenml/releases\">here</a>.\n    <br />\n    <br />\n  </p>\n</div>\n\n---\n\n<!-- table of contents -->\n<details>\n  <summary>\ud83c\udfc1 table of contents</summary>\n  <ol>\n    <li><a href=\"#-introduction\">introduction</a></li>\n    <li><a href=\"#-quickstart\">quickstart</a></li>\n    <li>\n      <a href=\"#-create-your-own-mlops-platform\">create your own mlops platform</a>\n      <ul>\n        <li><a href=\"##-1-deploy-zenml\">deploy zenml</a></li>\n        <li><a href=\"#-2-deploy-stack-components\">deploy stack components</a></li>\n        <li><a href=\"#-3-create-a-pipeline\">create a pipeline</a></li>\n        <li><a href=\"#-4-start-the-dashboard\">start the dashboard</a></li>\n      </ul>\n    </li>\n    <li><a href=\"#-roadmap\">roadmap</a></li>\n    <li><a href=\"#-contributing-and-community\">contributing and community</a></li>\n    <li><a href=\"#-getting-help\">getting help</a></li>\n    <li><a href=\"#-license\">license</a></li>\n  </ol>\n</details>\n\n<br />\n\n# \ud83e\udd16 introduction\n\n\ud83e\udd39 zenml is an extensible, open-source mlops framework for creating portable,\nproduction-ready machine learning pipelines. by decoupling infrastructure from\ncode, zenml enables developers across your organization to collaborate more\neffectively as they develop to production.\n\n- \ud83d\udcbc zenml gives data scientists the freedom to fully focus on modeling and\nexperimentation while writing code that is production-ready from the get-go.\n\n- \ud83d\udc68\u200d\ud83d\udcbb zenml empowers ml engineers to take ownership of the entire ml lifecycle\n  end-to-end. adopting zenml means fewer handover points and more visibility on\n  what is happening in your organization.\n\n- \ud83d\udeeb zenml enables mlops infrastructure experts to define, deploy, and manage\nsophisticated production environments that are easy to use for colleagues.\n\n![the long journey from experimentation to production.](/docs/book/.gitbook/assets/intro-zenml-overview.png)\n\nzenml provides a user-friendly syntax designed for ml workflows, compatible with\nany cloud or tool. it enables centralized pipeline management, enabling\ndevelopers to write code once and effortlessly deploy it to various\ninfrastructures.\n\n<div align=\"center\">\n    <img src=\"docs/book/.gitbook/assets/overview.gif\">\n</div>\n\n# \ud83e\udd38 quickstart\n\n[install zenml](https://docs.zenml.io/getting-started/installation) via\n[pypi](https://pypi.org/project/zenml/). python 3.8 - 3.11 is required:\n\n```bash\npip install \"zenml[server]\"\n```\n\ntake a tour with the guided quickstart by running:\n\n```bash\nzenml go\n```\n\n# \ud83d\uddbc\ufe0f create your own mlops platform\n\nzenml allows you to create and manage your own mlops platform using \nbest-in-class open-source and cloud-based technologies. here is an example of \nhow you could set this up for your team:\n\n## \ud83d\udd0b 1. deploy zenml\n\nfor full functionality zenml should be deployed on the cloud to\nenable collaborative features as the central mlops interface for teams.\n\n![zenml architecture diagram.](docs/book/.gitbook/assets/scenario3.png)\n\ncurrently, there are two main options to deploy zenml:\n\n- **zenml cloud**: with [zenml cloud](https://docs.zenml.io/deploying-zenml/zenml-cloud), \nyou can utilize a control plane to create zenml servers, also known as tenants. \nthese tenants are managed and maintained by zenml's dedicated team, alleviating \nthe burden of server management from your end. \n\n- **self-hosted deployment**: alternatively, you have the flexibility to [deploy \nzenml on your own self-hosted environment](https://docs.zenml.io/deploying-zenml/zenml-self-hosted). \nthis can be achieved through various methods, including using our cli, docker, \nhelm, or huggingface spaces.\n\n## \ud83d\udc68\u200d\ud83c\udf73 2. deploy stack components\n\nzenml boasts a ton of [integrations](https://zenml.io/integrations) into \npopular mlops tools. the [zenml stack](https://docs.zenml.io/user-guide/starter-guide/understand-stacks) \nconcept ensures that these tools work nicely together, therefore bringing\nstructure and standardization into the mlops workflow.\n\ndeploying and configuring this is super easy with zenml. for **aws**, this might \nlook a bit like this\n\n```bash\n# deploy and register an orchestrator and an artifact store\nzenml orchestrator deploy kubernetes_orchestrator --flavor kubernetes --cloud aws\nzenml artifact-store deploy s3_artifact_store --flavor s3\n\n# register this combination of components as a stack\nzenml stack register production_stack --orchestrator kubernetes_orchestrator --artifact-store s3_artifact_store --set # register your production environment\n```\n\nwhen you run a pipeline with this stack set, it will be running on your deployed\nkubernetes cluster.\n\nyou can also [deploy your own tooling manually](https://docs.zenml.io/stacks-and-components/stack-deployment).\n\n## \ud83c\udfc7 3. create a pipeline\n\nhere's an example of a hello world zenml pipeline in code:\n\n```python\n# run.py\nfrom zenml import pipeline, step\n\n\n@step\ndef step_1() -> str:\n    \"\"\"returns the `world` substring.\"\"\"\n    return \"world\"\n\n\n@step\ndef step_2(input_one: str, input_two: str) -> none:\n    \"\"\"combines the two strings at its input and prints them.\"\"\"\n    combined_str = input_one + ' ' + input_two\n    print(combined_str)\n\n\n@pipeline\ndef my_pipeline():\n    output_step_one = step_1()\n    step_2(input_one=\"hello\", input_two=output_step_one)\n\n\nif __name__ == \"__main__\":\n    my_pipeline()\n```\n\n```bash\npython run.py\n```\n\n## \ud83d\udc6d 4. start the dashboard\n\nopen up the zenml dashboard using this command.\n\n```bash\nzenml show\n```\n\n# \ud83d\uddfa roadmap\n\nzenml is being built in public. the [roadmap](https://zenml.io/roadmap) is a\nregularly updated source of truth for the zenml community to understand where\nthe product is going in the short, medium, and long term.\n\nzenml is managed by a [core team](https://zenml.io/company#companyteam) of\ndevelopers that are responsible for making key decisions and incorporating\nfeedback from the community. the team oversees feedback via various channels,\nand you can directly influence the roadmap as follows:\n\n- vote on your most wanted feature on our [discussion\n  board](https://zenml.io/discussion).\n- start a thread in our [slack channel](https://zenml.io/slack-invite).\n- [create an issue](https://github.com/zenml-io/zenml/issues/new/choose) on our\n  github repo.\n\n# \ud83d\ude4c contributing and community\n\nwe would love to develop zenml together with our community! best way to get\nstarted is to select any issue from the [`good-first-issue`\nlabel](https://github.com/zenml-io/zenml/labels/good%20first%20issue). if you\nwould like to contribute, please review our [contributing\nguide](contributing.md) for all relevant details.\n\n# \ud83c\udd98 getting help\n\nthe first point of call should\nbe [our slack group](https://zenml.io/slack-invite/).\nask your questions about bugs or specific use cases, and someone from\nthe [core team](https://zenml.io/company#companyteam) will respond.\nor, if you\nprefer, [open an issue](https://github.com/zenml-io/zenml/issues/new/choose) on\nour github repo.\n\n# \ud83d\udcdc license\n\nzenml is distributed under the terms of the apache license version 2.0.\na complete version of the license is available in the [license](license) file in\nthis repository. any contribution made to this project will be licensed under\nthe apache license version 2.0.\n",
  "docs_url": null,
  "keywords": "machine learning,production,pipeline,mlops,devops",
  "license": "apache-2.0",
  "name": "zenml",
  "package_url": "https://pypi.org/project/zenml/",
  "project_url": "https://pypi.org/project/zenml/",
  "project_urls": {
    "Documentation": "https://docs.zenml.io",
    "Homepage": "https://zenml.io",
    "Repository": "https://github.com/zenml-io/zenml"
  },
  "release_url": "https://pypi.org/project/zenml/0.53.1/",
  "requires_dist": [
    "alembic (>=1.8.1,<1.9.0)",
    "bcrypt (==4.0.1)",
    "click (>=8.0.1,<8.1.4)",
    "click-params (>=0.3.0,<0.4.0)",
    "cloudpickle (>=2.0.0,<3)",
    "distro (>=1.6.0,<2.0.0)",
    "docker (>=6.1.0,<6.2.0)",
    "httplib2 (>=0.19.1,<0.20)",
    "gitpython (>=3.1.18,<4.0.0)",
    "pandas (>=1.1.5)",
    "passlib[bcrypt] (>=1.7.4,<1.8.0)",
    "psutil (>=5.0.0)",
    "pydantic (>=1.9.0,<1.11)",
    "pymysql (>=1.0.2,<1.1.0)",
    "pyparsing (>=2.4.0,<3)",
    "python-dateutil (>=2.8.1,<3.0.0)",
    "pyyaml (>=6.0.1)",
    "rich[jupyter] (>=12.0.0)",
    "sqlalchemy_utils (==0.38.3)",
    "sqlmodel (==0.0.8)",
    "importlib_metadata (<=7.0.0) ; python_version < \"3.10\"",
    "fastapi (>=0.75,<0.100) ; extra == \"server\"",
    "uvicorn[standard] (>=0.17.5) ; extra == \"server\"",
    "python-multipart (>=0.0.5,<0.1.0) ; extra == \"server\"",
    "pyjwt[crypto] (==2.7.*) ; extra == \"server\"",
    "fastapi-utils (>=0.2.1,<0.3.0) ; extra == \"server\"",
    "orjson (>=3.8.3,<3.9.0) ; extra == \"server\"",
    "Jinja2 ; extra == \"server\"",
    "ipinfo (>=4.4.3) ; extra == \"server\"",
    "copier (>=8.1.0) ; extra == \"templates\"",
    "jinja2-time (>=0.2.0,<0.3.0) ; extra == \"templates\"",
    "ruff (==0.1.7) ; extra == \"templates\" or extra == \"dev\"",
    "python-terraform (>=0.10.1,<0.11.0) ; extra == \"terraform\"",
    "boto3 (>=1.16.0,<=1.24.59) ; extra == \"secrets-aws\" or extra == \"connectors-aws\"",
    "google-cloud-secret-manager (>=2.12.5) ; extra == \"secrets-gcp\"",
    "azure-identity (>=1.4.0) ; extra == \"secrets-azure\" or extra == \"connectors-azure\"",
    "azure-keyvault-secrets (>=4.0.0) ; extra == \"secrets-azure\"",
    "hvac (>=0.11.2) ; extra == \"secrets-hashicorp\"",
    "aws-profile-manager (>=0.5.0) ; extra == \"connectors-aws\"",
    "kubernetes (>=18.20.0) ; extra == \"connectors-kubernetes\" or extra == \"connectors-aws\" or extra == \"connectors-gcp\" or extra == \"connectors-azure\"",
    "google-cloud-container (>=2.21.0) ; extra == \"connectors-gcp\"",
    "google-cloud-storage (>=2.9.0) ; extra == \"connectors-gcp\"",
    "azure-mgmt-containerservice (>=20.0.0) ; extra == \"connectors-azure\"",
    "azure-mgmt-containerregistry (>=10.0.0) ; extra == \"connectors-azure\"",
    "azure-mgmt-storage (>=20.0.0) ; extra == \"connectors-azure\"",
    "azure-storage-blob (>=12.0.0) ; extra == \"connectors-azure\"",
    "azure-mgmt-resource (>=21.0.0)",
    "s3fs (==2022.11.0) ; extra == \"s3fs\"",
    "gcsfs (==2022.11.0) ; extra == \"gcsfs\"",
    "adlfs (>=2021.10.0) ; extra == \"adlfs\"",
    "bandit (>=1.7.5,<2.0.0) ; extra == \"dev\"",
    "coverage[toml] (>=5.5,<6.0) ; extra == \"dev\"",
    "mypy (==1.7.1) ; extra == \"dev\"",
    "pyment (>=0.3.3,<0.4.0) ; extra == \"dev\"",
    "tox (>=3.24.3,<4.0.0) ; extra == \"dev\"",
    "hypothesis (>=6.43.1,<7.0.0) ; extra == \"dev\"",
    "typing-extensions (>=3.7.4) ; extra == \"dev\"",
    "darglint (>=1.8.1,<2.0.0) ; extra == \"dev\"",
    "pytest (>=7.4.0,<8.0.0) ; extra == \"dev\"",
    "pytest-randomly (>=3.10.1,<4.0.0) ; extra == \"dev\"",
    "pytest-mock (>=3.6.1,<4.0.0) ; extra == \"dev\"",
    "pytest-clarity (>=1.0.1,<2.0.0) ; extra == \"dev\"",
    "mkdocs (>=1.2.3,<2.0.0) ; extra == \"dev\"",
    "mkdocs-material (>=8.1.7,<9.0.0) ; extra == \"dev\"",
    "mkdocs-awesome-pages-plugin (>=2.6.1,<3.0.0) ; extra == \"dev\"",
    "mkdocstrings (>=0.17.0,<0.18.0) ; extra == \"dev\"",
    "mike (>=1.1.2,<2.0.0) ; extra == \"dev\"",
    "types-certifi (>=2021.10.8.0,<2022.0.0.0) ; extra == \"dev\"",
    "types-croniter (>=1.0.2,<2.0.0) ; extra == \"dev\"",
    "types-futures (>=3.3.1,<4.0.0) ; extra == \"dev\"",
    "types-Markdown (>=3.3.6,<4.0.0) ; extra == \"dev\"",
    "types-Pillow (>=9.2.1,<10.0.0) ; extra == \"dev\"",
    "types-protobuf (>=3.18.0,<4.0.0) ; extra == \"dev\"",
    "types-PyMySQL (>=1.0.4,<2.0.0) ; extra == \"dev\"",
    "types-python-dateutil (>=2.8.2,<3.0.0) ; extra == \"dev\"",
    "types-python-slugify (>=5.0.2,<6.0.0) ; extra == \"dev\"",
    "types-PyYAML (>=6.0.0,<7.0.0) ; extra == \"dev\"",
    "types-redis (>=4.1.19,<5.0.0) ; extra == \"dev\"",
    "types-requests (>=2.27.11,<3.0.0) ; extra == \"dev\"",
    "types-setuptools (>=57.4.2,<58.0.0) ; extra == \"dev\"",
    "types-six (>=1.16.2,<2.0.0) ; extra == \"dev\"",
    "types-termcolor (>=1.1.2,<2.0.0) ; extra == \"dev\"",
    "types-psutil (>=5.8.13,<6.0.0) ; extra == \"dev\"",
    "types-passlib (>=1.7.7,<2.0.0) ; extra == \"dev\"",
    "mlstacks (==0.7.11) ; extra == \"mlstacks\""
  ],
  "requires_python": ">=3.8,<3.12",
  "summary": "zenml: write production-ready ml code.",
  "version": "0.53.1",
  "releases": [],
  "developers": [
    "info@zenml.io",
    "zenml_gmbh"
  ],
  "kwds": "markdownguide markdown href template brackets",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_zenml",
  "homepage": "https://zenml.io",
  "release_count": 119,
  "dependency_ids": [
    "pypi_adlfs",
    "pypi_alembic",
    "pypi_aws_profile_manager",
    "pypi_azure_identity",
    "pypi_azure_keyvault_secrets",
    "pypi_azure_mgmt_containerregistry",
    "pypi_azure_mgmt_containerservice",
    "pypi_azure_mgmt_resource",
    "pypi_azure_mgmt_storage",
    "pypi_azure_storage_blob",
    "pypi_bandit",
    "pypi_bcrypt",
    "pypi_boto3",
    "pypi_click",
    "pypi_click_params",
    "pypi_cloudpickle",
    "pypi_copier",
    "pypi_coverage",
    "pypi_darglint",
    "pypi_distro",
    "pypi_docker",
    "pypi_fastapi",
    "pypi_fastapi_utils",
    "pypi_gcsfs",
    "pypi_gitpython",
    "pypi_google_cloud_container",
    "pypi_google_cloud_secret_manager",
    "pypi_google_cloud_storage",
    "pypi_httplib2",
    "pypi_hvac",
    "pypi_hypothesis",
    "pypi_importlib_metadata",
    "pypi_ipinfo",
    "pypi_jinja2",
    "pypi_jinja2_time",
    "pypi_kubernetes",
    "pypi_mike",
    "pypi_mkdocs",
    "pypi_mkdocs_awesome_pages_plugin",
    "pypi_mkdocs_material",
    "pypi_mkdocstrings",
    "pypi_mlstacks",
    "pypi_mypy",
    "pypi_orjson",
    "pypi_pandas",
    "pypi_passlib",
    "pypi_psutil",
    "pypi_pydantic",
    "pypi_pyjwt",
    "pypi_pyment",
    "pypi_pymysql",
    "pypi_pyparsing",
    "pypi_pytest",
    "pypi_pytest_clarity",
    "pypi_pytest_mock",
    "pypi_pytest_randomly",
    "pypi_python_dateutil",
    "pypi_python_multipart",
    "pypi_python_terraform",
    "pypi_pyyaml",
    "pypi_rich",
    "pypi_ruff",
    "pypi_s3fs",
    "pypi_sqlalchemy_utils",
    "pypi_sqlmodel",
    "pypi_tox",
    "pypi_types_certifi",
    "pypi_types_croniter",
    "pypi_types_futures",
    "pypi_types_markdown",
    "pypi_types_passlib",
    "pypi_types_pillow",
    "pypi_types_protobuf",
    "pypi_types_psutil",
    "pypi_types_pymysql",
    "pypi_types_python_dateutil",
    "pypi_types_python_slugify",
    "pypi_types_pyyaml",
    "pypi_types_redis",
    "pypi_types_requests",
    "pypi_types_setuptools",
    "pypi_types_six",
    "pypi_types_termcolor",
    "pypi_typing_extensions",
    "pypi_uvicorn"
  ]
}
{
  "classifiers": [],
  "description": "# spotipy\n\n##### a light weight python library for the spotify web api\n\n![tests](https://github.com/plamere/spotipy/workflows/tests/badge.svg?branch=master) [![documentation status](https://readthedocs.org/projects/spotipy/badge/?version=latest)](https://spotipy.readthedocs.io/en/latest/?badge=latest)\n\n## documentation\n\nspotipy's full documentation is online at [spotipy documentation](http://spotipy.readthedocs.org/).\n\n## installation\n\n```bash\npip install spotipy\n```\n\nalternatively, for windows users \n\n```bash\npy -m pip install spotipy\n```\n\nor upgrade\n\n```bash\npip install spotipy --upgrade\n```\n\n## quick start\n\na full set of examples can be found in the [online documentation](http://spotipy.readthedocs.org/) and in the [spotipy examples directory](https://github.com/plamere/spotipy/tree/master/examples).\n\nto get started, install spotipy and create an app on https://developers.spotify.com/.\nadd your new id and secret to your environment:\n\n### without user authentication\n\n```python\nimport spotipy\nfrom spotipy.oauth2 import spotifyclientcredentials\n\nsp = spotipy.spotify(auth_manager=spotifyclientcredentials(client_id=\"your_app_client_id\",\n                                                           client_secret=\"your_app_client_secret\"))\n\nresults = sp.search(q='weezer', limit=20)\nfor idx, track in enumerate(results['tracks']['items']):\n    print(idx, track['name'])\n```\n\n### with user authentication\n\na redirect uri must be added to your application at [my dashboard](https://developer.spotify.com/dashboard/applications) to access user authenticated features.\n\n```python\nimport spotipy\nfrom spotipy.oauth2 import spotifyoauth\n\nsp = spotipy.spotify(auth_manager=spotifyoauth(client_id=\"your_app_client_id\",\n                                               client_secret=\"your_app_client_secret\",\n                                               redirect_uri=\"your_app_redirect_uri\",\n                                               scope=\"user-library-read\"))\n\nresults = sp.current_user_saved_tracks()\nfor idx, item in enumerate(results['items']):\n    track = item['track']\n    print(idx, track['artists'][0]['name'], \" \u2013 \", track['name'])\n```\n\n## reporting issues\n\nfor common questions please check our [faq](faq.md).\n\nyou can ask questions about spotipy on\n[stack overflow](http://stackoverflow.com/questions/ask).\ndon\u2019t forget to add the *spotipy* tag, and any other relevant tags as well, before posting.\n\nif you have suggestions, bugs or other issues specific to this library,\nfile them [here](https://github.com/plamere/spotipy/issues).\nor just send a pull request.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "spotipy",
  "package_url": "https://pypi.org/project/spotipy/",
  "project_url": "https://pypi.org/project/spotipy/",
  "project_urls": {
    "Homepage": "https://spotipy.readthedocs.org/",
    "Source": "https://github.com/plamere/spotipy"
  },
  "release_url": "https://pypi.org/project/spotipy/2.23.0/",
  "requires_dist": [
    "redis (>=3.5.3)",
    "requests (>=2.25.0)",
    "six (>=1.15.0)",
    "urllib3 (>=1.26.0)",
    "redis (<4.0.0) ; python_version < \"3.4\"",
    "Sphinx (>=1.5.2) ; extra == 'doc'",
    "mock (==2.0.0) ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "a light weight python library for the spotify web api",
  "version": "2.23.0",
  "releases": [],
  "developers": [
    "paul@echonest.com"
  ],
  "kwds": "spotifyoauth spotify spotipy spotifyclientcredentials pip",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_spotipy",
  "homepage": "https://spotipy.readthedocs.org/",
  "release_count": 48,
  "dependency_ids": [
    "pypi_mock",
    "pypi_redis",
    "pypi_requests",
    "pypi_six",
    "pypi_sphinx",
    "pypi_urllib3"
  ]
}
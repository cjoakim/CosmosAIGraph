{
  "classifiers": [
    "license :: osi approved :: gnu general public license v3 (gplv3)",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.9"
  ],
  "description": "# parser for dirac cfg files\n\n[![ci](https://github.com/diracgrid/diraccfg/workflows/ci/badge.svg?branch=master)](https://github.com/diracgrid/diraccfg/actions?query=branch%3amaster)\n[![pypi](https://badge.fury.io/py/diraccfg.svg)](https://pypi.org/project/diraccfg/)\n[![conda-forge](https://img.shields.io/conda/vn/conda-forge/diraccfg)](https://github.com/conda-forge/diraccfg-feedstock/)\n\n`diraccfg` provides a parser for the configuration files used by\n[dirac](https://github.com/diracgrid) and its associated projects.\n\n\n## installation\n\n```bash\npip install diraccfg\n```\n\n## command line usage\n\nthe command line mode of `diraccfg` primarily serves to convert the\nconfiguration into a json file which can then be processed using standard tools\nsuch as [`jq`](https://stedolan.github.io/jq/).\n\nthe following examples are ran using the following configuration file:\n\n```\ndefaultmodules = dirac\nsources\n{\n  dirac = git://github.com/diracgrid/dirac.git\n}\nreleases\n{\n  integration\n  {\n    modules = dirac, webappdirac, vmdirac\n    externals = v6r6p8\n    diracos = master\n  }\n  v7r0-pre19\n  {\n    modules = dirac, vmdirac:v2r4-pre2, restdirac:v0r5, comdirac:v0r17, webappdirac:v4r0p7, oauthdirac:v0r1-pre1\n    diracos = master\n  }\n  v6r22p2\n  {\n    modules = dirac, vmdirac:v2r4-pre2, restdirac:v0r6, comdirac:v0r17, webappdirac:v4r0p7, oauthdirac:v0r1-pre1\n    externals = v6r6p8\n    diracos = v1r3\n  }\n  v6r22p1\n  {\n    modules = dirac, vmdirac:v2r4-pre2, restdirac:v0r6, comdirac:v0r17, webappdirac:v4r0p7, oauthdirac:v0r1-pre1\n    externals = v6r6p8\n    diracos = v1r3\n  }\n}\n```\n\n### print as json\n\n```\n$ diraccfg as-json example.cfg\n{\"defaultmodules\": \"dirac\", \"sources\": {\"dirac\": \"git://github.com/diracgrid/dirac.git\"}, \"releases\": {\"integration\": {\"modules\": \"dirac, webappdirac, vmdirac\", \"externals\": \"v6r6p8\", \"diracos\": \"master\"}, \"v7r0-pre19\": {\"modules\": \"dirac, vmdirac:v2r4-pre2, restdirac:v0r5, comdirac:v0r17, webappdirac:v4r0p7, oauthdirac:v0r1-pre1\", \"diracos\": \"master\"}, \"v6r22p2\": {\"modules\": \"dirac, vmdirac:v2r4-pre2, restdirac:v0r6, comdirac:v0r17, webappdirac:v4r0p7, oauthdirac:v0r1-pre1\", \"externals\": \"v6r6p8\", \"diracos\": \"v1r3\"}, \"v6r22p1\": {\"modules\": \"dirac, vmdirac:v2r4-pre2, restdirac:v0r6, comdirac:v0r17, webappdirac:v4r0p7, oauthdirac:v0r1-pre1\", \"externals\": \"v6r6p8\", \"diracos\": \"v1r3\"}}}\n```\n\n### extract available releases with using `jq`\n\n```bash\n$ diraccfg as-json example.cfg | jq '.releases'\n{\n  \"integration\": {\n    \"modules\": \"dirac, webappdirac, vmdirac\",\n    \"externals\": \"v6r6p8\",\n    \"diracos\": \"master\"\n  },\n  \"v7r0-pre19\": {\n    \"modules\": \"dirac, vmdirac:v2r4-pre2, restdirac:v0r5, comdirac:v0r17, webappdirac:v4r0p7, oauthdirac:v0r1-pre1\",\n    \"diracos\": \"master\"\n  },\n  \"v6r22p2\": {\n    \"modules\": \"dirac, vmdirac:v2r4-pre2, restdirac:v0r6, comdirac:v0r17, webappdirac:v4r0p7, oauthdirac:v0r1-pre1\",\n    \"externals\": \"v6r6p8\",\n    \"diracos\": \"v1r3\"\n  },\n  \"v6r22p1\": {\n    \"modules\": \"dirac, vmdirac:v2r4-pre2, restdirac:v0r6, comdirac:v0r17, webappdirac:v4r0p7, oauthdirac:v0r1-pre1\",\n    \"externals\": \"v6r6p8\",\n    \"diracos\": \"v1r3\"\n  }\n}\n```\n\n### get a sorted list of stable version numbers\n\n```bash\n$ diraccfg as-json example.cfg | jq '.releases' | diraccfg sort-versions\n[\"v6r22p2\", \"v6r22p1\"]\n```\n\n### get a sorted list of version numbers including prereleases\n\n```bash\n$ diraccfg as-json example.cfg | jq '.releases' | diraccfg sort-versions --allow-pre-releases\n[\"v7r0-pre19\", \"v6r22p2\", \"v6r22p1\"]\n```\n\n### find the latest releases\n\n```bash\n$ diraccfg as-json example.cfg | jq '.releases' | diraccfg sort-versions | jq -r '.[0]'\nv6r22p2\n```\n\n```bash\n$ diraccfg as-json example.cfg | jq '.releases' | diraccfg sort-versions --allow-pre-releases | jq -r '.[0]'\nv7r0-pre19\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "gpl-3.0-only",
  "name": "diraccfg",
  "package_url": "https://pypi.org/project/diraccfg/",
  "project_url": "https://pypi.org/project/diraccfg/",
  "project_urls": {
    "Homepage": "https://github.com/DIRACGrid/cfg"
  },
  "release_url": "https://pypi.org/project/diraccfg/1.0.1/",
  "requires_dist": [
    "pytest >=4.6 ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'",
    "pylint >=1.6.5 ; extra == 'testing'"
  ],
  "requires_python": ">=3.9",
  "summary": "dirac cfg files reader",
  "version": "1.0.1",
  "releases": [],
  "developers": [
    "federico_stagni"
  ],
  "kwds": "diraccfg diracgrid dirac pip cfg",
  "license_kwds": "gpl-3.0-only",
  "libtype": "pypi",
  "id": "pypi_diraccfg",
  "homepage": "https://github.com/diracgrid/cfg",
  "release_count": 7,
  "dependency_ids": [
    "pypi_pylint",
    "pypi_pytest",
    "pypi_pytest_cov"
  ]
}
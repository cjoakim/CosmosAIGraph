{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6"
  ],
  "description": "# asyncinit -- enable async `__init__`\n\n[documentation](http://kchmck.github.io/pdoc/asyncinit/)\n\nthis package provides the `asyncinit` decorator, which enables an asynchronous constructor\nto be called like any other asynchronous function.\n\n## example\n\n```python\nfrom asyncinit import asyncinit\n\n@asyncinit\nclass myclass:\n    async def __init__(self, param):\n        self.val = await self.deferredfn(param)\n\n    async def deferredfn(self, x):\n        # ...\n        return x + 2\n\nobj = await myclass(42)\nassert obj.val == 44\n```\n\n## installation\n\nthis package requires python >= 3.5.0 and can be installed with `pip`:\n```\npip install asyncinit\n```\n\n\n",
  "docs_url": "https://pythonhosted.org/asyncinit/",
  "keywords": "async init asyncio",
  "license": "mit",
  "name": "asyncinit",
  "package_url": "https://pypi.org/project/asyncinit/",
  "project_url": "https://pypi.org/project/asyncinit/",
  "project_urls": {
    "Homepage": "https://github.com/kchmck/pyasyncinit"
  },
  "release_url": "https://pypi.org/project/asyncinit/0.2.4/",
  "requires_dist": [
    "pylint (~=2.1); extra == 'dev'",
    "pytest (~=3.6); extra == 'dev'"
  ],
  "requires_python": ">=3.5",
  "summary": "class decorator to enable async __init__",
  "version": "0.2.4",
  "releases": [],
  "developers": [
    "mick@kochm.co",
    "mick_koch"
  ],
  "kwds": "asyncio async asynchronous asyncinit await",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_asyncinit",
  "homepage": "https://github.com/kchmck/pyasyncinit",
  "release_count": 5,
  "dependency_ids": [
    "pypi_pylint",
    "pypi_pytest"
  ]
}
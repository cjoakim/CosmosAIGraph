{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# microsoft azure sdk for python\n\nthis is the microsoft azure batch client library.\n\nthis package has been tested with python 3.6+\n\nfor a more complete set of azure libraries, see https://aka.ms/azsdk/python/all\n\n# usage\n\nfor code examples, see [the batch samples repo](https://github.com/azure/azure-batch-samples/tree/master/python)\non github or see [batch](https://docs.microsoft.com/python/api/overview/azure/batch)\non docs.microsoft.com.\n\n\n# provide feedback\n\nif you encounter any bugs or have suggestions, please file an issue in the\n[issues](https://github.com/azure/azure-sdk-for-python/issues)\nsection of the project.\n\n\n![impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2fazure-batch%2freadme.png)\n\n\n# release history\n\n## 14.0.0 (2023-05-01)\n\n### features added\n  - added boolean property `enableacceleratednetworking` to `networkconfiguration`. \n    -  this property determines whether this pool should enable accelerated networking, with default value as false. \n    - whether this feature can be enabled is also related to whether an operating system/vm instance is supported, which should align with acceleratednetworking policy ([acceleratednetworking limitations and constraints](https://learn.microsoft.com/azure/virtual-network/accelerated-networking-overview?tabs=redhat#limitations-and-constraints)). \n  - added boolean property `enableautomaticupgrade` to `vmextension`. \n    -  this property determines whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available. \n  - added a new property `type` to `containerconfiguration`. possible values include: `dockercompatible` and `cricompatible`.\n\n### breaking changes\n- removed lifetime statistics api. this api is no longer supported. \n    - removed `job.get_all_lifetime_statistics` api. \n    - removed `pool.get_all_lifetime_statistics` api. \n\n### other changes\n- deprecating `certificateoperations` related methods.\n  - this operation is deprecating and will be removed after february 2024. please use [azure keyvault extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.\n  \n## 13.0.0 (2022-11-08)\n\n### features added\n\n- added new custom enum type `nodecommunicationmode`.\n  - this property determines how a pool communicates with the batch service.\n  - possible values: default, classic, simplified.\n- added properties `current_node_communication_mode` and `target_node_communication_mode` of type `nodecommunicationmode` to `cloudpool`.\n- added property `target_node_communication_mode` of type `nodecommunicationmode` to `poolspecification`, `pooladdparameter`, `poolpatchparameter`, and `poolupdatepropertiesparameter`.\n\n## 12.0.0 (2022-02-01)\n\n### features\n\n- added property uploadheaders to `outputfileblobcontainerdestination`.\n  - allows users to set custom http headers on resource file uploads.\n  - array of type httpheader (also being added).\n- added boolean property `allow_task_preemption` to `jobspecification`, `cloudjob`, `jobaddparameter`, `jobpatchparameter`, `jobupdateparameter`\n  - mark tasks as preemptible for higher priority tasks (requires comms-enabled or single tenant pool).\n- replaced comment (title, description, etc.) references of \"low-priority\" with \"spot/low-priority\", to reflect new service behavior.\n  - no api change required.\n  - low-priority compute nodes (vms) will continue to be used for user subscription pools (and only user subscription pools), as before.\n  - spot compute nodes (vms) will now be used for batch managed (and only batch managed pools) pools.\n  - relevant docs:\n    - https://docs.microsoft.com/azure/batch/nodes-and-pools\n    - https://docs.microsoft.com/azure/batch/batch-spot-vms\n\n## 11.0.0 (2021-07-30)\n\n### features\n\n- add ability to assign user-assigned managed identities to `cloudpool`. these identities will be made available on each node in the pool, and can be used to access various resources.\n- added `identity_reference` property to the following models to support accessing resources via managed identity:\n  - `azureblobfilesystemconfiguration`\n  - `outputfileblobcontainerdestination`\n  - `containerregistry`\n  - `resourcefile`\n  - `uploadbatchservicelogsconfiguration`\n- added new `compute_node_extension` operations to `batchserviceclient` for getting/listing vm extensions on a node\n- added new `extensions` property to `virtualmachineconfiguration` on `cloudpool` to specify virtual machine extensions for nodes\n- added the ability to specify availability zones using a new property `node_placement_configuration` on `virtualmachineconfiguration`\n- added new `os_disk` property to `virtualmachineconfiguration`, which contains settings for the operating system disk of the virtual machine.\n  - the `placement` property on `diffdisksettings` specifies the ephemeral disk placement for operating system disks for all vms in the pool. setting it to \"cachedisk\" will store the ephemeral os disk on the vm cache.\n- added `max_parallel_tasks` property on `cloudjob` to control the maximum allowed tasks per job (defaults to -1, meaning unlimited).\n- added `virtual_machine_info` property on `computenode` which contains information about the current state of the virtual machine, including the exact version of the marketplace image the vm is using.\n\n## 10.0.0 (2020-09-01)\n\n### features\n- **[breaking]** replaced property `maxtaskspernode` with `taskslotspernode` on the pool. using this property tasks in a job can consume a dynamic amount of slots allowing for more fine-grained control over resource consumption.\n- **[breaking]** changed the response type of `gettaskcounts` to return `taskcountsresult`, which is a complex object containing the previous `taskcounts` object and a new `taskslotcounts` object providing similar information in the context of slots being used.\n- added property `requiredslots` to the task allowing user to specify how many slots on a node it should take up.\n\n## 9.0.0 (2020-03-24)\n\n### features\n- added ability to encrypt `computenode` disk drives using the new `disk_encryption_configuration` property of `virtualmachineconfiguration`.\n- **[breaking]** the `virtual_machine_id` property of `imagereference` can now only refer to a shared image gallery image.\n- **[breaking]** pools can now be provisioned without a public ip using the new `public_ip_address_configuration` property of `networkconfiguration`.\n  - the `public_ips` property of `networkconfiguration` has moved in to `public_ip_address_configuration` as well. this property can only be specified if `ip_provisioning_type` is `usermanaged`.\n\n### rest api version\nthis version of the batch .net client library targets version 2020-03-01.11.0 of the azure batch rest api.\n\n## 8.0.0 (2019-8-5)\n\n- using rest api version 2019-08-01.10.0.\n    * added ability to specify a collection of public ips on `networkconfiguration` via the new `public_ips` property. this guarantees nodes in the pool will have an ip from the list user provided ips.\n    * added ability to mount remote file-systems on each node of a pool via the `mount_configuration` property on `cloudpool`.\n    * shared image gallery images can now be specified on the `virtual_machine_image_id` property of `imagereference` by referencing the image via its arm id.\n    * **breaking** when not specified, the default value for `wait_for_success` on `starttask` is now `true` (was `false`).\n    * **breaking** when not specified, the default value for `scope` on `autouserspecification` is now always `pool` (was `task` on windows nodes, `pool` on linux nodes).\n\n## 7.0.0 (2019-6-11)\n\n- using rest api version 2019-06-01.9.0.\n    * **breaking** replaced `accountoperations.list_node_agent_skus` with `accountoperations.list_supported_images`. `list_supported_images` contains all of the same information originally available in `list_node_agent_skus` but in a clearer format. new non-verified images are also now returned. additional information about `capabilities` and `batch_support_end_of_life` is accessible on the `imageinformation` object returned by `list_supported_images`.\n    * now support network security rules blocking network access to a `cloudpool` based on the source port of the traffic. this is done via the `source_port_ranges` property on `network_security_group_rules`.\n    * when running a container, batch now supports executing the task in the container working directory or in the batch task working directory. this is controlled by the `working_directory` property on `taskcontainersettings`.\n\n## 6.0.1 (2019-2-26)\n\n- fix bug in taskoperations.add_collection methods exception handling\n\n## 6.0.0 (2018-12-14)\n\n- using rest api version 2018-12-01.8.0.\n    * **breaking** removed support for the `upgrade_os` api on `cloudserviceconfiguration` pools.\n        - removed `pooloperations.upgrade_os` api.\n        - renamed `target_os_version` to `os_version` and removed `current_os_version` on `cloudserviceconfiguration`.\n        - removed `upgrading` state from `poolstate` enum.\n    * **breaking** removed `data_egress_gi_b` and `data_ingress_gi_b` from `poolusagemetrics`. these properties are no longer supported.\n    * **breaking** resourcefile improvements\n        * added the ability specify an entire azure storage container in `resourcefile`. there are now three supported modes for `resourcefile`:\n            - `http_url` creates a `resourcefile` pointing to a single http url.\n            - `storage_container_url` creates a `resourcefile` pointing to the blobs under an azure blob storage container.\n            - `auto_storage_container_name` creates a `resourcefile` pointing to the blobs under an azure blob storage container in the batch registered auto-storage account.\n        * urls provided to `resourcefile` via the `http_url` property can now be any http url. previously, these had to be an azure blob storage url.\n        * the blobs under the azure blob storage container can be filtered by `blob_prefix` property.\n    * **breaking** removed `os_disk` property from `virtualmachineconfiguration`. this property is no longer supported.\n    * pools which set the `dynamic_vnet_assignment_scope` on `networkconfiguration` to be `dynamicvnetassignmentscope.job` can now dynamically assign a virtual network to each node the job's tasks run on. the specific virtual network to join the nodes to is specified in the new `network_configuration` property on `cloudjob` and `jobspecification`.\n        - note: this feature is in public preview. it is disabled for all batch accounts except for those which have contacted us and requested to be in the pilot.\n    * the maximum lifetime of a task is now 180 days (previously it was 7).\n    * added support on windows pools for creating users with a specific login mode (either `batch` or `interactive`) via `windowsuserconfiguration.login_mode`.\n    * the default task retention time for all tasks is now 7 days, previously it was infinite.\n- **breaking** renamed the `base_url` parameter to `batch_url` on `batchserviceclient` class, and it is required now.\n\n## 5.1.1 (2018-10-16)\n\n**bugfixes**\n\n- fix authentication class to allow http session to be re-used\n\n**note**\n\n- azure-nspkg is not installed anymore on python 3 (pep420-based namespace package)\n\n## 5.1.0 (2018-08-28)\n\n- update operation taskoperations.add_collection with the following added functionality:\n    + retry server side errors.\n    + automatically chunk lists of more than 100 tasks to multiple requests.\n    + if tasks are too large to be submitted in chunks of 100, reduces number of tasks per request.\n    + add a parameter to specify number of threads to use when submitting tasks.\n\n## 5.0.0 (2018-08-24)\n\n- using rest api version 2018-08-01.7.0.\n    + added `node_agent_info` in computenode to return the node agent information\n    + **breaking** removed the `validation_status` property from `taskcounts`.\n    + **breaking** the default caching type for `datadisk` and `osdisk` is now `read_write` instead of `none`.\n- `batchserviceclient` can be used as a context manager to keep the underlying http session open for performance.\n- **breaking** model signatures are now using only keywords-arguments syntax. each positional argument must be rewritten as a keyword argument.\n- **breaking** the following operations signatures are changed:\n   + operation pooloperations.enable_auto_scale\n   + operation taskoperations.update\n   + operation computenodeoperations.reimage\n   + operation computenodeoperations.disable_scheduling\n   + operation computenodeoperations.reboot\n   + operation joboperations.terminate\n- enum types now use the \"str\" mixin (class azureenum(str, enum)) to improve the behavior when unrecognized enum values are encountered.\n\n## 4.1.3 (2018-04-24)\n\n- update some apis' comments\n- new property `leaving_pool` in `node_counts` type.\n\n## 4.1.2 (2018-04-23)\n\n**bugfixes**\n\n- compatibility of the sdist with wheel 0.31.0\n- compatibility with msrestazure 0.4.28\n\n## 4.1.1 (2018-03-26)\n\n- fix regression on method `enable_auto_scale`.\n\n## 4.1.0 (2018-03-07)\n\n- using rest api version 2018-03-01.6.1.\n- added the ability to query pool node counts by state, via the new `list_pool_node_counts` method.\n- added the ability to upload azure batch node agent logs from a particular node, via the `upload_batch_service_logs` method.\n   + this is intended for use in debugging by microsoft support when there are problems on a node.\n\n## 4.0.0 (2017-09-25)\n\n- using rest api version 2017-09-01.6.0.\n- added the ability to get a discount on windows vm pricing if you have on-premises licenses for the os skus you are deploying, via `license_type` on `virtualmachineconfiguration`.\n- added support for attaching empty data drives to `virtualmachineconfiguration` based pools, via the new `data_disks` attribute on `virtualmachineconfiguration`.\n- **breaking** custom images must now be deployed using a reference to an arm image, instead of pointing to .vhd files in blobs directly.\n    + the new `virtual_machine_image_id` property on `imagereference` contains the reference to the arm image, and `osdisk.image_uris` no longer exists.\n    + because of this, `image_reference` is now a required attribute of `virtualmachineconfiguration`.\n- **breaking** multi-instance tasks (created using `multiinstancesettings`) must now specify a `coordination_commandline`, and `number_of_instances` is now optional and defaults to 1.\n- added support for tasks run using docker containers. to run a task using a docker container you must specify a `container_configuration` on the `virtualmachineconfiguration` for a pool, and then add `container_settings` on the task.\n\n## 3.1.0 (2017-07-24)\n\n- added a new operation `job.get_task_counts` to retrieve the number of tasks in each state.\n- added suuport for inbound endpoint configuration on a pool - there is a new `pool_endpoint_configuration` attribute on `networkconfiguration`.\n  this property is only supported on pools that use `virtual_machine_configuration`.\n- a `computenode` now also has an `endpoint_configuration` attribute with the details of the applied endpoint configuration for that node.\n\n## 3.0.0 (2017-05-10)\n\n- added support for the new low-priority node type; `addpoolparameter` and `poolspecification` now have an additional property `target_low_priority_nodes`.\n- `target_dedicated` and `current_dedicated` on `cloudpool`, `addpoolparameter` and `poolspecification` have been renamed to `target_dedicated_nodes` and `current_dedicated_nodes`.\n- `resize_error` on `cloudpool` is now a collection called `resize_errors`.\n- added a new `is_dedicated` property on `computenode`, which is `false` for low-priority nodes.\n- added a new `allow_low_priority_node` property to `jobmanagertask`, which if `true` allows the `jobmanagertask` to run on a low-priority compute node.\n- `poolresizeparameter` now takes two optional parameters, `target_dedicated_nodes` and `target_low_priority_nodes`, instead of one required parameter `target_dedicated`.\n  at least one of these two parameters must be specified.\n- added support for uploading task output files to persistent storage, via the `outputfiles` property on `cloudtask` and `jobmanagertask`.\n- added support for specifying actions to take based on a task's output file upload status, via the `file_upload_error` property on `exitconditions`.\n- added support for determining if a task was a success or a failure via the new `result` property on all task execution information objects.\n- renamed `scheduling_error` on all task execution information objects to `failure_information`. `taskfailureinformation` replaces `taskschedulingerror` and is returned any\n  time there is a task failure. this includes all previous scheduling error cases, as well as nonzero task exit codes, and file upload failures from the new output files feature.\n- renamed `schedulingerrorcategory` enum to `errorcategory`.\n- renamed `scheduling_error` on `exitconditions` to `pre_processing_error` to more clearly clarify when the error took place in the task life-cycle.\n- added support for provisioning application licenses to your pool, via a new `application_licenses` property on `pooladdparameter`, `cloudpool` and `poolspecification`.\n  please note that this feature is in gated public preview, and you must request access to it via a support ticket.\n- the `ssh_private_key` attribute of a `useraccount` object has been replaced with an expanded `linuxuserconfiguration` object with additional settings for a user id and group id of the\n  user account.\n- removed `unmapped` enum state from `addtaskstatus`, `certificateformat`, `certificatevisibility`, `certstorelocation`, `computenodefilltype`, `ostype`, and `poollifetimeoption` as they were not ever used.\n- improved and clarified documentation.\n\n## 2.0.1 (2017-04-19)\n\n- this wheel package is now built with the azure wheel extension\n\n## 2.0.0 (2017-02-23)\n\n- aad token authentication now supported.\n- some operation names have changed (along with their associated parameter model classes):\n    * pool.list_pool_usage_metrics -> pool.list_usage_metrics\n    * pool.get_all_pools_lifetime_statistics -> pool.get_all_lifetime_statistics\n    * job.get_all_jobs_lifetime_statistics -> job.get_all_lifetime_statistics\n    * file.get_node_file_properties_from_task -> file.get_properties_from_task\n    * file.get_node_file_properties_from_compute_node -> file.get_properties_from_compute_node\n- the attribute 'file_name' in relation to file operations has been renamed to 'file_path'.\n- change in naming convention for enum values to use underscores: e.g. starttaskstate.waitingforstarttask -> starttaskstate.waiting_for_start_task.\n- support for running tasks under a predefined or automatic user account. this includes tasks, job manager tasks, job preparation and release tasks and pool start tasks. this feature replaces the previous 'run_elevated' option on a task.\n- tasks now have an optional scoped authentication token (only applies to tasks and job manager tasks).\n- support for creating pools with a list of user accounts.\n- support for creating pools using a custom vm image (only supported on accounts created with a \"user subscription\" pool allocation mode).\n\n## 1.1.0 (2016-09-15)\n\n- added support for task reactivation\n\n## 1.0.0 (2016-08-09)\n\n- added support for joining a cloudpool to a virtual network on using the network_configuration property.\n- added support for application package references on cloudtask and jobmanagertask.\n- added support for automatically terminating jobs when all tasks complete or when a task fails, via the on_all_tasks_complete property and\n  the cloudtask exit_conditions property.\n\n## 0.30.0rc5\n\n- initial release\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "azure-batch",
  "package_url": "https://pypi.org/project/azure-batch/",
  "project_url": "https://pypi.org/project/azure-batch/",
  "project_urls": {
    "Homepage": "https://github.com/Azure/azure-sdk-for-python"
  },
  "release_url": "https://pypi.org/project/azure-batch/14.0.0/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "microsoft azure batch client library for python",
  "version": "14.0.0",
  "releases": [],
  "developers": [
    "azpysdkhelp@microsoft.com",
    "microsoft_corporation"
  ],
  "kwds": "azure azureblobfilesystemconfiguration azureenum batch_support_end_of_life batchserviceclient",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_azure_batch",
  "homepage": "https://github.com/azure/azure-sdk-for-python",
  "release_count": 28,
  "dependency_ids": []
}
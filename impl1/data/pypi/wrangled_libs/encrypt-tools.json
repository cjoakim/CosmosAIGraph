{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: scientific/engineering :: artificial intelligence"
  ],
  "description": "# encrypt_tools: encrypt and decrypt\n\n\n[![github license](https://img.shields.io/badge/license-apache%202.0-blue.svg)](https://opensource.org/licenses/apache-2.0)\n[![updates](https://pyup.io/repos/github/woctezuma/google-colab-transfer/shield.svg)](pyup)\n[![python 3](https://pyup.io/repos/github/woctezuma/google-colab-transfer/python-3-shield.svg)](pyup)\n[![code coverage](https://codecov.io/gh/woctezuma/google-colab-transfer/branch/master/graph/badge.svg)](codecov)\n\n\n\n\nencrypt_tools is a python package of low-level cryptographic primitives.\n\ninstallation\n============\nthe code is packaged for pypi, so that the installation consists in running:\n```sh\npip install encrypt-tools\n```\n\n\nusage aes\n=====\n    from encrypt_tools import cryptoaes\n    from encrypt_tools import generate_b64decode\n\n    key = generate_b64decode(\"onagsoj7nxljo0xo5iorf3vqt+ip/urbczdmueljyco=\")\n    iv = generate_b64decode(\"wvdnobewh+napbbqz/wazg==\")\n\n    cipher = cryptoaes()\n    text = \"51123456789\"\n\n    encrypt = cipher.encrypt(text, key, iv)\n    print(f'encrypt:\\n{encrypt}')\n\n    decrypt = cipher.decrypt(encrypt, key, iv)\n    print(f'decrypt:\\n{decrypt}')\n\n\nusage rsa\n=====\n    from encrypt_tools import crypyorsa\n    from encrypt_tools import generate_key_pair\n\n    cipher = crypyorsa()\n    text = \"51955376623\"\n\n    passphrase_private = \"passphrase_private\"\n    passphrase_public = \"passphrase_public\"\n    generate_key_pair(passphrase_private,\n                      passphrase_public)\n\n    encrypt = cipher.encrypt(text, passphrase_public)\n    print(f'encrypt:\\n{encrypt}')\n\n    decrypt = cipher.decrypt(encrypt, passphrase_private)\n    print(f'decrypt:\\n{decrypt}')\n\n\nusage rsa files\n==============\n    from encrypt_tools import cryptofiles\n    from pathlib import path\n\n    cipher = cryptofiles()\n    text = \"51955376623\"\n    passphrase_private = \"passphrase_private\"\n    passphrase_public = \"passphrase_public\"\n\n    private_key = path('private.pem')\n    public_key = path('public.pem')\n    unencrypted_file = path('file.txt')\n\n    encrypt = cipher.encrypt(unencrypted_file, public_key, passphrase_public)\n    print(f'encrypt:\\n{encrypt}')\n\n\n    decrypt = cipher.decrypt(encrypt, private_key, passphrase_private)\n    print(f'decrypt:\\n{decrypt}')\n\n## license\n\n[apache license 2.0](https://www.dropbox.com/s/8t6xtgk06o3ij61/license?dl=0).\n\n\n## new features v1.0\n\n\n## bugfix\n- choco install visualcpp-build-tools\n\n\n\n## reference\n\n - jonathan quiza [github](https://github.com/jonaqp).\n - jonathan quiza [rumimlspark](http://rumi-ml.herokuapp.com/).\n - jonathan quiza [linkedin](https://www.linkedin.com/in/jonaqp/).\n\n\n",
  "docs_url": null,
  "keywords": "color,text,terminal",
  "license": "",
  "name": "encrypt-tools",
  "package_url": "https://pypi.org/project/encrypt-tools/",
  "project_url": "https://pypi.org/project/encrypt-tools/",
  "project_urls": {
    "Download": "https://github.com/jonaqp/encrypt_tools/archive/main.zip",
    "Homepage": "https://github.com/jonaqp/encrypt_tools/"
  },
  "release_url": "https://pypi.org/project/encrypt-tools/0.0.2/",
  "requires_dist": [
    "pycryptodome (>=3.10.1)"
  ],
  "requires_python": "",
  "summary": "encrypt_tools",
  "version": "0.0.2",
  "releases": [],
  "developers": [
    "jonathan_quiza",
    "jony327@gmail.com"
  ],
  "kwds": "encrypt_tools cryptofiles cryptoaes pyup decrypt",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_encrypt_tools",
  "homepage": "https://github.com/jonaqp/encrypt_tools/",
  "release_count": 2,
  "dependency_ids": [
    "pypi_pycryptodome"
  ]
}
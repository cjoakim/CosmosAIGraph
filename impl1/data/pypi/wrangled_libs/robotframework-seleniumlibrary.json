{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: robot framework",
    "framework :: robot framework :: library",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: software development :: testing"
  ],
  "description": "seleniumlibrary\r\n===============\r\n\r\n.. contents::\r\n\r\nintroduction\r\n------------\r\n\r\nseleniumlibrary_ is a web testing library for `robot framework`_ that\r\nutilizes the selenium_ tool internally. the project is hosted on github_\r\nand downloads can be found from pypi_.\r\n\r\nseleniumlibrary works with selenium 3 and 4. it supports python 3.6 or\r\nnewer. in addition to the normal python_ interpreter, it works also\r\nwith pypy_.\r\n\r\nseleniumlibrary is based on the `old seleniumlibrary`_ that was forked to\r\nselenium2library_ and then later renamed back to seleniumlibrary.\r\nsee the versions_ and history_ sections below for more information about\r\ndifferent versions and the overall project history.\r\n\r\n.. image:: https://img.shields.io/pypi/v/robotframework-seleniumlibrary.svg?label=version\r\n   :target: https://pypi.python.org/pypi/robotframework-seleniumlibrary\r\n   \r\n.. image:: https://img.shields.io/pypi/dm/robotframework-seleniumlibrary.svg\r\n   :target: https://pypi.python.org/pypi/robotframework-seleniumlibrary\r\n\r\n.. image:: https://img.shields.io/pypi/l/robotframework-seleniumlibrary.svg\r\n   :target: https://www.apache.org/licenses/license-2.0\r\n\r\n.. image:: https://github.com/robotframework/seleniumlibrary/actions/workflows/ci.yml/badge.svg?branch=master\r\n    :target: https://github.com/robotframework/seleniumlibrary/actions/workflows/ci.yml\r\n\r\nkeyword documentation\r\n---------------------\r\nsee `keyword documentation`_ for available keywords and more information\r\nabout the library in general.\r\n\r\ninstallation\r\n------------\r\n\r\nthe recommended installation method is using pip_::\r\n\r\n    pip install --upgrade robotframework-seleniumlibrary\r\n\r\nrunning this command installs also the latest selenium and robot framework\r\nversions, but you still need to install `browser drivers`_ separately.\r\nthe ``--upgrade`` option can be omitted when installing the library for the\r\nfirst time.\r\n\r\nthose migrating from selenium2library_ can install seleniumlibrary so that\r\nit is exposed also as selenium2library::\r\n\r\n    pip install --upgrade robotframework-selenium2library\r\n\r\nthe above command installs the normal seleniumlibrary as well as a new\r\nselenium2library version that is just a thin wrapper to seleniumlibrary.\r\nthat allows importing selenium2library in tests while migrating to\r\nseleniumlibrary.\r\n\r\nto install the last legacy selenium2library_ version, use this command instead::\r\n\r\n    pip install robotframework-selenium2library==1.8.0\r\n\r\nwith recent versions of ``pip`` it is possible to install directly from the\r\ngithub_ repository. to install latest source from the master branch, use\r\nthis command::\r\n\r\n    pip install git+https://github.com/robotframework/seleniumlibrary.git\r\n\r\nplease note that installation will take some time, because ``pip`` will\r\nclone the seleniumlibrary_ project to a temporary directory and then\r\nperform the installation.\r\n\r\nsee `robot framework installation instructions`_ for detailed information\r\nabout installing python and robot framework itself. for more details about\r\nusing ``pip`` see `its own documentation <pip_>`__.\r\n\r\nbrowser drivers\r\n---------------\r\n\r\nafter installing the library, you still need to install browser and\r\noperating system specific browser drivers for all those browsers you\r\nwant to use in tests. these are the exact same drivers you need to use with\r\nselenium also when not using seleniumlibrary. more information about\r\ndrivers can be found from `selenium documentation`__.\r\n\r\nthe general approach to install a browser driver is downloading a right\r\ndriver, such as ``chromedriver`` for chrome, and placing it into\r\na directory that is in path__. drivers for different browsers\r\ncan be found via selenium documentation or by using your favorite\r\nsearch engine with a search term like ``selenium chrome browser driver``.\r\nnew browser driver versions are released to support features in\r\nnew browsers, fix bug, or otherwise, and you need to keep an eye on them\r\nto know when to update drivers you use.\r\n\r\nalternatively, you can use a tool called webdrivermanager__ which can\r\nfind the latest version or when required, any version of appropriate\r\nwebdrivers for you and then download and link/copy it into right\r\nlocation. tool can run on all major operating systems and supports\r\ndownloading of chrome, firefox, opera & edge webdrivers.\r\n\r\nhere's an example:\r\n\r\n.. code:: bash\r\n\r\n      pip install webdrivermanager\r\n      webdrivermanager firefox chrome --linkpath /usr/local/bin\r\n\r\n\r\n\r\n__ https://seleniumhq.github.io/selenium/docs/api/py/index.html#drivers\r\n__ https://en.wikipedia.org/wiki/path_(variable)\r\n__ https://github.com/omenia/webdrivermanager\r\n\r\nusage\r\n-----\r\n\r\nto use seleniumlibrary in robot framework tests, the library needs to\r\nfirst be imported using the ``library`` setting as any other library.\r\nthe library accepts some import time arguments, which are documented\r\nin the `keyword documentation`_ along with all the keywords provided\r\nby the library.\r\n\r\nwhen using robot framework, it is generally recommended to write as\r\neasy-to-understand tests as possible. the keywords provided by\r\nseleniumlibrary is pretty low level, though, and often require\r\nimplementation-specific arguments like element locators to be passed\r\nas arguments. it is thus typically a good idea to write tests using\r\nrobot framework's higher-level keywords that utilize seleniumlibrary\r\nkeywords internally. this is illustrated by the following example\r\nwhere seleniumlibrary keywords like ``input text`` are primarily\r\nused by higher-level keywords like ``input username``.\r\n\r\n.. code:: robotframework\r\n\r\n    *** settings ***\r\n    documentation     simple example using seleniumlibrary.\r\n    library           seleniumlibrary\r\n\r\n    *** variables ***\r\n    ${login url}      http://localhost:7272\r\n    ${browser}        chrome\r\n\r\n    *** test cases ***\r\n    valid login\r\n        open browser to login page\r\n        input username    demo\r\n        input password    mode\r\n        submit credentials\r\n        welcome page should be open\r\n        [teardown]    close browser\r\n\r\n    *** keywords ***\r\n    open browser to login page\r\n        open browser    ${login url}    ${browser}\r\n        title should be    login page\r\n\r\n    input username\r\n        [arguments]    ${username}\r\n        input text    username_field    ${username}\r\n\r\n    input password\r\n        [arguments]    ${password}\r\n        input text    password_field    ${password}\r\n\r\n    submit credentials\r\n        click button    login_button\r\n\r\n    welcome page should be open\r\n        title should be    welcome page\r\n\r\n\r\nthe above example is a slightly modified version of an example in a\r\n`demo project`_ that illustrates using robot framework and seleniumlibrary.\r\nsee the demo for more examples that you can also execute on your own\r\nmachine. for more information about robot framework test data syntax in\r\ngeneral see the `robot framework user guide`_.\r\n\r\nextending seleniumlibrary\r\n-------------------------\r\nbefore creating your own library which extends the ``seleniumlibrary``, please consider would\r\nthe extension be also useful also for general usage. if it could be useful also for general\r\nusage, please create a new issue describing the enhancement request and even better if the\r\nissue is backed up by a pull request.\r\n\r\nif the enhancement is not generally useful, example solution is domain specific, then the\r\nseleniumlibrary offers public apis which can be used to build its own plugins and libraries.\r\nplugin api allows us to add new keywords, modify existing keywords and modify the internal\r\nfunctionality of the library. also new libraries can be built on top of the\r\nseleniumlibrary. please see `extending documentation`_ for more details about the\r\navailable methods and for examples how the library can be extended.\r\n\r\ncommunity\r\n---------\r\n\r\nif the provided documentation is not enough, there are various community channels\r\navailable:\r\n\r\n- `robotframework-users`_ mailing list\r\n- ``#seleniumlibrary`` and ``#seleniumlibrary-dev`` channels in\r\n  robot framework `slack community`_\r\n- `robot framework forum`_ has channel for seleniumlibrary.\r\n- seleniumlibrary `issue tracker`_ for bug reports and concrete enhancement\r\n  requests\r\n- `other community channels`_ including paid support\r\n\r\nversions\r\n--------\r\n\r\nseleniumlibrary has over the years lived under seleniumlibrary and\r\nselenium2library names and different library versions have supported\r\ndifferent selenium and python versions. this is summarized in the table\r\nbelow and the history_ section afterwards explains the project history\r\na bit more.\r\n\r\n==================================  ==========================  ==========================  ===============\r\n             project                     selenium version             python version         comment\r\n==================================  ==========================  ==========================  ===============\r\nseleniumlibrary 2.9.2 and earlier   selenium 1 and 2            python 2.5-2.7              the original seleniumlibrary using selenium rc api.\r\nselenium2library 1.8.0 and earlier  selenium 2 and 3            python 2.6-2.7              fork of seleniumlibrary using selenium webdriver api.\r\nseleniumlibrary 3.0 and 3.1         selenium 2 and 3            python 2.7 and 3.3+         selenium2library renamed and with python 3 support and new architecture.\r\nseleniumlibrary 3.2                 selenium 3                  python 2.7 and 3.4+         drops selenium 2 support.\r\nseleniumlibrary 4.0                 selenium 3                  python 2.7 and 3.4+         plugin api and support for event friging webdriver.\r\nseleniumlibrary 4.1                 selenium 3                  python 2.7 and 3.5+         drops python 3.4 support.\r\nseleniumlibrary 4.2                 selenium 3                  python 2.7 and 3.5+         supports only selenium 3.141.0 or newer.\r\nseleniumlibrary 4.4                 selenium 3 and 4            python 2.7 and 3.6+         new pythonlibcore and dropped python 3.5 support.\r\nseleniumlibrary 5.0                 selenium 3 and 4            python 3.6+                 python 2 and jython support is dropped.\r\nseleniumlibrary 5.1                 selenium 3 and 4            python 3.6+                 robot framework 3.1 support is dropped.\r\nselenium2library 3.0                depends on seleniumlibrary  depends on seleniumlibrary  thin wrapper for seleniumlibrary 3.0 to ease transition.\r\n==================================  ==========================  ==========================  ===============\r\n\r\nhistory\r\n-------\r\n\r\nseleniumlibrary originally used the selenium remote controller (rc) api.\r\nwhen selenium 2 was introduced with the new but backwards incompatible\r\nwebdriver api, seleniumlibrary kept using selenium rc and separate\r\nselenium2library using webdriver was forked. these projects contained\r\nmostly the same keywords and in most cases selenium2library was a drop-in\r\nreplacement for seleniumlibrary.\r\n\r\nover the years development of the old seleniumlibrary stopped and also\r\nthe selenium rc api it used was deprecated. selenium2library was developed\r\nfurther and replaced the old library as the de facto web testing library\r\nfor robot framework.\r\n\r\nwhen selenium 3 was released in 2016, it was otherwise backwards compatible\r\nwith selenium 2, but the deprecated selenium rc api was removed. this had two\r\nimportant effects:\r\n\r\n- the old seleniumlibrary could not anymore be used with new selenium versions.\r\n  this project was pretty much dead.\r\n- selenium2library was badly named as it supported selenium 3 just fine.\r\n  this project needed a new name.\r\n\r\nat the same time when selenium 3 was released, selenium2library was going\r\nthrough larger architecture changes in order to ease future maintenance and\r\nto make adding python 3 support easier. with all these big internal and\r\nexternal changes, it made sense to rename selenium2library back to\r\nseleniumlibrary. this decision basically meant following changes:\r\n\r\n- create separate repository for the `old seleniumlibrary`_ to preserve\r\n  its history since selenium2library was forked.\r\n- rename selenium2library project and the library itself to seleniumlibrary_.\r\n- add new selenium2library_ project to ease transitioning from selenium2library\r\n  to seleniumlibrary.\r\n\r\ngoing forward, all new development will happen in the new seleniumlibrary\r\nproject.\r\n\r\n.. _robot framework: https://robotframework.org\r\n.. _selenium: https://www.seleniumhq.org/\r\n.. _seleniumlibrary: https://github.com/robotframework/seleniumlibrary\r\n.. _selenium2library: https://github.com/robotframework/selenium2library\r\n.. _old seleniumlibrary: https://github.com/robotframework/oldseleniumlibrary\r\n.. _pip: http://pip-installer.org\r\n.. _pypi: https://pypi.python.org/pypi/robotframework-seleniumlibrary\r\n.. _github: https://github.com/robotframework/seleniumlibrary\r\n.. _keyword documentation: https://robotframework.org/seleniumlibrary/seleniumlibrary.html\r\n.. _python: https://python.org\r\n.. _pypy: https://pypy.org\r\n.. _jython: https://jython.org/\r\n.. _ironpython: https://ironpython.net/\r\n.. _demo project: https://github.com/robotframework/webdemo\r\n.. _robot framework user guide: https://robotframework.org/robotframework/latest/robotframeworkuserguide.html\r\n.. _robot framework installation instructions: https://github.com/robotframework/robotframework/blob/master/install.rst\r\n.. _robotframework-users: https://groups.google.com/group/robotframework-users\r\n.. _extending documentation: https://github.com/robotframework/seleniumlibrary/blob/master/docs/extending/extending.rst\r\n.. _slack community: https://robotframework-slack-invite.herokuapp.com\r\n.. _robot framework forum: https://forum.robotframework.org/\r\n.. _issue tracker: https://github.com/robotframework/seleniumlibrary/issues\r\n.. _other community channels: https://robotframework.org/#community\r\n",
  "docs_url": null,
  "keywords": "robotframework testing testautomation selenium webdriver web",
  "license": "apache license 2.0",
  "name": "robotframework-seleniumlibrary",
  "package_url": "https://pypi.org/project/robotframework-seleniumlibrary/",
  "project_url": "https://pypi.org/project/robotframework-seleniumlibrary/",
  "project_urls": {
    "Homepage": "https://github.com/robotframework/SeleniumLibrary"
  },
  "release_url": "https://pypi.org/project/robotframework-seleniumlibrary/6.2.0/",
  "requires_dist": [
    "selenium (>=4.3.0)",
    "robotframework (>=4.1.3)",
    "robotframework-pythonlibcore (>=3.0.0)"
  ],
  "requires_python": ">=3.6, <4",
  "summary": "web testing library for robot framework",
  "version": "6.2.0",
  "releases": [],
  "developers": [
    "ed_manlove",
    "emanlove@verizon.net"
  ],
  "kwds": "_seleniumlibrary _selenium2library seleniumlibrary_ seleniumlibrary selenium2library_",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_robotframework_seleniumlibrary",
  "homepage": "https://github.com/robotframework/seleniumlibrary",
  "release_count": 62,
  "dependency_ids": [
    "pypi_robotframework",
    "pypi_robotframework_pythonlibcore",
    "pypi_selenium"
  ]
}
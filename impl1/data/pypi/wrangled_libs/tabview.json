{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "environment :: console :: curses",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: office/business :: financial :: spreadsheet",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: visualization",
    "topic :: utilities"
  ],
  "description": ".. image:: \thttps://img.shields.io/github/release/tabviewer/tabview.svg\n    :target: https://pypi.python.org/pypi/tabview/\n    :alt: latest version\n\n.. image:: https://img.shields.io/pypi/pyversions/tabview.svg\n \u00a0 \u00a0:target: https://pypi.python.org/pypi/tabview/\n    :alt: supported python versions\n\n.. image:: \thttps://img.shields.io/pypi/l/tabview.svg\n    :target: https://pypi.python.org/pypi/tabview/\n    :alt: license\n\n.. image:: https://sourcegraph.com/github.com/tabviewer/tabview/-/badge.svg\n   :target: https://sourcegraph.com/github.com/tabviewer/tabview\n\n.. image:: \thttps://img.shields.io/travis/tabviewer/tabview.svg\n    :target: https://travis-ci.org/tabviewer/tabview\n\ntabview  \n=========\n\n**this project is functional but future development will be sporadic and\nlimited. for a more fully featured csv viewer/spreadsheet app check out the**\n`visidata project <https://github.com/saulpw/visidata>`_.\n\nview a csv file in a spreadsheet-like display.\n\nposted by scott hansen <firecat4153@gmail.com>\n\n    original code forked from: http://www.amk.ca/files/simple/tabview.txt\n\n    contributed by a.m. kuchling <amk@amk.ca>\n\nother contributors:\n\n    + matus gura <matus.gura@gmail.com>\n    + nathan typanski <ntypanski@gmail.com>\n    + s\u00e9bastien celles <s.celles@gmail.com>\n    + yuri d'elia <wavexx@thregr.org>\n\nthe highlighted position is shown in the top-left corner of the screen; next to\nit are shown the contents of that cell.\n\nfeatures:\n---------\n* python 3.4+\n* spreadsheet-like view for easily visualizing tabular data\n* vim-like navigation (h,j,k,l, g(top), g(bottom), 12g goto line 12, m - mark,\n  ' - goto mark, etc.) \n* toggle persistent header row\n* sort ascending or descending by any column. dynamically change column width and gap\n* sort in 'natural order' to improve numeric sorting\n* full-text incremental search, n and p to cycle between search results\n* 'enter' to view the full cell contents\n* yank cell contents to the clipboard\n* file can be reloaded in-place if the data changes.\n* f1 or ? for keybindings\n* can also use from python command line to visualize any tabular data (e.g.\n  list-of-lists)\n* see the screenshots directory for some pictures.\n\nrequires: \n---------\n\n* python 3.4+\n* xsel or xclip (optional - only required for 'yank' to clipboard)\n\ninstallation:\n-------------\n\n* ``pip install tabview`` or\n* ``# python setup.py install``  or\n* ``$ python setup.py install --user``  or\n* `archlinux aur package <https://aur.archlinux.org/packages/tabview-git/>`_\n\nusage:\n------\n\n* from command line:\n\n  .. code:: python\n\n    tabview <filename>\n    tabview <filename> --start_pos 6,5\n    tabview <filename> +6:5  (equivalent to previous usage)\n    tabview <filename> --encoding iso8859-1 +6:\n\n* from python command line to view an object\n\n    .. code:: python\n\n        import tabview as t\n        a = [[\"a\",\"b\",\"c\"], [\"d\",\"e\",\"f\"]]\n        t.view(a)\n\n* from python command line to view a file\n\n    .. code:: python\n\n        import tabview as t\n        t.view(<filename>, start_pos=(60,40))\n\n* using as the pager for mysql. set these options in ~/.my.cnf::\n\n      pager=tabview -d '\\t' --quoting quote_none -\n      silent\n\ntests:\n------\n\n* ``python tests/test_tabview.py``\n\nkeybindings:\n---------------\n\n==========================   =================================================\n**f1 or ?**                  show this list of keybindings\n**cursor keys or h,j,k,l**   move the highlighted cell, scrolling if required.\n**q or q**                   quit\n**home, ^, ctrl-a**          move to the start of this line\n**end, $, ctrl-e**           move to the end of this line\n**[num]|**                   goto column <num>, or first column\n                             if num not given\n**pgup/pgdn or j/k**         move a page up or down\n**h,l**                      page left or right\n**g**                        goto top of current column\n**[num]g**                   goto line <num> or bottom of current column \n                             if num not given\n**ctrl-g**                   show file/data information\n**insert or m**              memorize this position\n**delete or '**              return to memorized position (if any)\n**enter**                    view full cell contents in pop-up window.\n**/**                        search\n**n**                        next search result\n**p**                        previous search result\n**t**                        toggle fixed header row\n**< >**                      decrease/increase column width (all columns)\n**, .**                      decrease/increase column width (current column)\n**- +**                      decrease/increase column gap\n**s**                        sort the table by the current column (ascending)\n**s**                        sort the table by the current column (descending)\n**a**                        'natural sort' the table (ascending)\n**a**                        'natural sort' the table (descending)\n**#**                        sort numerically by the current column (ascending)\n**@**                        sort numerically by the current column (descending)\n**r**                        reload file/data. also resets sort order\n**y**                        yank cell contents to the clipboard\n                             (requires xsel or xclip)\n**[num]c**                   toggle variable column width mode (mode/max),\n                             or set width to [num]\n**[num]c**                   maximize current column, or set width to [num]\n**[num][**                   skip to (nth) change in row value (backward)\n**[num]]**                   skip to (nth) change in row value (forward)\n**[num]{**                   skip to (nth) change in column value (backward)\n**[num]}**                   skip to (nth) change in column value (forward)\n==========================   =================================================\n\n\n",
  "docs_url": null,
  "keywords": "data spreadsheet view viewer console curses csv comma separated values",
  "license": "mit",
  "name": "tabview",
  "package_url": "https://pypi.org/project/tabview/",
  "project_url": "https://pypi.org/project/tabview/",
  "project_urls": {
    "Download": "https://github.com/Tabviewer/tabview/tarball/1.4.4",
    "Homepage": "https://github.com/Tabviewer/tabview"
  },
  "release_url": "https://pypi.org/project/tabview/1.4.4/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a curses command-line csv and list (tabular data) viewer",
  "version": "1.4.4",
  "releases": [],
  "developers": [
    "firecat4153@gmail.com",
    "scott_hansen"
  ],
  "kwds": "tabview tabviewer test_tabview tabular csv",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_tabview",
  "homepage": "https://github.com/tabviewer/tabview",
  "release_count": 10,
  "dependency_ids": []
}
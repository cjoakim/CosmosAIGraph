{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "typing :: typed"
  ],
  "description": "[![pypi version](https://badge.fury.io/py/pypdf2.svg)](https://badge.fury.io/py/pypdf2)\n[![python support](https://img.shields.io/pypi/pyversions/pypdf2.svg)](https://pypi.org/project/pypdf2/)\n[![](https://img.shields.io/badge/-documentation-green)](https://pypdf2.readthedocs.io/en/stable/)\n[![github last commit](https://img.shields.io/github/last-commit/py-pdf/pypdf2)](https://github.com/py-pdf/pypdf2)\n[![codecov](https://codecov.io/gh/py-pdf/pypdf2/branch/main/graph/badge.svg?token=id42cgnz5z)](https://codecov.io/gh/py-pdf/pypdf2)\n\n# **note**: the pypdf2 project is going back to its roots. pypdf2==3.0.x will be  the last version of pypdf2. development will continue with [`pypdf==3.1.0`](https://pypi.org/project/pypdf/).\n\n# pypdf2\n\n\npypdf2 is a free and open-source pure-python pdf library capable of splitting,\n[merging](https://pypdf2.readthedocs.io/en/stable/user/merging-pdfs.html),\n[cropping, and transforming](https://pypdf2.readthedocs.io/en/stable/user/cropping-and-transforming.html)\nthe pages of pdf files. it can also add\ncustom data, viewing options, and\n[passwords](https://pypdf2.readthedocs.io/en/stable/user/encryption-decryption.html)\nto pdf files. pypdf2 can\n[retrieve text](https://pypdf2.readthedocs.io/en/stable/user/extract-text.html)\nand\n[metadata](https://pypdf2.readthedocs.io/en/stable/user/metadata.html)\nfrom pdfs as well.\n\n\n## installation\n\nyou can install pypdf2 via pip:\n\n```\npip install pypdf2\n```\n\nif you plan to use pypdf2 for encrypting or decrypting pdfs that use aes, you\nwill need to install some extra dependencies. encryption using rc4 is supported\nusing the regular installation.\n\n```\npip install pypdf2[crypto]\n```\n\n## usage\n\n```python\nfrom pypdf2 import pdfreader\n\nreader = pdfreader(\"example.pdf\")\nnumber_of_pages = len(reader.pages)\npage = reader.pages[0]\ntext = page.extract_text()\n```\n\npypdf2 can do a lot more, e.g. splitting, merging, reading and creating\nannotations, decrypting and encrypting, and more.\n\nplease see [the documentation](https://pypdf2.readthedocs.io/en/stable/)\nfor more usage examples!\n\na lot of questions are asked and answered\n[on stackoverflow](https://stackoverflow.com/questions/tagged/pypdf2).\n\n## contributions\n\nmaintaining pypdf2 is a collaborative effort. you can support pypdf2 by writing\ndocumentation, helping to narrow down issues, and adding code.\n\n### q&a\n\nthe experience pypdf2 users have covers the whole range from beginners who\nwant to make their live easier to experts who developed software before pdf\nexisted. you can contribute to the pypdf2 community by answering questions\non [stackoverflow](https://stackoverflow.com/questions/tagged/pypdf2),\nhelping in [discussions](https://github.com/py-pdf/pypdf2/discussions),\nand asking users who report issues for [mcve](https://stackoverflow.com/help/minimal-reproducible-example)'s (code + example pdf!).\n\n\n### issues\n\na good bug ticket includes a mcve - a minimal complete verifiable example.\nfor pypdf2, this means that you must upload a pdf that causes the bug to occur\nas well as the code you're executing with all of the output. use\n`print(pypdf2.__version__)` to tell us which version you're using.\n\n### code\n\nall code contributions are welcome, but smaller ones have a better chance to\nget included in a timely manner. adding unit tests for new features or test\ncases for bugs you've fixed help us to ensure that the pull request (pr) is fine.\n\npypdf2 includes a test suite which can be executed with `pytest`:\n\n```bash\n$ pytest\n===================== test session starts =====================\nplatform linux -- python 3.6.15, pytest-7.0.1, pluggy-1.0.0\nrootdir: /home/moose/github/martin/pypdf2\nplugins: cov-3.0.0\ncollected 233 items\n\ntests/test_basic_features.py ..                         [  0%]\ntests/test_constants.py .                               [  1%]\ntests/test_filters.py .................x.....           [ 11%]\ntests/test_generic.py ................................. [ 25%]\n.............                                           [ 30%]\ntests/test_javascript.py ..                             [ 31%]\ntests/test_merger.py .                                  [ 32%]\ntests/test_page.py .........................            [ 42%]\ntests/test_pagerange.py ................                [ 49%]\ntests/test_papersizes.py ..................             [ 57%]\ntests/test_reader.py .................................. [ 72%]\n...............                                         [ 78%]\ntests/test_utils.py ....................                [ 87%]\ntests/test_workflows.py ..........                      [ 91%]\ntests/test_writer.py .................                  [ 98%]\ntests/test_xmp.py ...                                   [100%]\n\n========== 232 passed, 1 xfailed, 1 warning in 4.52s ==========\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "pypdf2",
  "package_url": "https://pypi.org/project/PyPDF2/",
  "project_url": "https://pypi.org/project/PyPDF2/",
  "project_urls": {
    "Bug Reports": "https://github.com/py-pdf/PyPDF2/issues",
    "Changelog": "https://pypdf2.readthedocs.io/en/latest/meta/CHANGELOG.html",
    "Documentation": "https://pypdf2.readthedocs.io/en/latest/",
    "Source": "https://github.com/py-pdf/PyPDF2"
  },
  "release_url": "https://pypi.org/project/PyPDF2/3.0.1/",
  "requires_dist": [
    "typing_extensions >= 3.10.0.0; python_version < '3.10'",
    "dataclasses; python_version < '3.7'",
    "PyCryptodome ; extra == \"crypto\"",
    "black ; extra == \"dev\"",
    "pip-tools ; extra == \"dev\"",
    "pre-commit<2.18.0 ; extra == \"dev\"",
    "pytest-cov ; extra == \"dev\"",
    "flit ; extra == \"dev\"",
    "wheel ; extra == \"dev\"",
    "sphinx ; extra == \"docs\"",
    "sphinx_rtd_theme ; extra == \"docs\"",
    "myst_parser ; extra == \"docs\"",
    "PyCryptodome ; extra == \"full\"",
    "Pillow ; extra == \"full\"",
    "Pillow ; extra == \"image\""
  ],
  "requires_python": ">=3.6",
  "summary": "a pure-python pdf library capable of splitting, merging, cropping, and transforming pdf files",
  "version": "3.0.1",
  "releases": [],
  "developers": [
    "biziqe@mathieu.fenniak.net",
    "info@martin-thoma.de"
  ],
  "kwds": "pypdf2 pypdf pypi pyversions pytest",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pypdf2",
  "homepage": "",
  "release_count": 66,
  "dependency_ids": [
    "pypi_black",
    "pypi_dataclasses",
    "pypi_flit",
    "pypi_myst_parser",
    "pypi_pillow",
    "pypi_pip_tools",
    "pypi_pre_commit",
    "pypi_pycryptodome",
    "pypi_pytest_cov",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_typing_extensions",
    "pypi_wheel"
  ]
}
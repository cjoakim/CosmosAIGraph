{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: universal permissive license (upl)",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# oracle accelerated data science (ads)\n\n[![pypi](https://img.shields.io/pypi/v/oracle-ads.svg?style=for-the-badge&logo=pypi&logocolor=white)](https://pypi.org/project/oracle-ads/) [![python](https://img.shields.io/pypi/pyversions/oracle-ads.svg?style=for-the-badge&logo=pypi&logocolor=white)](https://pypi.org/project/oracle-ads/) [![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg?style=for-the-badge&logo=pypi&logocolor=white)](https://github.com/ambv/black)\n\n\nthe [oracle accelerated data science (ads) sdk](https://accelerated-data-science.readthedocs.io/en/latest/index.html) is maintained by the oracle cloud infrastructure (oci) [data science service](https://docs.oracle.com/en-us/iaas/data-science/using/data-science.htm) team. it speeds up common data science activities by providing tools that automate and simplify common data science tasks. additionally, provides data scientists a friendly pythonic interface to oci services. some of the more notable services are oci data science, model catalog, model deployment, jobs, ml pipelines, data flow, object storage, vault, big data service, data catalog, and the autonomous database. ads gives you an interface to manage the life cycle of machine learning models, from data acquisition to model evaluation, interpretation, and model deployment.\n\nwith ads you can:\n\n- read datasets from oracle object storage, oracle rdbms (atp/adw/on-prem), aws s3 and other sources into `pandas dataframes`.\n- tune models using hyperparameter optimization with the `adstuner` tool.\n- generate detailed evaluation reports of your model candidates with the `adsevaluator` module.\n- save machine learning models to the [oci data science model catalog](https://docs.oracle.com/en-us/iaas/data-science/using/models-about.htm).\n- deploy models as http endpoints with [model deployment](https://docs.oracle.com/en-us/iaas/data-science/using/model-dep-about.htm).\n- launch distributed etl, data processing, and model training jobs in spark with [oci data flow](https://docs.oracle.com/en-us/iaas/data-flow/using/home.htm).\n- train machine learning models in oci data science [jobs](https://docs.oracle.com/en-us/iaas/data-science/using/jobs-about.htm).\n- define and run an end-to-end machine learning orchestration covering all the steps of machine learning lifecycle in a repeatable, continuous [ml pipelines](https://accelerated-data-science.readthedocs.io/en/latest/user_guide/pipeline/overview.html#).\n- manage the life cycle of conda environments through the `ads conda` command line interface (cli).\n\n## installation\n\nyou have various options when installing ads.\n\n### installing the oracle-ads base package\n\n```bash\n  python3 -m pip install oracle-ads\n```\n\n### installing oci ai operators\n\nto use the ai forecast operator, install the \"forecast\" dependencies using the following command:\n\n```bash\n  python3 -m pip install 'oracle_ads[forecast]==2.9.0'\n```\n\n### installing extras libraries\n\nto work with gradient boosting models, install the `boosted` module. this module includes xgboost and lightgbm model classes.\n\n```bash\n  python3 -m pip install 'oracle-ads[boosted]'\n```\n\nfor big data use cases using oracle big data service (bds), install the `bds` module. it includes the following libraries, `ibis-framework[impala]`, `hdfs[kerberos]` and `sqlalchemy`.\n\n```bash\n  python3 -m pip install 'oracle-ads[bds]'\n```\n\nto work with a broad set of data formats (for example, excel, avro, etc.) install the `data` module. it includes the `fastavro`, `openpyxl`, `pandavro`, `asteval`, `datefinder`, `htmllistparse`, and `sqlalchemy` libraries.\n\n```bash\n  python3 -m pip install 'oracle-ads[data]'\n```\n\nto work with geospatial data install the `geo` module. it includes the `geopandas` and libraries from the `viz` module.\n\n```bash\n  python3 -m pip install 'oracle-ads[geo]'\n```\n\ninstall the `notebook` module to use ads within a oci data science service [notebook session](https://docs.oracle.com/en-us/iaas/data-science/using/manage-notebook-sessions.htm). this module installs `ipywidgets` and `ipython` libraries.\n\n```bash\n  python3 -m pip install 'oracle-ads[notebook]'\n```\n\nto work with onnx-compatible run times and libraries designed to maximize performance and model portability, install the `onnx` module. it includes the following libraries, `onnx`, `onnxruntime`, `onnxmltools`, `skl2onnx`, `xgboost`, `lightgbm` and libraries from the `viz` module.\n\n```bash\n  python3 -m pip install 'oracle-ads[onnx]'\n```\n\nfor infrastructure tasks, install the `opctl` module. it includes the following libraries, `oci-cli`, `docker`, `conda-pack`, `nbconvert`, `nbformat`, and `inflection`.\n\n```bash\n  python3 -m pip install 'oracle-ads[opctl]'\n```\n\nfor hyperparameter optimization tasks install the `optuna` module. it includes the `optuna` and libraries from the `viz` module.\n\n```bash\n  python3 -m pip install 'oracle-ads[optuna]'\n```\n\ninstall the `tensorflow` module to include `tensorflow` and libraries from the `viz` module.\n\n```bash\n  python3 -m pip install 'oracle-ads[tensorflow]'\n```\n\nfor text related tasks, install the `text` module. this will include the `wordcloud`, `spacy` libraries.\n\n```bash\n  python3 -m pip install 'oracle-ads[text]'\n```\n\ninstall the `torch` module to include `pytorch` and libraries from the `viz` module.\n\n```bash\n  python3 -m pip install 'oracle-ads[torch]'\n```\n\ninstall the `viz` module to include libraries for visualization tasks. some of the key packages are `bokeh`, `folium`, `seaborn` and related packages.\n\n```bash\n  python3 -m pip install 'oracle-ads[viz]'\n```\n\nsee `pyproject.toml` file `[project.optional-dependencies]` section for full list of modules and its list of extra libraries.\n\n**note**\n\nmultiple extra dependencies can be installed together. for example:\n\n```bash\n  python3 -m pip install  'oracle-ads[notebook,viz,text]'\n```\n\n## documentation\n\n  - [oracle accelerated data science sdk (ads) documentation](https://accelerated-data-science.readthedocs.io/en/latest/index.html)\n  - [oci data science and ai services examples](https://github.com/oracle/oci-data-science-ai-samples)\n  - [oracle ai & data science blog](https://blogs.oracle.com/ai-and-datascience/)\n  - [oci documentation](https://docs.oracle.com/en-us/iaas/data-science/using/data-science.htm)\n\n## examples\n\n### load data from object storage\n\n```python\n  import ads\n  from ads.common.auth import default_signer\n  import oci\n  import pandas as pd\n\n  ads.set_auth(auth=\"api_key\", oci_config_location=oci.config.default_location, profile=\"default\")\n  bucket_name = <bucket_name>\n  key = <key>\n  namespace = <namespace>\n  df = pd.read_csv(f\"oci://{bucket_name}@{namespace}/{key}\", storage_options=default_signer())\n```\n\n### load data from adb\n\nthis example uses sql injection safe binding variables.\n\n```python\n  import ads\n  import pandas as pd\n\n  connection_parameters = {\n      \"user_name\": \"<user_name>\",\n      \"password\": \"<password>\",\n      \"service_name\": \"<tns_name>\",\n      \"wallet_location\": \"<file_path>\",\n  }\n\n  df = pd.dataframe.ads.read_sql(\n      \"\"\"\n      select *\n      from sh.sales\n      where rownum <= :max_rows\n      \"\"\",\n      bind_variables={ max_rows : 100 },\n      connection_parameters=connection_parameters,\n  )\n```\n\n## contributing\n\nthis project welcomes contributions from the community. before submitting a pull request, please [review our contribution guide](./contributing.md)\n\nfind getting started instructions for developers in [readme-development.md](https://github.com/oracle/accelerated-data-science/blob/main/readme-development.md)\n\n## security\n\nconsult the security guide [security.md](https://github.com/oracle/accelerated-data-science/blob/main/security.md) for our responsible security vulnerability disclosure process.\n\n## license\n\ncopyright (c) 2020, 2022 oracle and/or its affiliates. licensed under the [universal permissive license v1.0](https://oss.oracle.com/licenses/upl/)\n\n",
  "docs_url": null,
  "keywords": "oracle cloud infrastructure,oci,machine learning,ml,artificial intelligence,ai,data science,cloud,oracle",
  "license": "",
  "name": "oracle-ads",
  "package_url": "https://pypi.org/project/oracle-ads/",
  "project_url": "https://pypi.org/project/oracle-ads/",
  "project_urls": {
    "Documentation": "https://accelerated-data-science.readthedocs.io/en/latest/index.html",
    "Github": "https://github.com/oracle/accelerated-data-science"
  },
  "release_url": "https://pypi.org/project/oracle-ads/2.9.1/",
  "requires_dist": [
    "PyYAML>=6",
    "asteval>=0.9.25",
    "cerberus>=1.3.4",
    "cloudpickle>=1.6.0",
    "fsspec>=0.8.7,<2023.9.1",
    "gitpython>=3.1.2",
    "jinja2>=2.11.2",
    "matplotlib>=3.1.3",
    "numpy>=1.19.2",
    "oci>=2.113.0",
    "ocifs>=1.1.3",
    "pandas>1.2.1,<2.1",
    "psutil>=5.7.2",
    "python_jsonschema_objects>=0.3.13",
    "requests",
    "scikit-learn>=1.0",
    "tabulate>=0.8.9",
    "tqdm>=4.59.0",
    "hdfs[kerberos] ; extra == \"bds\"",
    "ibis-framework[impala] ; extra == \"bds\"",
    "sqlalchemy ; extra == \"bds\"",
    "lightgbm<4.0.0 ; extra == \"boosted\"",
    "xgboost ; extra == \"boosted\"",
    "datefinder>=0.7.1 ; extra == \"data\"",
    "fastavro>=0.24.2 ; extra == \"data\"",
    "htmllistparse>=0.6.0 ; extra == \"data\"",
    "openpyxl>=3.0.7 ; extra == \"data\"",
    "oracledb>=1.0 ; extra == \"data\"",
    "pandavro>=1.6.0 ; extra == \"data\"",
    "sqlalchemy>=1.4.1, <=1.4.46 ; extra == \"data\"",
    "conda-pack ; extra == \"forecast\"",
    "inflection ; extra == \"forecast\"",
    "nbconvert ; extra == \"forecast\"",
    "nbformat ; extra == \"forecast\"",
    "oci-cli ; extra == \"forecast\"",
    "py-cpuinfo ; extra == \"forecast\"",
    "rich ; extra == \"forecast\"",
    "autots[additional] ; extra == \"forecast\"",
    "datapane ; extra == \"forecast\"",
    "holidays==0.21.13 ; extra == \"forecast\"",
    "neuralprophet ; extra == \"forecast\"",
    "numpy ; extra == \"forecast\"",
    "oci-cli ; extra == \"forecast\"",
    "optuna==2.9.0 ; extra == \"forecast\"",
    "oracle-ads ; extra == \"forecast\"",
    "oracle-automlx[forecasting]==23.2.3 ; extra == \"forecast\"",
    "pmdarima ; extra == \"forecast\"",
    "prophet ; extra == \"forecast\"",
    "shap ; extra == \"forecast\"",
    "sktime ; extra == \"forecast\"",
    "statsmodels ; extra == \"forecast\"",
    "plotly ; extra == \"forecast\"",
    "geopandas ; extra == \"geo\"",
    "oracle_ads[viz] ; extra == \"geo\"",
    "transformers ; extra == \"huggingface\"",
    "langchain>=0.0.295 ; extra == \"llm\"",
    "evaluate>=0.4.0 ; extra == \"llm\"",
    "ipython>=7.23.1, <8.0 ; extra == \"notebook\"",
    "ipywidgets~=7.6.3 ; extra == \"notebook\"",
    "lightgbm<4.0.0 ; extra == \"onnx\"",
    "onnx>=1.12.0 ; extra == \"onnx\"",
    "onnxmltools>=1.10.0 ; extra == \"onnx\"",
    "onnxruntime>=1.10.0,<1.16 ; extra == \"onnx\"",
    "oracle_ads[viz] ; extra == \"onnx\"",
    "protobuf<=3.20 ; extra == \"onnx\"",
    "skl2onnx>=1.10.4 ; extra == \"onnx\"",
    "tf2onnx ; extra == \"onnx\"",
    "xgboost<=1.7 ; extra == \"onnx\"",
    "conda-pack ; extra == \"opctl\"",
    "docker ; extra == \"opctl\"",
    "inflection ; extra == \"opctl\"",
    "nbconvert ; extra == \"opctl\"",
    "nbformat ; extra == \"opctl\"",
    "oci-cli ; extra == \"opctl\"",
    "py-cpuinfo ; extra == \"opctl\"",
    "rich ; extra == \"opctl\"",
    "optuna==2.9.0 ; extra == \"optuna\"",
    "oracle_ads[viz] ; extra == \"optuna\"",
    "aiohttp ; extra == \"pii\"",
    "datapane ; extra == \"pii\"",
    "gender_guesser ; extra == \"pii\"",
    "nameparser ; extra == \"pii\"",
    "oracle_ads[opctl] ; extra == \"pii\"",
    "plotly ; extra == \"pii\"",
    "scrubadub==2.0.1 ; extra == \"pii\"",
    "scrubadub_spacy ; extra == \"pii\"",
    "spacy-transformers==1.2.5 ; extra == \"pii\"",
    "spacy==3.6.1 ; extra == \"pii\"",
    "pyspark>=3.0.0 ; extra == \"spark\"",
    "oracle_ads[viz] ; extra == \"tensorflow\"",
    "tensorflow ; extra == \"tensorflow\"",
    "spacy ; extra == \"text\"",
    "wordcloud>=1.8.1 ; extra == \"text\"",
    "oracle_ads[viz] ; extra == \"torch\"",
    "torch ; extra == \"torch\"",
    "torchvision ; extra == \"torch\"",
    "bokeh>=2.3.0, <=2.4.3 ; extra == \"viz\"",
    "folium>=0.12.1 ; extra == \"viz\"",
    "graphviz<0.17 ; extra == \"viz\"",
    "scipy>=1.5.4 ; extra == \"viz\"",
    "seaborn>=0.11.0 ; extra == \"viz\""
  ],
  "requires_python": ">=3.8",
  "summary": "oracle accelerated data science sdk",
  "version": "2.9.1",
  "releases": [],
  "developers": [
    "oracle_data_science"
  ],
  "kwds": "oracle_ads oracle adsevaluator pythonic oci",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_oracle_ads",
  "homepage": "",
  "release_count": 49,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_asteval",
    "pypi_autots",
    "pypi_bokeh",
    "pypi_cerberus",
    "pypi_cloudpickle",
    "pypi_conda_pack",
    "pypi_datapane",
    "pypi_datefinder",
    "pypi_docker",
    "pypi_evaluate",
    "pypi_fastavro",
    "pypi_folium",
    "pypi_fsspec",
    "pypi_gender_guesser",
    "pypi_geopandas",
    "pypi_gitpython",
    "pypi_graphviz",
    "pypi_hdfs",
    "pypi_holidays",
    "pypi_htmllistparse",
    "pypi_ibis_framework",
    "pypi_inflection",
    "pypi_ipython",
    "pypi_ipywidgets",
    "pypi_jinja2",
    "pypi_langchain",
    "pypi_lightgbm",
    "pypi_matplotlib",
    "pypi_nameparser",
    "pypi_nbconvert",
    "pypi_nbformat",
    "pypi_neuralprophet",
    "pypi_numpy",
    "pypi_oci",
    "pypi_oci_cli",
    "pypi_ocifs",
    "pypi_onnx",
    "pypi_onnxmltools",
    "pypi_onnxruntime",
    "pypi_openpyxl",
    "pypi_optuna",
    "pypi_oracle_ads",
    "pypi_oracle_automlx",
    "pypi_oracle_ads",
    "pypi_oracledb",
    "pypi_pandas",
    "pypi_pandavro",
    "pypi_plotly",
    "pypi_pmdarima",
    "pypi_prophet",
    "pypi_protobuf",
    "pypi_psutil",
    "pypi_py_cpuinfo",
    "pypi_pyspark",
    "pypi_python_jsonschema_objects",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_rich",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_scrubadub",
    "pypi_scrubadub_spacy",
    "pypi_seaborn",
    "pypi_shap",
    "pypi_skl2onnx",
    "pypi_sktime",
    "pypi_spacy",
    "pypi_spacy_transformers",
    "pypi_sqlalchemy",
    "pypi_statsmodels",
    "pypi_tabulate",
    "pypi_tensorflow",
    "pypi_tf2onnx",
    "pypi_torch",
    "pypi_torchvision",
    "pypi_tqdm",
    "pypi_transformers",
    "pypi_wordcloud",
    "pypi_xgboost"
  ]
}
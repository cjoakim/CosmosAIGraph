{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: system administrators",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing"
  ],
  "description": "stestr\n======\n\n.. image:: https://github.com/mtreinish/stestr/actions/workflows/main.yml/badge.svg?branch=main\n    :target: https://github.com/mtreinish/stestr/actions/workflows/main.yml\n    :alt: ci testing status\n\n.. image:: https://img.shields.io/codecov/c/gh/mtreinish/stestr?style=flat-square\n    :target: https://codecov.io/gh/mtreinish/stestr\n    :alt: code coverage\n\n.. image:: https://img.shields.io/pypi/v/stestr.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/stestr\n    :alt: latest version\n\n.. image:: https://img.shields.io/github/license/mtreinish/stestr.svg?style=popout-square\n    :target: https://opensource.org/licenses/apache-2.0\n    :alt: license:\n\n* read this in other languages: `english`_, `\u65e5\u672c\u8a9e`_\n* you can see the full rendered docs at: http://stestr.readthedocs.io/en/latest/\n* the code of the project is on github: https://github.com/mtreinish/stestr\n\n.. _english: https://github.com/mtreinish/stestr/blob/main/readme.rst\n.. _\u65e5\u672c\u8a9e: https://github.com/mtreinish/stestr/blob/main/readme_ja.rst\n\n.. note:: stestr v2.x.x release series will be the last series that supports\n    python 2. support for python 2.7 was dropped in stestr release 3.0.0.\n\noverview\n--------\n\nstestr is parallel python test runner designed to execute `unittest`_ test\nsuites using multiple processes to split up execution of a test suite. it also\nwill store a history of all test runs to help in debugging failures and\noptimizing the scheduler to improve speed. to accomplish this goal it uses the\n`subunit`_ protocol to facilitate streaming and storing results from multiple\nworkers.\n\n.. _unittest: https://docs.python.org/3/library/unittest.html\n.. _subunit: https://github.com/testing-cabal/subunit\n\nstestr originally started as a fork of the `testrepository`_ project. but,\ninstead of being an interface for any test runner that used subunit, like\ntestrepository, stestr concentrated on being a dedicated test runner for python\nprojects. while stestr was originally forked from testrepository it is not\nbackwards compatible with testrepository. at a high level the basic concepts of\noperation are shared between the two projects but the actual usage is not\nexactly the same.\n\n.. _testrepository: https://testrepository.readthedocs.org/en/latest\n\n\ninstalling stestr\n-----------------\n\nstestr is available via pypi, so all you need to do is run::\n\n  pip install -u stestr\n\nto get stestr on your system. if you need to use a development version of\nstestr you can clone the repo and install it locally with::\n\n  git clone https://github.com/mtreinish/stestr.git && pip install -e stestr\n\nwhich will install stestr in your python environment in editable mode for local\ndevelopment\n\nusing stestr\n------------\n\nafter you install stestr to use it to run tests is pretty straightforward. the\nfirst thing you'll want to do is create a ``.stestr.conf`` file for your\nproject. this file is used to tell stestr where to find tests and basic\ninformation about how tests are run. a basic minimal example of the\ncontents of this is::\n\n  [default]\n  test_path=./project_source_dir/tests\n\nwhich just tells stestr the relative path for the directory to use for\ntest discovery. this is the same as ``--start-directory`` in the standard\n`unittest discovery`_.\n\n.. _unittest discovery: https://docs.python.org/3/library/unittest.html#test-discovery\n\nalternatively, if you're using stestr with\n`tox <https://tox.readthedocs.io/en/latest/>`__ you can integrate your stestr\nconfig in a ``stestr`` section in the tox.ini file, for example::\n\n  [stestr]\n  test_path=./project_source_dir/tests\n\nafter stestr is configured you should be all set to start using stestr\nto run tests. to run tests just use::\n\n    stestr run\n\nit will first create a results repository at ``.stestr/`` in the current\nworking directory and then execute all the tests found by test discovery. if\nyou're just running a single test (or module) and want to avoid the overhead of\ndoing test discovery you can use the ``--no-discover``/``-n`` option to specify\nthat test.\n\nfor all the details on these commands and more thorough explanation of options\nsee the stestr manual: https://stestr.readthedocs.io/en/latest/manual.html\n\nmigrating from testrepository\n-----------------------------\n\nif you have a project that is already using testrepository stestr's source repo\ncontains a helper script for migrating your repo to use stestr. this script\njust creates a ``.stestr.conf`` file from a ``.testr.conf`` file.\n(assuming it uses a standard subunit.run test command format) to run\nthis from your project repo just call::\n\n    $stestr_source_dir/tools/testr_to_stestr.py\n\nand you'll have a ``.stestr.conf`` created.\n\nbuilding a manpage\n------------------\n\nthe stestr manual has been formatted so that it renders well as html and as a\nmanpage. the html output and is autogenerated and published to:\nhttps://stestr.readthedocs.io/en/latest/manual.html but the manpage has to be\ngenerated by hand. to do this you have to manually run sphinx-build with the\nmanpage builder. this has been automated in a small script that should be run\nfrom the root of the stestr repository::\n\n  tools/build_manpage.sh\n\nwhich will generate the troff file in doc/build/man/stestr.1 which is ready to\nbe packaged and or put in your system's man pages.\n\ncontributing\n------------\n\nto browse the latest code, see: https://github.com/mtreinish/stestr\nto clone the latest code, use: ``git clone https://github.com/mtreinish/stestr.git``\n\nguidelines for contribution are documented at: http://stestr.readthedocs.io/en/latest/developer_guidelines.html\n\nuse `github pull requests`_ to submit patches. before you submit a pull request\nensure that all the automated testing will pass by running ``tox`` locally.\nthis will run the test suite and also the automated style rule checks just as\nthey will in ci. if ci fails on your change it will not be able to merge.\n\n.. _github pull requests: https://help.github.com/articles/about-pull-requests/\n\ncommunity\n---------\n\nbesides github interactions there is also a stestr irc channel:\n\n#stestr on `oftc <https://oftc.net/>`__\n\nfeel free to join to ask questions, or just discuss stestr.\n\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "stestr",
  "package_url": "https://pypi.org/project/stestr/",
  "project_url": "https://pypi.org/project/stestr/",
  "project_urls": {
    "Bug Tracker": "https://github.com/mtreinish/stestr/issues",
    "Documentation": "https://stestr.readthedocs.io",
    "Homepage": "http://stestr.readthedocs.io/en/latest/",
    "Source Code": "https://github.com/mtreinish/stestr"
  },
  "release_url": "https://pypi.org/project/stestr/4.1.0/",
  "requires_dist": [
    "pbr !=2.1.0,!=4.0.0,!=4.0.1,!=4.0.2,!=4.0.3,>=2.0.0",
    "cliff >=2.8.0",
    "python-subunit >=1.4.0",
    "fixtures >=3.0.0",
    "testtools >=2.2.0",
    "PyYAML >=3.10.0",
    "voluptuous >=0.8.9",
    "tomlkit >=0.11.6",
    "extras >=1.0.0",
    "subunit2sql >=1.8.0 ; extra == 'sql'",
    "hacking <3.2.0,>=3.1.0 ; extra == 'test'",
    "sphinx >2.1.0 ; extra == 'test'",
    "coverage >=4.0 ; extra == 'test'",
    "ddt >=1.0.1 ; extra == 'test'",
    "iso8601 ; extra == 'test'",
    "doc8 >=0.8.0 ; extra == 'test'",
    "black ~=22.0 ; extra == 'test'"
  ],
  "requires_python": ">=3.6",
  "summary": "a parallel python test runner built around subunit",
  "version": "4.1.0",
  "releases": [],
  "developers": [
    "matthew_treinish",
    "mtreinish@kortar.org"
  ],
  "kwds": "stestr testr_to_stestr stestr_source_dir badge patches",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_stestr",
  "homepage": "http://stestr.readthedocs.io/en/latest/",
  "release_count": 26,
  "dependency_ids": [
    "pypi_black",
    "pypi_cliff",
    "pypi_coverage",
    "pypi_ddt",
    "pypi_doc8",
    "pypi_extras",
    "pypi_fixtures",
    "pypi_hacking",
    "pypi_iso8601",
    "pypi_pbr",
    "pypi_python_subunit",
    "pypi_pyyaml",
    "pypi_sphinx",
    "pypi_subunit2sql",
    "pypi_testtools",
    "pypi_tomlkit",
    "pypi_voluptuous"
  ]
}
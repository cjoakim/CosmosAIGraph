{
  "classifiers": [],
  "description": "## aiohttp-socks\n\n[![ci](https://github.com/romis2012/aiohttp-socks/actions/workflows/ci.yml/badge.svg)](https://github.com/romis2012/aiohttp-socks/actions/workflows/ci.yml)\n[![coverage status](https://codecov.io/gh/romis2012/aiohttp-socks/branch/master/graph/badge.svg)](https://codecov.io/gh/romis2012/aiohttp-socks)\n[![pypi version](https://badge.fury.io/py/aiohttp-socks.svg)](https://pypi.python.org/pypi/aiohttp-socks)\n<!--\n[![downloads](https://pepy.tech/badge/aiohttp-socks/month)](https://pepy.tech/project/aiohttp-socks)\n-->\nthe `aiohttp-socks` package provides a proxy connector for [aiohttp](https://github.com/aio-libs/aiohttp). \nsupports socks4(a), socks5(h), http (tunneling) as well as proxy chains.\nit uses [python-socks](https://github.com/romis2012/python-socks) for core proxy functionality.\n\n\n## requirements\n- python >= 3.6\n- aiohttp >= 2.3.2\n- python-socks[asyncio] >= 1.0.1\n\n## installation\n```\npip install aiohttp_socks\n```\n\n## usage\n\n#### aiohttp usage:\n```python\nimport aiohttp\nfrom aiohttp_socks import proxytype, proxyconnector, chainproxyconnector\n\n\nasync def fetch(url):\n    connector = proxyconnector.from_url('socks5://user:password@127.0.0.1:1080')\n    \n    ### or use proxyconnector constructor\n    # connector = proxyconnector(\n    #     proxy_type=proxytype.socks5,\n    #     host='127.0.0.1',\n    #     port=1080,\n    #     username='user',\n    #     password='password',\n    #     rdns=true\n    # )\n    \n    ### proxy chaining (since ver 0.3.3)\n    # connector = chainproxyconnector.from_urls([\n    #     'socks5://user:password@127.0.0.1:1080',\n    #     'socks4://127.0.0.1:1081',\n    #     'http://user:password@127.0.0.1:3128',\n    # ])\n    async with aiohttp.clientsession(connector=connector) as session:\n        async with session.get(url) as response:\n            return await response.text()\n```\n\n#### aiohttp-socks also provides `open_connection` and `create_connection` functions:\n\n```python\nfrom aiohttp_socks import open_connection\n\nasync def fetch():\n    reader, writer = await open_connection(\n        proxy_url='socks5://user:password@127.0.0.1:1080',\n        host='check-host.net',\n        port=80\n    )\n    request = (b\"get /ip http/1.1\\r\\n\"\n               b\"host: check-host.net\\r\\n\"\n               b\"connection: close\\r\\n\\r\\n\")\n\n    writer.write(request)\n    return await reader.read(-1)\n```\n\n## why yet another socks connector for aiohttp\n\nunlike [aiosocksy](https://github.com/romis2012/aiosocksy), aiohttp_socks has only single point of integration with aiohttp. \nthis makes it easier to maintain compatibility with new aiohttp versions.\n\n\n\n\n",
  "docs_url": null,
  "keywords": "asyncio aiohttp socks socks5 socks4 http proxy",
  "license": "apache 2",
  "name": "aiohttp-socks",
  "package_url": "https://pypi.org/project/aiohttp-socks/",
  "project_url": "https://pypi.org/project/aiohttp-socks/",
  "project_urls": {
    "Homepage": "https://github.com/romis2012/aiohttp-socks"
  },
  "release_url": "https://pypi.org/project/aiohttp-socks/0.8.4/",
  "requires_dist": [
    "aiohttp (>=2.3.2)",
    "python-socks[asyncio] (<3.0.0,>=2.4.3)"
  ],
  "requires_python": "",
  "summary": "proxy connector for aiohttp",
  "version": "0.8.4",
  "releases": [],
  "developers": [
    "roman_snegirev",
    "snegiryev@gmail.com"
  ],
  "kwds": "aiohttp_socks socks5 socks4 socks aiohttp",
  "license_kwds": "apache 2",
  "libtype": "pypi",
  "id": "pypi_aiohttp_socks",
  "homepage": "https://github.com/romis2012/aiohttp-socks",
  "release_count": 40,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_python_socks"
  ]
}
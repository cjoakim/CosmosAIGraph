{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "topic :: software development :: libraries :: python modules",
    "topic :: text processing :: linguistic"
  ],
  "description": "correctly generate plurals, singular nouns, ordinals, indefinite articles; convert numbers to words\n.. image:: https://img.shields.io/pypi/v/inflect.svg\n   :target: https://pypi.org/project/inflect\n\n.. image:: https://img.shields.io/pypi/pyversions/inflect.svg\n\n.. image:: https://github.com/jaraco/inflect/workflows/tests/badge.svg\n   :target: https://github.com/jaraco/inflect/actions?query=workflow%3a%22tests%22\n   :alt: tests\n\n.. image:: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json\n    :target: https://github.com/astral-sh/ruff\n    :alt: ruff\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: code style: black\n\n.. image:: https://readthedocs.org/projects/inflect/badge/?version=latest\n   :target: https://inflect.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://img.shields.io/badge/skeleton-2023-informational\n   :target: https://blog.jaraco.com/skeleton\n\n.. image:: https://tidelift.com/badges/package/pypi/inflect\n   :target: https://tidelift.com/subscription/pkg/pypi-inflect?utm_source=pypi-inflect&utm_medium=readme\n\nname\n====\n\ninflect.py - correctly generate plurals, singular nouns, ordinals, indefinite articles; convert numbers to words.\n\nsynopsis\n========\n\n.. code-block:: python\n\n    import inflect\n\n    p = inflect.engine()\n\n    # methods:\n\n    # plural plural_noun plural_verb plural_adj singular_noun no num\n    # compare compare_nouns compare_nouns compare_adjs\n    # a an\n    # present_participle\n    # ordinal number_to_words\n    # join\n    # inflect classical gender\n    # defnoun defverb defadj defa defan\n\n\n    # unconditionally form the plural\n\n    print(\"the plural of \", word, \" is \", p.plural(word))\n\n\n    # conditionally form the plural\n\n    print(\"i saw\", cat_count, p.plural(\"cat\", cat_count))\n\n\n    # form plurals for specific parts of speech\n\n    print(\n        p.plural_noun(\"i\", n1),\n        p.plural_verb(\"saw\", n1),\n        p.plural_adj(\"my\", n2),\n        p.plural_noun(\"saw\", n2),\n    )\n\n\n    # form the singular of plural nouns\n\n    print(\"the singular of \", word, \" is \", p.singular_noun(word))\n\n    # select the gender of singular pronouns\n\n    print(p.singular_noun(\"they\"))  # 'it'\n    p.gender(\"feminine\")\n    print(p.singular_noun(\"they\"))  # 'she'\n\n\n    # deal with \"0/1/n\" -> \"no/1/n\" translation:\n\n    print(\"there \", p.plural_verb(\"was\", errors), p.no(\" error\", errors))\n\n\n    # use default counts:\n\n    print(\n        p.num(n1, \"\"),\n        p.plural(\"i\"),\n        p.plural_verb(\" saw\"),\n        p.num(n2),\n        p.plural_noun(\" saw\"),\n    )\n    print(\"there \", p.num(errors, \"\"), p.plural_verb(\"was\"), p.no(\" error\"))\n\n\n    # compare two words \"number-insensitively\":\n\n    if p.compare(word1, word2):\n        print(\"same\")\n    if p.compare_nouns(word1, word2):\n        print(\"same noun\")\n    if p.compare_verbs(word1, word2):\n        print(\"same verb\")\n    if p.compare_adjs(word1, word2):\n        print(\"same adj.\")\n\n\n    # add correct \"a\" or \"an\" for a given word:\n\n    print(\"did you want \", p.a(thing), \" or \", p.an(idea))\n\n\n    # convert numerals into ordinals (i.e. 1->1st, 2->2nd, 3->3rd, etc.)\n\n    print(\"it was\", p.ordinal(position), \" from the left\\n\")\n\n    # convert numerals to words (i.e. 1->\"one\", 101->\"one hundred and one\", etc.)\n    # returns a single string...\n\n    words = p.number_to_words(1234)\n    # \"one thousand, two hundred and thirty-four\"\n    words = p.number_to_words(p.ordinal(1234))\n    # \"one thousand, two hundred and thirty-fourth\"\n\n\n    # get back a list of strings, one for each \"chunk\"...\n\n    words = p.number_to_words(1234, wantlist=true)\n    # (\"one thousand\",\"two hundred and thirty-four\")\n\n\n    # optional parameters change translation:\n\n    words = p.number_to_words(12345, group=1)\n    # \"one, two, three, four, five\"\n\n    words = p.number_to_words(12345, group=2)\n    # \"twelve, thirty-four, five\"\n\n    words = p.number_to_words(12345, group=3)\n    # \"one twenty-three, forty-five\"\n\n    words = p.number_to_words(1234, andword=\"\")\n    # \"one thousand, two hundred thirty-four\"\n\n    words = p.number_to_words(1234, andword=\", plus\")\n    # \"one thousand, two hundred, plus thirty-four\"\n    # todo: i get no comma before plus: check perl\n\n    words = p.number_to_words(555_1202, group=1, zero=\"oh\")\n    # \"five, five, five, one, two, oh, two\"\n\n    words = p.number_to_words(555_1202, group=1, one=\"unity\")\n    # \"five, five, five, unity, two, oh, two\"\n\n    words = p.number_to_words(123.456, group=1, decimal=\"mark\")\n    # \"one two three mark four five six\"\n    # todo: docbug: perl gives commas here as do i\n\n    # literal style only names numbers less than a certain threshold...\n\n    words = p.number_to_words(9, threshold=10)  # \"nine\"\n    words = p.number_to_words(10, threshold=10)  # \"ten\"\n    words = p.number_to_words(11, threshold=10)  # \"11\"\n    words = p.number_to_words(1000, threshold=10)  # \"1,000\"\n\n    # join words into a list:\n\n    mylist = p.join((\"apple\", \"banana\", \"carrot\"))\n    # \"apple, banana, and carrot\"\n\n    mylist = p.join((\"apple\", \"banana\"))\n    # \"apple and banana\"\n\n    mylist = p.join((\"apple\", \"banana\", \"carrot\"), final_sep=\"\")\n    # \"apple, banana and carrot\"\n\n\n    # require \"classical\" plurals (eg: \"focus\"->\"foci\", \"cherub\"->\"cherubim\")\n\n    p.classical()  # use all classical plurals\n\n    p.classical(all=true)  # use all classical plurals\n    p.classical(all=false)  # switch off classical mode\n\n    p.classical(zero=true)  #  \"no error\" instead of \"no errors\"\n    p.classical(zero=false)  #  \"no errors\" instead of \"no error\"\n\n    p.classical(herd=true)  #  \"2 buffalo\" instead of \"2 buffalos\"\n    p.classical(herd=false)  #  \"2 buffalos\" instead of \"2 buffalo\"\n\n    p.classical(persons=true)  # \"2 chairpersons\" instead of \"2 chairpeople\"\n    p.classical(persons=false)  # \"2 chairpeople\" instead of \"2 chairpersons\"\n\n    p.classical(ancient=true)  # \"2 formulae\" instead of \"2 formulas\"\n    p.classical(ancient=false)  # \"2 formulas\" instead of \"2 formulae\"\n\n\n    # interpolate \"plural()\", \"plural_noun()\", \"plural_verb()\", \"plural_adj()\", \"singular_noun()\",\n    # a()\", \"an()\", \"num()\" and \"ordinal()\" within strings:\n\n    print(p.inflect(\"the plural of {0} is plural('{0}')\".format(word)))\n    print(p.inflect(\"the singular of {0} is singular_noun('{0}')\".format(word)))\n    print(p.inflect(\"i saw {0} plural('cat',{0})\".format(cat_count)))\n    print(\n        p.inflect(\n            \"plural('i',{0}) \"\n            \"plural_verb('saw',{0}) \"\n            \"plural('a',{1}) \"\n            \"plural_noun('saw',{1})\".format(n1, n2)\n        )\n    )\n    print(\n        p.inflect(\n            \"num({0}, false)plural('i') \"\n            \"plural_verb('saw') \"\n            \"num({1}, false)plural('a') \"\n            \"plural_noun('saw')\".format(n1, n2)\n        )\n    )\n    print(p.inflect(\"i saw num({0}) plural('cat')\\nnum()\".format(cat_count)))\n    print(p.inflect(\"there plural_verb('was',{0}) no('error',{0})\".format(errors)))\n    print(p.inflect(\"there num({0}, false)plural_verb('was') no('error')\".format(errors)))\n    print(p.inflect(\"did you want a('{0}') or an('{1}')\".format(thing, idea)))\n    print(p.inflect(\"it was ordinal('{0}') from the left\".format(position)))\n\n\n    # add user-defined inflections (overriding inbuilt rules):\n\n    p.defnoun(\"vax\", \"vaxen\")  # singular => plural\n\n    p.defverb(\n        \"will\",  # 1st person singular\n        \"shall\",  # 1st person plural\n        \"will\",  # 2nd person singular\n        \"will\",  # 2nd person plural\n        \"will\",  # 3rd person singular\n        \"will\",  # 3rd person plural\n    )\n\n    p.defadj(\"hir\", \"their\")  # singular => plural\n\n    p.defa(\"h\")  # \"ay halways sez 'haitch'!\"\n\n    p.defan(\"horrendous.*\")  # \"an horrendous affectation\"\n\n\ndescription\n===========\n\nthe methods of the class ``engine`` in module ``inflect.py`` provide plural\ninflections, singular noun inflections, \"a\"/\"an\" selection for english words,\nand manipulation of numbers as words.\n\nplural forms of all nouns, most verbs, and some adjectives are\nprovided. where appropriate, \"classical\" variants (for example: \"brother\" ->\n\"brethren\", \"dogma\" -> \"dogmata\", etc.) are also provided.\n\nsingle forms of nouns are also provided. the gender of singular pronouns\ncan be chosen (for example \"they\" -> \"it\" or \"she\" or \"he\" or \"they\").\n\npronunciation-based \"a\"/\"an\" selection is provided for all english\nwords, and most initialisms.\n\nit is also possible to inflect numerals (1,2,3) to ordinals (1st, 2nd, 3rd)\nand to english words (\"one\", \"two\", \"three\").\n\nin generating these inflections, ``inflect.py`` follows the oxford\nenglish dictionary and the guidelines in fowler's modern english\nusage, preferring the former where the two disagree.\n\nthe module is built around standard british spelling, but is designed\nto cope with common american variants as well. slang, jargon, and\nother english dialects are *not* explicitly catered for.\n\nwhere two or more inflected forms exist for a single word (typically a\n\"classical\" form and a \"modern\" form), ``inflect.py`` prefers the\nmore common form (typically the \"modern\" one), unless \"classical\"\nprocessing has been specified\n(see `modern vs classical inflections`).\n\nforming plurals and singulars\n=============================\n\ninflecting plurals and singulars\n--------------------------------\n\nall of the ``plural...`` plural inflection methods take the word to be\ninflected as their first argument and return the corresponding inflection.\nnote that all such methods expect the *singular* form of the word. the\nresults of passing a plural form are undefined (and unlikely to be correct).\nsimilarly, the ``si...`` singular inflection method expects the *plural*\nform of the word.\n\nthe ``plural...`` methods also take an optional second argument,\nwhich indicates the grammatical \"number\" of the word (or of another word\nwith which the word being inflected must agree). if the \"number\" argument is\nsupplied and is not ``1`` (or ``\"one\"`` or ``\"a\"``, or some other adjective that\nimplies the singular), the plural form of the word is returned. if the\n\"number\" argument *does* indicate singularity, the (uninflected) word\nitself is returned. if the number argument is omitted, the plural form\nis returned unconditionally.\n\nthe ``si...`` method takes a second argument in a similar fashion. if it is\nsome form of the number ``1``, or is omitted, the singular form is returned.\notherwise the plural is returned unaltered.\n\n\nthe various methods of ``inflect.engine`` are:\n\n\n\n``plural_noun(word, count=none)``\n\n the method ``plural_noun()`` takes a *singular* english noun or\n pronoun and returns its plural. pronouns in the nominative (\"i\" ->\n \"we\") and accusative (\"me\" -> \"us\") cases are handled, as are\n possessive pronouns (\"mine\" -> \"ours\").\n\n\n``plural_verb(word, count=none)``\n\n the method ``plural_verb()`` takes the *singular* form of a\n conjugated verb (that is, one which is already in the correct \"person\"\n and \"mood\") and returns the corresponding plural conjugation.\n\n\n``plural_adj(word, count=none)``\n\n the method ``plural_adj()`` takes the *singular* form of\n certain types of adjectives and returns the corresponding plural form.\n adjectives that are correctly handled include: \"numerical\" adjectives\n (\"a\" -> \"some\"), demonstrative adjectives (\"this\" -> \"these\", \"that\" ->\n \"those\"), and possessives (\"my\" -> \"our\", \"cat's\" -> \"cats'\", \"child's\"\n -> \"childrens'\", etc.)\n\n\n``plural(word, count=none)``\n\n the method ``plural()`` takes a *singular* english noun,\n pronoun, verb, or adjective and returns its plural form. where a word\n has more than one inflection depending on its part of speech (for\n example, the noun \"thought\" inflects to \"thoughts\", the verb \"thought\"\n to \"thought\"), the (singular) noun sense is preferred to the (singular)\n verb sense.\n\n hence ``plural(\"knife\")`` will return \"knives\" (\"knife\" having been treated\n as a singular noun), whereas ``plural(\"knifes\")`` will return \"knife\"\n (\"knifes\" having been treated as a 3rd person singular verb).\n\n the inherent ambiguity of such cases suggests that,\n where the part of speech is known, ``plural_noun``, ``plural_verb``, and\n ``plural_adj`` should be used in preference to ``plural``.\n\n\n``singular_noun(word, count=none)``\n\n the method ``singular_noun()`` takes a *plural* english noun or\n pronoun and returns its singular. pronouns in the nominative (\"we\" ->\n \"i\") and accusative (\"us\" -> \"me\") cases are handled, as are\n possessive pronouns (\"ours\" -> \"mine\"). when third person\n singular pronouns are returned they take the neuter gender by default\n (\"they\" -> \"it\"), not (\"they\"-> \"she\") nor (\"they\" -> \"he\"). this can be\n changed with ``gender()``.\n\nnote that all these methods ignore any whitespace surrounding the\nword being inflected, but preserve that whitespace when the result is\nreturned. for example, ``plural(\" cat  \")`` returns \" cats  \".\n\n\n``gender(genderletter)``\n\n the third person plural pronoun takes the same form for the female, male and\n neuter (e.g. \"they\"). the singular however, depends upon gender (e.g. \"she\",\n \"he\", \"it\" and \"they\" -- \"they\" being the gender neutral form.) by default\n ``singular_noun`` returns the neuter form, however, the gender can be selected with\n the ``gender`` method. pass the first letter of the gender to\n ``gender`` to return the f(eminine), m(asculine), n(euter) or t(hey)\n form of the singular. e.g.\n gender('f') followed by singular_noun('themselves') returns 'herself'.\n\nnumbered plurals\n----------------\n\nthe ``plural...`` methods return only the inflected word, not the count that\nwas used to inflect it. thus, in order to produce \"i saw 3 ducks\", it\nis necessary to use:\n\n.. code-block:: python\n\n    print(\"i saw\", n, p.plural_noun(animal, n))\n\nsince the usual purpose of producing a plural is to make it agree with\na preceding count, inflect.py provides a method\n(``no(word, count)``) which, given a word and a(n optional) count, returns the\ncount followed by the correctly inflected word. hence the previous\nexample can be rewritten:\n\n.. code-block:: python\n\n    print(\"i saw \", p.no(animal, n))\n\nin addition, if the count is zero (or some other term which implies\nzero, such as ``\"zero\"``, ``\"nil\"``, etc.) the count is replaced by the\nword \"no\". hence, if ``n`` had the value zero, the previous example\nwould print (the somewhat more elegant)::\n\n    i saw no animals\n\nrather than::\n\n    i saw 0 animals\n\nnote that the name of the method is a pun: the method\nreturns either a number (a *no.*) or a ``\"no\"``, in front of the\ninflected word.\n\n\nreducing the number of counts required\n--------------------------------------\n\nin some contexts, the need to supply an explicit count to the various\n``plural...`` methods makes for tiresome repetition. for example:\n\n.. code-block:: python\n\n    print(\n        plural_adj(\"this\", errors),\n        plural_noun(\" error\", errors),\n        plural_verb(\" was\", errors),\n        \" fatal.\",\n    )\n\ninflect.py therefore provides a method\n(``num(count=none, show=none)``) which may be used to set a persistent \"default number\"\nvalue. if such a value is set, it is subsequently used whenever an\noptional second \"number\" argument is omitted. the default value thus set\ncan subsequently be removed by calling ``num()`` with no arguments.\nhence we could rewrite the previous example:\n\n.. code-block:: python\n\n    p.num(errors)\n    print(p.plural_adj(\"this\"), p.plural_noun(\" error\"), p.plural_verb(\" was\"), \"fatal.\")\n    p.num()\n\nnormally, ``num()`` returns its first argument, so that it may also\nbe \"inlined\" in contexts like:\n\n.. code-block:: python\n\n    print(p.num(errors), p.plural_noun(\" error\"), p.plural_verb(\" was\"), \" detected.\")\n    if severity > 1:\n        print(\n            p.plural_adj(\"this\"), p.plural_noun(\" error\"), p.plural_verb(\" was\"), \"fatal.\"\n        )\n\nhowever, in certain contexts (see `interpolating inflections in strings`)\nit is preferable that ``num()`` return an empty string. hence ``num()``\nprovides an optional second argument. if that argument is supplied (that is, if\nit is defined) and evaluates to false, ``num`` returns an empty string\ninstead of its first argument. for example:\n\n.. code-block:: python\n\n    print(p.num(errors, 0), p.no(\"error\"), p.plural_verb(\" was\"), \" detected.\")\n    if severity > 1:\n        print(\n            p.plural_adj(\"this\"), p.plural_noun(\" error\"), p.plural_verb(\" was\"), \"fatal.\"\n        )\n\n\n\nnumber-insensitive equality\n---------------------------\n\ninflect.py also provides a solution to the problem\nof comparing words of differing plurality through the methods\n``compare(word1, word2)``, ``compare_nouns(word1, word2)``,\n``compare_verbs(word1, word2)``, and ``compare_adjs(word1, word2)``.\neach  of these methods takes two strings, and  compares them\nusing the corresponding plural-inflection method (``plural()``, ``plural_noun()``,\n``plural_verb()``, and ``plural_adj()`` respectively).\n\nthe comparison returns true if:\n\n- the strings are equal, or\n- one string is equal to a plural form of the other, or\n- the strings are two different plural forms of the one word.\n\n\nhence all of the following return true:\n\n.. code-block:: python\n\n    p.compare(\"index\", \"index\")  # returns \"eq\"\n    p.compare(\"index\", \"indexes\")  # returns \"s:p\"\n    p.compare(\"index\", \"indices\")  # returns \"s:p\"\n    p.compare(\"indexes\", \"index\")  # returns \"p:s\"\n    p.compare(\"indices\", \"index\")  # returns \"p:s\"\n    p.compare(\"indices\", \"indexes\")  # returns \"p:p\"\n    p.compare(\"indexes\", \"indices\")  # returns \"p:p\"\n    p.compare(\"indices\", \"indices\")  # returns \"eq\"\n\nas indicated by the comments in the previous example, the actual value\nreturned by the various ``compare`` methods encodes which of the\nthree equality rules succeeded: \"eq\" is returned if the strings were\nidentical, \"s:p\" if the strings were singular and plural respectively,\n\"p:s\" for plural and singular, and \"p:p\" for two distinct plurals.\ninequality is indicated by returning an empty string.\n\nit should be noted that two distinct singular words which happen to take\nthe same plural form are *not* considered equal, nor are cases where\none (singular) word's plural is the other (plural) word's singular.\nhence all of the following return false:\n\n.. code-block:: python\n\n    p.compare(\"base\", \"basis\")  # although both -> \"bases\"\n    p.compare(\"syrinx\", \"syringe\")  # although both -> \"syringes\"\n    p.compare(\"she\", \"he\")  # although both -> \"they\"\n\n    p.compare(\"opus\", \"operas\")  # although \"opus\" -> \"opera\" -> \"operas\"\n    p.compare(\"taxi\", \"taxes\")  # although \"taxi\" -> \"taxis\" -> \"taxes\"\n\nnote too that, although the comparison is \"number-insensitive\" it is *not*\ncase-insensitive (that is, ``plural(\"time\",\"times\")`` returns false. to obtain\nboth number and case insensitivity, use the ``lower()`` method on both strings\n(that is, ``plural(\"time\".lower(), \"times\".lower())`` returns true).\n\nrelated functionality\n=====================\n\nshout out to these libraries that provide related functionality:\n\n* `wordset <https://jaracotext.readthedocs.io/en/latest/#jaraco.text.wordset>`_\n  parses identifiers like variable names into sets of words suitable for re-assembling\n  in another form.\n\n* `word2number <https://pypi.org/project/word2number/>`_ converts words to\n  a number.\n\n\nfor enterprise\n==============\n\navailable as part of the tidelift subscription.\n\nthis project and the maintainers of thousands of other packages are working with tidelift to deliver one enterprise subscription that covers all of the open source you use.\n\n`learn more <https://tidelift.com/subscription/pkg/pypi-project?utm_source=pypi-project&utm_medium=referral&utm_campaign=github>`_.\n\nsecurity contact\n================\n\nto report a security vulnerability, please use the\n`tidelift security contact <https://tidelift.com/security>`_.\ntidelift will coordinate the fix and disclosure.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "inflect",
  "package_url": "https://pypi.org/project/inflect/",
  "project_url": "https://pypi.org/project/inflect/",
  "project_urls": {
    "Homepage": "https://github.com/jaraco/inflect"
  },
  "release_url": "https://pypi.org/project/inflect/7.0.0/",
  "requires_dist": [
    "pydantic (>=1.9.1)",
    "typing-extensions",
    "sphinx (>=3.5) ; extra == 'docs'",
    "jaraco.packaging (>=9) ; extra == 'docs'",
    "rst.linker (>=1.9) ; extra == 'docs'",
    "furo ; extra == 'docs'",
    "sphinx-lint ; extra == 'docs'",
    "jaraco.tidelift (>=1.4) ; extra == 'docs'",
    "pytest (>=6) ; extra == 'testing'",
    "pytest-checkdocs (>=2.4) ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'",
    "pytest-enabler (>=2.2) ; extra == 'testing'",
    "pytest-ruff ; extra == 'testing'",
    "pygments ; extra == 'testing'",
    "pytest-black (>=0.3.7) ; (platform_python_implementation != \"PyPy\") and extra == 'testing'",
    "pytest-mypy (>=0.9.1) ; (platform_python_implementation != \"PyPy\") and extra == 'testing'"
  ],
  "requires_python": ">=3.8",
  "summary": "correctly generate plurals, singular nouns, ordinals, indefinite articles; convert numbers to words",
  "version": "7.0.0",
  "releases": [],
  "developers": [
    "jaraco@jaraco.com",
    "jason_r",
    "paul_dyson",
    "pwdyson@yahoo.com"
  ],
  "kwds": "badge badges ruff shields image",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_inflect",
  "homepage": "https://github.com/jaraco/inflect",
  "release_count": 49,
  "dependency_ids": [
    "pypi_furo",
    "pypi_jaraco.packaging",
    "pypi_jaraco.tidelift",
    "pypi_pydantic",
    "pypi_pygments",
    "pypi_pytest",
    "pypi_pytest_black",
    "pypi_pytest_checkdocs",
    "pypi_pytest_cov",
    "pypi_pytest_enabler",
    "pypi_pytest_mypy",
    "pypi_pytest_ruff",
    "pypi_rst.linker",
    "pypi_sphinx",
    "pypi_sphinx_lint",
    "pypi_typing_extensions"
  ],
  "documentation_summary": "The GitHub repository \"jaraco/inflect\" is a Python project that focuses on generating correct plurals, ordinals, indefinite articles, and converting numbers to words. It offers a comprehensive set of methods for handling various aspects of English language inflection, including dealing with singular and plural nouns, verbs, adjectives, and pronouns. The library supports classical inflections for words, gender selection for pronouns, and provides functionality for comparing words regardless of their plurality. It also allows for the conversion of numerals into words or ordinals and supports custom inflection rules. The project is licensed under the MIT license and is available for use and contribution on GitHub.",
  "embedding": [
    0.005951068829745054,
    0.027488762512803078,
    0.0036396391224116087,
    -0.0067824930883944035,
    0.028427133336663246,
    0.02678498439490795,
    -0.012405822053551674,
    -0.03540972247719765,
    -0.021237552165985107,
    -0.024411456659436226,
    0.025170432403683662,
    0.009556208737194538,
    -0.03325698524713516,
    0.03604450076818466,
    -0.0034222956746816635,
    0.013178598135709763,
    0.02475644461810589,
    -0.00034261768450960517,
    0.0026029457803815603,
    0.019250413402915,
    0.047774143517017365,
    0.022355318069458008,
    -0.02381807379424572,
    -0.009501010179519653,
    -0.03742446005344391,
    0.013558086939156055,
    0.009059423580765724,
    -0.007527670357376337,
    -0.00030294389580376446,
    0.019595403224229813,
    0.007272378541529179,
    -0.009245717898011208,
    -0.03507852926850319,
    -0.016821688041090965,
    -0.028923919424414635,
    -0.01712527871131897,
    0.0107429726049304,
    -0.04034997150301933,
    0.011529549024999142,
    -0.0016214505303651094,
    0.04959568753838539,
    -0.009169820696115494,
    -0.0029375855810940266,
    -0.012688713148236275,
    -0.034830138087272644,
    0.005792373325675726,
    -0.01338559202849865,
    -0.001359258545562625,
    -0.01031518541276455,
    0.006834241561591625,
    0.00715508172288537,
    0.021389348432421684,
    0.00044719260768033564,
    0.0075138709507882595,
    0.0023476534988731146,
    -0.0014515432994812727,
    0.003587890649214387,
    0.041371140629053116,
    -0.00814175233244896,
    -0.00031070614932104945,
    0.004947149194777012,
    -0.01107416208833456,
    -0.03949439525604248,
    0.01767726056277752,
    -0.02348688431084156,
    0.01902961917221546,
    -0.006913589313626289,
    0.02443905547261238,
    -0.01346838939934969,
    0.006979137193411589,
    0.03949439525604248,
    0.025915609672665596,
    -0.007362075615674257,
    -0.010239288210868835,
    0.03480254113674164,
    -0.016876885667443275,
    -0.0009996070293709636,
    0.007589768618345261,
    -0.006316757295280695,
    -0.003175628138706088,
    0.0072378795593976974,
    -0.02850993163883686,
    0.01723567396402359,
    0.025515422224998474,
    0.0170148815959692,
    -0.014655153267085552,
    0.016642292961478233,
    0.024245861917734146,
    0.004267519805580378,
    -0.02370767667889595,
    0.005340437404811382,
    0.013454589992761612,
    0.0016257629031315446,
    0.047663748264312744,
    -0.00314457924105227,
    0.030083082616329193,
    -0.02566721849143505,
    0.007493171840906143,
    0.016780288890004158,
    -0.014448159374296665,
    -0.002763365861028433,
    0.025791414082050323,
    0.015855716541409492,
    -0.011053463444113731,
    -0.03598930314183235,
    0.0011772766010835767,
    -0.008528140373528004,
    0.0025563722010701895,
    0.022217322140932083,
    0.005837222095578909,
    -0.0147793497890234,
    0.03899761289358139,
    -0.003479219041764736,
    -0.02766815759241581,
    0.02950350008904934,
    -0.02867552638053894,
    0.038914814591407776,
    -0.006258109118789434,
    -0.03505093231797218,
    -0.028095943853259087,
    0.009846000000834465,
    -0.005657827481627464,
    0.012033233419060707,
    -0.030552268028259277,
    0.019705800339579582,
    0.005975218024104834,
    0.002418376272544265,
    -0.008831731043756008,
    -0.05423234775662422,
    -0.01562112383544445,
    0.020602772012352943,
    -0.013537387363612652,
    0.016807887703180313,
    0.0024494254030287266,
    0.01947120577096939,
    0.007596668321639299,
    -0.017884254455566406,
    0.02432865835726261,
    -0.01553832646459341,
    -0.036072101444005966,
    0.011136260814964771,
    0.01414456870406866,
    -0.005323187913745642,
    0.006861840840429068,
    -1.5753621482872404e-05,
    0.034333351999521255,
    0.01723567396402359,
    -0.02136174961924553,
    0.010887867771089077,
    -0.012502418830990791,
    0.03549251705408096,
    -0.014158368110656738,
    0.04026717320084572,
    -0.010156490840017796,
    -0.00027146359207108617,
    0.008079653605818748,
    0.0037879846058785915,
    0.014448159374296665,
    0.02889631874859333,
    0.037341661751270294,
    -0.006996386684477329,
    0.04098474979400635,
    -0.005267989356070757,
    -0.0164490994066,
    -0.0015308908186852932,
    0.004222671501338482,
    0.024135464802384377,
    -0.017829056829214096,
    -0.024839242920279503,
    0.01010129228234291,
    -0.0026339946780353785,
    0.016131708398461342,
    -0.03499573469161987,
    -0.006447853520512581,
    0.020561372861266136,
    -0.01780145801603794,
    0.031325045973062515,
    0.006641047541052103,
    -0.028923919424414635,
    -0.02326609008014202,
    0.010522179305553436,
    0.03425055742263794,
    0.005350786726921797,
    0.05136203393340111,
    -0.009038724936544895,
    0.008811031468212605,
    0.007886460050940514,
    0.01466895267367363,
    -0.0006201185751706362,
    0.029310306534171104,
    0.014765550382435322,
    0.023569680750370026,
    0.0021492845844477415,
    -0.016545696184039116,
    -0.582452654838562,
    -0.0047160061076283455,
    -0.0016162757528945804,
    -0.011715843342244625,
    0.0115778474137187,
    -0.0013325219042599201,
    -0.02293490059673786,
    -0.002335578901693225,
    -0.02488064207136631,
    0.04368946701288223,
    -0.013357993215322495,
    0.03993598371744156,
    -0.01662849262356758,
    -0.00959070771932602,
    0.012536917813122272,
    -0.02599840797483921,
    0.005612978711724281,
    -0.02972429431974888,
    -0.013620184734463692,
    0.0010306560434401035,
    -0.020381979644298553,
    0.04473823681473732,
    0.009245717898011208,
    0.021320350468158722,
    -0.02594320848584175,
    -0.002596045844256878,
    0.015579725615680218,
    7.228607864817604e-05,
    0.04222671315073967,
    -0.020381979644298553,
    -0.0412607416510582,
    0.01778765767812729,
    0.012702512554824352,
    -0.021154755726456642,
    0.055363912135362625,
    -0.0003902693570125848,
    -0.042695898562669754,
    0.060883745551109314,
    0.006530650891363621,
    0.02053377404808998,
    -0.014627554453909397,
    -0.0023838772904127836,
    -0.008086553774774075,
    0.005947618745267391,
    0.028482332825660706,
    -0.006920489016920328,
    -0.003739685984328389,
    0.009218119084835052,
    0.03212542086839676,
    -0.021996529772877693,
    -0.00998399592936039,
    -0.02559822052717209,
    0.012033233419060707,
    -0.022852104157209396,
    0.028427133336663246,
    -0.004888501018285751,
    0.0018077449640259147,
    -0.000737846246920526,
    -0.017594464123249054,
    -0.01562112383544445,
    0.019760997965931892,
    0.010805070400238037,
    -0.009480311535298824,
    -0.024356257170438766,
    -0.02170673757791519,
    0.0175668653100729,
    0.00783816073089838,
    -0.013316594064235687,
    -0.01607651077210903,
    -0.0317942313849926,
    0.010439381934702396,
    -0.001842243829742074,
    -0.015055340714752674,
    -0.022796904668211937,
    0.012950905598700047,
    0.02432865835726261,
    0.044213853776454926,
    0.020506175234913826,
    0.0006265871343202889,
    0.01617310754954815,
    0.019457407295703888,
    -0.01707007922232151,
    -0.024728845804929733,
    -0.024176863953471184,
    0.030193479731678963,
    -0.00939751323312521,
    -0.005826872307807207,
    -0.01655949465930462,
    -0.020782167091965675,
    0.027198970317840576,
    0.008804131299257278,
    0.03921840339899063,
    -0.0016042011557146907,
    -0.020092187449336052,
    0.008942127227783203,
    0.018877824768424034,
    -0.017373669892549515,
    -0.00898352637887001,
    -0.012937105260789394,
    -0.031325045973062515,
    -0.0034774939995259047,
    -0.022341519594192505,
    0.028261538594961166,
    0.015262334607541561,
    -0.0027806153520941734,
    0.022838303819298744,
    0.007858860306441784,
    0.030524669215083122,
    0.0002716792223509401,
    -0.034222956746816635,
    -0.0034360953141003847,
    -0.03643088787794113,
    -0.014392961747944355,
    0.02163774147629738,
    0.0164628978818655,
    -0.033836569637060165,
    0.013889276422560215,
    -0.0027961398009210825,
    0.017442667856812477,
    -0.0128267090767622,
    0.013737481087446213,
    -0.003073856234550476,
    -0.022631309926509857,
    -0.029862290248274803,
    0.009797701612114906,
    0.010501479730010033,
    0.009735602885484695,
    0.006258109118789434,
    -0.012398921884596348,
    0.006434054113924503,
    0.050120074301958084,
    -0.03107665292918682,
    0.022162124514579773,
    0.0007775200647301972,
    0.03201502561569214,
    0.014068671502172947,
    0.028703125193715096,
    0.012723212130367756,
    0.018670830875635147,
    -0.01249551959335804,
    -0.020216383039951324,
    0.0126956133171916,
    0.015855716541409492,
    -7.724529859842733e-05,
    -0.005581929814070463,
    -0.04501422867178917,
    -0.01210223138332367,
    0.012164329178631306,
    -0.004809153266251087,
    -0.0033049993216991425,
    -0.003684487659484148,
    -0.011619245633482933,
    -0.046890970319509506,
    0.010328984819352627,
    -0.01103966310620308,
    -0.005633678287267685,
    -0.014075570739805698,
    -0.022548513486981392,
    -0.01940220780670643,
    -0.031601037830114365,
    0.01299230381846428,
    0.04664257913827896,
    0.013889276422560215,
    0.017497867345809937,
    -0.048960909247398376,
    -0.016214506700634956,
    -0.006713495589792728,
    0.006468552630394697,
    -0.009162920527160168,
    -0.03993598371744156,
    0.0004433114954736084,
    -0.012454120442271233,
    0.028427133336663246,
    -0.0036361892707645893,
    0.003643088974058628,
    0.021292751654982567,
    -0.027737155556678772,
    -0.005637128371745348,
    -0.02783375233411789,
    -0.008638536557555199,
    -0.0036982872989028692,
    0.021444546058773994,
    -0.04537301883101463,
    -0.012012533843517303,
    0.02158254198729992,
    0.014944944530725479,
    0.015924714505672455,
    0.015138139016926289,
    0.003805234096944332,
    0.004108824767172337,
    0.0031325046438723803,
    -0.008569538593292236,
    -0.024963438510894775,
    -0.0012962979963049293,
    -0.013309694826602936,
    0.02917231060564518,
    0.0069032395258545876,
    0.006568599957972765,
    0.009176719933748245,
    0.03325698524713516,
    0.01890542358160019,
    0.024963438510894775,
    -0.008079653605818748,
    -0.016186906024813652,
    0.008569538593292236,
    -0.005216240882873535,
    0.023859472945332527,
    -0.002502898685634136,
    0.03764525428414345,
    -0.0008823106181807816,
    0.027599159628152847,
    -0.0026132953353226185,
    -0.037065669894218445,
    -0.009756302461028099,
    0.017718659713864326,
    0.020119786262512207,
    0.0019302162108942866,
    0.014903545379638672,
    0.0008357370388694108,
    -8.295918814837933e-05,
    -0.002427001018077135,
    0.011695143766701221,
    0.03965999186038971,
    0.008935227990150452,
    0.0005670764949172735,
    -0.0054025352001190186,
    -0.006354706361889839,
    -0.017208075150847435,
    -0.0032084023114293814,
    -0.04473823681473732,
    0.013247596099972725,
    0.006858390755951405,
    0.019774796441197395,
    -0.023279890418052673,
    -0.002661593956872821,
    0.011426052078604698,
    0.026177803054451942,
    -0.03118705004453659,
    0.025170432403683662,
    -0.025570619851350784,
    0.005668177269399166,
    0.03245661035180092,
    0.02258991077542305,
    -0.017663462087512016,
    0.016366301104426384,
    0.0021199604962021112,
    0.011163859628140926,
    0.0015024292515590787,
    0.0008560051792301238,
    0.01263351459056139,
    -0.005716475658118725,
    0.009680405259132385,
    -0.00365343876183033,
    0.003129054559394717,
    0.019540203735232353,
    -0.028316736221313477,
    0.015041541308164597,
    0.0228659026324749,
    0.002019913401454687,
    0.01829824224114418,
    0.007914058864116669,
    -0.01433776319026947,
    0.03369857370853424,
    0.034664545208215714,
    0.04639418423175812,
    -0.009480311535298824,
    0.013806479051709175,
    -0.04763614758849144,
    -0.01840863935649395,
    -0.000600281695369631,
    -0.02414926327764988,
    -0.034885335713624954,
    -0.013675383292138577,
    -0.007134382613003254,
    0.023749075829982758,
    -0.018049849197268486,
    0.01633870229125023,
    0.01302680280059576,
    -0.0062615592032670975,
    0.012040132656693459,
    -0.0066237980499863625,
    -0.026370996609330177,
    0.023969870060682297,
    -0.010384183377027512,
    0.008942127227783203,
    -0.030000286176800728,
    -0.030938657000660896,
    0.0065823993645608425,
    -0.024232061579823494,
    0.008466041646897793,
    -0.009183620102703571,
    0.001103966380469501,
    0.029531100764870644,
    0.01890542358160019,
    0.012371323071420193,
    -0.01093616709113121,
    0.02387327328324318,
    0.004885050933808088,
    0.0013661583652719855,
    0.006861840840429068,
    0.0021510093938559294,
    -0.019650600850582123,
    -0.02972429431974888,
    -0.0031307796016335487,
    0.03358817473053932,
    -0.014296364039182663,
    -0.026398595422506332,
    -0.015690121799707413,
    -0.021955130621790886,
    0.008797232061624527,
    0.008562639355659485,
    0.015013942494988441,
    -0.012405822053551674,
    0.00595451844856143,
    0.020602772012352943,
    0.018284441903233528,
    0.012847408652305603,
    -0.009632106870412827,
    0.034167759120464325,
    0.005716475658118725,
    0.004474513698369265,
    -0.023914670571684837,
    -0.010646375827491283,
    0.00711368303745985,
    0.029531100764870644,
    0.005323187913745642,
    -0.0064651030115783215,
    0.005223140586167574,
    -0.021016759797930717,
    -0.0029600097332149744,
    -0.0011307030217722058,
    0.0012540367897599936,
    -0.010970666073262691,
    -0.012316124513745308,
    -0.0017421968514099717,
    0.013261395506560802,
    0.013282095082104206,
    -0.00659619877114892,
    0.047277357429265976,
    0.00324807595461607,
    -0.034057363867759705,
    0.010508379898965359,
    -0.00433651776984334,
    -0.004905750509351492,
    0.02114095538854599,
    -0.039853185415267944,
    0.01690448448061943,
    -0.008417743258178234,
    0.03080066107213497,
    0.013834078796207905,
    0.042751096189022064,
    0.02504623681306839,
    -0.018049849197268486,
    -0.02828913740813732,
    -0.02020258456468582,
    -0.023790474981069565,
    0.024908240884542465,
    0.018256843090057373,
    0.003003133460879326,
    0.003567191306501627,
    0.017649661749601364,
    0.019443606957793236,
    0.0008491053595207632,
    0.004598709754645824,
    0.015579725615680218,
    0.021886132657527924,
    -0.010135791264474392,
    0.0006140812765806913,
    0.0069446382112801075,
    -0.004229571204632521,
    -0.011150060221552849,
    0.02114095538854599,
    0.007617367897182703,
    -0.03320178762078285,
    0.00859023816883564,
    -0.005212791264057159,
    -0.05851021781563759,
    -0.0290067158639431,
    0.004505562596023083,
    -0.012012533843517303,
    0.010087492875754833,
    -0.015938514843583107,
    -0.0022976300679147243,
    -0.028371935710310936,
    -0.005588829517364502,
    -0.026357196271419525,
    0.02348688431084156,
    -0.005050646141171455,
    0.0016619868110865355,
    -0.0046746074222028255,
    -0.018229244276881218,
    0.025915609672665596,
    -0.03910800814628601,
    0.006865290924906731,
    -0.0072654783725738525,
    -0.045483414083719254,
    -0.013413190841674805,
    -0.013206197880208492,
    -0.00573027553036809,
    0.030303876847028732,
    0.002916886005550623,
    0.00990119855850935,
    0.016131708398461342,
    -0.009763202629983425,
    0.012854307889938354,
    -0.04092955216765404,
    0.012143629603087902,
    -0.05031326785683632,
    0.03921840339899063,
    0.01093616709113121,
    -0.01578671857714653,
    0.0017628963105380535,
    -0.0026753933634608984,
    0.011702043004333973,
    -0.009100822731852531,
    0.020105987787246704,
    0.007858860306441784,
    -0.010604976676404476,
    0.0016412874683737755,
    0.01299230381846428,
    0.003770735114812851,
    -0.004063975997269154,
    0.0051713925786316395,
    -0.020437177270650864,
    -0.000712403270881623,
    -0.019540203735232353,
    -0.0016404250636696815,
    -0.027543960139155388,
    0.007727764546871185,
    -0.007955457083880901,
    -0.006761793978512287,
    0.025308428332209587,
    -0.006171862129122019,
    -0.01475175004452467,
    0.014544757083058357,
    -0.0014593055238947272,
    0.0015783269191160798,
    0.008438442833721638,
    -0.008514340966939926,
    0.0030514320824295282,
    -0.02438385598361492,
    0.009211218915879726,
    0.0061753117479383945,
    -0.005319737829267979,
    0.004736705683171749,
    -0.009859799407422543,
    -0.0013351093512028456,
    0.0104600815102458,
    -0.02236911840736866,
    0.02058897167444229,
    -0.017373669892549515,
    -0.002263131085783243,
    -0.010501479730010033,
    0.04578700289130211,
    0.034333351999521255,
    0.001964715076610446,
    -0.015703922137618065,
    -0.027364566922187805,
    -0.019678199663758278,
    -0.02610880509018898,
    -0.015386531129479408,
    -0.011329454369843006,
    -0.013047502376139164,
    -0.005926919169723988,
    -0.006109763868153095,
    -0.03080066107213497,
    -0.03364337608218193,
    0.0015895391115918756,
    0.015441729687154293,
    -0.026564190164208412,
    -0.012378222309052944,
    0.014434359967708588,
    0.013958274386823177,
    0.017373669892549515,
    -0.008811031468212605,
    0.00472980597987771,
    -0.007424173876643181,
    -0.01143295131623745,
    -0.009866699576377869,
    0.0072378795593976974,
    -0.0032032274175435305,
    -0.0033153488766402006,
    3.63317049050238e-05,
    0.0038224835880100727,
    0.029475901275873184,
    -0.012343724258244038,
    0.030055483803153038,
    0.020340580493211746,
    0.0031721782870590687,
    -0.007203380577266216,
    -0.010736072435975075,
    -0.027419764548540115,
    -0.02966909669339657,
    0.01996799185872078,
    0.01791185326874256,
    0.006468552630394697,
    0.0029841591604053974,
    -0.04413105547428131,
    -0.005740624852478504,
    0.02031298168003559,
    -0.020381979644298553,
    0.007023985963314772,
    0.0006593611324205995,
    -0.003943230025470257,
    -0.013157898560166359,
    -0.007299977354705334,
    -0.005050646141171455,
    -0.0024632250424474478,
    -0.021748136729002,
    -0.03157343715429306,
    -0.00472980597987771,
    -0.027350766584277153,
    -0.005619878880679607,
    0.01879502646625042,
    -0.0005127406329847872,
    -0.0018663931405171752,
    0.000818918808363378,
    0.029310306534171104,
    -0.011136260814964771,
    -0.026453793048858643,
    -0.016131708398461342,
    -0.03540972247719765,
    -0.0096252067014575,
    -0.02594320848584175,
    -0.019485006108880043,
    0.04620099067687988,
    0.0020940862596035004,
    0.010411783121526241,
    -0.03565811365842819,
    0.01528993435204029,
    0.0029272357933223248,
    -0.02537742629647255,
    0.022576112300157547,
    -0.01450335793197155,
    -0.01896062307059765,
    -0.022286320105195045,
    -0.005588829517364502,
    -0.01639389991760254,
    0.0038362829945981503,
    0.0027357665821909904,
    -0.005254189949482679,
    0.014931145124137402,
    -0.028703125193715096,
    -0.020119786262512207,
    -0.023059098049998283,
    0.003867332125082612,
    0.019664401188492775,
    0.002889286959543824,
    0.03604450076818466,
    0.03822483494877815,
    0.005267989356070757,
    -0.015427929349243641,
    0.0005705263465642929,
    -0.00906632374972105,
    -0.014116969890892506,
    0.01290950644761324,
    0.0072654783725738525,
    -0.0017120103584602475,
    2.7322898858983535e-06,
    0.01213673036545515,
    8.322871144628152e-05,
    -0.03452654927968979,
    -0.01155024766921997,
    0.01791185326874256,
    0.03229101747274399,
    -0.003520617727190256,
    -0.041095148772001266,
    -0.007048135157674551,
    -0.009701103903353214,
    0.004809153266251087,
    -0.023611079901456833,
    0.00012441183207556605,
    -0.004843652248382568,
    -0.0068273418582975864,
    -0.011108661070466042,
    0.025694817304611206,
    0.030110681429505348,
    -0.00019998609786853194,
    0.004909200593829155,
    -0.020768366754055023,
    -0.005071345251053572,
    -0.029144711792469025,
    -0.020009391009807587,
    0.02856512926518917,
    0.011674444191157818,
    0.007534570526331663,
    -0.0030962806195020676,
    0.0014394685858860612,
    0.02839953452348709,
    0.008003756403923035,
    -0.009404413402080536,
    0.007458672858774662,
    -0.031435441225767136,
    0.03554771840572357,
    -0.019429808482527733,
    0.015193336643278599,
    -0.023362688720226288,
    0.002187233418226242,
    0.0024563251063227654,
    -0.008486741222441196,
    -0.01461375504732132,
    0.0007538020145148039,
    -0.01791185326874256,
    0.002004388952627778,
    0.006468552630394697,
    0.005750974640250206,
    -0.01891922391951084,
    -0.0071964808739721775,
    -0.022741707041859627,
    0.0021751588210463524,
    -0.008742033503949642,
    0.01584191806614399,
    0.03833523020148277,
    -0.015703922137618065,
    -0.03805923834443092,
    0.017608262598514557,
    -0.010052993893623352,
    0.006779043469578028,
    -0.009942596778273582,
    -0.007962357252836227,
    -0.00421232171356678,
    0.04484863206744194,
    -0.006396105047315359,
    -3.304352503619157e-05,
    -0.028758322820067406,
    -0.012619715183973312,
    -0.012688713148236275,
    -0.011722742579877377,
    -0.005554330535233021,
    0.023473083972930908,
    0.018008451908826828,
    0.0030134832486510277,
    -0.017042480409145355,
    0.006171862129122019,
    0.000926296750549227,
    -0.005164492409676313,
    -0.0027254170272499323,
    -0.01974719762802124,
    -0.03505093231797218,
    0.0063064079731702805,
    0.015993712469935417,
    -0.008252148516476154,
    -0.018615633249282837,
    0.02465984784066677,
    -0.0033722722437232733,
    0.0003587890532799065,
    0.03276020288467407,
    0.005450834054499865,
    0.014241166412830353,
    -0.0018715679179877043,
    0.03215302154421806,
    0.002397676929831505,
    -0.01774625852704048,
    -0.015110539272427559,
    -0.01095686573535204,
    -0.010239288210868835,
    -0.01346838939934969,
    0.028868719935417175,
    4.862195419264026e-05,
    -0.019954191520810127,
    -0.01026688702404499,
    0.020009391009807587,
    -0.005295588634908199,
    0.005309388041496277,
    0.0041536735370755196,
    0.03452654927968979,
    0.021541142836213112,
    0.01014959067106247,
    -0.018933022394776344,
    -0.020036989822983742,
    0.011557147838175297,
    0.016987282782793045,
    -0.028758322820067406,
    -0.0290067158639431,
    -0.019485006108880043,
    0.04774654656648636,
    0.033836569637060165,
    -0.015151938423514366,
    -0.03535452112555504,
    0.006144262850284576,
    -0.04846412315964699,
    -0.00429511908441782,
    -0.020492374897003174,
    0.02810974419116974,
    -0.0014800048666074872,
    0.013357993215322495,
    0.01313719991594553,
    -0.0015835016965866089,
    -0.014130769297480583,
    0.027323167771100998,
    -0.023693878203630447,
    -0.015759119763970375,
    -0.009204319678246975,
    0.00047004816588014364,
    -0.0057371752336621284,
    -0.013316594064235687,
    -0.025294629856944084,
    0.002132035093382001,
    0.02911711297929287,
    0.0022717558313161135,
    0.01624210551381111,
    0.04222671315073967,
    -0.0064133545383811,
    -0.014406761154532433,
    -0.025750014930963516,
    -0.0033550227526575327,
    0.02431485988199711,
    0.02020258456468582,
    0.006316757295280695,
    -0.01159854605793953,
    -0.043496273458004,
    -0.011501949280500412,
    0.011819339357316494,
    -0.018546635285019875,
    0.0010272061917930841,
    0.0031359544955193996,
    -0.042033519595861435,
    -0.004367566667497158,
    -0.004122624173760414,
    -0.026646988466382027,
    0.0058958702720701694,
    0.008493641391396523,
    0.030248677358031273,
    -0.03306379169225693,
    0.010142690502107143,
    0.009466511197388172,
    -0.01154334843158722,
    -0.004788454156368971,
    -0.0022803805768489838,
    0.023183293640613556,
    -0.015055340714752674,
    0.01740127056837082,
    0.021996529772877693,
    0.007996856234967709,
    -0.021844733506441116,
    -0.0017007981659844518,
    0.02688158117234707,
    -0.017277073115110397,
    -0.01026688702404499,
    -0.013150999322533607,
    -0.0073137772269546986,
    -0.010411783121526241,
    -0.002140659838914871,
    0.029144711792469025,
    -0.033836569637060165,
    0.01346838939934969,
    -0.009687304496765137,
    0.018174046650528908,
    0.0010272061917930841,
    -0.05009247362613678,
    0.00421232171356678,
    -0.012854307889938354,
    0.007168881595134735,
    0.004567660856992006,
    0.0023735277354717255,
    -0.03386416658759117,
    0.008093453012406826,
    0.02046477608382702,
    -0.03256700932979584,
    0.005433584563434124,
    0.20346100628376007,
    -0.009204319678246975,
    0.025142833590507507,
    0.00159730133600533,
    -0.0010522179072722793,
    0.021941332146525383,
    0.017815256491303444,
    0.0024149264208972454,
    -0.016821688041090965,
    0.018822627142071724,
    -0.0038293832913041115,
    -0.021541142836213112,
    -0.01780145801603794,
    0.012723212130367756,
    0.0061028641648590565,
    -0.005019597243517637,
    -0.017373669892549515,
    -0.046504583209753036,
    -0.015317533165216446,
    -0.005112744402140379,
    0.017056280747056007,
    -0.00045667984522879124,
    -0.01941600814461708,
    -0.02917231060564518,
    0.007479371968656778,
    0.006113213486969471,
    -0.030055483803153038,
    0.006879090331494808,
    0.012502418830990791,
    0.007644967176020145,
    -0.020105987787246704,
    0.009563108906149864,
    0.0077139646746218204,
    0.001755996490828693,
    -0.0351337306201458,
    -0.004591810051351786,
    0.010218588635325432,
    0.004233020823448896,
    0.018284441903233528,
    0.021044358611106873,
    0.011529549024999142,
    -0.027088575065135956,
    0.00715508172288537,
    -0.009349214844405651,
    -0.00045969849452376366,
    0.019291812554001808,
    -0.009107721969485283,
    0.011895237490534782,
    0.0029186110477894545,
    0.04134353995323181,
    0.0024701247457414865,
    -0.012033233419060707,
    0.02917231060564518,
    0.0007322402088902891,
    -0.005878620781004429,
    -0.02477024495601654,
    0.006403004750609398,
    0.033615775406360626,
    0.017760058864951134,
    -0.034167759120464325,
    0.0011608896311372519,
    0.008617836982011795,
    -0.011619245633482933,
    -0.0005209341179579496,
    -0.060718148946762085,
    0.03195982426404953,
    -0.029365504160523415,
    -0.038970012217760086,
    -0.0231556948274374,
    -0.019678199663758278,
    -0.011246656998991966,
    -0.014517157338559628,
    -0.018394839018583298,
    0.011508849449455738,
    -0.02526702918112278,
    -0.03107665292918682,
    0.022907301783561707,
    0.014682752080261707,
    0.026467593386769295,
    0.025073835626244545,
    -0.009038724936544895,
    0.005685426760464907,
    0.0002600358275230974,
    -0.014917345717549324,
    -0.0034774939995259047,
    -0.01414456870406866,
    0.00462975911796093,
    -0.013275195844471455,
    0.012143629603087902,
    -0.010846469551324844,
    -0.016186906024813652,
    -0.03507852926850319,
    -0.001247136970050633,
    0.0011056913062930107,
    0.005619878880679607,
    0.018891625106334686,
    0.02147214487195015,
    0.01031518541276455,
    -0.009363014250993729,
    -0.016366301104426384,
    -0.030717864632606506,
    0.045483414083719254,
    -0.002254506340250373,
    -0.002682293299585581,
    0.0002535672683734447,
    0.004609059542417526,
    -0.0028582378290593624,
    0.005216240882873535,
    -0.018891625106334686,
    -0.011840038932859898,
    0.01321999728679657,
    -0.01606271043419838,
    0.009839099831879139,
    0.004826402757316828,
    0.005299038719385862,
    -0.025750014930963516,
    0.01528993435204029,
    0.002670218702405691,
    -0.006737644784152508,
    0.02555682137608528,
    0.019057219848036766,
    0.0037569354753941298,
    0.00583032239228487,
    0.0008486741571687162,
    0.018615633249282837,
    -0.02933790534734726,
    -0.04827092960476875,
    0.04338587820529938,
    -0.008997325785458088,
    0.01062567625194788,
    0.010922366753220558,
    -0.055143117904663086,
    0.02559822052717209,
    -0.0007335338741540909,
    -0.006713495589792728,
    0.019319411367177963,
    -0.009218119084835052,
    0.01829824224114418,
    -0.022286320105195045,
    -0.00551983155310154,
    -0.019112417474389076,
    -0.020036989822983742,
    0.010915467515587807,
    -0.010894767940044403,
    0.024135464802384377,
    -0.029889889061450958,
    0.0013213097117841244,
    0.0076035684905946255,
    0.023514483124017715,
    0.010522179305553436,
    -0.01528993435204029,
    -0.004636658821254969,
    0.027461163699626923,
    -0.020657969638705254,
    0.011143160052597523,
    -0.0060131666250526905,
    -0.017097678035497665,
    -0.014558556489646435,
    0.01330279465764761,
    0.011122461408376694,
    -0.002304529771208763,
    -0.026412395760416985,
    -0.0037224364932626486,
    0.011363953351974487,
    -0.009832200594246387,
    -0.04054316505789757,
    -0.17277073860168457,
    0.006185661535710096,
    0.021071957424283028,
    -0.04037756845355034,
    -0.013185498304665089,
    -0.0007693265797570348,
    -0.00030143457115627825,
    -0.0075138709507882595,
    0.01562112383544445,
    -0.02275550737977028,
    0.006278808694332838,
    -0.012757711112499237,
    -0.015427929349243641,
    -0.008307347074151039,
    -0.003760385327041149,
    -0.014627554453909397,
    -0.0015343407867476344,
    0.010391083545982838,
    0.026743585243821144,
    0.023252291604876518,
    0.022272521629929543,
    -0.018256843090057373,
    -0.005433584563434124,
    0.02933790534734726,
    -0.012129830196499825,
    -0.036016903817653656,
    -0.012964705005288124,
    0.016614694148302078,
    -0.014158368110656738,
    -0.014517157338559628,
    0.0178428553044796,
    0.0033550227526575327,
    0.01718047633767128,
    -0.0032705003395676613,
    0.02594320848584175,
    0.01751166582107544,
    0.034774940460920334,
    -0.002771990606561303,
    -0.005785473622381687,
    0.029641496017575264,
    0.0220379289239645,
    0.030717864632606506,
    0.023169493302702904,
    -0.02684018202126026,
    -0.015966113656759262,
    0.01095686573535204,
    0.005461183376610279,
    -0.021720537915825844,
    0.0317942313849926,
    -0.010253087617456913,
    0.03510612994432449,
    -0.008776532486081123,
    -0.013820278458297253,
    -0.009135321713984013,
    0.023114295676350594,
    0.002066486980766058,
    0.019554004073143005,
    0.012198828160762787,
    0.006958438083529472,
    0.00803135521709919,
    -0.007879559881985188,
    -0.013392492197453976,
    0.022438116371631622,
    0.01458615530282259,
    -0.026081204414367676,
    -0.005343887023627758,
    -0.0032084023114293814,
    0.019954191520810127,
    -0.011798640713095665,
    0.005140343215316534,
    0.004215771332383156,
    -0.0030065833125263453,
    0.013157898560166359,
    0.006927388720214367,
    -0.00020429845608305186,
    -0.00367413810454309,
    -0.03709327057003975,
    -0.0007197342929430306,
    -0.005847571883350611,
    0.009576908312737942,
    -0.05169322341680527,
    0.03560291603207588,
    0.012999203987419605,
    -0.02187233418226242,
    0.020036989822983742,
    -0.010680874809622765,
    0.005640577990561724,
    0.001170376781374216,
    0.008666136302053928,
    -0.002299354877322912,
    0.015772920101881027,
    -0.02488064207136631,
    0.0027288668788969517,
    0.002794414758682251,
    -0.009659705683588982,
    0.015055340714752674,
    0.006296058185398579,
    -0.004481413401663303,
    0.004698756616562605,
    -0.013516687788069248,
    0.0096252067014575,
    0.016614694148302078,
    -0.02438385598361492,
    -0.002922060899436474,
    0.020878763869404793,
    0.005616428796201944,
    -0.026591788977384567,
    0.00017594463133718818,
    0.034278154373168945,
    2.514649895601906e-05,
    0.012840508483350277,
    0.010135791264474392,
    -0.0028772123623639345,
    0.031545840203762054,
    -0.040184374898672104,
    0.016614694148302078,
    -0.01640770025551319,
    -0.008845530450344086,
    0.022396717220544815,
    -0.0021027110051363707,
    0.036624085158109665,
    0.007327576633542776,
    0.009549308568239212,
    0.010598077438771725,
    -0.013840978033840656,
    -0.019209014251828194,
    -0.11221817880868912,
    -0.02242431603372097,
    0.015124338679015636,
    0.03353297710418701,
    -0.004026027396321297,
    -0.0012988854432478547,
    -0.015345131978392601,
    0.0220379289239645,
    -0.015883315354585648,
    0.008852430619299412,
    0.018864024430513382,
    2.2073936634114943e-05,
    -0.02275550737977028,
    0.02867552638053894,
    -0.007437973283231258,
    -0.009659705683588982,
    -0.011025863699615002,
    0.0009797700913622975,
    -0.02403886802494526,
    0.004829852841794491,
    -0.010108191519975662,
    -0.00870063528418541,
    0.003977728541940451,
    0.01640770025551319,
    -0.023114295676350594,
    0.029144711792469025,
    -0.05326637625694275,
    0.006437503732740879,
    0.007092983927577734,
    -0.005029946565628052,
    0.011702043004333973,
    -0.03872162103652954,
    -0.012295424938201904,
    0.00025723277940414846,
    0.009038724936544895,
    -0.0016318003181368113,
    -0.020616572350263596,
    0.015634924173355103,
    0.017152877524495125,
    -0.026702186092734337,
    0.017001081258058548,
    -0.017332272604107857,
    0.0018663931405171752,
    0.003901831107214093,
    -0.014765550382435322,
    -0.009839099831879139,
    -0.006358156446367502,
    0.007858860306441784,
    0.013875477015972137,
    -0.02425966039299965,
    -0.02666078694164753,
    -0.030138282105326653,
    0.0052438401617109776,
    -0.017829056829214096,
    0.02482544258236885,
    0.01712527871131897,
    0.011902137659490108,
    -0.0037431358359754086,
    -0.0023390287533402443,
    0.022010330110788345,
    0.0026443444658070803,
    0.009121522307395935,
    -0.027930349111557007,
    -0.0052300407551229,
    0.0016835486749187112,
    0.015745319426059723,
    -0.01054287888109684,
    -0.006792842876166105,
    0.0186846312135458,
    -0.01010129228234291,
    -0.02253471314907074,
    0.00025205794372595847,
    -0.017263274639844894,
    0.01578671857714653,
    -0.02884112112224102,
    0.006975687574595213,
    -0.00014230815577320755,
    0.007003286387771368,
    0.0164628978818655,
    -0.0039466796442866325,
    -0.007755363825708628,
    0.00680664274841547,
    -0.0014696551952511072,
    -0.012847408652305603,
    -0.013392492197453976,
    0.009280216880142689,
    0.015579725615680218,
    0.005989017430692911,
    0.009390613995492458,
    -0.018836425617337227,
    0.009583807550370693,
    -0.02666078694164753,
    0.02884112112224102,
    -0.013295894488692284,
    0.0036775879561901093,
    0.019995590671896935,
    -0.018229244276881218,
    -0.0312422476708889,
    0.00535423681139946,
    0.005602629389613867,
    -0.01807744987308979,
    0.0002320054336450994,
    -0.052521198987960815,
    0.023445485159754753,
    0.0001868333638412878,
    -0.002661593956872821,
    -0.0034964685328304768,
    -0.020713169127702713,
    -0.003515442833304405,
    -0.012150529772043228,
    -0.007320676930248737,
    -0.008479841984808445,
    -0.037341661751270294,
    0.007769163232296705,
    -0.009963296353816986,
    -0.004619409330189228,
    0.0029945087153464556,
    0.02704717591404915,
    0.04360667243599892,
    0.005430134478956461,
    0.015069141052663326,
    -0.0065375505946576595,
    -0.0011384652461856604,
    -0.006182211451232433,
    0.004785004071891308,
    0.02994508668780327,
    -0.03264980390667915,
    -0.0063340067863464355,
    -0.017304671928286552,
    0.017470266669988632,
    -0.021127156913280487,
    -0.026081204414367676,
    -0.003567191306501627,
    -0.023790474981069565,
    -0.019319411367177963,
    0.013095800764858723,
    0.03463694453239441,
    0.0038949314039200544,
    0.022134525701403618,
    -0.001729259849525988,
    -0.008024455048143864,
    0.00275991577655077,
    -0.017415069043636322,
    -0.03259460628032684,
    0.012799110263586044,
    0.01919521577656269,
    0.0047643049620091915,
    -0.01486214715987444,
    0.02933790534734726,
    0.005844121798872948,
    0.02928270772099495,
    0.018643232062458992,
    0.03380896896123886,
    -0.0037638351786881685,
    -0.024411456659436226,
    -0.031766630709171295,
    0.0022372568491846323,
    -0.015110539272427559,
    0.02944830246269703,
    -0.019540203735232353,
    0.0128267090767622,
    0.009604507125914097,
    0.046725377440452576,
    0.006196011323481798,
    -0.008638536557555199,
    0.004001878201961517,
    -0.008417743258178234,
    -0.023293690755963326,
    -0.02671598643064499,
    0.002019913401454687,
    -0.01573152095079422,
    -0.020989160984754562,
    -0.005782024003565311,
    -0.026964377611875534,
    0.014351562596857548,
    0.031159451231360435,
    0.030276278033852577,
    0.012040132656693459,
    -0.0075138709507882595,
    -0.014724151231348515,
    -0.01079127099364996,
    0.033505380153656006,
    0.017704861238598824,
    0.007362075615674257,
    -0.017760058864951134,
    -0.002361453138291836,
    0.01442056056112051,
    -0.004664257634431124,
    -0.005926919169723988,
    -0.010170290246605873,
    0.019374608993530273,
    0.0038638822734355927,
    0.017056280747056007,
    0.0012893981765955687,
    -0.03894241154193878,
    0.007182681001722813,
    0.019733399152755737,
    -0.009349214844405651,
    0.00959070771932602,
    -0.013516687788069248,
    -0.00481260335072875,
    0.01767726056277752,
    0.014641353860497475,
    0.004288219381123781,
    0.003577540861442685,
    -0.010867169126868248,
    -0.015869516879320145,
    -0.0015740145463496447,
    -0.0065823993645608425,
    -0.036568883806467056,
    0.01405487209558487,
    0.03215302154421806,
    0.01330279465764761,
    -0.009666605852544308,
    -0.005381836090236902,
    0.007624267600476742,
    -0.02209312655031681,
    0.0005187779315747321,
    0.0047160061076283455,
    -0.01425496581941843,
    -0.01963680237531662,
    0.018105048686265945,
    0.0014049697201699018,
    0.020906362682580948,
    0.036072101444005966,
    -0.002223457209765911,
    0.01431016344577074,
    0.012971604242920876,
    0.00939751323312521,
    -0.006575499661266804,
    7.945539255160838e-05,
    0.0107429726049304,
    -0.0435238741338253,
    0.0077622635290026665,
    -0.028261538594961166,
    -0.00711368303745985,
    0.004681507125496864,
    -0.030276278033852577,
    0.028482332825660706,
    0.011791740544140339,
    0.019774796441197395,
    0.06921868771314621,
    -0.012288525700569153,
    -0.01991279236972332,
    0.026853982359170914,
    -0.01651809737086296,
    0.04095715284347534,
    0.005757874343544245,
    -0.010253087617456913,
    -0.01018408965319395,
    0.011722742579877377,
    0.01835343986749649,
    0.017042480409145355,
    -0.019374608993530273,
    -0.02572241611778736,
    -0.0063478066585958,
    0.007175781298428774,
    -0.024218261241912842,
    0.006154612638056278,
    -0.01668369211256504,
    0.014986343681812286,
    0.028923919424414635,
    0.01238512247800827,
    -0.012060832232236862,
    -0.009128421545028687,
    -0.029862290248274803,
    -0.0007339651347137988,
    0.020064588636159897,
    0.018201645463705063,
    -0.004315818659961224,
    -0.05486712604761124,
    0.003649988677352667,
    0.0021458344999700785,
    -0.029751893132925034,
    -0.01442056056112051,
    -0.002716792281717062,
    0.0206303708255291,
    -0.016545696184039116,
    0.0009219843777827919,
    0.0056543778628110886,
    0.024853043258190155,
    -0.014123869128525257,
    -0.010301386006176472,
    -0.020933961495757103,
    -0.028040746226906776,
    0.013544287532567978,
    0.015593525022268295,
    -0.005388735793530941,
    0.017594464123249054,
    -0.04106754809617996
  ]
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "intended audience :: financial and insurance industry",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 3",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: scientific/engineering :: information analysis",
    "topic :: scientific/engineering :: mathematics"
  ],
  "description": "<h1 align=\"center\">jaxtyping</h1>\n\ntype annotations **and runtime type-checking** for:\n\n1. shape and dtype of [jax](https://github.com/google/jax) arrays; *(now also supports pytorch, numpy, and tensorflow!)*\n2. [pytrees](https://jax.readthedocs.io/en/latest/pytrees.html).\n\n\n**for example:**\n```python\nfrom jaxtyping import array, float, pytree\n\n# accepts floating-point 2d arrays with matching axes\ndef matrix_multiply(x: float[array, \"dim1 dim2\"],\n                    y: float[array, \"dim2 dim3\"]\n                  ) -> float[array, \"dim1 dim3\"]:\n    ...\n\ndef accepts_pytree_of_ints(x: pytree[int]):\n    ...\n\ndef accepts_pytree_of_arrays(x: pytree[float[array, \"batch c1 c2\"]]):\n    ...\n```\n\n## installation\n\n```bash\npip install jaxtyping\n```\n\nrequires python 3.9+.\n\njax is an optional dependency, required for a few jax-specific types. if jax is not installed then these will not be available, but you may still use jaxtyping to provide shape/dtype annotations for pytorch/numpy/tensorflow/etc.\n\nthe annotations provided by jaxtyping are compatible with runtime type-checking packages, so it is common to also install one of these. the two most popular are [typeguard](https://github.com/agronholm/typeguard) (which exhaustively checks every argument) and [beartype](https://github.com/beartype/beartype) (which checks random pieces of arguments).\n\n## documentation\n\navailable at [https://docs.kidger.site/jaxtyping](https://docs.kidger.site/jaxtyping).\n\n## finally\n\n### see also: other libraries in the jax ecosystem\n\n[equinox](https://github.com/patrick-kidger/equinox): neural networks.\n\n[optax](https://github.com/deepmind/optax): first-order gradient (sgd, adam, ...) optimisers.\n\n[diffrax](https://github.com/patrick-kidger/diffrax): numerical differential equation solvers.\n\n[optimistix](https://github.com/patrick-kidger/optimistix): root finding, minimisation, fixed points, and least squares.\n\n[lineax](https://github.com/google/lineax): linear solvers.\n\n[blackjax](https://github.com/blackjax-devs/blackjax): probabilistic+bayesian sampling.\n\n[orbax](https://github.com/google/orbax): checkpointing (async/multi-host/multi-device).\n\n[sympy2jax](https://github.com/google/sympy2jax): sympy<->jax conversion; train symbolic expressions via gradient descent.\n\n[eqxvision](https://github.com/paganpasta/eqxvision): computer vision models.\n\n[levanter](https://github.com/stanford-crfm/levanter): scalable+reliable training of foundation models (e.g. llms).\n\n[pysr](https://github.com/milescranmer/pysr): symbolic regression. (non-jax honourable mention!)\n\n### disclaimer\n\nthis is not an official google product.\n",
  "docs_url": null,
  "keywords": "deep-learning,equinox,jax,neural-networks,typing",
  "license": "mit license  copyright (c) 2022 google llc  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.  the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.     --- sections of the code were modified from https://github.com/agronholm/typeguard under the terms of the mit license, reproduced below. ---  mit license  copyright (c) alex gr\u00f6nholm  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.  the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
  "name": "jaxtyping",
  "package_url": "https://pypi.org/project/jaxtyping/",
  "project_url": "https://pypi.org/project/jaxtyping/",
  "project_urls": {
    "repository": "https://github.com/google/jaxtyping"
  },
  "release_url": "https://pypi.org/project/jaxtyping/0.2.25/",
  "requires_dist": [
    "numpy>=1.20.0",
    "typeguard<3,>=2.13.3",
    "typing-extensions>=3.7.4.1"
  ],
  "requires_python": "~=3.9",
  "summary": "type annotations and runtime checking for shape and dtype of jax arrays, and pytrees.",
  "version": "0.2.25",
  "releases": [],
  "developers": [
    "contact@kidger.site"
  ],
  "kwds": "accepts_pytree_of_arrays pytrees tensorflow pytree jaxtyping",
  "license_kwds": "copyright license liability liable noninfringement",
  "libtype": "pypi",
  "id": "pypi_jaxtyping",
  "homepage": "",
  "release_count": 29,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_typeguard",
    "pypi_typing_extensions"
  ]
}
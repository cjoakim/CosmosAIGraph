{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: science/research",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": "<p align=\"center\"><img width=50% src=\"https://raw.githubusercontent.com/alteryx/compose/main/docs/source/images/compose.png\" alt=\"compose\" /></p>\n<p align=\"center\"><i>\"build better training examples in a fraction of the time.\"</i></p>\n<p align=\"center\">\n    <a href=\"https://github.com/alteryx/compose/actions?query=workflow%3atests\" target=\"_blank\">\n        <img src=\"https://github.com/alteryx/compose/workflows/tests/badge.svg\" alt=\"tests\" />\n    </a>\n    <a href=\"https://codecov.io/gh/alteryx/compose\">\n        <img src=\"https://codecov.io/gh/alteryx/compose/branch/main/graph/badge.svg?token=mdz4uetueo\"/>\n    </a>\n    <a href=\"https://compose.alteryx.com/en/stable/?badge=stable\" target=\"_blank\">\n        <img src=\"https://readthedocs.com/projects/feature-labs-inc-compose/badge/?version=stable&token=5c3ace685cdb6e10eb67828a4dc74d09b20bb842980c8ee9eb4e9ed168d05b00\"\n            alt=\"readthedocs\" />\n    </a>\n    <a href=\"https://badge.fury.io/py/composeml\" target=\"_blank\">\n        <img src=\"https://badge.fury.io/py/composeml.svg?maxage=2592000\" alt=\"pypi version\" />\n    </a>\n    <a href=\"https://stackoverflow.com/questions/tagged/compose-ml\" target=\"_blank\">\n        <img src=\"https://img.shields.io/badge/questions-on_stackoverflow-blue.svg?\" alt=\"stackoverflow\" />\n    </a>\n    <a href=\"https://pepy.tech/project/composeml\" target=\"_blank\">\n        <img src=\"https://pepy.tech/badge/composeml/month\" alt=\"pypi downloads\" />\n    </a>\n</p>\n<hr>\n\n[compose](https://compose.alteryx.com) is a machine learning tool for automated prediction engineering. it allows you to structure prediction problems and generate labels for supervised learning. an end user defines an outcome of interest by writing a *labeling function*, then runs a search to automatically extract training examples from historical data. its result is then provided to [featuretools](https://docs.featuretools.com/) for automated feature engineering and subsequently to [evalml](https://evalml.alteryx.com/) for automated machine learning. the workflow of an applied machine learning engineer then becomes:\n\n<br><p align=\"center\"><img width=90% src=\"https://raw.githubusercontent.com/alteryx/compose/main/docs/source/images/workflow.png\" alt=\"compose\" /></p><br>\n\nby automating the early stage of the machine learning pipeline, our end user can easily define a task and solve it. see the [documentation](https://compose.alteryx.com) for more information.\n\n## installation\ninstall with pip\n\n```\npython -m pip install composeml\n```\n\nor from the conda-forge channel on [conda](https://anaconda.org/conda-forge/composeml):\n\n```\nconda install -c conda-forge composeml\n```\n\n### add-ons\n\n**update checker** - receive automatic notifications of new compose releases\n\n```\npython -m pip install \"composeml[update_checker]\"\n```\n\n## example\n> will a customer spend more than 300 in the next hour of transactions?\n\nin this example, we automatically generate new training examples from a historical dataset of transactions.\n\n```python\nimport composeml as cp\ndf = cp.demos.load_transactions()\ndf = df[df.columns[:7]]\ndf.head()\n```\n\n<table border=\"0\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>transaction_id</th>\n      <th>session_id</th>\n      <th>transaction_time</th>\n      <th>product_id</th>\n      <th>amount</th>\n      <th>customer_id</th>\n      <th>device</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>298</td>\n      <td>1</td>\n      <td>2014-01-01 00:00:00</td>\n      <td>5</td>\n      <td>127.64</td>\n      <td>2</td>\n      <td>desktop</td>\n    </tr>\n    <tr>\n      <td>10</td>\n      <td>1</td>\n      <td>2014-01-01 00:09:45</td>\n      <td>5</td>\n      <td>57.39</td>\n      <td>2</td>\n      <td>desktop</td>\n    </tr>\n    <tr>\n      <td>495</td>\n      <td>1</td>\n      <td>2014-01-01 00:14:05</td>\n      <td>5</td>\n      <td>69.45</td>\n      <td>2</td>\n      <td>desktop</td>\n    </tr>\n    <tr>\n      <td>460</td>\n      <td>10</td>\n      <td>2014-01-01 02:33:50</td>\n      <td>5</td>\n      <td>123.19</td>\n      <td>2</td>\n      <td>tablet</td>\n    </tr>\n    <tr>\n      <td>302</td>\n      <td>10</td>\n      <td>2014-01-01 02:37:05</td>\n      <td>5</td>\n      <td>64.47</td>\n      <td>2</td>\n      <td>tablet</td>\n    </tr>\n  </tbody>\n</table>\n\nfirst, we represent the prediction problem with a labeling function and a label maker.\n\n```python\ndef total_spent(ds):\n    return ds['amount'].sum()\n\nlabel_maker = cp.labelmaker(\n    target_dataframe_index=\"customer_id\",\n    time_index=\"transaction_time\",\n    labeling_function=total_spent,\n    window_size=\"1h\",\n)\n```\n\nthen, we run a search to automatically generate the training examples.\n\n```python\nlabel_times = label_maker.search(\n    df.sort_values('transaction_time'),\n    num_examples_per_instance=2,\n    minimum_data='2014-01-01',\n    drop_empty=false,\n    verbose=false,\n)\n\nlabel_times = label_times.threshold(300)\nlabel_times.head()\n```\n\n<table border=\"0\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>customer_id</th>\n      <th>time</th>\n      <th>total_spent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>1</td>\n      <td>2014-01-01 00:00:00</td>\n      <td>true</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>2014-01-01 01:00:00</td>\n      <td>true</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>2014-01-01 00:00:00</td>\n      <td>false</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>2014-01-01 01:00:00</td>\n      <td>false</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>2014-01-01 00:00:00</td>\n      <td>false</td>\n    </tr>\n  </tbody>\n</table>\n\nwe now have labels that are ready to use in [featuretools](https://docs.featuretools.com/) to generate features.\n\n## support\n\nthe innovation labs open source community is happy to provide support to users of compose. project support can be found in three places depending on the type of question:\n\n1. for usage questions, use [stack overflow](https://stackoverflow.com/questions/tagged/compose-ml) with the `composeml` tag.\n2. for bugs, issues, or feature requests start a github [issue](https://github.com/alteryx/compose/issues/new).\n3. for discussion regarding development on the core library, use [slack](https://join.slack.com/t/alteryx-oss/shared_invite/zt-182tyvuxv-nzin6eicef8tbziukp0bna).\n4. for everything else, the core developers can be reached by email at open_source_support@alteryx.com\n\n## citing compose\ncompose is built upon a newly defined part of the machine learning process \u2014 prediction engineering. if you use compose, please consider citing this paper:\njames max kanter, gillespie, owen, kalyan veeramachaneni. [label, segment,featurize: a cross domain framework for prediction engineering.](https://dai.lids.mit.edu/wp-content/uploads/2017/10/pred_eng1.pdf) ieee dsaa 2016.\n\nbibtex entry:\n\n```bibtex\n@inproceedings{kanter2016label,\n  title={label, segment, featurize: a cross domain framework for prediction engineering},\n  author={kanter, james max and gillespie, owen and veeramachaneni, kalyan},\n  booktitle={2016 ieee international conference on data science and advanced analytics (dsaa)},\n  pages={430--439},\n  year={2016},\n  organization={ieee}\n}\n```\n\n## acknowledgements \n\nthe open source development has been supported in part by darpa's data driven discovery of models program (d3m). \n\n## alteryx\n\n**compose** is an open source project maintained by [alteryx](https://www.alteryx.com). we developed compose to enable flexible definition of the machine learning task. to see the other open source projects we\u2019re working on visit [alteryx open source](https://www.alteryx.com/open-source). if building impactful data science pipelines is important to you or your business, please get in touch.\n\n<p align=\"center\">\n  <a href=\"https://www.alteryx.com/open-source\">\n    <img src=\"https://alteryx-oss-web-images.s3.amazonaws.com/opensource_logo-01.png\" alt=\"alteryx open source\" width=\"800\"/>\n  </a>\n</p>\n",
  "docs_url": null,
  "keywords": "prediction engineering,data science,machine learning",
  "license": "bsd 3-clause",
  "name": "composeml",
  "package_url": "https://pypi.org/project/composeml/",
  "project_url": "https://pypi.org/project/composeml/",
  "project_urls": {
    "Changes": "https://compose.alteryx.com/en/latest/release_notes.html",
    "Chat": "https://join.slack.com/t/alteryx-oss/shared_invite/zt-182tyvuxv-NzIn6eiCEf8TBziuKp0bNA",
    "Documentation": "https://compose.alteryx.com",
    "Issue Tracker": "https://github.com/alteryx/compose/issues",
    "Source Code": "https://github.com/alteryx/compose/",
    "Twitter": "https://twitter.com/alteryxoss"
  },
  "release_url": "https://pypi.org/project/composeml/0.10.1/",
  "requires_dist": [
    "pandas (>=1.3.0)",
    "tqdm (>=4.32.0)",
    "matplotlib (>=3.3.3)",
    "seaborn (>=0.11.0)",
    "composeml[updater] ; extra == 'complete'",
    "codecov (==2.1.12) ; extra == 'dev'",
    "flake8 (==4.0.1) ; extra == 'dev'",
    "isort (==5.9.3) ; extra == 'dev'",
    "black (==22.10.0) ; extra == 'dev'",
    "nbsphinx (==0.8.7) ; extra == 'dev'",
    "pydata-sphinx-theme (==0.7.1) ; extra == 'dev'",
    "Sphinx (==4.2.0) ; extra == 'dev'",
    "sphinx-inline-tabs (==2022.1.2b11) ; extra == 'dev'",
    "sphinx-copybutton (==0.4.0) ; extra == 'dev'",
    "myst-parser (==0.16.1) ; extra == 'dev'",
    "nbconvert (==6.4.5) ; extra == 'dev'",
    "ipython (==7.31.1) ; extra == 'dev'",
    "pygments (==2.10.0) ; extra == 'dev'",
    "jupyter (==1.0.0) ; extra == 'dev'",
    "pandoc (==1.1.0) ; extra == 'dev'",
    "ipykernel (==6.4.2) ; extra == 'dev'",
    "scikit-learn (!=0.22,<1.2.0,>=0.20.0) ; extra == 'dev'",
    "evalml (>=0.45.0) ; extra == 'docs'",
    "pip (>=21.3.1) ; extra == 'test'",
    "pytest-cov (==3.0.0) ; extra == 'test'",
    "pytest-xdist (>=2.5.0) ; extra == 'test'",
    "wheel (>=0.33.1) ; extra == 'test'",
    "featuretools (>=1.4.0) ; extra == 'test'",
    "woodwork (>=0.11.0) ; extra == 'test'",
    "pyarrow (>=3.0.0) ; extra == 'test'",
    "alteryx-open-src-update-checker (>=2.1.0) ; extra == 'updater'"
  ],
  "requires_python": "<4,>=3.8",
  "summary": "a framework for automated prediction engineering",
  "version": "0.10.1",
  "releases": [],
  "developers": [
    "open_source_support@alteryx.com"
  ],
  "kwds": "workflow prediction workflows alteryx composeml",
  "license_kwds": "bsd 3-clause",
  "libtype": "pypi",
  "id": "pypi_composeml",
  "homepage": "",
  "release_count": 21,
  "dependency_ids": [
    "pypi_alteryx_open_src_update_checker",
    "pypi_black",
    "pypi_codecov",
    "pypi_composeml",
    "pypi_evalml",
    "pypi_featuretools",
    "pypi_flake8",
    "pypi_ipykernel",
    "pypi_ipython",
    "pypi_isort",
    "pypi_jupyter",
    "pypi_matplotlib",
    "pypi_myst_parser",
    "pypi_nbconvert",
    "pypi_nbsphinx",
    "pypi_pandas",
    "pypi_pandoc",
    "pypi_pip",
    "pypi_pyarrow",
    "pypi_pydata_sphinx_theme",
    "pypi_pygments",
    "pypi_pytest_cov",
    "pypi_pytest_xdist",
    "pypi_scikit_learn",
    "pypi_seaborn",
    "pypi_sphinx",
    "pypi_sphinx_copybutton",
    "pypi_sphinx_inline_tabs",
    "pypi_tqdm",
    "pypi_wheel",
    "pypi_woodwork"
  ]
}
{
  "classifiers": [
    "framework :: django",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "topic :: software development :: libraries"
  ],
  "description": "django rest framework queryfields\n=================================\n\n|gh|_ |codecov|_ |pypi|_ |womm|_\n\n.. |gh| image:: https://github.com/wimglenn/djangorestframework-queryfields/actions/workflows/main.yml/badge.svg\n.. _gh: https://github.com/wimglenn/djangorestframework-queryfields/actions\n\n.. |codecov| image:: https://codecov.io/gh/wimglenn/djangorestframework-queryfields/branch/main/graph/badge.svg?token=weqbz83yrg\n.. _codecov: https://codecov.io/gh/wimglenn/djangorestframework-queryfields\n\n.. |pypi| image:: https://img.shields.io/pypi/v/djangorestframework-queryfields.svg\n.. _pypi: https://pypi.org/project/djangorestframework-queryfields\n\n.. |womm| image:: https://cdn.rawgit.com/nikku/works-on-my-machine/v0.2.0/badge.svg\n.. _womm: https://github.com/nikku/works-on-my-machine\n\nallows clients to control which fields will be sent in the api response.  fields are specified in the query, e.g.\n\n.. code-block:: \n\n    # you want a list of users but you're only interested in the fields \"id\" and \"username\":\n    \n    get /users/?fields=id,username\n    \n    [\n      {\n        \"id\": 1,\n        \"username\": \"tom\"\n      },\n      {\n        \"id\": 2,\n        \"username\": \"wim\"\n      }\n    ]\n\n    \n    # you want to see every field except \"id\" for the specific user wim:\n    \n    get /users/2/?fields!=id\n    \n    {\n      \"username\": \"wim\",\n      \"email\": \"hey@wimglenn.com\",\n      \"spirit_animal\": \"raccoon\"\n    }\n\n**supported django versions**: 1.7 - 3.2+.  check the `ci matrix <https://github.com/wimglenn/djangorestframework-queryfields/blob/main/.github/workflows/main.yml/>`_ for details.\n\ndocumentation is hosted on `read the docs <http://djangorestframework-queryfields.readthedocs.io/>`_.\n\ndevelopers, developers, developers!\n-----------------------------------\n\nwant to contribute to the project? this is how to run the test suite:\n\n.. code-block:: bash\n\n   # get the codez\n   git clone https://github.com/wimglenn/djangorestframework-queryfields.git\n\n   # create and/or activate your virtualenv, this or something like it:\n   cd djangorestframework-queryfields\n   python3 -m venv .venv\n   source .venv/bin/activate\n\n   # installing the app in your venv\n   pip install --editable \".[dev]\"\n   git checkout -b myfeature\n\n   # hack away, then ...\n   pytest\n",
  "docs_url": "https://pythonhosted.org/djangorestframework-queryfields/",
  "keywords": "",
  "license": "mit",
  "name": "djangorestframework-queryfields",
  "package_url": "https://pypi.org/project/djangorestframework-queryfields/",
  "project_url": "https://pypi.org/project/djangorestframework-queryfields/",
  "project_urls": {
    "Homepage": "https://github.com/wimglenn/djangorestframework-queryfields"
  },
  "release_url": "https://pypi.org/project/djangorestframework-queryfields/1.1.0/",
  "requires_dist": [
    "pytest ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "pytest-django ; extra == 'dev'",
    "coveralls ; extra == 'dev'",
    "django ; extra == 'dev'",
    "djangorestframework ; extra == 'dev'",
    "mock-django ; extra == 'dev'",
    "setuptools ; extra == 'dev'",
    "wheel ; extra == 'dev'",
    "pytz ; extra == 'dev'"
  ],
  "requires_python": "",
  "summary": "serialize a partial subset of fields in the api",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "hey@wimglenn.com",
    "wim_glenn"
  ],
  "kwds": "djangorestframework django queryfields fields field",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_djangorestframework_queryfields",
  "homepage": "https://github.com/wimglenn/djangorestframework-queryfields",
  "release_count": 2,
  "dependency_ids": [
    "pypi_coveralls",
    "pypi_django",
    "pypi_djangorestframework",
    "pypi_mock_django",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_django",
    "pypi_pytz",
    "pypi_setuptools",
    "pypi_wheel"
  ]
}
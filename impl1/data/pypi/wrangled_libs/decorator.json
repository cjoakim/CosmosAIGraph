{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: software development :: libraries",
    "topic :: utilities"
  ],
  "description": "decorators for humans\n=====================\n\nthe goal of the decorator module is to make it easy to define\nsignature-preserving function decorators and decorator factories.\nit also includes an implementation of multiple dispatch and other niceties\n(please check the docs). it is released under a two-clauses\nbsd license, i.e. basically you can do whatever you want with it but i am not\nresponsible.\n\ninstallation\n-------------\n\nif you are lazy, just perform\n\n ``$ pip install decorator``\n\nwhich will install just the module on your system.\n\nif you prefer to install the full distribution from source, including\nthe documentation, clone the `github repo`_ or download the tarball_, unpack it and run\n\n ``$ pip install .``\n\nin the main directory, possibly as superuser.\n\n.. _tarball: https://pypi.org/project/decorator/#files\n.. _github repo: https://github.com/micheles/decorator\n\ntesting\n--------\n\nif you have the source code installation you can run the tests with\n\n `$ python src/tests/test.py -v`\n\nor (if you have setuptools installed)\n\n `$ python setup.py test`\n\nnotice that you may run into trouble if in your system there\nis an older version of the decorator module; in such a case remove the\nold version. it is safe even to copy the module `decorator.py` over\nan existing one, since we kept backward-compatibility for a long time.\n\nrepository\n---------------\n\nthe project is hosted on github. you can look at the source here:\n\n https://github.com/micheles/decorator\n\ndocumentation\n---------------\n\nthe documentation has been moved to https://github.com/micheles/decorator/blob/master/docs/documentation.md\n\nfrom there you can get a pdf version by simply using the print\nfunctionality of your browser.\n\nhere is the documentation for previous versions of the module:\n\nhttps://github.com/micheles/decorator/blob/4.3.2/docs/tests.documentation.rst\nhttps://github.com/micheles/decorator/blob/4.2.1/docs/tests.documentation.rst\nhttps://github.com/micheles/decorator/blob/4.1.2/docs/tests.documentation.rst\nhttps://github.com/micheles/decorator/blob/4.0.0/documentation.rst\nhttps://github.com/micheles/decorator/blob/3.4.2/documentation.rst\n\nfor the impatient\n-----------------\n\nhere is an example of how to define a family of decorators tracing slow\noperations:\n\n.. code-block:: python\n\n   from decorator import decorator\n\n   @decorator\n   def warn_slow(func, timelimit=60, *args, **kw):\n       t0 = time.time()\n       result = func(*args, **kw)\n       dt = time.time() - t0\n       if dt > timelimit:\n           logging.warn('%s took %d seconds', func.__name__, dt)\n       else:\n           logging.info('%s took %d seconds', func.__name__, dt)\n       return result\n\n   @warn_slow  # warn if it takes more than 1 minute\n   def preprocess_input_files(inputdir, tempdir):\n       ...\n\n   @warn_slow(timelimit=600)  # warn if it takes more than 10 minutes\n   def run_calculation(tempdir, outdir):\n       ...\n\nenjoy!\n\n\n",
  "docs_url": null,
  "keywords": "decorators generic utility",
  "license": "new bsd license",
  "name": "decorator",
  "package_url": "https://pypi.org/project/decorator/",
  "project_url": "https://pypi.org/project/decorator/",
  "project_urls": {
    "Homepage": "https://github.com/micheles/decorator"
  },
  "release_url": "https://pypi.org/project/decorator/5.1.1/",
  "requires_dist": [],
  "requires_python": ">=3.5",
  "summary": "decorators for humans",
  "version": "5.1.1",
  "releases": [],
  "developers": [
    "michele.simionato@gmail.com",
    "michele_simionato"
  ],
  "kwds": "decorators decorator pip pypi py",
  "license_kwds": "new bsd license",
  "libtype": "pypi",
  "id": "pypi_decorator",
  "homepage": "https://github.com/micheles/decorator",
  "release_count": 35,
  "dependency_ids": []
}
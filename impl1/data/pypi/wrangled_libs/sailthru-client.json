{
  "classifiers": [
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "topic :: utilities"
  ],
  "description": "sailthru-python-client\n======================\n\n\nfor installation instructions, documentation, and examples please visit:\n[http://getstarted.sailthru.com/new-for-developers-overview/api-client-library/python](http://getstarted.sailthru.com/new-for-developers-overview/api-client-library/python)\n\na simple client library to remotely access the `sailthru rest api` as per [http://getstarted.sailthru.com/api](http://getstarted.sailthru.com/developers/api)\n\npython binding for [sailthru api](http://getstarted.sailthru.com/api) based on [requests](http://docs.python-requests.org/en/latest/)\n\nit will make requests in `json` format.\n\nsupports python 2.6, 2.7, 3.3+\n\n### installation (tested with python 2.7.x)\n\ninstalling with [pip](http://www.pip-installer.org/):\n\n    pip install sailthru-client\n    \n### running tests\ninstall tox and then type:\n\n    tox\n\n### api rate limiting\n\nhere is an example how to check rate limiting and throttle api calls based on that. for more information about rate limiting, see [sailthru documentation](https://getstarted.sailthru.com/new-for-developers-overview/api/api-technical-details/#rate_limiting)\n\n\n```python\nsailthru_client = sailthruclient(api_key, api_secret)\n\n# ... make some api calls ...\n\nrate_limit_info = sailthru_client.get_last_rate_limit_info('user', 'post')\n\n# get_last_rate_limit_info returns none if given endpoint/method wasn't triggered previously\nif rate_limit_info is not none:\n    limit = rate_limit_info['limit'];\n    remaining = rate_limit_info['remaining'];\n    reset_timestamp = rate_limit_info['reset'];\n\n    # throttle api calls based on last rate limit info\n    if remaining <= 0:\n         seconds_till_reset = reset_timestamp - time.time()\n         # sleep or perform other business logic before next user api call\n         time.sleep(seconds_till_reset);\n```",
  "docs_url": null,
  "keywords": "sailthru api",
  "license": "mit license",
  "name": "sailthru-client",
  "package_url": "https://pypi.org/project/sailthru-client/",
  "project_url": "https://pypi.org/project/sailthru-client/",
  "project_urls": {
    "Homepage": "https://github.com/sailthru/sailthru-python-client"
  },
  "release_url": "https://pypi.org/project/sailthru-client/2.3.5/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python client for sailthru api",
  "version": "2.3.5",
  "releases": [],
  "developers": [
    "sailthru_inc",
    "support@sailthru.com"
  ],
  "kwds": "sailthru_client sailthruclient sailthru api python",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_sailthru_client",
  "homepage": "https://github.com/sailthru/sailthru-python-client",
  "release_count": 23,
  "dependency_ids": []
}
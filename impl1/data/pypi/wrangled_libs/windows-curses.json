{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console :: curses",
    "environment :: win32 (ms windows)",
    "license :: osi approved :: python software foundation license",
    "operating system :: microsoft :: windows",
    "programming language :: c",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: software development",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "adds support for the standard python `curses` module on windows. based on\r\n[these wheels](https://www.lfd.uci.edu/~gohlke/pythonlibs/#curses). uses the\r\npdcurses curses implementation.\r\n\r\nthe wheels are built from [this github\r\nrepository](https://github.com/zephyrproject-rtos/windows-curses).\r\n\r\npdcurses is compiled with wide character support, meaning `get_wch()` is\r\navailable. utf-8 is forced as the encoding.\r\n\r\nstarting from windows-curses 2.0, in the name of pragmatism, these wheels (but\r\nnot gohlke's) include a hack to make resizing work for applications developed\r\nagainst ncurses without python code changes: whenever `getch()`, `getkey()`, or\r\n`get_wch()` return `key_resize`, `resize_term(0, 0)` is called automatically.\r\nthis gives behavior similar to the automatic `sigwinch` handling in ncurses\r\n(see pdcurses' `resize_term()` documentation). [this\r\ncommit](https://github.com/zephyrproject-rtos/windows-curses/commit/30ca08bfbcb7a332228ddcde026181b2009ea0a7)\r\nimplements the hack.\r\n\r\nto add the same hack in python code (which is harmless, and needed if you want\r\nresizing to work with older windows-curses versions or with gohlke's wheels),\r\ncall `curses.resize_term(0, 0)` after receiving `key_resize`, and ignore any\r\n`curses.error` exceptions. ncurses reliably fails and does nothing for\r\n`resize_term(0, 0)`, so this is safe on *nix.\r\n\r\nplease tell me if the `resize_term(0, 0)` hackery causes you any trouble.\r\n",
  "docs_url": null,
  "keywords": "",
  "license": "psf2",
  "name": "windows-curses",
  "package_url": "https://pypi.org/project/windows-curses/",
  "project_url": "https://pypi.org/project/windows-curses/",
  "project_urls": {
    "GitHub repository": "https://github.com/zephyrproject-rtos/windows-curses",
    "Homepage": "https://github.com/zephyrproject-rtos/windows-curses"
  },
  "release_url": "https://pypi.org/project/windows-curses/2.3.2/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "support for the standard curses module on windows",
  "version": "2.3.2",
  "releases": [],
  "developers": [],
  "kwds": "pythonlibs curses key_resize sigwinch resize_term",
  "license_kwds": "psf2",
  "libtype": "pypi",
  "id": "pypi_windows_curses",
  "homepage": "https://github.com/zephyrproject-rtos/windows-curses",
  "release_count": 12,
  "dependency_ids": []
}
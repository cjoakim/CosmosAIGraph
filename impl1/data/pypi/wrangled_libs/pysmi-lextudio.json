{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: system administrators",
    "intended audience :: telecommunications industry",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: communications",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "\nsnmp mib parser\n---------------\n[![pypi](https://img.shields.io/pypi/v/pysmi-lextudio.svg?maxage=2592000)](https://pypi.org/project/pysmi-lextudio)\n[![pypi downloads](https://img.shields.io/pypi/dd/pysmi-lextudio)](https://pypi.python.org/pypi/pysmi-lextudio/)\n[![python versions](https://img.shields.io/pypi/pyversions/pysmi-lextudio.svg)](https://pypi.org/project/pysmi-lextudio/)\n[![github license](https://img.shields.io/badge/license-bsd-blue.svg)](https://raw.githubusercontent.com/lextudio/pysmi/master/license.rst)\n\npysmi is a pure-python implementation of\n[snmp smi](https://en.wikipedia.org/wiki/management_information_base) mib parser.\nthis tool is designed to turn asn.1 mibs into various formats. as of this moment,\njson and [pysnmp](https://github.com/lextudio/pysnmp) modules can be generated\nfrom asn.1 mibs.\n\nfeatures\n--------\n\n* understands smiv1, smiv2 and de-facto smi dialects\n* turns mibs into pysnmp classes and json documents\n* maintains an index of mib objects over many mib modules\n* automatically pulls asn.1 mibs from local directories, zip archives,\n  http and ftp servers\n* 100% python, works with python 3.7+\n\nrendered pysmi documentation can be found at [pysmi site](https://www.pysnmp.com/pysmi).\n\nhow to use pysmi\n----------------\n\nif you are using pysnmp, you might never notice pysmi presence - pysnmp\ncalls pysmi for mib download and compilation behind the scenes (you can\nstill can do that manually by invoking *mibdump* tool).\n\nto turn asn.1 mib into a json document, call *mibdump* tool like this:\n\n```\n$ mibdump --generate-mib-texts  --destination-format json if-mib\nsource mib repositories: file:///usr/share/snmp/mibs, https://mibs.pysnmp.com/asn1/@mib@\nborrow missing/failed mibs from: https://mibs.pysnmp.com/json/fulltexts/@mib@\nexisting/compiled mib locations: \ncompiled mibs destination directory: .\nmibs excluded from code generation: rfc-1212, rfc-1215, rfc1065-smi, rfc1155-smi,\nrfc1158-mib, rfc1213-mib, snmpv2-conf, snmpv2-smi, snmpv2-tc, snmpv2-tm\nmibs to compile: if-mib\ndestination format: json\nparser grammar cache directory: not used\nalso compile all relevant mibs: yes\nrebuild mibs regardless of age: yes\ndo not create/update mibs: no\nbyte-compile python modules: no (optimization level no)\nignore compilation errors: no\ngenerate oid->mib index: no\ngenerate texts in mibs: yes\nkeep original texts layout: no\ntry various filenames while searching for mib module: yes\ncreated/updated mibs: ianaiftype-mib, if-mib, snmpv2-mib\npre-compiled mibs borrowed: \nup to date mibs: snmpv2-conf, snmpv2-smi, snmpv2-tc\nmissing source mibs: \nignored mibs: \nfailed mibs: \n```\n\njson document build from\n[if-mib module](https://mibs.pysnmp.com/asn1/if-mib)\nwould hold information such as:\n\n```\n   {\n      \"ifmib\": {\n          \"name\": \"ifmib\",\n          \"oid\": \"1.3.6.1.2.1.31\",\n          \"class\": \"moduleidentity\",\n          \"revisions\": [\n            \"2007-02-15 00:00\",\n            \"1996-02-28 21:55\",\n            \"1993-11-08 21:55\"\n          ]\n        },\n      ...\n      \"iftesttable\": {\n        \"name\": \"iftesttable\",\n        \"oid\": \"1.3.6.1.2.1.31.1.3\",\n        \"nodetype\": \"table\",\n        \"class\": \"objecttype\",\n        \"maxaccess\": \"not-accessible\"\n      },\n      \"iftestentry\": {\n        \"name\": \"iftestentry\",\n        \"oid\": \"1.3.6.1.2.1.31.1.3.1\",\n        \"nodetype\": \"row\",\n        \"class\": \"objecttype\",\n        \"maxaccess\": \"not-accessible\",\n        \"augmention\": {\n          \"name\": \"iftestentry\",\n          \"module\": \"if-mib\",\n          \"object\": \"ifentry\"\n        }\n      },\n      \"iftestid\": {\n        \"name\": \"iftestid\",\n        \"oid\": \"1.3.6.1.2.1.31.1.3.1.1\",\n        \"nodetype\": \"column\",\n        \"class\": \"objecttype\",\n        \"syntax\": {\n          \"type\": \"testandincr\",\n          \"class\": \"type\"\n        },\n        \"maxaccess\": \"read-write\"\n      },\n      ...\n   }\n```\n\nin general, converted mibs capture all aspects of original (asn.1) mib contents\nand layout. the snippet above is just a partial example, but here is the\ncomplete [if-mib.json](https://mibs.pysnmp.com/json/fulltexts/if-mib.json)\nfile.\n\nbesides one-to-one mib conversion, pysmi library can produce json index to\nfacilitate fast mib information lookup across large collection of mib files.\nfor example, json index for\n[ip-mib.json](https://mibs.pysnmp.com/json/asn1/ip-mib),\n[tcp-mib.json](https://mibs.pysnmp.com/json/asn1/tcp-mib) and\n[udp-mib.json](https://mibs.pysnmp.com/json/asn1/udp-mib)\nmodules would keep information like this:\n\n```\n   {\n      \"compliance\": {\n         \"1.3.6.1.2.1.48.2.1.1\": [\n           \"ip-mib\"\n         ],\n         \"1.3.6.1.2.1.49.2.1.1\": [\n           \"tcp-mib\"\n         ],\n         \"1.3.6.1.2.1.50.2.1.1\": [\n           \"udp-mib\"\n         ]\n      },\n      \"identity\": {\n          \"1.3.6.1.2.1.48\": [\n            \"ip-mib\"\n          ],\n          \"1.3.6.1.2.1.49\": [\n            \"tcp-mib\"\n          ],\n          \"1.3.6.1.2.1.50\": [\n            \"udp-mib\"\n          ]\n      },\n      \"oids\": {\n          \"1.3.6.1.2.1.4\": [\n            \"ip-mib\"\n          ],\n          \"1.3.6.1.2.1.5\": [\n            \"ip-mib\"\n          ],\n          \"1.3.6.1.2.1.6\": [\n            \"tcp-mib\"\n          ],\n          \"1.3.6.1.2.1.7\": [\n            \"udp-mib\"\n          ],\n          \"1.3.6.1.2.1.49\": [\n            \"tcp-mib\"\n          ],\n          \"1.3.6.1.2.1.50\": [\n            \"udp-mib\"\n          ]\n      }\n   }\n```\n\nwith this example, *compliance* and *identity* keys point to\n*module-compliance* and *module-identity* mib objects, *oids*\nlist top-level oids branches defined in mib modules. full index\nbuild over thousands of mibs could be seen\n[here](https://mibs.pysnmp.com/json/index.json).\n\nthe pysmi library can automatically fetch required mibs from http, ftp sites\nor local directories. you could configure any mib source available to you (including\n[https://mibs.pysnmp.com/asn1/](https://mibs.pysnmp.com/asn1/)) for that purpose.\n\nhow to get pysmi\n----------------\n\nthe pysmi package is distributed under terms and conditions of 2-clause\nbsd [license](https://www.pysnmp.com/pysmi/license.html). source code is freely\navailable as a github [repo](https://github.com/lextudio/pysmi).\n\nyou could `pip install pysmi-lextudio` or download it from [pypi](https://pypi.org/project/pysmi-lextudio/).\n\nif something does not work as expected,\n[open an issue](https://github.com/lextudio/pysnmp/issues) at github or\npost your question [on stack overflow](https://stackoverflow.com/questions/ask).\n\ncopyright (c) 2015-2020, [ilya etingof](mailto:etingof@gmail.com).\ncopyright (c) 2022, [lextudio inc.](mailto:support@lextudio.com).\nall rights reserved.\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd-2-clause",
  "name": "pysmi-lextudio",
  "package_url": "https://pypi.org/project/pysmi-lextudio/",
  "project_url": "https://pypi.org/project/pysmi-lextudio/",
  "project_urls": {
    "Homepage": "https://github.com/lextudio/pysmi",
    "Repository": "https://github.com/lextudio/pysmi"
  },
  "release_url": "https://pypi.org/project/pysmi-lextudio/1.1.13/",
  "requires_dist": [
    "ply (>=3.11,<4.0)",
    "requests (>=2.26.0,<3.0.0)"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "a pure-python implementation of snmp/smi mib parsing and conversion library.",
  "version": "1.1.13",
  "releases": [],
  "developers": [
    "etingof@gmail.com",
    "ilya_etingof"
  ],
  "kwds": "pysnmp pysmi pyversions lextudio mibdump",
  "license_kwds": "bsd-2-clause",
  "libtype": "pypi",
  "id": "pypi_pysmi_lextudio",
  "homepage": "https://github.com/lextudio/pysmi",
  "release_count": 5,
  "dependency_ids": [
    "pypi_ply",
    "pypi_requests"
  ]
}
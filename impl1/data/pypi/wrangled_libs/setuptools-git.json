{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.1",
    "programming language :: python :: 3.2",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "topic :: software development :: version control"
  ],
  "description": "about\n-----\n\nthis is a plugin for setuptools that enables git integration. once\ninstalled, setuptools can be told to include in a package distribution\nall the files tracked by git. this is an alternative to explicit\ninclusion specifications with ``manifest.in``.\n\na package distribution here refers to a package that you create using\nsetup.py, for example::\n\n  $> python setup.py sdist\n  $> python setup.py bdist_rpm\n  $> python setup.py bdist_egg\n\nthis package was formerly known as gitlsfiles. the name change is the\nresult of an effort by the setuptools plugin developers to provide a\nuniform naming convention.\n\n\ninstallation\n------------\n\nwith easy_install::\n\n  $> easy_install setuptools_git\n\nalternative manual installation::\n\n  $> tar -zxvf setuptools_git-x.y.z.tar.gz\n  $> cd setuptools_git-x.y.z\n  $> python setup.py install\n\nwhere x.y.z is a version number.\n\n\n\nusage\n-----\n\nto activate this plugin, you must first package your python module\nwith ``setup.py`` and use setuptools. the former is well documented in\nthe `distutils manual <http://docs.python.org/dist/dist.html>`_.\n\nto use setuptools instead of distutils, just edit ``setup.py`` and\nchange:\n\n.. code-block:: python\n\n  from distutils.core import setup\n\nto:\n\n.. code-block:: python\n\n  from setuptools import setup, find_packages\n\nwhen setuptools builds a source package, it always includes all files\ntracked by your revision control system, if it knows how to learn what\nthose files are.\n\nwhen setuptools builds a binary package, you can ask it to include all\nfiles tracked by your revision control system, by adding these argument\nto your invocation of `setup()`:\n\n.. code-block:: python\n\n  setup(...,\n        packages=find_packages(),\n        include_package_data=true,\n        ...)\n\nwhich will detect that a directory is a package if it contains a\n``__init__.py`` file.  alternatively, you can do without ``__init__.py``\nfiles and tell setuptools explicitly which packages to process:\n\n.. code-block:: python\n\n  setup(...,\n        packages=[\"a_package\", \"another_one\"],\n        include_package_data=true,\n        ...)\n\nthis plugin lets setuptools know what files are tracked by your git\nrevision control tool.  setuptools ships with support for cvs and\nsubversion.  other plugins like this one are available for bzr, darcs,\nmonotone, mercurial, and many others.\n\nit might happen that you track files with your revision control system\nthat you don't want to include in your packages.  in that case, you\ncan prevent setuptools from packaging those files with a directive in\nyour ``manifest.in``, for example::\n\n  exclude .gitignore\n  recursive-exclude images *.xcf *.blend\n\nin this example, we prevent setuptools from packaging ``.gitignore`` and\nthe gimp and blender source files found under the ``images`` directory.\n\nfiles to exclude from the package can also be listed in the `setup()`\ndirective.  to do the same as the manifest.in above, do:\n\n.. code-block:: python\n\n  setup(...,\n        exclude_package_data={'': ['.gitignore'],\n                              'images': ['*.xcf', '*.blend']},\n        ...)\n\nhere is another example:\n\n.. code-block:: python\n\n  setup(...,\n        exclude_package_data={'': ['.gitignore', 'artwork/*'],\n                              'model': ['config.py']},\n        ...)\n\n\ngotchas\n-------\n\nbe aware that for this module to work properly, git and the git\nmeta-data must be available. that means that if someone tries to make\na package distribution out of a non-git distribution of yours, say a\ntarball, setuptools will lack the information necessary to know which\nfiles to include. a similar problem will happen if someone clones\nyour git repository but does not install this plugin.\n\nresolving those problems is out of the scope of this plugin; you\nshould add relevant warnings to your documentation if those situations\nare a concern to you.\n\nyou can make sure that anyone who clones your git repository and uses\nyour setup.py file has this plugin by adding a `setup_requires`\nargument:\n\n.. code-block:: python\n\n  setup(...,\n        setup_requires=[ \"setuptools_git >= 0.3\", ],\n        ...)\n\n\nchanges\n-------\n\n1.2;  2017-02-17\n~~~~~~~~~~~~~~~~\n  - add ability to get version from git tags (https://github.com/msabramo/setuptools-git/pull/9)\n  - return early if a directory isn't managed by git (https://github.com/msabramo/setuptools-git/pull/10)\n  - support universal wheels (https://github.com/msabramo/setuptools-git/pull/11)\n  - optimize directory scanning to skip ignored directories (https://github.com/msabramo/setuptools-git/pull/12)\n\n\nreferences\n----------\n\n* `how to distribute python modules with distutils\n  <http://docs.python.org/dist/dist.html>`_\n\n* `setuptools complete manual\n  <http://peak.telecommunity.com/devcenter/setuptools>`_\n\nthanks to `zooko o'whielacronx`_ for many improvements to the documentation.\n\n\n.. _zooko o'whielacronx: https://bitbucket.org/zooko",
  "docs_url": null,
  "keywords": "distutils setuptools git",
  "license": "bsd",
  "name": "setuptools-git",
  "package_url": "https://pypi.org/project/setuptools-git/",
  "project_url": "https://pypi.org/project/setuptools-git/",
  "project_urls": {
    "Download": "UNKNOWN",
    "Homepage": "https://github.com/msabramo/setuptools-git"
  },
  "release_url": "https://pypi.org/project/setuptools-git/1.2/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "setuptools revision control system plugin for git",
  "version": "1.2",
  "releases": [],
  "developers": [
    "marc_abramowitz",
    "msabramo@gmail.com"
  ],
  "kwds": "setuptools_git setuptools gitlsfiles git github",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_setuptools_git",
  "homepage": "https://github.com/msabramo/setuptools-git",
  "release_count": 11,
  "dependency_ids": []
}
{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": ".. -*- mode: rst -*-\n\n|mne|_\n\nmne-python\n==========\n\nmne-python is an open-source python package for exploring,\nvisualizing, and analyzing human neurophysiological data such as meg, eeg, seeg,\necog, and more. it includes modules for data input/output, preprocessing,\nvisualization, source estimation, time-frequency analysis, connectivity analysis,\nmachine learning, statistics, and more.\n\n\ndocumentation\n^^^^^^^^^^^^^\n\n`documentation`_ for mne-python encompasses installation instructions, tutorials,\nand examples for a wide variety of topics, contributing guidelines, and an api\nreference.\n\n\nforum\n^^^^^^\n\nthe `user forum`_ is the best place to ask questions about mne-python usage or\nthe contribution process. the forum also features job opportunities and other\nannouncements.\n\nif you find a bug or have an idea for a new feature that should be added to\nmne-python, please use the\n`issue tracker <https://github.com/mne-tools/mne-python/issues/new/choose>`__ of\nour github repository.\n\n\ninstallation\n^^^^^^^^^^^^\n\nto install the latest stable version of mne-python with minimal dependencies\nonly, use pip_ in a terminal:\n\n.. code-block:: console\n\n    $ pip install --upgrade mne\n\nthe current mne-python release requires python 3.8 or higher. mne-python 0.17\nwas the last release to support python 2.7.\n\nfor more complete instructions, including our standalone installers and more\nadvanced installation methods, please refer to the `installation guide`_.\n\n\nget the development version\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nto install the latest development version of mne-python using pip_, open a\nterminal and type:\n\n.. code-block:: console\n\n    $ pip install --upgrade git+https://github.com/mne-tools/mne-python@main\n\nto clone the repository with `git <https://git-scm.com/>`__, open a terminal\nand type:\n\n.. code-block:: console\n\n    $ git clone https://github.com/mne-tools/mne-python.git\n\n\ndependencies\n^^^^^^^^^^^^\n\nthe minimum required dependencies to run mne-python are:\n\n- `python <https://www.python.org>`__ \u2265 3.8\n- `numpy <https://numpy.org>`__ \u2265 1.21.2\n- `scipy <https://scipy.org>`__ \u2265 1.7.1\n- `matplotlib <https://matplotlib.org>`__ \u2265 3.5.0\n- `pooch <https://www.fatiando.org/pooch/latest/>`__ \u2265 1.5\n- `tqdm <https://tqdm.github.io>`__\n- `jinja2 <https://palletsprojects.com/p/jinja/>`__\n- `decorator <https://github.com/micheles/decorator>`__\n- `lazy_loader <https://pypi.org/project/lazy_loader/>`__\n\nfor full functionality, some functions require:\n\n- `scikit-learn <https://scikit-learn.org/stable/>`__ \u2265 1.0\n- `joblib <https://joblib.readthedocs.io/en/latest/index.html>`__ \u2265 0.15 (for parallelization)\n- `mne-qt-browser <https://github.com/mne-tools/mne-qt-browser>`__ \u2265 0.1 (for fast raw data visualization)\n- `qt <https://www.qt.io>`__ \u2265 5.12 via one of the following bindings (for fast raw data visualization and interactive 3d visualization):\n\n  - `pyqt6 <https://www.riverbankcomputing.com/software/pyqt/>`__ \u2265 6.0\n  - `pyside6 <https://doc.qt.io/qtforpython-6/>`__ \u2265 6.0\n  - `pyqt5 <https://www.riverbankcomputing.com/software/pyqt/>`__ \u2265 5.12\n  - `pyside2 <https://doc.qt.io/qtforpython-6/gettingstarted/porting_from2.html>`__ \u2265 5.12\n\n- `numba <https://numba.pydata.org>`__ \u2265 0.54.0\n- `nibabel <https://nipy.org/nibabel/>`__ \u2265 3.2.1\n- `openmeeg <https://openmeeg.github.io>`__ \u2265 2.5.6\n- `pandas <https://pandas.pydata.org>`__ \u2265 1.3.2\n- `picard <https://pierreablin.github.io/picard/>`__ \u2265 0.3\n- `cupy <https://cupy.dev>`__ \u2265 9.0.0 (for nvidia cuda acceleration)\n- `dipy <https://dipy.org>`__ \u2265 1.4.0\n- `imageio <https://imageio.readthedocs.io/en/stable/>`__ \u2265 2.8.0\n- `pyvista <https://pyvista.org>`__ \u2265 0.32 (for 3d visualization)\n- `pyvistaqt <https://qtdocs.pyvista.org>`__ \u2265 0.4 (for 3d visualization)\n- `mffpy <https://github.com/bel-public/mffpy>`__ \u2265 0.5.7\n- `h5py <https://www.h5py.org>`__\n- `h5io <https://github.com/h5io/h5io>`__\n- `pymatreader <https://pymatreader.readthedocs.io/en/latest/>`__\n\n\ncontributing\n^^^^^^^^^^^^\n\nplease see the `contributing guidelines <https://mne.tools/dev/development/contributing.html>`__ on our documentation website.\n\n\nabout\n^^^^^\n\n+---------+------------+----------------+\n| ci      | |codecov|_ | |bandit|_      |\n+---------+------------+----------------+\n| package | |pypi|_    | |conda-forge|_ |\n+---------+------------+----------------+\n| docs    | |docs|_    | |discourse|_   |\n+---------+------------+----------------+\n| meta    | |zenodo|_  | |openssf|_     |\n+---------+------------+----------------+\n\n\nlicense\n^^^^^^^\n\nmne-python is **bsd-licensed** (bsd-3-clause):\n\n    this software is osi certified open source software.\n    osi certified is a certification mark of the open source initiative.\n\n    copyright (c) 2011-2022, authors of mne-python.\n    all rights reserved.\n\n    redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions are met:\n\n    * redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n\n    * redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n\n    * neither the names of mne-python authors nor the names of any\n      contributors may be used to endorse or promote products derived from\n      this software without specific prior written permission.\n\n    **this software is provided by the copyright holders and contributors\n    \"as is\" and any express or implied warranties, including, but not\n    limited to, the implied warranties of merchantability and fitness for\n    a particular purpose are disclaimed. in no event shall the copyright\n    owner or contributors be liable for any direct, indirect, incidental,\n    special, exemplary, or consequential damages (including, but not\n    limited to, procurement of substitute goods or services; loss of use,\n    data, or profits; or business interruption) however caused and on any\n    theory of liability, whether in contract, strict liability, or tort\n    (including negligence or otherwise) arising in any way out of the use\n    of this software, even if advised of the possibility of such\n    damage.**\n\n\n.. _documentation: https://mne.tools/dev/\n.. _user forum: https://mne.discourse.group\n.. _installation guide: https://mne.tools/dev/install/index.html\n.. _pip: https://pip.pypa.io/en/stable/\n\n.. |pypi| image:: https://img.shields.io/pypi/dm/mne.svg?label=pypi\n.. _pypi: https://pypi.org/project/mne/\n\n.. |conda-forge| image:: https://img.shields.io/conda/dn/conda-forge/mne.svg?label=conda\n.. _conda-forge: https://anaconda.org/conda-forge/mne\n\n.. |docs| image:: https://img.shields.io/badge/docs-online-green?label=documentation\n.. _docs: https://mne.tools/dev/\n\n.. |zenodo| image:: https://zenodo.org/badge/doi/10.5281/zenodo.592483.svg\n.. _zenodo: https://doi.org/10.5281/zenodo.592483\n\n.. |discourse| image:: https://img.shields.io/discourse/status?label=forum&server=https%3a%2f%2fmne.discourse.group%2f\n.. _discourse: https://mne.discourse.group/\n\n.. |codecov| image:: https://img.shields.io/codecov/c/github/mne-tools/mne-python?label=coverage\n.. _codecov: https://codecov.io/gh/mne-tools/mne-python\n\n.. |bandit| image:: https://img.shields.io/badge/security-bandit-yellow.svg\n.. _bandit: https://github.com/pycqa/bandit\n\n.. |openssf| image:: https://www.bestpractices.dev/projects/7783/badge\n.. _openssf: https://www.bestpractices.dev/projects/7783\n\n.. |mne| image:: https://mne.tools/dev/_static/mne_logo_gray.svg\n.. _mne: https://mne.tools/dev/\n",
  "docs_url": null,
  "keywords": "neuroscience,neuroimaging,meg,eeg,ecog,fnirs,brain",
  "license": "bsd-3-clause",
  "name": "mne",
  "package_url": "https://pypi.org/project/mne/",
  "project_url": "https://pypi.org/project/mne/",
  "project_urls": {
    "Bug Tracker": "https://github.com/mne-tools/mne-python/issues/",
    "Documentation": "https://mne.tools/",
    "Download": "https://pypi.org/project/scikit-learn/#files",
    "Forum": "https://mne.discourse.group/",
    "Homepage": "https://mne.tools/",
    "Source Code": "https://github.com/mne-tools/mne-python/"
  },
  "release_url": "https://pypi.org/project/mne/1.6.0/",
  "requires_dist": [
    "numpy >=1.21.2",
    "scipy >=1.7.1",
    "matplotlib >=3.5.0",
    "tqdm",
    "pooch >=1.5",
    "decorator",
    "packaging",
    "jinja2",
    "lazy-loader >=0.3",
    "defusedxml",
    "importlib-resources >=5.10.2 ; python_version < \"3.9\"",
    "mne[doc,test] ; extra == 'dev'",
    "sphinx >=6 ; extra == 'doc'",
    "numpydoc ; extra == 'doc'",
    "pydata-sphinx-theme ==0.13.3 ; extra == 'doc'",
    "sphinx-gallery ; extra == 'doc'",
    "sphinxcontrib-bibtex >=2.5 ; extra == 'doc'",
    "memory-profiler ; extra == 'doc'",
    "neo ; extra == 'doc'",
    "seaborn !=0.11.2 ; extra == 'doc'",
    "sphinx-copybutton ; extra == 'doc'",
    "sphinx-design ; extra == 'doc'",
    "sphinxcontrib-youtube ; extra == 'doc'",
    "mne-bids ; extra == 'doc'",
    "pyxdf ; extra == 'doc'",
    "mne-connectivity ; extra == 'doc'",
    "mne-gui-addons ; extra == 'doc'",
    "pygments >=2.13 ; extra == 'doc'",
    "pytest ; extra == 'doc'",
    "graphviz ; extra == 'doc'",
    "pyzmq !=24.0.0 ; extra == 'doc'",
    "ipython !=8.7.0 ; extra == 'doc'",
    "selenium ; extra == 'doc'",
    "mne[hdf5] ; extra == 'full'",
    "qtpy ; extra == 'full'",
    "PyQt6 ; extra == 'full'",
    "sip ; extra == 'full'",
    "scikit-learn ; extra == 'full'",
    "nibabel ; extra == 'full'",
    "openmeeg >=2.5.5 ; extra == 'full'",
    "numba ; extra == 'full'",
    "h5py ; extra == 'full'",
    "pandas ; extra == 'full'",
    "numexpr ; extra == 'full'",
    "jupyter ; extra == 'full'",
    "python-picard ; extra == 'full'",
    "statsmodels ; extra == 'full'",
    "joblib ; extra == 'full'",
    "psutil ; extra == 'full'",
    "dipy ; extra == 'full'",
    "vtk ; extra == 'full'",
    "nilearn ; extra == 'full'",
    "xlrd ; extra == 'full'",
    "imageio >=2.6.1 ; extra == 'full'",
    "imageio-ffmpeg >=0.4.1 ; extra == 'full'",
    "traitlets ; extra == 'full'",
    "pyvista !=0.35.2,!=0.38.0,!=0.38.1,!=0.38.2,!=0.38.3,!=0.38.4,!=0.38.5,!=0.38.6,!=0.42.0,>=0.32 ; extra == 'full'",
    "pyvistaqt >=0.4 ; extra == 'full'",
    "mffpy >=0.5.7 ; extra == 'full'",
    "ipywidgets ; extra == 'full'",
    "ipympl ; extra == 'full'",
    "ipyevents ; extra == 'full'",
    "trame ; extra == 'full'",
    "trame-vtk ; extra == 'full'",
    "trame-vuetify ; extra == 'full'",
    "mne-qt-browser ; extra == 'full'",
    "darkdetect ; extra == 'full'",
    "qdarkstyle ; extra == 'full'",
    "threadpoolctl ; extra == 'full'",
    "pyobjc-framework-Cocoa >=5.2.0 ; (platform_system == \"Darwin\") and extra == 'full'",
    "h5io ; extra == 'hdf5'",
    "pymatreader ; extra == 'hdf5'",
    "pytest ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytest-timeout ; extra == 'test'",
    "pytest-harvest ; extra == 'test'",
    "pytest-qt ; extra == 'test'",
    "ruff ; extra == 'test'",
    "numpydoc ; extra == 'test'",
    "codespell ; extra == 'test'",
    "check-manifest ; extra == 'test'",
    "twine ; extra == 'test'",
    "wheel ; extra == 'test'",
    "pre-commit ; extra == 'test'",
    "black ; extra == 'test'",
    "tomli ; (python_version < \"3.11\") and extra == 'test'",
    "mne[test] ; extra == 'test_extra'",
    "nitime ; extra == 'test_extra'",
    "nbclient ; extra == 'test_extra'",
    "sphinx-gallery ; extra == 'test_extra'",
    "eeglabio ; extra == 'test_extra'",
    "EDFlib-Python ; extra == 'test_extra'",
    "pybv ; extra == 'test_extra'",
    "imageio >=2.6.1 ; extra == 'test_extra'",
    "imageio-ffmpeg >=0.4.1 ; extra == 'test_extra'",
    "snirf ; extra == 'test_extra'"
  ],
  "requires_python": ">=3.8",
  "summary": "mne-python project for meg and eeg data analysis.",
  "version": "1.6.0",
  "releases": [],
  "developers": [
    "alexandre.gramfort@inria.fr",
    "dan@mccloy.info"
  ],
  "kwds": "mne _mne python neuroscience eeg",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_mne",
  "homepage": "",
  "release_count": 75,
  "dependency_ids": [
    "pypi_black",
    "pypi_check_manifest",
    "pypi_codespell",
    "pypi_darkdetect",
    "pypi_decorator",
    "pypi_defusedxml",
    "pypi_dipy",
    "pypi_edflib_python",
    "pypi_eeglabio",
    "pypi_graphviz",
    "pypi_h5io",
    "pypi_h5py",
    "pypi_imageio",
    "pypi_imageio_ffmpeg",
    "pypi_importlib_resources",
    "pypi_ipyevents",
    "pypi_ipympl",
    "pypi_ipython",
    "pypi_ipywidgets",
    "pypi_jinja2",
    "pypi_joblib",
    "pypi_jupyter",
    "pypi_lazy_loader",
    "pypi_matplotlib",
    "pypi_memory_profiler",
    "pypi_mffpy",
    "pypi_mne",
    "pypi_mne_bids",
    "pypi_mne_connectivity",
    "pypi_mne_gui_addons",
    "pypi_mne_qt_browser",
    "pypi_nbclient",
    "pypi_neo",
    "pypi_nibabel",
    "pypi_nilearn",
    "pypi_nitime",
    "pypi_numba",
    "pypi_numexpr",
    "pypi_numpy",
    "pypi_numpydoc",
    "pypi_openmeeg",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_pooch",
    "pypi_pre_commit",
    "pypi_psutil",
    "pypi_pybv",
    "pypi_pydata_sphinx_theme",
    "pypi_pygments",
    "pypi_pymatreader",
    "pypi_pyobjc_framework_cocoa",
    "pypi_pyqt6",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_harvest",
    "pypi_pytest_qt",
    "pypi_pytest_timeout",
    "pypi_python_picard",
    "pypi_pyvista",
    "pypi_pyvistaqt",
    "pypi_pyxdf",
    "pypi_pyzmq",
    "pypi_qdarkstyle",
    "pypi_qtpy",
    "pypi_ruff",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_seaborn",
    "pypi_selenium",
    "pypi_sip",
    "pypi_snirf",
    "pypi_sphinx",
    "pypi_sphinx_copybutton",
    "pypi_sphinx_design",
    "pypi_sphinx_gallery",
    "pypi_sphinxcontrib_bibtex",
    "pypi_sphinxcontrib_youtube",
    "pypi_statsmodels",
    "pypi_threadpoolctl",
    "pypi_tomli",
    "pypi_tqdm",
    "pypi_traitlets",
    "pypi_trame",
    "pypi_trame_vtk",
    "pypi_trame_vuetify",
    "pypi_twine",
    "pypi_vtk",
    "pypi_wheel",
    "pypi_xlrd"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "framework :: django :: 4.1",
    "framework :: django :: 4.2",
    "framework :: django :: 5.0",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "django filter\n=============\n\ndjango-filter is a reusable django application allowing users to declaratively\nadd dynamic ``queryset`` filtering from url parameters.\n\nfull documentation on `read the docs`_.\n\n.. image:: https://codecov.io/gh/carltongibson/django-filter/branch/develop/graph/badge.svg\n    :target: https://codecov.io/gh/carltongibson/django-filter\n\n.. image:: https://badge.fury.io/py/django-filter.svg\n    :target: http://badge.fury.io/py/django-filter\n\n\nversioning and stability policy\n-------------------------------\n\ndjango-filter is a mature and stable package. it uses a two-part calver\nversioning scheme, such as ``21.1``. the first number is the year. the second\nis the release number within that year.\n\non an on-going basis, django-filter aims to support all current django\nversions, the matching current python versions, and the latest version of\ndjango rest framework.\n\nplease see:\n\n* `status of supported python versions <https://devguide.python.org/versions/#supported-versions>`_\n* `list of supported django versions <https://www.djangoproject.com/download/#supported-versions>`_\n\nsupport for python and django versions will be dropped when they reach\nend-of-life. support for python versions will be dropped when they reach\nend-of-life, even when still supported by a current version of django.\n\nother breaking changes are rare. where required, every effort will be made to\napply a \"year plus two\" deprecation period. for example, a change initially\nintroduced in ``23.x`` would offer a fallback where feasible and finally be\nremoved in ``25.1``. where fallbacks are not feasible, breaking changes without\ndeprecation will be called out in the release notes.\n\n\ninstallation\n------------\n\ninstall using pip:\n\n.. code-block:: sh\n\n    pip install django-filter\n\nthen add ``'django_filters'`` to your ``installed_apps``.\n\n.. code-block:: python\n\n    installed_apps = [\n        ...\n        'django_filters',\n    ]\n\n\nusage\n-----\n\ndjango-filter can be used for generating interfaces similar to the django\nadmin's ``list_filter`` interface.  it has an api very similar to django's\n``modelforms``.  for example, if you had a product model you could have a\nfilterset for it with the code:\n\n.. code-block:: python\n\n    import django_filters\n\n    class productfilter(django_filters.filterset):\n        class meta:\n            model = product\n            fields = ['name', 'price', 'manufacturer']\n\n\nand then in your view you could do:\n\n.. code-block:: python\n\n    def product_list(request):\n        filter = productfilter(request.get, queryset=product.objects.all())\n        return render(request, 'my_app/template.html', {'filter': filter})\n\n\nusage with django rest framework\n--------------------------------\n\ndjango-filter provides a custom ``filterset`` and filter backend for use with\ndjango rest framework.\n\nto use this adjust your import to use\n``django_filters.rest_framework.filterset``.\n\n.. code-block:: python\n\n    from django_filters import rest_framework as filters\n\n    class productfilter(filters.filterset):\n        class meta:\n            model = product\n            fields = ('category', 'in_stock')\n\n\nfor more details see the `drf integration docs`_.\n\n\nsupport\n-------\n\nif you need help you can start a `discussion`_. for commercial support, please\n`contact carlton gibson via his website <https://noumenal.es/>`_.\n\n.. _`discussion`: https://github.com/carltongibson/django-filter/discussions\n.. _`read the docs`: https://django-filter.readthedocs.io/en/main/\n.. _`drf integration docs`: https://django-filter.readthedocs.io/en/stable/guide/rest_framework.html\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "django-filter",
  "package_url": "https://pypi.org/project/django-filter/",
  "project_url": "https://pypi.org/project/django-filter/",
  "project_urls": {
    "Bug Tracker": "https://github.com/carltongibson/django-filter/issues",
    "Changelog": "https://github.com/carltongibson/django-filter/blob/main/CHANGES.rst",
    "Documentation": "https://django-filter.readthedocs.io/en/main/",
    "Homepage": "https://github.com/carltongibson/django-filter/tree/main",
    "Source Code": "https://github.com/carltongibson/django-filter"
  },
  "release_url": "https://pypi.org/project/django-filter/23.5/",
  "requires_dist": [
    "Django>=3.2"
  ],
  "requires_python": ">=3.7",
  "summary": "django-filter is a reusable django application for allowing users to filter querysets dynamically.",
  "version": "23.5",
  "releases": [],
  "developers": [
    "alex.gaynor@gmail.com",
    "carlton.gibson@noumenal.es"
  ],
  "kwds": "django_filters django djangoproject filtering filters",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_django_filter",
  "homepage": "",
  "release_count": 42,
  "dependency_ids": [
    "pypi_django"
  ]
}
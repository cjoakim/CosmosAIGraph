{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: database",
    "topic :: database :: database engines/servers",
    "topic :: utilities",
    "typing :: typed"
  ],
  "description": ".. image:: https://raw.githubusercontent.com/msiemens/tinydb/master/artwork/logo.png\n    :scale: 100%\n    :height: 150px\n\n|build status| |coverage| |version|\n\nquick links\n***********\n\n- `example code`_\n- `supported python versions`_\n- `documentation <http://tinydb.readthedocs.org/>`_\n- `changelog <https://tinydb.readthedocs.io/en/latest/changelog.html>`_\n- `extensions <https://tinydb.readthedocs.io/en/latest/extensions.html>`_\n- `contributing`_\n\nintroduction\n************\n\ntinydb is a lightweight document oriented database optimized for your happiness :)\nit's written in pure python and has no external dependencies. the target are\nsmall apps that would be blown away by a sql-db or an external database server.\n\ntinydb is:\n\n- **tiny:** the current source code has 1800 lines of code (with about 40%\n  documentation) and 1600 lines tests.\n\n- **document oriented:** like mongodb_, you can store any document\n  (represented as ``dict``) in tinydb.\n\n- **optimized for your happiness:** tinydb is designed to be simple and\n  fun to use by providing a simple and clean api.\n\n- **written in pure python:** tinydb neither needs an external server (as\n  e.g. `pymongo <https://api.mongodb.org/python/current/>`_) nor any dependencies\n  from pypi.\n\n- **works on python 3.7+ and pypy3:** tinydb works on all modern versions of python\n  and pypy.\n\n- **powerfully extensible:** you can easily extend tinydb by writing new\n  storages or modify the behaviour of storages with middlewares.\n\n- **100% test coverage:** no explanation needed.\n\nto dive straight into all the details, head over to the `tinydb docs\n<https://tinydb.readthedocs.io/>`_. you can also discuss everything related\nto tinydb like general development, extensions or showcase your tinydb-based\nprojects on the `discussion forum <http://forum.m-siemens.de/.>`_.\n\nsupported python versions\n*************************\n\ntinydb has been tested with python 3.7 - 3.11 and pypy3.\n\nexample code\n************\n\n.. code-block:: python\n\n    >>> from tinydb import tinydb, query\n    >>> db = tinydb('/path/to/db.json')\n    >>> db.insert({'int': 1, 'char': 'a'})\n    >>> db.insert({'int': 1, 'char': 'b'})\n\nquery language\n==============\n\n.. code-block:: python\n\n    >>> user = query()\n    >>> # search for a field value\n    >>> db.search(user.name == 'john')\n    [{'name': 'john', 'age': 22}, {'name': 'john', 'age': 37}]\n\n    >>> # combine two queries with logical and\n    >>> db.search((user.name == 'john') & (user.age <= 30))\n    [{'name': 'john', 'age': 22}]\n\n    >>> # combine two queries with logical or\n    >>> db.search((user.name == 'john') | (user.name == 'bob'))\n    [{'name': 'john', 'age': 22}, {'name': 'john', 'age': 37}, {'name': 'bob', 'age': 42}]\n\n    >>> # apply transformation to field with `map`\n    >>> db.search((user.age.map(lambda x: x + x) == 44))\n    >>> [{'name': 'john', 'age': 22}]\n\n    >>> # more possible comparisons:  !=  <  >  <=  >=\n    >>> # more possible checks: where(...).matches(regex), where(...).test(your_test_func)\n\ntables\n======\n\n.. code-block:: python\n\n    >>> table = db.table('name')\n    >>> table.insert({'value': true})\n    >>> table.all()\n    [{'value': true}]\n\nusing middlewares\n=================\n\n.. code-block:: python\n\n    >>> from tinydb.storages import jsonstorage\n    >>> from tinydb.middlewares import cachingmiddleware\n    >>> db = tinydb('/path/to/db.json', storage=cachingmiddleware(jsonstorage))\n\n\ncontributing\n************\n\nwhether reporting bugs, discussing improvements and new ideas or writing\nextensions: contributions to tinydb are welcome! here's how to get started:\n\n1. check for open issues or open a fresh issue to start a discussion around\n   a feature idea or a bug\n2. fork `the repository <https://github.com/msiemens/tinydb/>`_ on github,\n   create a new branch off the `master` branch and start making your changes\n   (known as `github flow <https://guides.github.com/introduction/flow/index.html>`_)\n3. write a test which shows that the bug was fixed or that the feature works\n   as expected\n4. send a pull request and bug the maintainer until it gets merged and\n   published \u263a\n\n.. |build status| image:: https://img.shields.io/azure-devops/build/msiemens/3e5baa75-12ec-43ac-9728-89823ee8c7e2/2.svg?style=flat-square\n   :target: https://dev.azure.com/msiemens/github/_build?definitionid=2\n.. |coverage| image:: http://img.shields.io/coveralls/msiemens/tinydb.svg?style=flat-square\n   :target: https://coveralls.io/r/msiemens/tinydb\n.. |version| image:: http://img.shields.io/pypi/v/tinydb.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/tinydb/\n.. _buzhug: http://buzhug.sourceforge.net/\n.. _codernitydb: https://github.com/perchouli/codernitydb\n.. _mongodb: http://mongodb.org/\n",
  "docs_url": null,
  "keywords": "database,nosql",
  "license": "mit",
  "name": "tinydb",
  "package_url": "https://pypi.org/project/tinydb/",
  "project_url": "https://pypi.org/project/tinydb/",
  "project_urls": {
    "Changelog": "https://tinydb.readthedocs.io/en/latest/changelog.html",
    "Documentation": "https://tinydb.readthedocs.org/",
    "Homepage": "https://github.com/msiemens/tinydb",
    "Issues": "https://github.com/msiemens/tinydb/issues"
  },
  "release_url": "https://pypi.org/project/tinydb/4.8.0/",
  "requires_dist": [
    "typing-extensions (>=3.10.0,<5.0.0) ; python_full_version <= \"3.7.0\""
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "tinydb is a tiny, document oriented database optimized for your happiness :)",
  "version": "4.8.0",
  "releases": [],
  "developers": [
    "markus@m-siemens.de",
    "markus_siemens"
  ],
  "kwds": "tinydb nosql db database codernitydb",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_tinydb",
  "homepage": "https://github.com/msiemens/tinydb",
  "release_count": 68,
  "dependency_ids": [
    "pypi_typing_extensions"
  ]
}
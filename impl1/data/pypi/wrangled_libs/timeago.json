{
  "classifiers": [
    "intended audience :: developers",
    "natural language :: chinese (simplified)",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.5",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.2",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "topic :: utilities"
  ],
  "description": "timeago\n=======\n\na very simple python lib, used to format datetime with ``*** time ago``\nstatement. javascript version here. `timeago.js`_.\n\n|build status| |pypi status| |python versions|\n\nsuch as:\n\n::\n\n   just now\n   12 seconds ago\n   3 minutes ago\n   2 hours ago\n   24 days ago\n   6 months ago\n   2 years ago\n\n   in 12 seconds\n   in 3 minutes\n   in 2 hours\n   in 24 days\n   in 6 months\n   in 2 years\n\nfor other languages see below.\n\ninstall\n-------\n\n.. code:: sh\n\n   pip install timeago\n\n.. _usage--example:\n\nusage & example\n---------------\n\n.. code:: py\n\n   # -*- coding: utf-8 -*-\n   import timeago, datetime\n\n   now = datetime.datetime.now() + datetime.timedelta(seconds = 60 * 3.4)\n\n   date = datetime.datetime.now()\n\n   # locale\n   print (timeago.format(date, now, 'zh_cn')) # will print `3\u5206\u949f\u524d`\n\n   # input datetime\n   print (timeago.format(date, now)) # will print 3 minutes ago\n\n   # input timedelta\n   print (timeago.format(datetime.timedelta(seconds = 60 * 3.4))) # will print 3 minutes ago\n\n   # input date, auto add time(0, 0, 0)\n   print (timeago.format(datetime.date(2016, 5, 27), now))\n\n   # input datetime formatted string\n   print (timeago.format('2016-05-27 12:12:03', '2016-05-27 12:12:12')) # will print just now\n\n   # inverse two parameters\n   print (timeago.format('2016-05-27 12:12:12', '2016-05-27 12:12:03')) # will print a while\n\n.. _method--parameter:\n\nmethod & parameter\n------------------\n\nonly one api ``format``.\n\nthree parameters of method ``format``:\n\n-  ``date``: the parameter which will be formatted, must be instance\n   of ``datetime`` / ``timedelta`` or datetime formatted string.\n-  ``now``: reference time, must be instance of ``datetime`` or\n   datetime formatted string.\n-  ``locale``: the locale code, default ``en``.\n\nlocale\n------\n\nat the time we're speaking, `following locale`_ are available:\n\n-  ``ar``\n-  ``bg``\n-  ``ca``\n-  ``da``\n-  ``de``\n-  ``el``\n-  ``en``\n-  ``en_short``\n-  ``es``\n-  ``eu``\n-  ``fa_ir``\n-  ``fi``\n-  ``fr``\n-  ``gl``\n-  ``guj_in``\n-  ``he``\n-  ``hu``\n-  ``in_bg``\n-  ``in_hi``\n-  ``in_id``\n-  ``is``\n-  ``it``\n-  ``ja``\n-  ``ko``\n-  ``lt``\n-  ``ml``\n-  ``my``\n-  ``nb_no``\n-  ``nl``\n-  ``nn_no``\n-  ``pl``\n-  ``pt_pt``\n-  ``pt_br``\n-  ``ro``\n-  ``ru``\n-  ``sk``\n-  ``sv_se``\n-  ``ta``\n-  ``th``\n-  ``tr``\n-  ``uk``\n-  ``vi``\n-  ``zh_cn``\n-  ``zh_tw``\n\nlocalization\n------------\n\n1. fork the project\n2. create a locale python script called ``[name_of_your_locale].py``\n   following the existing other locales.\n3. add the name of your locale in the readme to keep it updated\n   (**alphabetically**).\n4. add test case following the `english model`_\n5. create the pull request.\n\nnotes\n~~~~~\n\nfor complicated plurals, you can take example on the pl (polish) locale\n`here`_\n\n.. _timeago.js: https://github.com/hustcc/timeago.js\n.. _following locale: https://github.com/hustcc/timeago/tree/master/src/timeago/locales\n.. _english model: https://github.com/hustcc/timeago/tree/master/test/testcase.py#l50\n.. _here: https://github.com/hustcc/timeago/tree/master/src/timeago/locales/pl.py\n\n.. |build status| image:: https://travis-ci.org/hustcc/timeago.svg?branch=master\n   :target: https://travis-ci.org/hustcc/timeago\n.. |pypi status| image:: https://img.shields.io/pypi/v/timeago.svg\n   :target: https://pypi.python.org/pypi/timeago\n.. |python versions| image:: https://img.shields.io/pypi/pyversions/timeago.svg\n   :target: https://pypi.python.org/pypi/timeago\n\n\n",
  "docs_url": null,
  "keywords": "timeago,seconds ago,minutes ago,hours ago,just now",
  "license": "mit",
  "name": "timeago",
  "package_url": "https://pypi.org/project/timeago/",
  "project_url": "https://pypi.org/project/timeago/",
  "project_urls": {
    "Homepage": "https://github.com/hustcc/timeago"
  },
  "release_url": "https://pypi.org/project/timeago/1.0.16/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a very simple python library, used to format datetime with `*** time ago` statement. eg: \"3 hours ago\".",
  "version": "1.0.16",
  "releases": [],
  "developers": [
    "hustcc",
    "i@hust.cc"
  ],
  "kwds": "datetime timedelta timeago _timeago pip",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_timeago",
  "homepage": "https://github.com/hustcc/timeago",
  "release_count": 14,
  "dependency_ids": []
}
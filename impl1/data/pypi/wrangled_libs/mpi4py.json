{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "operating system :: macos",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: posix :: bsd",
    "operating system :: posix :: linux",
    "operating system :: unix",
    "programming language :: c",
    "programming language :: cython",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: scientific/engineering",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: distributed computing"
  ],
  "description": "mpi for python\r\n==============\r\n\r\nthis package provides python bindings for the *message passing\r\ninterface* (mpi_) standard. it is implemented on top of the mpi\r\nspecification and exposes an api which grounds on the standard mpi-2\r\nc++ bindings.\r\n\r\n.. _mpi: https://www.mpi-forum.org\r\n\r\nfeatures\r\n--------\r\n\r\nthis package supports:\r\n\r\n* convenient communication of any *picklable* python object\r\n\r\n  + point-to-point (send & receive)\r\n  + collective (broadcast, scatter & gather, reductions)\r\n\r\n* fast communication of python object exposing the *python buffer\r\n  interface* (numpy arrays, builtin bytes/string/array objects)\r\n\r\n  + point-to-point (blocking/nonbloking/persistent send & receive)\r\n  + collective (broadcast, block/vector scatter & gather, reductions)\r\n\r\n* process groups and communication domains\r\n\r\n  + creation of new intra/inter communicators\r\n  + cartesian & graph topologies\r\n\r\n* parallel input/output:\r\n\r\n  + read & write\r\n  + blocking/nonbloking & collective/noncollective\r\n  + individual/shared file pointers & explicit offset\r\n\r\n* dynamic process management\r\n\r\n  + spawn & spawn multiple\r\n  + accept/connect\r\n  + name publishing & lookup\r\n\r\n* one-sided operations\r\n\r\n  + remote memory access (put, get, accumulate)\r\n  + passive target syncronization (start/complete & post/wait)\r\n  + active target syncronization (lock & unlock)\r\n\r\n\r\ninstall\r\n-------\r\n\r\nyou can install mpi4py from its source distribution using ``pip``::\r\n\r\n  $ python -m pip install mpi4py\r\n\r\nyou can also install the in-development version with::\r\n\r\n  $ python -m pip install git+https://github.com/mpi4py/mpi4py\r\n\r\nor::\r\n\r\n  $ python -m pip install https://github.com/mpi4py/mpi4py/tarball/master\r\n\r\ninstalling from source requires compilers and a working mpi\r\nimplementation. the ``mpicc`` compiler wrapper is looked for on the\r\nexecutable search path (``path`` environment variable). alternatively,\r\nyou can set the ``mpicc`` environment variable to the full path or\r\ncommand corresponding to the mpi-aware c compiler.\r\n\r\nthe **conda-forge** community provides ready-to-use binary packages\r\nfrom an ever growing collection of software libraries built around the\r\nmulti-platform *conda* package manager. three mpi implementations are\r\navailable on conda-forge: open mpi (linux and macos), mpich (linux and\r\nmacos), and microsoft mpi (windows). you can install mpi4py and your\r\npreferred mpi implementation using ``conda``::\r\n\r\n* to use mpich do::\r\n\r\n  $ conda install -c conda-forge mpi4py mpich\r\n\r\n* to use open mpi do::\r\n\r\n  $ conda install -c conda-forge mpi4py openmpi\r\n\r\n* to use microsoft mpi do::\r\n\r\n  $ conda install -c conda-forge mpi4py msmpi\r\n\r\nmpich and many of its derivatives are abi-compatible. you can provide\r\nthe package specification ``mpich=x.y.*=external_*`` (where ``x`` and\r\n``y`` are the major and minor version numbers) to request the conda\r\npackage manager to use system-provided mpich (or derivative)\r\nlibraries.\r\n\r\nthe ``openmpi`` package on conda-forge has built-in cuda support, but\r\nit is disabled by default. to enable it, follow the instruction\r\noutlined during ``conda install``. additionally, ucx support is also\r\navailable once the ``ucx`` package is installed.\r\n\r\non **fedora linux** systems (as well as **rhel** and their derivatives\r\nusing the epel software repository), you can install binary packages\r\nwith the system package manager::\r\n\r\n* using ``dnf`` and the ``mpich`` package::\r\n\r\n  $ sudo dnf install python3-mpi4py-mpich\r\n\r\n* using ``dnf`` and the ``openmpi`` package::\r\n\r\n  $ sudo dnf install python3-mpi4py-openmpi\r\n\r\nplease remember to load the correct mpi module for your chosen mpi\r\nimplementation\r\n\r\n* for the ``mpich`` package do::\r\n\r\n  $ module load mpi/mpich-$(arch)\r\n  $ python -c \"from mpi4py import mpi\"\r\n\r\n* for the ``openmpi`` package do::\r\n\r\n  $ module load mpi/openmpi-$(arch)\r\n  $ python -c \"from mpi4py import mpi\"\r\n\r\non **ubuntu linux** and **debian linux** systems, binary packages are\r\navailable for installation using the system package manager::\r\n\r\n  $ sudo apt install python3-mpi4py\r\n\r\nnote that on ubuntu/debian systems, the mpi4py package uses open\r\nmpi. to use mpich, install the ``libmpich-dev`` and ``python3-dev``\r\npackages (and any other required development tools). afterwards,\r\ninstall mpi4py from sources using ``pip``.\r\n\r\n**macos** users can install mpi4py using the homebrew package\r\nmanager::\r\n\r\n  $ brew install mpi4py\r\n\r\nnote that the homebrew mpi4py package uses open mpi. alternatively,\r\ninstall the ``mpich`` package and next install mpi4py from sources\r\nusing ``pip``.\r\n\r\n**windows** users can install mpi4py from binary wheels hosted on the\r\npython package index (pypi) using ``pip``::\r\n\r\n  $ python -m pip install mpi4py\r\n\r\nwindows wheels require a separate, system-wide installation of the\r\nmicrosoft mpi runtime.\r\n\r\n\r\ncitations\r\n---------\r\n\r\nif mpi for python been significant to a project that leads to an\r\nacademic publication, please acknowledge that fact by citing the\r\nproject.\r\n\r\n* l. dalcin and y.-l. l. fang,\r\n  *mpi4py: status update after 12 years of development*,\r\n  computing in science & engineering, 23(4):47-54, 2021.\r\n  https://doi.org/10.1109/mcse.2021.3083216\r\n\r\n* l. dalcin, p. kler, r. paz, and a. cosimo,\r\n  *parallel distributed computing using python*,\r\n  advances in water resources, 34(9):1124-1139, 2011.\r\n  https://doi.org/10.1016/j.advwatres.2011.04.013\r\n\r\n* l. dalcin, r. paz, m. storti, and j. d'elia,\r\n  *mpi for python: performance improvements and mpi-2 extensions*,\r\n  journal of parallel and distributed computing, 68(5):655-662, 2008.\r\n  https://doi.org/10.1016/j.jpdc.2007.09.005\r\n\r\n* l. dalcin, r. paz, and m. storti,\r\n  *mpi for python*,\r\n  journal of parallel and distributed computing, 65(9):1108-1115, 2005.\r\n  https://doi.org/10.1016/j.jpdc.2005.03.010\r\n\r\n\r\n",
  "docs_url": null,
  "keywords": "scientific computing,parallel computing,message passing interface,mpi",
  "license": "bsd",
  "name": "mpi4py",
  "package_url": "https://pypi.org/project/mpi4py/",
  "project_url": "https://pypi.org/project/mpi4py/",
  "project_urls": {
    "Download": "https://github.com/mpi4py/mpi4py/releases/download/3.1.5/mpi4py-3.1.5.tar.gz",
    "Homepage": "https://github.com/mpi4py/mpi4py/"
  },
  "release_url": "https://pypi.org/project/mpi4py/3.1.5/",
  "requires_dist": [],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
  "summary": "python bindings for mpi",
  "version": "3.1.5",
  "releases": [],
  "developers": [
    "dalcinl@gmail.com",
    "lisandro_dalcin"
  ],
  "kwds": "mpi mpi4py mpi_ openmpi _mpi",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_mpi4py",
  "homepage": "https://github.com/mpi4py/mpi4py/",
  "release_count": 27,
  "dependency_ids": []
}
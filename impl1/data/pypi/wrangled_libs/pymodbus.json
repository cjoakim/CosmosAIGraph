{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "framework :: asyncio",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft",
    "operating system :: os independent",
    "operating system :: posix :: linux",
    "operating system :: unix",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: system :: networking",
    "topic :: utilities"
  ],
  "description": "pymodbus - a python modbus stack\n================================\n.. image:: https://github.com/pymodbus-dev/pymodbus/actions/workflows/ci.yml/badge.svg?branch=dev\n   :target: https://github.com/pymodbus-dev/pymodbus/actions/workflows/ci.yml\n.. image:: https://readthedocs.org/projects/pymodbus/badge/?version=latest\n   :target: https://pymodbus.readthedocs.io/en/latest/?badge=latest\n   :alt: documentation status\n.. image:: https://pepy.tech/badge/pymodbus\n   :target: https://pepy.tech/project/pymodbus\n   :alt: downloads\n\npymodbus is a full modbus protocol implementation offering client/server with synchronous/asynchronous api a well as simulators.\n\ncurrent release is `3.6.2 <https://github.com/pymodbus-dev/pymodbus/releases/tag/v3.6.2>`_.\n\nbleeding edge (not released) is `dev <https://github.com/pymodbus-dev/pymodbus/tree/dev>`_.\n\nall changes are described in `release notes <https://pymodbus.readthedocs.io/en/latest/source/channgelog.html>`_\nand all api changes are `documented <https://pymodbus.readthedocs.io/en/latest/source/api_changes.html>`_\n\na big thanks to all the `volunteers <https://pymodbus.readthedocs.io/en/latest/source/authors.html>`_ that helps make pymodbus a great project.\n\nsource code on `github <https://pymodbus.readthedocs.io/en/latest/source/authors.html>`_\n\npymodbus in a nutshell\n----------------------\npymodbus consist of 5 parts:\n\n- **client**, connect to your favorite device(s)\n- **server**, simulate your favorite device(s)\n- **repl**, a commandline text based client/server simulator\n- **simulator**, an html based server simulator\n- **examples**, showing both simple and advances usage\n\ncommon features\n^^^^^^^^^^^^^^^\n* full `modbus standard protocol <_static/modbus_application_protocol_v1_1b3.pdf>`_ implementation\n* support for custom function codes\n* support serial (rs-485), tcp, tls and udp communication\n* support all standard frames: socket, rtu, rtu-over-tcp, tcp and ascii\n* does not have third party dependencies, apart from pyserial (optional)\n* very lightweight project\n* requires python >= 3.8\n* thorough test suite, that test all corners of the library\n* automatically tested on windows, linux and macos combined with python 3.8 - 3.12\n* strongly typed api (py.typed present)\n\n\nclient features\n^^^^^^^^^^^^^^^\n* asynchronous api and synchronous api for applications\n* very simple setup and call sequence (just 6 lines of code)\n* utilities to convert int/float to/from multiple registers\n* payload builder/decoder to help with complex data\n\n`client documentation <https://pymodbus.readthedocs.io/en/latest/source/client.html>`_\n\n\nserver features\n^^^^^^^^^^^^^^^\n* asynchronous implementation for high performance\n* synchronous api classes for convenience\n* simulate real life devices\n* full server control context (device information, counters, etc)\n* different backend datastores to manage register values\n* callback to intercept requests/responses\n* work on rs485 in parallel with other devices\n\n`server documentation <https://pymodbus.readthedocs.io/en/latest/source/library/server.html>`_\n\n\nrepl features\n^^^^^^^^^^^^^\n- server/client commandline emulator\n- easy test of real device (client)\n- easy test of client app (server)\n- simulation of broken requests/responses\n- simulation of error responses (hard to provoke in real devices)\n\n`repl documentation <https://https://pymodbus.readthedocs.io/en/dev/source/repl.html>`_\n\n\nsimulator features\n^^^^^^^^^^^^^^^^^^\n- server simulator with web interface\n- configure the structure of a real device\n- monitor traffic online\n- allow distributed team members to work on a virtual device using internet\n- simulation of broken requests/responses\n- simulation of error responses (hard to provoke in real devices)\n\n`simulator documentation <https://pymodbus.readthedocs.io/en/dev/source/simulator.html>`_\n\nuse cases\n---------\nthe client is the most typically used. it is embedded into applications,\nwhere it abstract the modbus protocol from the application by providing an\neasy to use api. the client is integrated into some well known projects like\n`home-assistant <https://www.home-assistant.io>`_.\n\nalthough most system administrators will find little need for a modbus\nserver, the server is handy to verify the functionality of an application.\n\nthe simulator and/or server is often used to simulate real life devices testing\napplications. the server is excellent to perform high volume testing (e.g.\nhoundreds of devices connected to the application). the advantage of the server is\nthat it runs not only a \"normal\" computers but also on small ones like raspberry pi.\n\nsince the library is written in python, it allows for easy scripting and/or integration into their existing\nsolutions.\n\nfor more information please browse the project documentation:\n\nhttps://readthedocs.org/docs/pymodbus/en/latest/index.html\n\n\n\ninstall\n-------\nthe library is available on pypi.org and github.com to install with\n\n- :code:`pip` for those who just want to use the library\n- :code:`git clone` for those who wants to help or just are curious\n\nbe aware that there are a number of project, who have forked pymodbus and\n\n- seems just to provide a version frozen in time\n- extended pymodbus with extra functionality\n\nthe latter is not because we rejected the extra functionality (we welcome all changes),\nbut because the codeowners made that decision.\n\nin both cases, please understand, we cannot offer support to users of these projects as we do not known\nwhat have been changed nor what status the forked code have.\n\na growing number of linux distributions include pymodbus in their standard installation.\n\nyou need to have python3 installed, preferable 3.11.\n\ninstall with pip\n^^^^^^^^^^^^^^^^\nyou can install using pip by issuing the following\ncommands in a terminal window::\n\n   pip install pymodbus\n\nif you want to use the serial interface::\n\n   pip install pymodbus[serial]\n\nthis will install pymodbus with the pyserial dependency.\n\npymodbus offers a number of extra options:\n\n- **repl**, needed by pymodbus.repl\n- **serial**, needed for serial communication\n- **simulator**, needed by pymodbus.simulator\n- **documentation**, needed to generate documentation\n- **development**, needed for development\n- **all**, installs all of the above\n\nwhich can be installed as::\n\n   pip install pymodbus[<option>,...]\n\nit is possible to install old releases if needed::\n\n   pip install pymodbus==3.5.4\n\n\ninstall with github\n^^^^^^^^^^^^^^^^^^^\non github, fork https://github.com/pymodbus-dev/pymodbus.git\n\nclone the source, and make a virtual environment::\n\n\n   git clone git://github.com/<your account>/pymodbus.git\n   cd pymodbus\n   python3 -m venv .venv\n\nactivate the virtual environment, this command needs repeated in every new terminal::\n\n   source .venv/bin/activate\n\nto get a specific release::\n\n   git checkout v3.5.2\n\nor the bleeding edge::\n\n   git checkout dev\n\nsome distributions have an old pip, which needs to be upgraded:\n\n   pip install --upgrade pip\n\ninstall required development tools::\n\n   pip install \".[development]\"\n\ninstall all (allows creation of documentation etc):\n\n   pip install \".[all]\"\n\ninstall git hooks, that helps control the commit and avoid errors when submitting a pull request:\n\n  cp githooks/* .git/hooks\n\nthis installs dependencies in your virtual environment\nwith pointers directly to the pymodbus directory,\nso any change you make is immediately available as if installed.\n\nthe repository contains a number of important branches and tags.\n  * **dev** is where all development happens, this branch is not always stable.\n  * **master** is where are releases are kept.\n  * **vx.y.z** (e.g. v2.5.3) is a specific release\n\n\nexample code\n------------\nfor those of you that just want to get started fast, here you go::\n\n    from pymodbus.client import modbustcpclient\n\n    client = modbustcpclient('mydevice.lan')\n    client.connect()\n    client.write_coil(1, true)\n    result = client.read_coils(1,1)\n    print(result.bits[0])\n    client.close()\n\nwe provide a couple of simple ready to go clients:\n\n- `async client <https://github.com/pymodbus-dev/pymodbus/blob/dev/examples/simple_async_client.py>`_\n- `sync client <https://github.com/pymodbus-dev/pymodbus/blob/dev/examples/simple_sync_client.py>`_\n\nfor more advanced examples, check out `examples <https://pymodbus.readthedocs.io/en/dev/source/examples.html>`_ included in the\nrepository. if you have created any utilities that meet a specific\nneed, feel free to submit them so others can benefit.\n\nalso, if you have a question, please `create a post in discussions q&a topic <https://github.com/pymodbus-dev/pymodbus/discussions/new?category=q-a>`_,\nso that others can benefit from the results.\n\nif you think, that something in the code is broken/not running well, please `open an issue <https://github.com/pymodbus-dev/pymodbus/issues/new>`_,\nread the template-text first and then post your issue with your setup information.\n\n`example documentation <https://pymodbus.readthedocs.io/en/dev/source/examples.html>`_\n\n\ncontributing\n------------\njust fork the repo and raise your pull request against :code:`dev` branch.\n\nwe always have more work than time, so feel free to open a discussion / issue on a theme you want to solve.\n\nif your company would like your device tested or have a cloud based device\nsimulation, feel free to contact us.\nwe are happy to help your company solve your modbus challenges.\n\nthat said, the current work mainly involves polishing the library and\nsolving issues:\n\n* fixing bugs/feature requests\n* architecture documentation\n* functional testing against any reference we can find\n\nthere are 2 bigger projects ongoing:\n\n   * rewriting the internal part of all clients (both sync and async)\n   * add features to and simulator, and enhance the web design\n\n\ndevelopment instructions\n------------------------\nthe current code base is compatible with python >= 3.8.\n\nhere are some of the common commands to perform a range of activities::\n\n   source .venv/bin/activate   <-- activate the virtual environment\n   ./check_ci.sh               <-- run the same checks as ci runs on a pull request.\n\n\nmake a pull request::\n\n   git checkout dev          <-- activate development branch\n   git pull                  <-- update branch with newest changes\n   git checkout -b feature   <-- make new branch for pull request\n   ... make source changes\n   git commit                <-- commit change to git\n   git push                  <-- push to your account on github\n\n   on github open a pull request, check that ci turns green and then wait for review comments.\n\n\ntest your changes::\n\n   cd pytest\n   pytest\n\n\narchitecture\n^^^^^^^^^^^^\n\nthere are no documentation of the architecture (help is welcome), but most classes and\nmethods are documented:\n\n`pymodbus internals <https://pymodbus.readthedocs.io/en/dev/source/internals.html>`_\n\n\ngenerate documentation\n^^^^^^^^^^^^^^^^^^^^^^\n\n**remark** assumes that you have installed documentation tools:;\n\n   pip install \".[documentation]\"\n\nto build do::\n\n   cd doc\n   ./build_html\n\nthe documentation is available in <root>/build/html\n\nremark: this generates a new zip/tgz file of examples which are uploaded.\n\n\nlicense information\n-------------------\n\nreleased under the `bsd license <https://github.com/pymodbus-dev/pymodbus/blob/dev/license>`_\n",
  "docs_url": "https://pythonhosted.org/pymodbus/",
  "keywords": "modbus,asyncio,scada,client,server,simulator",
  "license": "bsd-3-clause",
  "name": "pymodbus",
  "package_url": "https://pypi.org/project/pymodbus/",
  "project_url": "https://pypi.org/project/pymodbus/",
  "project_urls": {
    "Bug Reports": "https://github.com/pymodbus-dev/pymodbus/issues",
    "Discord": "https://discord.gg/vcP8qAz2",
    "Docs: Dev": "https://pymodbus.readthedocs.io/en/latest/?badge=latest",
    "Homepage": "https://github.com/pymodbus-dev/pymodbus/",
    "Source Code": "https://github.com/pymodbus-dev/pymodbus"
  },
  "release_url": "https://pypi.org/project/pymodbus/3.6.2/",
  "requires_dist": [
    "pymodbus[development,documentation,repl,serial,simulator] ; extra == 'all'",
    "build >=1.0.3 ; extra == 'development'",
    "codespell >=2.2.2 ; extra == 'development'",
    "coverage >=7.1.0 ; extra == 'development'",
    "mypy >=1.6.0 ; extra == 'development'",
    "pylint >=2.17.2 ; extra == 'development'",
    "pytest >=7.3.1 ; extra == 'development'",
    "pytest-asyncio >=0.20.3 ; extra == 'development'",
    "pytest-cov >=4.1.0 ; extra == 'development'",
    "pytest-timeout >=2.2.0 ; extra == 'development'",
    "pytest-xdist >=3.3.1 ; extra == 'development'",
    "ruff >=0.1.3 ; extra == 'development'",
    "twine >=4.0.2 ; extra == 'development'",
    "types-Pygments ; extra == 'development'",
    "types-pyserial ; extra == 'development'",
    "recommonmark >=0.7.1 ; extra == 'documentation'",
    "Sphinx >=5.3.0 ; extra == 'documentation'",
    "sphinx-rtd-theme >=1.1.1 ; extra == 'documentation'",
    "typer[all] >=0.7.0 ; extra == 'repl'",
    "prompt-toolkit >=3.0.36 ; extra == 'repl'",
    "pygments >=2.15.0 ; extra == 'repl'",
    "click >=8.0.0 ; extra == 'repl'",
    "aiohttp >=3.8.6 ; (python_version < \"3.12\") and extra == 'repl'",
    "aiohttp >=3.9.0b0 ; (python_version == \"3.12\") and extra == 'repl'",
    "pyserial >=3.5 ; extra == 'serial'",
    "aiohttp >=3.8.6 ; (python_version < \"3.12\") and extra == 'simulator'",
    "aiohttp >=3.9.0b0 ; (python_version == \"3.12\") and extra == 'simulator'"
  ],
  "requires_python": ">=3.8.0",
  "summary": "a fully featured modbus protocol stack in python",
  "version": "3.6.2",
  "releases": [],
  "developers": [
    "dhoomakethu",
    "galen_collins"
  ],
  "kwds": "pymodbus modbus_application_protocol_v1_1b3 modbus modbustcpclient py",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_pymodbus",
  "homepage": "",
  "release_count": 61,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_build",
    "pypi_click",
    "pypi_codespell",
    "pypi_coverage",
    "pypi_mypy",
    "pypi_prompt_toolkit",
    "pypi_pygments",
    "pypi_pylint",
    "pypi_pymodbus",
    "pypi_pyserial",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_pytest_timeout",
    "pypi_pytest_xdist",
    "pypi_recommonmark",
    "pypi_ruff",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_twine",
    "pypi_typer",
    "pypi_types_pygments",
    "pypi_types_pyserial"
  ]
}
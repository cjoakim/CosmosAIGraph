{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6"
  ],
  "description": "dotted_dict\n=============\n\n.. image:: https://travis-ci.org/josh-paul/dotted_dict.svg?branch=master\n    :target: https://travis-ci.org/josh-paul/dotted_dict\n    :alt: travis ci build\n\n.. image:: http://codecov.io/github/josh-paul/dotted_dict/coverage.svg?branch=master\n    :target: http://codecov.io/github/josh-paul/dotted_dict?branch=master\n    :alt: coverage\n\n.. image:: https://api.codeclimate.com/v1/badges/a5bdee8792e6a6379df1/maintainability\n   :target: https://codeclimate.com/github/josh-paul/dotted_dict/maintainability\n   :alt: code climate maintainability\n\na light weight extension of the default python dict object. this allows for the use of key names as \nobject attributes.\n\nsimple usage\n::\n\n    in [1]: from dotted_dict import dotteddict\n\n    in [2]: example = dotteddict()\n\n    in [3]: example['foo'] = 1\n\n    in [4]: example.foo\n    out[4]: 1\n\n    in [5]: example.bar = 2\n\n    in [6]: example\n    out[6]: dotteddict({'bar': 2, 'foo': 1})\n\n    in [7]: del example['foo']\n\n    in [8]: del example.bar\n\n    in [9]: example\n    out[9]: dotteddict({})\n\n\nalso allows passing in of values in same manner as normal dict objects.\n::\n\n    in [10]: example = dotteddict({'foo': 1, 'bar': 2})\n\n    in [11]: example\n    out[11]: dotteddict({'bar': 2, 'foo': 1})\n\nissues with invalid characters. a valid key name in the scope of this library must conform to the\nfollowing regex :code:`[a-za-z_][a-za-z0-9_]*$`. in the case where your key name does not conform,\nthe library will mutate your key to a safe format. spaces and invalid characters are replaced with\n_. in the case of the key beginning with an int, a leading _ is added.\n::\n\n    in [12]: dotteddict({'my fun key': 1, 'john\\'s': 1, 'mr. man': 1})\n    out[12]: dotteddict({'john_s': 1, 'mr__man': 1, 'my_fun_key': 1})\n\n    in [13]: dotteddict({1: 2})\n    out[13]: dotteddict({'_1': 2})\n\n",
  "docs_url": null,
  "keywords": "dotted dict dotted_dict",
  "license": "apache v2",
  "name": "dotted-dict",
  "package_url": "https://pypi.org/project/dotted-dict/",
  "project_url": "https://pypi.org/project/dotted-dict/",
  "project_urls": {
    "Homepage": "https://github.com/josh-paul/dotted_dict"
  },
  "release_url": "https://pypi.org/project/dotted-dict/1.1.3/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "dict object with support for addressing keys in dot notation.",
  "version": "1.1.3",
  "releases": [],
  "developers": [
    "josh_paul",
    "trevalen@me.com"
  ],
  "kwds": "dotted_dict dotteddict dict dotted dot",
  "license_kwds": "apache v2",
  "libtype": "pypi",
  "id": "pypi_dotted_dict",
  "homepage": "https://github.com/josh-paul/dotted_dict",
  "release_count": 12,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: text processing :: general"
  ],
  "description": "# tabula-py\n\n[![build status](https://github.com/chezou/tabula-py/actions/workflows/pythontest.yml/badge.svg)](https://github.com/chezou/tabula-py/actions/workflows/pythontest.yml)\n[![pypi version](https://badge.fury.io/py/tabula-py.svg)](https://badge.fury.io/py/tabula-py)\n[![documentation status](https://readthedocs.org/projects/tabula-py/badge/?version=latest)](https://tabula-py.readthedocs.io/en/latest/?badge=latest)\n[![patreon](https://img.shields.io/badge/patreon-donate-orange.svg)](https://www.patreon.com/chezou)\n\n`tabula-py` is a simple python wrapper of [tabula-java](https://github.com/tabulapdf/tabula-java), which can read tables in a pdf.\nyou can read tables from a pdf and convert them into a pandas dataframe. tabula-py also enables you to convert a pdf file into a csv, a tsv or a json file.\n\nyou can see [the example notebook](https://nbviewer.jupyter.org/github/chezou/tabula-py/blob/master/examples/tabula_example.ipynb) and try it on google colab, or we highly recommend reading [our documentation](https://tabula-py.readthedocs.io/en/latest/), especially the faq section.\n\n![tabula-py example](https://github.com/chezou/tabula-py/raw/master/example.png)\n\n## requirements\n\n- java 8+\n- python 3.8+\n\n### os\n\ni confirmed working on macos and ubuntu. but some people confirm it works on windows 10. see also [the documentation for the detailed installation for windows 10](https://tabula-py.readthedocs.io/en/latest/getting_started.html#get-tabula-py-working-windows-10).\n\n## usage\n\n- [documentation](https://tabula-py.readthedocs.io/en/latest/)\n  - [faq](https://tabula-py.readthedocs.io/en/latest/faq.html) would be helpful if you have an issue\n- [example notebook on google colaboratory](https://colab.research.google.com/github/chezou/tabula-py/blob/master/examples/tabula_example.ipynb)\n\n### install\n\nensure you have a java runtime and set the path for it.\n\n```bash\npip install tabula-py\n```\n\nif you want to leverage faster execution with jpype, install with `jpype` extra.\n\n```sh\npip install tabula-py[jpype]\n```\n\n### example\n\ntabula-py enables you to extract tables from a pdf into a dataframe, or a json. it can also extract tables from a pdf and save the\u00a0file as a csv, a tsv, or a json.\u00a0\u00a0\n\n```py\nimport tabula\n\n# read pdf into list of dataframe\ndfs = tabula.read_pdf(\"test.pdf\", pages='all')\n\n# read remote pdf into list of dataframe\ndfs2 = tabula.read_pdf(\"https://github.com/tabulapdf/tabula-java/raw/master/src/test/resources/technology/tabula/arabic.pdf\")\n\n# convert pdf into csv file\ntabula.convert_into(\"test.pdf\", \"output.csv\", output_format=\"csv\", pages='all')\n\n# convert all pdfs in a directory\ntabula.convert_into_by_batch(\"input_directory\", output_format='csv', pages='all')\n```\n\nsee [an example notebook](https://nbviewer.jupyter.org/github/chezou/tabula-py/blob/master/examples/tabula_example.ipynb) for more details. i also recommend reading [the tutorial article](https://aegis4048.github.io/parse-pdf-files-while-retaining-structure-with-tabula-py) written by [@aegis4048](https://github.com/aegis4048), and [another tutorial](https://www.dunderdata.com/blog/read-trapped-tables-within-pdfs-as-pandas-dataframes) written by [@tdpetrou](https://github.com/tdpetrou).\n\n### contributing\n\ninterested in helping out? i'd love to have your help!\n\nyou can help by:\n\n- [reporting a bug](https://github.com/chezou/tabula-py/issues).\n- adding or editing documentation.\n- contributing code via a pull request. see also [for the contribution](docs/contributing.rst)\n- write a blog post or spread the word about `tabula-py` to people who might be able to benefit from using it.\n\n#### contributors\n\n- [@lahoffm](https://github.com/lahoffm)\n- [@jakekara](https://github.com/jakekara)\n- [@lcd1232](https://github.com/lcd1232)\n- [@kirkholloway](https://github.com/kirkholloway)\n- [@curtlh](https://github.com/curtlh)\n- [@nikhilgk](https://github.com/nikhilgk)\n- [@krassowski](https://github.com/krassowski)\n- [@alexandreio](https://github.com/alexandreio)\n- [@rmneveslh](https://github.com/rmneveslh)\n- [@red-bin](https://github.com/red-bin)\n- [@gallaecio](https://github.com/gallaecio)\n- [@red-bin](https://github.com/red-bin)\n- [@alexandreio](https://github.com/alexandreio)\n- [@bpben](https://github.com/bpben)\n- [@bueddl](https://github.com/bueddl)\n- [@cjotade](https://github.com/cjotade)\n- [@codeboy5](https://github.com/codeboy5)\n- [@manohar-voggu](https://github.com/manohar-voggu)\n- [@deveshsingh06](https://github.com/deveshsingh06)\n- [@grfeller](https://github.com/grfeller)\n- [@djbrown](https://github.com/djbrown)\n- [@swar](https://github.com/swar)\n- [@mvoggu](https://github.com/mvoggu)\n- [@tdpetrou](https://github.com/tdpetrou)\n\n#### another support\n\nyou can also support our continued work on `tabula-py` with a donation on github sponsors or [patreon](https://www.patreon.com/chezou).\n",
  "docs_url": null,
  "keywords": "data frame,pdf,table",
  "license": "the mit license (mit) copyright (c) 2016 michiaki ariga  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.  the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software. ",
  "name": "tabula-py",
  "package_url": "https://pypi.org/project/tabula-py/",
  "project_url": "https://pypi.org/project/tabula-py/",
  "project_urls": {
    "Bug Reports": "https://github.com/chezou/tabula-py/issues",
    "Funding": "https://github.com/sponsors/chezou",
    "Homepage": "https://github.com/chezou/tabula-py"
  },
  "release_url": "https://pypi.org/project/tabula-py/2.9.0/",
  "requires_dist": [
    "pandas >=0.25.3",
    "numpy",
    "distro",
    "pytest ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "black ; extra == 'dev'",
    "isort ; extra == 'dev'",
    "mypy ; extra == 'dev'",
    "Flake8-pyproject ; extra == 'dev'",
    "sphinx ==7.1.2 ; extra == 'doc'",
    "sphinx-rtd-theme ==1.3.0 ; extra == 'doc'",
    "Jinja2 ==3.1.2 ; extra == 'doc'",
    "jpype1 ; extra == 'jpype'",
    "pytest ; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "simple wrapper for tabula-java, read tables from pdf into dataframe",
  "version": "2.9.0",
  "releases": [],
  "developers": [
    "chezou@gmail.com"
  ],
  "kwds": "tabula_example tabula tabulapdf badge dataframe",
  "license_kwds": "copyright license mit liable software",
  "libtype": "pypi",
  "id": "pypi_tabula_py",
  "homepage": "",
  "release_count": 50,
  "dependency_ids": [
    "pypi_black",
    "pypi_distro",
    "pypi_flake8",
    "pypi_flake8_pyproject",
    "pypi_isort",
    "pypi_jinja2",
    "pypi_jpype1",
    "pypi_mypy",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pytest",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http :: dynamic content",
    "topic :: internet :: www/http :: wsgi :: application"
  ],
  "description": "*******\nwebargs\n*******\n\n.. image:: https://badgen.net/pypi/v/webargs\n    :target: https://pypi.org/project/webargs/\n    :alt: pypi version\n\n.. image:: https://dev.azure.com/sloria/sloria/_apis/build/status/marshmallow-code.webargs?branchname=dev\n    :target: https://dev.azure.com/sloria/sloria/_build/latest?definitionid=6&branchname=dev\n    :alt: build status\n\n.. image:: https://readthedocs.org/projects/webargs/badge/\n   :target: https://webargs.readthedocs.io/\n   :alt: documentation\n\n.. image:: https://badgen.net/badge/marshmallow/3\n    :target: https://marshmallow.readthedocs.io/en/latest/upgrading.html\n    :alt: marshmallow 3 compatible\n\n.. image:: https://badgen.net/badge/code%20style/black/000\n    :target: https://github.com/ambv/black\n    :alt: code style: black\n\nhomepage: https://webargs.readthedocs.io/\n\nwebargs is a python library for parsing and validating http request objects, with built-in support for popular web frameworks, including flask, django, bottle, tornado, pyramid, falcon, and aiohttp.\n\n.. code-block:: python\n\n    from flask import flask\n    from webargs import fields\n    from webargs.flaskparser import use_args\n\n    app = flask(__name__)\n\n\n    @app.route(\"/\")\n    @use_args({\"name\": fields.str(required=true)}, location=\"query\")\n    def index(args):\n        return \"hello \" + args[\"name\"]\n\n\n    if __name__ == \"__main__\":\n        app.run()\n\n    # curl http://localhost:5000/\\?name\\='world'\n    # hello world\n\ninstall\n=======\n\n::\n\n    pip install -u webargs\n\nwebargs supports python >= 3.7.\n\n\ndocumentation\n=============\n\nfull documentation is available at https://webargs.readthedocs.io/.\n\nsupport webargs\n===============\n\nwebargs is maintained by a group of \n`volunteers <https://webargs.readthedocs.io/en/latest/authors.html>`_.\nif you'd like to support the future of the project, please consider\ncontributing to our open collective:\n\n.. image:: https://opencollective.com/marshmallow/donate/button.png\n    :target: https://opencollective.com/marshmallow\n    :width: 200\n    :alt: donate to our collective\n\nprofessional support\n====================\n\nprofessionally-supported webargs is available through the\n`tidelift subscription <https://tidelift.com/subscription/pkg/pypi-webargs?utm_source=pypi-webargs&utm_medium=referral&utm_campaign=readme>`_.\n\ntidelift gives software development teams a single source for purchasing and maintaining their software,\nwith professional-grade assurances from the experts who know it best,\nwhile seamlessly integrating with existing tools. [`get professional support`_]\n\n.. _`get professional support`: https://tidelift.com/subscription/pkg/pypi-webargs?utm_source=pypi-webargs&utm_medium=referral&utm_campaign=readme\n\n.. image:: https://user-images.githubusercontent.com/2379650/45126032-50b69880-b13f-11e8-9c2c-abd16c433495.png\n    :target: https://tidelift.com/subscription/pkg/pypi-webargs?utm_source=pypi-webargs&utm_medium=referral&utm_campaign=readme\n    :alt: get supported marshmallow with tidelift\n\nsecurity contact information\n============================\n\nto report a security vulnerability, please use the\n`tidelift security contact <https://tidelift.com/security>`_.\ntidelift will coordinate the fix and disclosure.\n\nproject links\n=============\n\n- docs: https://webargs.readthedocs.io/\n- changelog: https://webargs.readthedocs.io/en/latest/changelog.html\n- contributing guidelines: https://webargs.readthedocs.io/en/latest/contributing.html\n- pypi: https://pypi.python.org/pypi/webargs\n- issues: https://github.com/marshmallow-code/webargs/issues\n- ecosystem / related packages: https://github.com/marshmallow-code/webargs/wiki/ecosystem\n\n\nlicense\n=======\n\nmit licensed. see the `license <https://github.com/marshmallow-code/webargs/blob/dev/license>`_ file for more details.\n",
  "docs_url": null,
  "keywords": "webargs,http,flask,django,bottle,tornado,aiohttp,request,arguments,validation,parameters,rest,api,marshmallow",
  "license": "mit",
  "name": "webargs",
  "package_url": "https://pypi.org/project/webargs/",
  "project_url": "https://pypi.org/project/webargs/",
  "project_urls": {
    "Changelog": "https://webargs.readthedocs.io/en/latest/changelog.html",
    "Funding": "https://opencollective.com/marshmallow",
    "Homepage": "https://github.com/marshmallow-code/webargs",
    "Issues": "https://github.com/marshmallow-code/webargs/issues",
    "Tidelift": "https://tidelift.com/subscription/pkg/pypi-webargs?utm_source=pypi-marshmallow&utm_medium=pypi"
  },
  "release_url": "https://pypi.org/project/webargs/8.3.0/",
  "requires_dist": [
    "marshmallow (>=3.0.0)",
    "packaging",
    "pytest ; extra == 'dev'",
    "pytest-asyncio ; extra == 'dev'",
    "webtest (==3.0.0) ; extra == 'dev'",
    "webtest-aiohttp (==2.0.0) ; extra == 'dev'",
    "pytest-aiohttp (>=0.3.0) ; extra == 'dev'",
    "Flask (>=0.12.5) ; extra == 'dev'",
    "Django (>=2.2.0) ; extra == 'dev'",
    "bottle (>=0.12.13) ; extra == 'dev'",
    "tornado (>=4.5.2) ; extra == 'dev'",
    "pyramid (>=1.9.1) ; extra == 'dev'",
    "falcon (>=2.0.0) ; extra == 'dev'",
    "aiohttp (>=3.0.8) ; extra == 'dev'",
    "mypy (==1.4.1) ; extra == 'dev'",
    "flake8 (==6.0.0) ; extra == 'dev'",
    "flake8-bugbear (==23.6.5) ; extra == 'dev'",
    "pre-commit (<4.0,>=2.4) ; extra == 'dev'",
    "tox ; extra == 'dev'",
    "Sphinx (==7.0.1) ; extra == 'docs'",
    "sphinx-issues (==3.0.1) ; extra == 'docs'",
    "furo (==2023.5.20) ; extra == 'docs'",
    "Flask (>=0.12.5) ; extra == 'docs'",
    "Django (>=2.2.0) ; extra == 'docs'",
    "bottle (>=0.12.13) ; extra == 'docs'",
    "tornado (>=4.5.2) ; extra == 'docs'",
    "pyramid (>=1.9.1) ; extra == 'docs'",
    "falcon (>=2.0.0) ; extra == 'docs'",
    "aiohttp (>=3.0.8) ; extra == 'docs'",
    "Flask (>=0.12.5) ; extra == 'frameworks'",
    "Django (>=2.2.0) ; extra == 'frameworks'",
    "bottle (>=0.12.13) ; extra == 'frameworks'",
    "tornado (>=4.5.2) ; extra == 'frameworks'",
    "pyramid (>=1.9.1) ; extra == 'frameworks'",
    "falcon (>=2.0.0) ; extra == 'frameworks'",
    "aiohttp (>=3.0.8) ; extra == 'frameworks'",
    "mypy (==1.4.1) ; extra == 'lint'",
    "flake8 (==6.0.0) ; extra == 'lint'",
    "flake8-bugbear (==23.6.5) ; extra == 'lint'",
    "pre-commit (<4.0,>=2.4) ; extra == 'lint'",
    "pytest ; extra == 'tests'",
    "pytest-asyncio ; extra == 'tests'",
    "webtest (==3.0.0) ; extra == 'tests'",
    "webtest-aiohttp (==2.0.0) ; extra == 'tests'",
    "pytest-aiohttp (>=0.3.0) ; extra == 'tests'",
    "Flask (>=0.12.5) ; extra == 'tests'",
    "Django (>=2.2.0) ; extra == 'tests'",
    "bottle (>=0.12.13) ; extra == 'tests'",
    "tornado (>=4.5.2) ; extra == 'tests'",
    "pyramid (>=1.9.1) ; extra == 'tests'",
    "falcon (>=2.0.0) ; extra == 'tests'",
    "aiohttp (>=3.0.8) ; extra == 'tests'"
  ],
  "requires_python": ">=3.7.2",
  "summary": "declarative parsing and validation of http request objects, with built-in support for popular web frameworks, including flask, django, bottle, tornado, pyramid, falcon, and aiohttp.",
  "version": "8.3.0",
  "releases": [],
  "developers": [
    "sloria1@gmail.com",
    "steven_loria"
  ],
  "kwds": "webargs _apis documentation flaskparser api",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_webargs",
  "homepage": "https://github.com/marshmallow-code/webargs",
  "release_count": 100,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_bottle",
    "pypi_django",
    "pypi_falcon",
    "pypi_flake8",
    "pypi_flake8_bugbear",
    "pypi_flask",
    "pypi_furo",
    "pypi_marshmallow",
    "pypi_mypy",
    "pypi_packaging",
    "pypi_pre_commit",
    "pypi_pyramid",
    "pypi_pytest",
    "pypi_pytest_aiohttp",
    "pypi_pytest_asyncio",
    "pypi_sphinx",
    "pypi_sphinx_issues",
    "pypi_tornado",
    "pypi_tox",
    "pypi_webtest",
    "pypi_webtest_aiohttp"
  ]
}
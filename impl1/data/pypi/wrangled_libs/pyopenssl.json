{
  "classifiers": [
    "development status :: 6 - mature",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: security :: cryptography",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: networking"
  ],
  "description": "========================================================\npyopenssl -- a python wrapper around the openssl library\n========================================================\n\n.. image:: https://readthedocs.org/projects/pyopenssl/badge/?version=stable\n   :target: https://pyopenssl.org/en/stable/\n   :alt: stable docs\n\n.. image:: https://github.com/pyca/pyopenssl/workflows/ci/badge.svg?branch=main\n   :target: https://github.com/pyca/pyopenssl/actions?query=workflow%3aci+branch%3amain\n\n.. image:: https://codecov.io/github/pyca/pyopenssl/branch/main/graph/badge.svg\n   :target: https://codecov.io/github/pyca/pyopenssl\n   :alt: test coverage\n\n**note:** the python cryptographic authority **strongly suggests** the use of `pyca/cryptography`_\nwhere possible. if you are using pyopenssl for anything other than making a tls connection\n**you should move to cryptography and drop your pyopenssl dependency**.\n\nhigh-level wrapper around a subset of the openssl library. includes\n\n* ``ssl.connection`` objects, wrapping the methods of python's portable sockets\n* callbacks written in python\n* extensive error-handling mechanism, mirroring openssl's error codes\n\n... and much more.\n\nyou can find more information in the documentation_.\ndevelopment takes place on github_.\n\n\ndiscussion\n==========\n\nif you run into bugs, you can file them in our `issue tracker`_.\n\nwe maintain a cryptography-dev_ mailing list for both user and development discussions.\n\nyou can also join ``#pyca`` on ``irc.libera.chat`` to ask questions or get involved.\n\n\n.. _documentation: https://pyopenssl.org/\n.. _`issue tracker`: https://github.com/pyca/pyopenssl/issues\n.. _cryptography-dev: https://mail.python.org/mailman/listinfo/cryptography-dev\n.. _github: https://github.com/pyca/pyopenssl\n.. _`pyca/cryptography`: https://github.com/pyca/cryptography\n\n\nrelease information\n===================\n\n23.3.0 (2023-10-25)\n-------------------\n\nbackward-incompatible changes:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- dropped support for python 3.6.\n- the minimum ``cryptography`` version is now 41.0.5.\n- removed ``openssl.crypto.loads_pkcs7`` and ``openssl.crypto.loads_pkcs12`` which had been deprecated for 3 years.\n- added ``openssl.ssl.op_legacy_server_connect`` to allow legacy insecure renegotiation between openssl and unpatched servers.\n  `#1234 <https://github.com/pyca/pyopenssl/pull/1234>`_.\n\ndeprecations:\n^^^^^^^^^^^^^\n\n- deprecated ``openssl.crypto.pkcs12`` (which was intended to have been deprecated at the same time as ``openssl.crypto.load_pkcs12``).\n- deprecated ``openssl.crypto.netscapespki``.\n- deprecated ``openssl.crypto.crl``\n- deprecated ``openssl.crypto.revoked``\n- deprecated ``openssl.crypto.load_crl`` and ``openssl.crypto.dump_crl``\n- deprecated ``openssl.crypto.sign`` and ``openssl.crypto.verify``\n- deprecated ``openssl.crypto.x509extension``\n\nchanges:\n^^^^^^^^\n\n- changed ``openssl.crypto.x509store.add_crl`` to also accept\n  ``cryptography``'s ``x509.certificaterevocationlist`` arguments in addition\n  to the now deprecated ``openssl.crypto.crl`` arguments.\n- fixed ``test_set_default_verify_paths`` test so that it is skipped if no\n  network connection is available.\n\n23.2.0 (2023-05-30)\n-------------------\n\nbackward-incompatible changes:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- removed ``x509storeflags.notify_policy``.\n  `#1213 <https://github.com/pyca/pyopenssl/pull/1213>`_.\n\ndeprecations:\n^^^^^^^^^^^^^\n\nchanges:\n^^^^^^^^\n\n- ``cryptography`` maximum version has been increased to 41.0.x.\n- invalid versions are now rejected in ``openssl.crypto.x509req.set_version``.\n- added ``x509verificationcodes`` to ``openssl.ssl``.\n  `#1202 <https://github.com/pyca/pyopenssl/pull/1202>`_.\n\n23.1.1 (2023-03-28)\n-------------------\n\nbackward-incompatible changes:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ndeprecations:\n^^^^^^^^^^^^^\n\nchanges:\n^^^^^^^^\n\n- worked around an issue in openssl 3.1.0 which caused `x509extension.get_short_name` to raise an exception when no short name was known to openssl.\n  `#1204 <https://github.com/pyca/pyopenssl/pull/1204>`_.\n\n23.1.0 (2023-03-24)\n-------------------\n\nbackward-incompatible changes:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ndeprecations:\n^^^^^^^^^^^^^\n\nchanges:\n^^^^^^^^\n\n- ``cryptography`` maximum version has been increased to 40.0.x.\n- add ``openssl.ssl.connection.dtlsv1_get_timeout`` and ``openssl.ssl.connection.dtlsv1_handle_timeout``\n  to support dtls timeouts `#1180 <https://github.com/pyca/pyopenssl/pull/1180>`_.\n\n23.0.0 (2023-01-01)\n-------------------\n\nbackward-incompatible changes:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ndeprecations:\n^^^^^^^^^^^^^\n\nchanges:\n^^^^^^^^\n\n- add ``openssl.ssl.x509storeflags.partial_chain`` constant to allow for users\n  to perform certificate verification on partial certificate chains.\n  `#1166 <https://github.com/pyca/pyopenssl/pull/1166>`_\n- ``cryptography`` maximum version has been increased to 39.0.x.\n\n22.1.0 (2022-09-25)\n-------------------\n\nbackward-incompatible changes:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- remove support for sslv2 and sslv3.\n- the minimum ``cryptography`` version is now 38.0.x (and we now pin releases\n  against ``cryptography`` major versions to prevent future breakage)\n- the ``openssl.crypto.x509storecontexterror`` exception has been refactored,\n  changing its internal attributes.\n  `#1133 <https://github.com/pyca/pyopenssl/pull/1133>`_\n\ndeprecations:\n^^^^^^^^^^^^^\n\n- ``openssl.ssl.ssleay_version`` is deprecated in favor of\n  ``openssl.ssl.openssl_version``. the constants ``openssl.ssl.ssleay_*`` are\n  deprecated in favor of ``openssl.ssl.openssl_*``.\n\nchanges:\n^^^^^^^^\n\n- add ``openssl.ssl.connection.set_verify`` and ``openssl.ssl.connection.get_verify_mode``\n  to override the context object's verification flags.\n  `#1073 <https://github.com/pyca/pyopenssl/pull/1073>`_\n- add ``openssl.ssl.connection.use_certificate`` and ``openssl.ssl.connection.use_privatekey``\n  to set a certificate per connection (and not just per context) `#1121 <https://github.com/pyca/pyopenssl/pull/1121>`_.\n\n22.0.0 (2022-01-29)\n-------------------\n\nbackward-incompatible changes:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- drop support for python 2.7.\n  `#1047 <https://github.com/pyca/pyopenssl/pull/1047>`_\n- the minimum ``cryptography`` version is now 35.0.\n\ndeprecations:\n^^^^^^^^^^^^^\n\nchanges:\n^^^^^^^^\n\n- expose wrappers for some `dtls\n  <https://en.wikipedia.org/wiki/datagram_transport_layer_security>`_\n  primitives. `#1026 <https://github.com/pyca/pyopenssl/pull/1026>`_\n\n21.0.0 (2021-09-28)\n-------------------\n\nbackward-incompatible changes:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- the minimum ``cryptography`` version is now 3.3.\n- drop support for python 3.5\n\ndeprecations:\n^^^^^^^^^^^^^\n\nchanges:\n^^^^^^^^\n\n- raise an error when an invalid alpn value is set.\n  `#993 <https://github.com/pyca/pyopenssl/pull/993>`_\n- added ``openssl.ssl.context.set_min_proto_version`` and ``openssl.ssl.context.set_max_proto_version``\n  to set the minimum and maximum supported tls version `#985 <https://github.com/pyca/pyopenssl/pull/985>`_.\n- updated ``to_cryptography`` and ``from_cryptography`` methods to support an upcoming release of ``cryptography`` without raising deprecation warnings.\n  `#1030 <https://github.com/pyca/pyopenssl/pull/1030>`_\n\n20.0.1 (2020-12-15)\n-------------------\n\nbackward-incompatible changes:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ndeprecations:\n^^^^^^^^^^^^^\n\nchanges:\n^^^^^^^^\n\n- fixed compatibility with openssl 1.1.0.\n\n20.0.0 (2020-11-27)\n-------------------\n\n\nbackward-incompatible changes:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- the minimum ``cryptography`` version is now 3.2.\n- remove deprecated ``openssl.tsafe`` module.\n- removed deprecated ``openssl.ssl.context.set_npn_advertise_callback``, ``openssl.ssl.context.set_npn_select_callback``, and ``openssl.ssl.connection.get_next_proto_negotiated``.\n- drop support for python 3.4\n- drop support for openssl 1.0.1 and 1.0.2\n\ndeprecations:\n^^^^^^^^^^^^^\n\n- deprecated ``openssl.crypto.loads_pkcs7`` and ``openssl.crypto.loads_pkcs12``.\n\nchanges:\n^^^^^^^^\n\n- added a new optional ``chain`` parameter to ``openssl.crypto.x509storecontext()``\n  where additional untrusted certificates can be specified to help chain building.\n  `#948 <https://github.com/pyca/pyopenssl/pull/948>`_\n- added ``openssl.crypto.x509store.load_locations`` to set trusted\n  certificate file bundles and/or directories for verification.\n  `#943 <https://github.com/pyca/pyopenssl/pull/943>`_\n- added ``context.set_keylog_callback`` to log key material.\n  `#910 <https://github.com/pyca/pyopenssl/pull/910>`_\n- added ``openssl.ssl.connection.get_verified_chain`` to retrieve the\n  verified certificate chain of the peer.\n  `#894 <https://github.com/pyca/pyopenssl/pull/894>`_.\n- make verification callback optional in ``context.set_verify``.\n  if omitted, openssl's default verification is used.\n  `#933 <https://github.com/pyca/pyopenssl/pull/933>`_\n- fixed a bug that could truncate or cause a zero-length key error due to a\n  null byte in private key passphrase in ``openssl.crypto.load_privatekey``\n  and ``openssl.crypto.dump_privatekey``.\n  `#947 <https://github.com/pyca/pyopenssl/pull/947>`_\n\n19.1.0 (2019-11-18)\n-------------------\n\n\nbackward-incompatible changes:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- removed deprecated ``contexttype``, ``connectiontype``, ``pkeytype``, ``x509nametype``, ``x509reqtype``, ``x509type``, ``x509storetype``, ``crltype``, ``pkcs7type``, ``pkcs12type``, and ``netscapespkitype`` aliases.\n  use the classes without the ``type`` suffix instead.\n  `#814 <https://github.com/pyca/pyopenssl/pull/814>`_\n- the minimum ``cryptography`` version is now 2.8 due to issues on macos with a transitive dependency.\n  `#875 <https://github.com/pyca/pyopenssl/pull/875>`_\n\ndeprecations:\n^^^^^^^^^^^^^\n\n- deprecated ``openssl.ssl.context.set_npn_advertise_callback``, ``openssl.ssl.context.set_npn_select_callback``, and ``openssl.ssl.connection.get_next_proto_negotiated``.\n  alpn should be used instead.\n  `#820 <https://github.com/pyca/pyopenssl/pull/820>`_\n\n\nchanges:\n^^^^^^^^\n\n- support ``bytearray`` in ``ssl.connection.send()`` by using cffi's from_buffer.\n  `#852 <https://github.com/pyca/pyopenssl/pull/852>`_\n- the ``openssl.ssl.context.set_alpn_select_callback`` can return a new ``no_overlapping_protocols`` sentinel value\n  to allow a tls handshake to complete without an application protocol.\n\n`full changelog <https://pyopenssl.org/en/stable/changelog.html>`_.\n\n",
  "docs_url": "https://pythonhosted.org/pyOpenSSL/",
  "keywords": "",
  "license": "apache license, version 2.0",
  "name": "pyopenssl",
  "package_url": "https://pypi.org/project/pyOpenSSL/",
  "project_url": "https://pypi.org/project/pyOpenSSL/",
  "project_urls": {
    "Homepage": "https://pyopenssl.org/",
    "Source": "https://github.com/pyca/pyopenssl"
  },
  "release_url": "https://pypi.org/project/pyOpenSSL/23.3.0/",
  "requires_dist": [
    "cryptography <42,>=41.0.5",
    "sphinx !=5.2.0,!=5.2.0.post0,!=7.2.5 ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "flaky ; extra == 'test'",
    "pretend ; extra == 'test'",
    "pytest >=3.0.1 ; extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "python wrapper module around the openssl library",
  "version": "23.3.0",
  "releases": [],
  "developers": [
    "cryptography-dev@python.org",
    "the_pyopenssl_developers"
  ],
  "kwds": "openssl openssl_ badge openssl_version pyopenssl",
  "license_kwds": "apache license, version 2.0",
  "libtype": "pypi",
  "id": "pypi_pyopenssl",
  "homepage": "https://pyopenssl.org/",
  "release_count": 34,
  "dependency_ids": [
    "pypi_cryptography",
    "pypi_flaky",
    "pypi_pretend",
    "pypi_pytest",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme"
  ]
}
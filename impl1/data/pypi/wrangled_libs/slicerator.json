{
  "classifiers": [
    "development status :: 4 - beta",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "slicerator\n==========\n\na lazy-loading, fancy-slicable iterable\n\nthink of it like a generator that is \"reusable\" and has a length.\n\n[please see the documentation](http://slicerator.readthedocs.io/en/latest/) for examples and an api reference.\n\n[![build status](https://travis-ci.org/soft-matter/slicerator.png?branch=master)](https://travis-ci.org/soft-matter/slicerator) [![documentation status](https://readthedocs.org/projects/slicerator/badge/?version=latest)](http://slicerator.readthedocs.io/en/latest/?badge=latest)\n\ninstallation\n------------\n\non any platform, use pip or conda.\n\n`pip install slicerator`\n\nor\n\n`conda install -c conda-forge slicerator`\n\nexample\n-------\n\n```python\nfrom slicerator import slicerator\n\n@slicerator.from_class\nclass mylazyloader:\n    def __getitem__(self, i):\n        # this method will be wrapped by slicerator, so that it accepts slices,\n        # lists of integers, or boolean masks. code below will only be executed\n        # when an integer is used.\n\n        # load thing number i\n        return thing\n\n    def __len__(self):\n        # do stuff\n        return number_of_things\n\n\n# demo:\n>>> a = mylazyloader()\n>>> s1 = a[::2]  # no data is loaded yet\n>>> s2 = s1[1:]  # no data is loaded yet\n>>> some_data = s2[0]\n```\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "slicerator",
  "package_url": "https://pypi.org/project/slicerator/",
  "project_url": "https://pypi.org/project/slicerator/",
  "project_urls": {
    "Homepage": "http://github.com/soft-matter/slicerator"
  },
  "release_url": "https://pypi.org/project/slicerator/1.1.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a lazy-loading, fancy-sliceable iterable.",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "daniel.b.allan@gmail.com",
    "daniel_b"
  ],
  "kwds": "slicerator sliceable slices generator pip",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_slicerator",
  "homepage": "http://github.com/soft-matter/slicerator",
  "release_count": 10,
  "dependency_ids": []
}
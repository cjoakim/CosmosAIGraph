{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8"
  ],
  "description": "# pytest-dotenv\n\nthis little plugin uses `python-dotenv` to load any environment variables from a `.env` file. extra configuration can be defined in any `pytest` config files, such as `pytest.ini`, `tox.ini` and so on.\n\n## installation\n\ninstall the plugin with `pip`:\n\n```\n$ pip install pytest-dotenv\n```\n\n## basic usage\n\nif all you want is to load environment variables from a `.env` file then installing the plugin is all that is needed. `python-dotenv` will automatically detect your `.env` file and load it. by default, the plugin won't override any existing system variables.\n\n\n## non-default configuration\n\n### custom environment variable files\n\nadd a new section to a config file named `env_vars`.\nyou can list as many files as necessary:\n\n```\n[pytest]\nenv_files =\n    .env\n    .test.env\n    .deploy.env\n```\n\nthe files will be loaded and added to the `os.environ` dict object before\nany tests are run. if the files are not found on the working directory, it will search for the files in the ancestor directory and upwards.\n\n### overriding existing values\n\nby default the plugin will not override any variables already defined in the\nprocess' environment. if you want that behavior, you have to use the\n`env_override_existing_values` setting:\n\n```\n[pytest]\nenv_override_existing_values = 1\nenv_files =\n    .env\n    .test.env\n    .deploy.env\n```\n\n### alternative: specify the file at the command line\n\nyou also have the option to run your tests with `py.test --envfile path/to/.env`.\nthis will load all defined environment variables and overwrite any existing ones regardless of the configuration `env_override_existing_values`.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "pytest-dotenv",
  "package_url": "https://pypi.org/project/pytest-dotenv/",
  "project_url": "https://pypi.org/project/pytest-dotenv/",
  "project_urls": {
    "Download": "https://github.com/quiqua/pytest-dotenv/tarball/0.5.2",
    "Homepage": "https://github.com/quiqua/pytest-dotenv"
  },
  "release_url": "https://pypi.org/project/pytest-dotenv/0.5.2/",
  "requires_dist": [
    "pytest (>=5.0.0)",
    "python-dotenv (>=0.9.1)"
  ],
  "requires_python": "",
  "summary": "a py.test plugin that parses environment files before running tests",
  "version": "0.5.2",
  "releases": [],
  "developers": [
    "marcel@quiqua.eu",
    "marcel_radischat"
  ],
  "kwds": "env_files env_vars envfile pytest env_override_existing_values",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pytest_dotenv",
  "homepage": "https://github.com/quiqua/pytest-dotenv",
  "release_count": 9,
  "dependency_ids": [
    "pypi_pytest",
    "pypi_python_dotenv"
  ]
}
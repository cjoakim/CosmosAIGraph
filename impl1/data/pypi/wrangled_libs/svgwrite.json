{
  "classifiers": [
    "development status :: 7 - inactive",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: multimedia :: graphics",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "svgwrite\n========\n\nthis package is inactive! no new features will be added, there will\nbe no change of behavior, just bugfixes will be merged.\n\nabstract\n--------\n\na python library to create svg drawings.\n\na simple example::\n\n    import svgwrite\n\n    dwg = svgwrite.drawing('test.svg', profile='tiny')\n    dwg.add(dwg.line((0, 0), (10, 0), stroke=svgwrite.rgb(10, 10, 16, '%')))\n    dwg.add(dwg.text('test', insert=(0, 0.2), fill='red'))\n    dwg.save()\n\nfor more examples see: examples.py\n\nas the name `svgwrite` implies, `svgwrite` creates new svg drawings, it does not read existing drawings and also does\nnot import existing drawings, but you can always include other svg drawings by the <image> entity.\n\n`svgwrite` is a pure python package and has no external dependencies.\n\ninstallation\n------------\n\nwith pip::\n\n    pip install svgwrite\n\nor from source::\n\n    python setup.py install\n\n\ndocumentation\n-------------\n\nhttp://readthedocs.org/docs/svgwrite/\n\nsvgwrite can be found on github.com at:\n\nhttp://github.com/mozman/svgwrite.git\n\ncontact\n-------\n\nsvgwrite@mozman.at\n\nnews\n====\n\nversion 1.4.3 - 2022-07-14\n--------------------------\n\n* bugfix: `#114 <https://github.com/mozman/svgwrite/pull/114>`_ polyline validation by @normanrz\n\nversion 1.4.2 - 2022-03-23\n--------------------------\n\n* this package is inactive!\n\n  * no new features will be added.\n  * there will be no change of behavior.\n  * only bugfixes will be merged.\n\n* merged some contributions and bugfixes.\n\nversion 1.4.1 - 2021-01-15\n--------------------------\n\n* this package is in maintenance mode, no new features will be added, there will\n  be no change of behavior, just bugfixes will be merged.\n* merged some contributions and bugfixes.\n\nversion 1.4 - 2020-03-28\n------------------------\n\n* requires python 3.6\n* removed python2 support\n* optimized/faster ``svgparser.py`` module by florian festi\n* removed batch files to run tests on windows, use ``pytest`` or ``tox`` instead\n\nversion 1.3.1 - 2019-06-28\n--------------------------\n\n* bugfix: changed license of module shapes.py to mit license\n\nversion 1.3.0 - 2019-06-23\n--------------------------\n\n* dropping python 2 support in v1.4\n* new: easy stylesheet embedding: `drawing.embed_stylesheet(content)`, see example `using_fonts.py <https://github.com/mozman/svgwrite/blob/9d509fe1842e519b8d8475f83543a7589b7c1879/examples/using_fonts.py#l21>`_\n* new: embedded local fonts: `drawing.embed_font(fontname, filename)`, see example using_fonts.py\n* new: embedded web fonts: `drawing.embed_google_web_font(fontname, uri)`, see example using_fonts.py\n* new: shapes extension by `christof hanke <https://www.induhviduals.de/>`_\n* new: for write(), save() and saveas(), indentation for pretty print is configurable by `mitar <http://mitar.tnode.com/>`_\n* bugfix: converted regex strings in tests to raw strings by `tirkarthi <http://tirkarthi.github.io/>`_\n\nversion 1.2.1 - 2018-11-16\n--------------------------\n\n* bugfix: python 2 pretty print encoding issue\n\nversion 1.2.0 - 2018-10-27\n--------------------------\n\n* new: inkscape extension - support for inkscape layers\n* bugfix: compatibility with python 3.7 by fixing re.split() usage\n\nversion 1.1.12 - 2017-12-27\n---------------------------\n\n* bugfix: values attribute for element animate, accepts any semicolon separated values\n\nversion 1.1.11 - 2017-05-31\n---------------------------\n\n* changed: e.set_markers((sm, mm, em)), accepts none/false values to set markers individually, like just set end\n  marker: s.set_markers((none, false, em))\n* bugfix: text-decoration attribute accepts multiple values like 'underline overline'\n\nversion 1.1.10 - 2017-01-28\n---------------------------\n\n* new: added `pretty` argument to `drawing.write`, `drawing.save` and `drawing.saveas` to produce easy to read xml\n  output, svgwrite reparses the output string with minidom, this reduces the performance because this process requires\n  memory and runtime, default value for `pretty` is false.\n* moved repository to github.com: http://github.com/mozman/svgwrite.git\n\nversion 1.1.9 - 2016-10-26\n--------------------------\n\n* new: added solidcolor paint server (only valid in the tiny 1.2 profile)\n\nversion 1.1.8 - 2016-05-31\n--------------------------\n\n* bugfix: none checks: 'if value:' -> 'if value is not none:'\n\nversion 1.1.7 - 2016-05-22\n--------------------------\n\n* bugfix: color accepts percentage values as floats like \"rgb(10.2%, 3.78%, 20%)\"\n\nversion 1.1.6 - 2014-05-30\n--------------------------\n\n* bugfix: sign for offset-value wasn't optional\n\nversion 1.1.5 - 2014-03-26\n--------------------------\n\n* bugfix: xml serialization for cpython 3.4.0\n\nversion 1.1.4 - 2014-03-16\n--------------------------\n\n* simplified path parser\n* pyparsing as external dependency (by jenselme)\n\nversion 1.1.3 - 2013-10-01\n--------------------------\n\n* updated pyparsing for python 3 to version 2.0.1 (prior version caused memory leaks)\n* bugfix: utf8 to unicode encoding error for python 2.7\n* tests for python 3 require cpython3.3 or newer, using the 'u' prefix.\n\nversion 1.1.2 - 2013-01-08\n--------------------------\n\n* prevent setup.py from compiling all modules - error with 'pyparsing_py2.py' and python3\n* bugfix: all tests run with cpython3.3\n\nversion 1.1.1 - 2012-08-15\n--------------------------\n\n* license changed to mit license\n* tested with cpython2.7, cpython3.2, cpython3.3 and pypy-1.9 on win7 pro 32-bit\n* bugfix: dwg.animatetranform() -> dwg.animatetransform()\n* bugfix: in examples, replaced width and height params by size parameter\n* added examples\n* edit docs\n\nversion 1.0.1 - 2012-06-08\n--------------------------\n\n* added inline stylesheets\n* added examples created by lawrence tattrie\n\nversion 1.0.0 - 2012-05-27\n--------------------------\n\n* stable\n* tested with cpython 2.7, cpython 3.2, pypy-1.8\n* added script tag - thx to jmahmood\n* docs also available at: http://readthedocs.org/docs/svgwrite\n\nversion 0.2.4 - 2011-12-30\n--------------------------\n\n* beta version\n* python 2.7: all strings will be converted by the unicode() function, for strings containing none-ascii-characters use\n  prefix ``u\"\"`` or better use ``from __future__ import unicode_literals``, because this is python 3 compatible.\n* tested with cpython 2.7, cpython 3.2, and pypy 1.7\n* bugfix: color parsing accepts white spaces in ``rgb()`` like ``rgb(0, 0, 0)``\n\nversion 0.2.3 - 2010-11-13\n--------------------------\n\n* beta version\n* python 3.1 support\n* splitted examples.py into several files and moved them to the subdir 'examples'\n\nversion 0.2.2 - 2010-11-05\n--------------------------\n\n* alpha version\n* removed 'attribs' parameter from all constructors\n* new elements: set, animate, animatemotion, animatecolor, animatetransform, all filter elements\n* added set_desc(title, desc), set_metadata(xmldata) to baseelement class\n* moved content of interfaces.py to mixins.py, (itransform -> transform and so on)\n\nversion 0.2.1 - 2010-10-31\n--------------------------\n\n* alpha version\n* new elements: marker, clippath, mask\n* paint service: lineargradient, radialgradient, pattern\n\nversion 0.2.0 - 2010-10-24\n--------------------------\n\n* alpha version\n* validator rewritten as validator2.py\n* debug and profile options separated for each drawing object\n* important change: create objects with factory functions of the *drawing* class: drawing.<svg-elementname>(...)\n* added mixins for setting stroke and fill properties\n* new elements: hyperlink, image, textarea,\n\nversion 0.1.0 - 2010-09-26\n--------------------------\n\n* alpha version\n* new elements:\n\n    * basic shapes: line, rect, circle, ellipse, polyline, polygon, path\n    * text elements: text, tspan, tref, textpath\n    * container elements: group, symbol, svg, use, defs\n\n* for examples see: examples.py\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "svgwrite",
  "package_url": "https://pypi.org/project/svgwrite/",
  "project_url": "https://pypi.org/project/svgwrite/",
  "project_urls": {
    "Download": "http://github.com/mozman/svgwrite/releases",
    "Homepage": "http://github.com/mozman/svgwrite.git"
  },
  "release_url": "https://pypi.org/project/svgwrite/1.4.3/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "a python library to create svg drawings.",
  "version": "1.4.3",
  "releases": [],
  "developers": [
    "manfred_moitzi",
    "me@mozman.at"
  ],
  "kwds": "svgwrite dwg svg inkscape drawing",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_svgwrite",
  "homepage": "http://github.com/mozman/svgwrite.git",
  "release_count": 26,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: asyncio",
    "framework :: trio",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": ".. image:: https://img.shields.io/badge/chat-join%20now-blue.svg\n   :target: https://gitter.im/python-trio/general\n   :alt: join chatroom\n\n.. image:: https://img.shields.io/badge/docs-read%20now-blue.svg\n   :target: https://sniffio.readthedocs.io/en/latest/?badge=latest\n   :alt: documentation status\n\n.. image:: https://img.shields.io/pypi/v/sniffio.svg\n   :target: https://pypi.org/project/sniffio\n   :alt: latest pypi version\n   \n.. image:: https://img.shields.io/conda/vn/conda-forge/sniffio.svg\n   :target: https://anaconda.org/conda-forge/sniffio \n   :alt: latest conda-forge version   \n\n.. image:: https://travis-ci.org/python-trio/sniffio.svg?branch=master\n   :target: https://travis-ci.org/python-trio/sniffio\n   :alt: automated test status\n\n.. image:: https://codecov.io/gh/python-trio/sniffio/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/python-trio/sniffio\n   :alt: test coverage\n\n=================================================================\nsniffio: sniff out which async library your code is running under\n=================================================================\n\nyou're writing a library. you've decided to be ambitious, and support\nmultiple async i/o packages, like `trio\n<https://trio.readthedocs.io>`__, and `asyncio\n<https://docs.python.org/3/library/asyncio.html>`__, and ... you've\nwritten a bunch of clever code to handle all the differences. but...\nhow do you know *which* piece of clever code to run?\n\nthis is a tiny package whose only purpose is to let you detect which\nasync library your code is running under.\n\n* documentation: https://sniffio.readthedocs.io\n\n* bug tracker and source code: https://github.com/python-trio/sniffio\n\n* license: mit or apache license 2.0, your choice\n\n* contributor guide: https://trio.readthedocs.io/en/latest/contributing.html\n\n* code of conduct: contributors are requested to follow our `code of\n  conduct\n  <https://trio.readthedocs.io/en/latest/code-of-conduct.html>`_\n  in all project spaces.\n\nthis library is maintained by the trio project, as a service to the\nasync python community as a whole.\n\n\nquickstart\n----------\n\n.. code-block:: python3\n\n   from sniffio import current_async_library\n   import trio\n   import asyncio\n\n   async def print_library():\n       library = current_async_library()\n       print(\"this is:\", library)\n\n   # prints \"this is trio\"\n   trio.run(print_library)\n\n   # prints \"this is asyncio\"\n   asyncio.run(print_library())\n\nfor more details, including how to add support to new async libraries,\n`please peruse our fine manual <https://sniffio.readthedocs.io>`__.\n",
  "docs_url": null,
  "keywords": "async,trio,asyncio",
  "license": "mit or apache-2.0",
  "name": "sniffio",
  "package_url": "https://pypi.org/project/sniffio/",
  "project_url": "https://pypi.org/project/sniffio/",
  "project_urls": {
    "Homepage": "https://github.com/python-trio/sniffio"
  },
  "release_url": "https://pypi.org/project/sniffio/1.3.0/",
  "requires_dist": [],
  "requires_python": ">=3.7",
  "summary": "sniff out which async library your code is running under",
  "version": "1.3.0",
  "releases": [],
  "developers": [
    "nathaniel_j",
    "njs@pobox.com"
  ],
  "kwds": "python3 sniffio shields asyncio svg",
  "license_kwds": "mit or apache-2.0",
  "libtype": "pypi",
  "id": "pypi_sniffio",
  "homepage": "https://github.com/python-trio/sniffio",
  "release_count": 5,
  "dependency_ids": []
}
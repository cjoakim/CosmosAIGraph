{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: gnu lesser general public license v3 or later (lgplv3+)",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": "\n<img align=left src=\"https://raw.githubusercontent.com/danielhrisca/asammdf/master/asammdf.png\" width=\"128\" height=\"128\" />\n\n<p align=center>\n\n*asammdf* is a fast parser and editor for asam (association for standardization of automation and measuring systems) mdf (measurement data format) files.\n\n*asammdf* supports mdf versions 2 (.dat), 3 (.mdf) and 4 (.mf4).\n\n*asammdf* works on python >= 3.8\n\n</p>\n\n<img align=left src=\"https://raw.githubusercontent.com/danielhrisca/asammdf/master/gui.png\"/>\n\n# status\n\n| continuous integration                                                                                                                                                                      | coveralls                                                                                                                                                            | codacy                                                                                                                                                                                                                                                       | readthedocs                                                                                                                                     |\n| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------- |\n| [![continuous integration](https://github.com/danielhrisca/asammdf/actions/workflows/main.yml/badge.svg?branch=master)](https://github.com/danielhrisca/asammdf/actions/workflows/main.yml) | [![coverage status](https://coveralls.io/repos/github/danielhrisca/asammdf/badge.svg?branch=master)](https://coveralls.io/github/danielhrisca/asammdf?branch=master) | [![codacy badge](https://api.codacy.com/project/badge/grade/a3da21da90ca43a5b72fc24b56880c99?branch=master)](https://www.codacy.com/app/danielhrisca/asammdf?utm_source=github.com&utm_medium=referral&utm_content=danielhrisca/asammdf&utm_campaign=badger) | [![documentation status](http://readthedocs.org/projects/asammdf/badge/?version=master)](http://asammdf.readthedocs.io/en/master/?badge=stable) |\n\n| pypi                                                                                      | conda-forge                                                                                                                     |\n| ----------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------- |\n| [![pypi version](https://badge.fury.io/py/asammdf.svg)](https://badge.fury.io/py/asammdf) | [![conda-forge version](https://anaconda.org/conda-forge/asammdf/badges/version.svg)](https://anaconda.org/conda-forge/asammdf) |\n\n# project goals\nthe main goals for this library are:\n\n* to be faster than the other python based mdf libraries\n* to have clean and easy to understand code base\n* to have minimal 3-rd party dependencies\n\n# features\n\n* create new mdf files from scratch\n* append new channels\n* read unsorted mdf v3 and v4 files\n* read can and lin bus logging files\n* extract can and lin signals from anonymous bus logging measurements\n* filter a subset of channels from original mdf file\n* cut measurement to specified time interval\n* convert to different mdf version\n* export to hdf5, matlab (v7.3), csv and parquet\n* merge multiple files sharing the same internal structure\n* read and save mdf version 4.10 files containing zipped data blocks\n* space optimizations for saved files (no duplicated blocks)\n* split large data blocks (configurable size) for mdf version 4\n* full support (read, append, save) for the following map types (multidimensional array channels):\n\n    * mdf version 3 channels with cdblock\n    * mdf version 4 structure channel composition\n    * mdf version 4 channel arrays with cntemplate storage and one of the array types:\n\n        * 0 - array\n        * 1 - scaling axis\n        * 2 - look-up\n\n* add and extract attachments for mdf version 4\n* handle large files (for example merging two fileas, each with 14000 channels and 5gb size, on a raspberrypi)\n* extract channel data, master channel and extra channel information as *signal* objects for unified operations with v3 and v4 files\n* time domain operation using the *signal* class\n\n    * pandas data frames are good if all the channels have the same time based\n    * a measurement will usually have channels from different sources at different rates\n    * the *signal* class facilitates operations with such channels\n\n * graphical interface to visualize channels and perform operations with the files\n\n# major features not implemented (yet)\n\n* for version 3\n\n    * functionality related to sample reduction block: the samples reduction blocks are simply ignored\n\n* for version 4\n\n    * experimental support for mdf v4.20 column oriented storage\n    * functionality related to sample reduction block: the samples reduction blocks are simply ignored\n    * handling of channel hierarchy: channel hierarchy is ignored\n    * full handling of bus logging measurements: currently only can and lin bus logging are implemented with the\n      ability to *get* signals defined in the attached can/lin database (.arxml or .dbc). signals can also\n      be extracted from an anonymous bus logging measurement by providing a can or lin database (.dbc or .arxml)\n    * handling of unfinished measurements (mdf 4): finalization is attempted when the file is loaded, however the\n      not all the finalization steps are supported\n    * full support for remaining mdf 4 channel arrays types\n    * xml schema for mdblock: most metadata stored in the comment blocks will not be available\n    * full handling of event blocks: events are transferred to the new files (in case of calling methods\n      that return new *mdf* objects) but no new events can be created\n    * channels with default x axis: the default x axis is ignored and the channel group's master channel\n      is used\n    * attachment encryption/decryption using user provided encryption/decryption functions; this is not \n      part of the mdf v4 spec and is only supported by this library\n\n# usage\n\n```python\nfrom asammdf import mdf\n\nmdf = mdf('sample.mdf')\nspeed = mdf.get('wheelspeed')\nspeed.plot()\n\nimportant_signals = ['wheelspeed', 'vehiclespeed', 'vehicleacceleration']\n# get short measurement with a subset of channels from 10s to 12s\nshort = mdf.filter(important_signals).cut(start=10, stop=12)\n\n# convert to version 4.10 and save to disk\nshort.convert('4.10').save('important signals.mf4')\n\n# plot some channels from a huge file\nefficient = mdf('huge.mf4')\nfor signal in efficient.select(['sensor1', 'voltage3']):\n   signal.plot()\n```\n\ncheck the *examples* folder for extended usage demo, or the documentation\nhttp://asammdf.readthedocs.io/en/master/examples.html\n\nhttps://canlogger.csselectronics.com/canedge-getting-started/log-file-tools/asammdf-api/\n\n\n# documentation\nhttp://asammdf.readthedocs.io/en/master\n\nand a nicely written tutorial on the [css electronics site](https://canlogger.csselectronics.com/canedge-getting-started/log-file-tools/asammdf-gui/)\n\n# contributing & support\nplease have a look over the [contributing guidelines](contributing.md)\n\nif you enjoy this library please consider making a donation to the\n[numpy project](https://numfocus.org/donate-to-numpy) or to [danielhrisca using liberapay](https://liberapay.com/danielhrisca/donate) <noscript><a href=\"https://liberapay.com/danielhrisca/donate\"><img alt=\"donate using liberapay\" src=\"https://liberapay.com/assets/widgets/donate.svg\"></a></noscript>\n\n## contributors\nthanks to all who contributed with commits to *asammdf*:\n\n<a href=\"https://github.com/danielhrisca/asammdf/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=danielhrisca/asammdf\" />\n</a>\n\n# installation\n*asammdf* is available on\n\n* github: https://github.com/danielhrisca/asammdf/\n* pypi: https://pypi.org/project/asammdf/\n* conda-forge: https://anaconda.org/conda-forge/asammdf\n\n```shell\npip install asammdf\n# for the gui \npip install asammdf[gui]\n# or for anaconda\nconda install -c conda-forge asammdf\n```\n\nin case a wheel is not present for you os/python versions and you\nlack the proper compiler setup to compile the c-extension code, then\nyou can simply copy-paste the package code to your site-packages. in this \nway the python fallback code will be used instead of the compiled c-extension code.\n\n# dependencies\nasammdf uses the following libraries\n\n* numpy : the heart that makes all tick\n* numexpr : for algebraic and rational channel conversions\n* wheel : for installation in virtual environments\n* pandas : for dataframe export\n* canmatrix : to handle can/lin bus logging measurements\n* natsort\n* lxml : for canmatrix arxml support\n* lz4 : to speed up the disk io performance\n* python-dateutil : measurement start time handling\n\noptional dependencies needed for exports\n\n* h5py : for hdf5 export\n* hdf5storage : for matlab v7.3 .mat export\n* fastparquet : for parquet export\n* scipy: for matlab v4 and v5 .mat export\n\nother optional dependencies\n\n* pyside6 : for gui tool\n* pyqtgraph : for gui tool and signal plotting\n* matplotlib : as fallback for signal plotting\n* cchardet : to detect non-standard unicode encodings\n* chardet : to detect non-standard unicode encodings \n* pyqtlet2 : for the gps window\n* isal : for faster zlib compression/decompression\n* fsspec : access files stored in the cloud\n\n# benchmarks\n\nhttp://asammdf.readthedocs.io/en/master/benchmarks.html\n",
  "docs_url": null,
  "keywords": "read reader edit editor parse parser asam mdf measurement",
  "license": "lgplv3+",
  "name": "asammdf",
  "package_url": "https://pypi.org/project/asammdf/",
  "project_url": "https://pypi.org/project/asammdf/",
  "project_urls": {
    "Homepage": "https://github.com/danielhrisca/asammdf"
  },
  "release_url": "https://pypi.org/project/asammdf/7.3.18/",
  "requires_dist": [
    "canmatrix[arxml,dbc] >=1.0",
    "lz4",
    "numexpr",
    "numpy >=1.23.0",
    "pandas",
    "typing-extensions",
    "python-dateutil",
    "lxml >=4.9.3",
    "isal ; platform_machine == \"x86_64\" or platform_machine == \"AMD64\"",
    "cChardet ==2.1.5 ; extra == 'decode'",
    "chardet ; extra == 'decode'",
    "cryptography ; extra == 'encryption'",
    "keyring ; extra == 'encryption'",
    "fastparquet ; extra == 'export'",
    "h5py ; extra == 'export'",
    "hdf5storage >=0.1.19 ; extra == 'export'",
    "python-snappy ; extra == 'export'",
    "scipy ; extra == 'export_matlab_v5'",
    "fsspec ; extra == 'filesystem'",
    "lxml >=4.9.2 ; extra == 'gui'",
    "natsort ; extra == 'gui'",
    "psutil ; extra == 'gui'",
    "PySide6 ==6.6.0 ; extra == 'gui'",
    "pyqtgraph ==0.13.3 ; extra == 'gui'",
    "pyqtlet2 ==0.9.3 ; extra == 'gui'",
    "packaging ; extra == 'gui'",
    "QtPy ==2.3.1 ; extra == 'gui'",
    "sympy ; extra == 'symbolic_math'"
  ],
  "requires_python": ">=3.8",
  "summary": "asam mdf measurement data file parser",
  "version": "7.3.18",
  "releases": [],
  "developers": [
    "daniel.hrisca@gmail.com",
    "daniel_hrisca"
  ],
  "kwds": "mdf asammdf asam arxml mdblock",
  "license_kwds": "lgplv3+",
  "libtype": "pypi",
  "id": "pypi_asammdf",
  "homepage": "https://github.com/danielhrisca/asammdf",
  "release_count": 227,
  "dependency_ids": [
    "pypi_canmatrix",
    "pypi_cchardet",
    "pypi_chardet",
    "pypi_cryptography",
    "pypi_fastparquet",
    "pypi_fsspec",
    "pypi_h5py",
    "pypi_hdf5storage",
    "pypi_isal",
    "pypi_keyring",
    "pypi_lxml",
    "pypi_lz4",
    "pypi_natsort",
    "pypi_numexpr",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_psutil",
    "pypi_pyqtgraph",
    "pypi_pyqtlet2",
    "pypi_pyside6",
    "pypi_python_dateutil",
    "pypi_python_snappy",
    "pypi_qtpy",
    "pypi_scipy",
    "pypi_sympy",
    "pypi_typing_extensions"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http"
  ],
  "description": "===========\npy-geocodio\n===========\n\n.. image:: https://badge.fury.io/py/pygeocodio.svg\n    :target: http://badge.fury.io/py/pygeocodio\n\n.. image:: https://github.com/bennylope/pygeocodio/actions/workflows/tests.yml/badge.svg?branch=master\n    :target: https://github.com/bennylope/pygeocodio/actions\n\n.. image:: https://img.shields.io/pypi/dm/pygeocodio.svg\n        :target: https://img.shields.io/pypi/dm/pygeocodio.svg\n\n\npython wrapper for `geocodio geocoding api <http://geocod.io/docs/>`_.\n\nfull documentation on `read the docs <http://pygeocodio.readthedocs.org/en/latest/>`_.\n\n**if you are upgrading from a version prior to 0.2.0 please see the changelog\nin history.rst. the default coordinate ordering has changed to something a bit\nmore sensible for most users.**\n\ngeocodio api features\n=====================\n\n* geocode an individual address\n* batch geocode up to 10,000 addresses at a time\n* parse an address into its identifiable components\n* reverse geocode an individual geographic point\n* batch reverse geocode up to 10,000 points at a time\n* perform operations using the hipaa api url\n\nthe service is limited to u.s. and canada addresses for the time being.\n\nread the complete `geocodio documentation <http://geocod.io/docs/>`_ for\nservice documentation.\n\ninstallation\n============\n\npygeocodio requires `requests` 1.0.0 or greater and will ensure requests is\ninstalled::\n\n    pip install pygeocodio\n\nbasic usage\n===========\n\nimport the api client and ensure you have a valid api key::\n\n    >>> from geocodio import geocodioclient\n    >>> client = geocodioclient(your_api_key)\n\nnote that you can pass in a timeout value in seconds (the default is no timeout)::\n\n    >>> client = geocodioclient(your_api_key, timeout=15)\n\ngeocoding\n---------\n\ngeocoding an individual address::\n\n    >>> geocoded_location = client.geocode(\"42370 bob hope drive, rancho mirage ca\")\n    >>> geocoded_location.coords\n    (33.738987255507, -116.40833849559)\n\n\ngeocode a set of address components::\n\n    >>> geocoded_location = client.geocode(components_data={\n      \"postal_code\": \"02210\",\n      \"country\": \"us\"\n    })\n    >>> geocoded_location.coords\n    (42.347547, -71.040645)\n\nbatch geocoding\n---------------\n\nyou can also geocode a list of addresses::\n\n    >>> geocoded_addresses = client.geocode([\n            '2 15th st nw, washington, dc 20024',\n            '3101 patterson ave, richmond, va, 23221'\n        ])\n\nreturn a list of just the coordinates for the resultant geocoded addresses::\n\n    >>> geocoded_addresses.coords\n    [(38.890083, -76.983822), (37.560446, -77.476008)]\n    >>> geocoded_addresses[0].coords\n    (38.890083, -76.983822)\n\nlookup an address by the queried address::\n\n    >>> geocoded_addresses.get('2 15th st nw, washington, dc 20024').coords\n    (38.879138, -76.981879))\n\n\nyou can also geocode a list of address component dictionaries::\n\n    >>> geocoded_addresses = client.geocode(components_data=[{\n            'street': '1109 n highland st',\n            'city': 'arlington',\n            'state': 'va'\n        }, {\n            'city': 'toronto',\n            'country': 'ca'\n        }])\n\n\nand geocode a keyed mapping of address components::\n\n    >>> gecoded_addresses = client.geocode(components_data={\n            \"1\": {\n                \"street\": \"1109 n highland st\",\n                \"city\": \"arlington\",\n                \"state\": \"va\"\n            },\n            \"2\": {\n                \"city\": \"toronto\",\n                \"country\": \"ca\"\n            }})\n\n\nand geocode even a keyed mapping of addresses::\n\n    >>> geocoded_addresses = client.geocode({\n            \"1\": \"3101 patterson ave, richmond, va\",\n            \"2\": \"1657 w broad st, richmond, va\"\n        })\n\nreturn a list of just the coordinates for the resultant geocoded addresses::\n\n    >>> geocoded_addresses.coords\n    {'1': (37.560454, -77.47601), '2': (37.555176, -77.458273)}\n\n\nlookup an address by its key::\n\n    >>> geocoded_addresses.get(\"1\").coords\n    (37.560454, -77.47601)\n\n\naddress parsing\n---------------\n\nand if you just want to parse an individual address into its components::\n\n  >>> client.parse('1600 pennsylvania ave, washington dc')\n    {\n        \"address_components\": {\n            \"number\": \"1600\",\n            \"street\": \"pennsylvania\",\n            \"suffix\": \"ave\",\n            \"city\": \"washington\",\n            \"state\": \"dc\"\n        },\n        \"formatted_address\": \"1600 pennsylvania ave, washington dc\"\n    }\n    \nreverse geocoding\n-----------------\n\nreverse geocode a point to find a matching address::\n\n    >>> location = client.reverse((33.738987, -116.4083))\n    >>> location.formatted_address\n    \"42370 bob hope dr, rancho mirage ca, 92270\"\n\nbatch reverse geocoding\n-----------------------\n\nand multiple points at a time::\n\n    >>> locations = client.reverse([\n            (33.738987, -116.4083),\n            (33.738987, -116.4083),\n            (38.890083, -76.983822)\n        ])\n\nreturn the list of formatted addresses::\n\n    >>> locations.formatted_addresses\n    [\"42370 bob hope dr, rancho mirage ca, 92270\",  \"42370 bob hope dr, rancho mirage ca, 92270\", \"2 15th st nw, washington, dc 20024\"]\n\naccess a specific address by the queried point tuple::\n\n    >>> locations.get(\"38.890083,-76.983822\").formatted_address\n    \"2 15th st nw, washington, dc 20024\"\n\nor by the more natural key of the queried point tuple::\n\n    >>> locations.get((38.890083, -76.983822)).formatted_address\n    \"2 15th st nw, washington, dc 20024\"\n\ncli usage\n=========\n\nin the works!\n\ndocumentation\n=============\n\nfor complete documentation see `the docs\n<http://pygeocodio.readthedocs.org/en/latest/>`_.\n\nlicense\n=======\n\nbsd license\n\n\n\n\nhistory\n-------\n\n1.4.0 (2023-07-08)\n+++++++++++++++++++\n\n* drop support for python 3.7\n\n1.3.0 (2023-05-31)\n+++++++++++++++++++\n\n* adds support for the 'limit' parameter to limit results (thanks bruno-uy!)\n\n1.2.0 (2023-03-21)\n+++++++++++++++++++\n\n* adds custom_base_domain support (thanks minicodemonkey!)\n* drops python 3.6 support\n* adds official python 3.11 support\n\n1.1.0 (2022-03-28)\n+++++++++++++++++++\n\n* adds a timeout parameter for api requests (thanks aviv!)\n\n1.0.1 (2021-07-18)\n+++++++++++++++++++\n* fixes batched keyed address geocoding\n\n1.0.0 (2020-06-18)\n+++++++++++++++++++\n\n* adds support for keying batch geocode results (thanks liufran1 and unix-code!)\n* adds support for keying batch reverse geocode results (thanks liufran1 and unix-code!)\n\n0.12.0 (2020-06-04)\n+++++++++++++++++++\n\n* adds auto-loading of api version (thanks unix-code!)\n* default api calls to version 1.6 (thanks minicodemonkey!) \n\n0.11.1 (2019-11-07)\n+++++++++++++++++++\n\n* default api calls to version 1.4 (thanks cyranix!) \n\n0.11.0 (2019-10-19)\n+++++++++++++++++++\n\n* search by address components (thanks unix-code!)\n\n0.10.0 (2019-02-05)\n+++++++++++++++++++\n\n* replaced http with https in clinet (thanks shea-parkes!)\n\n0.9.0 (2019-01-15)\n++++++++++++++++++\n\n* updates to use geocodio api v 1.3 by default (thanks joshgeller!)\n* the api version is now configurable for backwards and forward compatibility\n\n\n0.8.0 (2018-12-30)\n++++++++++++++++++\n\n* adds new us census fields (thanks pedromachados!)\n\n0.7.0 (2018-03-29)\n++++++++++++++++++\n\n* added support for new congressional districts for 2018 election (thanks nickcatal!)\n\n0.6.0 (2018-02-16)\n++++++++++++++++++\n\n* upgrade to geocodio api version 1.2 (thanks minicodemonkey!)\n* update allowed fields\n* update docs that canada now included (thanks goorzhel!)\n* miscellaneous fixes (thanks snake-plissken!)\n\n0.5.0 (2016-05-16)\n++++++++++++++++++\n\n* add additional allowed fields (census, cd114)\n\n0.4.2 (2015-02-17)\n++++++++++++++++++\n\n* bug fix the last bug fix\n\n0.4.1 (2015-02-17)\n++++++++++++++++++\n\n* bug fix to flatten 'fields' argument as a single query key\n\n0.4.0 (2014-09-28)\n++++++++++++++++++\n\n* bug fix for batch reverse geocoding\n* removes request handling from client methods\n\n0.3.0 (2014-03-24)\n++++++++++++++++++\n\n* adds support for additional data fields (e.g. congressional districts, timezone)\n\n0.2.1 (2014-02-15)\n++++++++++++++++++\n\n* fixed python 3.3 test errors. shouldn't have any functional effect on python\n  3.3 usage except for matching module paths of pygeocodio objects.\n\n0.2.0 (2014-02-07)\n++++++++++++++++++\n\n* added initial reverse geocoding functionality\n* swaps default coordinates order. this is a mostly backwards incompatible\n  change to amend a silly design decision.\n\n0.1.4 (2014-01-25)\n++++++++++++++++++\n\n* handle error in which geoco.io has returned empty result set\n\n0.1.3 (2014-01-25)\n++++++++++++++++++\n\n* packaging fix, thanks to @kyen99\n\n0.1.2 (2014-01-23)\n++++++++++++++++++\n\n* moves and enhances fixture data to json data based on linted server responses\n* adds geocodio named errors\n* better handling of errors in individual locations from batch requests\n\n0.1.1 (2014-01-22)\n++++++++++++++++++\n\n* adds requests to install_requires in setup.py and drops minimum version to 1.0.0\n\n0.1.0 (2014-01-21)\n++++++++++++++++++\n\n* first release on pypi.\n",
  "docs_url": null,
  "keywords": "geocodio",
  "license": "bsd",
  "name": "pygeocodio",
  "package_url": "https://pypi.org/project/pygeocodio/",
  "project_url": "https://pypi.org/project/pygeocodio/",
  "project_urls": {
    "Homepage": "https://github.com/bennylope/pygeocodio"
  },
  "release_url": "https://pypi.org/project/pygeocodio/1.4.0/",
  "requires_dist": [
    "requests (>=1.0.0)"
  ],
  "requires_python": "",
  "summary": "python wrapper for geocod.io api",
  "version": "1.4.0",
  "releases": [],
  "developers": [
    "ben@benlopatin.com",
    "ben_lopatin"
  ],
  "kwds": "pygeocodio geocodio geocodioclient python geocod",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_pygeocodio",
  "homepage": "https://github.com/bennylope/pygeocodio",
  "release_count": 26,
  "dependency_ids": [
    "pypi_requests"
  ]
}
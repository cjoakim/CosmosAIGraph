{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "topic :: utilities"
  ],
  "description": "[![build status](https://api.cirrus-ci.com/github/pyscaffold/pyscaffoldext-dsproject.svg?branch=master)](https://cirrus-ci.com/github/pyscaffold/pyscaffoldext-dsproject)\n[![readthedocs](https://readthedocs.org/projects/pyscaffold/badge/?version=latest)](https://pyscaffold.org/projects/dsproject/en/latest)\n[![coveralls](https://img.shields.io/coveralls/github/pyscaffold/pyscaffoldext-dsproject/master.svg)](https://coveralls.io/r/pyscaffold/pyscaffoldext-dsproject)\n[![pypi-server](https://img.shields.io/pypi/v/pyscaffoldext-dsproject.svg)](https://pypi.org/project/pyscaffoldext-dsproject)\n[![conda-forge](https://img.shields.io/conda/vn/conda-forge/pyscaffoldext-dsproject.svg)](https://anaconda.org/conda-forge/pyscaffoldext-dsproject)\n[![downloads](https://pepy.tech/badge/pyscaffoldext-dsproject/month)](https://pepy.tech/project/pyscaffoldext-dsproject)\n\n# pyscaffoldext-dsproject\n\n[pyscaffold] extension tailored for *data science* projects. this extension is inspired by\n[cookiecutter-data-science] and enhanced in many ways. the main differences are that it\n1. advocates a proper python package structure that can be shipped and distributed,\n2. uses a [conda] environment instead of something [virtualenv]-based and is thus more suitable\n   for data science projects,\n3. more default configurations for [sphinx], [pytest], [pre-commit], etc. to foster\n   clean coding and best practices.\n\nalso consider using [dvc] to version control and share your data within your team.\nread [this blogpost] to learn how to work with jupyterlab notebooks efficiently by using a\ndata science project structure like this.\n\nthe final directory structure looks like:\n```\n\u251c\u2500\u2500 authors.md              <- list of developers and maintainers.\n\u251c\u2500\u2500 changelog.md            <- changelog to keep track of new features and fixes.\n\u251c\u2500\u2500 contributing.md         <- guidelines for contributing to this project.\n\u251c\u2500\u2500 dockerfile              <- build a docker container with `docker build .`.\n\u251c\u2500\u2500 license.txt             <- license as chosen on the command-line.\n\u251c\u2500\u2500 readme.md               <- the top-level readme for developers.\n\u251c\u2500\u2500 configs                 <- directory for configurations of model & application.\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 external            <- data from third party sources.\n\u2502   \u251c\u2500\u2500 interim             <- intermediate data that has been transformed.\n\u2502   \u251c\u2500\u2500 processed           <- the final, canonical data sets for modeling.\n\u2502   \u2514\u2500\u2500 raw                 <- the original, immutable data dump.\n\u251c\u2500\u2500 docs                    <- directory for sphinx documentation in rst or md.\n\u251c\u2500\u2500 environment.yml         <- the conda environment file for reproducibility.\n\u251c\u2500\u2500 models                  <- trained and serialized models, model predictions,\n\u2502                              or model summaries.\n\u251c\u2500\u2500 notebooks               <- jupyter notebooks. naming convention is a number (for\n\u2502                              ordering), the creator's initials and a description,\n\u2502                              e.g. `1.0-fw-initial-data-exploration`.\n\u251c\u2500\u2500 pyproject.toml          <- build configuration. don't change! use `pip install -e .`\n\u2502                              to install for development or to build `tox -e build`.\n\u251c\u2500\u2500 references              <- data dictionaries, manuals, and all other materials.\n\u251c\u2500\u2500 reports                 <- generated analysis as html, pdf, latex, etc.\n\u2502   \u2514\u2500\u2500 figures             <- generated plots and figures for reports.\n\u251c\u2500\u2500 scripts                 <- analysis and production scripts which import the\n\u2502                              actual python_pkg, e.g. train_model.\n\u251c\u2500\u2500 setup.cfg               <- declarative configuration of your project.\n\u251c\u2500\u2500 setup.py                <- [deprecated] use `python setup.py develop` to install for\n\u2502                              development or `python setup.py bdist_wheel` to build.\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 python_pkg          <- actual python package where the main functionality goes.\n\u251c\u2500\u2500 tests                   <- unit tests which can be run with `pytest`.\n\u251c\u2500\u2500 .coveragerc             <- configuration for coverage reports of unit tests.\n\u251c\u2500\u2500 .isort.cfg              <- configuration for git hook that sorts imports.\n\u2514\u2500\u2500 .pre-commit-config.yaml <- configuration of pre-commit git hooks.\n```\n\nsee a demonstration of the initial project structure under [dsproject-demo] and also check out\nthe documentation of [pyscaffold] for more information.\n\n\n## usage\n\njust install this package with `conda install -c conda-forge pyscaffoldext-dsproject`\nand note that `putup -h` shows a new option `--dsproject`.\ncreating a data science project is then as easy as:\n```bash\nputup --dsproject my_ds_project\n```\n\nthe flag `--dsproject` comprises additionally the flags `--markdown`, `--pre-commit` and `--no-skeleton`\nfor convenience.\n\n<!-- pyscaffold-notes -->\n\n## making changes & contributing\n\nthis project uses [pre-commit], please make sure to install it before making any\nchanges:\n\n```bash\nconda install pre-commit\ncd pyscaffoldext-dsproject\npre-commit install\n```\n\nit is a good idea to update the hooks to the latest version:\n\n```bash\npre-commit autoupdate\n```\n\nplease also check pyscaffold's [contribution guidelines].\n\n[pyscaffold]: https://pyscaffold.org/\n[cookiecutter-data-science]: https://github.com/drivendata/cookiecutter-data-science\n[miniconda]: https://docs.conda.io/en/latest/miniconda.html\n[jupyter]: https://jupyter.org/\n[dsproject-demo]: https://github.com/pyscaffold/dsproject-demo\n[sphinx]: https://www.sphinx-doc.org/\n[pytest]: https://docs.pytest.org/\n[conda]: https://docs.conda.io/\n[conda-forge]: https://anaconda.org/conda-forge/pyscaffoldext-dsproject\n[virtualenv]: https://virtualenv.pypa.io/\n[pre-commit]: https://pre-commit.com/\n[dvc]: https://dvc.org/\n[this blogpost]: https://florianwilhelm.info/2018/11/working_efficiently_with_jupyter_lab/\n[pre-commit]: https://pre-commit.com/\n[contribution guidelines]: https://pyscaffold.org/en/latest/contributing.html\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pyscaffoldext-dsproject",
  "package_url": "https://pypi.org/project/pyscaffoldext-dsproject/",
  "project_url": "https://pypi.org/project/pyscaffoldext-dsproject/",
  "project_urls": {
    "Changelog": "https://github.com/pyscaffold/pyscaffoldext-dsproject/blob/master/CHANGELOG.rst",
    "Documentation": "https://pyscaffold.org/",
    "Download": "https://pypi.org/project/PyScaffoldext-dsproject/#files",
    "Homepage": "https://github.com/pyscaffold/pyscaffoldext-dsproject",
    "Source": "https://github.com/pyscaffold/pyscaffoldext-dsproject/",
    "Tracker": "https://github.com/pyscaffold/pyscaffoldext-dsproject/issues",
    "Twitter": "https://twitter.com/PyScaffold"
  },
  "release_url": "https://pypi.org/project/pyscaffoldext-dsproject/0.7.2/",
  "requires_dist": [
    "configupdater ; extra == 'testing'",
    "pyscaffold (<5.0a0,>=4.0.1)",
    "pyscaffoldext-markdown (<1.0a0,>=0.4.1)",
    "importlib-metadata ; python_version < \"3.8\"",
    "tox ; extra == 'testing'",
    "pre-commit ; extra == 'testing'",
    "setuptools-scm ; extra == 'testing'",
    "virtualenv ; extra == 'testing'",
    "pytest ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'",
    "pytest-xdist ; extra == 'testing'"
  ],
  "requires_python": "",
  "summary": "pyscaffold extension for data science projects",
  "version": "0.7.2",
  "releases": [],
  "developers": [
    "florian.wilhelm@gmail.com",
    "florian_wilhelm"
  ],
  "kwds": "pyscaffoldext pyscaffold pytest pyproject my_ds_project",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pyscaffoldext_dsproject",
  "homepage": "https://github.com/pyscaffold/pyscaffoldext-dsproject",
  "release_count": 19,
  "dependency_ids": [
    "pypi_configupdater",
    "pypi_importlib_metadata",
    "pypi_pre_commit",
    "pypi_pyscaffold",
    "pypi_pyscaffoldext_markdown",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_xdist",
    "pypi_setuptools_scm",
    "pypi_tox",
    "pypi_virtualenv"
  ]
}
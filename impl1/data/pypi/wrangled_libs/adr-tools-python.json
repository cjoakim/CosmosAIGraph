{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# readme #\n\nthis is a project to get a python equivalent of the adr-tools by npryce on [github][adr-tools]. the tool can make and list and change architecture decision records. for more information on architecture decision records see the page of [joel parker henderson on adrs](https://github.com/joelparkerhenderson/architecture_decision_record).\n\n## installation\n\n```\npip install adr-tools-python\n```\n\nor\n\n```\npython3 -m pip install adr-tools-python --user\n```\nby adding a `--upgrade` flag, the tool can be updated if a new version is available\n\n## usage\n\n### adr-init\n\nwith `adr-init`, the directory structure can be initialized. default, a subdircectory `doc/adr` is generated, but if a different directory is wished for, this can be input:\n\n```\nadr-init foo\n```\n\nin this case, adrs will be stored in a local folder `foo/`. in the main directory, a file called `.adr-dir` is generated to indicate to `adr-tools` that a different location than the default `doc/adr/` is used. this behaviour was copied from, and should be compatible with the original [adr-tools][]. `adr-init` always creates a new adr to say that adrs will be used. \n\n### adr-new\n\na subject should be given for a new adr:\n\n```\n> adr-new create equal animals\n> adr-list\ndoc/adr/0001-record-architecture-decisions.md\ndoc/adr/0002-create-equal-animals.md\n> \n```\nadrs can be superceded from the command line using the `-s` option, and be linked by using the `-l` option. \n\nfrom the documentation of [adr-tools][]:\n\n> # multiple -s and -l options can be given, so that the new adr can supercede\n> # or link to multiple existing adrs.\n> ##\n> # e.g. to create a new adr with the title \"use mysql database\":\n> ##\n> # adr new use mysql database\n> ##\n> # e.g. to create a new adr that supercedes adr 12:\n> ##\n> # adr new -s 12 use postgresql database\n> ##\n> # e.g. to create a new adr that supercedes adrs 3 and 4, and amends adr 5:\n> ##\n> # adr new -s 3 -s 4 -l \"5:amends:amended by\" use riak crdts to cope with scale\n> ##\n\nthe same funcitonality is also available in this python version\n\n### adr-list\n\nsee above, lists the adrs.\n\n### serving the adrs\n\nif you want the adrs to be served on a webpage, please look for the python package [adr-viewer](https://pypi.org/project/adr-viewer/\n\n## source, contribution\n\nthe source code is available on [bitbucket](https://bitbucket.org/tinkerer_/adr-tools-python/). if you're interested in collaborating let me know, and/or send a merge request.\n\n## thanks\n\nthanks to michael nygard for the original [idea of adrs](http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions), wesleyks for his work on [adre](https://github.com/wesleyks/adre/tree/master/adre) (which was inspiring, but not the road i followed), and of course to npryce for making and documenting the [bash toolchain][adr-tools] i tried to replicate in python.\n\n[adr-tools]: https://github.com/npryce/adr-tools\n\n",
  "docs_url": null,
  "keywords": "adr,architecture decision record",
  "license": "mit",
  "name": "adr-tools-python",
  "package_url": "https://pypi.org/project/adr-tools-python/",
  "project_url": "https://pypi.org/project/adr-tools-python/",
  "project_urls": {
    "Homepage": "https://bitbucket.org/tinkerer_/adr-tools-python/"
  },
  "release_url": "https://pypi.org/project/adr-tools-python/1.0.3/",
  "requires_dist": [
    "argparse"
  ],
  "requires_python": ">=3",
  "summary": "a package to provide adr-tools to python",
  "version": "1.0.3",
  "releases": [],
  "developers": [
    "victor_sluiter",
    "vsluiter@yahoo.com"
  ],
  "kwds": "adr adrs architecture_decision_record adre python3",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_adr_tools_python",
  "homepage": "https://bitbucket.org/tinkerer_/adr-tools-python/",
  "release_count": 8,
  "dependency_ids": [
    "pypi_argparse"
  ]
}
{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "programming language :: python :: 3",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "**flit** is a simple way to put python packages and modules on pypi.\nit tries to require less thought about packaging and help you avoid common\nmistakes.\nsee `why use flit? <https://flit.readthedocs.io/en/latest/rationale.html>`_ for\nmore about how it compares to other python packaging tools.\n\ninstall\n-------\n\n::\n\n    $ python3 -m pip install flit\n\nflit requires python 3 and therefore needs to be installed using the python 3\nversion of pip.\n\npython 2 modules can be distributed using flit, but need to be importable on\npython 3 without errors.\n\nusage\n-----\n\nsay you're writing a module ``foobar`` \u2014 either as a single file ``foobar.py``,\nor as a directory \u2014 and you want to distribute it.\n\n1. make sure that foobar's docstring starts with a one-line summary of what\n   the module is, and that it has a ``__version__``:\n\n   .. code-block:: python\n\n       \"\"\"an amazing sample package!\"\"\"\n\n       __version__ = \"0.1\"\n\n2. install flit if you don't already have it::\n\n       python3 -m pip install flit\n\n3. run ``flit init`` in the directory containing the module to create a\n   ``pyproject.toml`` file. it will look something like this:\n\n   .. code-block:: ini\n\n       [build-system]\n       requires = [\"flit_core >=3.2,<4\"]\n       build-backend = \"flit_core.buildapi\"\n\n       [project]\n       name = \"foobar\"\n       authors = [{name = \"sir robin\", email = \"robin@camelot.uk\"}]\n       dynamic = [\"version\", \"description\"]\n\n       [project.urls]\n       home = \"https://github.com/sirrobin/foobar\"\n\n   you can edit this file to add other metadata, for example to set up\n   command line scripts. see the\n   `pyproject.toml page <https://flit.readthedocs.io/en/latest/pyproject_toml.html#scripts-section>`_\n   of the documentation.\n\n   if you have already got a ``flit.ini`` file to use with older versions of\n   flit, convert it to ``pyproject.toml`` by running ``python3 -m flit.tomlify``.\n\n4. run this command to upload your code to pypi::\n\n       flit publish\n\nonce your package is published, people can install it using *pip* just like\nany other package. in most cases, pip will download a 'wheel' package, a\nstandard format it knows how to install. if you specifically ask pip to install\nan 'sdist' package, it will install and use flit in a temporary environment.\n\n\nto install a package locally for development, run::\n\n    flit install [--symlink] [--python path/to/python]\n\nflit packages a single importable module or package at a time, using the import\nname as the name on pypi. all subpackages and data files within a package are\nincluded automatically.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "flit",
  "package_url": "https://pypi.org/project/flit/",
  "project_url": "https://pypi.org/project/flit/",
  "project_urls": {
    "Changelog": "https://flit.pypa.io/en/stable/history.html",
    "Documentation": "https://flit.pypa.io",
    "Source": "https://github.com/pypa/flit"
  },
  "release_url": "https://pypi.org/project/flit/3.9.0/",
  "requires_dist": [
    "flit_core >=3.9.0",
    "requests",
    "docutils",
    "tomli-w",
    "sphinx ; extra == \"doc\"",
    "sphinxcontrib_github_alt ; extra == \"doc\"",
    "pygments-github-lexers ; extra == \"doc\"",
    "testpath ; extra == \"test\"",
    "responses ; extra == \"test\"",
    "pytest>=2.7.3 ; extra == \"test\"",
    "pytest-cov ; extra == \"test\"",
    "tomli ; extra == \"test\""
  ],
  "requires_python": ">=3.6",
  "summary": "a simple packaging tool for simple packages.",
  "version": "3.9.0",
  "releases": [],
  "developers": [
    "thomas@kluyver.me.uk"
  ],
  "kwds": "flit_core python3 pip flit pypi",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_flit",
  "homepage": "",
  "release_count": 49,
  "dependency_ids": [
    "pypi_docutils",
    "pypi_flit_core",
    "pypi_pygments_github_lexers",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_requests",
    "pypi_responses",
    "pypi_sphinx",
    "pypi_sphinxcontrib_github_alt",
    "pypi_testpath",
    "pypi_tomli",
    "pypi_tomli_w"
  ]
}
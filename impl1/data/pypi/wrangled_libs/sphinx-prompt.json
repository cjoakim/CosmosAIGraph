{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: plugins",
    "environment :: web environment",
    "framework :: sphinx :: extension",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.9",
    "topic :: documentation",
    "topic :: documentation :: sphinx",
    "topic :: software development :: documentation",
    "typing :: typed"
  ],
  "description": "# sphinx prompt\n\n## initialize\n\nin `conf.py` add `extensions += ['sphinx_prompt']`.\n\n## syntax\n\na default prompt can be created using a `prompt` directive:\n\n```rst\n.. prompt::\n\n   <statements>\n```\n\nthe prompt can be further customized in one of two ways:\n\n- using positional arguments:\n\n  ```rst\n  .. prompt:: [<language> [<prompts> [<modifiers>]]]\n\n      <statements>\n  ```\n\n- using options:\n\n  ```rst\n  .. prompt::\n      :language: <language>\n      :prompts: <prompts>\n      :modifiers: <modifiers>\n\n     <statements>\n  ```\n\nwhile these constructs generate the same output, the positional\narguments cannot be used if you want to use a prompt that contains\nspaces. this is a limitation of restructuredtext.\n\npositional arguments can be mixed with options **if** they don\\'t\noverlap (so if you pass prompts using options, you can only pass the\nlanguage using positional arguments):\n\n```rst\n.. prompt:: bash\n    :prompts: (cool_project) $\n\n   python3 -m pip install --upgrade sphinx-prompt\n```\n\n### language\n\nsupported language:\n\n- `text` (no pigments, default)\n- `bash`\n- `batch`\n- `powershell`\n- `python`\n- `scala`\n\n### prompt(s)\n\nif modifier is auto, a comma-separated list of prompts to find in the\nstatements.\n\nelse the prompt to add on each statements, for python and bash language\nthe end `\\` is supported.\n\ndefaults to empty, except for the shell languages listed below:\n\n- `bash` - `$`\n- `batch` - `c:\\>`\n- `powershell` - `ps c:\\>`\n\n## examples\n\nsee: <http://sbrunner.github.io/sphinx-prompt/>\n\n## run tests and prospector\n\n```bash\npython3 -m pip install --user --upgrade poetry\npoetry install\npoetry run pytest\npoetry run prospector\n```\n\nthe code should be formatted with `black` add `isort`.\n\n## create new release\n\n```bash\ngit tag <version>\ngit push origin <version>\n```\n\n## contributing\n\ninstall the pre-commit hooks:\n\n```bash\npip install pre-commit\npre-commit install --allow-missing-config\n```\n\n",
  "docs_url": null,
  "keywords": "sphinx,shell,prompt",
  "license": "bsd-3-clause",
  "name": "sphinx-prompt",
  "package_url": "https://pypi.org/project/sphinx-prompt/",
  "project_url": "https://pypi.org/project/sphinx-prompt/",
  "project_urls": {
    "Homepage": "https://github.com/sbrunner/sphinx-prompt",
    "Repository": "https://github.com/sbrunner/sphinx-prompt"
  },
  "release_url": "https://pypi.org/project/sphinx-prompt/1.8.0/",
  "requires_dist": [
    "Sphinx (>=7.0.0,<8.0.0)",
    "docutils",
    "pygments"
  ],
  "requires_python": ">=3.9,<4.0",
  "summary": "sphinx directive to add unselectable prompt",
  "version": "1.8.0",
  "releases": [],
  "developers": [
    "stephane.brunner@gmail.com"
  ],
  "kwds": "sphinx_prompt sphinx prompts prompt syntax",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_sphinx_prompt",
  "homepage": "https://github.com/sbrunner/sphinx-prompt",
  "release_count": 13,
  "dependency_ids": [
    "pypi_docutils",
    "pypi_pygments",
    "pypi_sphinx"
  ]
}
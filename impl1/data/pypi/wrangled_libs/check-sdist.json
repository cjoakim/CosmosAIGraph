{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "typing :: typed"
  ],
  "description": "# check-sdist\n\n[![actions status][actions-badge]][actions-link]\n[![pypi version][pypi-version]][pypi-link]\n[![pypi platforms][pypi-platforms]][pypi-link]\n\n<!-- prettier-ignore-start -->\n[actions-badge]:            https://github.com/henryiii/check-sdist/workflows/ci/badge.svg\n[actions-link]:             https://github.com/henryiii/check-sdist/actions\n[pypi-link]:                https://pypi.org/project/check-sdist/\n[pypi-platforms]:           https://img.shields.io/pypi/pyversions/check-sdist\n[pypi-version]:             https://img.shields.io/pypi/v/check-sdist\n\n<!-- prettier-ignore-end -->\n\nhave you ever shipped broken sdists with missing files or possibly dirty sdists\nwith files that shouldn't have been there? have you noticed that standards\ncompliant tools aren't making the same sdist that `flit build` is? is hatchling\nadding `.dsstore` files when you ship from your macos? no matter what\nbuild-backend you use, check-sdist can help!\n\ncheck-sdist builds an sdist and compares the contents with your git repository\ncontents. it can even temporarily inject common junk files (like pycache files\nor os specific files) and help verify that those aren't getting bundled into\nyour sdist. if you are getting files you didn't expect or missing files you did\nexpect, consult your build backend's docs to see how to include or exclude\nfiles.\n\n### quick start\n\nto run:\n\n```console\n$ pipx run check-sdist\n```\n\nyou can add `--no-isolation` to disable build isolation (faster, but must\npreinstall build dependencies), `--source-dir` to select a different source\ndirectory to check, and `--inject-junk` to temporarily inject some common junk\nfiles while running.\n\nif you need the latest development version:\n\n```console\n$ pipx run --spec git+https://github.com/henryiii/check-sdist check-sdist\n```\n\n### pre-commit integration\n\nto use the [pre-commit](https://pre-commit.com) integration, put this in your\n`.pre-commit-config.yaml`:\n\n```yaml\n- repo: https://github.com/henryiii/check-sdist\n  rev: v0.1.3\n  hooks:\n    - id: check-sdist\n      args: [--inject-junk]\n      additional_dependencies: [] # list your build deps here\n```\n\nthis requires your build dependencies, but in doing so, it can cache the\nenvironment, making it quite fast. if you don't mind slower runs and don't want\nto require build dependency listing:\n\n```yaml\n- repo: https://github.com/henryiii/check-sdist\n  rev: v0.1.3\n  hooks:\n    - id: check-sdist-isolated\n      args: [--inject-junk]\n```\n\n### configuration\n\nto configure, these options are supported in your `pyproject.toml` file:\n\n```toml\n[tool.check-sdist]\nsdist-only = []\ngit-only = []\ndefault-ignore = true\n```\n\nyou can add `.gitignore` style lines here, and you can turn off the default\nignore list, which adds some default git-only files.\n\n### see also\n\n- [check-manifest](https://github.com/mgedmin/check-manifest): a (currently)\n  setuptools specific checker that can suggest possible ways to include/exclude\n  files.\n- [scikit-hep developer pages](https://scikit-hep.org/developer): guidelines on\n  which this package was designed.\n",
  "docs_url": null,
  "keywords": "lint,packaging,sdist",
  "license": "",
  "name": "check-sdist",
  "package_url": "https://pypi.org/project/check-sdist/",
  "project_url": "https://pypi.org/project/check-sdist/",
  "project_urls": {
    "Bug Tracker": "https://github.com/henryiii/check-sdist/issues",
    "Changelog": "https://github.com/henryiii/check-sdist/releases",
    "Homepage": "https://github.com/henryiii/check-sdist"
  },
  "release_url": "https://pypi.org/project/check-sdist/0.1.3/",
  "requires_dist": [
    "build",
    "importlib-resources; python_version < '3.9'",
    "pathspec",
    "tomli; python_version < '3.11'",
    "pytest-cov>=3; extra == 'dev'",
    "pytest>=6; extra == 'dev'",
    "pytest-cov>=3; extra == 'test'",
    "pytest>=6; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "check the contents of an sdist vs. git",
  "version": "0.1.3",
  "releases": [],
  "developers": [
    "henryschreineriii@gmail.com"
  ],
  "kwds": "pypi sdist actions pyversions check",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_check_sdist",
  "homepage": "",
  "release_count": 4,
  "dependency_ids": [
    "pypi_build",
    "pypi_importlib_resources",
    "pypi_pathspec",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_tomli"
  ]
}
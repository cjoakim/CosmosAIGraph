{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "===============================\nfile_read_backwards\n===============================\n\n\n.. image:: https://img.shields.io/pypi/v/file_read_backwards.svg\n        :target: https://pypi.python.org/pypi/file_read_backwards\n\n.. image:: https://readthedocs.org/projects/file-read-backwards/badge/?version=latest\n        :target: https://file-read-backwards.readthedocs.io/en/latest/?badge=latest\n        :alt: documentation status\n\n.. image:: https://pyup.io/repos/github/robinnil/file_read_backwards/shield.svg\n     :target: https://pyup.io/repos/github/robinnil/file_read_backwards/\n     :alt: updates\n\n\nmemory efficient way of reading files line-by-line from the end of file\n\n\n* free software: mit license\n* documentation: https://file-read-backwards.readthedocs.io.\n\n\nfeatures\n--------\n\nthis package is for reading file backward line by line as unicode in a memory efficient manner for both python 2.7 and python 3.\n\nit currently supports ascii, latin-1, and utf-8 encodings.\n\nit supports \"\\\\r\", \"\\\\r\\\\n\", and \"\\\\n\" as new lines.\n\nusage examples\n--------------\n\nanother example using `python3.11`::\n\n    from file_read_backwards import filereadbackwards\n\n    with filereadbackwards(\"/tmp/file\", encoding=\"utf-8\") as frb:\n\n        # getting lines by lines starting from the last line up\n        for l in frb:\n            print(l)\n\n\nanother way to consume the file is via `readline()`, in `python3.11`::\n\n    from file_read_backwards import filereadbackwards\n\n    with filereadbackwards(\"/tmp/file\", encoding=\"utf-8\") as frb:\n\n        while true:\n            l = frb.readline()\n            if not l:\n                break\n            print(l, end=\"\")\n\ncredits\n---------\n\nthis package was created with cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n\n=======\nhistory\n=======\n\n1.0.0 (2016-12-18)\n------------------\n\n* first release on pypi.\n\n1.1.0 (2016-12-31)\n------------------\n\n* added support for \"latin-1\".\n* marked the package \"production/stable\".\n\n1.1.1 (2017-01-09)\n------------------\n\n* updated readme.rst for more clarity around encoding support and python 2.7 and 3 support.\n\n1.1.2 (2017-01-11)\n------------------\n\n* documentation re-arrangement. usage examples are now in readme.rst\n* minor refactoring\n\n1.2.0 (2017-09-01)\n------------------\n\n* include context manager style as it provides cleaner/automatic close functionality\n\n1.2.1 (2017-09-02)\n------------------\n\n* made doc strings consistent to google style and some code linting\n\n\n1.2.2 (2017-11-19)\n------------------\n\n* re-release of 1.2.1 for ease of updating pypi page for updated travis & pyup.\n\n2.0.0 (2018-03-23)\n------------------\n\nmimicing python file object behavior.\n\n* filereadbackwards no longer creates multiple iterators (a change of behavior from 1.x.y version)\n* adding readline() function retuns one line at a time with a trailing new line and empty string when it reaches end of file.\n  the fine print: the trailing new line will be `os.linesep` (rather than whichever new line type in the file).\n\n3.0.0 (2023-03-29)\n------------------\n\n* officially support python 3.7 - 3.11.\n",
  "docs_url": null,
  "keywords": "file_read_backwards",
  "license": "mit license",
  "name": "file-read-backwards",
  "package_url": "https://pypi.org/project/file-read-backwards/",
  "project_url": "https://pypi.org/project/file-read-backwards/",
  "project_urls": {
    "Homepage": "https://github.com/RobinNil/file_read_backwards"
  },
  "release_url": "https://pypi.org/project/file-read-backwards/3.0.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "memory efficient way of reading files line-by-line from the end of file",
  "version": "3.0.0",
  "releases": [],
  "developers": [
    "robin_robin",
    "robinsquare42@gmail.com"
  ],
  "kwds": "file_read_backwards filereadbackwards backwards backward svg",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_file_read_backwards",
  "homepage": "https://github.com/robinnil/file_read_backwards",
  "release_count": 8,
  "dependency_ids": []
}
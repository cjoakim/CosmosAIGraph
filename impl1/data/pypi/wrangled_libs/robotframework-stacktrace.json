{
  "classifiers": [
    "framework :: robot framework",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "topic :: software development :: testing",
    "topic :: software development :: testing :: acceptance"
  ],
  "description": "# robotframework-stacktrace\na listener for rf >= 4.0 that prints a stack trace to console to faster find the code section where the failure appears.\n\n## installation\n\n```shell\npip install robotframework-stacktrace\n```\n\n## usage\n\n```shell\nrobot --listener robotstacktracer <your file.robot>\n```\n\n### example\n\nold console output:\n\n```commandline\n\u276f robot -d logs testcases/14_browser/01_carconfig.robot\n==============================================================================\n01 carconfig\n==============================================================================\nconfigure car with pass                                               | fail |\ntimeouterror: page.selectoption: timeout 3000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"\"basismodell\" >> ../.. >> select\"\n  selector resolved to visible <select _ngcontent-c7=\"\" class=\"maxwidth ng-untouched ng\u2026>\u2026</select>\n  selecting specified option(s)\n    did not find some options - waiting...\n============================================================\nnote: use debug=pw:api environment variable to capture playwright logs.\n------------------------------------------------------------------------------\nconfigure car with wrong acc                                          | fail |\ntimeouterror: page.check: timeout 3000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"//span[contains(text(),'aabs')]/../input\"\n============================================================\nnote: use debug=pw:api environment variable to capture playwright logs.\n------------------------------------------------------------------------------\nconfigure car with car acc                                            | fail |\ntimeouterror: page.click: timeout 3000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"[href=\"/config/summary/wrong\"]\"\n============================================================\nnote: use debug=pw:api environment variable to capture playwright logs.\n------------------------------------------------------------------------------\n01 carconfig                                                          | fail |\n3 tests, 0 passed, 3 failed\n==============================================================================\noutput:  /source/rf-schulung/02_robotfiles/logs/output.xml\nlog:     /source/rf-schulung/02_robotfiles/logs/log.html\nreport:  /source/rf-schulung/02_robotfiles/logs/report.html\n```\n\nnew stack trace output\n\n```commandline\n\u276f robot -d logs --listener robotstacktracer testcases/14_browser/01_carconfig.robot\n==============================================================================\n01 carconfig\n==============================================================================\nconfigure car with pass                                               ...\n  traceback (most recent call last):\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    file  /source/rf-schulung/02_robotfiles/testcases/14_browser/01_carconfig.robot:23\n    t:  configure car with pass\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    file  /source/rf-schulung/02_robotfiles/testcases/14_browser/01_carconfig.robot:28\n      select aminigolf as model\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    file  /source/rf-schulung/02_robotfiles/testcases/14_browser/functional_keywords.resource:14\n      select options by    ${select_carbasemodel}    text    ${basemodel}\n      |  ${select_carbasemodel} = \"basismodell\" >> ../.. >> select (str)\n      |  ${basemodel} = aminigolf (str)\n______________________________________________________________________________\nconfigure car with pass                                               | fail |\ntimeouterror: page.selectoption: timeout 3000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"\"basismodell\" >> ../.. >> select\"\n  selector resolved to visible <select _ngcontent-c7=\"\" class=\"maxwidth ng-untouched ng\u2026>\u2026</select>\n  selecting specified option(s)\n    did not find some options - waiting...\n============================================================\nnote: use debug=pw:api environment variable to capture playwright logs.\n------------------------------------------------------------------------------\nconfigure car with wrong acc                                          ....\n  traceback (most recent call last):\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    file  /source/rf-schulung/02_robotfiles/testcases/14_browser/01_carconfig.robot:38\n    t:  configure car with wrong acc\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    file  /source/rf-schulung/02_robotfiles/testcases/14_browser/01_carconfig.robot:43\n      select accessory    aabs\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    file  /source/rf-schulung/02_robotfiles/testcases/14_browser/functional_keywords.resource:38\n      check checkbox    //span[contains(text(),'${accessory}')]/../input\n      |  //span[contains(text(),'${accessory}')]/../input = //span[contains(text(),'aabs')]/../input (str)\n______________________________________________________________________________\nconfigure car with wrong acc                                          | fail |\ntimeouterror: page.check: timeout 3000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"//span[contains(text(),'aabs')]/../input\"\n============================================================\nnote: use debug=pw:api environment variable to capture playwright logs.\n------------------------------------------------------------------------------\nconfigure car with car acc                                            ..\n  traceback (most recent call last):\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    file  /source/rf-schulung/02_robotfiles/testcases/14_browser/01_carconfig.robot:51\n    t:  configure car with car acc\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    file  /source/rf-schulung/02_robotfiles/testcases/14_browser/01_carconfig.robot:62\n      set wrong car name    ${car}\n      |  ${car} = my new car (str)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    file  /source/rf-schulung/02_robotfiles/testcases/14_browser/functional_keywords.resource:53\n      click    ${car_name}\n      |  ${car_name} = [href=\"/config/summary/wrong\"] (str)\n______________________________________________________________________________\nconfigure car with car acc                                            | fail |\ntimeouterror: page.click: timeout 3000ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"[href=\"/config/summary/wrong\"]\"\n============================================================\nnote: use debug=pw:api environment variable to capture playwright logs.\n------------------------------------------------------------------------------\n01 carconfig                                                          | fail |\n3 tests, 0 passed, 3 failed\n==============================================================================\noutput:  /source/rf-schulung/02_robotfiles/logs/output.xml\nlog:     /source/rf-schulung/02_robotfiles/logs/log.html\nreport:  /source/rf-schulung/02_robotfiles/logs/report.html\n```\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "robotframework-stacktrace",
  "package_url": "https://pypi.org/project/robotframework-stacktrace/",
  "project_url": "https://pypi.org/project/robotframework-stacktrace/",
  "project_urls": {
    "Homepage": "https://github.com/MarketSquare/robotframework-stacktrace"
  },
  "release_url": "https://pypi.org/project/robotframework-stacktrace/0.4.1/",
  "requires_dist": [
    "robotframework (>=3.2)"
  ],
  "requires_python": ">=3.6",
  "summary": "a listener that prints a stack trace to console to faster find the code section where the failure appears.",
  "version": "0.4.1",
  "releases": [],
  "developers": [
    "snooz@posteo.de"
  ],
  "kwds": "robotstacktracer 02_robotfiles stacktrace robot pip",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_robotframework_stacktrace",
  "homepage": "https://github.com/marketsquare/robotframework-stacktrace",
  "release_count": 6,
  "dependency_ids": [
    "pypi_robotframework"
  ]
}
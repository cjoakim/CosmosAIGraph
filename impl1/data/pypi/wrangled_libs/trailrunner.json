{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "topic :: utilities",
    "typing :: typed"
  ],
  "description": "# trailrunner\n\nwalk paths and run things\n\n[![version](https://img.shields.io/pypi/v/trailrunner.svg)](https://pypi.org/project/trailrunner)\n[![documentation](https://readthedocs.org/projects/trailrunner/badge/?version=latest)](https://trailrunner.omnilib.dev)\n[![changelog](https://img.shields.io/badge/change-log-blue)](https://trailrunner.omnilib.dev/en/latest/changelog.html)\n[![license](https://img.shields.io/pypi/l/trailrunner.svg)](https://github.com/omnilib/trailrunner/blob/master/license)\n[![build status](https://github.com/omnilib/trailrunner/workflows/build/badge.svg?branch=main)](https://github.com/omnilib/trailrunner/actions)\n[![code coverage](https://img.shields.io/codecov/c/gh/omnilib/trailrunner)](https://codecov.io/gh/omnilib/trailrunner)\n\ntrailrunner is a simple library for walking paths on the filesystem, and executing\nfunctions for each file found. trailrunner obeys project level `.gitignore` files,\nand runs functions on a process pool for increased performance. trailrunner is designed\nfor use by linting, formatting, and other developer tools that need to find and operate\non all files in project in a predictable fashion with a minimal api:\n\n`walk()` takes a single `path`, and generates a list of significant files in that tree:\n\n```pycon\n>>> from trailrunner import walk\n>>> sorted(walk(path(\"trailrunner\")))\n[\n    posixpath('trailrunner/__init__.py'),\n    posixpath('trailrunner/__version__.py'),\n    posixpath('trailrunner/core.py'),\n    posixpath('trailrunner/tests/__init__.py'),\n    posixpath('trailrunner/tests/__main__.py'),\n    posixpath('trailrunner/tests/core.py'),\n]\n```\n\n`run()` takes a list of `path` objects and a function, and runs that function once\nfor each path given. it runs these functions on a process pool, and returns a mapping\nof paths to results:\n\n```pycon\n>>> from trailrunner import run\n>>> paths = [path('trailrunner/core.py'), path('trailrunner/tests/core.py')]\n>>> run(paths, str)\n{\n    posixpath('trailrunner/core.py'): 'trailrunner/core.py',\n    posixpath('trailrunner/tests/core.py'): 'trailrunner/tests/core.py',\n}\n```\n\n`walk_and_run()` does exactly what you would expect:\n\n```pycon\n>>> from trailrunner import walk_and_run\n>>> walk_and_run([path('trailrunner/tests')], str)\n{\n    posixpath('trailrunner/tests/__init__.py'): 'trailrunner/tests/__init__.py',\n    posixpath('trailrunner/tests/__main__.py'): 'trailrunner/tests/__main__.py',\n    posixpath('trailrunner/tests/core.py'): 'trailrunner/tests/core.py',\n}\n```\n\n\ninstall\n-------\n\ntrailrunner requires python 3.6 or newer. you can install it from pypi:\n\n```shell-session\n$ pip install trailrunner\n```\n\n\nlicense\n-------\n\ntrailrunner is copyright [amethyst reese](https://noswap.com), and licensed under\nthe mit license.  i am providing code in this repository to you under an open\nsource license.  this is my personal repository; the license you receive to\nmy code is from me and not from my employer. see the `license` file for details.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "trailrunner",
  "package_url": "https://pypi.org/project/trailrunner/",
  "project_url": "https://pypi.org/project/trailrunner/",
  "project_urls": {
    "Changelog": "https://trailrunner.omnilib.dev/en/latest/changelog.html",
    "Github": "https://github.com/omnilib/trailrunner",
    "Home": "https://trailrunner.omnilib.dev"
  },
  "release_url": "https://pypi.org/project/trailrunner/1.4.0/",
  "requires_dist": [
    "pathspec>=0.8.1",
    "attribution==1.6.2 ; extra == \"dev\"",
    "black==22.3.0 ; extra == \"dev\"",
    "click==8.1.3 ; extra == \"dev\"",
    "coverage==6.5 ; extra == \"dev\"",
    "flit==3.7.1 ; extra == \"dev\"",
    "flake8==4.0.1 ; extra == \"dev\"",
    "flake8-bugbear==23.2.13 ; extra == \"dev\"",
    "mypy==1.1.1 ; extra == \"dev\"",
    "rich==13.3.2 ; extra == \"dev\"",
    "ufmt==2.0.1 ; extra == \"dev\"",
    "usort==1.0.5 ; extra == \"dev\"",
    "sphinx==6.1.3 ; extra == \"docs\"",
    "sphinx-mdinclude==0.5.3 ; extra == \"docs\""
  ],
  "requires_python": ">=3.7",
  "summary": "run things on paths",
  "version": "1.4.0",
  "releases": [],
  "developers": [
    "amy@n7.gg"
  ],
  "kwds": "trailrunner walk_and_run badge omnilib paths",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_trailrunner",
  "homepage": "",
  "release_count": 11,
  "dependency_ids": [
    "pypi_attribution",
    "pypi_black",
    "pypi_click",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_flake8_bugbear",
    "pypi_flit",
    "pypi_mypy",
    "pypi_pathspec",
    "pypi_rich",
    "pypi_sphinx",
    "pypi_sphinx_mdinclude",
    "pypi_ufmt",
    "pypi_usort"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: quality assurance"
  ],
  "description": "mccabe complexity checker\n=========================\n\nned's script to check mccabe complexity.\n\nthis module provides a plugin for ``flake8``, the python code checker.\n\n\ninstallation\n------------\n\nyou can install, upgrade, or uninstall ``mccabe`` with these commands::\n\n  $ pip install mccabe\n  $ pip install --upgrade mccabe\n  $ pip uninstall mccabe\n\n\nstandalone script\n-----------------\n\nthe complexity checker can be used directly::\n\n  $ python -m mccabe --min 5 mccabe.py\n  (\"185:1: 'pathgraphingastvisitor.visitif'\", 5)\n  (\"71:1: 'pathgraph.to_dot'\", 5)\n  (\"245:1: 'mccabechecker.run'\", 5)\n  (\"283:1: 'main'\", 7)\n  (\"203:1: 'pathgraphingastvisitor.visittryexcept'\", 5)\n  (\"257:1: 'get_code_complexity'\", 5)\n\n\nplugin for flake8\n-----------------\n\nwhen both ``flake8 2+`` and ``mccabe`` are installed, the plugin is\navailable in ``flake8``::\n\n  $ flake8 --version\n  2.0 (pep8: 1.4.2, pyflakes: 0.6.1, mccabe: 0.2)\n\nby default the plugin is disabled.  use the ``--max-complexity`` switch to\nenable it.  it will emit a warning if the mccabe complexity of a function is\nhigher than the provided value::\n\n    $ flake8 --max-complexity 10 coolproject\n    ...\n    coolproject/mod.py:1204:1: c901 'coolfactory.prepare' is too complex (14)\n\nthis feature is quite useful for detecting over-complex code.  according to mccabe,\nanything that goes beyond 10 is too complex.\n\nflake8 has many features that mccabe does not provide. flake8 allows users to\nignore violations reported by plugins with ``# noqa``. read more about this in\n`their documentation\n<http://flake8.pycqa.org/en/latest/user/violations.html#in-line-ignoring-errors>`__.\nto silence violations reported by ``mccabe``, place your ``# noqa: c901`` on\nthe function definition line, where the error is reported for (possibly a\ndecorator).\n\n\nlinks\n-----\n\n* feedback and ideas: http://mail.python.org/mailman/listinfo/code-quality\n\n* cyclomatic complexity: http://en.wikipedia.org/wiki/cyclomatic_complexity\n\n* ned batchelder's script:\n  http://nedbatchelder.com/blog/200803/python_code_complexity_microtool.html\n\n* mccabe complexity: http://en.wikipedia.org/wiki/cyclomatic_complexity\n\n\nchanges\n-------\n\n0.7.0 - 2021-01-23\n``````````````````\n\n* drop support for all versions of python lower than 3.6\n\n* add support for python 3.8, 3.9, and 3.10\n\n* fix option declaration for flake8\n\n0.6.1 - 2017-01-26\n``````````````````\n\n* fix signature for ``pathgraphingastvisitor.default`` to match the signature\n  for ``astvisitor``\n\n0.6.0 - 2017-01-23\n``````````````````\n\n* add support for python 3.6\n\n* fix handling for missing statement types\n\n0.5.3 - 2016-12-14\n``````````````````\n\n* report actual column number of violation instead of the start of the line\n\n0.5.2 - 2016-07-31\n``````````````````\n\n* when opening files ourselves, make sure we always name the file variable\n\n0.5.1 - 2016-07-28\n``````````````````\n\n* set default maximum complexity to -1 on the class itself\n\n0.5.0 - 2016-05-30\n``````````````````\n\n* pycon 2016 pdx release\n\n* add support for flake8 3.0\n\n0.4.0 - 2016-01-27\n``````````````````\n\n* stop testing on python 3.2\n\n* add support for async/await keywords on python 3.5 from pep 0492\n\n0.3.1 - 2015-06-14\n``````````````````\n\n* include ``test_mccabe.py`` in releases.\n\n* always coerce the ``max_complexity`` value from flake8's entry-point to an\n  integer.\n\n0.3 - 2014-12-17\n````````````````\n\n* computation was wrong: the mccabe complexity starts at 1, not 2.\n\n* the ``max-complexity`` value is now inclusive.  e.g.: if the\n  value is 10 and the reported complexity is 10, then it passes.\n\n* add tests.\n\n\n0.2.1 - 2013-04-03\n``````````````````\n\n* do not require ``setuptools`` in setup.py.  it works around an issue\n  with ``pip`` and python 3.\n\n\n0.2 - 2013-02-22\n````````````````\n\n* rename project to ``mccabe``.\n\n* provide ``flake8.extension`` setuptools entry point.\n\n* read ``max-complexity`` from the configuration file.\n\n* rename argument ``min_complexity`` to ``threshold``.\n\n\n0.1 - 2013-02-11\n````````````````\n* first release\n\n\n",
  "docs_url": null,
  "keywords": "flake8 mccabe",
  "license": "expat license",
  "name": "mccabe",
  "package_url": "https://pypi.org/project/mccabe/",
  "project_url": "https://pypi.org/project/mccabe/",
  "project_urls": {
    "Homepage": "https://github.com/pycqa/mccabe"
  },
  "release_url": "https://pypi.org/project/mccabe/0.7.0/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "mccabe checker, plugin for flake8",
  "version": "0.7.0",
  "releases": [],
  "developers": [
    "graffatcolmingov@gmail.com",
    "ian_stapleton_cordasco",
    "tarek@ziade.org",
    "tarek_ziade"
  ],
  "kwds": "python_code_complexity_microtool get_code_complexity mccabe test_mccabe min_complexity",
  "license_kwds": "expat license",
  "libtype": "pypi",
  "id": "pypi_mccabe",
  "homepage": "https://github.com/pycqa/mccabe",
  "release_count": 13,
  "dependency_ids": []
}
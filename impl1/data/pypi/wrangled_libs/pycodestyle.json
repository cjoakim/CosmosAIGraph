{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "pycodestyle (formerly called pep8) - python style guide checker\n===============================================================\n\n.. image:: https://github.com/pycqa/pycodestyle/actions/workflows/main.yml/badge.svg\n   :target: https://github.com/pycqa/pycodestyle/actions/workflows/main.yml\n   :alt: build status\n\n.. image:: https://readthedocs.org/projects/pycodestyle/badge/?version=latest\n    :target: https://pycodestyle.pycqa.org\n    :alt: documentation status\n\n.. image:: https://img.shields.io/pypi/wheel/pycodestyle.svg\n   :target: https://pypi.org/project/pycodestyle/\n   :alt: wheel status\n\n.. image:: https://badges.gitter.im/pycqa/pycodestyle.svg\n   :alt: join the chat at https://gitter.im/pycqa/pycodestyle\n   :target: https://gitter.im/pycqa/pycodestyle?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\npycodestyle is a tool to check your python code against some of the style\nconventions in `pep 8`_.\n\n.. _pep 8: http://www.python.org/dev/peps/pep-0008/\n\n.. note::\n\n    this package used to be called ``pep8`` but was renamed to ``pycodestyle``\n    to reduce confusion. further discussion can be found `in the issue where\n    guido requested this\n    change <https://github.com/pycqa/pycodestyle/issues/466>`_, or in the\n    lightning talk at pycon 2016 by @ianlee1521:\n    `slides <https://speakerdeck.com/ianlee1521/pep8-vs-pep-8>`_\n    `video <https://youtu.be/pulzit8kylk?t=36m>`_.\n\nfeatures\n--------\n\n* plugin architecture: adding new checks is easy.\n\n* parseable output: jump to error location in your editor.\n\n* small: just one python file, requires only stdlib. you can use just\n  the ``pycodestyle.py`` file for this purpose.\n\n* comes with a comprehensive test suite.\n\ninstallation\n------------\n\nyou can install, upgrade, and uninstall ``pycodestyle.py`` with these commands::\n\n  $ pip install pycodestyle\n  $ pip install --upgrade pycodestyle\n  $ pip uninstall pycodestyle\n\nthere's also a package for debian/ubuntu, but it's not always the\nlatest version.\n\nexample usage and output\n------------------------\n\n::\n\n  $ pycodestyle --first optparse.py\n  optparse.py:69:11: e401 multiple imports on one line\n  optparse.py:77:1: e302 expected 2 blank lines, found 1\n  optparse.py:88:5: e301 expected 1 blank line, found 0\n  optparse.py:347:31: e211 whitespace before '('\n  optparse.py:357:17: e201 whitespace after '{'\n  optparse.py:472:29: e221 multiple spaces before operator\n\nyou can also make ``pycodestyle.py`` show the source code for each error, and\neven the relevant text from pep 8::\n\n  $ pycodestyle --show-source --show-pep8 testing/data/e40.py\n  testing/data/e40.py:2:10: e401 multiple imports on one line\n  import os, sys\n           ^\n      imports should usually be on separate lines.\n\n      okay: import os\\nimport sys\n      e401: import sys, os\n\n\nor you can display how often each error was found::\n\n  $ pycodestyle --statistics -qq python-2.5/lib\n  232     e201 whitespace after '['\n  599     e202 whitespace before ')'\n  631     e203 whitespace before ','\n  842     e211 whitespace before '('\n  2531    e221 multiple spaces before operator\n  4473    e301 expected 1 blank line, found 0\n  4006    e302 expected 2 blank lines, found 1\n  165     e303 too many blank lines (4)\n  325     e401 multiple imports on one line\n  3615    e501 line too long (82 characters)\n\nlinks\n-----\n\n* `read the documentation <https://pycodestyle.pycqa.org/>`_\n\n* `fork me on github <http://github.com/pycqa/pycodestyle>`_\n",
  "docs_url": null,
  "keywords": "pycodestyle,pep8,pep 8,pep-8,pep8",
  "license": "mit",
  "name": "pycodestyle",
  "package_url": "https://pypi.org/project/pycodestyle/",
  "project_url": "https://pypi.org/project/pycodestyle/",
  "project_urls": {
    "Changes": "https://pycodestyle.pycqa.org/en/latest/developer.html#changes",
    "Homepage": "https://pycodestyle.pycqa.org/"
  },
  "release_url": "https://pypi.org/project/pycodestyle/2.11.1/",
  "requires_dist": [],
  "requires_python": ">=3.8",
  "summary": "python style guide checker",
  "version": "2.11.1",
  "releases": [],
  "developers": [
    "ian_lee",
    "ianlee1521@gmail.com",
    "johann@rocholl.net",
    "johann_c"
  ],
  "kwds": "pycodestyle badges badge py documentation",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pycodestyle",
  "homepage": "https://pycodestyle.pycqa.org/",
  "release_count": 19,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8"
  ],
  "description": "execnb\n================\n\n<!-- warning: this file was autogenerated! do not edit! -->\n\n[![ci](https://github.com/fastai/execnb/actions/workflows/test.yaml/badge.svg)](https://github.com/fastai/execnb/actions/workflows/test.yaml)\n[![deploy to github\npages](https://github.com/fastai/execnb/actions/workflows/deploy.yaml/badge.svg)](https://github.com/fastai/execnb/actions/workflows/deploy.yaml)\n\n## install\n\neither:\n\n    pip install execnb\n\nor if you use conda:\n\n    conda install -c fastai execnb\n\n(you can replace `conda` with `mamba` in the line above if you have\nmamba installed.)\n\n## how to use\n\nuse\n[`captureshell`](https://fastai.github.io/execnb/shell.html#captureshell)\nto run jupyter code and capture notebook outputs, without running a\njupyter server (or even having it installed):\n\n``` python\nfrom execnb.nbio import *\nfrom execnb.shell import *\nfrom fastcore.utils import *\n```\n\n``` python\ns = captureshell()\ns.run('1+1')\n```\n\n    [{'data': {'text/plain': ['2']},\n      'metadata': {},\n      'output_type': 'execute_result',\n      'execution_count': 1}]\n\nto execute a notebook and save it with outputs filled in, use\n[`captureshell.execute`](https://fastai.github.io/execnb/shell.html#captureshell.execute):\n\n``` python\ntry:\n    s.execute('../tests/clean.ipynb', 'tmp.ipynb')\n    print(read_nb('tmp.ipynb').cells[1].outputs)\nfinally: path('tmp.ipynb').unlink()\n```\n\n    [{'name': 'stdout', 'output_type': 'stream', 'text': ['1\\n']}, {'data': {'text/plain': ['2']}, 'execution_count': 3, 'metadata': {}, 'output_type': 'execute_result'}]\n\nyou can also execute notebooks from the command line with\n[`exec_nb`](https://fastai.github.io/execnb/shell.html#exec_nb):\n\n``` python\n!exec_nb --help\n```\n\n    usage: exec_nb [-h] [--dest dest] [--exc_stop] [--inject_code inject_code]\n                   [--inject_path inject_path] [--inject_idx inject_idx]\n                   src\n\n    execute notebook from `src` and save with outputs to `dest`\n\n    positional arguments:\n      src                        notebook path to read from\n\n    optional arguments:\n      -h, --help                 show this help message and exit\n      --dest dest                notebook path to write to (default: )\n      --exc_stop                 stop on exceptions? (default: false)\n      --inject_code inject_code  code to inject into a cell\n      --inject_path inject_path  path to file containing code to inject into a cell\n      --inject_idx inject_idx    cell to replace with `inject_code` (default: 0)\n",
  "docs_url": null,
  "keywords": "some keywords",
  "license": "apache software license 2.0",
  "name": "execnb",
  "package_url": "https://pypi.org/project/execnb/",
  "project_url": "https://pypi.org/project/execnb/",
  "project_urls": {
    "Homepage": "https://github.com/fastai/execnb/tree/master/"
  },
  "release_url": "https://pypi.org/project/execnb/0.1.5/",
  "requires_dist": [
    "fastcore (>=1.5.5)",
    "ipython",
    "matplotlib ; extra == 'dev'",
    "Pillow ; extra == 'dev'"
  ],
  "requires_python": ">=3.7",
  "summary": "a description of your project",
  "version": "0.1.5",
  "releases": [],
  "developers": [
    "j@fast.ai",
    "jeremy_howard"
  ],
  "kwds": "exec_nb yaml badge execnb workflows",
  "license_kwds": "apache software license 2.0",
  "libtype": "pypi",
  "id": "pypi_execnb",
  "homepage": "https://github.com/fastai/execnb/tree/master/",
  "release_count": 16,
  "dependency_ids": [
    "pypi_fastcore",
    "pypi_ipython",
    "pypi_matplotlib",
    "pypi_pillow"
  ]
}
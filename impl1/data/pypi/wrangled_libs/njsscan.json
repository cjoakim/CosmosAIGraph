{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: gnu lesser general public license v3 or later (lgplv3+)",
    "programming language :: python :: 3.7"
  ],
  "description": "# njsscan\n**njsscan** is a static application testing (sast) tool that can find insecure code patterns in your node.js applications using simple pattern matcher from [libsast](https://github.com/ajinabraham/libsast) and syntax-aware semantic code pattern search tool [semgrep](https://github.com/returntocorp/semgrep).\n\nmade with ![love](https://cloud.githubusercontent.com/assets/4301109/16754758/82e3a63c-4813-11e6-9430-6015d98aeaab.png) in india  [![tweet](https://img.shields.io/twitter/url?url=https://github.com/ajinabraham/njsscan)](https://twitter.com/intent/tweet/?text=njsscan%20is%20a%20semantic%20aware%20sast%20tool%20that%20can%20find%20insecure%20code%20patterns%20in%20your%20node.js%20applications%20by%20%40ajinabraham%20%40opensecurity_in&url=https://github.com/ajinabraham/njsscan)\n\n[![pypi version](https://badge.fury.io/py/njsscan.svg)](https://badge.fury.io/py/njsscan)\n[![platform](https://img.shields.io/badge/platform-osx%2flinux-green.svg)](https://github.com/ajinabraham/njsscan)\n[![license](https://img.shields.io/:license-lgpl3+-blue.svg)](https://www.gnu.org/licenses/lgpl-3.0.en.html)\n[![python](https://img.shields.io/badge/python-3.7+-blue.svg)](https://www.python.org/downloads/)\n[![build](https://github.com/ajinabraham/njsscan/workflows/build/badge.svg)](https://github.com/ajinabraham/njsscan/actions?query=workflow%3abuild)\n\n### support njsscan\n\n* **donate via paypal:** [![donate via paypal](https://user-images.githubusercontent.com/4301109/76471686-c43b0500-63c9-11ea-8225-2a305efb3d87.gif)](https://paypal.me/ajinabraham)\n* **sponsor the project:** [![github sponsors](https://user-images.githubusercontent.com/4301109/95517226-9e410780-098e-11eb-9ef5-7b8c7561d725.png)](https://github.com/sponsors/ajinabraham)\n\n### e-learning courses & certifications\n[![opsecx video course](https://user-images.githubusercontent.com/4301109/82597198-99fa8600-9b76-11ea-8243-c604bc7b06b1.png)](https://opsecx.com/index.php/product/node-js-security-pentesting-and-exploitation/?uid=github) [opsecx node.js security: pentesting and exploitation - njs](https://opsecx.com/index.php/product/node-js-security-pentesting-and-exploitation/?uid=github)\n\n## installation\n\n`pip install njsscan`\n\nrequires python 3.7+ and supports only mac and linux\n\n## command line options\n\n```bash\n$ njsscan\nusage: njsscan [-h] [--json] [--sarif] [--sonarqube] [--html] [-o output] [-c config] [--missing-controls] [-w] [-v] [path ...]\n\npositional arguments:\n  path                  path can be file(s) or directories with source code\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --json                set output format as json\n  --sarif               set output format as sarif 2.1.0\n  --sonarqube           set output format compatible with sonarqube\n  --html                set output format as html\n  -o output, --output output\n                        output filename to save the result\n  -c config, --config config\n                        location to .njsscan config file\n  --missing-controls    enable missing security controls check\n  -w, --exit-warning    non zero exit code on warning\n  -v, --version         show njsscan version\n```\n\n\n## example usage\n\n```bash\n$ njsscan test.js\n- pattern match \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 1\n- semantic grep \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 160\n\nnjsscan: v0.1.9 | ajin abraham | opensecurity.in\n\u2552\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555\n\u2502 rule id     \u2502 express_xss                                                                                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 owasp       \u2502 a1: injection                                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 cwe         \u2502 cwe-79: improper neutralization of input during web page generation ('cross-site scripting')  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 description \u2502 untrusted user input in response will result in reflected cross site scripting vulnerability. \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 severity    \u2502 error                                                                                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 files       \u2502 \u2552\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555                            \u2502\n\u2502             \u2502 \u2502 file           \u2502 test.js                                       \u2502                            \u2502\n\u2502             \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524                            \u2502\n\u2502             \u2502 \u2502 match position \u2502 5 - 46                                        \u2502                            \u2502\n\u2502             \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524                            \u2502\n\u2502             \u2502 \u2502 line number(s) \u2502 7: 8                                          \u2502                            \u2502\n\u2502             \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524                            \u2502\n\u2502             \u2502 \u2502 match string   \u2502 const { name } = req.query;                   \u2502                            \u2502\n\u2502             \u2502 \u2502                \u2502     res.send('<h1> hello :' + name + \"</h1>\") \u2502                            \u2502\n\u2502             \u2502 \u2558\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255b                            \u2502\n\u2558\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255b\n```\n\n## nodejsscan sast\n\n**nodejsscan**, built on top of **njsscan** provides a full fledged vulnerability management user interface along with other nifty integrations.\n\n![nodejsscan web ui](https://user-images.githubusercontent.com/4301109/83994121-74fe6500-a923-11ea-9ad7-012113f1bb12.png)\n\nsee [nodejsscan](https://github.com/ajinabraham/nodejsscan)\n\n## python api\n\n```python\n>>> from njsscan.njsscan import njsscan\n>>> node_source = '/node_source/true_positives/sqli_node.js'\n>>> scanner = njsscan([node_source], json=true, check_controls=false)\n>>> scanner.scan()\n{\n    'templates': {},\n    'nodejs': {\n        'node_sqli_injection': {\n            'files': [{\n                'file_path': '/node_source/true_positives/sqli_node.js',\n                'match_position': (1, 24),\n                'match_lines': (4, 11),\n                'match_string': 'var employeeid = req.foo;\\n\\nvar sql = \"select * from trn_employee where employee_id = \" + employeeid;\\n\\n\\n\\nconnection.query(sql, function (error, results, fields) {\\n\\n    if (error) {\\n\\n        throw error;\\n\\n    }\\n\\n    console.log(results);'\n            }],\n            'metadata': {\n                'owasp': 'a1: injection',\n                'cwe': \"cwe-89: improper neutralization of special elements used in an sql command ('sql injection')\",\n                'description': 'untrusted input concatinated with raw sql query can result in sql injection.',\n                'severity': 'error'\n            }\n        }\n    },\n    'errors': []\n}\n```\n\n## configure njsscan\n\na `.njsscan` file in the root of the source code directory allows you to configure njsscan. you can also use a custom `.njsscan` file using `--config` argument.\n\n```yaml\n---\n- nodejs-extensions:\n  - .js\n\n  template-extensions:\n  - .new\n  - .hbs\n  - ''\n\n  ignore-filenames:\n  - skip.js\n\n  ignore-paths:\n  - __macosx\n  - skip_dir\n  - node_modules\n\n  ignore-extensions:\n  - .jsx\n\n  ignore-rules:\n  - regex_injection_dos\n  - pug_jade_template\n\n  severity-filter:\n  - warning\n  - error\n```\n\n## suppress findings\n\nyou can suppress findings from javascript source files by adding the comment `// njsscan-ignore: rule_id1, rule_id2` to the line that trigger the findings.\n\nexample:\n\n```javascript\napp.get('/some/redirect', function (req, res) {\n    var target = req.param(\"target\");\n    res.redirect(target); // njsscan-ignore: express_open_redirect\n});\n```\n\n## ci/cd integrations\n\nyou can enable njsscan in your ci/cd or devsecops pipelines.\n\n#### github action\n\nadd the following to the file `.github/workflows/njsscan.yml`.\n\n```yaml\nname: njsscan\non:\n  push:\n    branches: [ master, main ]\n  pull_request:\n    branches: [ master, main ]\njobs:\n  njsscan:\n    runs-on: ubuntu-latest\n    name: njsscan check\n    steps:\n    - name: checkout the code\n      uses: actions/checkout@v2\n    - name: nodejsscan scan\n      id: njsscan\n      uses: ajinabraham/njsscan-action@master\n      with:\n        args: '.'\n```\nexample: [dvna with njsscan github action](https://github.com/ajinabraham/dvna/actions?query=workflow%3anjsscan)\n\n#### github code scanning integration\n\nadd the following to the file `.github/workflows/njsscan_sarif.yml`.\n\n```yaml\nname: njsscan sarif\non:\n  push:\n    branches: [ master, main ]\n  pull_request:\n    branches: [ master, main ]\njobs:\n  njsscan:\n    runs-on: ubuntu-latest\n    name: njsscan code scanning\n    steps:\n    - name: checkout the code\n      uses: actions/checkout@v2\n    - name: nodejsscan scan\n      id: njsscan\n      uses: ajinabraham/njsscan-action@master\n      with:\n        args: '. --sarif --output results.sarif || true'\n    - name: upload njsscan report\n      uses: github/codeql-action/upload-sarif@v1\n      with:\n        sarif_file: results.sarif\n```\n![nodejsscan web ui](https://user-images.githubusercontent.com/4301109/99230041-cfe29500-27bc-11eb-8baa-d5b30e21348d.png)\n\n\n#### gitlab ci/cd\n\nadd the following to the file `.gitlab-ci.yml`.\n\n```yaml\nstages:\n    - test\nnjsscan:\n    image: python\n    before_script:\n        - pip3 install --upgrade njsscan\n    script:\n        - njsscan .\n```\nexample: [dvna with njsscan gitlab](https://gitlab.com/ajinabraham/dvna/-/jobs/602110439)\n\n\n#### travis ci\n\nadd the following to the file `.travis.yml`.\n\n```yaml\nlanguage: python\ninstall:\n    - pip3 install --upgrade njsscan\nscript:\n    - njsscan .\n```\n\n#### circle ci\n\nadd the following to the file `.circleci/config.yaml`\n\n```yaml\nversion: 2.1\njobs:\n  njsscan:\n    docker:\n      - image: cimg/python:3.9.6\n    steps:\n      - checkout\n      - run:\n          name: install njsscan\n          command: pip install --upgrade njsscan\n      - run:\n           name: njsscan check\n           command: njsscan .\n```\n\n## docker\n\n### prebuilt image from [dockerhub](https://hub.docker.com/r/opensecurity/njsscan)\n\n```bash\ndocker pull opensecurity/njsscan\ndocker run -v /path-to-source-dir:/src opensecurity/njsscan /src\n```\n\n### build locally\n\n```\ndocker build -t njsscan .\ndocker run -v /path-to-source-dir:/src njsscan /src\n```\n\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "njsscan",
  "package_url": "https://pypi.org/project/njsscan/",
  "project_url": "https://pypi.org/project/njsscan/",
  "project_urls": {
    "Homepage": "https://github.com/ajinabraham/njsscan"
  },
  "release_url": "https://pypi.org/project/njsscan/0.3.6/",
  "requires_dist": [
    "colorama >=0.4.5",
    "libsast >=2.0.0",
    "sarif-om >=1.0.4",
    "jschema-to-python >=1.2.3",
    "tabulate >=0.8.10"
  ],
  "requires_python": "",
  "summary": "njsscan is a sast tool that can find insecure code patterns in your node.js applications.",
  "version": "0.3.6",
  "releases": [],
  "developers": [
    "ajin25@gmail.com",
    "ajin_abraham"
  ],
  "kwds": "njsscan njsscan_sarif nodejsscan 3anjsscan jsx",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_njsscan",
  "homepage": "https://github.com/ajinabraham/njsscan",
  "release_count": 36,
  "dependency_ids": [
    "pypi_colorama",
    "pypi_jschema_to_python",
    "pypi_libsast",
    "pypi_sarif_om",
    "pypi_tabulate"
  ]
}
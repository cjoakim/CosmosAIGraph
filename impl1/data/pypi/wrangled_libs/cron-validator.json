{
  "classifiers": [],
  "description": "# cron validator\n\n[![build status](https://travis-ci.org/vcoder4c/cron-validator.svg?branch=master)](https://travis-ci.org/vcoder4c/cron-validator)\n[![coverage status](https://coveralls.io/repos/github/vcoder4c/cron-validator/badge.svg?branch=master)](https://coveralls.io/github/vcoder4c/cron-validator?branch=master)\n\n### **features**\n\n- validate unix cron expression\n- match unit cron expression with specific datetime\n- generate match datetime between two datetime\n- schedule tasks\n\n### **install**\n\n```shell script\npip install cron-validator\n```\n\n### **run tests**\n\n**1. install test requirements**\n\n```shell script\npip install -r requirements/test.txt\n```\n\n**2. run tests (with coverage if wished)**\n\n```shell script\npytest --cov=. test/\n```\n\n### sample\n\n**1. validate unix cron expression**\n\n```python\nfrom cron_validator import cronvalidator\n\nassert cronvalidator.parse('* * * * *') is not none # valid\nassert cronvalidator.parse('*/3 * * * *') is not none # valid\nassert cronvalidator.parse('*/61 * * * *') is none # invalid\n```\n\n**2. match unit cron expression with specific datetime**\n\n```python\nfrom cron_validator import cronvalidator\nfrom cron_validator.util import str_to_datetime\n\ndt_str = '2019-04-23 1:00'\ndt = str_to_datetime(dt_str)\n\nassert cronvalidator.match_datetime(\"* * * * *\", dt)\nassert cronvalidator.match_datetime(\"* * * 4 *\", dt)\nassert cronvalidator.match_datetime(\"* * * 5 *\", dt) is false\nassert cronvalidator.match_datetime(\"* * * 1-5 *\", dt)\nassert cronvalidator.match_datetime(\"* * * 1-3 *\", dt) is false\nassert cronvalidator.match_datetime(\"* * * 1/5 *\", dt) is false\nassert cronvalidator.match_datetime(\"* * * * *\", dt)\nassert cronvalidator.match_datetime(\"0 * * * *\", dt)\nassert cronvalidator.match_datetime(\"0-30 * * * *\", dt)\nassert cronvalidator.match_datetime(\"0/30 * * * *\", dt)\n```\n\n**3. generate match datetime between two datetime**\n\n```python\nfrom cron_validator import cronvalidator\nfrom cron_validator.util import str_to_datetime\n\n\nfrom_str = '2019-04-22 00:00'\nto_str = '2019-04-23 23:59'\n\nfor dt in cronvalidator.get_execution_time(\"0 0 * * *\",\nfrom_dt=str_to_datetime(from_str), to_dt=str_to_datetime(to_str)):\n    print(dt)\n\n# output:\n# 2019-04-22 00:00:00+00:00\n# 2019-04-23 00:00:00+00:00\n```\n\n**4. use scheduler for repetitive task**\n\n```python\nfrom cron_validator import cronscheduler\n\ncron_string = \"*/1 * * * *\"\nscheduler = cronscheduler(cron_string)\n\nwhile true:\n    if scheduler.time_for_execution():\n        # get's called every full minute (excluding first iteration)\n        print(\"now is the next scheduled time.\")\n```\n\n**5. use extended cron rules based on aws eventbridge rules** (from v1.0.6)\n\nthe cron validator supports partially extended rules based on the amazon evenbridge rule set. [more info.](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-create-rule-schedule.html#eb-cron-expressions)\n\ncurrently we support:\n- 'l' for day of the month and day of the week\n- 'w' for day of the week.\n\n```python\nfrom cron_validator import cronvalidator\nfrom cron_validator.util import str_to_datetime\nfrom cron_validator.regexes import version\n\ndt_str = '2023-04-28 1:00'\ndt = str_to_datetime(dt_str)\n\nassert cronvalidator.match_datetime(\"* * * * 30w\", dt, version=version.eb)\nassert cronvalidator.match_datetime(\"* * * * 5l\", dt, version=version.eb)\n\ndt_str = \"2022-02-28 1:00\"\ndt = str_to_datetime(dt_str)\nassert cronvalidator.match_datetime(\"* * l * *\", dt, version=version.eb)\n```\n\n### license\n\nthis project is licensed under the mit license - see the [license.txt](license.txt) file for details\n\n\n",
  "docs_url": null,
  "keywords": "cron,python,cron expression validator,cron expression iterator,cron scheduler",
  "license": "mit",
  "name": "cron-validator",
  "package_url": "https://pypi.org/project/cron-validator/",
  "project_url": "https://pypi.org/project/cron-validator/",
  "project_urls": {
    "Download": "https://github.com/vcoder4c/cron-validator/archive/v1.0.8.tar.gz",
    "Homepage": "https://github.com/vcoder4c/cron-validator"
  },
  "release_url": "https://pypi.org/project/cron-validator/1.0.8/",
  "requires_dist": [
    "python-dateutil",
    "pytz"
  ],
  "requires_python": "",
  "summary": "unix cron implementation by python",
  "version": "1.0.8",
  "releases": [],
  "developers": [
    "doanngocbao@gmail.com",
    "vcoder"
  ],
  "kwds": "cron_validator cronvalidator cron cron_string scheduler",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_cron_validator",
  "homepage": "https://github.com/vcoder4c/cron-validator",
  "release_count": 9,
  "dependency_ids": [
    "pypi_python_dateutil",
    "pypi_pytz"
  ]
}
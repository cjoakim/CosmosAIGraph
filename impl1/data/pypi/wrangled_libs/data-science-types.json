{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "typing :: typed"
  ],
  "description": "# mypy type stubs for numpy, pandas, and matplotlib\n\n[![join the chat at https://gitter.im/data-science-types/community](https://badges.gitter.im/data-science-types/community.svg)](https://gitter.im/data-science-types/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nthis is a [pep-561][pep-561]-compliant stub-only package\nwhich provides type information for [matplotlib][matplotlib], [numpy][numpy] and [pandas][pandas].\nthe [mypy][mypy] type checker (or pytype or pycharm) can [recognize][mypy-docs] the types in these packages by installing this package.\n\n### note: this is a work in progress\n\nmany functions are already typed, but a *lot* is still missing (numpy and pandas are *huge* libraries).\nchances are, you will see a message from mypy claiming that a function does not exist when it does exist.\nif you encounter missing functions, we would be delighted for you to send a pr.\nif you are unsure of how to type a function, we can discuss it.\n\n## installing\n\nyou can get this package from pypi:\n\n```bash\npip install data-science-types\n```\n\nto get the most up-to-date version, install it directly from github:\n\n```bash\npip install git+https://github.com/predictive-analytics-lab/data-science-types\n```\n\nor clone the repository somewhere and do `pip install -e .`.\n\n## examples\n\nthese are the kinds of things that can be checked:\n\n### array creation\n\n```python\nimport numpy as np\n\narr1: np.ndarray[np.int64] = np.array([3, 7, 39, -3])  # ok\narr2: np.ndarray[np.int32] = np.array([3, 7, 39, -3])  # type error\narr3: np.ndarray[np.int32] = np.array([3, 7, 39, -3], dtype=np.int32)  # ok\narr4: np.ndarray[float] = np.array([3, 7, 39, -3], dtype=float)  # type error: the type of ndarray can not be just \"float\"\narr5: np.ndarray[np.float64] = np.array([3, 7, 39, -3], dtype=float)  # ok\n```\n\n### operations\n\n```python\nimport numpy as np\n\narr1: np.ndarray[np.int64] = np.array([3, 7, 39, -3])\narr2: np.ndarray[np.int64] = np.array([4, 12, 9, -1])\n\nresult1: np.ndarray[np.int64] = np.divide(arr1, arr2)  # type error\nresult2: np.ndarray[np.float64] = np.divide(arr1, arr2)  # ok\n\ncompare: np.ndarray[np.bool_] = (arr1 == arr2)\n```\n\n### reductions\n\n```python\nimport numpy as np\n\narr: np.ndarray[np.float64] = np.array([[1.3, 0.7], [-43.0, 5.6]])\n\nsum1: int = np.sum(arr)  # type error\nsum2: np.float64 = np.sum(arr)  # ok\nsum3: float = np.sum(arr)  # also ok: np.float64 is a subclass of float\nsum4: np.ndarray[np.float64] = np.sum(arr, axis=0)  # ok\n\n# the same works with np.max, np.min and np.prod\n```\n\n## philosophy\n\nthe goal is not to recreate the apis exactly.\nthe main goal is to have *useful* checks on our code.\noften the actual apis in the libraries is more permissive than the type signatures in our stubs;\nbut this is (usually) a feature and not a bug.\n\n## contributing\n\nwe always welcome contributions.\nall pull requests are subject to ci checks.\nwe check for compliance with mypy and that the file formatting conforms to our black specification.\n\nyou can install these dev dependencies via\n\n```bash\npip install -e '.[dev]'\n```\n\nthis will also install numpy, pandas, and matplotlib to be able to run the tests.\n\n### running ci locally (recommended)\n\nwe include a script for running the ci checks that are triggered when a pr is opened.\nto test these out locally, you need to install the type stubs in your environment.\ntypically, you would do this with\n\n```bash\npip install -e .\n```\n\nthen use the `check_all.sh` script to run all tests:\n\n```bash\n./check_all.sh\n```\n\nbelow we describe how to run the various checks individually,\nbut `check_all.sh` should be easier to use.\n\n### checking compliance with mypy\n\nthe settings for mypy are specified in the `mypy.ini` file in the repository.\njust running\n\n```bash\nmypy tests\n```\n\nfrom the base directory should take these settings into account.\nwe enforce 0 mypy errors.\n\n### formatting with black\n\nwe use [black][black] to format the stub files.\nfirst, install `black` and then run\n\n```bash\nblack .\n```\nfrom the base directory.\n\n### pytest\n\n```bash\npython -m pytest -vv tests/\n```\n\n### flake8\n\n```bash\nflake8 *-stubs\n```\n\n## license\n\n[apache 2.0](license)\n\n\n[pep-561]: https://www.python.org/dev/peps/pep-0561/\n[matplotlib]: https://matplotlib.org\n[numpy]: https://numpy.org\n[pandas]: https://pandas.pydata.org\n[mypy]: http://www.mypy-lang.org/\n[mypy-docs]: https://mypy.readthedocs.io/en/latest/installed_packages.html\n[black]: https://github.com/psf/black\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "data-science-types",
  "package_url": "https://pypi.org/project/data-science-types/",
  "project_url": "https://pypi.org/project/data-science-types/",
  "project_urls": {
    "Bug Tracker": "https://github.com/predictive-analytics-lab/data-science-types/issues/",
    "Homepage": "https://github.com/predictive-analytics-lab/data-science-types",
    "Source Code": "https://github.com/predictive-analytics-lab/data-science-types"
  },
  "release_url": "https://pypi.org/project/data-science-types/0.2.23/",
  "requires_dist": [
    "black ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "flake8-pyi ; extra == 'dev'",
    "matplotlib ; extra == 'dev'",
    "mypy (==0.770) ; extra == 'dev'",
    "numpy ; extra == 'dev'",
    "pandas ; extra == 'dev'",
    "pytest ; extra == 'dev'"
  ],
  "requires_python": ">=3.6",
  "summary": "type stubs for python machine learning libraries",
  "version": "0.2.23",
  "releases": [],
  "developers": [
    "pal"
  ],
  "kwds": "pytype matplotlib python pandas types",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_data_science_types",
  "homepage": "https://github.com/predictive-analytics-lab/data-science-types",
  "release_count": 26,
  "dependency_ids": [
    "pypi_black",
    "pypi_flake8",
    "pypi_flake8_pyi",
    "pypi_matplotlib",
    "pypi_mypy",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pytest"
  ]
}
{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4"
  ],
  "description": "this package installs a pth file that enables the coveragepy process_startup\nfeature in this python prefix/virtualenv in subsequent runs.\n\nsee: http://nedbatchelder.com/code/coverage/subprocess.html\n\n\ndemo::\n\n    $ virtualenv tmpenv\n    $ . tmpenv/bin/activate\n    $ pip install coverage-enable-subprocess\n    $ touch .coveragerc\n    $ export coverage_process_start=$pwd/.coveragerc\n    $ echo 'print(\"oh, hi!\")' > ohhi.py\n    $ python ohhi.py\n    oh, hi!\n\n    $ coverage report\n    name                              stmts   miss  cover\n    -----------------------------------------------------\n    /etc/python2.6/sitecustomize.py       5      1    80%\n    ohhi.py                               1      0   100%\n    tmpenv/lib/python2.6/site.py        433    392     9%\n    -----------------------------------------------------\n    total                               439    393    10%\n\n\nfor projects that need to cd during their test runs, and run many processes in parallel,\ni ensure a ``$top`` variable is exported, and i use this .coveragerc::\n\n    [run]\n    parallel = true\n    branch = true\n    data_file = $top/.coverage\n\n    [report]\n    exclude_lines =\n        # have to re-enable the standard pragma\n        \\#.*pragma:\\s*no.?cover\n\n        # we can't get coverage for functions that don't return:\n        \\#.*never returns\n        \\#.*doesn't return\n\n        # don't complain if tests don't hit defensive assertion code:\n        ^\\s*raise impossible\\b\n        ^\\s*raise assertionerror\\b\n        ^\\s*raise notimplementederror\\b\n        ^\\s*return notimplemented\\b\n\n        # don't complain if tests don't hit re-raise of unexpected errors:\n        ^\\s*raise$\n\n        # if main is covered, we're good:\n        ^\\s*exit\\(main\\(\\)\\)$\n    show_missing = true\n\n    [html]\n    directory = $top/coverage-html\n\n    # vim:ft=dosini",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "coverage_enable_subprocess",
  "package_url": "https://pypi.org/project/coverage_enable_subprocess/",
  "project_url": "https://pypi.org/project/coverage_enable_subprocess/",
  "project_urls": {
    "Homepage": "https://github.com/bukzor/python-coverage-enable-subprocess"
  },
  "release_url": "https://pypi.org/project/coverage_enable_subprocess/1.0/",
  "requires_dist": [
    "coverage"
  ],
  "requires_python": "",
  "summary": "enable python coverage for subprocesses",
  "version": "1.0",
  "releases": [],
  "developers": [
    "buck.2019@gmail.com",
    "buck_evan"
  ],
  "kwds": "coverage_process_start coveragepy process_startup coverage pip",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_coverage_enable_subprocess",
  "homepage": "https://github.com/bukzor/python-coverage-enable-subprocess",
  "release_count": 2,
  "dependency_ids": [
    "pypi_coverage"
  ]
}
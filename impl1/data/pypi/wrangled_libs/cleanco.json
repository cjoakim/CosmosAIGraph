{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "topic :: office/business"
  ],
  "description": "# cleanco - clean organization names\n\n![python package](https://github.com/psolin/cleanco/workflows/python%20package/badge.svg)\n![codeql](https://github.com/psolin/cleanco/workflows/codeql/badge.svg)\n\n## what is it / what does it do?\n\nthis is a python package that processes company names, providing cleaned versions of the\nnames by stripping away terms indicating organization type (such as \"ltd.\" or \"corp\").\n\nusing a database of organization type terms, it also provides an utility to deduce the\ntype of organization, in terms of us/uk business entity types (ie. \"limited liability\ncompany\" or \"non-profit\").\n\nfinally, the system uses the term information to suggest countries the organization could\nbe established in. for example, the term \"oy\" in company name suggests it is established\nin finland, whereas \"ltd\" in company name could mean uk, us or a number of other\ncountries.\n\n## how do i install it?\njust use 'pip install cleanco' if you have pip installed (as most systems do). or download the zip distribution from this site, unzip it and then:\n\n* mac: `cd` into it, and enter `sudo python setup.py install` along with your system password.\n* windows: same thing but without `sudo`.\n\n## how does it work?\nlet's look at some sample code. to get the base name of a business without legal suffix:\n\n    >>> from cleanco import basename\n    >>> business_name = \"some big pharma, llc\"\n    >>> basename(business_name)\n    >>> 'some big pharma'\n\nnote that sometimes a name may have e.g. two different suffixes after one another. the cleanco\nterm data covers many of these, but you may want to run `basename()` twice on the name, just in case.\n\nif you want to use your custom terms, please see  `custom_basename()` that also provides some other ways to adjust how base name is produced.\n\nto get the business type or country:\n\n    >>> from cleanco import typesources, matches\n    >>> classification_sources = typesources()\n    >>> matches(\"some big pharma, llc\", classification_sources)\n    ['limited liability company']\n\nto get the possible countries of jurisdiction:\n\n    >>> from cleanco import countrysources, matches\n    >>> classification_sources = countrysources()\n    >>> matches(\"some big pharma, llc\", classification_sources) \u00b4\n    ['united states of america', 'philippines']\n\n\n## are there bugs?\nsee the issue tracker. if you find a bug or have enhancement suggestion or question, please file an issue and provide a pr if you can. for example, some of the company suffixes may be incorrect or there may be suffixes missing.\n\nto run tests, simply install the package and run `python setup.py test`. to run tests on multiple python versions, install `tox` and run it (see the provided tox.ini).\n\n## special thanks to:\n\n- wikipedia's [types of business entity article](http://en.wikipedia.org/wiki/types_of_business_entity), where i spent hours of research.\n- contributors: [petri savolainen](https://github.com/petri)\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "cleanco",
  "package_url": "https://pypi.org/project/cleanco/",
  "project_url": "https://pypi.org/project/cleanco/",
  "project_urls": {
    "Homepage": "https://github.com/psolin/cleanco"
  },
  "release_url": "https://pypi.org/project/cleanco/2.2/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python library to process company names",
  "version": "2.2",
  "releases": [],
  "developers": [
    "paul@paulsolin.com",
    "paul_solin"
  ],
  "kwds": "cleanco organization corp business_name company",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_cleanco",
  "homepage": "https://github.com/psolin/cleanco",
  "release_count": 7,
  "dependency_ids": []
}
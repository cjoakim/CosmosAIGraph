{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: posix",
    "programming language :: c",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "=============\npython-zstd\n=============\n\n.. |releasew| image:: https://github.com/sergey-dryabzhinsky/python-zstd/actions/workflows/build-wheels.yml/badge.svg?branch=v1.5.5.1\n    :target: https://github.com/sergey-dryabzhinsky/python-zstd/actions/workflows/build-wheels.yml\n\n.. |masterw| image:: https://github.com/sergey-dryabzhinsky/python-zstd/actions/workflows/build-wheels.yml/badge.svg\n    :target: https://github.com/sergey-dryabzhinsky/python-zstd/actions/workflows/build-wheels.yml\n\n+---------+------------+\n| branch  |  status    |\n+=========+============+\n| release | |releasew| |\n+---------+------------+\n| master  | |masterw|  |\n+---------+------------+\n\nsimple python bindings to yann collet zstd compression library.\n\n**zstd**, short for zstandard, is a new lossless compression algorithm,\n which provides both good compression ratio *and* speed for your standard compression needs.\n \"standard\" translates into everyday situations which neither look for highest possible ratio\n (which lzma and zpaq cover) nor extreme speeds (which lz4 covers).\n\nit is provided as a bsd-license package, hosted on github_.\n\n.. _github: https://github.com/facebook/zstd\n\n\nwarning!!!\n----------\n\nif you setup 1.0.0.99.1 version - remove it manualy to able to update.\npip matching version strings not tuple of numbers.\n\nresult generated by versions prior to 1.0.0.99.1 is not compatible with orignial zstd\nby any means. it generates custom header and can be read only by zstd python module.\n\nas of 1.0.0.99.1 version it uses standard zstd output, not modified.\n\nto prevent data loss there is two functions now: ```compress_old``` and ```decompress_old```.\nthey are works just like in old versions prior to 1.0.0.99.1.\n\nas of 1.1.4 version module build without them by default.\n\nas of 1.3.4 version these functions are deprecated and will be removed in future releases.\n\nas of 1.5.0 version these functions are removed.\n\n\ndisclaimer\n__________\n\nthese python bindings are kept simple and blunt.\n\nsupport of dictionaries and streaming is not planned.\n\n\nlinks\n-----\n\n* zstandard: https://github.com/facebook/zstd\n* more full-featured and compatible with zstandard python bindings by gregory szorc: https://github.com/indygreg/python-zstandard\n\n\nbuild from source\n-----------------\n\n   >>> $ git clone https://github.com/sergey-dryabzhinsky/python-zstd\n   >>> $ git submodule update --init\n   >>> $ apt-get install python-dev python3-dev python-setuptools python3-setuptools\n   >>> $ python setup.py build_ext clean\n   >>> $ python3 setup.py build_ext clean\n\nnote: zstd legacy format support disabled by default.\nto build with zstd legacy versions support - pass ``--legacy`` option to setup.py script:\n\n   >>> $ python setup.py build_ext --legacy clean\n\nwhen using a pep 517 builder you can use ``zstd_legacy`` environment variable instead:\n\n   >>> $ zstd_legacy=1 python -m build -w\n\nnote: python-zstd legacy format support removed since 1.5.0.\nif you need to convert old data - checkout 1.4.9.1 module version. support of it disabled by default.\nto build with python-zstd legacy format support (pre 1.1.2) - pass ``--pyzstd-legacy`` option to setup.py script:\n\n   >>> $ python setup.py build_ext --pyzstd-legacy clean\n\nif you want to build with existing distribution of libzstd just add ``--external`` option.\nbut beware! legacy formats support state is unknown in this case.\nand if your version not equal with python-zstd - tests may not pass.\n\n   >>> $ python setup.py build_ext --external clean\n\nwhen using a pep 517 builder you can use ``zstd_external`` environment variable instead:\n\n   >>> $ zstd_external=1 python -m build -w\n\nif paths to header file ``zstd.h`` and libraries is uncommon - use common ``build`` params:\n--libraries --include-dirs --library-dirs.\n\n   >>> $ python setup.py build_ext --external --include-dirs /opt/zstd/usr/include --libraries zstd --library-dirs /opt/zstd/lib clean\n\n\ninstall from pypi\n-----------------\n\n   >>> # for python 2.7+\n   >>> $ pip install zstd\n   >>> # or for python 3.4+\n   >>> $ pip3 install zstd\n\n\napi\n___\n\nerror\n  standard python exception for zstd module\n\nzstd_compress (data[, level, threads]): string|bytes\n  function, compress input data block via mutliple threads, return compressed block, or raises error.\n\n  params:\n\n  * **data**: string|bytes - input data block, length limited by 2gb by python api\n  * **level**: int - compression level, ultra-fast levels from -100 (ultra) to -1 (fast) available since zstd-1.3.4, and from 1 (fast) to 22 (slowest), 0 or unset - means default (3). default - 3.\n  * **threads**: int - how many threads to use, from 0 to 200, 0 or unset - auto-tune by cpu cores count. default - 0. since: 1.4.4.1\n\n  aliases: *compress(...)*, *dumps(...)*\n\n  exception if:\n  - level bigger than max level\n\n  max number of threads:\n  - 32bit system: 64\n  - 64bit system: 256\n  if provided bigger number - silemtly set maximum number (since 1.5.4.1)\n\n  since: 0.1\n\nzstd_uncompress (data): string|bytes\n  function, decompress input compressed data block, return decompressed block, or raises error.\n\n  support compressed data with multiple/concatenated frames (blocks) (since 1.5.5.1).\n\n  params:\n\n  * **data**: string|bytes - input compressed data block, length limited by 2gb by python api\n\n  aliases: *decompress(...)*, *uncompress(...)*, *loads(...)*\n\n  since: 0.1\n\nversion (): string|bytes\n  returns this module doted version string.\n\n  the first three digits are folow libzstd version.\n  fourth digit - module release number for that version.\n\n  since: 1.3.4.3\n\nzstd_version (): string|bytes\n  returns zstd library doted version string.\n\n  since: 1.3.4.3\n\nzstd_version_number (): int\n  returns zstd library version in format: major*100*100 + minor*100 + release.\n\n  since: 1.3.4.3\n\nzstd_threads_count (): int\n  returns zstd determined cpu cores count.\n\n  since: 1.5.4.1\n\nzstd_max_threads_count (): int\n  returns zstd library determined maximum working threads count.\n\n  since: 1.5.4.1\n\nzstd_external (): int\n  returns 0 of 1 if zstd library build as external.\n\n  since: 1.5.0.2\n\n\nremoved\n_______\n\nzstd_compress_old (data[, level]): string|bytes\n  function, compress input data block, return compressed block, or raises error.\n\n  **deprecated**: returns not compatible with zstd block header\n\n  **removed**: since 1.5.0\n\n  params:\n\n  * **data**: string|bytes - input data block, length limited by 2gb by python api\n  * **level**: int - compression level, ultra-fast levels from -5 (ultra) to -1 (fast) available since zstd-1.3.4, and from 1 (fast) to 22 (slowest), 0 or unset - means default (3). default - 3.\n\n  since: 1.0.0.99.1\n\nzstd_uncompress_old (data): string|bytes\n  function, decompress input compressed data block, return decompressed block, or raises error.\n\n  **deprecated**: accepts data with not compatible with zstd block header\n\n  **removed**: since 1.5.0\n\n  params:\n\n  * **data**: string|bytes - input compressed data block, length limited by 2gb by python api\n\n  since: 1.0.0.99.1\n\nuse\n___\n\nmodule has simple api:\n\n   >>> import zstd\n   >>> dir(zstd)\n   ['error', 'zstd_compress', 'zstd_external', 'zstd_uncompress', 'zstd_version', 'zstd_version_number', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'compress', 'decompress', 'dumps', 'loads', 'uncompress', 'version']\n   >>> zstd.version()\n   '1.5.1.0'\n   >>> zstd.zstd_version()\n   '1.5.1'\n   >>> zstd.zstd_version_number()\n   10501\n   >>> zstd.zstd_external()\n   0\n\nin python2\n\n   >>> data = \"123456qwert\"\n\nin python3 use bytes\n\n   >>> data = b\"123456qwert\"\n\n\n   >>> cdata = zstd.compress(data, 1)\n   >>> data == zstd.decompress(cdata)\n   true\n   >>> cdata_mt = zstd.compress(data, 1, 4)\n   >>> cdata == cdata_mt\n   true\n   >>> data == zstd.decompress(cdata_mt)\n   true",
  "docs_url": null,
  "keywords": "zstd,zstandard,compression",
  "license": "bsd",
  "name": "zstd",
  "package_url": "https://pypi.org/project/zstd/",
  "project_url": "https://pypi.org/project/zstd/",
  "project_urls": {
    "Homepage": "https://github.com/sergey-dryabzhinsky/python-zstd"
  },
  "release_url": "https://pypi.org/project/zstd/1.5.5.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "zstd bindings for python",
  "version": "1.5.5.1",
  "releases": [],
  "developers": [
    "sergey.dryabzhinsky@gmail.com",
    "sergey_dryabzhinsky"
  ],
  "kwds": "zstd_version_number zstd_version zstd_legacy branch zstd",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_zstd",
  "homepage": "https://github.com/sergey-dryabzhinsky/python-zstd",
  "release_count": 39,
  "dependency_ids": []
}
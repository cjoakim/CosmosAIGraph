{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: gnu lesser general public license v2 (lgplv2)",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: security :: cryptography",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: networking"
  ],
  "description": "tlslite-ng is a pure python implementation of sslv3.0, tls 1.0, tls 1.1 and\ntls 1.2 protocols.\n\nit can use pycrypto, m2crypto and gmp for acceleration of cryptographic\noperations but is not dependant upon them.\n\nfunctionality implemented include:\n - all above mentioned protocols, including support for client certificates\n   (rfc 6101, rfc 2246, rfc 4346, rfc 5246)\n - rc4, 3des-cbc, aes-cbc, aes-gcm and chacha20 ciphers (rfc 5246, rfc 6347,\n   rfc 4492, rfc 5288, rfc 5289, rfc 7539, rfc 7905)\n - md5, sha1, sha256 and sha384 hmacs as well as aead mode of operation with\n   gcm or poly1305 authenticator\n - rsa, dhe_rsa and ecdhe_rsa key exchange\n - full set of signature hashes (md5, sha1, sha224, sha256, sha384, sha512,\n   rsa_pss_sha256, rsa_pss_sha384 and rsa_pss_sha512) for serverkeyexchange\n   and certfificateverify in tls v1.2\n - secp256r1, secp384r1, secp521r1, secp256k1, secp224r1 and secp192r1 curves\n   for ecdhe_rsa key exchange (support for last two depends on the version\n   of ecdsa library used)\n - x25519 and x448 curves for ecdhe_rsa key exchage (rfc 7748. rfc 4492bis)\n - anonymous dhe key exchange\n - anonymous ecdh key exchange\n - null encryption ciphersuites\n - fallback_scsv (rfc 7507)\n - encrypt-then-mac mode of operation for cbc ciphersuites (rfc 7366)\n - tack certificate pinning\n - srp_sha_rsa and srp_sha ciphersuites (rfc 5054)\n - extended master secret calculation for tls connections (rfc 7627)\n - padding extension (rfc 7685)\n - keying material exporter (rfc 5705)\n - next protocol negotiation\n - application-layer protocol negotiation extension (rfc 7301)\n - ffdhe prime/group negotiation (rfc 7919)\n\n\ntlslite-ng aims to be a drop-in replacement for tlslite while providing more\ncomprehensive set of features and more secure defautls.",
  "docs_url": null,
  "keywords": "ssl,tls,pure-python",
  "license": "lgplv2",
  "name": "tlslite-ng",
  "package_url": "https://pypi.org/project/tlslite-ng/",
  "project_url": "https://pypi.org/project/tlslite-ng/",
  "project_urls": {
    "Homepage": "https://github.com/tlsfuzzer/tlslite-ng"
  },
  "release_url": "https://pypi.org/project/tlslite-ng/0.7.6/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "pure python implementation of ssl and tls.",
  "version": "0.7.6",
  "releases": [],
  "developers": [
    "hkario@redhat.com",
    "hubert_kario"
  ],
  "kwds": "pycrypto tls tlslite sslv3 ciphers",
  "license_kwds": "lgplv2",
  "libtype": "pypi",
  "id": "pypi_tlslite_ng",
  "homepage": "https://github.com/tlsfuzzer/tlslite-ng",
  "release_count": 81,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "welcome to fastcore\n================\n\n<!-- warning: this file was autogenerated! do not edit! -->\n\npython is a powerful, dynamic language. rather than bake everything into\nthe language, it lets the programmer customize it to make it work for\nthem. `fastcore` uses this flexibility to add to python features\ninspired by other languages we\u2019ve loved, like multiple dispatch from\njulia, mixins from ruby, and currying, binding, and more from haskell.\nit also adds some \u201cmissing features\u201d and clean up some rough edges in\nthe python standard library, such as simplifying parallel processing,\nand bringing ideas from numpy over to python\u2019s `list` type.\n\n## getting started\n\nto install fastcore run: `conda install fastcore -c fastai` (if you use\nanaconda, which we recommend) or `pip install fastcore`. for an\n[editable\ninstall](https://stackoverflow.com/questions/35064426/when-would-the-e-editable-option-be-useful-with-pip-install),\nclone this repo and run: `pip install -e \".[dev]\"`. fastcore is tested\nto work on ubuntu, macos and windows (versions tested are those show\nwith the `-latest` suffix\n[here](https://docs.github.com/en/actions/reference/specifications-for-github-hosted-runners#supported-runners-and-hardware-resources).\n\n`fastcore` contains many features, including:\n\n- `fastcore.test`: simple testing functions\n- `fastcore.foundation`: mixins, delegation, composition, and more\n- `fastcore.xtras`: utility functions to help with functional-style\n  programming, parallel processing, and more\n- `fastcore.dispatch`: multiple dispatch methods\n- `fastcore.transform`: pipelines of composed partially reversible\n  transformations\n\nto get started, we recommend you read through [the fastcore\ntour](https://fastcore.fast.ai/tour.html).\n\n## contributing\n\nafter you clone this repository, please run `nbdev_install_hooks` in\nyour terminal. this sets up git hooks, which clean up the notebooks to\nremove the extraneous stuff stored in the notebooks (e.g.\u00a0which cells\nyou ran) which causes unnecessary merge conflicts.\n\nto run the tests in parallel, launch `nbdev_test`.\n\nbefore submitting a pr, check that the local library and notebooks\nmatch.\n\n- if you made a change to the notebooks in one of the exported cells,\n  you can export it to the library with `nbdev_prepare`.\n- if you made a change to the library, you can export it back to the\n  notebooks with `nbdev_update`.\n\n\n",
  "docs_url": null,
  "keywords": "python",
  "license": "apache software license 2.0",
  "name": "fastcore",
  "package_url": "https://pypi.org/project/fastcore/",
  "project_url": "https://pypi.org/project/fastcore/",
  "project_urls": {
    "Homepage": "https://github.com/fastai/fastcore/"
  },
  "release_url": "https://pypi.org/project/fastcore/1.5.29/",
  "requires_dist": [
    "pip",
    "packaging",
    "numpy ; extra == 'dev'",
    "nbdev (>=0.2.39) ; extra == 'dev'",
    "matplotlib ; extra == 'dev'",
    "pillow ; extra == 'dev'",
    "torch ; extra == 'dev'",
    "pandas ; extra == 'dev'",
    "jupyterlab ; extra == 'dev'"
  ],
  "requires_python": ">=3.7",
  "summary": "python supercharged for fastai development",
  "version": "1.5.29",
  "releases": [],
  "developers": [
    "infos@fast.ai",
    "jeremy_howard_and_sylvain_gugger"
  ],
  "kwds": "python fastcore pip programming numpy",
  "license_kwds": "apache software license 2.0",
  "libtype": "pypi",
  "id": "pypi_fastcore",
  "homepage": "https://github.com/fastai/fastcore/",
  "release_count": 141,
  "dependency_ids": [
    "pypi_jupyterlab",
    "pypi_matplotlib",
    "pypi_nbdev",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_pillow",
    "pypi_pip",
    "pypi_torch"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "opentelemetry urllib3 instrumentation\n======================================\n\n|pypi|\n\n.. |pypi| image:: https://badge.fury.io/py/opentelemetry-instrumentation-urllib3.svg\n   :target: https://pypi.org/project/opentelemetry-instrumentation-urllib3/\n\nthis library allows tracing http requests made by the\n`urllib3 <https://urllib3.readthedocs.io/>`_ library.\n\ninstallation\n------------\n\n::\n\n     pip install opentelemetry-instrumentation-urllib3\n\nconfiguration\n-------------\n\nrequest/response hooks\n**********************\n\nthe urllib3 instrumentation supports extending tracing behavior with the help of\nrequest and response hooks. these are functions that are called back by the instrumentation\nright after a span is created for a request and right before the span is finished processing a response respectively.\nthe hooks can be configured as follows:\n\n.. code:: python\n\n    # `request` is an instance of urllib3.connectionpool.httpconnectionpool\n    def request_hook(span, request):\n        pass\n\n    # `request` is an instance of urllib3.connectionpool.httpconnectionpool\n    # `response` is an instance of urllib3.response.httpresponse\n    def response_hook(span, request, response):\n        pass\n\n    urllib3instrumentor().instrument(\n        request_hook=request_hook, response_hook=response_hook\n    )\n\nexclude lists\n*************\n\nto exclude certain urls from being tracked, set the environment variable ``otel_python_urllib3_excluded_urls``\n(or ``otel_python_excluded_urls`` as fallback) with comma delimited regexes representing which urls to exclude.\n\nfor example,\n\n::\n\n    export otel_python_urllib3_excluded_urls=\"client/.*/info,healthcheck\"\n\nwill exclude requests such as ``https://site/client/123/info`` and ``https://site/xyz/healthcheck``.\n\nreferences\n----------\n\n* `opentelemetry urllib3 instrumentation <https://opentelemetry-python-contrib.readthedocs.io/en/latest/instrumentation/urllib3/urllib3.html>`_\n* `opentelemetry project <https://opentelemetry.io/>`_\n* `opentelemetry python examples <https://github.com/open-telemetry/opentelemetry-python/tree/main/docs/examples>`_\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "opentelemetry-instrumentation-urllib3",
  "package_url": "https://pypi.org/project/opentelemetry-instrumentation-urllib3/",
  "project_url": "https://pypi.org/project/opentelemetry-instrumentation-urllib3/",
  "project_urls": {
    "Homepage": "https://github.com/open-telemetry/opentelemetry-python-contrib/tree/main/instrumentation/opentelemetry-instrumentation-urllib3"
  },
  "release_url": "https://pypi.org/project/opentelemetry-instrumentation-urllib3/0.43b0/",
  "requires_dist": [
    "opentelemetry-api~=1.12",
    "opentelemetry-instrumentation==0.43b0",
    "opentelemetry-semantic-conventions==0.43b0",
    "opentelemetry-util-http==0.43b0",
    "wrapt<2.0.0,>=1.0.0",
    "urllib3<3.0.0,>=1.0.0; extra == 'instruments'",
    "httpretty~=1.0; extra == 'test'",
    "opentelemetry-instrumentation-urllib3[instruments]; extra == 'test'",
    "opentelemetry-test-utils==0.43b0; extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "opentelemetry urllib3 instrumentation",
  "version": "0.43b0",
  "releases": [],
  "developers": [
    "cncf-opentelemetry-contributors@lists.cncf.io"
  ],
  "kwds": "otel_python_urllib3_excluded_urls urllib3 urllib3instrumentor tracing otel_python_excluded_urls",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_opentelemetry_instrumentation_urllib3",
  "homepage": "",
  "release_count": 29,
  "dependency_ids": [
    "pypi_httpretty",
    "pypi_opentelemetry_api",
    "pypi_opentelemetry_instrumentation",
    "pypi_opentelemetry_instrumentation_urllib3",
    "pypi_opentelemetry_semantic_conventions",
    "pypi_opentelemetry_test_utils",
    "pypi_opentelemetry_util_http",
    "pypi_urllib3",
    "pypi_wrapt"
  ]
}
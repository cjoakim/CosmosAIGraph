{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mozilla public license 2.0 (mpl 2.0)",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing",
    "topic :: utilities"
  ],
  "description": ".. contents::\n\npytest-rerunfailures\n====================\n\npytest-rerunfailures is a plugin for `pytest <https://pytest.org>`_ that\nre-runs tests to eliminate intermittent failures.\n\n.. image:: https://img.shields.io/badge/license-mpl%202.0-blue.svg\n   :target: https://github.com/pytest-dev/pytest-rerunfailures/blob/master/license\n   :alt: license\n.. image:: https://img.shields.io/pypi/v/pytest-rerunfailures.svg\n   :target: https://pypi.python.org/pypi/pytest-rerunfailures/\n   :alt: pypi\n.. image:: https://github.com/pytest-dev/pytest-rerunfailures/workflows/test/badge.svg\n   :target: https://github.com/pytest-dev/pytest-rerunfailures/actions\n   :alt: github actions\n\nrequirements\n------------\n\nyou will need the following prerequisites in order to use pytest-rerunfailures:\n\n- python 3.7, up to 3.12, or pypy3\n- pytest 7.0 or newer\n\nthis plugin can recover from a hard crash with the following optional\nprerequisites:\n\n- pytest-xdist 2.3.0 or newer\n\nthis package is currently tested against the last 5 minor pytest releases. in\ncase you work with an older version of pytest you should consider updating or\nuse one of the earlier versions of this package.\n\ninstallation\n------------\n\nto install pytest-rerunfailures:\n\n.. code-block:: bash\n\n  $ pip install pytest-rerunfailures\n\nrecover from hard crashes\n-------------------------\n\nif one or more tests trigger a hard crash (for example: segfault), this plugin\nwill ordinarily be unable to rerun the test. however, if a compatible version of\npytest-xdist is installed, and the tests are run within pytest-xdist using the `-n`\nflag, this plugin will be able to rerun crashed tests, assuming the workers and\ncontroller are on the same lan (this assumption is valid for almost all cases\nbecause most of the time the workers and controller are on the same computer).\nif this assumption is not the case, then this functionality may not operate.\n\nre-run all failures\n-------------------\n\nto re-run all test failures, use the ``--reruns`` command line option with the\nmaximum number of times you'd like the tests to run:\n\n.. code-block:: bash\n\n  $ pytest --reruns 5\n\nfailed fixture or setup_class will also be re-executed.\n\nto add a delay time between re-runs use the ``--reruns-delay`` command line\noption with the amount of seconds that you would like wait before the next\ntest re-run is launched:\n\n.. code-block:: bash\n\n   $ pytest --reruns 5 --reruns-delay 1\n\nre-run all failures matching certain expressions\n------------------------------------------------\n\nto re-run only those failures that match a certain list of expressions, use the\n``--only-rerun`` flag and pass it a regular expression. for example,\nthe following would only rerun those errors that match ``assertionerror``:\n\n.. code-block:: bash\n\n   $ pytest --reruns 5 --only-rerun assertionerror\n\npassing the flag multiple times accumulates the arguments, so the following\nwould only rerun those errors that match ``assertionerror`` or ``valueerror``:\n\n.. code-block:: bash\n\n   $ pytest --reruns 5 --only-rerun assertionerror --only-rerun valueerror\n\nre-run all failures other than matching certain expressions\n-----------------------------------------------------------\n\nto re-run only those failures that do not match a certain list of expressions, use the\n``--rerun-except`` flag and pass it a regular expression. for example,\nthe following would only rerun errors other than that match ``assertionerror``:\n\n.. code-block:: bash\n\n   $ pytest --reruns 5 --rerun-except assertionerror\n\npassing the flag multiple times accumulates the arguments, so the following\nwould only rerun those errors that does not match with ``assertionerror`` or ``oserror``:\n\n.. code-block:: bash\n\n   $ pytest --reruns 5 --rerun-except assertionerror --rerun-except oserror\n\n.. note::\n\n   when the ```assertionerror``` comes from the use of the ``assert`` keyword,\n   use ``--rerun-except assert`` instead::\n\n   $ pytest --reruns 5 --rerun-except assert\n\nre-run individual failures\n--------------------------\n\nto mark individual tests as flaky, and have them automatically re-run when they\nfail, add the ``flaky`` mark with the maximum number of times you'd like the\ntest to run:\n\n.. code-block:: python\n\n  @pytest.mark.flaky(reruns=5)\n  def test_example():\n      import random\n      assert random.choice([true, false])\n\nnote that when teardown fails, two reports are generated for the case, one for\nthe test case and the other for the teardown error.\n\nyou can also specify the re-run delay time in the marker:\n\n.. code-block:: python\n\n  @pytest.mark.flaky(reruns=5, reruns_delay=2)\n  def test_example():\n      import random\n      assert random.choice([true, false])\n\nyou can also specify an optional ``condition`` in the re-run marker:\n\n.. code-block:: python\n\n   @pytest.mark.flaky(reruns=5, condition=sys.platform.startswith(\"win32\"))\n   def test_example():\n      import random\n      assert random.choice([true, false])\n\nexception filtering can be accomplished by specifying regular expressions for\n``only_rerun`` and ``rerun_except``. they override the ``--only-rerun`` and\n``--rerun-except`` command line arguments, respectively.\n\narguments can be a single string:\n\n.. code-block:: python\n\n   @pytest.mark.flaky(rerun_except=\"assertionerror\")\n   def test_example():\n       raise assertionerror()\n\nor a list of strings:\n\n.. code-block:: python\n\n   @pytest.mark.flaky(only_rerun=[\"assertionerror\", \"valueerror\"])\n   def test_example():\n       raise assertionerror()\n\n\nyou can use ``@pytest.mark.flaky(condition)`` similarly as ``@pytest.mark.skipif(condition)``, see `pytest-mark-skipif <https://docs.pytest.org/en/6.2.x/reference.html#pytest-mark-skipif>`_\n\n.. code-block:: python\n\n    @pytest.mark.flaky(reruns=2,condition=\"sys.platform.startswith('win32')\")\n    def test_example():\n        import random\n        assert random.choice([true, false])\n    # totally same as the above\n    @pytest.mark.flaky(reruns=2,condition=sys.platform.startswith(\"win32\"))\n    def test_example():\n      import random\n      assert random.choice([true, false])\n\nnote that the test will re-run for any ``condition`` that is truthy.\n\noutput\n------\n\nhere's an example of the output provided by the plugin when run with\n``--reruns 2`` and ``-r ar``::\n\n  test_report.py rrf\n\n  ================================== failures ==================================\n  __________________________________ test_fail _________________________________\n\n      def test_fail():\n  >       assert false\n  e       assert false\n\n  test_report.py:9: assertionerror\n  ============================ rerun test summary info =========================\n  rerun test_report.py::test_fail\n  rerun test_report.py::test_fail\n  ============================ short test summary info =========================\n  fail test_report.py::test_fail\n  ======================= 1 failed, 2 rerun in 0.02 seconds ====================\n\nnote that output will show all re-runs. tests that fail on all the re-runs will\nbe marked as failed.\n\ncompatibility\n-------------\n\n* this plugin may *not* be used with class, module, and package level fixtures.\n* this plugin is *not* compatible with pytest-xdist's --looponfail flag.\n* this plugin is *not* compatible with the core --pdb flag.\n* this plugin is *not* compatible with the plugin\n  `flaky <https://pypi.org/project/flaky/>`_, you can only have\n  ``pytest-rerunfailures`` or ``flaky`` but not both.\n\nresources\n---------\n\n- `issue tracker <https://github.com/pytest-dev/pytest-rerunfailures/issues>`_\n- `code <https://github.com/pytest-dev/pytest-rerunfailures/>`_\n\ndevelopment\n-----------\n\n* test execution count can be retrieved from the ``execution_count`` attribute\n  in test ``item``'s object. example:\n\n  .. code-block:: python\n\n    @hookimpl(tryfirst=true)\n    def pytest_runtest_makereport(item, call):\n        print(item.execution_count)\n\nchangelog\n=========\n\n13.0 (2023-11-22)\n-----------------\n\nbreaking changes\n++++++++++++++++\n\n- drop support for pytest < 7.0.\n\nfeatures\n++++++++\n\n- add support for python 3.12.\n\nbug fixes\n+++++++++\n\n- fix crashitem names mismatch between client and server.\n  (`#172 <https://github.com/pytest-dev/pytest-rerunfailures/issues/172>`_)\n\n- fix crash when setup fails with --rerun-except flag.\n  (`#230 <https://github.com/pytest-dev/pytest-rerunfailures/issues/230>`_)\n\n12.0 (2023-07-05)\n-----------------\n\nbreaking changes\n++++++++++++++++\n\n- drop support for pytest < 6.2.\n\nfeatures\n++++++++\n\n- add ``only_rerun`` and ``rerun_except`` arguments to ``@pytest.mark.flaky`` marker.\n\n- add support for pytest 7.3, 7.4.\n\nbug fixes\n+++++++++\n\n- failures are now rerun only if they match at least one ``--only-rerun``\n  pattern (if given) and none of the ``--rerun-except`` patterns. previously,\n  using both ``--only-rerun`` and ``--rerun-except`` together could cause\n  failures to be rerun even if they did not match any ``--only-rerun``\n  pattern, and when using multiple ``--rerun-except`` patterns, all failures\n  would be rerun unless they matched every pattern.\n  (`#225 <https://github.com/pytest-dev/pytest-rerunfailures/issues/225>`_)\n\n\n11.1.2 (2023-03-09)\n-------------------\n\nbug fixes\n+++++++++\n\n- execute teardown when test was skipped in setup phase of a fixture.\n\n\n11.1.1 (2023-02-17)\n-------------------\n\nbug fixes\n+++++++++\n\n- fix crash during teardown when runtest protocol hook is overwritten by\n  another plugin.\n\n- fix crash during teardown when testcase class is used as base class.\n\n\n11.1 (2023-02-09)\n-----------------\n\nbug fixes\n+++++++++\n\n- run teardown of session, class, ... scoped fixtures only once after rerunning tests\n\nfeatures\n++++++++\n\n- expose `reruns` and `reruns_delay` through `pytest.ini` file.\n\n\n11.0 (2023-01-12)\n-----------------\n\nbreaking changes\n++++++++++++++++\n\n- drop support for python 3.6.\n\n- drop support for pytest < 6.\n\nbug fixes\n+++++++++\n\n- fix crash when pytest-xdist is installed but disabled.\n  (thanks to `@mgorny <https://github.com/mgorny>`_ for the pr.)\n\n- fix crash when xfail(strict=true) mark is used with --rerun-only flag.\n\nfeatures\n++++++++\n\n- added option `--rerun-except` to rerun failed tests those are other than the mentioned error.\n\n- add support for python 3.11.\n\n- add support for pytest 7.0, 7.1, 7.2.\n\n\n10.2 (2021-09-17)\n-----------------\n\nfeatures\n++++++++\n\n- allow recovery from crashed tests with pytest-xdist.\n- add support for python 3.10 (as of python 3.10.rc2).\n  (thanks to `@hugovk <https://github.com/hugovk>`_ for the pr.)\n\n\n10.1 (2021-07-02)\n-----------------\n\nfeatures\n++++++++\n\n- allows using a ``str`` as condition for\n  ``@pytest.mark.flaky(condition)``\n  which gets evaluated dynamically similarly to\n  ``@pytest.mark.skipif(condition)``.\n  (`#162 <https://github.com/pytest-dev/pytest-rerunfailures/pull/162>`_\n  provided by `@15klli <https://github.com/15klli>`_)\n\n10.0 (2021-05-26)\n-----------------\n\nbackwards incompatible changes\n++++++++++++++++++++++++++++++\n\n- drop support for python 3.5.\n\n- drop support for pytest < 5.3.\n\nfeatures\n++++++++\n\n- add ``condition`` keyword argument to the re-run marker.\n  (thanks to `@beyondevil`_ for the pr.)\n\n- add support for python 3.9.\n  (thanks to `@digitronik`_ for the pr.)\n\n- add support for pytest 6.3.\n  (thanks to `@bluetech`_ for the pr.)\n\n- add compatibility with ``pytest-xdist >= 2.0``.\n  (thanks to `@bluetech`_ for the pr.)\n\nother changes\n+++++++++++++\n\n- check for the resultlog by feature and not by version as pytest master does\n  not provide a consistent version.\n\n.. _@beyondevil: https://github.com/beyondevil\n.. _@digitronik: https://github.com/digitronik\n.. _@bluetech: https://github.com/bluetech\n\n9.1.1 (2020-09-29)\n------------------\n\ncompatibility fix.\n++++++++++++++++++\n\n- ignore ``--result-log`` command line option when used together with ``pytest\n  >= 6.1.0``, as it was removed there. this is a quick fix, use an older\n  version of pytest, if you want to keep this feature for now.\n  (thanks to `@ntessore`_ for the pr)\n\n- support up to pytest 6.1.0.\n\n.. _@ntessore: https://github.com/ntessore\n\n\n9.1 (2020-08-26)\n----------------\n\nfeatures\n++++++++\n\n- add a new flag ``--only-rerun`` to allow for users to rerun only certain\n  errors.\n\nother changes\n+++++++++++++\n\n- drop dependency on ``mock``.\n\n- add support for pre-commit and add a linting tox target.\n  (`#117 <https://github.com/pytest-dev/pytest-rerunfailures/pull/117>`_)\n  (pr from `@gnikonorov`_)\n\n.. _@gnikonorov: https://github.com/gnikonorov\n\n\n9.0 (2020-03-18)\n----------------\n\nbackwards incompatible changes\n++++++++++++++++++++++++++++++\n\n- drop support for pytest version 4.4, 4.5 and 4.6.\n\n- drop support for python 2.7.\n\n\nfeatures\n++++++++\n\n- add support for pytest 5.4.\n\n- add support for python 3.8.\n\n\n8.0 (2019-11-18)\n----------------\n\nbackwards incompatible changes\n++++++++++++++++++++++++++++++\n\n- drop support for pytest version 3.10, 4.0, 4.1, 4.2 and 4.3\n\n- drop support for python 3.4.\n\nfeatures\n++++++++\n\n- add support for pytest version 4.4, 4.5, 4.6, 5.0, 5.1 and 5.2.\n\nbug fixes\n+++++++++\n\n- explicitly depend on setuptools to ensure installation when working in\n  environments without it.\n  (`#98 <https://github.com/pytest-dev/pytest-rerunfailures/pull/98>`_)\n  (pr from `@eric-arellano`_)\n\n.. _@eric-arellano: https://github.com/eric-arellano\n\n\n7.0 (2019-03-28)\n----------------\n\nbackwards incompatible changes\n++++++++++++++++++++++++++++++\n\n- drop support for pytest version 3.8 and 3.9.\n\nfeatures\n++++++++\n\n- add support for pytest version 4.2 and 4.3.\n\nbug fixes\n+++++++++\n\n- fixed #83 issue about ignored ``pytest_runtest_logfinish`` hooks.\n  (`#83 <https://github.com/pytest-dev/pytest-rerunfailures/issues/83>`_)\n  (pr from `@killachicken`_)\n\n.. _@killachicken: https://github.com/killachicken\n\n\n6.0 (2019-01-08)\n----------------\n\nbackwards incompatible changes\n++++++++++++++++++++++++++++++\n\n- drop support for pytest version 3.6 and 3.7.\n\nfeatures\n++++++++\n\n- add support for pytest version 4.0 and 4.1.\n\nbug fixes\n+++++++++\n\n- fixed #77 regression issue introduced in 4.2 related to the ``rerun``\n  attribute on the test report.\n  (`#77 <https://github.com/pytest-dev/pytest-rerunfailures/issues/77>`_)\n  (thanks to `@ribeiroana`_ for the pr).\n\n.. _@ribeiroana: https://github.com/ribeiroana\n\n\n5.0 (2018-11-06)\n----------------\n\n- drop support for pytest versions < 3.6 to reduce the maintenance burden.\n\n- add support up to pytest version 3.10. thus supporting the newest 5 pytest\n  releases.\n\n- add support for python 3.7.\n\n- fix issue can occur when used together with `pytest-flake8`\n  (`#73 <https://github.com/pytest-dev/pytest-rerunfailures/issues/73>`_)\n\n\n4.2 (2018-10-04)\n----------------\n\n- fixed #64 issue related to ``setup_class`` and ``fixture`` executions on\n  rerun (thanks to `@olegkuzovkov`_ for the pr).\n\n- added new ``execution_count`` attribute to reflect the number of test case\n  executions according to #67 issue. (thanks to `@olegkuzovkov`_ for the pr).\n\n.. _@olegkuzovkov: https://github.com/olegkuzovkov\n\n\n4.1 (2018-05-23)\n----------------\n\n- add support for pytest 3.6 by using ``node.get_closest_marker()`` (thanks to\n  `@the-compiler`_ for the pr).\n\n.. _@the-compiler: https://github.com/the-compiler\n\n4.0 (2017-12-23)\n----------------\n\n- added option to add a delay time between test re-runs (thanks to `@kanguros`_\n  for the pr).\n\n- added support for pytest >= 3.3.\n\n- drop support for pytest < 2.8.7.\n\n.. _@kanguros: https://github.com/kanguros\n\n\n3.1 (2017-08-29)\n----------------\n\n- restored compatibility with pytest-xdist. (thanks to `@davehunt`_ for the pr)\n\n.. _@davehunt: https://github.com/davehunt\n\n\n3.0 (2017-08-17)\n----------------\n\n- add support for python 3.6.\n\n- add support for pytest 2.9 up to 3.2\n\n- drop support for python 2.6 and 3.3.\n\n- drop support for pytest < 2.7.\n\n\n2.2 (2017-06-23)\n----------------\n\n- ensure that other plugins can run after this one, in case of a global setting\n  ``--rerun=0``. (thanks to `@sublee`_ for the pr)\n\n.. _@sublee: https://github.com/sublee\n\n2.1.0 (2016-11-01)\n------------------\n\n- add default value of ``reruns=1`` if ``pytest.mark.flaky()`` is called\n  without arguments.\n\n- also offer a distribution as universal wheel. (thanks to `@tltx`_ for the pr)\n\n.. _@tltx: https://github.com/tltx\n\n\n2.0.1 (2016-08-10)\n-----------------------------\n\n- prepare cli options to pytest 3.0, to avoid a deprecation warning.\n\n- fix error due to missing changes.rst when creating the source distribution\n  by adding a manifest.in.\n\n\n2.0.0 (2016-04-06)\n------------------\n\n- drop support for python 3.2, since supporting it became too much of a hassle.\n  (reason: virtualenv 14+ / pip 8+ do not support python 3.2 anymore.)\n\n\n1.0.2 (2016-03-29)\n------------------\n\n- add support for `--resultlog` option by parsing reruns accordingly. (#28)\n\n\n1.0.1 (2016-02-02)\n------------------\n\n- improve package description and include changelog into description.\n\n\n1.0.0 (2016-02-02)\n------------------\n\n- rewrite to use newer api of pytest >= 2.3.0\n\n- improve support for pytest-xdist by only logging the final result.\n  (logging intermediate results will finish the test rather rerunning it.)\n",
  "docs_url": null,
  "keywords": "py.test pytest rerun failures flaky",
  "license": "mozilla public license 2.0 (mpl 2.0)",
  "name": "pytest-rerunfailures",
  "package_url": "https://pypi.org/project/pytest-rerunfailures/",
  "project_url": "https://pypi.org/project/pytest-rerunfailures/",
  "project_urls": {
    "Homepage": "https://github.com/pytest-dev/pytest-rerunfailures"
  },
  "release_url": "https://pypi.org/project/pytest-rerunfailures/13.0/",
  "requires_dist": [
    "packaging >=17.1",
    "pytest >=7",
    "importlib-metadata >=1 ; python_version < \"3.8\""
  ],
  "requires_python": ">=3.7",
  "summary": "pytest plugin to re-run tests to eliminate flaky failures",
  "version": "13.0",
  "releases": [],
  "developers": [
    "leah_klearman",
    "lklrmn@gmail.com"
  ],
  "kwds": "pytest_runtest_makereport pytest_runtest_logfinish pytest reruns_delay rerunfailures",
  "license_kwds": "mozilla public license 2.0 (mpl 2.0)",
  "libtype": "pypi",
  "id": "pypi_pytest_rerunfailures",
  "homepage": "https://github.com/pytest-dev/pytest-rerunfailures",
  "release_count": 31,
  "dependency_ids": [
    "pypi_importlib_metadata",
    "pypi_packaging",
    "pypi_pytest"
  ]
}
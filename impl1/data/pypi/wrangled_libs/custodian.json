{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: chemistry",
    "topic :: scientific/engineering :: physics",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "[![github license](https://img.shields.io/github/license/materialsproject/custodian)](https://github.com/materialsproject/custodian/blob/main/license)\n[![linting](https://github.com/materialsproject/custodian/workflows/linting/badge.svg)](https://github.com/materialsproject/custodian/workflows/linting/badge.svg)\n[![testing](https://github.com/materialsproject/custodian/actions/workflows/pytest.yml/badge.svg)](https://github.com/materialsproject/custodian/actions/workflows/pytest.yml)\n[![downloads](https://pepy.tech/badge/custodian)](https://pepy.tech/project/custodian)\n[![codecov](https://codecov.io/gh/materialsproject/custodian/branch/master/graph/badge.svg?token=owdqvjnghu)](https://codecov.io/gh/materialsproject/custodian)\n\ncustodian is a simple, robust and flexible just-in-time (jit) job management\nframework written in python. using custodian, you can create wrappers that\nperform error checking, job management and error recovery. it has a simple\nplugin framework that allows you to develop specific job management workflows\nfor different applications.\n\nerror recovery is an important aspect of many *high-throughput* projects that\ngenerate data on a large scale. when you are running on the order of hundreds\nof thousands of jobs, even an error-rate of 1% would mean thousands of errored\njobs that would be impossible to deal with on a case-by-case basis.\n\nthe specific use case for custodian is for long running jobs, with potentially\nrandom errors. for example, there may be a script that takes several days to\nrun on a server, with a 1% chance of some io error causing the job to fail.\nusing custodian, one can develop a mechanism to gracefully recover from the\nerror, and restart the job with modified parameters if necessary.\n\nthe current version of custodian also comes with several sub-packages for error\nhandling for vienna ab initio simulation package (vasp), nwchem, qchem, feff, lobster and cp2k\ncalculations.\n\n# getting custodian\n\n## stable version\n\nthe version at the python package index (pypi) is always the latest stable release that will be hopefully, be\nrelatively bug-free. install as follows:\n\n```sh\npip install custodian\n```\n\nsome plugins (e.g., vasp management) require additional setup (please see [pymatgen docs]).\n\n## developmental version\n\nthe bleeding edge developmental version is at the custodian's [github repo](https://github.com/materialsproject/custodian). the developmental\nversion is likely to be more buggy, but may contain new features. the github version include test files as well for\ncomplete unit testing. after cloning the source, you can type\n\n```sh\npython setup.py install\n```\n\nor to install the package in developmental mode::\n\n```sh\npython setup.py develop\n```\n\n# requirements\n\ncustodian supports python 3.8+. there are no other required dependencies. however, if you wish to use many of the\nbuilt-in error handlers and jobs for vasp, nwchem, qchem, etc., you will likely need pymatgen to be installed as well.\n\n# usage\n\nplease refer to the official [custodian docs] for details on how to use\ncustodian.\n\n# how to cite custodian\n\nif you use custodian in your research, especially the vasp component, please\nconsider citing the following work:\n\n```\nshyue ping ong, william davidson richards, anubhav jain, geoffroy hautier,\nmichael kocher, shreyas cholia, dan gunter, vincent chevrier, kristin a.\npersson, gerbrand ceder. *python materials genomics (pymatgen) : a robust,\nopen-source python library for materials analysis.* computational\nmaterials science, 2013, 68, 314-319. doi:10.1016/j.commatsci.2012.10.028\n```\n\n# license\n\ncustodian is released under the mit license. the terms of the license are as\nfollows:\n\n```txt\nthe mit license (mit)\ncopyright (c) 2011-2012 mit & lbnl\n\npermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"software\"),\nto deal in the software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the software, and to permit persons to whom the\nsoftware is furnished to do so, subject to the following conditions:\n\nthe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the software.\n\nthe software is provided \"as is\", without warranty of any kind, express or\nimplied, including but not limited to the warranties of merchantability,\nfitness for a particular purpose and noninfringement. in no event shall the\nauthors or copyright holders be liable for any claim, damages or other\nliability, whether in an action of contract, tort or otherwise, arising\nfrom, out of or in connection with the software or the use or other\ndealings in the software.\n```\n\n[pymatgen docs]: http://pymatgen.org/\n[custodian docs]: https://materialsproject.github.io/custodian/\n",
  "docs_url": "https://pythonhosted.org/custodian/",
  "keywords": "jit,just-in-time,job,management,vasp",
  "license": "mit",
  "name": "custodian",
  "package_url": "https://pypi.org/project/custodian/",
  "project_url": "https://pypi.org/project/custodian/",
  "project_urls": {
    "Homepage": "https://github.com/materialsproject/custodian"
  },
  "release_url": "https://pypi.org/project/custodian/2023.10.9/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a simple jit job management framework in python.",
  "version": "2023.10.9",
  "releases": [],
  "developers": [
    "ongsp@ucsd.edu",
    "shyue_ping_ong"
  ],
  "kwds": "workflows pytest badge github documentation",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_custodian",
  "homepage": "https://github.com/materialsproject/custodian",
  "release_count": 73,
  "dependency_ids": []
}
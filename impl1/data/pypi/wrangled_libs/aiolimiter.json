{
  "classifiers": [
    "framework :: asyncio",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# aiolimiter\n\n[![azure pipelines status for master branch][azure_badge]][azure_status]\n[![codecov.io status for master branch][codecov_badge]][codecov_status]\n[![latest pypi package version][pypi_badge]][aiolimiter_release]\n[![latest read the docs][rtd_badge]][aiolimiter_docs]\n\n[azure_badge]: https://dev.azure.com/mjpieters/aiolimiter/_apis/build/status/ci?branchname=master\n[azure_status]: https://dev.azure.com/mjpieters/aiolimiter/_build/latest?definitionid=4&branchname=master \"azure pipelines status for master branch\"\n[codecov_badge]: https://codecov.io/gh/mjpieters/aiolimiter/branch/master/graph/badge.svg\n[codecov_status]: https://codecov.io/gh/mjpieters/aiolimiter \"codecov.io status for master branch\"\n[pypi_badge]: https://badge.fury.io/py/aiolimiter.svg\n[aiolimiter_release]: https://pypi.org/project/aiolimiter \"latest pypi package version\"\n[rtd_badge]: https://readthedocs.org/projects/aiolimiter/badge/?version=latest\n[aiolimiter_docs]: https://aiolimiter.readthedocs.io/en/latest/?badge=latest \"latest read the docs\"\n\n## introduction\n\nan efficient implementation of a rate limiter for asyncio.\n\nthis project implements the [leaky bucket algorithm][], giving you precise control over the rate a code section can be entered:\n\n```python\nfrom aiolimiter import asynclimiter\n\n# allow for 100 concurrent entries within a 30 second window\nrate_limit = asynclimiter(100, 30)\n\n\nasync def some_coroutine():\n    async with rate_limit:\n        # this section is *at most* going to entered 100 times\n        # in a 30 second period.\n        await do_something()\n```\n\nit was first developed [as an answer on stack overflow][so45502319].\n\n## documentation\n\nhttps://aiolimiter.readthedocs.io\n\n## installation\n\n```sh\n$ pip install aiolimiter\n```\n\nthe library requires python 3.7 or newer.\n\n## requirements\n\n- python >= 3.7\n\n## license\n\n`aiolimiter` is offered under the [mit license](./license.txt).\n\n## source code\n\nthe project is hosted on [github][].\n\nplease file an issue in the [bug tracker][] if you have found a bug\nor have some suggestions to improve the library.\n\n## developer setup\n\nthis project uses [poetry][] to manage dependencies, testing and releases. make sure you have installed that tool, then run the following command to get set up:\n\n```sh\npoetry install --with docs && poetry run doit devsetup\n```\n\napart from using `poetry run doit devsetup`, you can either use `poetry shell` to enter a shell environment with a virtualenv set up for you, or use `poetry run ...` to run commands within the virtualenv.\n\ntests are run with `pytest` and `tox`. releases are made with `poetry build` and `poetry publish`. code quality is maintained with `flake8`, `black` and `mypy`, and `pre-commit` runs quick checks to maintain the standards set.\n\na series of `doit` tasks are defined; run `poetry run doit list` (or `doit list` with `poetry shell` activated) to list them. the default action is to run a full linting, testing and building run. it is recommended you run this before creating a pull request.\n\n[leaky bucket algorithm]: https://en.wikipedia.org/wiki/leaky_bucket\n[so45502319]: https://stackoverflow.com/a/45502319/100297\n[github]: https://github.com/mjpieters/aiolimiter\n[bug tracker]: https://github.com/mjpieters/aiolimiter/issues\n[poetry]: https://poetry.eustace.io/\n\n",
  "docs_url": null,
  "keywords": "asyncio,rate-limiting,leaky-bucket",
  "license": "mit",
  "name": "aiolimiter",
  "package_url": "https://pypi.org/project/aiolimiter/",
  "project_url": "https://pypi.org/project/aiolimiter/",
  "project_urls": {
    "CI: Azure Pipelines": "https://dev.azure.com/mjpieters/aiolimiter/_build",
    "Coverage: codecov": "https://codecov.io/github/aiolimiter/aiosignal",
    "Documentation": "http://aiolimiter.readthedocs.org/en/stable/",
    "GitHub: issues": "https://github.com/mjpieters/aiolimiter/issues",
    "Homepage": "https://github.com/mjpieters/aiolimiter",
    "Repository": "https://github.com/mjpieters/aiolimiter"
  },
  "release_url": "https://pypi.org/project/aiolimiter/1.1.0/",
  "requires_dist": [
    "importlib_metadata (>=1.3,<5.0) ; python_version < \"3.8\""
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "asyncio rate limiter, a leaky bucket implementation",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "martijn_pieters",
    "mj@zopatista.com"
  ],
  "kwds": "azure_badge azure_status aiolimiter_release aiolimiter_docs pypi_badge",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_aiolimiter",
  "homepage": "https://github.com/mjpieters/aiolimiter",
  "release_count": 4,
  "dependency_ids": [
    "pypi_importlib_metadata"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: gnu general public license v3 or later (gplv3+)",
    "natural language :: afrikaans",
    "natural language :: arabic",
    "natural language :: bengali",
    "natural language :: bosnian",
    "natural language :: bulgarian",
    "natural language :: catalan",
    "natural language :: chinese (simplified)",
    "natural language :: chinese (traditional)",
    "natural language :: croatian",
    "natural language :: czech",
    "natural language :: danish",
    "natural language :: dutch",
    "natural language :: english",
    "natural language :: esperanto",
    "natural language :: finnish",
    "natural language :: french",
    "natural language :: galician",
    "natural language :: german",
    "natural language :: greek",
    "natural language :: hebrew",
    "natural language :: hindi",
    "natural language :: hungarian",
    "natural language :: icelandic",
    "natural language :: indonesian",
    "natural language :: italian",
    "natural language :: japanese",
    "natural language :: javanese",
    "natural language :: korean",
    "natural language :: latin",
    "natural language :: latvian",
    "natural language :: macedonian",
    "natural language :: malay",
    "natural language :: marathi",
    "natural language :: norwegian",
    "natural language :: panjabi",
    "natural language :: persian",
    "natural language :: polish",
    "natural language :: portuguese",
    "natural language :: portuguese (brazilian)",
    "natural language :: romanian",
    "natural language :: russian",
    "natural language :: serbian",
    "natural language :: slovak",
    "natural language :: slovenian",
    "natural language :: spanish",
    "natural language :: swedish",
    "natural language :: tamil",
    "natural language :: telugu",
    "natural language :: thai",
    "natural language :: turkish",
    "natural language :: ukranian",
    "natural language :: urdu",
    "natural language :: vietnamese",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: text processing :: linguistic"
  ],
  "description": "polyglot\n========\n\n|downloads| |latest version| |build status| |documentation status|\n\n.. |downloads| image:: https://img.shields.io/pypi/dm/polyglot.svg\n   :target: https://pypi.python.org/pypi/polyglot\n.. |latest version| image:: https://badge.fury.io/py/polyglot.svg\n   :target: https://pypi.python.org/pypi/polyglot\n.. |build status| image:: https://travis-ci.org/abosamoor/polyglot.png?branch=master\n   :target: https://travis-ci.org/abosamoor/polyglot\n.. |documentation status| image:: https://readthedocs.org/projects/polyglot/badge/?version=latest\n   :target: https://readthedocs.org/builds/polyglot/\n\npolyglot is a natural language pipeline that supports massive\nmultilingual applications.\n\n-  free software: gplv3 license\n-  documentation: http://polyglot.readthedocs.org.\n-  github: https://github.com/abosamoor/polyglot\n\nfeatures\n~~~~~~~~\n\n-  tokenization (165 languages)\n-  language detection (196 languages)\n-  named entity recognition (40 languages)\n-  part of speech tagging (16 languages)\n-  sentiment analysis (136 languages)\n-  word embeddings (137 languages)\n-  morphological analysis (135 languages)\n-  transliteration (69 languages)\n\ndeveloper\n~~~~~~~~~\n\n-  rami al-rfou @ ``rmyeid gmail com``\n\nquick tutorial\n--------------\n\n.. code:: python\n\n    import polyglot\n    from polyglot.text import text, word\n\nlanguage detection\n~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    text = text(\"bonjour, mesdames.\")\n    print(\"language detected: code={}, name={}\\n\".format(text.language.code, text.language.name))\n\n\n.. parsed-literal::\n\n    language detected: code=fr, name=french\n    \n\n\ntokenization\n~~~~~~~~~~~~\n\n.. code:: python\n\n    zen = text(\"beautiful is better than ugly. \"\n               \"explicit is better than implicit. \"\n               \"simple is better than complex.\")\n    print(zen.words)\n\n\n.. parsed-literal::\n\n    [u'beautiful', u'is', u'better', u'than', u'ugly', u'.', u'explicit', u'is', u'better', u'than', u'implicit', u'.', u'simple', u'is', u'better', u'than', u'complex', u'.']\n\n\n.. code:: python\n\n    print(zen.sentences)\n\n\n.. parsed-literal::\n\n    [sentence(\"beautiful is better than ugly.\"), sentence(\"explicit is better than implicit.\"), sentence(\"simple is better than complex.\")]\n\n\npart of speech tagging\n~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    text = text(u\"o primeiro uso de desobedi\u00eancia civil em massa ocorreu em setembro de 1906.\")\n    \n    print(\"{:<16}{}\".format(\"word\", \"pos tag\")+\"\\n\"+\"-\"*30)\n    for word, tag in text.pos_tags:\n        print(u\"{:<16}{:>2}\".format(word, tag))\n\n\n.. parsed-literal::\n\n    word            pos tag\n    ------------------------------\n    o               det\n    primeiro        adj\n    uso             noun\n    de              adp\n    desobedi\u00eancia   noun\n    civil           adj\n    em              adp\n    massa           noun\n    ocorreu         adj\n    em              adp\n    setembro        noun\n    de              adp\n    1906            num\n    .               punct\n\n\nnamed entity recognition\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    text = text(u\"in gro\u00dfbritannien war gandhi mit dem westlichen lebensstil vertraut geworden\")\n    print(text.entities)\n\n\n.. parsed-literal::\n\n    [i-loc([u'gro\\\\xdfbritannien']), i-per([u'gandhi'])]\n\n\npolarity\n~~~~~~~~\n\n.. code:: python\n\n    print(\"{:<16}{}\".format(\"word\", \"polarity\")+\"\\n\"+\"-\"*30)\n    for w in zen.words[:6]:\n        print(\"{:<16}{:>2}\".format(w, w.polarity))\n\n\n.. parsed-literal::\n\n    word            polarity\n    ------------------------------\n    beautiful        0\n    is               0\n    better           1\n    than             0\n    ugly            -1\n    .                0\n\n\nembeddings\n~~~~~~~~~~\n\n.. code:: python\n\n    word = word(\"obama\", language=\"en\")\n    print(\"neighbors (synonms) of {}\".format(word)+\"\\n\"+\"-\"*30)\n    for w in word.neighbors:\n        print(\"{:<16}\".format(w))\n    print(\"\\n\\nthe first 10 dimensions out the {} dimensions\\n\".format(word.vector.shape[0]))\n    print(word.vector[:10])\n\n\n.. parsed-literal::\n\n    neighbors (synonms) of obama\n    ------------------------------\n    bush            \n    reagan          \n    clinton         \n    ahmadinejad     \n    nixon           \n    karzai          \n    mccain          \n    biden           \n    huckabee        \n    lula            \n    \n    \n    the first 10 dimensions out the 256 dimensions\n    \n    [-2.57382345  1.52175975  0.51070285  1.08678675 -0.74386948 -1.18616164\n      2.92784619 -0.25694436 -1.40958667 -2.39675403]\n\n\nmorphology\n~~~~~~~~~~\n\n.. code:: python\n\n    word = text(\"preprocessing is an essential step.\").words[0]\n    print(word.morphemes)\n\n\n.. parsed-literal::\n\n    [u'pre', u'process', u'ing']\n\n\ntransliteration\n~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from polyglot.transliteration import transliterator\n    transliterator = transliterator(source_lang=\"en\", target_lang=\"ru\")\n    print(transliterator.transliterate(u\"preprocessing\"))\n\n\n.. parsed-literal::\n\n    \u043f\u0440\u0435\u043f\u0440\u043e\u043a\u0435\u0441\u0441\u0438\u043d\u0433\n\n\n\n\n\nhistory\n-------\n\n\"14.11\" (2014-01-11)\n---------------------\n\n* first release on pypi.\n\n\n\"15.5.2\" (2015-05-02)\n---------------------\n\n* polyglot is feature complete.\n\n\n\"15.10.03\" (2015-10-03)\n---------------------------\n\n* change the polyglot models mirror to stony brook university dsl lab instead\n  of google cloud storage.\n\n\n\"16.07.04\" (2016-07-03)\n---------------------------\n\n* new features:\n  - support transfer pos tagging.\n  - support supplying `hint_language_code` for `text`.\n\n* bug fix: \n  - improve sentence serialization (pr #34)\n  - fix rare unicode encode error (pr #35)\n  - fix transliteration from languages other than english (pr 46)\n  - add link to github in readme (pr #49)\n  - make handling of paths more coherent (rp #55)\n  - fix normalizing embedding in place for ner corrupts the features of pos (issue #60, pr #62)",
  "docs_url": null,
  "keywords": "polyglot",
  "license": "gplv3",
  "name": "polyglot",
  "package_url": "https://pypi.org/project/polyglot/",
  "project_url": "https://pypi.org/project/polyglot/",
  "project_urls": {
    "Download": "UNKNOWN",
    "Homepage": "https://github.com/aboSamoor/polyglot"
  },
  "release_url": "https://pypi.org/project/polyglot/16.7.4/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "polyglot is a natural language pipeline that supports massive multilingual applications.",
  "version": "16.7.4",
  "releases": [],
  "developers": [
    "rami_al",
    "rmyeid@gmail.com"
  ],
  "kwds": "polyglot multilingual unicode svg target_lang",
  "license_kwds": "gplv3",
  "libtype": "pypi",
  "id": "pypi_polyglot",
  "homepage": "https://github.com/abosamoor/polyglot",
  "release_count": 9,
  "dependency_ids": []
}
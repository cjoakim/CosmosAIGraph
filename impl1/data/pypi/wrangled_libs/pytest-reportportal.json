{
  "classifiers": [
    "framework :: pytest",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "===================\nagent-python-pytest\n===================\n\n.. image:: https://img.shields.io/pypi/v/pytest-reportportal.svg\n    :target: https://pypi.python.org/pypi/pytest-reportportal\n    :alt: latest version\n.. image:: https://img.shields.io/pypi/pyversions/pytest-reportportal.svg\n    :target: https://pypi.org/project/pytest-reportportal\n    :alt: supported python versions\n.. image:: https://github.com/reportportal/agent-python-pytest/actions/workflows/tests.yml/badge.svg\n    :target: https://github.com/reportportal/agent-python-pytest/actions/workflows/tests.yml\n    :alt: test status\n.. image:: https://codecov.io/gh/reportportal/agent-python-pytest/branch/develop/graph/badge.svg\n    :target: https://codecov.io/gh/reportportal/agent-python-pytest\n    :alt: test coverage\n.. image:: https://slack.epmrpp.reportportal.io/badge.svg\n    :target: https://slack.epmrpp.reportportal.io/\n    :alt: join slack chat!\n\n\npytest plugin for reporting test results of the pytest to the report portal.\n\n* usage\n* installation\n* configuration\n* examples\n* launching\n* send attachment (screenshots)\n* troubleshooting\n* integration with ga\n* copyright notice\n\nusage\n-----\n\ninstallation\n~~~~~~~~~~~~\n\nto install pytest plugin execute next command in a terminal:\n\n.. code-block:: bash\n\n    pip install pytest-reportportal\n\n\n\nlook through the contributing.rst for contribution guidelines.\n\nconfiguration\n~~~~~~~~~~~~~\n\nprepare the config file :code:`pytest.ini` in root directory of tests or specify\nany one using pytest command line option:\n\n.. code-block:: bash\n\n    py.test -c config.cfg\n\n\nthe :code:`pytest.ini` file should have next mandatory fields:\n\n- :code:`rp_api_key` - value could be found in the user profile section\n- :code:`rp_project` - name of project in report portal\n- :code:`rp_endpoint` - address of report portal server\n\nexample of :code:`pytest.ini`:\n\n.. code-block:: text\n\n    [pytest]\n    rp_api_key = fb586627-32be-47dd-93c1-678873458a5f\n    rp_endpoint = http://192.168.1.10:8080\n    rp_project = user_personal\n    rp_launch = anylaunchname\n    rp_launch_attributes = 'pytest' 'smoke'\n    rp_launch_description = 'smoke test'\n    rp_ignore_attributes = 'xfail' 'usefixture'\n\n- the :code:`rp_api_key` can also be set with the environment variable `rp_api_key`. this will override the value set for :code:`rp_api_key` in pytest.ini\n\nthe following parameters are optional:\n\n- :code:`rp_client_type = sync` - type of the under-the-hood reportportal client implementation. possible values: [sync, async_thread, async_batched].\n- :code:`rp_launch = anylaunchname` - launch name (could be overridden by pytest --rp-launch option, default value is 'pytest launch').\n- :code:`rp_launch_id = xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` - id of the existing launch (the session will not handle the lifecycle of the given launch).\n- :code:`rp_launch_attributes = 'pytest' 'smoke' 'env:python3'` - list of attributes for launch.\n- :code:`rp_launch_description = 'smoke test'` - launch description (could be overridden by pytest --rp-launch-description option, default value is '').\n- :code:`rp_launch_timeout = 86400` - maximum time to wait for child processes finish, default value: 86400 seconds (1 day).\n- :code:`rp_launch_uuid_print = true` - enables printing launch uuid on test run start. default `false`.\n- :code:`rp_launch_uuid_print_output = stderr` - launch uuid print output. default `stdout`. possible values: [stderr, stdout].\n- :code:`rp_parent_item_id = xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` - id of the existing test item for session to use as parent item for the tests (the session will not handle the lifecycle of the given test item).\n- :code:`rp_tests_attributes = 'pytest' 'smoke'` - list of attributes that will be added for each item in the launch.\n- :code:`rp_connect_timeout = 15` - connection timeout to reportportal server. default value is \"10.0\".\n- :code:`rp_read_timeout = 15` - response read timeout for reportportal connection. default value is \"10.0\".\n- :code:`rp_log_batch_size = 20` - size of batch log request.\n- :code:`rp_log_batch_payload_size = 65000000` - maximum payload size in bytes of async batch log requests.\n- :code:`rp_log_level = info` - the log level that will be reported.\n- :code:`rp_log_format = [%(levelname)7s] (%(name)s) %(message)s (%(filename)s:%(lineno)s)` - format string to be used for logs sent to the service.\n- :code:`rp_ignore_attributes = 'xfail' 'usefixture'` - ignore specified pytest markers.\n- :code:`rp_is_skipped_an_issue = false` - treat skipped tests as required investigation. default `true`.\n- :code:`rp_hierarchy_dirs_level = 0` - directory starting hierarchy level (from pytest.ini level) (default `0`).\n- :code:`rp_hierarchy_dirs = true` - enables hierarchy for tests directories, default `false`. doesn't support 'xdist' plugin.\n- :code:`rp_hierarchy_dir_path_separator` - path separator to display directories in test hierarchy. in case of empty value current system path separator will be used (os.path.sep).\n- :code:`rp_hierarchy_code` - enables hierarchy for inner classes and parametrized tests, default `false`. doesn't support 'xdist' plugin.\n- :code:`rp_issue_system_url = https://bugzilla.some.com/show_bug.cgi?id={issue_id}` - issue url (issue_id will be filled by parameter from pytest mark).\n- :code:`rp_issue_id_marks = true` - enables adding marks for issue ids (e.g. \"issue:123456\").\n- :code:`rp_verify_ssl = true` - verify ssl when connecting to the server.\n- :code:`rp_mode = default` - debug or default launch mode. debug launches are displayed in a separate tab and not visible to anyone except owner.\n- :code:`rp_thread_logging` - experimental - enables support for reporting logs from threads by patching the builtin thread class. use with caution.\n- :code:`rp_api_retries = 0` - amount of retries for performing rest calls to rp server.\n\n\n\nif you like to override the above parameters from command line, or from ci environment based on your build, then pass\n- :code:`-o \"rp_launch_attributes=smoke tests\"` during invocation.\n\nexamples\n~~~~~~~~\n\nfor logging of the test item flow to report portal, please, use the python\nlogging handler provided by plugin like bellow:\nin conftest.py:\n\n.. code-block:: python\n\n    import logging\n    import sys\n\n    import pytest\n\n    from reportportal_client import rplogger\n\n\n    @pytest.fixture(scope=\"session\")\n    def rp_logger():\n        logger = logging.getlogger(__name__)\n        logger.setlevel(logging.debug)\n        logging.setloggerclass(rplogger)\n        return logger\n\nin tests:\n\n.. code-block:: python\n\n    # in this case only info messages will be sent to the report portal.\n    def test_one(rp_logger):\n        rp_logger.info(\"case1. step1\")\n        x = \"this\"\n        rp_logger.info(\"x is: %s\", x)\n        assert 'h' in x\n\n        # message with an attachment.\n        import subprocess\n        free_memory = subprocess.check_output(\"free -h\".split())\n        rp_logger.info(\n            \"case1. memory consumption\",\n            attachment={\n                \"name\": \"free_memory.txt\",\n                \"data\": free_memory,\n                \"mime\": \"application/octet-stream\",\n            },\n        )\n\n        # this debug message will not be sent to the report portal.\n        rp_logger.debug(\"case1. debug message\")\n\nplugin can report doc-strings of tests as :code:`descriptions`:\n\n.. code-block:: python\n\n    def test_one():\n        \"\"\"\n        description of the test case which will be sent to report portal\n        \"\"\"\n        pass\n\npytest markers will be attached as :code:`attributes` to report portal items.\nin the following example attributes 'linux' and 'win32' will be used:\n\n.. code-block:: python\n\n    import pytest\n\n    @pytest.mark.win32\n    @pytest.mark.linux\n    def test_one():\n        pass\n\nif you don't want to attach specific markers, list them in :code:`rp_ignore_attributes` parameter\n\n\nlaunching\n~~~~~~~~~\n\nto run test with report portal you must provide '--reportportal' flag:\n\n.. code-block:: bash\n\n    py.test ./tests --reportportal\n\n\ntest issue info\n~~~~~~~~~~~~~~~\n\nsome pytest marks could be used to specify information about skipped or failed test result.\n\nthe following mark fields are used to get information about test issue:\n\n- :code:`issue_id` - issue id (or list) in tracking system. this id will be added as comment to test fail result. if url is specified in pytest ini file (see :code:`rp_issue_system_url`), id will added as link to tracking system.\n- :code:`reason` - some comment that will be added to test fail description.\n- :code:`issue_type` - short name of rp issue type that should be assigned to failed or skipped test.\n\nexample:\n\n.. code-block:: python\n\n    @pytest.mark.issue(issue_id=\"111111\", reason=\"some bug\", issue_type=\"pb\")\n    def test():\n        assert false\n\n\nsend attachment (screenshots)\n------------------------------\n\nhttps://github.com/reportportal/client-python#send-attachment-screenshots\n\ntest internal steps, aka \"nested steps\"\n---------------------------------------\n\nto implement nested steps reporting please follow our guide: https://github.com/reportportal/client-python/wiki/nested-steps\n\nalso there are examples of usage:\n\n* https://github.com/reportportal/examples-python/blob/master/pytest/tests/test_nested_steps.py\n* https://github.com/reportportal/examples-python/blob/master/pytest/tests/test_nested_steps_ui.py\n\ntroubleshooting\n~~~~~~~~~~~~~~~\nif you would like to temporary disable integrations with report portal just\ndeactivate :code:`pytest_reportportal` plugin with command like:\n\n.. code-block:: bash\n\n    py.test -p no:pytest_reportportal ./tests\n\n\nintegration with google analytics\n---------------------------------\nreportportal is now supporting integrations with more than 15 test frameworks simultaneously. in order to define the most popular agents and plan the team workload accordingly, we are using google analytics.\n\nreportportal collects information about agent name and its version only. this information is sent to google analytics on the launch start. please help us to make our work effective.\nif you still want to switch off google analytics, please change env variable the way below.\n\n.. code-block:: bash\n\n    export agent_no_analytics=1\n\n\ncopyright notice\n----------------\n..  copyright notice:  https://github.com/reportportal/agent-python-pytest#copyright-notice\n\nlicensed under the `apache 2.0`_ license (see the license file).\n\n.. _apache 2.0:  https://www.apache.org/licenses/license-2.0\n",
  "docs_url": null,
  "keywords": "testing,reporting,reportportal,pytest,agent",
  "license": "apache 2.0",
  "name": "pytest-reportportal",
  "package_url": "https://pypi.org/project/pytest-reportportal/",
  "project_url": "https://pypi.org/project/pytest-reportportal/",
  "project_urls": {
    "Homepage": "https://github.com/reportportal/agent-python-pytest"
  },
  "release_url": "https://pypi.org/project/pytest-reportportal/5.3.1/",
  "requires_dist": [
    "dill >=0.3.6",
    "pytest >=3.8.0",
    "reportportal-client ~=5.5.4",
    "aenum >=3.1.0",
    "requests >=2.28.0"
  ],
  "requires_python": "",
  "summary": "agent for reporting results of tests to the report portal",
  "version": "5.3.1",
  "releases": [],
  "developers": [
    "report_portal_team",
    "support@reportportal.io"
  ],
  "kwds": "pytest_reportportal pytest reportportal reportportal_client pyversions",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_pytest_reportportal",
  "homepage": "https://github.com/reportportal/agent-python-pytest",
  "release_count": 42,
  "dependency_ids": [
    "pypi_aenum",
    "pypi_dill",
    "pypi_pytest",
    "pypi_reportportal_client",
    "pypi_requests"
  ]
}
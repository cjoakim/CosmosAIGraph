{
  "classifiers": [
    "development status :: 7 - inactive",
    "framework :: aws cdk",
    "framework :: aws cdk :: 1",
    "intended audience :: developers",
    "license :: osi approved",
    "operating system :: os independent",
    "programming language :: javascript",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "typing :: typed"
  ],
  "description": "the cdk construct library for aws::cloudwatch\n# amazon cloudwatch construct library\n\n<!--begin stability banner-->---\n\n\n![end-of-support](https://img.shields.io/badge/end--of--support-critical.svg?style=for-the-badge)\n\n> aws cdk v1 has reached end-of-support on 2023-06-01.\n> this package is no longer being updated, and users should migrate to aws cdk v2.\n>\n> for more information on how to migrate, see the [*migrating to aws cdk v2* guide](https://docs.aws.amazon.com/cdk/v2/guide/migrating-v2.html).\n\n---\n<!--end stability banner-->\n\n## metric objects\n\nmetric objects represent a metric that is emitted by aws services or your own\napplication, such as `cpuusage`, `failurecount` or `bandwidth`.\n\nmetric objects can be constructed directly or are exposed by resources as\nattributes. resources that expose metrics will have functions that look\nlike `metricxxx()` which will return a metric object, initialized with defaults\nthat make sense.\n\nfor example, `lambda.function` objects have the `fn.metricerrors()` method, which\nrepresents the amount of errors reported by that lambda function:\n\n```python\n# fn: lambda.function\n\n\nerrors = fn.metric_errors()\n```\n\n`metric` objects can be account and region aware. you can specify `account` and `region` as properties of the metric, or use the `metric.attachto(construct)` method. `metric.attachto()` will automatically copy the `region` and `account` fields of the `construct`, which can come from anywhere in the construct tree.\n\nyou can also instantiate `metric` objects to reference any\n[published metric](https://docs.aws.amazon.com/amazoncloudwatch/latest/monitoring/aws-services-cloudwatch-metrics.html)\nthat's not exposed using a convenience method on the cdk construct.\nfor example:\n\n```python\nhosted_zone = route53.hostedzone(self, \"myhostedzone\", zone_name=\"example.org\")\nmetric = cloudwatch.metric(\n    namespace=\"aws/route53\",\n    metric_name=\"dnsqueries\",\n    dimensions_map={\n        \"hostedzoneid\": hosted_zone.hosted_zone_id\n    }\n)\n```\n\n### instantiating a new metric object\n\nif you want to reference a metric that is not yet exposed by an existing construct,\nyou can instantiate a `metric` object to represent it. for example:\n\n```python\nmetric = cloudwatch.metric(\n    namespace=\"mynamespace\",\n    metric_name=\"mymetric\",\n    dimensions_map={\n        \"processingstep\": \"download\"\n    }\n)\n```\n\n### metric math\n\nmath expressions are supported by instantiating the `mathexpression` class.\nfor example, a math expression that sums two other metrics looks like this:\n\n```python\n# fn: lambda.function\n\n\nall_problems = cloudwatch.mathexpression(\n    expression=\"errors + throttles\",\n    using_metrics={\n        \"errors\": fn.metric_errors(),\n        \"faults\": fn.metric_throttles()\n    }\n)\n```\n\nyou can use `mathexpression` objects like any other metric, including using\nthem in other math expressions:\n\n```python\n# fn: lambda.function\n# all_problems: cloudwatch.mathexpression\n\n\nproblem_percentage = cloudwatch.mathexpression(\n    expression=\"(problems / invocations) * 100\",\n    using_metrics={\n        \"problems\": all_problems,\n        \"invocations\": fn.metric_invocations()\n    }\n)\n```\n\n### search expressions\n\nmath expressions also support search expressions. for example, the following\nsearch expression returns all cpuutilization metrics that it finds, with the\ngraph showing the average statistic with an aggregation period of 5 minutes:\n\n```python\ncpu_utilization = cloudwatch.mathexpression(\n    expression=\"search('{aws/ec2,instanceid} metricname=\\\"cpuutilization\\\"', 'average', 300)\",\n\n    # specifying '' as the label suppresses the default behavior\n    # of using the expression as metric label. this is especially appropriate\n    # when using expressions that return multiple time series (like search()\n    # or metrics()), to show the labels of the retrieved metrics only.\n    label=\"\"\n)\n```\n\ncross-account and cross-region search expressions are also supported. use\nthe `searchaccount` and `searchregion` properties to specify the account\nand/or region to evaluate the search expression against.\n\n### aggregation\n\nto graph or alarm on metrics you must aggregate them first, using a function\nlike `average` or a percentile function like `p99`. by default, most metric objects\nreturned by cdk libraries will be configured as `average` over `300 seconds` (5 minutes).\nthe exception is if the metric represents a count of discrete events, such as\nfailures. in that case, the metric object will be configured as `sum` over `300 seconds`, i.e. it represents the number of times that event occurred over the\ntime period.\n\nif you want to change the default aggregation of the metric object (for example,\nthe function or the period), you can do so by passing additional parameters\nto the metric function call:\n\n```python\n# fn: lambda.function\n\n\nminute_error_rate = fn.metric_errors(\n    statistic=\"avg\",\n    period=duration.minutes(1),\n    label=\"lambda failure rate\"\n)\n```\n\nthis function also allows changing the metric label or color (which will be\nuseful when embedding them in graphs, see below).\n\n> rates versus sums\n>\n> the reason for using `sum` to count discrete events is that *some* events are\n> emitted as either `0` or `1` (for example `errors` for a lambda) and some are\n> only emitted as `1` (for example `numberofmessagespublished` for an sns\n> topic).\n>\n> in case `0`-metrics are emitted, it makes sense to take the `average` of this\n> metric: the result will be the fraction of errors over all executions.\n>\n> if `0`-metrics are not emitted, the `average` will always be equal to `1`,\n> and not be very useful.\n>\n> in order to simplify the mental model of `metric` objects, we default to\n> aggregating using `sum`, which will be the same for both metrics types. if you\n> happen to know the metric you want to alarm on makes sense as a rate\n> (`average`) you can always choose to change the statistic.\n\n### labels\n\nmetric labels are displayed in the legend of graphs that include the metrics.\n\nyou can use [dynamic labels](https://docs.aws.amazon.com/amazoncloudwatch/latest/monitoring/graph-dynamic-labels.html)\nto show summary information about the displayed time series\nin the legend. for example, if you use:\n\n```python\n# fn: lambda.function\n\n\nminute_error_rate = fn.metric_errors(\n    statistic=\"sum\",\n    period=duration.hours(1),\n\n    # show the maximum hourly error count in the legend\n    label=\"[max: ${max}] lambda failure rate\"\n)\n```\n\nas the metric label, the maximum value in the visible range will\nbe shown next to the time series name in the graph's legend.\n\nif the metric is a math expression producing more than one time series, the\nmaximum will be individually calculated and shown for each time series produce\nby the math expression.\n\n## alarms\n\nalarms can be created on metrics in one of two ways. either create an `alarm`\nobject, passing the `metric` object to set the alarm on:\n\n```python\n# fn: lambda.function\n\n\ncloudwatch.alarm(self, \"alarm\",\n    metric=fn.metric_errors(),\n    threshold=100,\n    evaluation_periods=2\n)\n```\n\nalternatively, you can call `metric.createalarm()`:\n\n```python\n# fn: lambda.function\n\n\nfn.metric_errors().create_alarm(self, \"alarm\",\n    threshold=100,\n    evaluation_periods=2\n)\n```\n\nthe most important properties to set while creating an alarms are:\n\n* `threshold`: the value to compare the metric against.\n* `comparisonoperator`: the comparison operation to use, defaults to `metric >= threshold`.\n* `evaluationperiods`: how many consecutive periods the metric has to be\n  breaching the the threshold for the alarm to trigger.\n\nto create a cross-account alarm, make sure you have enabled [cross-account functionality](https://docs.aws.amazon.com/amazoncloudwatch/latest/monitoring/cross-account-cross-region.html) in cloudwatch. then, set the `account` property in the `metric` object either manually or via the `metric.attachto()` method.\n\n### alarm actions\n\nto add actions to an alarm, use the integration classes from the\n`@aws-cdk/aws-cloudwatch-actions` package. for example, to post a message to\nan sns topic when an alarm breaches, do the following:\n\n```python\nimport aws_cdk.aws_cloudwatch_actions as cw_actions\n# alarm: cloudwatch.alarm\n\n\ntopic = sns.topic(self, \"topic\")\nalarm.add_alarm_action(cw_actions.snsaction(topic))\n```\n\n#### notification formats\n\nalarms can be created in one of two \"formats\":\n\n* with \"top-level parameters\" (these are the classic style of cloudwatch alarms).\n* with a list of metrics specifications (these are the modern style of cloudwatch alarms).\n\nfor backwards compatibility, cdk will try to create classic, top-level cloudwatch alarms\nas much as possible, unless you are using features that cannot be expressed in that format.\nfeatures that require the new-style alarm format are:\n\n* metric math\n* cross-account metrics\n* labels\n\nthe difference between these two does not impact the functionality of the alarm\nin any way, *except* that the format of the notifications the alarm generates is\ndifferent between them. this affects both the notifications sent out over sns,\nas well as the eventbridge events generated by this alarm. if you are writing\ncode to consume these notifications, be sure to handle both formats.\n\n### composite alarms\n\n[composite alarms](https://aws.amazon.com/about-aws/whats-new/2020/03/amazon-cloudwatch-now-allows-you-to-combine-multiple-alarms/)\ncan be created from existing alarm resources.\n\n```python\n# alarm1: cloudwatch.alarm\n# alarm2: cloudwatch.alarm\n# alarm3: cloudwatch.alarm\n# alarm4: cloudwatch.alarm\n\n\nalarm_rule = cloudwatch.alarmrule.any_of(\n    cloudwatch.alarmrule.all_of(\n        cloudwatch.alarmrule.any_of(alarm1,\n            cloudwatch.alarmrule.from_alarm(alarm2, cloudwatch.alarmstate.ok), alarm3),\n        cloudwatch.alarmrule.not(cloudwatch.alarmrule.from_alarm(alarm4, cloudwatch.alarmstate.insufficient_data))),\n    cloudwatch.alarmrule.from_boolean(false))\n\ncloudwatch.compositealarm(self, \"myawesomecompositealarm\",\n    alarm_rule=alarm_rule\n)\n```\n\n### a note on units\n\nin cloudwatch, metrics datums are emitted with units, such as `seconds` or\n`bytes`. when `metric` objects are given a `unit` attribute, it will be used to\n*filter* the stream of metric datums for datums emitted using the same `unit`\nattribute.\n\nin particular, the `unit` field is *not* used to rescale datums or alarm threshold\nvalues (for example, it cannot be used to specify an alarm threshold in\n*megabytes* if the metric stream is being emitted as *bytes*).\n\nyou almost certainly don't want to specify the `unit` property when creating\n`metric` objects (which will retrieve all datums regardless of their unit),\nunless you have very specific requirements. note that in any case, cloudwatch\nonly supports filtering by `unit` for alarms, not in dashboard graphs.\n\nplease see the following github issue for a discussion on real unit\ncalculations in cdk: https://github.com/aws/aws-cdk/issues/5595\n\n## dashboards\n\ndashboards are set of widgets stored server-side which can be accessed quickly\nfrom the aws console. available widgets are graphs of a metric over time, the\ncurrent value of a metric, or a static piece of markdown which explains what the\ngraphs mean.\n\nthe following widgets are available:\n\n* `graphwidget` -- shows any number of metrics on both the left and right\n  vertical axes.\n* `alarmwidget` -- shows the graph and alarm line for a single alarm.\n* `singlevaluewidget` -- shows the current value of a set of metrics.\n* `textwidget` -- shows some static markdown.\n* `alarmstatuswidget` -- shows the status of your alarms in a grid view.\n\n### graph widget\n\na graph widget can display any number of metrics on either the `left` or\n`right` vertical axis:\n\n```python\n# dashboard: cloudwatch.dashboard\n# execution_count_metric: cloudwatch.metric\n# error_count_metric: cloudwatch.metric\n\n\ndashboard.add_widgets(cloudwatch.graphwidget(\n    title=\"executions vs error rate\",\n\n    left=[execution_count_metric],\n\n    right=[error_count_metric.with(\n        statistic=\"average\",\n        label=\"error rate\",\n        color=cloudwatch.color.green\n    )]\n))\n```\n\nusing the methods `addleftmetric()` and `addrightmetric()` you can add metrics to a graph widget later on.\n\ngraph widgets can also display annotations attached to the left or the right y-axis.\n\n```python\n# dashboard: cloudwatch.dashboard\n\n\ndashboard.add_widgets(cloudwatch.graphwidget(\n    # ...\n\n    left_annotations=[cloudwatch.horizontalannotation(value=1800, label=duration.minutes(30).to_human_string(), color=cloudwatch.color.red), cloudwatch.horizontalannotation(value=3600, label=\"1 hour\", color=\"#2ca02c\")\n    ]\n))\n```\n\nthe graph legend can be adjusted from the default position at bottom of the widget.\n\n```python\n# dashboard: cloudwatch.dashboard\n\n\ndashboard.add_widgets(cloudwatch.graphwidget(\n    # ...\n\n    legend_position=cloudwatch.legendposition.right\n))\n```\n\nthe graph can publish live data within the last minute that has not been fully aggregated.\n\n```python\n# dashboard: cloudwatch.dashboard\n\n\ndashboard.add_widgets(cloudwatch.graphwidget(\n    # ...\n\n    live_data=true\n))\n```\n\nthe graph view can be changed from default 'timeseries' to 'bar' or 'pie'.\n\n```python\n# dashboard: cloudwatch.dashboard\n\n\ndashboard.add_widgets(cloudwatch.graphwidget(\n    # ...\n\n    view=cloudwatch.graphwidgetview.bar\n))\n```\n\n### alarm widget\n\nan alarm widget shows the graph and the alarm line of a single alarm:\n\n```python\n# dashboard: cloudwatch.dashboard\n# error_alarm: cloudwatch.alarm\n\n\ndashboard.add_widgets(cloudwatch.alarmwidget(\n    title=\"errors\",\n    alarm=error_alarm\n))\n```\n\n### single value widget\n\na single-value widget shows the latest value of a set of metrics (as opposed\nto a graph of the value over time):\n\n```python\n# dashboard: cloudwatch.dashboard\n# visitor_count: cloudwatch.metric\n# purchase_count: cloudwatch.metric\n\n\ndashboard.add_widgets(cloudwatch.singlevaluewidget(\n    metrics=[visitor_count, purchase_count]\n))\n```\n\nshow as many digits as can fit, before rounding.\n\n```python\n# dashboard: cloudwatch.dashboard\n\n\ndashboard.add_widgets(cloudwatch.singlevaluewidget(\n    metrics=[],\n\n    full_precision=true\n))\n```\n\n### text widget\n\na text widget shows an arbitrary piece of markdown. use this to add explanations\nto your dashboard:\n\n```python\n# dashboard: cloudwatch.dashboard\n\n\ndashboard.add_widgets(cloudwatch.textwidget(\n    markdown=\"# key performance indicators\"\n))\n```\n\n### alarm status widget\n\nan alarm status widget displays instantly the status of any type of alarms and gives the\nability to aggregate one or more alarms together in a small surface.\n\n```python\n# dashboard: cloudwatch.dashboard\n# error_alarm: cloudwatch.alarm\n\n\ndashboard.add_widgets(\n    cloudwatch.alarmstatuswidget(\n        alarms=[error_alarm]\n    ))\n```\n\nan alarm status widget only showing firing alarms, sorted by state and timestamp:\n\n```python\n# dashboard: cloudwatch.dashboard\n# error_alarm: cloudwatch.alarm\n\n\ndashboard.add_widgets(cloudwatch.alarmstatuswidget(\n    title=\"errors\",\n    alarms=[error_alarm],\n    sort_by=cloudwatch.alarmstatuswidgetsortby.state_updated_timestamp,\n    states=[cloudwatch.alarmstate.alarm]\n))\n```\n\n### query results widget\n\na `logquerywidget` shows the results of a query from logs insights:\n\n```python\n# dashboard: cloudwatch.dashboard\n\n\ndashboard.add_widgets(cloudwatch.logquerywidget(\n    log_group_names=[\"my-log-group\"],\n    view=cloudwatch.logqueryvisualizationtype.table,\n    # the lines will be automatically combined using '\\n|'.\n    query_lines=[\"fields @message\", \"filter @message like /error/\"\n    ]\n))\n```\n\n### custom widget\n\na `customwidget` shows the result of an aws lambda function:\n\n```python\n# dashboard: cloudwatch.dashboard\n\n\n# import or create a lambda function\nfn = lambda_.function.from_function_arn(dashboard, \"function\", \"arn:aws:lambda:us-east-1:123456789012:function:myfn\")\n\ndashboard.add_widgets(cloudwatch.customwidget(\n    function_arn=fn.function_arn,\n    title=\"my lambda baked widget\"\n))\n```\n\nyou can learn more about custom widgets in the [amazon cloudwatch user guide](https://docs.aws.amazon.com/amazoncloudwatch/latest/monitoring/add_custom_widget_dashboard.html).\n\n### dashboard layout\n\nthe widgets on a dashboard are visually laid out in a grid that is 24 columns\nwide. normally you specify x and y coordinates for the widgets on a dashboard,\nbut because this is inconvenient to do manually, the library contains a simple\nlayout system to help you lay out your dashboards the way you want them to.\n\nwidgets have a `width` and `height` property, and they will be automatically\nlaid out either horizontally or vertically stacked to fill out the available\nspace.\n\nwidgets are added to a dashboard by calling `add(widget1, widget2, ...)`.\nwidgets given in the same call will be laid out horizontally. widgets given\nin different calls will be laid out vertically. to make more complex layouts,\nyou can use the following widgets to pack widgets together in different ways:\n\n* `column`: stack two or more widgets vertically.\n* `row`: lay out two or more widgets horizontally.\n* `spacer`: take up empty space\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "aws-cdk.aws-cloudwatch",
  "package_url": "https://pypi.org/project/aws-cdk.aws-cloudwatch/",
  "project_url": "https://pypi.org/project/aws-cdk.aws-cloudwatch/",
  "project_urls": {
    "Homepage": "https://github.com/aws/aws-cdk",
    "Source": "https://github.com/aws/aws-cdk.git"
  },
  "release_url": "https://pypi.org/project/aws-cdk.aws-cloudwatch/1.204.0/",
  "requires_dist": [
    "aws-cdk.aws-iam (==1.204.0)",
    "aws-cdk.core (==1.204.0)",
    "constructs (<4.0.0,>=3.3.69)",
    "jsii (<2.0.0,>=1.84.0)",
    "publication (>=0.0.3)",
    "typeguard (~=2.13.3)"
  ],
  "requires_python": "~=3.7",
  "summary": "the cdk construct library for aws::cloudwatch",
  "version": "1.204.0",
  "releases": [],
  "developers": [
    "amazon_web_services"
  ],
  "kwds": "aws_cdk aws_cloudwatch_actions cloudwatch using_metrics metric_invocations",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_aws_cdk.aws_cloudwatch",
  "homepage": "https://github.com/aws/aws-cdk",
  "release_count": 258,
  "dependency_ids": [
    "pypi_aws_cdk.aws_iam",
    "pypi_aws_cdk.core",
    "pypi_constructs",
    "pypi_jsii",
    "pypi_publication",
    "pypi_typeguard"
  ],
  "documentation_summary": "The HTML text provides information about the `aws-cdk.aws-cloudwatch` package version 1.204.0, released on June 19, 2023, available on PyPI (Python Package Index). It is part of the AWS Cloud Development Kit (CDK) for working with Amazon CloudWatch, a monitoring and observability service. The package, now in an inactive development status, requires Python version 3.7 or newer. Users are advised to migrate to AWS CDK v2 as AWS CDK v1 has reached its end-of-support on June 1, 2023. The document outlines how to use the package to create and manage CloudWatch metrics, alarms, and dashboards, including metric math, aggregation, and alarm creation. It also covers dashboard widgets for visualizing metrics and alarms. The package is licensed under the Apache-2.0 license and is maintained by Amazon Web Services.",
  "embedding": [
    -0.029006395488977432,
    0.024744858965277672,
    -0.005903276614844799,
    -0.02992856502532959,
    0.004024008754640818,
    0.02081865631043911,
    -0.0005973138031549752,
    -0.02165699191391468,
    -0.00647963210940361,
    -0.034148186445236206,
    0.012742694467306137,
    0.021852603182196617,
    -0.01764695532619953,
    0.019491292536258698,
    -0.012204762548208237,
    0.016710814088582993,
    0.02189452014863491,
    -0.015215782448649406,
    -0.013685821555554867,
    -0.027176031842827797,
    0.006008068565279245,
    -0.018122011795639992,
    -0.005463150795549154,
    0.00423359265550971,
    -0.0305153988301754,
    0.0163335632532835,
    -0.0039052446372807026,
    -0.02355721779167652,
    0.004320919048041105,
    0.007433238439261913,
    0.02577880583703518,
    -0.015411394648253918,
    -0.02945350855588913,
    -0.0060255336575210094,
    -0.0242418572306633,
    0.012051067315042019,
    0.006137311924248934,
    -0.003762028878554702,
    0.040771033614873886,
    -0.01905815303325653,
    -0.005180212669074535,
    0.014908392913639545,
    0.0057181441225111485,
    -0.0037585359532386065,
    -0.007531044073402882,
    0.03191262483596802,
    0.022201908752322197,
    -0.0305153988301754,
    -0.03110223449766636,
    -0.009137853048741817,
    0.015900423750281334,
    0.03562924265861511,
    -0.046192266047000885,
    -0.007447210606187582,
    0.008725672028958797,
    -0.01714395359158516,
    0.03006828762590885,
    0.014698809944093227,
    0.008110892958939075,
    -0.027986422181129456,
    -0.008006100542843342,
    0.0008785053505562246,
    0.002998794661834836,
    -0.03694263473153114,
    -0.011932303197681904,
    -0.022523270919919014,
    -0.012819541618227959,
    0.012288595549762249,
    -0.01714395359158516,
    0.001032200176268816,
    0.04130197688937187,
    0.031186066567897797,
    0.002142994198948145,
    -0.04012830927968025,
    0.04331398382782936,
    -0.021209878847002983,
    -0.02911817468702793,
    0.013874446973204613,
    -0.003014513524249196,
    0.013266653753817081,
    0.004635294899344444,
    0.0150900324806571,
    -0.015341533347964287,
    0.027748893946409225,
    -0.004065925255417824,
    0.015565088950097561,
    -0.02625386230647564,
    0.0015037637203931808,
    -0.006612368393689394,
    -0.014684837311506271,
    0.015131949447095394,
    -0.019784709438681602,
    0.017004230991005898,
    0.00999016035348177,
    0.006280527450144291,
    0.018066123127937317,
    -0.0174094270914793,
    0.03135373443365097,
    0.027245892211794853,
    -0.021140018478035927,
    0.009717701934278011,
    0.004816934000700712,
    -0.0333377942442894,
    -0.005477122962474823,
    -0.008006100542843342,
    -0.015159893780946732,
    -0.0017797156469896436,
    0.0056517762131989,
    0.022565187886357307,
    -0.0056482828222215176,
    -0.032695069909095764,
    0.022662993520498276,
    0.0072935158386826515,
    -0.020874544978141785,
    0.0030424578581005335,
    -0.02742753177881241,
    0.019435403868556023,
    -0.008075961843132973,
    -0.004128800705075264,
    -0.029397619888186455,
    -0.014656892977654934,
    0.02945350855588913,
    0.028601201251149178,
    -0.005903276614844799,
    0.005634310655295849,
    -0.028070254251360893,
    -0.018876513466238976,
    -0.021377546712756157,
    -0.00012946165225002915,
    -0.045130375772714615,
    -0.005138295702636242,
    0.007209682371467352,
    0.013161861337721348,
    -0.02202026918530464,
    -0.00021973550610709935,
    -0.0018303650431334972,
    -0.028126144781708717,
    0.011073010042309761,
    -0.03087867796421051,
    -0.031297843903303146,
    -0.0109332874417305,
    0.03501446545124054,
    0.012337499298155308,
    0.005690199788659811,
    -0.017954343929886818,
    0.024325691163539886,
    0.023124078288674355,
    0.008194725960493088,
    -0.010479189455509186,
    -0.021670963615179062,
    -6.030991789884865e-05,
    -0.004195168614387512,
    -0.02295641042292118,
    -0.015676867216825485,
    -0.020678933709859848,
    0.020329628139734268,
    -0.0028066763188689947,
    0.014118961058557034,
    -0.009214700199663639,
    -0.005473630037158728,
    0.027748893946409225,
    0.053541671484708786,
    -0.007985142059624195,
    0.012449276633560658,
    0.01147820521146059,
    0.031269900500774384,
    0.0074751549400389194,
    -0.018988290801644325,
    -0.053765226155519485,
    0.02081865631043911,
    0.03168907016515732,
    0.009012103080749512,
    -0.017479287460446358,
    0.022662993520498276,
    -0.02246738225221634,
    0.04907055199146271,
    0.005616845563054085,
    0.004404752515256405,
    -0.02719000354409218,
    -0.008446226827800274,
    0.011184788309037685,
    -0.014601003378629684,
    -0.006818459369242191,
    0.018191872164607048,
    -0.013657876290380955,
    -0.02872695028781891,
    0.015369477681815624,
    0.03205234557390213,
    0.017060119658708572,
    -0.004705156199634075,
    0.00874662958085537,
    0.04658348858356476,
    -0.035796910524368286,
    -0.012805568985641003,
    -0.5781159400939941,
    -0.005208157002925873,
    -0.0215312410145998,
    -0.03833986073732376,
    -0.005847387481480837,
    -0.011073010042309761,
    0.013469250872731209,
    0.02684069611132145,
    -0.04174908995628357,
    0.0387590266764164,
    -0.008760602213442326,
    0.007908294908702374,
    0.01319679245352745,
    -0.005669241305440664,
    0.01597028411924839,
    -0.0014653400285169482,
    -0.0022582653909921646,
    -0.04188881441950798,
    -0.014475253410637379,
    0.004251057747751474,
    0.007558988407254219,
    0.0239065233618021,
    -0.006420250050723553,
    -0.004118321463465691,
    -0.002417199779301882,
    0.002983075799420476,
    -0.0036642232444137335,
    0.014349503442645073,
    0.004506051540374756,
    0.015062088146805763,
    -0.023934468626976013,
    0.024521302431821823,
    0.03110223449766636,
    0.01703217625617981,
    0.04647171124815941,
    -0.007677752524614334,
    -0.025136081501841545,
    0.03202440217137337,
    0.01188340038061142,
    0.011897373013198376,
    -0.027022335678339005,
    -0.025974417105317116,
    0.0029219472780823708,
    0.014461281709372997,
    0.009242644533514977,
    0.005868345964699984,
    0.02872695028781891,
    0.013322542421519756,
    0.019728820770978928,
    -0.031046343967318535,
    0.007579946890473366,
    0.0060569713823497295,
    0.020329628139734268,
    -0.0036851814948022366,
    0.019700875505805016,
    -0.016626980155706406,
    0.03652346879243851,
    -0.004848371725529432,
    -0.004506051540374756,
    0.01845734566450119,
    -0.010583980940282345,
    0.004478106740862131,
    0.008502115495502949,
    -0.018834596499800682,
    -0.0031664615962654352,
    0.01926773600280285,
    0.004533995874226093,
    -0.014433336444199085,
    -0.016291646286845207,
    -0.03196851536631584,
    0.005131309852004051,
    -0.0015779912937432528,
    -0.002122035948559642,
    -0.0021517269778996706,
    0.03629991039633751,
    0.0256530549377203,
    0.0612543560564518,
    -0.024633081629872322,
    -0.0060395062901079655,
    0.010716717690229416,
    0.04834399372339249,
    0.0016888959798961878,
    -0.02826586738228798,
    -0.03864724934101105,
    0.023836662992835045,
    -0.0032922120299190283,
    0.007824460975825787,
    -0.01975676417350769,
    -0.0004209140897728503,
    -0.0046143364161252975,
    -0.02094440720975399,
    0.01703217625617981,
    -0.016654925420880318,
    -0.06175735592842102,
    -0.02199232578277588,
    0.025764834135770798,
    -0.0017168405465781689,
    0.02992856502532959,
    -0.014894421212375164,
    -0.02083262801170349,
    -0.028084227815270424,
    -0.020301682874560356,
    -0.0037410706281661987,
    -0.000978930969722569,
    0.017842566594481468,
    0.0028747909236699343,
    0.002322887070477009,
    0.001453987555578351,
    0.028531339019536972,
    -0.041581422090530396,
    -0.02271888218820095,
    -0.021726852282881737,
    0.0008977171964943409,
    0.010583980940282345,
    0.0242418572306633,
    -0.027818754315376282,
    0.045381877571344376,
    0.011387385427951813,
    0.018303651362657547,
    0.017129981890320778,
    0.00863485224545002,
    0.009557020850479603,
    0.024171996861696243,
    -0.016137951985001564,
    0.012274623848497868,
    -0.0010225941659882665,
    0.009200728498399258,
    -0.01891843043267727,
    -0.008390337228775024,
    -0.0011160336434841156,
    0.018527206033468246,
    0.026002362370491028,
    0.0069616748951375484,
    -0.0006951195537112653,
    0.040044475346803665,
    -0.004373314790427685,
    0.015816589817404747,
    -0.010625897906720638,
    0.0027141100727021694,
    -0.027120141312479973,
    -0.014642920345067978,
    -0.0009981427574530244,
    0.012903375551104546,
    -0.02861517295241356,
    0.00407989788800478,
    -0.0027210961561650038,
    -0.010800550691783428,
    5.280529148876667e-05,
    -0.019211847335100174,
    -0.008194725960493088,
    -0.012994194403290749,
    -0.0004768031067214906,
    -0.017311621457338333,
    0.03252740204334259,
    -0.01998032070696354,
    0.002584866713732481,
    -0.006469152867794037,
    -0.00015085666382219642,
    -0.012435304932296276,
    -0.0026844190433621407,
    -0.0003359889960847795,
    0.009780576452612877,
    -0.006888320669531822,
    -0.006235117558389902,
    -0.01574672758579254,
    -0.007817475125193596,
    -0.04141375795006752,
    0.014670864678919315,
    -0.012134901247918606,
    -0.045605432242155075,
    -0.016110006719827652,
    -0.005906769540160894,
    -0.0057321167550981045,
    -0.003657237160950899,
    0.023124078288674355,
    0.009088950231671333,
    -0.029788842424750328,
    -0.019728820770978928,
    -0.0028782840818166733,
    -0.01195326168090105,
    0.0201200433075428,
    0.03711030259728432,
    -0.03959736227989197,
    -0.005372331012040377,
    0.03859136253595352,
    0.001564892241731286,
    0.02508019283413887,
    0.0024556233547627926,
    -0.022090131416916847,
    0.015481255948543549,
    -0.02875489555299282,
    0.012197776697576046,
    -0.027176031842827797,
    0.02175479754805565,
    -0.016613008454442024,
    0.010227688588202,
    -0.01844337396323681,
    0.009291548281908035,
    0.006745104677975178,
    0.0404636412858963,
    0.024647053331136703,
    0.03498651832342148,
    0.01810803823173046,
    -0.004492079373449087,
    0.0055190399289131165,
    -0.01988251507282257,
    -0.0015718784416094422,
    -0.0010549050057306886,
    0.014258683659136295,
    0.018946373835206032,
    0.02484266459941864,
    -0.02259313128888607,
    -0.016864508390426636,
    -0.018499262630939484,
    0.03168907016515732,
    -0.008739643730223179,
    -0.006738118827342987,
    0.004184689372777939,
    -0.025625111535191536,
    -0.02024579420685768,
    0.02732972614467144,
    0.002088851761072874,
    0.027637114748358727,
    -0.01507606077939272,
    0.016277674585580826,
    0.0010374397970736027,
    0.0021936437115073204,
    0.006807980127632618,
    -0.00703852204605937,
    -0.0215312410145998,
    0.010143855586647987,
    -0.004467627499252558,
    0.010402342304587364,
    -0.016836564987897873,
    0.010108924470841885,
    0.02140549011528492,
    0.034846797585487366,
    -0.020134015008807182,
    0.02956528589129448,
    -0.005739102605730295,
    0.009403325617313385,
    -0.007468169089406729,
    0.008145823143422604,
    -0.0180800948292017,
    0.0033812851179391146,
    0.005131309852004051,
    -0.0009658319759182632,
    0.017004230991005898,
    0.01643136888742447,
    -0.007384335622191429,
    0.014978254213929176,
    -0.00167143065482378,
    -0.0028049296233803034,
    0.016012201085686684,
    0.0028485930524766445,
    -0.014335530810058117,
    0.00032747467048466206,
    0.010346452705562115,
    0.013378432020545006,
    0.0019508757395669818,
    0.02651933580636978,
    0.01325966790318489,
    0.007181737571954727,
    0.007202696055173874,
    0.04649965465068817,
    -0.013657876290380955,
    -0.01598425768315792,
    -0.012092984281480312,
    -0.029844731092453003,
    0.011317524127662182,
    -0.0301800649613142,
    -0.028699006885290146,
    -0.0037794942036271095,
    -0.036383744329214096,
    0.01704614795744419,
    -0.00910990871489048,
    0.01336445938795805,
    0.014628948643803596,
    0.0055120536126196384,
    0.016892453655600548,
    -0.0020661468151956797,
    -0.02414405159652233,
    0.013944308273494244,
    0.013699793256819248,
    0.004834399558603764,
    -0.025373609736561775,
    -0.03596457839012146,
    0.04853960499167442,
    -0.012288595549762249,
    0.02920200675725937,
    0.001327364007011056,
    0.019309652969241142,
    0.010737676173448563,
    -0.014698809944093227,
    -0.005480615887790918,
    0.007181737571954727,
    0.011219718493521214,
    -0.005477122962474823,
    0.00227747717872262,
    0.025275804102420807,
    0.0036851814948022366,
    0.003077388508245349,
    -0.003772508120164275,
    0.015607005916535854,
    0.03040362149477005,
    -0.01879267953336239,
    -0.017786677926778793,
    -0.027245892211794853,
    -0.017842566594481468,
    -0.011659844778478146,
    -0.021573157981038094,
    -0.021601101383566856,
    -0.023515300825238228,
    0.020972350612282753,
    0.03434379771351814,
    -0.004788989666849375,
    0.013490209355950356,
    -0.030319787561893463,
    0.0166688971221447,
    0.019924432039260864,
    0.006640313193202019,
    -0.01390239130705595,
    -0.014559087343513966,
    0.01235147099941969,
    0.019491292536258698,
    0.013944308273494244,
    -0.00934743694961071,
    0.01858309656381607,
    -0.05002066493034363,
    -0.013525140471756458,
    -0.020134015008807182,
    -0.024577191099524498,
    0.014754698611795902,
    0.020022237673401833,
    -0.03241562470793724,
    0.015215782448649406,
    0.02699439227581024,
    0.004663239233195782,
    0.0030861212871968746,
    0.008306504227221012,
    -0.009913313202559948,
    0.006430729292333126,
    0.002934172982349992,
    -0.014978254213929176,
    0.012155859731137753,
    -0.008886352181434631,
    0.05261950194835663,
    0.027287809178233147,
    0.003548952052369714,
    -0.0020871052984148264,
    -0.0113035524263978,
    0.0038283972535282373,
    -0.01164587214589119,
    -0.04473915323615074,
    -0.0028817770071327686,
    -0.019896486774086952,
    0.006902292836457491,
    0.03680291399359703,
    -0.027259863913059235,
    0.04155347868800163,
    0.02604427933692932,
    0.024898553267121315,
    0.002516751876100898,
    -0.027734920382499695,
    0.014489226043224335,
    0.012791597284376621,
    0.002528977580368519,
    -0.011722720228135586,
    -0.001446128124371171,
    -0.001245277002453804,
    0.014601003378629684,
    0.013399390503764153,
    -0.017325593158602715,
    0.010556036606431007,
    0.00957797933369875,
    -0.013560070656239986,
    -0.025359638035297394,
    -0.02674289047718048,
    0.018848568201065063,
    0.0038912722375243902,
    0.0205671563744545,
    -0.01573275588452816,
    0.006200186908245087,
    -0.036383744329214096,
    -0.028196005150675774,
    -0.0105979535728693,
    0.021265767514705658,
    0.0019491291604936123,
    -0.005005559418350458,
    -0.007160779554396868,
    -0.009319492615759373,
    0.0035245006438344717,
    -0.02107015624642372,
    0.00023076048819348216,
    -0.025974417105317116,
    0.010164814069867134,
    -0.01029056403785944,
    -0.0010391862597316504,
    0.026687001809477806,
    0.0007470788550563157,
    0.023347632959485054,
    -9.600465273251757e-05,
    -0.006839417386800051,
    9.229327406501397e-05,
    -0.015271672047674656,
    -0.007419265806674957,
    -0.021824657917022705,
    -0.04404053837060928,
    -0.003239816054701805,
    -0.02048332244157791,
    0.019784709438681602,
    0.03194056823849678,
    0.005812456831336021,
    0.04683499038219452,
    -0.00365374400280416,
    0.008278559893369675,
    0.03632785752415657,
    -0.02519197203218937,
    0.023808717727661133,
    0.022802716121077538,
    0.0026966447476297617,
    0.016501229256391525,
    0.02840558998286724,
    -0.030012398958206177,
    -0.0039681196212768555,
    -0.02413007989525795,
    0.017577093094587326,
    0.013406376354396343,
    0.03227590397000313,
    0.021740823984146118,
    -0.0038074387703090906,
    0.014503197744488716,
    -0.0006248216377571225,
    -0.02637961320579052,
    -0.011569024994969368,
    -0.012533110566437244,
    -0.015006199479103088,
    -0.015341533347964287,
    -0.0188206247985363,
    -0.02202026918530464,
    -0.007831447757780552,
    0.008089934475719929,
    -0.0012278116773813963,
    -0.011520122177898884,
    0.014188822358846664,
    -0.0187088456004858,
    0.01147820521146059,
    0.015788644552230835,
    -0.0019735805690288544,
    0.056112565100193024,
    -0.011722720228135586,
    -0.00526055321097374,
    -0.024213913828134537,
    0.008041031658649445,
    0.03241562470793724,
    -0.01606808975338936,
    -0.013071042485535145,
    -0.025764834135770798,
    0.00911689456552267,
    0.004265029914677143,
    0.009326478466391563,
    -0.0013937321491539478,
    -0.009088950231671333,
    -9.856987162493169e-05,
    -0.040407754480838776,
    0.009033061563968658,
    0.0057321167550981045,
    -0.010912328958511353,
    -0.015928367152810097,
    -0.024744858965277672,
    -0.026561252772808075,
    0.019016236066818237,
    0.02259313128888607,
    0.01532756071537733,
    -0.02509416453540325,
    0.015648921951651573,
    -0.020972350612282753,
    -0.006877841427922249,
    -0.005606366321444511,
    -0.0029725967906415462,
    -0.01809406653046608,
    0.031046343967318535,
    0.0525636151432991,
    0.017227787524461746,
    0.044180262833833694,
    0.010730689391493797,
    0.04057542234659195,
    0.015467283315956593,
    0.013797598890960217,
    -0.00712235551327467,
    0.010884384624660015,
    0.007656794507056475,
    -0.02094440720975399,
    -0.010248647071421146,
    0.00815979577600956,
    0.0035978551022708416,
    0.00018273085879627615,
    -0.00703852204605937,
    -0.0077825444750487804,
    0.015411394648253918,
    0.001888000639155507,
    -0.004341877531260252,
    -0.03937380760908127,
    -0.024688970297574997,
    -0.014160878024995327,
    -0.011073010042309761,
    0.0021499802824109793,
    0.015942340716719627,
    -0.05049572139978409,
    -0.02981678582727909,
    0.024633081629872322,
    0.01069575920701027,
    0.031633179634809494,
    0.005026517901569605,
    0.022774770855903625,
    -0.011806553229689598,
    0.021084129810333252,
    0.003444160334765911,
    0.03970913961529732,
    -0.022690938785672188,
    -0.017479287460446358,
    -0.023347632959485054,
    -0.007845419459044933,
    0.03308629244565964,
    0.010416314005851746,
    0.01595631241798401,
    -0.011338482610881329,
    -0.006266555283218622,
    0.004219620022922754,
    0.0067660631611943245,
    -0.018638985231518745,
    -0.006888320669531822,
    0.011785594746470451,
    -0.042866870760917664,
    -0.03157728910446167,
    -0.02840558998286724,
    -0.03607635572552681,
    -0.012575027532875538,
    0.016766702756285667,
    0.00753803038969636,
    0.012204762548208237,
    0.017926400527358055,
    -0.019728820770978928,
    0.0008370252326130867,
    0.015439338982105255,
    -0.023249827325344086,
    0.04155347868800163,
    0.019211847335100174,
    0.013811571523547173,
    0.0072865295223891735,
    0.011149857193231583,
    -0.015104005113244057,
    0.0021360081154853106,
    -0.017591066658496857,
    0.0015430606435984373,
    0.004768031183630228,
    0.009417298249900341,
    -0.01584453508257866,
    -0.007621863856911659,
    0.011247662827372551,
    0.007447210606187582,
    -0.013553084805607796,
    -0.024633081629872322,
    0.031186066567897797,
    0.021796714514493942,
    -0.0065774377435445786,
    -0.03252740204334259,
    -0.014503197744488716,
    -0.010961231775581837,
    0.014880448579788208,
    0.0015631457790732384,
    -0.023124078288674355,
    0.043006591498851776,
    -0.011247662827372551,
    -0.02470294199883938,
    0.01879267953336239,
    0.005980124231427908,
    0.02470294199883938,
    -0.015104005113244057,
    -0.015481255948543549,
    -0.01749325916171074,
    -0.004499065224081278,
    -0.034595295786857605,
    0.0034965560771524906,
    0.0001767271605785936,
    -0.002359564183279872,
    -0.04054747521877289,
    0.020623045042157173,
    0.04711443558335304,
    -0.010304535739123821,
    0.0004711268993560225,
    -0.004925218876451254,
    -0.01914198510348797,
    0.03727797046303749,
    0.0074052936397492886,
    0.000585961330216378,
    -0.008145823143422604,
    -0.018834596499800682,
    -3.179233317496255e-05,
    -0.0059312209486961365,
    -0.014726754277944565,
    -0.0018740283558145165,
    -0.004865836817771196,
    -0.004037980921566486,
    -0.0005719891050830483,
    -0.02189452014863491,
    -0.012113942764699459,
    -0.014188822358846664,
    -0.0039681196212768555,
    -0.001675797044299543,
    0.005491095129400492,
    0.004279002081602812,
    0.017088064923882484,
    0.001881014439277351,
    -0.008411295711994171,
    -0.016599036753177643,
    -0.03629991039633751,
    0.018513234332203865,
    0.028475450351834297,
    -0.03230384737253189,
    -0.004111335147172213,
    0.04325809329748154,
    -0.0043768081814050674,
    0.015439338982105255,
    -0.02352927252650261,
    0.0023420988582074642,
    -0.02151726931333542,
    0.00910292286425829,
    0.015271672047674656,
    -0.001269728410989046,
    0.0205671563744545,
    0.005878825206309557,
    -0.041832923889160156,
    -0.02992856502532959,
    0.008627865463495255,
    0.028237922117114067,
    -0.004429203923791647,
    0.01785653829574585,
    0.009801534935832024,
    0.02603030577301979,
    0.004013529513031244,
    -0.028196005150675774,
    -0.004485093057155609,
    0.005281511228531599,
    -0.017465315759181976,
    -0.00629449961706996,
    0.025583194568753242,
    -0.007489127106964588,
    0.015690838918089867,
    -0.006895306520164013,
    -0.005864853039383888,
    0.028363673016428947,
    -0.01502017118036747,
    -0.007642821874469519,
    0.0012644887901842594,
    0.020497294142842293,
    -0.014628948643803596,
    0.025764834135770798,
    -0.022523270919919014,
    -0.022397520020604134,
    -0.02793053165078163,
    0.03409229591488838,
    0.005774033255875111,
    -0.003461625427007675,
    0.03325396031141281,
    0.0010374397970736027,
    0.011932303197681904,
    0.02436760812997818,
    -0.015341533347964287,
    -0.018666928634047508,
    -0.007635836023837328,
    -0.014014169573783875,
    -0.02886667288839817,
    -0.019337598234415054,
    -0.002474835142493248,
    0.019672932103276253,
    0.018890485167503357,
    -0.019086096435785294,
    -0.03194056823849678,
    -0.007265571039170027,
    -0.0060499850660562515,
    -0.019044179469347,
    -0.016263701021671295,
    0.03691469132900238,
    0.014321559108793736,
    0.01669684238731861,
    0.002801436698064208,
    0.030375676229596138,
    -0.0035297402646392584,
    0.03149345517158508,
    -0.040631309151649475,
    0.009061005897819996,
    0.03205234557390213,
    -0.011429302394390106,
    0.017479287460446358,
    -0.021866574883461,
    -0.019561152905225754,
    0.012777624651789665,
    0.03121401183307171,
    -0.00027049408527091146,
    0.013818557374179363,
    0.03574101999402046,
    -0.009207714349031448,
    -0.017786677926778793,
    -0.024800747632980347,
    -0.010199744254350662,
    -0.008048017509281635,
    0.0100600216537714,
    -0.010625897906720638,
    -0.04921027272939682,
    -0.01154108066111803,
    0.001860056072473526,
    0.016403423622250557,
    -0.001261869096197188,
    0.033673129975795746,
    0.014391420409083366,
    -0.02235560305416584,
    0.017116008326411247,
    -0.013734724372625351,
    -0.024926498532295227,
    0.0039995573461055756,
    -0.0044012595899403095,
    0.02909022942185402,
    -0.007412279956042767,
    0.018625011667609215,
    0.03303040564060211,
    0.007003591395914555,
    -0.0074821412563323975,
    -0.03845163807272911,
    0.015453311614692211,
    -0.02614208497107029,
    0.007454196456819773,
    0.0022180951200425625,
    -0.0034389207139611244,
    0.0030704024247825146,
    0.010339466854929924,
    0.040044475346803665,
    -0.000536621839273721,
    -0.013979238457977772,
    -0.005934714339673519,
    -0.009012103080749512,
    -0.05214444547891617,
    -0.0029219472780823708,
    0.006504083517938852,
    -0.009417298249900341,
    0.025764834135770798,
    0.008921283297240734,
    -0.0006492731045000255,
    -0.005243087653070688,
    -0.002102823927998543,
    0.0022809701040387154,
    -0.01193928997963667,
    0.012099970132112503,
    0.0002495356893632561,
    -0.0013937321491539478,
    -0.020427433773875237,
    -0.012547082267701626,
    0.013643904589116573,
    -0.028894618153572083,
    0.0045130373910069466,
    0.17191459238529205,
    0.007356390822678804,
    0.001970087643712759,
    0.02094440720975399,
    0.007901309058070183,
    -0.01668286882340908,
    -0.012065039947628975,
    0.03806041553616524,
    -0.004230099264532328,
    0.023515300825238228,
    -0.014922365546226501,
    0.011785594746470451,
    -0.012079012580215931,
    0.012491193599998951,
    -0.0025901063345372677,
    -0.011603955179452896,
    -0.01124067697674036,
    -0.025848666206002235,
    0.0027210961561650038,
    0.017577093094587326,
    0.008732657879590988,
    -0.005871838890016079,
    -0.011485191062092781,
    -0.025764834135770798,
    0.038144249469041824,
    -0.022495325654745102,
    -0.002113303169608116,
    -0.011059037409722805,
    0.014363475143909454,
    0.045381877571344376,
    -0.024074191227555275,
    0.011869428679347038,
    0.017786677926778793,
    -0.0034301879350095987,
    -0.03582485392689705,
    -0.011743677780032158,
    -0.0007898688782006502,
    -0.007188723888248205,
    0.017674898728728294,
    0.04102253168821335,
    0.0061338189989328384,
    -0.015453311614692211,
    0.002249532612040639,
    -0.018177900463342667,
    0.027148086577653885,
    -0.011212732642889023,
    -0.00113087915815413,
    -0.0032799863256514072,
    0.026882613077759743,
    0.04079897701740265,
    -0.020972350612282753,
    -0.0054491786286234856,
    0.02105618454515934,
    0.006982632912695408,
    4.920307037536986e-05,
    -0.003989078104496002,
    0.004949670284986496,
    0.004816934000700712,
    -0.01903020776808262,
    0.0057321167550981045,
    -0.030962511897087097,
    0.018499262630939484,
    -0.0003178687475156039,
    0.0018198859179392457,
    -0.011191774159669876,
    0.0068848272785544395,
    -0.04744976758956909,
    0.002757773268967867,
    0.005138295702636242,
    0.004125307314097881,
    -0.022690938785672188,
    -0.013245695270597935,
    -0.020273737609386444,
    -0.0002506272867321968,
    -0.005987110082060099,
    -0.006807980127632618,
    0.01799626089632511,
    0.016515202820301056,
    -0.014628948643803596,
    0.011813539080321789,
    -0.0026966447476297617,
    0.000422005687141791,
    -0.005494588054716587,
    0.012044081464409828,
    -0.010563022457063198,
    -0.00999016035348177,
    0.03219207003712654,
    -0.009605923667550087,
    0.010479189455509186,
    -0.0034755978267639875,
    -0.037194136530160904,
    -0.012037095613777637,
    0.003601348027586937,
    0.034232016652822495,
    -0.007887336425483227,
    -0.0006658651400357485,
    0.00033577068825252354,
    0.01585850678384304,
    -0.0027630128897726536,
    -0.0018321116222068667,
    -0.051389943808317184,
    0.04770126938819885,
    0.02331968955695629,
    0.020259765908122063,
    0.0026774329598993063,
    -0.0013911123387515545,
    -0.019225819036364555,
    0.00031241081887856126,
    -0.0020416954066604376,
    -0.010954245924949646,
    -0.023613106459379196,
    -0.024563219398260117,
    -0.002301928587257862,
    0.00048073282232508063,
    0.007747613824903965,
    -0.003454639343544841,
    -0.009417298249900341,
    0.01302213966846466,
    -0.012672833167016506,
    -0.012665846385061741,
    -0.02165699191391468,
    -0.004044967237859964,
    -0.0005152267985977232,
    -0.010744662024080753,
    -0.01099616289138794,
    0.0017142207361757755,
    -0.037780970335006714,
    0.004628308583050966,
    0.012092984281480312,
    -0.030208010226488113,
    0.01668286882340908,
    -0.016012201085686684,
    0.01538345031440258,
    -0.02329174429178238,
    0.013769654557108879,
    -0.01977073773741722,
    0.0060255336575210094,
    -0.02779081091284752,
    0.002012004377320409,
    0.02530374936759472,
    -0.005120830610394478,
    -0.008222670294344425,
    0.007489127106964588,
    -0.001598076312802732,
    0.017367510125041008,
    -0.01977073773741722,
    0.01330158393830061,
    -0.0039052446372807026,
    -0.015411394648253918,
    -0.016263701021671295,
    -0.009179770015180111,
    0.017926400527358055,
    0.03339368477463722,
    -0.027846699580550194,
    0.004995080176740885,
    -0.03546157479286194,
    -0.018736790865659714,
    -0.040519531816244125,
    0.0166688971221447,
    0.0002752970322035253,
    -0.0029062284156680107,
    -0.02637961320579052,
    0.0068603758700191975,
    0.011121912859380245,
    0.004764538258314133,
    -0.000806897587608546,
    -0.17560327053070068,
    0.03191262483596802,
    0.013050084002315998,
    -0.023752829059958458,
    0.009801534935832024,
    0.005246580578386784,
    0.011289579793810844,
    -0.003154235891997814,
    -0.023124078288674355,
    -0.005379317328333855,
    0.03498651832342148,
    -0.0053304145112633705,
    -0.0032433089800179005,
    -0.00715379323810339,
    -0.007649808190762997,
    -0.018862539902329445,
    0.0011535841040313244,
    -0.0018425907474011183,
    0.020092099905014038,
    0.020874544978141785,
    0.0333377942442894,
    -0.001007748651318252,
    0.010213716886937618,
    0.03241562470793724,
    -0.019211847335100174,
    -0.007642821874469519,
    0.004135786555707455,
    0.031269900500774384,
    0.010004132986068726,
    -0.0226071048527956,
    -0.015173866413533688,
    -0.02450733073055744,
    0.024661025032401085,
    0.026449473574757576,
    -0.01094027329236269,
    0.017311621457338333,
    -0.0034144690725952387,
    -0.05356961488723755,
    -0.02449335902929306,
    -0.005522532854229212,
    0.04267125949263573,
    -0.001412944053299725,
    0.012470235116779804,
    -0.026225917041301727,
    0.004369821865111589,
    0.015579061582684517,
    -0.007649808190762997,
    -0.0127147501334548,
    -0.007796516641974449,
    -0.011045065708458424,
    0.027748893946409225,
    -0.016515202820301056,
    0.005243087653070688,
    -0.004324411973357201,
    0.02777683734893799,
    -0.0032345764338970184,
    -0.00839732401072979,
    0.021740823984146118,
    0.003880792995914817,
    -0.01325966790318489,
    -0.018960347399115562,
    -0.038479581475257874,
    0.009026074782013893,
    0.004645774140954018,
    0.008774574846029282,
    -0.0037131260614842176,
    -0.020399488508701324,
    0.02719000354409218,
    -0.023375578224658966,
    0.0009806774323806167,
    0.0029516383074223995,
    0.006982632912695408,
    -0.012547082267701626,
    -0.004645774140954018,
    -0.0056308177299797535,
    0.026896586641669273,
    -0.052591558545827866,
    0.02720397524535656,
    0.024297747761011124,
    -0.026700973510742188,
    -0.002518498571589589,
    0.029537342488765717,
    -0.03143756836652756,
    0.00399606442078948,
    0.015788644552230835,
    -0.029844731092453003,
    0.016403423622250557,
    -0.00032376329181715846,
    0.003604841185733676,
    0.0004215690423734486,
    -0.0065844240598380566,
    -0.024102134630084038,
    0.007111876271665096,
    -0.03699852526187897,
    -0.006451687775552273,
    0.02861517295241356,
    0.0072935158386826515,
    -0.01728367619216442,
    0.005613352637737989,
    -0.027762865647673607,
    -0.0007706570322625339,
    0.014880448579788208,
    -0.02460513636469841,
    -0.004694676958024502,
    0.0236829686909914,
    0.008285545744001865,
    -0.026449473574757576,
    -0.0014208033680915833,
    0.014056085608899593,
    -0.00576704740524292,
    -0.004418724682182074,
    0.026058251038193703,
    0.027162058278918266,
    0.01620781235396862,
    0.01574672758579254,
    -0.0005056209047324955,
    0.0009815507801249623,
    -0.009619895368814468,
    0.02221588045358658,
    0.01507606077939272,
    0.04792482405900955,
    -0.0010671308264136314,
    -0.007230640854686499,
    0.009626882150769234,
    -0.012281609699130058,
    -0.010639870539307594,
    -0.12105559557676315,
    -0.008844436146318913,
    0.008152808994054794,
    8.694452117197216e-05,
    -0.01454511471092701,
    -0.016864508390426636,
    -0.027734920382499695,
    -0.02413007989525795,
    -0.007328446488827467,
    0.010430286638438702,
    -0.0015832307981327176,
    0.01367184892296791,
    -0.030599232763051987,
    0.010863426141440868,
    -0.002593599259853363,
    -0.005452671553939581,
    -0.01029056403785944,
    -0.001212966162711382,
    -0.008998130448162556,
    0.007880350574851036,
    0.018652956932783127,
    -0.00306341634131968,
    -0.019463347271084785,
    0.007003591395914555,
    -0.012030109763145447,
    -0.006968660745769739,
    -0.028335727751255035,
    0.028699006885290146,
    0.025820722803473473,
    0.028293810784816742,
    0.015034143812954426,
    -0.018946373835206032,
    0.011960248462855816,
    0.005557463504374027,
    -0.002036455785855651,
    -0.024758830666542053,
    -0.03582485392689705,
    0.005333907436579466,
    0.04309042543172836,
    -0.013762668706476688,
    0.015117976814508438,
    0.024158025160431862,
    0.013308570720255375,
    -0.022537242621183395,
    -0.014712781645357609,
    0.024982387199997902,
    -0.014349503442645073,
    0.028084227815270424,
    -0.017241759225726128,
    -0.012819541618227959,
    0.0032869724091142416,
    -0.04219620302319527,
    -0.007160779554396868,
    0.005522532854229212,
    -0.0017107276944443583,
    -0.028349699452519417,
    -0.016165895387530327,
    0.017954343929886818,
    -0.01574672758579254,
    -0.008774574846029282,
    -0.01821981742978096,
    0.012477220967411995,
    -0.012784610502421856,
    0.01717189885675907,
    0.020888516679406166,
    0.009005116298794746,
    -0.010018104687333107,
    0.03004034236073494,
    0.008837449364364147,
    -0.013154875487089157,
    -0.029649119824171066,
    0.030850732699036598,
    -0.01531358901411295,
    0.0030162599869072437,
    -0.012449276633560658,
    0.00570417195558548,
    -0.0009981427574530244,
    -0.02331968955695629,
    0.006542507093399763,
    -0.02790258824825287,
    -0.012498179450631142,
    0.004572419449687004,
    0.0037410706281661987,
    -0.005305962637066841,
    0.012595986016094685,
    0.025639083236455917,
    0.004020515829324722,
    -0.017716815695166588,
    0.03476296365261078,
    -0.03652346879243851,
    0.027818754315376282,
    -0.015453311614692211,
    0.05616845563054085,
    0.018834596499800682,
    -0.006996605545282364,
    -0.012987208552658558,
    -0.0015500467270612717,
    -0.006598396226763725,
    -0.0037305913865566254,
    -0.011156843975186348,
    -0.018289677798748016,
    0.004184689372777939,
    -0.06617258489131927,
    0.015886450186371803,
    -0.0004968882421962917,
    -0.012232706882059574,
    -0.0030214996077120304,
    -0.052368003875017166,
    -0.0018443373264744878,
    -0.02319393865764141,
    0.019044179469347,
    0.019435403868556023,
    -0.026058251038193703,
    -0.0001776004210114479,
    -0.019938403740525246,
    0.00905401911586523,
    -0.012379415333271027,
    -0.031409624963998795,
    0.016613008454442024,
    0.01325966790318489,
    0.039792973548173904,
    -0.003548952052369714,
    0.00018545982311479747,
    0.004205647855997086,
    0.020329628139734268,
    0.009829479269683361,
    -0.015369477681815624,
    0.010115910321474075,
    0.0018460839055478573,
    0.016501229256391525,
    0.008446226827800274,
    -0.019449375569820404,
    0.032695069909095764,
    0.0029918085783720016,
    -0.019658958539366722,
    0.026072222739458084,
    0.007817475125193596,
    -0.01891843043267727,
    0.0029271868988871574,
    0.0010688772890716791,
    0.03227590397000313,
    -0.003887779312208295,
    0.0039751059375703335,
    -0.021000295877456665,
    0.013958279974758625,
    0.0036083341110497713,
    -0.029649119824171066,
    0.009200728498399258,
    7.237189856823534e-05,
    0.009920299053192139,
    0.016165895387530327,
    0.0037375774700194597,
    0.030124176293611526,
    -0.009703729301691055,
    -0.018666928634047508,
    -0.029146118089556694,
    0.003919216804206371,
    -0.013294598087668419,
    0.019938403740525246,
    -0.007579946890473366,
    -0.009843451902270317,
    0.01619384065270424,
    0.057202402502298355,
    0.025932500138878822,
    0.024772804230451584,
    -0.015173866413533688,
    0.018038177862763405,
    -0.01573275588452816,
    -0.041469644755125046,
    -0.01985456980764866,
    0.00021798897068947554,
    0.0025499360635876656,
    -0.00715379323810339,
    -0.04731004685163498,
    0.01654314622282982,
    0.008991144597530365,
    0.003080881666392088,
    -0.03856341540813446,
    -0.0014225499471649528,
    -0.02069290541112423,
    -0.014391420409083366,
    0.025010332465171814,
    0.02579277753829956,
    0.0038249040953814983,
    -0.009878382086753845,
    0.010563022457063198,
    0.012533110566437244,
    -0.01890445686876774,
    -0.018303651362657547,
    -0.018485289067029953,
    0.012295582331717014,
    0.0037794942036271095,
    -0.011750664561986923,
    -0.002487060846760869,
    0.015006199479103088,
    0.001741291955113411,
    0.01478264294564724,
    -0.009612909518182278,
    -0.009619895368814468,
    -9.49130771914497e-05,
    0.031409624963998795,
    0.010954245924949646,
    -0.0030092739034444094,
    -0.009298534132540226,
    -0.022690938785672188,
    -0.0023420988582074642,
    0.013769654557108879,
    -0.02354324609041214,
    0.01643136888742447,
    -0.04554954171180725,
    -0.010570009239017963,
    0.024521302431821823,
    0.003281732788309455,
    -0.002962117549031973,
    -0.0034424136392772198,
    0.01619384065270424,
    -0.025457443669438362,
    0.0019473826978355646,
    -0.008676769211888313,
    0.013972252607345581,
    -0.016473285853862762,
    0.0004407808883115649,
    0.008781560696661472,
    -0.0042755091562867165,
    0.038367804139852524,
    0.005470136646181345,
    0.007412279956042767,
    0.021684935316443443,
    -0.012288595549762249,
    -0.010576995089650154,
    0.021670963615179062,
    -0.014978254213929176,
    0.023571189492940903,
    -0.00479248259216547,
    -0.023473383858799934,
    -0.009962216019630432,
    -0.026798781007528305,
    -0.020064154639840126,
    0.01630561798810959,
    -0.006291006691753864,
    -0.006469152867794037,
    0.09618498384952545,
    -0.00482392031699419,
    -0.014712781645357609,
    0.014768671244382858,
    -0.007139821071177721,
    0.0328906811773777,
    -0.002813662402331829,
    -0.02626783400774002,
    0.0066787367686629295,
    -0.014740725979208946,
    0.011073010042309761,
    0.02425583079457283,
    -0.020134015008807182,
    0.00799212884157896,
    -0.02317996695637703,
    0.018597068265080452,
    -0.012079012580215931,
    0.02222985401749611,
    -0.008711699396371841,
    -0.013804585672914982,
    0.009403325617313385,
    0.017325593158602715,
    0.013490209355950356,
    0.00018163927597925067,
    -0.032359737902879715,
    -0.011736691929399967,
    0.03526596352458,
    0.03286273777484894,
    -0.015900423750281334,
    -0.030347732827067375,
    -0.007035029120743275,
    -0.01035343948751688,
    -0.02305421605706215,
    -0.020678933709859848,
    -0.008355407044291496,
    0.010618912056088448,
    -0.012274623848497868,
    -0.002155219903215766,
    0.011904358863830566,
    0.0048029618337750435,
    0.0034598789643496275,
    0.01140834391117096,
    -0.017129981890320778,
    -0.030235953629016876,
    0.03453940898180008,
    0.0023822691291570663,
    0.01834556832909584,
    -0.012630916200578213,
    -0.03336573764681816
  ]
}
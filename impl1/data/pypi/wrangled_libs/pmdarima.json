{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: financial and insurance industry",
    "intended audience :: science/research",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: c",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": "# pmdarima\n\n[![pypi version](https://badge.fury.io/py/pmdarima.svg)](https://badge.fury.io/py/pmdarima)\n[![circleci](https://circleci.com/gh/alkaline-ml/pmdarima.svg?style=svg)](https://circleci.com/gh/alkaline-ml/pmdarima)\n[![github actions status](https://github.com/alkaline-ml/pmdarima/workflows/mac%20and%20windows%20builds/badge.svg?branch=master)](https://github.com/alkaline-ml/pmdarima/actions?query=workflow%3a%22mac+and+windows+builds%22+branch%3amaster)\n[![codecov](https://codecov.io/gh/alkaline-ml/pmdarima/branch/master/graph/badge.svg)](https://codecov.io/gh/alkaline-ml/pmdarima)\n![supported versions](https://img.shields.io/badge/python-3.7+-blue.svg)\n![downloads](https://img.shields.io/badge/dynamic/json?color=blue&label=downloads&query=%24.total&url=https%3a%2f%2fstore.zapier.com%2fapi%2frecords%3fsecret%3d1e061b29db6c4f15af01103d403b0237)\n![downloads/week](https://img.shields.io/badge/dynamic/json?color=blue&label=downloads%2fweek&query=%24.weekly&url=https%3a%2f%2fstore.zapier.com%2fapi%2frecords%3fsecret%3d1e061b29db6c4f15af01103d403b0237)\n\npmdarima (originally `pyramid-arima`, for the anagram of 'py' + 'arima') is a statistical\nlibrary designed to fill the void in python's time series analysis capabilities. this includes:\n\n  * the equivalent of r's [`auto.arima`](https://www.rdocumentation.org/packages/forecast/versions/7.3/topics/auto.arima) functionality\n  * a collection of statistical tests of stationarity and seasonality\n  * time series utilities, such as differencing and inverse differencing\n  * numerous endogenous and exogenous transformers and featurizers, including box-cox and fourier transformations\n  * seasonal time series decompositions\n  * cross-validation utilities\n  * a rich collection of built-in time series datasets for prototyping and examples\n  * scikit-learn-esque pipelines to consolidate your estimators and promote productionization\n  \npmdarima wraps [statsmodels](https://github.com/statsmodels/statsmodels/blob/master/statsmodels)\nunder the hood, but is designed with an interface that's familiar to users coming\nfrom a scikit-learn background.\n\n## installation\n\n### pip\n\npmdarima has binary and source distributions for windows, mac and linux (`manylinux`) on pypi\nunder the package name `pmdarima` and can be downloaded via `pip`:\n\n```bash\npip install pmdarima\n```\n\n### conda\n\npmdarima also has mac and linux builds available via `conda` and can be installed like so:\n\n```bash\nconda config --add channels conda-forge\nconda config --set channel_priority strict\nconda install pmdarima\n```\n\n**note:** we do not maintain our own conda binaries, they are maintained at https://github.com/conda-forge/pmdarima-feedstock.\nsee that repo for further documentation on working with pmdarima on conda.\n\n## quickstart examples\n\nfitting a simple auto-arima on the [`wineind`](https://alkaline-ml.com/pmdarima/modules/generated/pmdarima.datasets.load_wineind.html#pmdarima.datasets.load_wineind) dataset:\n\n```python\nimport pmdarima as pm\nfrom pmdarima.model_selection import train_test_split\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# load/split your data\ny = pm.datasets.load_wineind()\ntrain, test = train_test_split(y, train_size=150)\n\n# fit your model\nmodel = pm.auto_arima(train, seasonal=true, m=12)\n\n# make your forecasts\nforecasts = model.predict(test.shape[0])  # predict n steps into the future\n\n# visualize the forecasts (blue=train, green=forecasts)\nx = np.arange(y.shape[0])\nplt.plot(x[:150], train, c='blue')\nplt.plot(x[150:], forecasts, c='green')\nplt.show()\n```\n\n<img src=\"http://alkaline-ml.com/img/static/pmdarima_readme_example1.png\" alt=\"wineind example\"/>\n\n\nfitting a more complex pipeline on the [`sunspots`](https://www.rdocumentation.org/packages/datasets/versions/3.6.1/topics/sunspots) dataset,\nserializing it, and then loading it from disk to make predictions:\n\n```python\nimport pmdarima as pm\nfrom pmdarima.model_selection import train_test_split\nfrom pmdarima.pipeline import pipeline\nfrom pmdarima.preprocessing import boxcoxendogtransformer\nimport pickle\n\n# load/split your data\ny = pm.datasets.load_sunspots()\ntrain, test = train_test_split(y, train_size=2700)\n\n# define and fit your pipeline\npipeline = pipeline([\n    ('boxcox', boxcoxendogtransformer(lmbda2=1e-6)),  # lmbda2 avoids negative values\n    ('arima', pm.autoarima(seasonal=true, m=12,\n                           suppress_warnings=true,\n                           trace=true))\n])\n\npipeline.fit(train)\n\n# serialize your model just like you would in scikit:\nwith open('model.pkl', 'wb') as pkl:\n    pickle.dump(pipeline, pkl)\n    \n# load it and make predictions seamlessly:\nwith open('model.pkl', 'rb') as pkl:\n    mod = pickle.load(pkl)\n    print(mod.predict(15))\n# [25.20580375 25.05573898 24.4263037  23.56766793 22.67463049 21.82231043\n# 21.04061069 20.33693017 19.70906027 19.1509862  18.6555793  18.21577243\n# 17.8250318  17.47750614 17.16803394]\n```\n\n\n### availability\n\n`pmdarima` is available on pypi in pre-built wheel files for python 3.7+ for the following platforms:\n\n* mac (64-bit)\n* linux (64-bit manylinux)\n* windows (64-bit)\n  * 32-bit wheels are available for pmdarima versions below 2.0.0 and python versions below 3.10\n\nif a wheel doesn't exist for your platform, you can still `pip install` and it\nwill build from the source distribution tarball, however you'll need `cython>=0.29`\nand `gcc` (mac/linux) or `mingw` (windows) in order to build the package from source.\n\nnote that legacy versions (<1.0.0) are available under the name\n\"`pyramid-arima`\" and can be pip installed via:\n\n```bash\n# legacy warning:\n$ pip install pyramid-arima\n# python -c 'import pyramid;'\n```\n\nhowever, this is not recommended.\n\n## documentation\n\nall of your questions and more (including examples and guides) can be answered by\nthe [`pmdarima` documentation](https://www.alkaline-ml.com/pmdarima). if not, always\nfeel free to file an issue.\n",
  "docs_url": null,
  "keywords": "arima timeseries forecasting pyramid pmdarima pyramid-arima scikit-learn statsmodels",
  "license": "mit",
  "name": "pmdarima",
  "package_url": "https://pypi.org/project/pmdarima/",
  "project_url": "https://pypi.org/project/pmdarima/",
  "project_urls": {
    "Bug Tracker": "https://github.com/alkaline-ml/pmdarima/issues",
    "Documentation": "http://alkaline-ml.com/pmdarima",
    "Download": "https://pypi.org/project/pmdarima/#files",
    "Homepage": "http://alkaline-ml.com/pmdarima",
    "Source Code": "https://github.com/alkaline-ml/pmdarima"
  },
  "release_url": "https://pypi.org/project/pmdarima/2.0.4/",
  "requires_dist": [
    "joblib >=0.11",
    "Cython !=0.29.18,!=0.29.31,>=0.29",
    "numpy >=1.21.2",
    "pandas >=0.19",
    "scikit-learn >=0.22",
    "scipy >=1.3.2",
    "statsmodels >=0.13.2",
    "urllib3",
    "setuptools !=50.0.0,>=38.6.0",
    "packaging >=17.1"
  ],
  "requires_python": ">=3.7",
  "summary": "python's forecast::auto.arima equivalent",
  "version": "2.0.4",
  "releases": [],
  "developers": [
    "taylor.smith@alkaline-ml.com",
    "taylor_g"
  ],
  "kwds": "pmdarima_readme_example1 workflows pmdarima workflow auto_arima",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pmdarima",
  "homepage": "http://alkaline-ml.com/pmdarima",
  "release_count": 27,
  "dependency_ids": [
    "pypi_cython",
    "pypi_joblib",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_setuptools",
    "pypi_statsmodels",
    "pypi_urllib3"
  ]
}
{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# opendatasets\n\n`opendatasets` is a python library for downloading datasets from online sources like [kaggle](https://www.kaggle.com/datasets) and google drive using a simple python command. \n\n\n### installation\n\ninstall the library using `pip`:\n\n```\npip install opendatasets --upgrade\n```\n\n### usage - downloading a dataset\n\ndatasets can be downloaded within a jupyter notebook or python script using the `opendatasets.download` helper function. here's some sample code for downloading the [us elections dataset](https://www.kaggle.com/tunguz/us-elections-dataset):\n\n```\nimport opendatasets as od\ndataset_url = 'https://www.kaggle.com/tunguz/us-elections-dataset'\nod.download('https://www.kaggle.com/tunguz/us-elections-dataset')\n```\n\n`dataset_url` can also point to a public google drive link or a raw file url.\n\n### kaggle credentials\n\n`opendatasets` uses the [kaggle official api](https://github.com/kaggle/kaggle-api) for donwloading dataset from kaggle.  follow these steps to find your api credentials:\n\n1. sign in to  [https://kaggle.com/](https://kaggle.com),  then click on your profile picture on the top right and select \"my account\" from the menu.\n\n2. scroll down to the \"api\" section and click \"create new api token\". this will download a file `kaggle.json` with the following contents:\n\n```\n{\"username\":\"your_kaggle_username\",\"key\":\"your_kaggle_key\"}\n```\n\n3. when you run `opendatsets.download`, you will be asked to enter your username & kaggle api, which you can get from the file downloaded in step 2.\n\nnote that you need to download the `kaggle.json` file only once. you can also place the `kaggle.json` file in the same directory as the jupyter notebook, and the credentials will be read automatically.\n\n### some interesting datasets\n\nyou can find interesting datasets on kaggle: https://www.kaggle.com/datasets\n\n*you can also create a new dataset on kaggle by uploading a csv file here: https://www.kaggle.com/datasets?new=true (make sure to keep your dataset public, otherwise it will not be downloadable)*\n\n- video games sales: https://www.kaggle.com/gregorut/videogamesales\n- world university rankings: https://www.kaggle.com/mylesoneill/world-university-rankings\n- netflix tv shows and movies: https://www.kaggle.com/shivamb/netflix-shows/notebooks\n- stackoverflow developer survey: https://www.kaggle.com/stackoverflow/stack-overflow-2018-developer-survey\n- google play store android apps data: https://www.kaggle.com/lava18/google-play-store-apps\n- indian stock market data: https://www.kaggle.com/rohanrao/nifty50-stock-market-data\n- indian air quality: https://www.kaggle.com/rohanrao/air-quality-data-in-india\n- worldwide covid-19 cases: https://www.kaggle.com/imdevskp/corona-virus-report\n- usa covid-19 cases: https://www.kaggle.com/sudalairajkumar/covid19-in-usa\n- us election results (2012): https://www.kaggle.com/tunguz/us-elections-dataset\n- us stock market: https://www.kaggle.com/borismarjanovic/price-volume-data-for-all-us-stocks-etfs/\n- crop production in india: https://www.kaggle.com/srinivas1/agricuture-crops-production-in-india\n- agricultural raw material prices: https://www.kaggle.com/kianwee/agricultural-raw-material-prices-19902020\n- agricultural land values: https://www.kaggle.com/jmullan/agricultural-land-values-19972017\n- digital payments in india: https://www.kaggle.com/lazycipher/upi-usage-statistics-aug16-to-feb20\n- us unemployment rate data: https://www.kaggle.com/jayrav13/unemployment-by-county-us\n- india road accident data: https://community.data.gov.in/statistics-of-road-accidents-in-india/\n- data science jobs data:\n    - https://www.kaggle.com/sl6149/data-scientist-job-market-in-the-us\n    - https://www.kaggle.com/jonatancr/data-science-jobs-around-the-world\n    - https://www.kaggle.com/rkb0023/glassdoor-data-science-jobs\n- youtube trending videos: https://www.kaggle.com/datasnaek/youtube-new\n- asteroid dataset: https://www.kaggle.com/sakhawat18/asteroid-dataset\n- solar flares data: https://www.kaggle.com/khsamaha/solar-flares-rhessi\n- f-1 race data: https://www.kaggle.com/cjgdev/formula-1-race-data-19502017\n- automobile insurance: https://www.kaggle.com/aashishjhamtani/automobile-insurance\n- pubg video game matches: https://www.kaggle.com/skihikingkevin/pubg-match-deaths\n- counterstrike go (video game)\n    - https://www.kaggle.com/mateusdmachado/csgo-professional-matches\n    - https://www.kaggle.com/skihikingkevin/csgo-matchmaking-damage\n- dota 2 (video game): https://www.kaggle.com/devinanzelmo/dota-2-matches\n- cricket one-day internationals data: https://www.kaggle.com/jaykay12/odi-cricket-matches-19712017\n- cricket indian premier league data: https://www.kaggle.com/nowke9/ipldata\n- basketball (ncaa): https://www.kaggle.com/ncaa/ncaa-basketball\n- basketball nba players stats: https://www.kaggle.com/ncaa/ncaa-basketball\n- football datasets: \n    - https://www.kaggle.com/martj42/international-football-results-from-1872-to-2017\n    - https://www.kaggle.com/abecklas/fifa-world-cup\n    - https://www.kaggle.com/egadharmawan/uefa-champion-league-final-all-season-19552019\n- hotel booking demand: https://www.kaggle.com/jessemostipak/hotel-booking-demand\n- new york airbnb listings: https://www.kaggle.com/dgomonov/new-york-city-airbnb-open-data\n\n\nother sources to look for datasets: \n- [uci machine learning repository](http://archive.ics.uci.edu/ml/index.php)\n- [awesome-public-datasets](https://github.com/awesomedata/awesome-public-datasets)\n- [google dataset search](https://datasetsearch.research.google.com)\n\n*if you use an external source other than kaggle, you'll create a new dataset on kaggle by uploading a csv file here: https://www.kaggle.com/datasets?new=true (make sure to keep your dataset public, otherwise it will not be downloadable using `opendatasets`)*\n\n\n\n## curated datasets\n\n`opendatasets` also provides some curated datsets that you can download by passing the dataset id to `opendatasets.download`. here's an example:\n\n```\nimport opendatasets\nopendatasets.download('stackoverflow-developer-survey-2020')\n```\n\nthe following datasets are available for download.\n\n<table>\n    <tr>\n        <th>dataset id</th>\n        <th>description</th>\n        <th>source</th>\n    </tr>\n    <tr>\n        <td><code>stackoverflow-developer-survey-2020</code></td>\n        <td>stack overflow developer survey 2020</td>\n        <td>\n            <a href=\"https://insights.stackoverflow.com/survey/\">stack overflow</a>\n        </td>\n    </tr>\n    <tr>\n        <td><code>owid-covid-19-latest</code></td>\n        <td>covid-19 stats by our world in data</td>\n        <td>\n            <a href=\"https://github.com/owid/covid-19-data/tree/master/public/data\">our world in data</a>\n        </td>\n    </tr>\n    <tr>\n        <td><code>state-of-javascript-2016</code></td>\n        <td>state of javascript annual survey 2016</td>\n        <td>\n            <a href=\"https://www.kaggle.com/sachag/state-of-js-2019\">stateofjs</a>\n        </td>\n    </tr>\n    <tr>\n        <td><code>state-of-javascript-2017</code></td>\n        <td>state of javascript annual survey 2017</td>\n        <td>\n            <a href=\"https://www.kaggle.com/sachag/state-of-js-2019\">stateofjs</a>\n        </td>\n    </tr>\n    <tr>\n        <td><code>state-of-javascript-2018</code></td>\n        <td>state of javascript annual survey 2018</td>\n        <td>\n            <a href=\"https://www.kaggle.com/sachag/state-of-js-2019\">stateofjs</a>\n        </td>\n    </tr>\n    <tr>\n        <td><code>state-of-javascript-2019</code></td>\n        <td>state of javascript annual survey 2019</td>\n        <td>\n            <a href=\"https://www.kaggle.com/sachag/state-of-js-2019\">stateofjs</a>\n        </td>\n    </tr>\n    <tr>\n        <td><code>countries-languages-spoken</code></td>\n        <td>languages spoken in different countries</td>\n        <td>\n            <a href=\"https://www.infoplease.com/world/countries/languages-spoken-in-each-country-of-the-world\">infoplease</a>\n        </td>\n    </tr>\n</table>\n\nmore datasets will be added soon..\n\n## contributing\n\nthis is an open source project and we welcome contributions.\n\n### local development setup\n\n1. clone the repository:\n\n```\ngit clone https://github.com/jovianml/opendatasets.git\n```\n\n2. setup the python environment for development\n\n```\nconda create -n opendatasets python=3.5\nconda activate opendatasets\npip install -r requirements.txt\n```\n\n3. open up the project in vs code and make your changes. make sure to install the python extension for vs code and select the `opendatasets` conda environment.\n\nthis package is developed and maintained by the [jovian](https://www.jovian.ai) team.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "opendatasets",
  "package_url": "https://pypi.org/project/opendatasets/",
  "project_url": "https://pypi.org/project/opendatasets/",
  "project_urls": {
    "Homepage": "https://github.com/JovianML/opendatasets"
  },
  "release_url": "https://pypi.org/project/opendatasets/0.1.22/",
  "requires_dist": [
    "tqdm",
    "kaggle",
    "click"
  ],
  "requires_python": "",
  "summary": "a curated collection of datasets for data analysis & machine learning, downloadable with a single python command",
  "version": "0.1.22",
  "releases": [],
  "developers": [
    "hello@jovian.ml",
    "jovian"
  ],
  "kwds": "opendatasets dataset_url dataset datasets datasetsearch",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_opendatasets",
  "homepage": "https://github.com/jovianml/opendatasets",
  "release_count": 29,
  "dependency_ids": [
    "pypi_click",
    "pypi_kaggle",
    "pypi_tqdm"
  ]
}
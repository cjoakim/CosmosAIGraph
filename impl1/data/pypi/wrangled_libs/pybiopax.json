{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: bsd license",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "pybiopax: a python implementation of the biopax object model\n------------------------------------------------------------\n[![license](https://img.shields.io/badge/license-bsd%202--clause-orange.svg)](https://opensource.org/licenses/bsd-2-clause)\n[![doi](https://joss.theoj.org/papers/10.21105/joss.04136/status.svg)](https://doi.org/10.21105/joss.04136)\n[![build](https://github.com/indralab/pybiopax/workflows/tests/badge.svg)](https://github.com/indralab/pybiopax/actions)\n[![documentation](https://readthedocs.org/projects/pybiopax/badge/?version=latest)](https://pybiopax.readthedocs.io/en/latest/?badge=latest)\n[![pypi version](https://badge.fury.io/py/pybiopax.svg)](https://badge.fury.io/py/pybiopax)\n[![python 3](https://img.shields.io/pypi/pyversions/pybiopax.svg)](https://www.python.org/downloads/release/python-357/)\n\npybiopax implements the biopax level 3 object model (http://www.biopax.org/release/biopax-level3-documentation.pdf) as a set of\npython classes. it exposes api functions to read owl files into this\nobject model, and to dump owl files from this object model.\nthis allows for the processing and creation of biopax models natively in\npython.\n\ngyori bm, hoyt ct (2022). pybiopax: biological pathway exchange in python. journal of open source software, 7(71), 4136, [https://doi.org/10.21105/joss.04136](https://doi.org/10.21105/joss.04136)\n\ninstallation\n------------\npybiopax can be installed from pypi as a package:\n\n```bash\n$ pip install pybiopax\n```\n\nusage\n-----\nreading an owl file into a biopaxmodel object:\n\n```python\nimport pybiopax\nmodel = pybiopax.model_from_owl_file('test.owl')\n```\n\n\nwriting a biopaxmodel into an owl file:\n\n```python\nimport pybiopax\npybiopax.model_to_owl_file(model, 'test.owl')\n```\n\nquerying pathway commons to get a biopaxmodel object:\n\n```python\nimport pybiopax\nmodel = pybiopax.model_from_pc_query('pathsfromto', ['map2k1'], ['mapk1'])\n```\n\nworking with the elements of the python object model:\n\n```python\nimport pybiopax\nmodel = pybiopax.model_from_pc_query('pathsfromto', ['map2k1'], ['mapk1'])\n\n# each biopaxmodel instance has an objects attribute which is a dict\n# whose keys are object uris (strings) and values are biopaxobject instances.\nassert isinstance(model.objects, dict)\nassert all(isinstance(obj, pybiopax.biopax.biopaxobject)\n           for obj in model.objects.values())\n\n# let's look at a specific object\nbcr = model.objects['biochemicalreaction_4f689747397d98089c551022a3ae2d88']\n\n# this is a biochemicalreaction which has a left and a right side. all list/set\n# types per the biopax specification are represented as lists in the python\n# object model\n# both left and right consist of a single protein\nleft = bcr.left[0]\nassert isinstance(left, pybiopax.biopax.protein)\nassert left.display_name == 'erk1-2'\nright = bcr.right[0]\nassert isinstance(right, pybiopax.biopax.protein)\nassert right.display_name == 'erk1-2-active'\n```\n\nwe can also use the `pybiopax.paths` module to construct iterators over\nobjects based on a string specification from a given starting point.\ncontinuing from the block of code above, we take the biochemicalreaction\n`bcr` and link to reactants on its left hand side, then linking to their\nentity references, and finally linking back to all the physical entities\nthat those are references of.\n\n```python\nfrom pybiopax.paths import find_objects\n\nerks = find_objects(bcr, 'left/entity_reference/entity_reference_of')\n```\n\ncontribution and support\n------------------------\nto contribute to the code, please submit a pull request after\nreading the [contribution guidelines](https://github.com/indralab/pybiopax/blob/master/contributing.md).\nto report bugs and issues, or ask questions related to pybiopax, please\nsubmit an [issue](https://github.com/indralab/pybiopax/issues).\n\nfunding\n-------\ndevelopment of this software was supported by the defense advanced research\nprojects agency under award w911nf-15-1-0544 and the national cancer institute\nunder award u54-ca225088.\n",
  "docs_url": null,
  "keywords": "biology,pathway",
  "license": "",
  "name": "pybiopax",
  "package_url": "https://pypi.org/project/pybiopax/",
  "project_url": "https://pypi.org/project/pybiopax/",
  "project_urls": {
    "Homepage": "https://github.com/indralab/pybiopax"
  },
  "release_url": "https://pypi.org/project/pybiopax/0.1.4/",
  "requires_dist": [
    "lxml",
    "requests",
    "tqdm"
  ],
  "requires_python": "",
  "summary": "a python implementation of the biopax object model, and parts of paxtools.",
  "version": "0.1.4",
  "releases": [],
  "developers": [
    "benjamin_gyori@hms.harvard.edu",
    "benjamin_m"
  ],
  "kwds": "biopaxmodel pybiopax biopaxobject biopax pathway",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pybiopax",
  "homepage": "https://github.com/indralab/pybiopax",
  "release_count": 11,
  "dependency_ids": [
    "pypi_lxml",
    "pypi_requests",
    "pypi_tqdm"
  ]
}
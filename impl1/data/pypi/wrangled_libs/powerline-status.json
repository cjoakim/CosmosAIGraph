{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "environment :: plugins",
    "intended audience :: end users/desktop",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.2",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "powerline\n=========\n\n:author: kim silkeb\u00e6kken (kim.silkebaekken+vim@gmail.com)\n:source: https://github.com/powerline/powerline\n:version: beta\n\n**powerline is a statusline plugin for vim, and provides statuslines and \nprompts for several other applications, including zsh, bash, fish, tmux,\nipython, awesome, i3 and qtile.**\n\n* `support forum`_ (powerline-support@googlegroups.com)\n* `development discussion`_ (powerline-dev@googlegroups.com)\n\n.. image:: https://api.travis-ci.org/powerline/powerline.svg?branch=develop\n   :target: `travis-build-status`_\n   :alt: build status\n\n.. _travis-build-status: https://travis-ci.org/powerline/powerline\n.. _`support forum`: https://groups.google.com/forum/#!forum/powerline-support\n.. _`development discussion`: https://groups.google.com/forum/#!forum/powerline-dev\n\nfeatures\n--------\n\n* **extensible and feature rich, written in python.** powerline was \n  completely rewritten in python to get rid of as much vimscript as \n  possible. this has allowed much better extensibility, leaner and better \n  config files, and a structured, object-oriented codebase with no mandatory\n  third-party dependencies other than a python interpreter.\n* **stable and testable code base.** using python has allowed unit testing \n  of all the project code. the code is tested to work in python 2.6+ and \n  python 3.\n* **support for prompts and statuslines in many applications.** originally \n  created exclusively for vim statuslines, the project has evolved to \n  provide statuslines in tmux and several wms, and prompts for shells like \n  bash/zsh and other applications. it\u2019s simple to write renderers for any \n  other applications that powerline doesn\u2019t yet support.\n* **configuration and colorschemes written in json.** json is \n  a standardized, simple and easy to use file format that allows for easy \n  user configuration across all of powerline\u2019s supported applications.\n* **fast and lightweight, with daemon support for even better performance.**\n  although the code base spans a couple of thousand lines of code with no \n  goal of \u201cless than x lines of code\u201d, the main focus is on good performance \n  and as little code as possible while still providing a rich set of \n  features. the new daemon also ensures that only one python instance is \n  launched for prompts and statuslines, which provides excellent \n  performance.\n\n*but i hate python / i don\u2019t need shell prompts / this is just too much \nhassle for me / what happened to the original vim-powerline project / \u2026*\n\nyou should check out some of the powerline derivatives. the most lightweight\nand feature-rich alternative is currently bailey ling\u2019s `vim-airline \n<https://github.com/vim-airline/vim-airline>`_ project.\n\n------\n\n* consult the `documentation \n  <https://powerline.readthedocs.org/en/latest/>`_ for more information and \n  installation instructions.\n* check out `powerline-fonts <https://github.com/powerline/fonts>`_ for \n  pre-patched versions of popular, open source coding fonts.\n\nscreenshots\n-----------\n\nvim statusline\n^^^^^^^^^^^^^^\n\n**mode-dependent highlighting**\n\n* .. image:: https://raw.github.com/powerline/powerline/develop/docs/source/_static/img/pl-mode-normal.png\n     :alt: normal mode\n* .. image:: https://raw.github.com/powerline/powerline/develop/docs/source/_static/img/pl-mode-insert.png\n     :alt: insert mode\n* .. image:: https://raw.github.com/powerline/powerline/develop/docs/source/_static/img/pl-mode-visual.png\n     :alt: visual mode\n* .. image:: https://raw.github.com/powerline/powerline/develop/docs/source/_static/img/pl-mode-replace.png\n     :alt: replace mode\n\n**automatic truncation of segments in small windows**\n\n* .. image:: https://raw.github.com/powerline/powerline/develop/docs/source/_static/img/pl-truncate1.png\n     :alt: truncation illustration\n* .. image:: https://raw.github.com/powerline/powerline/develop/docs/source/_static/img/pl-truncate2.png\n     :alt: truncation illustration\n* .. image:: https://raw.github.com/powerline/powerline/develop/docs/source/_static/img/pl-truncate3.png\n     :alt: truncation illustration\n\n----\n\nthe font in the screenshots is `pragmata pro`_ by fabrizio schiavi.\n\n.. _`pragmata pro`: http://www.fsd.it/shop/fonts/pragmatapro\n",
  "docs_url": "https://pythonhosted.org/powerline-status/",
  "keywords": "",
  "license": "mit",
  "name": "powerline-status",
  "package_url": "https://pypi.org/project/powerline-status/",
  "project_url": "https://pypi.org/project/powerline-status/",
  "project_urls": {
    "Download": "https://github.com/powerline/powerline/archive/develop.zip",
    "Homepage": "https://github.com/powerline/powerline"
  },
  "release_url": "https://pypi.org/project/powerline-status/2.7/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "the ultimate statusline/prompt utility.",
  "version": "2.7",
  "releases": [],
  "developers": [
    "kim.silkebaekken+vim@gmail.com",
    "kim_silkebaekken"
  ],
  "kwds": "powerline statusline statuslines plugin prompts",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_powerline_status",
  "homepage": "https://github.com/powerline/powerline",
  "release_count": 19,
  "dependency_ids": []
}
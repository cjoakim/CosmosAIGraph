{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "typing :: stubs only"
  ],
  "description": "# type stubs for google-api-python-client\n\n[![pypi version](https://badge.fury.io/py/google-api-python-client-stubs.svg)](https://badge.fury.io/py/google-api-python-client-stubs)\n\nthis package provides type stubs for the [google-api-python-client](https://github.com/googleapis/google-api-python-client) library. \nit allows you to type check usage of the library with e.g. [mypy](http://mypy-lang.org/) and will also improve autocomplete in many editors.\n\n**this is in no way affiliated with google.**\n\nthe stubs were generated automatically based on google's [discovery documents](https://developers.google.com/discovery/v1/reference/apis), that are bundled with google-api-python-client as of v2.\n\nif you find incorrect annotations, please create an issue.\n\nreleases can be somewhat infrequent. if you need a new release, create an issue and i'll probably get around to it faster.\n\n## installation\n\n```shell script\n$ pip install google-api-python-client-stubs\n```\n\nthe stubs should be automatically picked up by your editor or typechecker.\n\n## caveats\n\n### performance\nthe stubs contain a separate overload of `googleapiclient.discovery.build` for each service and version (see `discovery.pyi`). \nthis can lead to slow type inference for this function. mypy will generally be pretty fast after the first run,\nbut you might experience slow autocomplete in your editor. if you're experiencing this problem you can bypass type inference with explicit annotations, \ne.g. `sheets_service: sheetsresource = build(\"sheets\", \"v4\")` instead of `sheets_service = build(\"sheets\", \"v4\")`.\nsee the next section for some caveats to this approach.\n\n### explicit annotations\nthe `google-api-python-client-stubs` is quite dynamic. \nall resources are just instances of a single class with dynamically attached methods\nand the requests and responses are just dictionaries. the way this is annotated is with\nclasses and [typeddicts](https://docs.python.org/3/library/typing.html#typing.typeddict)\nthat don't exist in the actual library, only in the stub files. this means you *cannot* use any of these types at runtime, it *will* cause your code to crash.\nif you rely solely on type inference, this is not an issue, but as soon as you want to explicitly\nannotate a variable, argument or return type in your code with one of these types, you must follow these rules:\n1. either put `from __future__ import annotations` at the top of your file or surround the annotations with quotes. \nthis ensures that python doesn't attempt to evaluate the types at runtime. \nnote that the import is only supported in python 3.7 and above.\n2. only import the types inside an `if typing.type_checking` block. this ensures that the imports are only evaluated during\ntype checking. note that any type not available at runtime is located under the `googleapiclient._apis` package. \nfor example, `sheetsresource` should be imported from `googleapiclient._apis.sheets.v4`. note that nested resources have a nested class structure, e.g. the return type of `sheets_service.spreadsheets().values()` is `sheetsresource.spreadsheetsresource.valuesresource`.\nif autocompleting import paths doesn't work you can find the correct path by using mypy's [reveal_type](https://mypy.readthedocs.io/en/stable/common_issues.html#reveal-type)\non the thing you want to explicitly annotate. for `typeddict`s this will also give you useful info about the structure of the dictionary.\n\n### recursive types\nthe stubs previously didn't include recursive type definitions due to a lack of type checker support, but this is now included. note that if you're using mypy, v0.990 or higher is required for this to work.\n\n### stubs for non-api-specific parts\nthere are detailed stubs for the api services, but other parts of the library have only been annotated with [stubgen](https://mypy.readthedocs.io/en/stable/stubgen.html),\nso they're mostly typed as `any`. i believe these parts are mostly used internally by the library itself,\nso for most users this should be fine. contributions to improve these stubs are welcome, though.\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "google-api-python-client-stubs",
  "package_url": "https://pypi.org/project/google-api-python-client-stubs/",
  "project_url": "https://pypi.org/project/google-api-python-client-stubs/",
  "project_urls": {
    "Homepage": "https://github.com/henribru/google-api-python-client-stubs",
    "Repository": "https://github.com/henribru/google-api-python-client-stubs"
  },
  "release_url": "https://pypi.org/project/google-api-python-client-stubs/1.23.0/",
  "requires_dist": [
    "google-api-python-client (>=2.107.0)",
    "typing-extensions (>=3.10.0)",
    "types-httplib2 (>=0.22.0.2)"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "type stubs for google-api-python-client",
  "version": "1.23.0",
  "releases": [],
  "developers": [
    "henrik.bruasdal@gmail.com"
  ],
  "kwds": "googleapiclient _apis googleapis apis api",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_google_api_python_client_stubs",
  "homepage": "https://github.com/henribru/google-api-python-client-stubs",
  "release_count": 36,
  "dependency_ids": [
    "pypi_google_api_python_client",
    "pypi_types_httplib2",
    "pypi_typing_extensions"
  ]
}
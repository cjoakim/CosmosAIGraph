{
  "classifiers": [],
  "description": "python language server\n======================\n\n.. image:: https://github.com/palantir/python-language-server/workflows/linux%20tests/badge.svg\n    :target: https://github.com/palantir/python-language-server/actions?query=workflow%3a%22linux+tests%22\n\n.. image:: https://github.com/palantir/python-language-server/workflows/mac%20tests/badge.svg\n    :target: https://github.com/palantir/python-language-server/actions?query=workflow%3a%22mac+tests%22\n\n.. image:: https://github.com/palantir/python-language-server/workflows/windows%20tests/badge.svg\n    :target: https://github.com/palantir/python-language-server/actions?query=workflow%3a%22windows+tests%22\n\n.. image:: https://img.shields.io/github/license/palantir/python-language-server.svg\n     :target: https://github.com/palantir/python-language-server/blob/master/license\n\na python 2.7 and 3.5+ implementation of the `language server protocol`_.\n\ninstallation\n------------\n\nthe base language server requires jedi_ to provide completions, definitions, hover, references, signature help, and\nsymbols:\n\n``pip install python-language-server``\n\nif the respective dependencies are found, the following optional providers will be enabled:\n\n* rope_ for completions and renaming\n* pyflakes_ linter to detect various errors\n* mccabe_ linter for complexity checking\n* pycodestyle_ linter for style checking\n* pydocstyle_ linter for docstring style checking (disabled by default)\n* autopep8_ for code formatting\n* yapf_ for code formatting (preferred over autopep8)\n\noptional providers can be installed using the `extras` syntax. to install yapf_ formatting for example:\n\n``pip install 'python-language-server[yapf]'``\n\nall optional providers can be installed using:\n\n``pip install 'python-language-server[all]'``\n\nif you get an error similar to ``'install_requires' must be a string or list of strings`` then please upgrade setuptools before trying again. \n\n``pip install -u setuptools``\n\n3rd party plugins\n~~~~~~~~~~~~~~~~~\ninstalling these plugins will add extra functionality to the language server:\n\n* pyls-mypy_ mypy type checking for python 3\n* pyls-isort_ isort import sort code formatting\n* pyls-black_ for code formatting using black_\n\nplease see the above repositories for examples on how to write plugins for the python language server. please file an\nissue if you require assistance writing a plugin.\n\nconfiguration\n-------------\n\nconfiguration is loaded from zero or more configuration sources. currently implemented are:\n\n* pycodestyle: discovered in ~/.config/pycodestyle, setup.cfg, tox.ini and pycodestyle.cfg.\n* flake8: discovered in ~/.config/flake8, setup.cfg, tox.ini and flake8.cfg\n\nthe default configuration source is pycodestyle. change the `pyls.configurationsources` setting to `['flake8']` in\norder to respect flake8 configuration instead.\n\noverall configuration is computed first from user configuration (in home directory), overridden by configuration\npassed in by the language client, and then overriden by configuration discovered in the workspace.\n\nto enable pydocstyle for linting docstrings add the following setting in your lsp configuration:\n```\n\"pyls.plugins.pydocstyle.enabled\": true\n```\n\nsee `vscode-client/package.json`_ for the full set of supported configuration options.\n\n.. _vscode-client/package.json: vscode-client/package.json\n\nlanguage server features\n------------------------\n\nauto completion:\n\n.. image:: https://raw.githubusercontent.com/palantir/python-language-server/develop/resources/auto-complete.gif\n\ncode linting with pycodestyle and pyflakes:\n\n.. image:: https://raw.githubusercontent.com/palantir/python-language-server/develop/resources/linting.gif\n\nsignature help:\n\n.. image:: https://raw.githubusercontent.com/palantir/python-language-server/develop/resources/signature-help.gif\n\ngo to definition:\n\n.. image:: https://raw.githubusercontent.com/palantir/python-language-server/develop/resources/goto-definition.gif\n\nhover:\n\n.. image:: https://raw.githubusercontent.com/palantir/python-language-server/develop/resources/hover.gif\n\nfind references:\n\n.. image:: https://raw.githubusercontent.com/palantir/python-language-server/develop/resources/references.gif\n\ndocument symbols:\n\n.. image:: https://raw.githubusercontent.com/palantir/python-language-server/develop/resources/document-symbols.gif\n\ndocument formatting:\n\n.. image:: https://raw.githubusercontent.com/palantir/python-language-server/develop/resources/document-format.gif\n\ndevelopment\n-----------\n\nto run the test suite:\n\n``pip install .[test] && pytest``\n\ndevelop against vs code\n=======================\n\nthe python language server can be developed against a local instance of visual studio code.\n\ninstall `vscode <https://code.visualstudio.com/download>`_\n\n.. code-block:: bash\n\n    # setup a virtual env\n    virtualenv env\n    . env/bin/activate\n\n    # install pyls\n    pip install .\n\n    # install the vscode-client extension\n    cd vscode-client\n    yarn install\n\n    # run vscode which is configured to use pyls\n    # see the bottom of vscode-client/src/extension.ts for info\n    yarn run vscode -- $pwd/../\n\nthen to debug, click view -> output and in the dropdown will be pyls.\nto refresh vscode, press `cmd + r`\n\nlicense\n-------\n\nthis project is made available under the mit license.\n\n.. _language server protocol: https://github.com/microsoft/language-server-protocol\n.. _jedi: https://github.com/davidhalter/jedi\n.. _rope: https://github.com/python-rope/rope\n.. _pyflakes: https://github.com/pycqa/pyflakes\n.. _mccabe: https://github.com/pycqa/mccabe\n.. _pycodestyle: https://github.com/pycqa/pycodestyle\n.. _pydocstyle: https://github.com/pycqa/pydocstyle\n.. _yapf: https://github.com/google/yapf\n.. _autopep8: https://github.com/hhatto/autopep8\n.. _pyls-mypy: https://github.com/tomv564/pyls-mypy\n.. _pyls-isort: https://github.com/paradoxxxzero/pyls-isort\n.. _pyls-black: https://github.com/rupert/pyls-black\n.. _black: https://github.com/ambv/black\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "python-language-server",
  "package_url": "https://pypi.org/project/python-language-server/",
  "project_url": "https://pypi.org/project/python-language-server/",
  "project_urls": {
    "Homepage": "https://github.com/palantir/python-language-server"
  },
  "release_url": "https://pypi.org/project/python-language-server/0.36.2/",
  "requires_dist": [
    "jedi (<0.18.0,>=0.17.2)",
    "python-jsonrpc-server (>=0.4.0)",
    "pluggy",
    "ujson (<=2.0.3) ; platform_system != \"Windows\" and python_version < \"3.0\"",
    "future (>=0.14.0) ; python_version < \"3\"",
    "configparser ; python_version < \"3.0\"",
    "backports.functools-lru-cache ; python_version < \"3.2\"",
    "ujson (>=3.0.0) ; python_version > \"3\"",
    "autopep8 ; extra == 'all'",
    "flake8 (>=3.8.0) ; extra == 'all'",
    "mccabe (<0.7.0,>=0.6.0) ; extra == 'all'",
    "pycodestyle (<2.7.0,>=2.6.0) ; extra == 'all'",
    "pydocstyle (>=2.0.0) ; extra == 'all'",
    "pyflakes (<2.3.0,>=2.2.0) ; extra == 'all'",
    "pylint (>=2.5.0) ; extra == 'all'",
    "rope (>=0.10.5) ; extra == 'all'",
    "yapf ; extra == 'all'",
    "autopep8 ; extra == 'autopep8'",
    "flake8 (>=3.8.0) ; extra == 'flake8'",
    "mccabe (<0.7.0,>=0.6.0) ; extra == 'mccabe'",
    "pycodestyle (<2.7.0,>=2.6.0) ; extra == 'pycodestyle'",
    "pydocstyle (>=2.0.0) ; extra == 'pydocstyle'",
    "pyflakes (<2.3.0,>=2.2.0) ; extra == 'pyflakes'",
    "pylint (>=2.5.0) ; extra == 'pylint'",
    "rope (>0.10.5) ; extra == 'rope'",
    "versioneer ; extra == 'test'",
    "pylint (>=2.5.0) ; extra == 'test'",
    "pytest ; extra == 'test'",
    "mock ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "coverage ; extra == 'test'",
    "numpy ; extra == 'test'",
    "pandas ; extra == 'test'",
    "matplotlib ; extra == 'test'",
    "flaky ; extra == 'test'",
    "pyqt5 ; (python_version >= \"3\") and extra == 'test'",
    "yapf ; extra == 'yapf'"
  ],
  "requires_python": "",
  "summary": "python language server for the language server protocol",
  "version": "0.36.2",
  "releases": [],
  "developers": [
    "palantir_technologies"
  ],
  "kwds": "badge workflows workflow pip python",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_python_language_server",
  "homepage": "https://github.com/palantir/python-language-server",
  "release_count": 78,
  "dependency_ids": [
    "pypi_autopep8",
    "pypi_backports.functools_lru_cache",
    "pypi_configparser",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_flaky",
    "pypi_future",
    "pypi_jedi",
    "pypi_matplotlib",
    "pypi_mccabe",
    "pypi_mock",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pluggy",
    "pypi_pycodestyle",
    "pypi_pydocstyle",
    "pypi_pyflakes",
    "pypi_pylint",
    "pypi_pyqt5",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_python_jsonrpc_server",
    "pypi_rope",
    "pypi_ujson",
    "pypi_versioneer",
    "pypi_yapf"
  ]
}
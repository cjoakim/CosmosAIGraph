{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: utilities"
  ],
  "description": "========\r\noverview\r\n========\r\n\r\n\r\n\r\npython logging formatter that prefix multiline log message and trackebacks. makes the logs more readable, both for\r\ntracebacks and for multiline log messages.\r\n\r\n* free software: bsd license\r\n\r\nbenchmarking\r\n============\r\n\r\nbenchmark against pythons built in formatter **logging.formatter**. the benchmark is done using **pytest-benchmark**,\r\nand the below results is from a run on a faily new macbook pro, using python 2.7.\r\n\r\none should note that we are using stringio as stream output, so we should expect the results to be even closer with\r\nmore production alike setup, for example writing to disc.\r\n\r\n.. image:: https://raw.github.com/peterlauri/python-multiline-log-formatter/master/docs/benchmark.png\r\n    :alt: python-redis-lock flow diagram\r\n\r\ninstallation\r\n============\r\n\r\n.. code-block:: bash\r\n\r\n    pip install multiline-log-formatter\r\n\r\nusage\r\n=====\r\n\r\nadd this to dictconfig:\r\n\r\n.. code-block:: python\r\n\r\n    'formatters': {\r\n        'default': {\r\n            '()': 'multiline_formatter.formatter.multilinemessagesformatter',\r\n            'format': '[%(levelname)s] %(message)s'\r\n        },\r\n    },\r\n\r\nand log messages will look like this:\r\n\r\n.. code-block:: bash\r\n\r\n    [error] logging_message ... (49564:mainthread)\r\n    ... (49564:mainthread) : traceback (most recent call last):\r\n    ... (49564:mainthread) :   file \"/users/plauri/work/opensource/python-multiline-log-formatter/tests/test_multiline_formatter.py\", line 112, in test_exception\r\n    ... (49564:mainthread) :     raise exception('exception_message')\r\n    ... (49564:mainthread) : exception: exception_message\r\n\r\nand if you don't like the default, you can customize it by extending **multilinemessagesformatter** and set\r\n**multiline_marker**. you can also change **multiline_fmt**, but assure you include **%(message)s** in the formating\r\nstring.\r\n\r\ndocumentation\r\n=============\r\n\r\nhttps://python-multiline-log-formatter.readthedocs.org/\r\n\r\ndevelopment\r\n===========\r\n\r\nto run the all tests run::\r\n\r\n    tox\r\n\r\n\r\nother\r\n=====\r\n\r\nthis project sceleton is generated by ionelmc's pylibrary_ cookiecutter.\r\n\r\n.. _pylibrary: https://github.com/ionelmc/cookiecutter-pylibrary\r\n\r\n\r\n\r\nchangelog\r\n=========\r\n\r\n0.1.8 (2016-01-15)\r\n-----------------------------------------\r\n\r\n* first release on pypi.",
  "docs_url": null,
  "keywords": "logs,logging",
  "license": "bsd",
  "name": "multiline-log-formatter",
  "package_url": "https://pypi.org/project/multiline-log-formatter/",
  "project_url": "https://pypi.org/project/multiline-log-formatter/",
  "project_urls": {
    "Homepage": "https://github.com/peterlauri/python-multiline-log-formatter"
  },
  "release_url": "https://pypi.org/project/multiline-log-formatter/0.1.8/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python logging formatter that prefix multiline log message and trackebacks.",
  "version": "0.1.8",
  "releases": [],
  "developers": [
    "peter_lauri",
    "peterlauri@gmail.com"
  ],
  "kwds": "logging_message multiline_formatter test_multiline_formatter logging logs",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_multiline_log_formatter",
  "homepage": "https://github.com/peterlauri/python-multiline-log-formatter",
  "release_count": 1,
  "dependency_ids": []
}
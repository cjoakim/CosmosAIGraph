{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "topic :: system :: software distribution"
  ],
  "description": "docker registry client\n======================\n\n|build status| |pypi|\n\na python rest client for the docker registry\n\nit's useful for automating image tagging and untagging\n\n.. |build status| image:: https://travis-ci.org/yodle/docker-registry-client.svg?branch=master\n   :target: https://travis-ci.org/yodle/docker-registry-client\n   :alt: build status\n\n.. |pypi| image:: https://img.shields.io/pypi/v/docker-registry-client/0.5.1.svg\n    :target: https://pypi.python.org/pypi/docker-registry-client\n    :alt: latest version released on pypi\n\nusage\n-----\n\nthe api provides several classes: ``dockerregistryclient``, ``repository``, and ``image``.\n\n``dockerregistryclient`` has the following methods:\n\n- ``namespaces()`` -> a list of all namespaces in the registry\n- ``repository(repository_name, namespace)`` -> the corresponding repository object\n- ``repositories()`` -> all repositories in the registry\n\n``repository`` has the following methods:\n\n- ``tags()`` -> a list of all tags in the repository\n- ``data(tag)`` -> json data associated with ``tag``\n- ``image(tag)`` -> the image associated with ``tag``\n- ``untag(tag)`` -> remove ``tag`` from the repository\n- ``tag(tag, image_id)`` -> apply ``tag`` to ``image_id``\n \n``image`` has the following methods:\n\n- ``get_layer()`` -> binary layer data for image\n- ``get_json()`` -> json metadata for image\n- ``get_data(field)`` -> single field from json data\n- ``ancestry()`` -> ids for image ancestors\n\nalternatives\n------------\n\n* `python-dxf <https://pypi.python.org/pypi/python-dxf>`_ (only supports v2)\n\n\n0.5.2 (2017-06-16)\n------------------\n\n- fix for \"attributeerror: 'list' object has no attribute 'keys'\"\n  (`issue #41 <https://github.com/yodle/docker-registry-client/pull/41>`_)\n- added usage docs inside readme.rst\n  (`issue #39 <https://github.com/yodle/docker-registry-client/pull/39>`_)\n  (`issue #45 <https://github.com/yodle/docker-registry-client/pull/45>`_)\n- remove error logging when exception raised.\n  (`issue #37 <https://github.com/yodle/docker-registry-client/pull/37>`_)\n\n\n0.5.1 (2017-01-12)\n------------------\n\n- fixes to release process with zest\n\n0.5.0 (2017-01-12)\n------------------\n\n- first version of docker-registry-client with changelog\n- support get and push manifest on protocol v2, schema v1.\n  (`issue #33 <https://github.com/yodle/docker-registry-client/pull/33>`_)",
  "docs_url": null,
  "keywords": "docker docker-registry rest",
  "license": "apache license 2.0",
  "name": "docker-registry-client",
  "package_url": "https://pypi.org/project/docker-registry-client/",
  "project_url": "https://pypi.org/project/docker-registry-client/",
  "project_urls": {
    "Homepage": "https://github.com/yodle/docker-registry-client"
  },
  "release_url": "https://pypi.org/project/docker-registry-client/0.5.2/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "client for docker registry v1 and v2",
  "version": "0.5.2",
  "releases": [],
  "developers": [
    "john.downs@yodle.com",
    "john_downs"
  ],
  "kwds": "dockerregistryclient docker pypi registry image_id",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_docker_registry_client",
  "homepage": "https://github.com/yodle/docker-registry-client",
  "release_count": 9,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django :: 3.2",
    "framework :: django :: 4.2",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 3.8",
    "topic :: internet"
  ],
  "description": "edx rest api client\n###################\n\n| |status-badge| |license-badge| |ci| |codecov| |pypi-badge|\n\nthe edx rest api client simplifies communicating with other open edx services by providing oauth2 and jwt utilities.\n\n\ngetting started with development\n********************************\n\nin a python 3.8 virtual environment:\n\n.. code-block:: shell\n\n    $ make requirements\n    $ make validate\n\n\nclients & rest api clients code\n*******************************\n\nopen edx services, including lms, should use the ``oauthapiclient`` class to make oauth2 client requests and rest api calls.\n\nusage\n=====\n\nby default the ``oauthapiclient`` object can be used like any `requests.session`_ object and you can follow the docs that the requests library provides.\n\nthe ``oauthapiclient`` sessions makes some extra requests to get access tokens from the auth endpoints.  these requests have a default timeout that can be overridden by passing in a ``timeout`` parameter when instantiating the ``oauthapiclient`` object.\n\n.. code-block:: python\n\n    # create client with default timeouts for token retrieval\n    client = oauthapiclient('https://lms.root', 'client_id', 'client_secret')\n\n    # create client, overriding default timeouts for token retrieval\n    client = oauthapiclient('https://lms.root', 'client_id', 'client_secret', timeout=(6.1, 2))\n    client = oauthapiclient('https://lms.root', 'client_id', 'client_secret',\n         timeout=(request_connect_timeout, 3)\n    )\n\n    # for a request to some.url, a separate timeout should always be set on your requests\n    client.get('https://some.url', timeout=(3.1, 0.5))\n\nthe value of the ``timeout`` setting is the same as for any request made with the ``requests`` library.  see the `requests timeouts documentation`_ for more details.\n\n.. _requests.session: https://requests.readthedocs.io/en/master/user/advanced/#session-objects\n.. _requests timeouts documentation: https://requests.readthedocs.io/en/master/user/advanced/#timeouts\n\nadditional requirements\n***********************\n\nthe oauthapiclient uses the tieredcache internally for caching.  read more about the `requirements of tieredcache`_, which include django caching and some custom middleware.\n\n.. _requirements of tieredcache: https://github.com/openedx/edx-django-utils/blob/master/edx_django_utils/cache/readme.rst#tieredcache\n\ncontributing\n************\n\ncontributions are very welcome.\nplease read `how to contribute <https://openedx.org/r/how-to-contribute>`_ for details.\n\nthis project is currently accepting all types of contributions, bug fixes,\nsecurity fixes, maintenance work, or new features.  however, please make sure\nto have a discussion about your new feature idea with the maintainers prior to\nbeginning development to maximize the chances of your change being accepted.\nyou can start a conversation by creating a new issue on this repo summarizing\nyour idea.\n\nmore help\n*********\n\nif you're having trouble, we have discussion forums at\n`discuss.openedx.org <https://discuss.openedx.org>`_ where you can connect with others in the\ncommunity.\n\nour real-time conversations are on slack. you can request a `slack\ninvitation`_, then join our `community slack workspace`_.\n\nfor anything non-trivial, the best path is to `open an issue`__ in this\nrepository with as many details about the issue you are facing as you\ncan provide.\n\n__ https://github.com/openedx/edx-rest-api-client/issues\n\nfor more information about these options, see the `getting help`_ page.\n\n.. _slack invitation: https://openedx.org/slack\n.. _community slack workspace: https://openedx.slack.com/\n.. _getting help: https://openedx.org/getting-help\n\nthe open edx code of conduct\n****************************\n\nall community members are expected to follow the `open edx code of conduct`_.\n\n.. _open edx code of conduct: https://openedx.org/code-of-conduct/\n\nreporting security issues\n*************************\n\nplease do not report security issues in public. please email security@openedx.org.\n\n\n.. |ci| image:: https://github.com/openedx/edx-rest-api-client/workflows/python%20ci/badge.svg?branch=master\n    :target: https://github.com/openedx/edx-rest-api-client/actions?query=workflow%3a%22python+ci%22\n    :alt: test suite status\n\n.. |codecov| image:: https://codecov.io/github/openedx/edx-rest-api-client/coverage.svg?branch=master\n    :target: https://codecov.io/github/openedx/edx-rest-api-client?branch=master\n    :alt: code coverage\n\n.. |status-badge| image:: https://img.shields.io/badge/status-maintained-brightgreen\n    :alt: maintained\n\n.. |license-badge| image:: https://img.shields.io/github/license/openedx/edx-rest-api-client.svg\n    :target: https://github.com/openedx/edx-rest-api-client/blob/master/license\n    :alt: license\n\n.. |pypi-badge| image:: https://img.shields.io/pypi/v/edx-rest-api-client.svg\n    :target: https://pypi.python.org/pypi/edx-rest-api-client/\n    :alt: pypi\n",
  "docs_url": null,
  "keywords": "edx rest api client",
  "license": "apache",
  "name": "edx-rest-api-client",
  "package_url": "https://pypi.org/project/edx-rest-api-client/",
  "project_url": "https://pypi.org/project/edx-rest-api-client/",
  "project_urls": {
    "Homepage": "https://github.com/openedx/edx-rest-api-client"
  },
  "release_url": "https://pypi.org/project/edx-rest-api-client/5.6.1/",
  "requires_dist": [
    "PyJWT",
    "edx-django-utils",
    "requests",
    "slumber"
  ],
  "requires_python": "",
  "summary": "client utilities to access various open edx platform rest apis.",
  "version": "5.6.1",
  "releases": [],
  "developers": [
    "edx",
    "oscm@edx.org"
  ],
  "kwds": "edx_django_utils edx oauth2 api apis",
  "license_kwds": "apache",
  "libtype": "pypi",
  "id": "pypi_edx_rest_api_client",
  "homepage": "https://github.com/openedx/edx-rest-api-client",
  "release_count": 33,
  "dependency_ids": [
    "pypi_edx_django_utils",
    "pypi_pyjwt",
    "pypi_requests",
    "pypi_slumber"
  ]
}
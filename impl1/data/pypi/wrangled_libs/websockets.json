{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": ".. image:: logo/horizontal.svg\n   :width: 480px\n   :alt: websockets\n\n|licence| |version| |pyversions| |tests| |docs| |openssf|\n\n.. |licence| image:: https://img.shields.io/pypi/l/websockets.svg\n    :target: https://pypi.python.org/pypi/websockets\n\n.. |version| image:: https://img.shields.io/pypi/v/websockets.svg\n    :target: https://pypi.python.org/pypi/websockets\n\n.. |pyversions| image:: https://img.shields.io/pypi/pyversions/websockets.svg\n    :target: https://pypi.python.org/pypi/websockets\n\n.. |tests| image:: https://img.shields.io/github/checks-status/python-websockets/websockets/main?label=tests\n   :target: https://github.com/python-websockets/websockets/actions/workflows/tests.yml\n\n.. |docs| image:: https://img.shields.io/readthedocs/websockets.svg\n   :target: https://websockets.readthedocs.io/\n\n.. |openssf| image:: https://bestpractices.coreinfrastructure.org/projects/6475/badge\n   :target: https://bestpractices.coreinfrastructure.org/projects/6475\n\nwhat is ``websockets``?\n-----------------------\n\nwebsockets is a library for building websocket_ servers and clients in python\nwith a focus on correctness, simplicity, robustness, and performance.\n\n.. _websocket: https://developer.mozilla.org/en-us/docs/web/api/websockets_api\n\nbuilt on top of ``asyncio``, python's standard asynchronous i/o framework, the\ndefault implementation provides an elegant coroutine-based api.\n\nan implementation on top of ``threading`` and a sans-i/o implementation are also\navailable.\n\n`documentation is available on read the docs. <https://websockets.readthedocs.io/>`_\n\n.. copy-pasted because github doesn't support the include directive\n\nhere's an echo server with the ``asyncio`` api:\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    import asyncio\n    from websockets.server import serve\n\n    async def echo(websocket):\n        async for message in websocket:\n            await websocket.send(message)\n\n    async def main():\n        async with serve(echo, \"localhost\", 8765):\n            await asyncio.future()  # run forever\n\n    asyncio.run(main())\n\nhere's how a client sends and receives messages with the ``threading`` api:\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    from websockets.sync.client import connect\n\n    def hello():\n        with connect(\"ws://localhost:8765\") as websocket:\n            websocket.send(\"hello world!\")\n            message = websocket.recv()\n            print(f\"received: {message}\")\n\n    hello()\n\n\ndoes that look good?\n\n`get started with the tutorial! <https://websockets.readthedocs.io/en/stable/intro/index.html>`_\n\nwhy should i use ``websockets``?\n--------------------------------\n\nthe development of ``websockets`` is shaped by four principles:\n\n1. **correctness**: ``websockets`` is heavily tested for compliance with\n   :rfc:`6455`. continuous integration fails under 100% branch coverage.\n\n2. **simplicity**: all you need to understand is ``msg = await ws.recv()`` and\n   ``await ws.send(msg)``. ``websockets`` takes care of managing connections\n   so you can focus on your application.\n\n3. **robustness**: ``websockets`` is built for production. for example, it was\n   the only library to `handle backpressure correctly`_ before the issue\n   became widely known in the python community.\n\n4. **performance**: memory usage is optimized and configurable. a c extension\n   accelerates expensive operations. it's pre-compiled for linux, macos and\n   windows and packaged in the wheel format for each system and python version.\n\ndocumentation is a first class concern in the project. head over to `read the\ndocs`_ and see for yourself.\n\n.. _read the docs: https://websockets.readthedocs.io/\n.. _handle backpressure correctly: https://vorpus.org/blog/some-thoughts-on-asynchronous-api-design-in-a-post-asyncawait-world/#websocket-servers\n\nwhy shouldn't i use ``websockets``?\n-----------------------------------\n\n* if you prefer callbacks over coroutines: ``websockets`` was created to\n  provide the best coroutine-based api to manage websocket connections in\n  python. pick another library for a callback-based api.\n\n* if you're looking for a mixed http / websocket library: ``websockets`` aims\n  at being an excellent implementation of :rfc:`6455`: the websocket protocol\n  and :rfc:`7692`: compression extensions for websocket. its support for http\n  is minimal \u2014 just enough for an http health check.\n\n  if you want to do both in the same server, look at http frameworks that\n  build on top of ``websockets`` to support websocket connections, like\n  sanic_.\n\n.. _sanic: https://sanicframework.org/en/\n\nwhat else?\n----------\n\nbug reports, patches and suggestions are welcome!\n\nto report a security vulnerability, please use the `tidelift security\ncontact`_. tidelift will coordinate the fix and disclosure.\n\n.. _tidelift security contact: https://tidelift.com/security\n\nfor anything else, please open an issue_ or send a `pull request`_.\n\n.. _issue: https://github.com/python-websockets/websockets/issues/new\n.. _pull request: https://github.com/python-websockets/websockets/compare/\n\nparticipants must uphold the `contributor covenant code of conduct`_.\n\n.. _contributor covenant code of conduct: https://github.com/python-websockets/websockets/blob/main/code_of_conduct.md\n\n``websockets`` is released under the `bsd license`_.\n\n.. _bsd license: https://github.com/python-websockets/websockets/blob/main/license\n",
  "docs_url": null,
  "keywords": "websocket",
  "license": "bsd-3-clause",
  "name": "websockets",
  "package_url": "https://pypi.org/project/websockets/",
  "project_url": "https://pypi.org/project/websockets/",
  "project_urls": {
    "Changelog": "https://websockets.readthedocs.io/en/stable/project/changelog.html",
    "Documentation": "https://websockets.readthedocs.io/",
    "Funding": "https://tidelift.com/subscription/pkg/pypi-websockets?utm_source=pypi-websockets&utm_medium=referral&utm_campaign=readme",
    "Homepage": "https://github.com/python-websockets/websockets",
    "Tracker": "https://github.com/python-websockets/websockets/issues"
  },
  "release_url": "https://pypi.org/project/websockets/12.0/",
  "requires_dist": [],
  "requires_python": ">=3.8",
  "summary": "an implementation of the websocket protocol (rfc 6455 & 7692)",
  "version": "12.0",
  "releases": [],
  "developers": [
    "aymeric.augustin@m4x.org"
  ],
  "kwds": "_websocket websocket_ websocket websockets websockets_api",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_websockets",
  "homepage": "",
  "release_count": 39,
  "dependency_ids": []
}
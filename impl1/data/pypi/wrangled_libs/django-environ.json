{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: django",
    "framework :: django :: 1.11",
    "framework :: django :: 2.0",
    "framework :: django :: 2.1",
    "framework :: django :: 2.2",
    "framework :: django :: 3.0",
    "framework :: django :: 3.1",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "framework :: django :: 4.1",
    "framework :: django :: 4.2",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules",
    "topic :: utilities"
  ],
  "description": "==============\ndjango-environ\n==============\n\n\n``django-environ`` is the python package that allows you to use\n`twelve-factor methodology <https://www.12factor.net/>`_ to configure your\ndjango application with environment variables.\n\n.. -teaser-end-\n\nfor that, it gives you an easy way to configure django application using\nenvironment variables obtained from an environment file and provided by the os:\n\n.. -code-begin-\n\n.. code-block:: python\n\n   import environ\n   import os\n\n   env = environ.env(\n       # set casting, default value\n       debug=(bool, false)\n   )\n\n   # set the project base directory\n   base_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n   # take environment variables from .env file\n   environ.env.read_env(os.path.join(base_dir, '.env'))\n\n   # false if not in os.environ because of casting above\n   debug = env('debug')\n\n   # raises django's improperlyconfigured\n   # exception if secret_key not in os.environ\n   secret_key = env('secret_key')\n\n   # parse database connection url strings\n   # like psql://user:pass@127.0.0.1:8458/db\n   databases = {\n       # read os.environ['database_url'] and raises\n       # improperlyconfigured exception if not found\n       #\n       # the db() method is an alias for db_url().\n       'default': env.db(),\n\n       # read os.environ['sqlite_url']\n       'extra': env.db_url(\n           'sqlite_url',\n           default='sqlite:////tmp/my-tmp-sqlite.db'\n       )\n   }\n\n   caches = {\n       # read os.environ['cache_url'] and raises\n       # improperlyconfigured exception if not found.\n       #\n       # the cache() method is an alias for cache_url().\n       'default': env.cache(),\n\n       # read os.environ['redis_url']\n       'redis': env.cache_url('redis_url')\n   }\n\n.. -overview-\n\nthe idea of this package is to unify a lot of packages that make the same stuff:\ntake a string from ``os.environ``, parse and cast it to some of useful python\ntyped variables. to do that and to use the `12factor <https://www.12factor.net/>`_\napproach, some connection strings are expressed as url, so this package can parse\nit and return a ``urllib.parse.parseresult``. these strings from ``os.environ``\nare loaded from a ``.env`` file and filled in ``os.environ`` with ``setdefault``\nmethod, to avoid to overwrite the real environ.\na similar approach is used in `two scoops of django <https://www.feldroy.com/books/two-scoops-of-django-3-x>`_\nbook and explained in `12factor-django <https://wellfire.co/learn/easier-12-factor-django>`_\narticle.\n\n\nusing ``django-environ`` you can stop to make a lot of unversioned\n``settings_*.py`` to configure your app.\nsee `cookiecutter-django <https://github.com/cookiecutter/cookiecutter-django>`_\nfor a concrete example on using with a django project.\n\n**feature support**\n\n- fast and easy multi environment for deploy\n- fill ``os.environ`` with .env file variables\n- variables casting\n- url variables exploded to django specific package settings\n- optional support for docker-style file based config variables (use\n  ``environ.fileawareenv`` instead of ``environ.env``)\n\n.. -project-information-\n\nproject information\n===================\n\n``django-environ`` is released under the `mit / x11 license <https://choosealicense.com/licenses/mit/>`__,\nits documentation lives at `read the docs <https://django-environ.readthedocs.io/en/latest/>`_,\nthe code on `github <https://github.com/joke2k/django-environ>`_,\nand the latest release on `pypi <https://pypi.org/project/django-environ/>`_.\n\nit\u2019s rigorously tested on python 3.6+, and officially supports\ndjango 1.11, 2.2, 3.0, 3.1, 3.2, 4.0, 4.1 and 4.2.\n\nif you'd like to contribute to ``django-environ`` you're most welcome!\n\n.. -support-\n\nsupport\n=======\n\nshould you have any question, any remark, or if you find a bug, or if there is\nsomething you can't do with the ``django-environ``, please\n`open an issue <https://github.com/joke2k/django-environ>`_.\n\n\ncontributing\n============\n\nif you would like to contribute to ``django-environ``, please take a look at the\n`current issues <https://github.com/joke2k/django-environ/issues>`_.  if there is\na bug or feature that you want but it isn't listed, make an issue and work on it.\n\nbug reports\n-----------\n\n*before raising an issue, please ensure that you are using the latest version\nof django-environ.*\n\nplease provide the following information with your issue to enable us to\nrespond as quickly as possible.\n\n* the relevant versions of the packages you are using.\n* the steps to recreate your issue.\n* the full stacktrace if there is an exception.\n* an executable code example where possible\n\nguidelines for bug reports:\n\n* **use the github issue search** \u2014 check if the issue has already been\n  reported.\n* **check if the issue has been fixed** \u2014 try to reproduce it using the latest\n  ``main`` or ``develop`` branch in the repository.\n* isolate the problem \u2014 create a reduced test case and a live example.\n\na good bug report shouldn't leave others needing to chase you up for more\ninformation. please try to be as detailed as possible in your report. what is\nyour environment? what steps will reproduce the issue? what os experience the\nproblem? what would you expect to be the outcome? all these details will help\npeople to fix any potential bugs.\n\nfeature requests\n----------------\n\nfeature requests are welcome. but take a moment to find out whether your idea\nfits with the scope and aims of the project. it's up to *you* to make a strong\ncase to convince the project's developers of the merits of this feature. please\nprovide as much detail and context as possible.\n\npull requests\n-------------\n\ngood pull requests - patches, improvements, new features - are a fantastic\nhelp. they should remain focused in scope and avoid containing unrelated\ncommits.\n\nfollow this process if you'd like your work considered for inclusion in the\nproject:\n\n1. check for open issues or open a fresh issue to start a discussion around a\n   feature idea or a bug.\n2. fork `the repository <https://github.com/joke2k/django-environ>`_\n   on github to start making your changes to the ``develop`` branch\n   (or branch off of it).\n3. write a test which shows that the bug was fixed or that the feature works as\n   expected.\n4. send a pull request and bug the maintainer until it gets merged and published.\n\nif you are intending to implement a fairly large feature we'd appreciate if you\nopen an issue with github detailing your use case and intended solution to\ndiscuss how it might impact other work that is in flight.\n\nwe also appreciate it if you take the time to update and write tests for any\nchanges you submit.\n\n**by submitting a patch, you agree to allow the project owner to license your\nwork under the same license as that used by the project.**\n\nresources\n---------\n\n* `how to contribute to open source <https://opensource.guide/how-to-contribute/>`_\n* `using pull requests <https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests>`_\n* `writing good commit messages <https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html>`_\n\n\nrelease information\n===================\n\nv0.11.2 - 1-september-2023\n-------------------------------\nfixed\n+++++\n- revert \"add variable expansion.\" feature\n  due to `#490 <https://github.com/joke2k/django-environ/issues/490>`_.\n\n`full changelog <https://django-environ.readthedocs.org/en/latest/changelog.html>`_.\n\nsecurity policy\n===============\n\n\nreporting a vulnerability\n-------------------------\n\nif you discover a security vulnerability within ``django-environ``, please\nsend an e-mail to serghei iakovlev via egrep@protonmail.ch. all security\nvulnerabilities will be promptly addressed.\n\n\ncredits\n=======\n\n``django-environ`` was initially created by `daniele faraglia <https://github.com/joke2k>`_\nand currently maintained by `serghei iakovlev <https://github.com/sergeyklay/>`_.\n\na full list of contributors can be found in `github <https://github.com/joke2k/django-environ/graphs/contributors>`__.\n\nacknowledgments\n===============\n\nthe existence of ``django-environ`` would have been impossible without these\nprojects:\n\n- `rconradharris/envparse <https://github.com/rconradharris/envparse>`_\n- `jazzband/dj-database-url <https://github.com/jazzband/dj-database-url>`_\n- `migonzalvar/dj-email-url <https://github.com/migonzalvar/dj-email-url>`_\n- `ghickman/django-cache-url <https://github.com/ghickman/django-cache-url>`_\n- `dstufft/dj-search-url <https://github.com/dstufft/dj-search-url>`_\n- `julianwachholz/dj-config-url <https://github.com/julianwachholz/dj-config-url>`_\n- `nickstenning/honcho <https://github.com/nickstenning/honcho>`_\n- `rconradharris/envparse <https://github.com/rconradharris/envparse>`_\n",
  "docs_url": null,
  "keywords": "environment,django,variables,12factor",
  "license": "mit",
  "name": "django-environ",
  "package_url": "https://pypi.org/project/django-environ/",
  "project_url": "https://pypi.org/project/django-environ/",
  "project_urls": {
    "Bug Tracker": "https://github.com/joke2k/django-environ/issues",
    "Changelog": "https://django-environ.readthedocs.org/en/latest/changelog.html",
    "Documentation": "https://django-environ.readthedocs.org",
    "Funding": "https://opencollective.com/django-environ",
    "Homepage": "https://django-environ.readthedocs.org",
    "Say Thanks!": "https://saythanks.io/to/joke2k",
    "Source Code": "https://github.com/joke2k/django-environ"
  },
  "release_url": "https://pypi.org/project/django-environ/0.11.2/",
  "requires_dist": [
    "coverage[toml] >=5.0a4 ; extra == 'develop'",
    "pytest >=4.6.11 ; extra == 'develop'",
    "furo ==2021.8.*,>=2021.8.17b43 ; extra == 'develop'",
    "sphinx >=3.5.0 ; extra == 'develop'",
    "sphinx-notfound-page ; extra == 'develop'",
    "furo ==2021.8.*,>=2021.8.17b43 ; extra == 'docs'",
    "sphinx >=3.5.0 ; extra == 'docs'",
    "sphinx-notfound-page ; extra == 'docs'",
    "coverage[toml] >=5.0a4 ; extra == 'testing'",
    "pytest >=4.6.11 ; extra == 'testing'"
  ],
  "requires_python": ">=3.6,<4",
  "summary": "a package that allows you to utilize 12factor inspired environment variables to configure your django application.",
  "version": "0.11.2",
  "releases": [],
  "developers": [
    "daniele.faraglia@gmail.com",
    "daniele_faraglia",
    "egrep@protonmail.ch",
    "serghei_iakovlev"
  ],
  "kwds": "django environment python environ py",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_django_environ",
  "homepage": "https://django-environ.readthedocs.org",
  "release_count": 21,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_furo",
    "pypi_pytest",
    "pypi_sphinx",
    "pypi_sphinx_notfound_page"
  ]
}
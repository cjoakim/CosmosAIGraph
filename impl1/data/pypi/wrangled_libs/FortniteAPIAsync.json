{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# fortniteapiasync\r\npython wrapper for fortnite-api.\r\n\r\n[![downloads](https://pepy.tech/badge/fortniteapiasync)](https://pepy.tech/project/fortniteapiasync)\r\n[![requires: python 3.x](https://img.shields.io/pypi/pyversions/fortniteapiasync.svg)](https://pypi.org/project/fortniteapiasync/)\r\n[![fortniteapiasync version: 1.0.1](https://img.shields.io/pypi/v/fortniteapiasync.svg)](https://pypi.org/project/fortniteapiasync/)\r\n\r\n## installing:\r\nwindows: ``py -3 -m pip install fortniteapiasync``<br>\r\nlinux/macos: ``python3 -m pip install fortniteapiasync``\r\n\r\n## examples:\r\n```python\r\nimport fortniteapiasync\r\nimport asyncio\r\n\r\n\r\nasync def fnapi_search() -> none:\r\n    result = await fortniteapiasync.get_cosmetic(\r\n        lang=\"en\",\r\n        searchlang=\"en\",\r\n        matchmethod=\"full\",\r\n        name=\"ghoul trooper\"\r\n    )\r\n\r\n    print(result.id)\r\n\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(fnapi_search())\r\nloop.close()\r\n```\r\n\r\nthis would output:<br>\r\n```cid_029_athena_commando_f_halloween```\r\n\r\nfortnitepy example:\r\n```python\r\nimport fortnitepy\r\nimport fortniteapiasync\r\n\r\nfrom fortnitepy.ext import commands\r\n\r\n\r\nbot = commands.bot(\r\n    command_prefix='!',\r\n    auth=fortnitepy.authorizationcodeauth(\r\n        code=input('enter authorization code: ')\r\n    )\r\n)\r\n\r\n\r\n@bot.command()\r\nasync def skin(ctx: fortnitepy.ext.commands.context, *, content: str) -> none:\r\n    try:\r\n        cosmetic = await fortniteapiasync.get_cosmetic(\r\n            matchmethod=\"contains\",\r\n            name=content,\r\n            backendtype=\"athenacharacter\"\r\n        )\r\n\r\n        await ctx.send(f'skin set to {cosmetic.id}.')\r\n        print(f\"set skin to: {cosmetic.id}.\")\r\n        await client.party.me.set_outfit(asset=cosmetic.id)\r\n\r\n    except fortniteapiasync.exceptions.notfound:\r\n        await ctx.send(f\"failed to find a skin with the name: {content}.\")\r\n        print(f\"failed to find a skin with the name: {content}.\")\r\n\r\n\r\nbot.run()\r\n```\r\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "fortniteapiasync",
  "package_url": "https://pypi.org/project/FortniteAPIAsync/",
  "project_url": "https://pypi.org/project/FortniteAPIAsync/",
  "project_urls": {
    "Documentation": "https://github.com/xMistt/FortniteAPIAsync/wiki",
    "Homepage": "https://github.com/xMistt/FortniteAPIAsync",
    "Issues": "https://github.com/xMistt/FortniteAPIAsync/issues"
  },
  "release_url": "https://pypi.org/project/FortniteAPIAsync/0.1.7/",
  "requires_dist": [
    "aiohttp"
  ],
  "requires_python": "",
  "summary": "asynchronous python wrapper for fortnite-api.com.",
  "version": "0.1.7",
  "releases": [],
  "developers": [
    "xmistt"
  ],
  "kwds": "fortniteapiasync fortnitepy python3 pyversions fortnite",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_fortniteapiasync",
  "homepage": "https://github.com/xmistt/fortniteapiasync",
  "release_count": 8,
  "dependency_ids": [
    "pypi_aiohttp"
  ]
}
{
  "classifiers": [
    "development status :: 6 - mature",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: internet :: www/http :: wsgi",
    "topic :: internet :: www/http :: wsgi :: application",
    "topic :: internet :: www/http :: wsgi :: middleware"
  ],
  "description": "webob\n=====\n\n.. image:: https://travis-ci.org/pylons/webob.png?branch=master\n        :target: https://travis-ci.org/pylons/webob\n\n.. image:: https://readthedocs.org/projects/webob/badge/?version=stable\n        :target: https://docs.pylonsproject.org/projects/webob/en/stable/\n        :alt: documentation status\n\nwebob provides objects for http requests and responses.  specifically\nit does this by wrapping the `wsgi <http://wsgi.readthedocs.io/en/latest/>`_ request\nenvironment and response status/headers/app_iter(body).\n\nthe request and response objects provide many conveniences for parsing\nhttp request and forming http responses.  both objects are read/write:\nas a result, webob is also a nice way to create http requests and\nparse http responses.\n\nsupport and documentation\n-------------------------\n\nsee the `webob documentation website <https://docs.pylonsproject.org/projects/webob/en/stable/>`_ to view\ndocumentation, report bugs, and obtain support.\n\nlicense\n-------\n\nwebob is offered under the `mit-license\n<https://docs.pylonsproject.org/projects/webob/en/stable/license.html>`_.\n\nauthors\n-------\n\nwebob was authored by ian bicking and is currently maintained by the `pylons\nproject <https://pylonsproject.org/>`_ and a team of contributors.\n\n1.8.7 (2021-02-17)\n------------------\n\nbugfix\n~~~~~~\n\n- decoding deflate-encoded responses now supports data which is packed in\n  a zlib container as it is supposed to be. the old, non-standard behaviour\n  is still supported.\n\n  see https://github.com/pylons/webob/pull/426\n\n\n1.8.6 (2020-01-21)\n------------------\n\nexperimental features\n~~~~~~~~~~~~~~~~~~~~~\n\n- the samesite value now includes a new option named \"none\", this is a new\n  change that was introduced in\n  https://tools.ietf.org/html/draft-west-cookie-incrementalism-00\n\n  please be aware that older clients are incompatible with this change:\n  https://www.chromium.org/updates/same-site/incompatible-clients, webob does\n  not enable samesite on cookies by default, so there is no backwards\n  incompatible change here.\n\n  see https://github.com/pylons/webob/issues/406\n\n- validation of samesite values can be disabled by toggling a module flag. this\n  is in anticipation of future changes in evolving cookie standards.\n  the discussion in https://github.com/pylons/webob/pull/407 (which initially\n  expanded the allowed options) notes the sudden change to browser cookie\n  implementation details may happen again.\n\n  in may 2019, google announced a new model for privacy controls in their\n  browsers, which affected the list of valid options for the samesite attribute\n  of cookies. in late 2019, the company began to roll out these changes to their\n  browsers to force developer adoption of the new specification.\n  see https://www.chromium.org/updates/same-site and\n  https://blog.chromium.org/2019/10/developers-get-ready-for-new.html for more\n  details on this change.\n\n  see https://github.com/pylons/webob/pull/409\n\n1.8.5 (2019-01-03)\n------------------\n\nwarnings\n~~~~~~~~\n\n- fixed one last remaining invalid escape sequence in a docstring.\n\n1.8.4 (2018-11-11)\n------------------\n\nbugfix\n~~~~~~\n\n- response.content_type now accepts unicode strings on python 2 and encodes\n  them to latin-1. see https://github.com/pylons/webob/pull/389 and\n  https://github.com/pylons/webob/issues/388\n\n- accept header classes now support a .copy() function that may be used to\n  create a copy. this allows ``create_accept_header`` and other like functions\n  to accept an pre-existing accept header. see\n  https://github.com/pylons/webob/pull/386 and\n  https://github.com/pylons/webob/issues/385\n\nwarnings\n~~~~~~~~\n\n- some backslashes introduced with the new accept handling code were causing\n  deprecationwarnings upon compiling the source to pyc files, all of the\n  backslashes have been reigned in as appropriate, and users should no longer\n  see deprecationwarnings for invalid escape sequence. see\n  https://github.com/pylons/webob/issues/384\n\n1.8.3 (2018-10-14)\n------------------\n\nbugfix\n~~~~~~\n\n- ``acceptparse.acceptvalidheader``, ``acceptparse.acceptinvalidheader``, and\n  ``acceptparse.acceptnoheader`` will now always ignore offers that do not\n  match the required media type grammar when calling ``.acceptable_offers()``.\n  previous versions raised a ``valueerror`` for invalid offers in\n  ``acceptvalidheader`` and returned them as acceptable in the others.\n  see https://github.com/pylons/webob/pull/372\n\nfeature\n~~~~~~~\n\n- add request.remote_host, exposing remote_host environment variable.\n\n- added ``acceptparse.accept.parse_offer`` to codify what types of offers\n  are compatible with ``acceptparse.acceptvalidheader.acceptable_offers``,\n  ``acceptparse.acceptmissingheader.acceptable_offers``, and\n  ``acceptparse.acceptinvalidheader.acceptable_offers``. this api also\n  normalizes the offer with lowercased type/subtype and parameter names.\n  see https://github.com/pylons/webob/pull/376 and\n  https://github.com/pylons/webob/pull/379\n\n1.8.2 (2018-06-05)\n------------------\n\nbugfix\n~~~~~~\n\n- samesite may now be passed as str or bytes to `response.set_cookie` and\n  `cookies.make_cookie`. this was an oversight as all other arguments would be\n  correctly coerced before being serialized. see\n  https://github.com/pylons/webob/issues/361 and\n  https://github.com/pylons/webob/pull/362\n\n\n1.8.1 (2018-04-10)\n------------------\n\nbugfix\n~~~~~~\n\n- acceptparse.mimeaccept which is deprecated in webob 1.8.0 made a backwards\n  incompatible change that led to it raising on an invalid accept header. this\n  behaviour has now been reversed, as well as some other fixes to allow\n  mimeaccept to behave more like the old version. see\n  https://github.com/pylons/webob/pull/356\n\n1.8.0 (2018-04-04)\n------------------\n\nfeature\n~~~~~~~\n\n- ``request.post`` now supports any requests with the appropriate\n  content-type. allowing any http method to access form encoded content,\n  including delete, put, and others. see\n  https://github.com/pylons/webob/pull/352\n\ncompatibility\n~~~~~~~~~~~~~\n\n- webob is no longer officially supported on python 3.3 which was eol'ed on\n  2017-09-29.\n\nbackwards incompatibilities\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- many changes have been made to the way webob does accept handling, not just\n  for the accept header itself, but also for accept-charset, accept-encoding\n  and accept-language. this was a `google summer of code\n  <https://developers.google.com/open-source/gsoc/>`_ project completed by\n  whiteroses (https://github.com/whiteroses). many thanks to google for running\n  gsoc, the python software foundation for organising and a huge thanks to ira\n  for completing the work. see https://github.com/pylons/webob/pull/338 and\n  https://github.com/pylons/webob/pull/335. documentation is available at\n  https://docs.pylonsproject.org/projects/webob/en/master/api/webob.html\n\n- when calling a ``@wsgify`` decorated function, the default arguments passed\n  to ``@wsgify`` are now used when called with the request, and not as a\n  `start_response`\n\n  .. code::\n\n     def hello(req, name):\n         return \"hello, %s!\" % name\n     app = wsgify(hello, args=(\"fred\",))\n\n     req = request.blank('/')\n     resp = req.get_response(app)  # => \"hello, fred\"\n     resp2 = app(req) # => \"hello, fred\"\n\n  previously the ``resp2`` line would have failed with a ``typeerror``. with\n  this change there is no way to override the default arguments with no\n  arguments. see https://github.com/pylons/webob/pull/203\n\n- when setting ``app_iter`` on a ``response`` object the ``content_md5`` header\n  is no longer cleared. this behaviour is odd and disallows setting the\n  ``content_md5`` and then returning an iterator for chunked content encoded\n  responses. see https://github.com/pylons/webob/issues/86\n\nexperimental features\n~~~~~~~~~~~~~~~~~~~~~\n\nthese features are experimental and may change at any point in the future.\n\n- the cookie apis now have the ability to set the samesite attribute on a\n  cookie in both ``webob.cookies.make_cookie`` and\n  ``webob.cookies.cookieprofile``. see https://github.com/pylons/webob/pull/255\n\nbugfix\n~~~~~~\n\n- exceptions now use string.template.safe_substitute rather than\n  string.template.substitute. the latter would raise for missing mappings, the\n  former will simply not substitute the missing variable. this is safer in case\n  the wsgi environ does not contain the keys necessary for the body template.\n  see https://github.com/pylons/webob/issues/345.\n\n- request.host_url, request.host_port, request.domain correctly parse ipv6 host\n  headers as provided by a browser. see\n  https://github.com/pylons/webob/pull/332\n\n- request.authorization would raise valueerror for unusual or malformed header\n  values. see https://github.com/pylons/webob/issues/231\n\n- allow unnamed fields in form data to be properly transcoded when calling\n  request.decode with an alternate encoding. see\n  https://github.com/pylons/webob/pull/309\n\n- ``response.__init__`` would discard ``app_iter`` when a ``response`` had no\n  body, this would cause issues when ``app_iter`` was an object that was tied\n  to the life-cycle of a web application and had to be properly closed.\n  ``app_iter`` is more advanced api for ``response`` and thus even if it\n  contains a body and is thus against the http rfc's, we should let the users\n  shoot themselves by returning a body. see\n  https://github.com/pylons/webob/issues/305\n\n\n",
  "docs_url": null,
  "keywords": "wsgi request web http",
  "license": "mit",
  "name": "webob",
  "package_url": "https://pypi.org/project/WebOb/",
  "project_url": "https://pypi.org/project/WebOb/",
  "project_urls": {
    "Homepage": "http://webob.org/"
  },
  "release_url": "https://pypi.org/project/WebOb/1.8.7/",
  "requires_dist": [
    "Sphinx (>=1.7.5) ; extra == 'docs'",
    "pylons-sphinx-themes ; extra == 'docs'",
    "pytest (>=3.1.0) ; extra == 'testing'",
    "coverage ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'",
    "pytest-xdist ; extra == 'testing'"
  ],
  "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*",
  "summary": "wsgi request and response object",
  "version": "1.8.7",
  "releases": [],
  "developers": [
    "ian_bicking",
    "ianb@colorstudy.com",
    "pylons_project"
  ],
  "kwds": "wsgi get_response start_response wsgify requests",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_webob",
  "homepage": "http://webob.org/",
  "release_count": 71,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_pylons_sphinx_themes",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_xdist",
    "pypi_sphinx"
  ]
}
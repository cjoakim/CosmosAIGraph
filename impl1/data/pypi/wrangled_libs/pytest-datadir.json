{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing"
  ],
  "description": "# pytest-datadir\n\npytest plugin for manipulating test data directories and files.\n\n[![build status](https://github.com/gabrielcnr/pytest-datadir/workflows/build/badge.svg?branch=master)](https://github.com/gabrielcnr/pytest-datadir/workflows/build/badge.svg?branch=master)\n[![pypi](https://img.shields.io/pypi/v/pytest-datadir.svg)](https://pypi.python.org/pypi/pytest-datadir)\n[![condaforge](https://img.shields.io/conda/vn/conda-forge/pytest-datadir.svg)](https://anaconda.org/conda-forge/pytest-datadir)\n![python version](https://img.shields.io/badge/python-3.6+-blue.svg)\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n\n# usage\npytest-datadir will look up for a directory with the name of your module or the global 'data' folder.\nlet's say you have a structure like this:\n\n```\n.\n\u251c\u2500\u2500 data/\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 hello.txt\n\u251c\u2500\u2500 test_hello/\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 spam.txt\n\u2514\u2500\u2500 test_hello.py\n```\nyou can access the contents of these files using injected variables `datadir` (for *test_* folder) or `shared_datadir`\n(for *data* folder):\n\n```python\ndef test_read_global(shared_datadir):\n    contents = (shared_datadir / \"hello.txt\").read_text()\n    assert contents == \"hello world!\\n\"\n\n\ndef test_read_module(datadir):\n    contents = (datadir / \"spam.txt\").read_text()\n    assert contents == \"eggs\\n\"\n```\n\npytest-datadir will copy the original file to a temporary folder, so changing the file contents won't change the original data file.\n\nboth `datadir` and `shared_datadir` fixtures are `pathlib.path` objects.\n\n# license\n\nmit.\n",
  "docs_url": null,
  "keywords": "pytest test unittest directory file",
  "license": "mit",
  "name": "pytest-datadir",
  "package_url": "https://pypi.org/project/pytest-datadir/",
  "project_url": "https://pypi.org/project/pytest-datadir/",
  "project_urls": {
    "Homepage": "http://github.com/gabrielcnr/pytest-datadir"
  },
  "release_url": "https://pypi.org/project/pytest-datadir/1.5.0/",
  "requires_dist": [
    "pytest >=5.0"
  ],
  "requires_python": ">=3.8",
  "summary": "pytest plugin for test data directories and files",
  "version": "1.5.0",
  "releases": [],
  "developers": [
    "gabriel_reis",
    "gabrielcnr@gmail.com"
  ],
  "kwds": "pytest datadir pathlib test_read_module directory",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytest_datadir",
  "homepage": "http://github.com/gabrielcnr/pytest-datadir",
  "release_count": 11,
  "dependency_ids": [
    "pypi_pytest"
  ]
}
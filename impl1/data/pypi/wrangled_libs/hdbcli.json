{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: end users/desktop",
    "intended audience :: financial and insurance industry",
    "intended audience :: healthcare industry",
    "intended audience :: information technology",
    "intended audience :: legal industry",
    "intended audience :: manufacturing",
    "intended audience :: science/research",
    "license :: other/proprietary license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows :: windows 10",
    "operating system :: microsoft :: windows :: windows 7",
    "operating system :: microsoft :: windows :: windows 8",
    "operating system :: microsoft :: windows :: windows 8.1",
    "operating system :: microsoft :: windows :: windows server 2008",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: database",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "######################\nsap hana python client\n######################\n\nintroduction\n------------\n\nthe python database api specification v2.0 (pep 249) defines a set of methods that provides a consistent database interface independent of the actual database being used. the python extension module for sap hana implements pep 249. once you install the module, you can access and change the information in sap hana databases from python.\n\nin pep 249, autocommit is turned off by default. in the sap hana python driver, autocommit is turned on by default.\n\nfor information, see: `pep 249 -- python database api specification v2.0 <https://www.python.org/dev/peps/pep-0249/>`_\n\ngetting started\n---------------\n\ninstall via ``pip install hdbcli`` or install manually via the `hana client install <https://help.sap.com/viewer/f1b440ded6144a54ada97ff95dac7adf/latest/en-us/39eca89d94ca464ca52385ad50fc7dea.html>`_\n\nquick start\n-----------\n\n * for hana tenant databases, use the port number 3**nn**13 (where **nn** is the sap instance number - e.g. 30013).\n * for hana system databases in a multitenant system, the port number is 3**nn**13.\n * for hana single-tenant databases, the port number is 3**nn**15.\n\n::\n\n    from hdbcli import dbapi\n    conn = dbapi.connect(\n        address=\"<hostname>\",\n        port=3<nn>mm,\n        user=\"<username>\",\n        password=\"<password>\"\n    )\n    cursor = conn.cursor()\n\nexecute a single statement that does not return a result set:\n\n::\n\n    cursor.execute(\"create table t1 (id integer primary key, c2 varchar(255))\")\n    cursor.close()\n\n\nuse question mark parameter binding to insert values into the t1 table created above. the parameter values are supplied as a python sequence and can be literal values or variable names. this example uses literal values:\n\n::\n\n    sql = 'insert into t1 (id, c2) values (?, ?)'\n    cursor = conn.cursor()\n    cursor.execute(sql, (1, 'hello'))\n    # returns true\n    cursor.execute(sql, (2, 'hello again'))\n    # returns true\n    cursor.close()\n\nuse named parameter binding to insert values into the t1 table. the values are supplied as a python dictionary, and this example uses variable names.\n\n::\n\n    sql = 'insert into t1 (id, c2) values (:id, :c2)'\n    cursor = conn.cursor()\n    id = 3\n    c2 = \"goodbye\"\n    cursor.execute(sql, {\"id\": id, \"c2\": c2})\n    # returns true\n    cursor.close()\n\nloop over the rows of the result set.\n\n::\n\n    sql = 'select * from t1'\n    cursor = conn.cursor()\n    cursor.execute(sql)\n    for row in cursor:\n        print(row)\n\nhelp\n----\n\nsee the `sap hana client interface programming reference <https://help.sap.com/viewer/f1b440ded6144a54ada97ff95dac7adf/latest/en-us/f3b8fabf34324302b123297cdbe710f0.html>`_ for details about developing with the sap hana python client.\n\ncommunity\n---------\n\nsap community provides a forum where you can ask and answer questions, and comment and vote on the questions of others and their answers.\n\nsee `sap hana community questions <https://answers.sap.com/tags/73554900100700000996>`_ for details.\n\nlimitations of 32-bit windows driver\n------------------------------------\n\nthe maximum length of a lob column for the 32-bit python driver on windows is 2147483647.\nthe maximum rowcount that can be returned for the 32-bit python driver on windows is 2147483647.\n\nlicense\n-------\n\nthe hana python client is provided via the `sap developer license agreement <https://tools.hana.ondemand.com/developer-license-3_1.txt>`_.\n\nby using this software, you agree that the following text is incorporated into the terms of the developer agreement:\n\n    if you are an existing sap customer for on premise software, your use of this current software is also covered by the\n    terms of your software license agreement with sap, including the use rights, the current version of which can be found at:\n    `https://www.sap.com/about/agreements/product-use-and-support-terms.html?tag=agreements:product-use-support-terms/on-premise-software/software-use-rights <https://www.sap.com/about/agreements/product-use-and-support-terms.html?tag=agreements:product-use-support-terms/on-premise-software/software-use-rights>`_\n\n\n",
  "docs_url": null,
  "keywords": "sap hana client in-memory database sql business application intelligent enterprise cloud analytics experience",
  "license": "sap developer license agreement",
  "name": "hdbcli",
  "package_url": "https://pypi.org/project/hdbcli/",
  "project_url": "https://pypi.org/project/hdbcli/",
  "project_urls": {
    "Documentation": "https://help.sap.com/viewer/f1b440ded6144a54ada97ff95dac7adf/latest/en-US/f3b8fabf34324302b123297cdbe710f0.html",
    "Homepage": "https://www.sap.com/"
  },
  "release_url": "https://pypi.org/project/hdbcli/2.19.20/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "sap hana python client",
  "version": "2.19.20",
  "releases": [],
  "developers": [
    "sap_se"
  ],
  "kwds": "sap hana autocommit databases dbapi",
  "license_kwds": "sap developer license agreement",
  "libtype": "pypi",
  "id": "pypi_hdbcli",
  "homepage": "https://www.sap.com/",
  "release_count": 60,
  "dependency_ids": []
}
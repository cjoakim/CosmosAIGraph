{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: documentation",
    "topic :: software development",
    "topic :: software development :: documentation",
    "topic :: utilities",
    "typing :: typed"
  ],
  "description": "# mkdocstrings\n\n[![ci](https://github.com/mkdocstrings/mkdocstrings/workflows/ci/badge.svg)](https://github.com/mkdocstrings/mkdocstrings/actions?query=workflow%3aci)\n[![documentation](https://img.shields.io/badge/docs-mkdocs%20material-blue.svg?style=flat)](https://mkdocstrings.github.io/)\n[![pypi version](https://img.shields.io/pypi/v/mkdocstrings.svg)](https://pypi.org/project/mkdocstrings/)\n[![conda version](https://img.shields.io/conda/vn/conda-forge/mkdocstrings)](https://anaconda.org/conda-forge/mkdocstrings)\n[![gitpod](https://img.shields.io/badge/gitpod-workspace-blue.svg?style=flat)](https://gitpod.io/#https://github.com/mkdocstrings/mkdocstrings)\n[![gitter](https://badges.gitter.im/join%20chat.svg)](https://app.gitter.im/#/room/#mkdocstrings:gitter.im)\n\nautomatic documentation from sources, for [mkdocs](https://mkdocs.org/).\ncome have a chat or ask questions on our [gitter channel](https://gitter.im/mkdocstrings/community).\n\n---\n\n**[features](#features)** - **[requirements](#requirements)** - **[installation](#installation)** - **[quick usage](#quick-usage)**\n\n![mkdocstrings_gif1](https://user-images.githubusercontent.com/3999221/77157604-fb807480-6aa1-11ea-99e0-d092371d4de0.gif)\n\n## features\n\n- [**language-agnostic:**](https://mkdocstrings.github.io/handlers/overview/)\n  just like *mkdocs*, *mkdocstrings* is written in python but is language-agnostic.\n  it means you can use it with any programming language, as long as there is a\n  [**handler**](https://mkdocstrings.github.io/reference/handlers/base/) for it.\n  we currently have [handlers](https://mkdocstrings.github.io/handlers/overview/)\n  for the [crystal](https://mkdocstrings.github.io/crystal/) and [python](https://mkdocstrings.github.io/python/) languages,\n  as well as for [shell scripts/libraries](https://mkdocstrings.github.io/shell/).\n  maybe you'd like to add another one to the list? :wink:\n\n- [**multiple themes support:**](https://mkdocstrings.github.io/theming/)\n  each handler can offer multiple themes. currently, we offer the\n  :star: [material theme](https://squidfunk.github.io/mkdocs-material/) :star:\n  as well as basic support for the readthedocs and mkdocs themes for the python handler.\n\n- [**cross-references across pages:**](https://mkdocstrings.github.io/usage/#cross-references)\n  *mkdocstrings* makes it possible to reference headings in other markdown files with the classic markdown linking\n  syntax: `[identifier][]` or `[title][identifier]` -- and you don't need to remember which exact page this object was\n  on. this works for any heading that's produced by a *mkdocstrings* language handler, and you can opt to include\n  *any* markdown heading into the global referencing scheme.\n\n    **note**: in versions prior to 0.15 *all* markdown headers were included, but now you need to\n    [opt in](https://mkdocstrings.github.io/usage/#cross-references-to-any-markdown-heading).\n\n- [**cross-references across sites:**](https://mkdocstrings.github.io/usage/#cross-references-to-other-projects-inventories)\n  similarly to [sphinx's intersphinx extension](https://www.sphinx-doc.org/en/master/usage/extensions/intersphinx.html),\n  *mkdocstrings* can reference api items from other libraries, given they provide an inventory and you load\n  that inventory in your mkdocs configuration.\n\n- [**inline injection in markdown:**](https://mkdocstrings.github.io/usage/)\n  instead of generating markdown files, *mkdocstrings* allows you to inject\n  documentation anywhere in your markdown contents. the syntax is simple: `::: identifier` followed by a 4-spaces\n  indented yaml block. the identifier and yaml configuration will be passed to the appropriate handler\n  to collect and render documentation.\n\n- [**global and local configuration:**](https://mkdocstrings.github.io/usage/#global-options)\n  each handler can be configured globally in `mkdocs.yml`, and locally for each\n  \"autodoc\" instruction.\n\n- ~~**watch source code directories:**~~\n  this feature was removed as it is now [built in mkdocs](https://www.mkdocs.org/user-guide/configuration/#watch). \n\n- **reasonable defaults:**\n  you should be able to just drop the plugin in your configuration and enjoy your auto-generated docs.\n\n## used by\n\n*mkdocstrings* is used by well-known companies, projects and scientific teams:\n[ansible](https://molecule.readthedocs.io/configuration/),\n[apache](https://streampipes.apache.org/docs/docs/python/latest/reference/client/client/),\n[google](https://docs.kidger.site/jaxtyping/api/runtime-type-checking/),\n[jitsi](https://jitsi.github.io/jiwer/reference/alignment/),\n[microsoft](https://microsoft.github.io/presidio/api/analyzer_python/),\n[prefect](https://docs.prefect.io/2.10.12/api-ref/prefect/agent/),\n[pydantic](https://docs.pydantic.dev/dev-v2/api/main/),\n[and more...](https://github.com/mkdocstrings/mkdocstrings/network/dependents)\n\n## installation\n\nwith `pip`:\n\n```bash\npip install mkdocstrings\n```\n\nyou can install support for specific languages using extras, for example:\n\n```bash\npip install 'mkdocstrings[crystal,python]'\n```\n\nsee the [available language handlers](https://mkdocstrings.github.io/handlers/overview/).\n\nwith `conda`:\n\n```bash\nconda install -c conda-forge mkdocstrings\n```\n\n## quick usage\n\nin `mkdocs.yml`:\n\n```yaml\nsite_name: \"my library\"\n\ntheme:\n  name: \"material\"\n\nplugins:\n- search\n- mkdocstrings\n```\n\nin one of your markdown files:\n\n```markdown\n# reference\n\n::: my_library.my_module.my_class\n```\n\nsee the [usage](https://mkdocstrings.github.io/usage) section of the docs for more examples!\n",
  "docs_url": null,
  "keywords": "mkdocs mkdocs-plugin docstrings autodoc documentation",
  "license": "isc",
  "name": "mkdocstrings",
  "package_url": "https://pypi.org/project/mkdocstrings/",
  "project_url": "https://pypi.org/project/mkdocstrings/",
  "project_urls": {
    "Changelog": "https://mkdocstrings.github.io/changelog",
    "Discussions": "https://github.com/mkdocstrings/mkdocstrings/discussions",
    "Documentation": "https://mkdocstrings.github.io",
    "Funding": "https://github.com/sponsors/pawamoy",
    "Gitter": "https://gitter.im/mkdocstrings/community",
    "Homepage": "https://mkdocstrings.github.io",
    "Issues": "https://github.com/mkdocstrings/mkdocstrings/issues",
    "Repository": "https://github.com/mkdocstrings/mkdocstrings"
  },
  "release_url": "https://pypi.org/project/mkdocstrings/0.24.0/",
  "requires_dist": [
    "click>=7.0",
    "Jinja2>=2.11.1",
    "Markdown>=3.3",
    "MarkupSafe>=1.1",
    "mkdocs>=1.4",
    "mkdocs-autorefs>=0.3.1",
    "platformdirs>=2.2.0",
    "pymdown-extensions>=6.3",
    "importlib-metadata>=4.6; python_version < \"3.10\"",
    "typing-extensions>=4.1; python_version < \"3.10\"",
    "mkdocstrings-crystal>=0.3.4; extra == \"crystal\"",
    "mkdocstrings-python-legacy>=0.2.1; extra == \"python-legacy\"",
    "mkdocstrings-python>=0.5.2; extra == \"python\""
  ],
  "requires_python": ">=3.8",
  "summary": "automatic documentation from sources, for mkdocs.",
  "version": "0.24.0",
  "releases": [],
  "developers": [
    "pawamoy@pm.me"
  ],
  "kwds": "mkdocs mkdocstrings mkdocstrings_gif1 autodoc badges",
  "license_kwds": "isc",
  "libtype": "pypi",
  "id": "pypi_mkdocstrings",
  "homepage": "",
  "release_count": 52,
  "dependency_ids": [
    "pypi_click",
    "pypi_importlib_metadata",
    "pypi_jinja2",
    "pypi_markdown",
    "pypi_markupsafe",
    "pypi_mkdocs",
    "pypi_mkdocs_autorefs",
    "pypi_mkdocstrings_crystal",
    "pypi_mkdocstrings_python",
    "pypi_mkdocstrings_python_legacy",
    "pypi_platformdirs",
    "pypi_pymdown_extensions",
    "pypi_typing_extensions"
  ]
}
{
  "classifiers": [
    "license :: other/proprietary license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "[![pypi version](https://img.shields.io/pypi/v/pygls.svg)](https://pypi.org/project/pygls/) ![!pyversions](https://img.shields.io/pypi/pyversions/pygls.svg) ![license](https://img.shields.io/pypi/l/pygls.svg) [![documentation status](https://img.shields.io/badge/docs-latest-green.svg)](https://pygls.readthedocs.io/en/latest/)\n\n# pygls: the generic language server framework\n\n_pygls_ (pronounced like \"pie glass\") is a pythonic generic implementation of the [language server protocol](https://microsoft.github.io/language-server-protocol/specification) for use as a foundation for writing your own [language servers](https://langserver.org/) in just a few lines of code.\n\n## quickstart\n```python\nfrom pygls.server import languageserver\nfrom lsprotocol.types import (\n    text_document_completion,\n    completionitem,\n    completionlist,\n    completionparams,\n)\n\nserver = languageserver(\"example-server\", \"v0.1\")\n\n@server.feature(text_document_completion)\ndef completions(params: completionparams):\n    items = []\n    document = server.workspace.get_document(params.text_document.uri)\n    current_line = document.lines[params.position.line].strip()\n    if current_line.endswith(\"hello.\"):\n        items = [\n            completionitem(label=\"world\"),\n            completionitem(label=\"friend\"),\n        ]\n    return completionlist(is_incomplete=false, items=items)\n\nserver.start_io()\n```\n\nwhich might look something like this when you trigger autocompletion in your editor:\n\n![completions](https://raw.githubusercontent.com/openlawlibrary/pygls/master/docs/assets/hello-world-completion.png)\n\n## docs and tutorial\n\nthe full documentation and a tutorial are available at <https://pygls.readthedocs.io/en/latest/>.\n\n## projects based on _pygls_\n\nwe keep a table of all known _pygls_ [implementations](https://github.com/openlawlibrary/pygls/blob/master/implementations.md). please submit a pull request with your own or any that you find are missing.\n\n## alternatives\n\nthe main alternative to _pygls_ is microsoft's [nodejs-based generic language server framework](https://github.com/microsoft/vscode-languageserver-node). being from microsoft it is focussed on extending vscode, although in theory it could be used to support any editor. so this is where pygls might be a better choice if you want to support more editors, as pygls is not focussed around vscode.\n\nthere are also other language servers with \"general\" in their descriptons, or at least intentions. they are however only general in the sense of having powerful _configuration_. they achieve generality in so much as configuration is able to, as opposed to what programming (in _pygls'_ case) can achieve.\n  * https://github.com/iamcco/diagnostic-languageserver\n  * https://github.com/mattn/efm-langserver\n  * https://github.com/jose-elias-alvarez/null-ls.nvim (neovim only)\n\n## tests\n\n* `poetry install --all-extras`\n* `poetry run test`\n* `poetry run test-pyodide`\n\n\n## contributing\n\nyour contributions to _pygls_ are most welcome \u2764\ufe0f please review the [contributing](https://github.com/openlawlibrary/pygls/blob/master/contributing.md) and [code of conduct](https://github.com/openlawlibrary/pygls/blob/master/code_of_conduct.md) documents for how to get started.\n\n## donating\n\n[open law library](http://www.openlawlib.org/) is a 501(c)(3) tax exempt organization. help us maintain our open source projects and open the law to all with [sponsorship](https://github.com/sponsors/openlawlibrary).\n\n### supporters\n\nwe would like to give special thanks to the following supporters:\n* [mpourmpoulis](https://github.com/mpourmpoulis)\n\n## license\n\napache-2.0\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache 2.0",
  "name": "pygls",
  "package_url": "https://pypi.org/project/pygls/",
  "project_url": "https://pypi.org/project/pygls/",
  "project_urls": {
    "Documentation": "https://pygls.readthedocs.io/en/latest",
    "Homepage": "https://github.com/openlawlibrary/pygls",
    "Repository": "https://github.com/openlawlibrary/pygls"
  },
  "release_url": "https://pypi.org/project/pygls/1.2.1/",
  "requires_dist": [
    "lsprotocol (==2023.0.0)",
    "websockets (>=11.0.3,<12.0.0) ; extra == \"ws\""
  ],
  "requires_python": ">=3.7.9,<4",
  "summary": "a pythonic generic language server (pronounced like 'pie glass')",
  "version": "1.2.1",
  "releases": [],
  "developers": [
    "info@openlawlib.org",
    "open_law_library",
    "tom@tombh.co.uk",
    "tom_bh"
  ],
  "kwds": "pygls _pygls _pygls_ pyversions svg",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_pygls",
  "homepage": "https://github.com/openlawlibrary/pygls",
  "release_count": 36,
  "dependency_ids": [
    "pypi_lsprotocol",
    "pypi_websockets"
  ]
}
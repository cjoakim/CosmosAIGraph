{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "topic :: software development :: documentation",
    "topic :: software development :: version control",
    "topic :: software development :: version control :: git",
    "topic :: utilities",
    "typing :: typed"
  ],
  "description": "attribution\n===========\n\nautomate releases and changelogs based on commit tags and shortlogs.\n\n.. image:: https://img.shields.io/pypi/l/aiosqlite.svg\n   :target: https://github.com/omnilib/aiosqlite/blob/main/license\n   :alt: mit licensed\n.. image:: https://img.shields.io/pypi/v/attribution.svg\n   :target: https://pypi.org/project/attribution\n   :alt: pypi release\n.. image:: https://img.shields.io/badge/change-log-blue\n   :target: https://github.com/omnilib/attribution/blob/main/changelog.md\n   :alt: changelog\n.. image:: https://readthedocs.org/projects/attribution/badge/?version=stable\n   :target: https://attribution.omnilib.dev/en/stable/\n   :alt: documentation status\n.. image:: https://img.shields.io/codecov/c/github/omnilib/attribution/main.svg\n   :target: https://codecov.io/gh/omnilib/attribution\n   :alt: code coverage\n.. image:: https://github.com/omnilib/attribution/workflows/build/badge.svg\n   :target: https://github.com/omnilib/attribution/actions\n   :alt: build status\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: code style black\n\nattribution provides a simple tool for automating a basic release workflow\nfor python projects. at its core, it generates markdown-formatted changelogs\nbased on the version tags in your repository, and can both fit into existing\nworkflows, or automate the entire release preparation process with a single\ncommand.\n\nwhen generating a changelog, attribution will find all tag names starting with\n\"v\" followed by a valid `pep 440 version identifier`_. it will then use the\nmessage from each tag, combined with the \"shortlog\", to generate an ordered\nchangelog that includes recognition for all contributers to your project.\nthe output can be saved to your preferred changelog file, or piped to other\ntools as part of your release workflow:\n\n.. _pep 440 version identifier: https://www.python.org/dev/peps/pep-0440/#version-scheme\n\n.. code-block:: shell-session\n\n    $ attribution generate\n    project name\n    ============\n\n    v0.2\n    ----\n\n    another release\n\n    ```\n    $ git shortlog -s v0.1...v0.2\n        1 ash\n        3 misty\n    ```\n\n    v0.1\n    ----\n\n    first release\n\n    ```\n    $ git shortlog -s ...v0.1\n        1 ash\n    ```\n\nif you prefer and end-to-end solution, attribution can also be used for creating\nrelease notes, updating a ``__version__.py`` file with a matching version,\nand tagging a signed version bump commit containing the final changelog:\n\n.. code-block:: shell-session\n\n    $ attribution tag -m \"final release\" 1.0\n    $ head changelog.md\n    project name\n    ============\n\n    v1.0\n    ----\n\n    final release\n\n    ```\n    $ git shortlog -s v0.2...v1.0\n        3 ash\n        2 brock\n    ```\n\nattribution is a fully bootstrapped project. the `changelog`_ is generated by\nattribution, and from version 1.2.0 onward, all releases are created with\nattribution as well.\n\n.. _changelog: https://attribution.omnilib.dev/en/latest/changelog.html\n\n\ninstall\n-------\n\nattribution requires python 3.7 or newer.\nyou can install it from pypi:\n\n.. code-block:: shell-session\n\n    $ pip install attribution\n\nattribution should guess reasonable defaults for most common python projects,\nbut for best results, you should initialize your project configuration:\n\n.. code-block:: shell-session\n\n    $ attribution init\n    project name [attribution]:\n    package namespace [attribution]:\n    use __version__.py file [y/n]:\n\nthis will automatically add the appropriate configuration to your project's\n``pyproject.toml``:\n\n.. code-block:: toml\n\n    [tool.attribution]\n    name = \"attribution\"\n    package = \"attribution\"\n    version_file = true\n\nmore details can be found in the `user guide`_.\n\n.. _user guide: https://attribution.omnilib.dev/en/stable/guide.html\n\n\nlicense\n-------\n\nattribution is copyright `amethyst reese <https://noswap.com>`_, and licensed under\nthe mit license. i am providing code in this repository to you under an open\nsource license. this is my personal repository; the license you receive to my\ncode is from me and not from my employer. see the `license`_ file for details.\n\n.. _license: https://github.com/omnilib/attribution/blob/main/license\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "attribution",
  "package_url": "https://pypi.org/project/attribution/",
  "project_url": "https://pypi.org/project/attribution/",
  "project_urls": {
    "Documentation": "https://attribution.omnilib.dev/en/latest/",
    "Github": "https://github.com/omnilib/attribution",
    "Homepage": "https://attribution.omnilib.dev"
  },
  "release_url": "https://pypi.org/project/attribution/1.6.2/",
  "requires_dist": [
    "attrs >= 19.2.0",
    "click >= 8.0",
    "jinja2 >= 2.7",
    "packaging >= 16.2",
    "tomlkit >= 0.7.0"
  ],
  "requires_python": ">=3.7",
  "summary": "generate changelogs based on tag messages and shortlogs",
  "version": "1.6.2",
  "releases": [],
  "developers": [
    "amethyst_reese",
    "amy@noswap.com"
  ],
  "kwds": "changelogs changelog _changelog aiosqlite pyproject",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_attribution",
  "homepage": "https://attribution.omnilib.dev",
  "release_count": 11,
  "dependency_ids": [
    "pypi_attrs",
    "pypi_click",
    "pypi_jinja2",
    "pypi_packaging",
    "pypi_tomlkit"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: system :: system shells",
    "topic :: system :: systems administration",
    "typing :: typed"
  ],
  "description": "pip-licenses\n============\n\n|build status| |pypi - python version| |pypi version| |github release|\n|codecov| |github contributors| |bsd license| |pypi - downloads|\n\ndump the software license list of python packages installed with pip.\n\ntable of contents\n-----------------\n\n-  `description <#description>`__\n-  `installation <#installation>`__\n-  `usage <#usage>`__\n-  `command-line options <#command-line-options>`__\n\n   -  `common options <#common-options>`__\n\n      -  `option: python <#option-python>`__\n      -  `option: from <#option-from>`__\n      -  `option: order <#option-order>`__\n      -  `option: format <#option-format>`__\n\n         -  `markdown <#markdown>`__\n         -  `rest <#rest>`__\n         -  `confluence <#confluence>`__\n         -  `html <#html>`__\n         -  `json <#json>`__\n         -  `json licensefinder <#json-licensefinder>`__\n         -  `csv <#csv>`__\n         -  `plain vertical <#plain-vertical>`__\n\n      -  `option: summary <#option-summary>`__\n      -  `option: output-file <#option-output-file>`__\n      -  `option: ignore-packages <#option-ignore-packages>`__\n      -  `option: packages <#option-packages>`__\n\n   -  `format options <#format-options>`__\n\n      -  `option: with-system <#option-with-system>`__\n      -  `option: with-authors <#option-with-authors>`__\n      -  `option: with-maintainers <#option-with-maintainers>`__\n      -  `option: with-urls <#option-with-urls>`__\n      -  `option: with-description <#option-with-description>`__\n      -  `option: no-version <#option-no-version>`__\n      -  `option: with-license-file <#option-with-license-file>`__\n      -  `option: filter-strings <#option-filter-strings>`__\n      -  `option: filter-code-page <#option-filter-code-page>`__\n\n   -  `verify options <#verify-options>`__\n\n      -  `option: fail-on <#option-fail-on>`__\n      -  `option: allow-only <#option-allow-only>`__\n\n   -  `more information <#more-information>`__\n\n-  `dockerfile <#dockerfile>`__\n-  `about unicodeencodeerror <#about-unicodeencodeerror>`__\n-  `license <#license>`__\n\n   -  `dependencies <#dependencies>`__\n\n-  `uninstallation <#uninstallation>`__\n-  `contributing <#contributing>`__\n\ndescription\n-----------\n\n``pip-licenses`` is a cli tool for checking the software license of\ninstalled python packages with pip.\n\nimplemented with the idea inspired by ``composer licenses`` command in\ncomposer (a.k.a php package management tool).\n\nhttps://getcomposer.org/doc/03-cli.md#licenses\n\ninstallation\n------------\n\ninstall it via pypi using ``pip`` command.\n\n.. code:: bash\n\n   # install or upgrade to newest available version\n   $ pip install -u pip-licenses\n\n   # if upgrading from pip-licenses 3.x, remove ptable\n   $ pip uninstall -y ptable\n\n**note for python 3.7 users:** pip-licenses 4.x discontinued support\nearlier than the python 3.7 eol schedule. if you want to use it with\npython 3.7, install pip-licenses 3.x.\n\n.. code:: bash\n\n   # using old version for the python 3.7 environment\n   $ pip install 'pip-licenses<4.0'\n\n**note:** if you are still using python 2.7, install version less than\n2.0. no new features will be provided for version 1.x.\n\n.. code:: bash\n\n   $ pip install 'pip-licenses<2.0'\n\nusage\n-----\n\nexecute the command with your venv (or virtualenv) environment.\n\n.. code:: bash\n\n   # install packages in your venv environment\n   (venv) $ pip install django pip-licenses\n\n   # check the licenses with your venv environment\n   (venv) $ pip-licenses\n    name    version  license\n    django  2.0.2    bsd\n    pytz    2017.3   mit\n\ncommand-line options\n--------------------\n\ncommon options\n~~~~~~~~~~~~~~\n\noption: python\n^^^^^^^^^^^^^^\n\nby default, this tools finds the packages from the environment\npip-licenses is launched from, by searching in current python's\n``sys.path`` folders. in the case you want to search for packages in an\nother environment (e.g. if you want to run pip-licenses from its own\nisolated environment), you can specify a path to a python executable.\nthe packages will be searched for in the given python's ``sys.path``,\nfree of pip-licenses dependencies.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --with-system | grep pip\n    pip                       22.3.1       mit license\n    pip-licenses              4.1.0        mit license\n\n.. code:: bash\n\n   (venv) $ pip-licenses --python=</path/to/other/env>/bin/python --with-system | grep pip\n    pip                       23.0.1       mit license \n\noption: from\n^^^^^^^^^^^^\n\nby default, this tool finds the license from `trove\nclassifiers <https://pypi.org/classifiers/>`__ or package metadata. some\npython packages declare their license only in trove classifiers.\n\n(see also): `set license to mit in setup.py by alisianoi \u30fb pull request\n#1058 \u30fb\npypa/setuptools <https://github.com/pypa/setuptools/pull/1058>`__, `pep\n314#license <https://www.python.org/dev/peps/pep-0314/#license>`__\n\nfor example, even if you check with the ``pip show`` command, the\nlicense is displayed as ``unknown``.\n\n.. code:: bash\n\n   (venv) $ pip show setuptools\n   name: setuptools\n   version: 38.5.0\n   summary: easily download, build, install, upgrade, and uninstall python packages\n   home-page: https://github.com/pypa/setuptools\n   author: python packaging authority\n   author-email: distutils-sig@python.org\n   license: unknown\n\nthe mixed mode (``--from=mixed``) of this tool works well and looks for\nlicenses.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --from=mixed --with-system | grep setuptools\n    setuptools    38.5.0   mit license\n\nin mixed mode, it first tries to look for licenses in the trove\nclassifiers. when not found in the trove classifiers, the license\ndeclared in metadata is displayed.\n\nif you want to look only in metadata, use ``--from=meta``. if you want\nto look only in trove classifiers, use ``--from=classifier``.\n\nto list license information from both metadata and classifier, use\n``--from=all``.\n\n**note:** if neither can find license information, please check with the\n``with-authors`` and ``with-urls`` options and contact the software\nauthor.\n\n-  the ``m`` keyword is prepared as alias of ``meta``.\n-  the ``c`` keyword is prepared as alias of ``classifier``.\n-  the ``mix`` keyword is prepared as alias of ``mixed``.\n\n   -  default behavior in this tool\n\noption: order\n^^^^^^^^^^^^^\n\nby default, it is ordered by package name.\n\nif you give arguments to the ``--order`` option, you can output in other\nsorted order.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --order=license\n\noption: format\n^^^^^^^^^^^^^^\n\nby default, it is output to the ``plain`` format.\n\nmarkdown\n''''''''\n\nwhen executed with the ``--format=markdown`` option, you can output list\nin markdown format. the ``m`` ``md`` keyword is prepared as alias of\n``markdown``.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --format=markdown\n   | name   | version | license |\n   |--------|---------|---------|\n   | django | 2.0.2   | bsd     |\n   | pytz   | 2017.3  | mit     |\n\nwhen inserted in a markdown document, it is rendered as follows:\n\n====== ======= =======\nname   version license\n====== ======= =======\ndjango 2.0.2   bsd\npytz   2017.3  mit\n====== ======= =======\n\nrest\n''''\n\nwhen executed with the ``--format=rst`` option, you can output list in\n\"`grid\ntables <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#grid-tables>`__\"\nof restructuredtext format. the ``r`` ``rest`` keyword is prepared as\nalias of ``rst``.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --format=rst\n   +--------+---------+---------+\n   | name   | version | license |\n   +--------+---------+---------+\n   | django | 2.0.2   | bsd     |\n   +--------+---------+---------+\n   | pytz   | 2017.3  | mit     |\n   +--------+---------+---------+\n\nconfluence\n''''''''''\n\nwhen executed with the ``--format=confluence`` option, you can output\nlist in `confluence (or jira) wiki\nmarkup <https://confluence.atlassian.com/doc/confluence-wiki-markup-251003035.html#confluencewikimarkup-tables>`__\nformat. the ``c`` keyword is prepared as alias of ``confluence``.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --format=confluence\n   | name   | version | license |\n   | django | 2.0.2   | bsd     |\n   | pytz   | 2017.3  | mit     |\n\nhtml\n''''\n\nwhen executed with the ``--format=html`` option, you can output list in\nhtml table format. the ``h`` keyword is prepared as alias of ``html``.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --format=html\n   <table>\n       <tr>\n           <th>name</th>\n           <th>version</th>\n           <th>license</th>\n       </tr>\n       <tr>\n           <td>django</td>\n           <td>2.0.2</td>\n           <td>bsd</td>\n       </tr>\n       <tr>\n           <td>pytz</td>\n           <td>2017.3</td>\n           <td>mit</td>\n       </tr>\n   </table>\n\njson\n''''\n\nwhen executed with the ``--format=json`` option, you can output list in\njson format easily allowing post-processing. the ``j`` keyword is\nprepared as alias of ``json``.\n\n.. code:: json\n\n   [\n     {\n       \"author\": \"django software foundation\",\n       \"license\": \"bsd\",\n       \"name\": \"django\",\n       \"url\": \"https://www.djangoproject.com/\",\n       \"version\": \"2.0.2\"\n     },\n     {\n       \"author\": \"stuart bishop\",\n       \"license\": \"mit\",\n       \"name\": \"pytz\",\n       \"url\": \"http://pythonhosted.org/pytz\",\n       \"version\": \"2017.3\"\n     }\n   ]\n\njson licensefinder\n''''''''''''''''''\n\nwhen executed with the ``--format=json-license-finder`` option, you can\noutput list in json format that is identical to\n`licensefinder <https://github.com/pivotal/licensefinder>`__. the\n``jlf`` keyword is prepared as alias of ``jlf``. this makes pip-licenses\na drop-in replacement for licensefinder.\n\n.. code:: json\n\n   [\n     {\n       \"licenses\": [\"bsd\"],\n       \"name\": \"django\",\n       \"version\": \"2.0.2\"\n     },\n     {\n       \"licenses\": [\"mit\"],\n       \"name\": \"pytz\",\n       \"version\": \"2017.3\"\n     }\n   ]\n\ncsv\n'''\n\nwhen executed with the ``--format=csv`` option, you can output list in\nquoted csv format. useful when you want to copy/paste the output to an\nexcel sheet.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --format=csv\n   \"name\",\"version\",\"license\"\n   \"django\",\"2.0.2\",\"bsd\"\n   \"pytz\",\"2017.3\",\"mit\"\n\nplain vertical\n''''''''''''''\n\nwhen executed with the ``--format=plain-vertical`` option, you can\noutput a simple plain vertical output that is similar to angular cli's\n`--extractlicenses flag <https://angular.io/cli/build#options>`__. this\nformat minimizes rightward drift.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --format=plain-vertical --with-license-file --no-license-path\n   pytest\n   5.3.4\n   mit license\n   the mit license (mit)\n\n   copyright (c) 2004-2020 holger krekel and others\n\n   permission is hereby granted, free of charge, to any person obtaining a copy of\n   this software and associated documentation files (the \"software\"), to deal in\n   the software without restriction, including without limitation the rights to\n   use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n   of the software, and to permit persons to whom the software is furnished to do\n   so, subject to the following conditions:\n\n   the above copyright notice and this permission notice shall be included in all\n   copies or substantial portions of the software.\n\n   the software is provided \"as is\", without warranty of any kind, express or\n   implied, including but not limited to the warranties of merchantability,\n   fitness for a particular purpose and noninfringement. in no event shall the\n   authors or copyright holders be liable for any claim, damages or other\n   liability, whether in an action of contract, tort or otherwise, arising from,\n   out of or in connection with the software or the use or other dealings in the\n   software.\n\noption: summary\n^^^^^^^^^^^^^^^\n\nwhen executed with the ``--summary`` option, you can output a summary of\neach license.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --summary --from=classifier --with-system\n    count  license\n    2      bsd license\n    4      mit license\n\n**note:** when using this option, only ``--order=count`` or\n``--order=license`` has an effect for the ``--order`` option. and using\n``--with-authors`` and ``--with-urls`` will be ignored.\n\noption: output-file\n^^^^^^^^^^^^^^^^^^^\n\nwhen executed with the ``--output-file`` option, write the result to the\npath specified by the argument.\n\n::\n\n   (venv) $ pip-licenses --format=rst --output-file=/tmp/output.rst\n   created path: /tmp/output.rst\n\noption: ignore-packages\n^^^^^^^^^^^^^^^^^^^^^^^\n\nwhen executed with the ``--ignore-packages`` option, ignore the package\nspecified by argument from list output.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --ignore-packages django\n    name  version  license\n    pytz  2017.3   mit\n\npackage names of arguments can be separated by spaces.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --with-system --ignore-packages django pip pip-licenses\n    name        version  license\n    prettytable 3.5.0    bsd license\n    pytz        2017.3   mit\n    setuptools  38.5.0   unknown\n    wcwidth     0.2.5    mit license\n\npackages can also be specified with a version, only ignoring that\nspecific version.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --with-system --ignore-packages django pytz:2017.3\n    name        version  license\n    prettytable 3.5.0    bsd license\n    setuptools  38.5.0   unknown\n    wcwidth     0.2.5    mit license\n\noption: packages\n^^^^^^^^^^^^^^^^\n\nwhen executed with the ``packages`` option, look at the package\nspecified by argument from list output.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --packages django\n    name   version  license\n    django 2.0.2    bsd\n\npackage names of arguments can be separated by spaces.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --with-system --packages prettytable pytz\n    name        version  license\n    prettytable 3.5.0    bsd license\n    pytz        2017.3   mit\n\nformat options\n~~~~~~~~~~~~~~\n\noption: with-system\n^^^^^^^^^^^^^^^^^^^\n\nby default, system packages such as ``pip`` and ``setuptools`` are\nignored.\n\nand ``pip-licenses`` and the implicit dependency ``prettytable`` and\n``wcwidth`` will also be ignored.\n\nif you want to output all including system package, use the\n``--with-system`` option.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --with-system\n    name          version  license\n    django        2.0.2    bsd\n    pip           9.0.1    mit\n    pip-licenses  1.0.0    mit license\n    prettytable   3.5.0    bsd license\n    pytz          2017.3   mit\n    setuptools    38.5.0   unknown\n    wcwidth       0.2.5    mit license\n\noption: with-authors\n^^^^^^^^^^^^^^^^^^^^\n\nwhen executed with the ``--with-authors`` option, output with author of\nthe package.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --with-authors\n    name    version  license  author\n    django  2.0.2    bsd      django software foundation\n    pytz    2017.3   mit      stuart bishop\n\noption: with-maintainers\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nwhen executed with the ``--with-maintainers`` option, output with\nmaintainer of the package.\n\n**note:** this option is available for users who want information about\nthe maintainer as well as the author. see\n`#144 <https://github.com/raimon49/pip-licenses/issues/144>`__\n\noption: with-urls\n^^^^^^^^^^^^^^^^^\n\nfor packages without metadata, the license is output as ``unknown``. to\nget more package information, use the ``--with-urls`` option.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --with-urls\n    name    version  license  url\n    django  2.0.2    bsd      https://www.djangoproject.com/\n    pytz    2017.3   mit      http://pythonhosted.org/pytz\n\noption: with-description\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nwhen executed with the ``--with-description`` option, output with short\ndescription of the package.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --with-description\n    name    version  license  description\n    django  2.0.2    bsd      a high-level python web framework that encourages rapid development and clean, pragmatic design.\n    pytz    2017.3   mit      world timezone definitions, modern and historical\n\noption: no-version\n^^^^^^^^^^^^^^^^^^\n\nwhen executed with the ``--no-version`` option, output without the\nversion number.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --no-version\n    name    license\n    django  bsd\n    pytz    mit\n\noption: with-license-file\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwhen executed with the ``--with-license-file`` option, output the\nlocation of the package's license file on disk and the full contents of\nthat file. due to the length of these fields, this option is best paired\nwith ``--format=json``.\n\nif you also want to output the file ``notice`` distributed under apache\nlicense etc., specify the ``--with-notice-file`` option additionally.\n\n**note:** if you want to keep the license file path secret, specify\n``--no-license-path`` option together.\n\noption: filter-strings\n^^^^^^^^^^^^^^^^^^^^^^\n\nsome package data contains unicode characters which might cause problems\nfor certain output formats (in particular rest tables). if this filter\nis enabled, all characters which cannot be encoded with a given code\npage (see ``--filter-code-page``) will be removed from any input strings\n(e.g. package name, description).\n\noption: filter-code-page\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nif the input strings are filtered (see ``--filter-strings``), you can\nspecify the applied code page (default ``latin-1``). a list of all\navailable code pages can be found `codecs module\ndocument <https://docs.python.org/3/library/codecs.html#standard-encodings>`__.\n\nverify options\n~~~~~~~~~~~~~~\n\noption: fail-on\n^^^^^^^^^^^^^^^\n\nfail (exit with code 1) on the first occurrence of the licenses of the\nsemicolon-separated list. the license name matching is case-insensitive.\n\nif ``--from=all``, the option will apply to the metadata license field.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --fail-on=\"mit license;bsd license\"\n\n**note:** packages with multiple licenses will fail if at least one\nlicense is included in the fail-on list. for example:\n\n::\n\n   # keyring library has 2 licenses\n   $ pip-licenses --package keyring\n    name     version  license\n    keyring  23.0.1   mit license; python software foundation license\n\n   # if just \"python software foundation license\" is specified, it will fail.\n   $ pip-licenses --package keyring --fail-on=\"python software foundation license;\"\n   $ echo $?\n   1\n\n   # matching is case-insensitive. following check will fail:\n   $ pip-licenses --fail-on=\"mit license\"\n\noption: allow-only\n^^^^^^^^^^^^^^^^^^\n\nfail (exit with code 1) if none of the package licenses are in the\nsemicolon-separated list. the license name matching is case-insensitive.\n\nif ``--from=all``, the option will apply to the metadata license field.\n\n.. code:: bash\n\n   (venv) $ pip-licenses --allow-only=\"mit license;bsd license\"\n\n**note:** packages with multiple licenses will only be allowed if at\nleast one license is included in the allow-only list. for example:\n\n::\n\n   # keyring library has 2 licenses\n   $ pip-licenses --package keyring\n    name     version  license\n    keyring  23.0.1   mit license; python software foundation license\n\n   # one or both licenses must be specified (order and case does not matter). following checks will pass:\n   $ pip-licenses --package keyring --allow-only=\"mit license\"\n   $ pip-licenses --package keyring --allow-only=\"mit license\"\n   $ pip-licenses --package keyring --allow-only=\"bsd license;mit license\"\n   $ pip-licenses --package keyring --allow-only=\"python software foundation license\"\n   $ pip-licenses --package keyring --allow-only=\"python software foundation license;mit license\"\n\n   # if none of the license in the allow list match, the check will fail.\n   $ pip-licenses --package keyring  --allow-only=\"bsd license\"\n   $ echo $?\n   1\n\nmore information\n~~~~~~~~~~~~~~~~\n\nother, please make sure to execute the ``--help`` option.\n\ndockerfile\n----------\n\nyou can check the package license used by your app in the isolated\ndocker environment.\n\n.. code:: bash\n\n   # clone this repository to local\n   $ git clone https://github.com/raimon49/pip-licenses.git\n   $ cd pip-licenses\n\n   # create your app's requirements.txt file\n   # other ways, pip freeze > docker/requirements.txt\n   $ echo \"flask\" > docker/requirements.txt\n\n   # build docker image\n   $ docker build . -t myapp-licenses\n\n   # check the package license in container\n   $ docker run --rm myapp-licenses\n    name          version  license\n    click         7.0      bsd license\n    flask         1.0.2    bsd license\n    jinja2        2.10     bsd license\n    markupsafe    1.1.1    bsd license\n    werkzeug      0.15.2   bsd license\n    itsdangerous  1.1.0    bsd license\n\n   # check with options\n   $ docker run --rm myapp-licenses --summary\n    count  license\n    4      bsd\n    2      bsd-3-clause\n\n   # when you need help\n   $ docker run --rm myapp-licenses --help\n\n**note:** this docker image can not check package licenses with c and c\n++ extensions. it only works with pure python package dependencies.\n\nif you want to resolve build environment issues, try using not slim\nimage and more.\n\n.. code:: diff\n\n   diff --git a/dockerfile b/dockerfile\n   index bfc4edc..175e968 100644\n   --- a/dockerfile\n   +++ b/dockerfile\n   @@ -1,4 +1,4 @@\n   -from python:3.11-slim-bullseye\n   +from python:3.11-bullseye\n\nabout unicodeencodeerror\n------------------------\n\nif a ``unicodeencodeerror`` occurs, check your environment variables\n``lang`` and ``lc_type``. additionally, you can set ``pythonioencoding``\nto override the encoding used for ``stdout``.\n\noften occurs in isolated environments such as docker and tox.\n\nsee useful reports:\n\n-  `#35 <https://github.com/raimon49/pip-licenses/issues/35>`__\n-  `#45 <https://github.com/raimon49/pip-licenses/issues/45>`__\n\nlicense\n-------\n\n`mit\nlicense <https://github.com/raimon49/pip-licenses/blob/master/license>`__\n\ndependencies\n~~~~~~~~~~~~\n\n-  `prettytable <https://pypi.org/project/prettytable/>`__ by luke\n   maurits and maintainer of fork version jazzband team under the\n   bsd-3-clause license\n\n   -  **note:** this package implicitly requires\n      `wcwidth <https://pypi.org/project/wcwidth/>`__.\n\n``pip-licenses`` has been implemented in the policy to minimize the\ndependence on external package.\n\nuninstallation\n--------------\n\nuninstall package and dependent package with ``pip`` command.\n\n.. code:: bash\n\n   $ pip uninstall pip-licenses prettytable wcwidth\n\ncontributing\n------------\n\nsee `contribution\nguidelines <https://github.com/raimon49/pip-licenses/blob/master/contributing.md>`__.\n\n.. |build status| image:: https://github.com/raimon49/pip-licenses/workflows/python%20package/badge.svg\n   :target: https://github.com/raimon49/pip-licenses/actions?query=workflow%3a%22python+package%22\n.. |pypi - python version| image:: https://img.shields.io/pypi/pyversions/pip-licenses.svg\n   :target: https://pypi.org/project/pip-licenses/\n.. |pypi version| image:: https://badge.fury.io/py/pip-licenses.svg\n   :target: https://badge.fury.io/py/pip-licenses\n.. |github release| image:: https://img.shields.io/github/release/raimon49/pip-licenses.svg\n   :target: https://github.com/raimon49/pip-licenses/releases\n.. |codecov| image:: https://codecov.io/gh/raimon49/pip-licenses/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/raimon49/pip-licenses\n.. |github contributors| image:: https://img.shields.io/github/contributors/raimon49/pip-licenses\n   :target: https://github.com/raimon49/pip-licenses/graphs/contributors\n.. |bsd license| image:: http://img.shields.io/badge/license-mit-green.svg\n   :target: https://github.com/raimon49/pip-licenses/blob/master/license\n.. |pypi - downloads| image:: https://img.shields.io/pypi/dm/pip-licenses\n   :target: https://pypistats.org/packages/pip-licenses\n\n\nchangelog\n---------\n\n.. _433:\n\n4.3.3\n~~~~~\n\n-  always terminate ``--allow-only`` and ``--fail-on`` messages with a\n   newline\n-  always terminate files created with ``--output-file`` with a newline\n\n.. _432:\n\n4.3.2\n~~~~~\n\n-  better handling extracting urls from ``project-url``\n\n.. _431:\n\n4.3.1\n~~~~~\n\n-  fix to treat package names as normalized as in `pep\n   503 <https://peps.python.org/pep-0503/>`__ with ``--packages`` and\n   ``--ignore-packages`` option\n\n.. _430:\n\n4.3.0\n~~~~~\n\n-  implement new option ``--no-version``\n\n.. _420:\n\n4.2.0\n~~~~~\n\n-  implement new option ``--with-maintainers``\n-  implement new option ``--python``\n-  allow version spec in ``--ignore-packages`` parameters\n-  when the ``author`` field is ``unknown``, the output is automatically\n   completed from ``author-email``\n-  when the ``home-page`` field is ``unknown``, the output is\n   automatically completed from ``project-url``\n\n.. _410:\n\n4.1.0\n~~~~~\n\n-  support case-insensitive license name matching around ``--fail-on``\n   and ``--allow-only`` parameters\n\n.. _403:\n\n4.0.3\n~~~~~\n\n-  escape unicode output (to e.g. ``&#123;``) in the html output\n\n.. _402:\n\n4.0.2\n~~~~~\n\n-  add type annotations and code formatter\n\n.. _401:\n\n4.0.1\n~~~~~\n\n-  fix \"pip-licenses\" is missing in output of\n   ``pip-licenses --with-system`` option\n\n.. _400:\n\n4.0.0\n~~~~~\n\n-  support for python 3.11\n-  dropped support python 3.7\n-  migrate docker base image from alpine to debian 11-slim\n-  breaking changes\n\n   -  does not work with ptable and depends on prettytable\n   -  depend on importlib_metadata rather than pip\n\n.. _355:\n\n3.5.5\n~~~~~\n\n-  search for path defined in `pep\n   639 <https://peps.python.org/pep-0639/>`__ with\n   ``--with-license-file`` option\n-  dropped support python 3.6\n\n.. _354:\n\n3.5.4\n~~~~~\n\n-  skip directories when detecting license files\n\n.. _353:\n\n3.5.3\n~~~~~\n\n-  support pip 21.3 or later\n\n.. _352:\n\n3.5.2\n~~~~~\n\n-  ignore spaces around ``--fail-on`` and ``--allow-only`` parameters\n\n.. _351:\n\n3.5.1\n~~~~~\n\n-  fix the order in which multiple licenses are output\n\n.. _350:\n\n3.5.0\n~~~~~\n\n-  handle multiple licenses better with options ``--fail-on`` and\n   ``--allow-only``\n-  small change in output method for multiple licenses, change the\n   separator from comma to semicolon\n\n   -  up to 3.4.0: ``python software foundation license, mit license``\n   -  3.5.0 or later:\n      ``python software foundation license; mit license``\n\n.. _340:\n\n3.4.0\n~~~~~\n\n-  implement new option ``--packages``\n\n.. _331:\n\n3.3.1\n~~~~~\n\n-  fix license summary refer to ``--from`` option\n\n.. _330:\n\n3.3.0\n~~~~~\n\n-  improves the readability of the help command\n\n.. _320:\n\n3.2.0\n~~~~~\n\n-  implement new option ``--from=all``\n-  change license notation under `spdx license\n   identifier <https://spdx.org/licenses/>`__ style\n\n.. _310:\n\n3.1.0\n~~~~~\n\n-  implement new option for use in continuous integration\n\n   -  ``--fail-on``\n   -  ``--allow-only``\n\n.. _300:\n\n3.0.0\n~~~~~\n\n-  dropped support python 3.5\n-  clarified support for python 3.9\n-  migrate package metadata to ``setup.cfg``\n-  breaking changes\n\n   -  change default behavior to ``--from=mixed``\n\n.. _230:\n\n2.3.0\n~~~~~\n\n-  implement new option for manage unicode characters\n\n   -  ``--filter-strings``\n   -  ``--filter-code-page``\n\n.. _221:\n\n2.2.1\n~~~~~\n\n-  fixed the file that is selected when multiple matches are made with\n   ``license*`` with run ``--with-license-file``\n\n.. _220:\n\n2.2.0\n~~~~~\n\n-  implement new option ``--with-notice-file``\n-  added to find british style file name ``licence`` with run\n   ``--with-license-file``\n\n.. _211:\n\n2.1.1\n~~~~~\n\n-  suppress errors when opening license files\n\n.. _210:\n\n2.1.0\n~~~~~\n\n-  implement new option ``--format=plain-vertical``\n-  support for outputting license file named ``copying *``\n\n.. _201:\n\n2.0.1\n~~~~~\n\n-  better license file open handling in python 3\n\n.. _200:\n\n2.0.0\n~~~~~\n\n-  dropped support python 2.7\n-  breaking changes\n\n   -  removed migration path to obsolete options\n\n      -  ``--from-classifier``\n      -  ``--format-markdown``\n      -  ``--format-rst``\n      -  ``--format-confluence``\n      -  ``--format-html``\n      -  ``--format-json``\n\n-  implement new option ``--no-license-path``\n\n.. _1180:\n\n1.18.0\n~~~~~~\n\n-  supports compatibility to work with either ptable or prettytable\n\n.. _1170:\n\n1.17.0\n~~~~~~\n\n-  implement new option ``--output-file``\n-  clarified support for python 3.8\n\n.. _1161:\n\n1.16.1\n~~~~~~\n\n-  add a help text for ``--format=json-license-finder`` option\n\n.. _1160:\n\n1.16.0\n~~~~~~\n\n-  implement new option ``--format=json-license-finder``\n\n.. _1152:\n\n1.15.2\n~~~~~~\n\n-  read license file works well with windows\n\n.. _1151:\n\n1.15.1\n~~~~~~\n\n-  skip parsing of license file for packages specified with\n   ``--ignore-packages`` option\n\n.. _1150:\n\n1.15.0\n~~~~~~\n\n-  implement new option ``--format=csv``\n\n.. _1140:\n\n1.14.0\n~~~~~~\n\n-  implement new option ``--from=mixed`` as a mixed mode\n\n.. _1130:\n\n1.13.0\n~~~~~~\n\n-  implement new option ``--from=meta``, ``from=classifier``\n-  dropped support python 3.4\n\n.. _1121:\n\n1.12.1\n~~~~~~\n\n-  fix bug\n\n   -  change warning output to standard error\n\n.. _1120:\n\n1.12.0\n~~~~~~\n\n-  supports execution within docker container\n-  warning of deprecated options\n-  fix bug\n\n   -  ignore ``osi approved`` string with multiple licenses\n\n.. _1110:\n\n1.11.0\n~~~~~~\n\n-  implement new option ``--with-license-file``\n\n.. _1100:\n\n1.10.0\n~~~~~~\n\n-  implement new option ``--with-description``\n\n.. _190:\n\n1.9.0\n~~~~~\n\n-  implement new option ``--summary``\n\n.. _180:\n\n1.8.0\n~~~~~\n\n-  implement new option ``--format-json``\n-  dropped support python 3.3\n\n.. _171:\n\n1.7.1\n~~~~~\n\n-  fix bug\n\n   -  support pip 10.x\n\n.. _170:\n\n1.7.0\n~~~~~\n\n-  implement new option ``--format-confluence``\n\n.. _161:\n\n1.6.1\n~~~~~\n\n-  fix bug\n\n   -  support display multiple license with ``--from-classifier`` option\n\n-  improve document\n\n   -  add section of 'uninstallation' in readme\n\n.. _160:\n\n1.6.0\n~~~~~\n\n-  implement new option ``--format-html``\n\n.. _150:\n\n1.5.0\n~~~~~\n\n-  implement new option ``--format-rst``\n\n.. _140:\n\n1.4.0\n~~~~~\n\n-  implement new option ``--format-markdown``\n-  include license file in distribution package\n\n.. _130:\n\n1.3.0\n~~~~~\n\n-  implement new option ``--ignore-packages``\n\n.. _120:\n\n1.2.0\n~~~~~\n\n-  implement new option ``--from-classifier``\n\n.. _110:\n\n1.1.0\n~~~~~\n\n-  improve document\n\n   -  add toc to readme document\n   -  add a information of dependencies\n\n.. _100:\n\n1.0.0\n~~~~~\n\n-  first stable release version\n\n.. _020:\n\n0.2.0\n~~~~~\n\n-  implement new option ``--order``\n\n   -  default behavior is ``--order=name``\n\n.. _010:\n\n0.1.0\n~~~~~\n\n-  first implementation version\n\n   -  support options\n\n      -  ``--with-system``\n      -  ``--with-authors``\n      -  ``--with-urls``\n\n\n",
  "docs_url": null,
  "keywords": "pip pypi package license check",
  "license": "mit",
  "name": "pip-licenses",
  "package_url": "https://pypi.org/project/pip-licenses/",
  "project_url": "https://pypi.org/project/pip-licenses/",
  "project_urls": {
    "Homepage": "https://github.com/raimon49/pip-licenses",
    "Issues": "https://github.com/raimon49/pip-licenses/issues",
    "Releases": "https://github.com/raimon49/pip-licenses/releases"
  },
  "release_url": "https://pypi.org/project/pip-licenses/4.3.3/",
  "requires_dist": [
    "prettytable (>=2.3.0)",
    "docutils ; extra == 'test'",
    "mypy ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytest-pycodestyle ; extra == 'test'",
    "pytest-runner ; extra == 'test'"
  ],
  "requires_python": "~=3.8",
  "summary": "dump the software license list of python packages installed with pip.",
  "version": "4.3.3",
  "releases": [],
  "developers": [
    "raimon",
    "raimon49@hotmail.com"
  ],
  "kwds": "pip pyversions pypi pypa importlib_metadata",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pip_licenses",
  "homepage": "https://github.com/raimon49/pip-licenses",
  "release_count": 64,
  "dependency_ids": [
    "pypi_docutils",
    "pypi_mypy",
    "pypi_prettytable",
    "pypi_pytest_cov",
    "pypi_pytest_pycodestyle",
    "pypi_pytest_runner"
  ]
}
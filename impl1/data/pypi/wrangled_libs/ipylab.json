{
  "classifiers": [
    "framework :: jupyter",
    "framework :: jupyter :: jupyterlab",
    "framework :: jupyter :: jupyterlab :: 4",
    "framework :: jupyter :: jupyterlab :: extensions",
    "framework :: jupyter :: jupyterlab :: extensions :: prebuilt",
    "license :: osi approved :: bsd license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# ipylab\n\n![github actions status](https://github.com/jtpio/ipylab/workflows/build/badge.svg)\n[![jupyterlite](https://jupyterlite.rtfd.io/en/latest/_static/badge-launch.svg)](https://ipylab.readthedocs.io/en/latest/lite/lab)\n[![binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jtpio/ipylab/main?urlpath=lab/tree/examples/widgets.ipynb)\n[![conda version](https://img.shields.io/conda/vn/conda-forge/ipylab.svg)](https://anaconda.org/conda-forge/ipylab)\n[![pypi](https://img.shields.io/pypi/v/ipylab.svg)](https://pypi.python.org/pypi/ipylab)\n[![npm](https://img.shields.io/npm/v/ipylab.svg)](https://www.npmjs.com/package/ipylab)\n\ncontrol jupyterlab from python notebooks.\n\nthe goal is to provide access to most of the jupyterlab environment from python notebooks. for example:\n\n- adding widgets to the main area `dockpanel`, left, right or top area\n- build more advanced interfaces leveraging `splitpanel`, `toolbar` and other lumino widgets\n- launch arbitrary commands (new terminal, change theme, open file and so on)\n- open a workspace with a specific layout\n- listen to jupyterlab signals (notebook opened, console closed) and trigger python callbacks\n\n## try it online\n\ntry it in your browser with binder:\n\n[![binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jtpio/ipylab/main?urlpath=lab/tree/examples/widgets.ipynb)\n\nor with [jupyterlite](https://github.com/jupyterlite/jupyterlite):\n\n[![jupyterlite](https://jupyterlite.rtfd.io/en/latest/_static/badge-launch.svg)](https://ipylab.readthedocs.io/en/latest/lite/lab)\n\n## examples\n\n### add jupyter widgets to the jupyterlab interface\n\n![widgets-panels](https://user-images.githubusercontent.com/591645/80025074-59104280-84e0-11ea-9766-0cb49cba285a.gif)\n\n### execute commands\n\n![command-registry](https://user-images.githubusercontent.com/591645/80026017-beb0fe80-84e1-11ea-842d-fa3bf5bc4a9b.gif)\n\n### custom python commands and command palette\n\n![custom-commands](https://user-images.githubusercontent.com/591645/80026023-c1135880-84e1-11ea-9e83-fdb739659357.gif)\n\n### build small applications\n\n![ipytree-example](https://user-images.githubusercontent.com/591645/80026006-b8bb1d80-84e1-11ea-87cc-86495186b938.gif)\n\n### compatibility with retrolab\n\na subset of the features can be used in retrolab:\n\n![retrolab-example](https://user-images.githubusercontent.com/591645/141700044-3c39661a-8a9a-4e6b-a031-03724e0df25b.gif)\n\n## installation\n\nyou can install using `pip`:\n\n```bash\npip install ipylab\n```\n\nor with `mamba` / `conda`:\n\n```bash\nmamba install -c conda-forge ipylab\n```\n\n## running the examples locally\n\nto try out the examples locally, the recommended way is to create a new environment with the dependencies:\n\n```bash\n# create a new conda environment\nconda create -n ipylab-examples -c conda-forge jupyterlab ipylab ipytree bqplot ipywidgets numpy\nconda activate ipylab-examples\n\n# start jupyterlab\njupyter lab\n```\n\n## under the hood\n\n`ipylab` can be seen as a proxy from python to jupyterlab over jupyter widgets:\n\n![ipylab-diagram](./docs/ipylab.png)\n\n## development\n\n```bash\n# create a new conda environment\nmamba create -n ipylab -c conda-forge jupyter-packaging nodejs python -y\n\n# activate the environment\nconda activate ipylab\n\n# install the python package\npython -m pip install -e \".[dev]\"\n\n# link the extension files\njupyter labextension develop . --overwrite\n\n# compile the extension\njlpm && jlpm run build\n```\n\n## related projects\n\nthere are a couple of projects that also enable interacting with the jupyterlab environment from python notebooks:\n\n- [wxyz](https://github.com/deathbeds/wxyz): experimental widgets (including `dockpanel`)\n- [jupyterlab-sidecar](https://github.com/jupyter-widgets/jupyterlab-sidecar): add widgets to the jupyterlab right area\n- [jupyterlab_commands](https://github.com/timkpaine/jupyterlab_commands): add arbitrary python commands to the jupyterlab command palette\n",
  "docs_url": null,
  "keywords": "",
  "license": "copyright (c) 2020 ipylab contributors all rights reserved.  redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  1. redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.  2. redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.  3. neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.  this software is provided by the copyright holders and contributors \"as is\" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. in no event shall the copyright holder or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.",
  "name": "ipylab",
  "package_url": "https://pypi.org/project/ipylab/",
  "project_url": "https://pypi.org/project/ipylab/",
  "project_urls": {
    "Bug Tracker": "https://github.com/jtpio/ipylab/issues",
    "Homepage": "https://github.com/jtpio/ipylab",
    "Repository": "https://github.com/jtpio/ipylab"
  },
  "release_url": "https://pypi.org/project/ipylab/1.0.0/",
  "requires_dist": [
    "ipywidgets<9,>=7.6.0"
  ],
  "requires_python": ">=3.8",
  "summary": "control jupyterlab from python notebooks",
  "version": "1.0.0",
  "releases": [],
  "developers": [
    "ipylab_contributors"
  ],
  "kwds": "ipylab ipywidgets ipytree ipynb jupyterlab",
  "license_kwds": "copyright liable liability redistributions redistribution",
  "libtype": "pypi",
  "id": "pypi_ipylab",
  "homepage": "",
  "release_count": 16,
  "dependency_ids": [
    "pypi_ipywidgets"
  ]
}
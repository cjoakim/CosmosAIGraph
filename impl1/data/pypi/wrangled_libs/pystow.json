{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "<h1 align=\"center\">\n  pystow\n</h1>\n\n<p align=\"center\">\n  <a href=\"https://github.com/cthoyt/pystow/actions\">\n    <img src=\"https://github.com/cthoyt/pystow/workflows/tests/badge.svg\" alt=\"build status\" height=\"20\" />\n  </a>\n\n  <a href=\"https://pypi.org/project/pystow\">\n    <img alt=\"pypi - python version\" src=\"https://img.shields.io/pypi/pyversions/pystow\">\n  </a>\n\n  <a href='https://opensource.org/licenses/mit'>\n    <img src='https://img.shields.io/badge/license-mit-blue.svg' alt='license'/>\n  </a>\n\n  <a href='https://pystow.readthedocs.io/en/latest/?badge=latest'>\n    <img src='https://readthedocs.org/projects/pystow/badge/?version=latest' alt='documentation status' />\n  </a>\n\n  <a href=\"https://zenodo.org/badge/latestdoi/318194121\">\n    <img src=\"https://zenodo.org/badge/318194121.svg\" alt=\"doi\">\n  </a>\n\n  <a href=\"https://github.com/psf/black\">\n    <img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" alt=\"code style: black\">\n  </a>\n</p>\n\n\ud83d\udc5c easily pick a place to store data for your python code.\n\n## \ud83d\ude80 getting started\n\nget a directory for your application.\n\n```python\nimport pystow\n\n# get a directory (as a pathlib.path) for ~/.data/pykeen\npykeen_directory = pystow.join('pykeen')\n\n# get a subdirectory (as a pathlib.path) for ~/.data/pykeen/experiments\npykeen_experiments_directory = pystow.join('pykeen', 'experiments')\n\n# you can go as deep as you want\npykeen_deep_directory = pystow.join('pykeen', 'experiments', 'a', 'b', 'c')\n```\n\nif you reuse the same directory structure a lot, you can save them in a module:\n\n```python\nimport pystow\n\npykeen_module = pystow.module(\"pykeen\")\n\n# access the module's directory with .base\nassert pystow.join(\"pykeen\") == pystow.module(\"pykeen\").base\n\n# get a subdirectory (as a pathlib.path) for ~/.data/pykeen/experiments\npykeen_experiments_directory = pykeen_module.join('experiments')\n\n# you can go as deep as you want past the original \"pykeen\" module\npykeen_deep_directory = pykeen_module.join('experiments', 'a', 'b', 'c')\n```\n\nget a file path for your application by adding the `name` keyword argument. this is made explicit so pystow knows which\nparent directories to automatically create. this works with `pystow` or any module you create with `pystow.module`.\n\n```python\nimport pystow\n\n# get a directory (as a pathlib.path) for ~/.data/indra/database.tsv\nindra_database_path = pystow.join('indra', 'database', name='database.tsv')\n```\n\nensure a file from the internet is available in your application's directory:\n\n```python\nimport pystow\n\nurl = 'https://raw.githubusercontent.com/pykeen/pykeen/master/src/pykeen/datasets/nations/test.txt'\npath = pystow.ensure('pykeen', 'datasets', 'nations', url=url)\n```\n\nensure a tabular data file from the internet and load it for usage (requires `pip install pandas`):\n\n```python\nimport pystow\nimport pandas as pd\n\nurl = 'https://raw.githubusercontent.com/pykeen/pykeen/master/src/pykeen/datasets/nations/test.txt'\ndf: pd.dataframe = pystow.ensure_csv('pykeen', 'datasets', 'nations', url=url)\n```\n\nensure a comma-separated tabular data file from the internet and load it for usage (requires `pip install pandas`):\n\n```python\nimport pystow\nimport pandas as pd\n\nurl = 'https://raw.githubusercontent.com/cthoyt/pystow/main/tests/resources/test_1.csv'\ndf: pd.dataframe = pystow.ensure_csv('pykeen', 'datasets', 'nations', url=url, read_csv_kwargs=dict(sep=\",\"))\n```\n\nensure a rdf file from the internet and load it for usage (requires `pip install rdflib`)\n\n```python\nimport pystow\nimport rdflib\n\nurl = 'https://ftp.expasy.org/databases/rhea/rdf/rhea.rdf.gz'\nrdf_graph: rdflib.graph = pystow.ensure_rdf('rhea', url=url)\n```\n\nalso see `pystow.ensure_excel()`, `pystow.ensure_rdf()`, `pystow.ensure_zip_df()`, and `pystow.ensure_tar_df()`.\n\nif your data comes with a lot of different files in an archive,\nyou can ensure the archive is downloaded and get specific files from it:\n\n```python\nimport numpy as np\nimport pystow\n\nurl = \"https://cloud.enterprise.informatik.uni-leipzig.de/index.php/s/lhpbmcre7slqajb/download/multike_d_y_15k_v1.zip\"\n# the path inside the archive to the file you want\ninner_path = \"multike/d_y_15k_v1/721_5fold/1/20210219183115/ent_embeds.npy\"\nwith pystow.ensure_open_zip(\"kiez\", url=url, inner_path=inner_path) as file:\n    emb = np.load(file)\n```\n\nalso see `pystow.module.ensure_open_lzma()`, `pystow.module.ensure_open_tarfile()` and `pystow.module.ensure_open_gz()`.\n\n## \u2699\ufe0f\ufe0f configuration\n\nby default, data is stored in the `$home/.data` directory. by default, the `<app>` app will create the\n`$home/.data/<app>` folder.\n\nif you want to use an alternate folder name to `.data` inside the home directory, you can set the `pystow_name`\nenvironment variable. for example, if you set `pystow_name=mydata`, then the following code for the `pykeen` app will\ncreate the `$home/mydata/pykeen/` directory:\n\n```python\nimport os\nimport pystow\n\n# only for demonstration purposes. you should set environment\n# variables either with your .bashrc or in the command line repl.\nos.environ['pystow_name'] = 'mydata'\n\n# get a directory (as a pathlib.path) for ~/mydata/pykeen\npykeen_directory = pystow.join('pykeen')\n```\n\nif you want to specify a completely custom directory that isn't relative to your home directory, you can set\nthe `pystow_home` environment variable. for example, if you set `pystow_home=/usr/local/`, then the following code for\nthe `pykeen` app will create the `/usr/local/pykeen/` directory:\n\n```python\nimport os\nimport pystow\n\n# only for demonstration purposes. you should set environment\n# variables either with your .bashrc or in the command line repl.\nos.environ['pystow_home'] = '/usr/local/'\n\n# get a directory (as a pathlib.path) for /usr/local/pykeen\npykeen_directory = pystow.join('pykeen')\n```\n\nnote: if you set `pystow_home`, then `pystow_name` is disregarded.\n\n### x desktop group (xdg) compatibility\n\nwhile pystow's main goal is to make application data less opaque and less\nhidden, some users might want to use the\n[xdg specifications](http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html)\nfor storing their app data.\n\nif you set the environment variable  `pystow_use_appdirs` to `true` or `true`, then the\n[`appdirs`](https://pypi.org/project/appdirs/) package will be used to choose\nthe base directory based on the `user data dir` option. this can still be\noverridden by `pystow_home`.\n\n## \ud83d\ude80 installation\n\nthe most recent release can be installed from\n[pypi](https://pypi.org/project/pystow/) with:\n\n```bash\n$ pip install pystow\n```\n\nnote, as of v0.3.0, python 3.6 isn't officially supported (its\nend-of-life was in december 2021). for the time being, `pystow` might still\nwork on py36, but this is only coincidental.\n\nthe most recent code and data can be installed directly from github with:\n\n```bash\n$ pip install git+https://github.com/cthoyt/pystow.git\n```\n\nto install in development mode, use the following:\n\n```bash\n$ git clone git+https://github.com/cthoyt/pystow.git\n$ cd pystow\n$ pip install -e .\n```\n\n## \u2696\ufe0f license\n\nthe code in this package is licensed under the mit license.\n",
  "docs_url": null,
  "keywords": "caching,file management",
  "license": "mit",
  "name": "pystow",
  "package_url": "https://pypi.org/project/pystow/",
  "project_url": "https://pypi.org/project/pystow/",
  "project_urls": {
    "Bug Tracker": "https://github.com/cthoyt/pystow/issues",
    "Download": "https://github.com/cthoyt/pystow/releases",
    "Homepage": "https://github.com/cthoyt/pystow"
  },
  "release_url": "https://pypi.org/project/pystow/0.5.2/",
  "requires_dist": [
    "click",
    "requests",
    "tqdm",
    "pickle5 ; python_version < \"3.8\"",
    "boto3 ; extra == 'aws'",
    "sphinx ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "sphinx-click ; extra == 'docs'",
    "sphinx-autodoc-typehints ; extra == 'docs'",
    "sphinx-automodapi ; extra == 'docs'",
    "pandas ; extra == 'pandas'",
    "rdflib ; extra == 'rdf'",
    "coverage ; extra == 'tests'",
    "pytest ; extra == 'tests'",
    "requests-file ; extra == 'tests'",
    "lxml ; extra == 'xml'"
  ],
  "requires_python": ">=3.7",
  "summary": "easily pick a place to store data for your python package.",
  "version": "0.5.2",
  "releases": [],
  "developers": [
    "charles_tapley_hoyt",
    "cthoyt@gmail.com"
  ],
  "kwds": "pystow pystow_name pystow_home pypi pystow_use_appdirs",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pystow",
  "homepage": "https://github.com/cthoyt/pystow",
  "release_count": 51,
  "dependency_ids": [
    "pypi_boto3",
    "pypi_click",
    "pypi_coverage",
    "pypi_lxml",
    "pypi_pandas",
    "pypi_pickle5",
    "pypi_pytest",
    "pypi_rdflib",
    "pypi_requests",
    "pypi_requests_file",
    "pypi_sphinx",
    "pypi_sphinx_autodoc_typehints",
    "pypi_sphinx_automodapi",
    "pypi_sphinx_click",
    "pypi_sphinx_rtd_theme",
    "pypi_tqdm"
  ]
}
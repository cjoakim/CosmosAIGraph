{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: plugins",
    "framework :: sphinx :: extension",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "typing :: typed"
  ],
  "description": "# sphinxext-altair\n**sphinxext-altair** provides the directive `altair-plot` to insert live-rendered altair plots within your sphinx documentation:\n\n```python\n    .. altair-plot::\n        import altair as alt\n        from vega_datasets import data\n\n\n        cars = data.cars()\n\n        alt.chart(cars).mark_point().encode(\n            x='horsepower',\n            y='miles_per_gallon',\n            color='origin',\n            shape='origin'\n        )\n```\n\n<img src=\"https://raw.githubusercontent.com/altair-viz/sphinxext-altair/main/images/example_screenshot.png\"  width=\"70%\">\n\nyou can enable the extension by adding it to your `conf.py`:\n\n```python\nextensions = [\n    ...\n    \"sphinxext_altair.altairplot\",\n    ...\n]\n```\n\nyou can find all available options in the docstring of `sphinxext_altair/altairplot.py`. for more examples on how to use this extension, see the test sphinx documentation in `tests/roots/test-altairplot` or the official [altair documentation](https://github.com/altair-viz/altair/tree/master/doc).\n\nyou can install the extension with:\n\n```bash\npip install sphinxext-altair\n```\n\n\n# contributing\nit's recommended to use a virtual environment for development:\n\n```bash\npython -m venv .venv\n# install the project in editable mode including development dependencies\npip install -e '.[dev]'\n```\n\n`sphinxext-altair` uses [black](https://github.com/psf/black) for code formatting, [mypy](https://github.com/python/mypy) for static type checking, [ruff](https://github.com/charliermarsh/ruff) for various linting rules, and [pytest](https://github.com/pytest-dev/pytest) for testing. all these tools can be executed by running:\n\n```bash\nhatch run test\n```\n\nas part of those tests, a sphinx documentation is built at `tests/roots/test-altairplot`. you can manually build this documentation and view it which is very useful during development of a new feature. for example, if you want to add a new option to the `altair-plot` directive, you can add another example in the file `tests/roots/test-altairplot/index.rst` and then build and view the documentation by running:\n\n```bash\nhatch run build-test-docs\nhatch run serve-test-docs\n```\n\nthe test documentation can now be viewed at [http://localhost:8000](http://localhost:8000).\n",
  "docs_url": null,
  "keywords": "altair,sphinxext",
  "license": "",
  "name": "sphinxext-altair",
  "package_url": "https://pypi.org/project/sphinxext-altair/",
  "project_url": "https://pypi.org/project/sphinxext-altair/",
  "project_urls": {
    "Source": "https://github.com/altair-viz/sphinxext-altair"
  },
  "release_url": "https://pypi.org/project/sphinxext-altair/0.2.0/",
  "requires_dist": [
    "altair>=4.0.0",
    "docutils",
    "jinja2",
    "sphinx",
    "typing-extensions>=4.0.1; python_version < '3.8'",
    "black<24; extra == 'dev'",
    "hatch; extra == 'dev'",
    "ipython; extra == 'dev'",
    "mypy; extra == 'dev'",
    "pytest; extra == 'dev'",
    "ruff; extra == 'dev'",
    "types-docutils; extra == 'dev'"
  ],
  "requires_python": ">=3.7",
  "summary": "sphinxext-altair: sphinx extension for embedding altair charts",
  "version": "0.2.0",
  "releases": [],
  "developers": [
    "sphinxext"
  ],
  "kwds": "sphinxext_altair altairplot sphinxext sphinx altair",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_sphinxext_altair",
  "homepage": "",
  "release_count": 3,
  "dependency_ids": [
    "pypi_altair",
    "pypi_black",
    "pypi_docutils",
    "pypi_hatch",
    "pypi_ipython",
    "pypi_jinja2",
    "pypi_mypy",
    "pypi_pytest",
    "pypi_ruff",
    "pypi_sphinx",
    "pypi_types_docutils",
    "pypi_typing_extensions"
  ]
}
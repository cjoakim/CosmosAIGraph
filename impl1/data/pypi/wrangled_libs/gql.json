{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries"
  ],
  "description": "# gql\n\nthis is a graphql client for python 3.6+.\nplays nicely with `graphene`, `graphql-core`, `graphql-js` and any other graphql implementation compatible with the spec.\n\ngql architecture is inspired by `react-relay` and `apollo-client`.\n\n[![github-actions][gh-image]][gh-url]\n[![pyversion][pyversion-image]][pyversion-url]\n[![pypi][pypi-image]][pypi-url]\n[![anaconda-server badge][conda-image]][conda-url]\n[![codecov][codecov-image]][codecov-url]\n\n[gh-image]: https://github.com/graphql-python/gql/workflows/tests/badge.svg\n[gh-url]: https://github.com/graphql-python/gql/actions?query=workflow%3atests\n[pyversion-image]: https://img.shields.io/pypi/pyversions/gql\n[pyversion-url]: https://pypi.org/project/gql/\n[pypi-image]: https://img.shields.io/pypi/v/gql.svg?style=flat\n[pypi-url]: https://pypi.org/project/gql/\n[conda-image]: https://img.shields.io/conda/vn/conda-forge/gql.svg\n[conda-url]: https://anaconda.org/conda-forge/gql\n[codecov-image]: https://codecov.io/gh/graphql-python/gql/branch/master/graph/badge.svg\n[codecov-url]: https://codecov.io/gh/graphql-python/gql\n\n## documentation\n\nthe complete documentation for gql can be found at\n[gql.readthedocs.io](https://gql.readthedocs.io).\n\n## features\n\n* execute graphql queries using [different protocols](https://gql.readthedocs.io/en/latest/transports/index.html):\n  * http\n  * websockets:\n    * apollo or graphql-ws protocol\n    * phoenix channels\n    * aws appsync realtime protocol (experimental)\n* possibility to [validate the queries locally](https://gql.readthedocs.io/en/latest/usage/validation.html) using a graphql schema provided locally or fetched from the backend using an instrospection query\n* supports graphql queries, mutations and [subscriptions](https://gql.readthedocs.io/en/latest/usage/subscriptions.html)\n* supports [sync or async usage](https://gql.readthedocs.io/en/latest/async/index.html), [allowing concurrent requests](https://gql.readthedocs.io/en/latest/advanced/async_advanced_usage.html#async-advanced-usage)\n* supports [file uploads](https://gql.readthedocs.io/en/latest/usage/file_upload.html)\n* supports [custom scalars / enums](https://gql.readthedocs.io/en/latest/usage/custom_scalars_and_enums.html)\n* [gql-cli script](https://gql.readthedocs.io/en/latest/gql-cli/intro.html) to execute graphql queries or download schemas from the command line\n* [dsl module](https://gql.readthedocs.io/en/latest/advanced/dsl_module.html) to compose graphql queries dynamically\n\n## installation\n\nyou can install gql with all the optional dependencies using pip:\n\n    pip install gql[all]\n\n> **note**: see also [the documentation](https://gql.readthedocs.io/en/latest/intro.html#less-dependencies) to install gql with less extra dependencies depending on the transports you would like to use or for alternative installation methods.\n\n## usage\n\n### basic usage\n\n```python\nfrom gql import gql, client\nfrom gql.transport.aiohttp import aiohttptransport\n\n# select your transport with a defined url endpoint\ntransport = aiohttptransport(url=\"https://countries.trevorblades.com/\")\n\n# create a graphql client using the defined transport\nclient = client(transport=transport, fetch_schema_from_transport=true)\n\n# provide a graphql query\nquery = gql(\n    \"\"\"\n    query getcontinents {\n      continents {\n        code\n        name\n      }\n    }\n\"\"\"\n)\n\n# execute the query on the transport\nresult = client.execute(query)\nprint(result)\n```\n\nexecuting the above code should output the following result:\n\n```\n$ python basic_example.py\n{'continents': [{'code': 'af', 'name': 'africa'}, {'code': 'an', 'name': 'antarctica'}, {'code': 'as', 'name': 'asia'}, {'code': 'eu', 'name': 'europe'}, {'code': 'na', 'name': 'north america'}, {'code': 'oc', 'name': 'oceania'}, {'code': 'sa', 'name': 'south america'}]}\n```\n\n> **warning**: please note that this basic example won't work if you have an asyncio event loop running. in some\n> python environments (as with jupyter which uses ipython) an asyncio event loop is created for you. in that case you\n> should use instead the [async usage example](https://gql.readthedocs.io/en/latest/async/async_usage.html#async-usage).\n\n## contributing\nsee [contributing.md](contributing.md)\n\n## license\n\n[mit license](https://github.com/graphql-python/gql/blob/master/license)\n\n\n",
  "docs_url": null,
  "keywords": "api graphql protocol rest relay gql client",
  "license": "mit",
  "name": "gql",
  "package_url": "https://pypi.org/project/gql/",
  "project_url": "https://pypi.org/project/gql/",
  "project_urls": {
    "Homepage": "https://github.com/graphql-python/gql"
  },
  "release_url": "https://pypi.org/project/gql/3.4.1/",
  "requires_dist": [
    "graphql-core (<3.3,>=3.2)",
    "yarl (<2.0,>=1.6)",
    "backoff (<3.0,>=1.11.1)",
    "aiohttp (<3.9.0,>=3.7.1) ; extra == 'aiohttp'",
    "aiohttp (<3.9.0,>=3.7.1) ; extra == 'all'",
    "requests (<3,>=2.26) ; extra == 'all'",
    "requests-toolbelt (<1,>=0.9.1) ; extra == 'all'",
    "urllib3 (<2,>=1.26) ; extra == 'all'",
    "botocore (<2,>=1.21) ; extra == 'all'",
    "websockets (<10,>=9) ; (python_version <= \"3.6\") and extra == 'all'",
    "websockets (<11,>=10) ; (python_version > \"3.6\") and extra == 'all'",
    "botocore (<2,>=1.21) ; extra == 'botocore'",
    "aiohttp (<3.9.0,>=3.7.1) ; extra == 'dev'",
    "requests (<3,>=2.26) ; extra == 'dev'",
    "requests-toolbelt (<1,>=0.9.1) ; extra == 'dev'",
    "urllib3 (<2,>=1.26) ; extra == 'dev'",
    "botocore (<2,>=1.21) ; extra == 'dev'",
    "black (==22.3.0) ; extra == 'dev'",
    "check-manifest (<1,>=0.42) ; extra == 'dev'",
    "flake8 (==3.8.1) ; extra == 'dev'",
    "isort (==4.3.21) ; extra == 'dev'",
    "mypy (==0.910) ; extra == 'dev'",
    "sphinx (<4,>=3.0.0) ; extra == 'dev'",
    "sphinx-rtd-theme (<1,>=0.4) ; extra == 'dev'",
    "sphinx-argparse (==0.2.5) ; extra == 'dev'",
    "types-aiofiles ; extra == 'dev'",
    "types-mock ; extra == 'dev'",
    "types-requests ; extra == 'dev'",
    "parse (==1.15.0) ; extra == 'dev'",
    "pytest (==6.2.5) ; extra == 'dev'",
    "pytest-asyncio (==0.16.0) ; extra == 'dev'",
    "pytest-console-scripts (==1.3.1) ; extra == 'dev'",
    "pytest-cov (==3.0.0) ; extra == 'dev'",
    "mock (==4.0.2) ; extra == 'dev'",
    "vcrpy (==4.0.2) ; extra == 'dev'",
    "aiofiles ; extra == 'dev'",
    "websockets (<10,>=9) ; (python_version <= \"3.6\") and extra == 'dev'",
    "websockets (<11,>=10) ; (python_version > \"3.6\") and extra == 'dev'",
    "requests (<3,>=2.26) ; extra == 'requests'",
    "requests-toolbelt (<1,>=0.9.1) ; extra == 'requests'",
    "urllib3 (<2,>=1.26) ; extra == 'requests'",
    "aiohttp (<3.9.0,>=3.7.1) ; extra == 'test'",
    "requests (<3,>=2.26) ; extra == 'test'",
    "requests-toolbelt (<1,>=0.9.1) ; extra == 'test'",
    "urllib3 (<2,>=1.26) ; extra == 'test'",
    "botocore (<2,>=1.21) ; extra == 'test'",
    "parse (==1.15.0) ; extra == 'test'",
    "pytest (==6.2.5) ; extra == 'test'",
    "pytest-asyncio (==0.16.0) ; extra == 'test'",
    "pytest-console-scripts (==1.3.1) ; extra == 'test'",
    "pytest-cov (==3.0.0) ; extra == 'test'",
    "mock (==4.0.2) ; extra == 'test'",
    "vcrpy (==4.0.2) ; extra == 'test'",
    "aiofiles ; extra == 'test'",
    "websockets (<10,>=9) ; (python_version <= \"3.6\") and extra == 'test'",
    "websockets (<11,>=10) ; (python_version > \"3.6\") and extra == 'test'",
    "parse (==1.15.0) ; extra == 'test_no_transport'",
    "pytest (==6.2.5) ; extra == 'test_no_transport'",
    "pytest-asyncio (==0.16.0) ; extra == 'test_no_transport'",
    "pytest-console-scripts (==1.3.1) ; extra == 'test_no_transport'",
    "pytest-cov (==3.0.0) ; extra == 'test_no_transport'",
    "mock (==4.0.2) ; extra == 'test_no_transport'",
    "vcrpy (==4.0.2) ; extra == 'test_no_transport'",
    "aiofiles ; extra == 'test_no_transport'",
    "websockets (<10,>=9) ; (python_version <= \"3.6\") and extra == 'websockets'",
    "websockets (<11,>=10) ; (python_version > \"3.6\") and extra == 'websockets'"
  ],
  "requires_python": "",
  "summary": "graphql client for python",
  "version": "3.4.1",
  "releases": [],
  "developers": [
    "me@syrusakbary.com",
    "syrus_akbary"
  ],
  "kwds": "graphql gql graphene apollo protocols",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_gql",
  "homepage": "https://github.com/graphql-python/gql",
  "release_count": 35,
  "dependency_ids": [
    "pypi_aiofiles",
    "pypi_aiohttp",
    "pypi_backoff",
    "pypi_black",
    "pypi_botocore",
    "pypi_check_manifest",
    "pypi_flake8",
    "pypi_graphql_core",
    "pypi_isort",
    "pypi_mock",
    "pypi_mypy",
    "pypi_parse",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_console_scripts",
    "pypi_pytest_cov",
    "pypi_requests",
    "pypi_requests_toolbelt",
    "pypi_sphinx",
    "pypi_sphinx_argparse",
    "pypi_sphinx_rtd_theme",
    "pypi_types_aiofiles",
    "pypi_types_mock",
    "pypi_types_requests",
    "pypi_urllib3",
    "pypi_vcrpy",
    "pypi_websockets",
    "pypi_yarl"
  ]
}
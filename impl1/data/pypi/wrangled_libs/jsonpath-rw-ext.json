{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4"
  ],
  "description": "===============================\npython-jsonpath-rw-ext\n===============================\n\n.. image:: https://travis-ci.org/sileht/python-jsonpath-rw-ext.png?branch=master\n   :target: https://travis-ci.org/sileht/python-jsonpath-rw-ext\n\n.. image:: https://img.shields.io/pypi/v/jsonpath-rw-ext.svg\n   :target: https://pypi.python.org/pypi/jsonpath-rw-ext/\n   :alt: latest version\n\n.. image:: https://img.shields.io/pypi/dm/jsonpath-rw-ext.svg\n   :target: https://pypi.python.org/pypi/jsonpath-rw-ext/\n   :alt: downloads\n\nextensions for jsonpath rw\n\njsonpath-rw-ext extends json-path-rw capabilities by adding multiple extensions.\n'len' that allows one to get the length of a list. 'sorted' that returns a sorted version\nof a list, 'arithmetic' that permits one to make math operation between elements and\n'filter' to select only certain elements of a list.\n\neach extensions will be proposed `upstream <https://github.com/kennknowles/python-jsonpath-rw>`__\nand will stay here only if they are refused.\n\n* free software: apache license\n* documentation: https://python-jsonpath-rw-ext.readthedocs.org/en/latest/\n* source: http://github.com/sileht/python-jsonpath-rw-ext\n\n\nquick start\n-----------\n\nat the command line::\n\n    $ pip install jsonpath-rw-ext\n\nor, if you have virtualenvwrapper installed::\n\n    $ mkvirtualenv jsonpath-rw-ext\n    $ pip install jsonpath-rw-ext\n\n\nto replace the jsonpath_rw parser by this one with::\n\n    import jsonpath_rw_ext\n    jsonpath_rw_ext.parse(\"$.foo\").find(...)\n\nor::\n\n    from jsonpath_rw_ext import parser\n    parser.extentedjsonpathparser().parse(\"$.foo\").find(...)\n\n\nshortcut functions for getting only the matched values::\n\n    import jsonpath_rw_ext as jp\n    print jp.match('$.cow[*]', {'cow': ['foo', 'bar'], 'fish': 'foobar'})\n    # prints ['foo', 'bar']\n\n    print jp.match1('$.cow[*]', {'cow': ['foo', 'bar'], 'fish': 'foobar'})\n    # prints 'foo'\n\nthe jsonpath classes are not part of the public api, because the name/structure\ncan change when they will be implemented upstream. only the syntax *shouldn't*\nchange.\n\nextensions\n----------\n\n+--------------+----------------------------------------------+\n| name         | example                                      |\n+==============+==============================================+\n| len          | - $.objects.`len`                            |\n+--------------+----------------------------------------------+\n| sub          | - $.field.`sub(/foo\\\\\\\\+(.*)/, \\\\\\\\1)`       |\n+--------------+----------------------------------------------+\n| split        | - $.field.`split(+, 2, -1)`                  |\n|              | - $.field.`split(sep, segement, maxsplit)`   |\n+--------------+----------------------------------------------+\n| sorted       | - $.objects.`sorted`                         |\n|              | - $.objects[\\\\some_field]                    |\n|              | - $.objects[\\\\some_field,/other_field]       |\n+--------------+----------------------------------------------+\n| filter       | - $.objects[?(@some_field > 5)]              |\n|              | - $.objects[?(some_field = \"foobar\")]        |\n|              | - $.objects[?(some_field ~ \"regexp\")]        |\n|              | - $.objects[?(some_field > 5 & other < 2)]   |\n+--------------+----------------------------------------------+\n| arithmetic   | - $.foo + \"_\" + $.bar                        |\n| (-+*/)       | - $.foo * 12                                 |\n|              | - $.objects[*].cow + $.objects[*].cat        |\n+--------------+----------------------------------------------+\n\nabout arithmetic and string\n---------------------------\n\noperations are done with python operators and allows types that python\nallows, and return [] if the operation can be done due to incompatible types.\n\nwhen operators are used, a jsonpath must be be fully defined otherwise\njsonpath-rw-ext can't known if the expression is a string or a jsonpath field,\nin this case it will choice string as type.\n\nexample with data::\n\n    {\n        'cow': 'foo',\n        'fish': 'bar'\n    }\n\n| **cow + fish** returns **cowfish**\n| **$.cow + $.fish** returns **foobar**\n| **$.cow + \"_\" + $.fish** returns **foo_bar**\n| **$.cow + \"_\" + fish** returns **foo_fish**\n\nabout arithmetic and list\n-------------------------\n\narithmetic can be used against two lists if they have the same size.\n\nexample with data::\n\n    {'objects': [\n        {'cow': 2, 'cat': 3},\n        {'cow': 4, 'cat': 6}\n    ]}\n\n| **$.objects[\\*].cow + $.objects[\\*].cat** returns **[6, 9]**\n\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "jsonpath-rw-ext",
  "package_url": "https://pypi.org/project/jsonpath-rw-ext/",
  "project_url": "https://pypi.org/project/jsonpath-rw-ext/",
  "project_urls": {
    "Homepage": "https://github.com/sileht/python-jsonpath-rw-ext"
  },
  "release_url": "https://pypi.org/project/jsonpath-rw-ext/1.2.2/",
  "requires_dist": [
    "jsonpath-rw (>=1.2.0)",
    "pbr (>=1.8)"
  ],
  "requires_python": "",
  "summary": "extensions for jsonpath rw",
  "version": "1.2.2",
  "releases": [],
  "developers": [
    "mehdi_abaakouk",
    "sileht@sileht.net"
  ],
  "kwds": "jsonpath_rw_ext jsonpath_rw jsonpath travis extentedjsonpathparser",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_jsonpath_rw_ext",
  "homepage": "https://github.com/sileht/python-jsonpath-rw-ext",
  "release_count": 17,
  "dependency_ids": [
    "pypi_jsonpath_rw",
    "pypi_pbr"
  ]
}
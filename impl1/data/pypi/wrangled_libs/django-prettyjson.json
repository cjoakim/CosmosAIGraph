{
  "classifiers": [
    "development status :: 3 - alpha",
    "framework :: django",
    "framework :: django :: 1.8",
    "framework :: django :: 1.9",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5"
  ],
  "description": "# django-prettyjson\n\n[![pypi version](https://badge.fury.io/py/django-prettyjson.png)](https://badge.fury.io/py/django-prettyjson) [![build status](https://travis-ci.org/kevinmickey/django-prettyjson.svg?branch=master)](https://travis-ci.org/kevinmickey/django-prettyjson)\n\nenables pretty json viewer in django forms, admin, or templates.  the viewer is adapted from [jquery jsonview](https://github.com/yesmeck/jquery-jsonview).  it is compatible with almost anything: json stored in a string, a jsonfield (using django.contrib.postgres or [django-jsonfield](https://github.com/bradjasper/django-jsonfield/)), or any python object that can be serialized to json (using [standardjson](https://github.com/audreyr/standardjson)).\n\n## demo\n\nsee http://kevinmickey.github.io/django-prettyjson\n\n## installation\n\nat the command line:\n\n```sh\npip install django-prettyjson\n```\n\n## configuration\n\nadd `'prettyjson'` to `installed_apps` in `settings.py`:\n\n```python\ninstalled_apps = (\n  ...,\n  'prettyjson',\n)\n```\n\n## usage\n\nin a form or admin of a model, enable a pretty json viewer for a particular field:\n\n```python\nfrom prettyjson import prettyjsonwidget\n\nclass jsonform(forms.modelform):\n  class meta:\n    model = test\n    fields = '__all__'\n    widgets = {\n      'myjsonfield': prettyjsonwidget(),\n    }\n\nclass jsonadmin(admin.modeladmin):\n  form = jsonform\n```\n\nenable pretty json viewer for every jsonfield of a model:\n\n```python\nfrom django.contrib.postgres.fields import jsonfield\n\nclass jsonadmin(admin.modeladmin):\n  formfield_overrides = {\n    jsonfield: {'widget': prettyjsonwidget }\n  }\n```\n\nin templates, you can also enable a pretty json viewer.  use the `prettyjson` template tag with a string json or with objects (dicts, querysets, etc.) that can be serialized to a json.  note that the template tag must be loaded using `{% load prettyjson %}`.  it also has css and js that must be included using `{% prettyjson_setup %}`.\n\n```htmldjango\n{% extends \"base.html\" %}\n\n{% load prettyjson %}\n\n{% block header %}\n  {{ block.super }}\n  {% prettyjson_setup %}\n{% endblock %}\n\n{% block content %}\n  {% prettyjson myqueryset %}\n  {% prettyjson mydict %}\n  {% prettyjson '{\"hey\": \"guy\",\"anumber\": 243,\"anobject\": {\"whoa\": \"nuts\",\"anarray\": [1,2,\"thr<h1>ee\"], \"more\":\"stuff\"},\"awesome\": true,\"bogus\": false,\"meaning\": null, \"japanese\":\"\u660e\u65e5\u304c\u3042\u308b\u3002\", \"link\": \"http://jsonview.com\", \"notlink\": \"http://jsonview.com is great\"}' %}\n  {% prettyjson '{}' %}\n{% endblock %}\n```\n\nthe setup includes jquery, loaded as django.jquery to avoid namespace conflict.  if your page already includes jquery, use `{% prettyjson_setup jquery=false %}` to avoid loading jquery a second time.\n\n### configure rendering\n\nby default the jsonwidget will render as a raw string with a button to click to change it to parsed json. for it to render as parsed json initially, you can pass an argument:\n\n```python\nclass jsonadmin(admin.modeladmin):\n  formfield_overrides = {\n    jsonfield: {'widget': prettyjsonwidget(attrs={'initial': 'parsed'})}\n  }\n```\n\nor, in a template tag:\n\n```python\n{% prettyjson mydict initial='parsed' %}\n```\n\n## running tests\n\nin development.\n\n```sh\nsource <yourvirtualenv>/bin/activate\n(myenv) $ pip install -r requirements-test.txt\n(myenv) $ python runtests.py\n```\n\n## credits\n\ndependencies, parts of code, and/or sources of inspiration:\n\n* [jquery jsonview](https://github.com/yesmeck/jquery-jsonview)\n* [standardjson](https://github.com/audreyr/standardjson)\n\ntools used in developing, testing, and/or rendering this package:\n\n* [cookiecutter](https://github.com/audreyr/cookiecutter)\n* [cookiecutter-djangopackage](https://github.com/pydanny/cookiecutter-djangopackage)\n\n\n\n\nhistory\n-------\n\n0.1.0 (2016-05-28)\n++++++++++++++++++\n\n* first release.\n\n0.2.0 (2016-05-29)\n++++++++++++++++++\n\n* switched to using standardjson for encoding objects\n* added setup option for those with jquery already loaded\n\n0.2.1 (2016-07-01)\n++++++++++++++++++\n\n* fixed manifest\n\n0.2.2 (2016-12-07)\n++++++++++++++++++\n\n* added dependencies to setup.py\n\n0.3.0 (2017-05-23)\n++++++++++++++++++\n\n* added \"initial\" option to show raw or parsed initial\n* requires six\n\n0.3.1 (2018-04-01)\n++++++++++++++++++\n\n* allows css control of parsed widget\n\n0.3.2 (2018-04-09)\n++++++++++++++++++\n\n* fixes widget media order\n\n0.3.3 (2018-04-13)\n++++++++++++++++++\n\n* fixes string passed as parameter\n\n0.4.0 (2018-04-30)\n++++++++++++++++++\n\n* allows attrs in template tag\n* fix js for initial parsed with multiple widgets\n* change parsed css height to max-height\n\n0.4.1 (2018-08-07)\n++++++++++++++++++\n\n* fix widget for django 2.1\n",
  "docs_url": null,
  "keywords": "django-prettyjson",
  "license": "bsd",
  "name": "django-prettyjson",
  "package_url": "https://pypi.org/project/django-prettyjson/",
  "project_url": "https://pypi.org/project/django-prettyjson/",
  "project_urls": {
    "Homepage": "https://github.com/kevinmickey/django-prettyjson"
  },
  "release_url": "https://pypi.org/project/django-prettyjson/0.4.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "enables pretty json viewer in django forms, admin, or templates",
  "version": "0.4.1",
  "releases": [],
  "developers": [
    "kevin_mickey",
    "kwmickey@gmail.com"
  ],
  "kwds": "prettyjson_setup prettyjsonwidget prettyjson jsonwidget jsonfield",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_django_prettyjson",
  "homepage": "https://github.com/kevinmickey/django-prettyjson",
  "release_count": 10,
  "dependency_ids": []
}
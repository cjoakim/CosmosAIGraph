{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: information technology",
    "intended audience :: manufacturing",
    "intended audience :: telecommunications industry",
    "license :: osi approved :: gnu lesser general public license v3 (lgplv3)",
    "natural language :: english",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: system :: hardware :: hardware drivers",
    "topic :: system :: logging",
    "topic :: system :: monitoring",
    "topic :: system :: networking",
    "topic :: utilities"
  ],
  "description": "python-can\n==========\n\n|pypi| |conda| |python_implementation| |downloads| |downloads_monthly|\n\n|docs| |github-actions| |coverage| |mergify| |formatter|\n\n.. |pypi| image:: https://img.shields.io/pypi/v/python-can.svg\n   :target: https://pypi.python.org/pypi/python-can/\n   :alt: latest version on pypi\n\n.. |conda| image:: https://img.shields.io/conda/v/conda-forge/python-can\n   :target: https://github.com/conda-forge/python-can-feedstock\n   :alt: latest version on conda-forge\n\n.. |python_implementation| image:: https://img.shields.io/pypi/implementation/python-can\n   :target: https://pypi.python.org/pypi/python-can/\n   :alt: supported python implementations\n\n.. |downloads| image:: https://static.pepy.tech/badge/python-can\n   :target: https://pepy.tech/project/python-can\n   :alt: downloads on pepy\n\n.. |downloads_monthly| image:: https://static.pepy.tech/badge/python-can/month\n   :target: https://pepy.tech/project/python-can\n   :alt: monthly downloads on pepy\n\n.. |formatter| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/python/black\n   :alt: this project uses the black formatter.\n\n.. |docs| image:: https://readthedocs.org/projects/python-can/badge/?version=stable\n   :target: https://python-can.readthedocs.io/en/stable/\n   :alt: documentation\n\n.. |github-actions| image:: https://github.com/hardbyte/python-can/actions/workflows/ci.yml/badge.svg\n   :target: https://github.com/hardbyte/python-can/actions/workflows/ci.yml\n   :alt: github actions workflow status\n\n.. |coverage| image:: https://coveralls.io/repos/github/hardbyte/python-can/badge.svg?branch=develop\n   :target: https://coveralls.io/github/hardbyte/python-can?branch=develop\n   :alt: test coverage reports on coveralls.io\n\n.. |mergify| image:: https://img.shields.io/endpoint.svg?url=https://api.mergify.com/v1/badges/hardbyte/python-can&style=flat\n   :target: https://mergify.io\n   :alt: mergify status\n\nthe **c**\\ ontroller **a**\\ rea **n**\\ etwork is a bus standard designed\nto allow microcontrollers and devices to communicate with each other. it\nhas priority based bus arbitration and reliable deterministic\ncommunication. it is used in cars, trucks, boats, wheelchairs and more.\n\nthe ``can`` package provides controller area network support for\npython developers; providing common abstractions to\ndifferent hardware devices, and a suite of utilities for sending and receiving\nmessages on a can bus.\n\nthe library currently supports cpython as well as pypy and runs on mac, linux and windows.\n\n==============================  ===========\nlibrary version                 python\n------------------------------  -----------\n  2.x                           2.6+, 3.4+\n  3.x                           2.7+, 3.5+\n  4.0+                          3.7+\n  4.3+                          3.8+\n==============================  ===========\n\n\nfeatures\n--------\n\n- common abstractions for can communication\n- support for many different backends (see the `docs <https://python-can.readthedocs.io/en/stable/interfaces.html>`__)\n- receiving, sending, and periodically sending messages\n- normal and extended arbitration ids\n- `can fd <https://en.wikipedia.org/wiki/can_fd>`__ support\n- many different loggers and readers supporting playback: asc (canalyzer format), blf (binary logging format by vector), mf4 (measurement data format v4 by asam), trc, csv, sqlite, and canutils log\n- efficient in-kernel or in-hardware filtering of messages on supported interfaces\n- bus configuration reading from a file or from environment variables\n- command line tools for working with can buses (see the `docs <https://python-can.readthedocs.io/en/stable/scripts.html>`__)\n- more\n\n\nexample usage\n-------------\n\n``pip install python-can``\n\n.. code:: python\n\n    # import the library\n    import can\n\n    # create a bus instance using 'with' statement,\n    # this will cause bus.shutdown() to be called on the block exit;\n    # many other interfaces are supported as well (see documentation)\n    with can.bus(interface='socketcan',\n                  channel='vcan0',\n                  receive_own_messages=true) as bus:\n\n       # send a message\n       message = can.message(arbitration_id=123, is_extended_id=true,\n                             data=[0x11, 0x22, 0x33])\n       bus.send(message, timeout=0.2)\n\n       # iterate over received messages\n       for msg in bus:\n           print(f\"{msg.arbitration_id:x}: {msg.data}\")\n\n       # or use an asynchronous notifier\n       notifier = can.notifier(bus, [can.logger(\"recorded.log\"), can.printer()])\n\nyou can find more information in the documentation, online at\n`python-can.readthedocs.org <https://python-can.readthedocs.org/en/stable/>`__.\n\n\ndiscussion\n----------\n\nif you run into bugs, you can file them in our\n`issue tracker <https://github.com/hardbyte/python-can/issues>`__ on github.\n\n`stackoverflow <https://stackoverflow.com/questions/tagged/can+python>`__ has several\nquestions and answers tagged with ``python+can``.\n\nwherever we interact, we strive to follow the\n`python community code of conduct <https://www.python.org/psf/codeofconduct/>`__.\n\n\ncontributing\n------------\n\nsee `doc/development.rst <doc/development.rst>`__ for getting started.\n",
  "docs_url": null,
  "keywords": "",
  "license": "lgpl v3",
  "name": "python-can",
  "package_url": "https://pypi.org/project/python-can/",
  "project_url": "https://pypi.org/project/python-can/",
  "project_urls": {
    "changelog": "https://github.com/hardbyte/python-can/blob/develop/CHANGELOG.md",
    "documentation": "https://python-can.readthedocs.io",
    "homepage": "https://github.com/hardbyte/python-can",
    "repository": "https://github.com/hardbyte/python-can"
  },
  "release_url": "https://pypi.org/project/python-can/4.3.1/",
  "requires_dist": [
    "wrapt ~=1.10",
    "packaging >=23.1",
    "typing-extensions >=3.10.0.0",
    "msgpack ~=1.0.0 ; platform_system != \"Windows\"",
    "pywin32 >=305 ; platform_system == \"Windows\" and platform_python_implementation == \"CPython\"",
    "canalystii >=0.1.0 ; extra == 'canalystii'",
    "python-can-canine >=0.2.2 ; extra == 'canine'",
    "cantact >=0.0.7 ; extra == 'cantact'",
    "python-can-cvector ; extra == 'cvector'",
    "gs-usb >=0.2.1 ; extra == 'gs_usb'",
    "pylint ==2.17.* ; extra == 'lint'",
    "ruff ==0.0.292 ; extra == 'lint'",
    "black ==23.9.* ; extra == 'lint'",
    "mypy ==1.5.* ; extra == 'lint'",
    "asammdf >=6.0.0 ; extra == 'mf4'",
    "filelock ; extra == 'neovi'",
    "python-ics >=2.12 ; extra == 'neovi'",
    "nixnet >=0.3.2 ; extra == 'nixnet'",
    "uptime ~=3.0.1 ; extra == 'pcan'",
    "python-can-remote ; extra == 'remote'",
    "pyserial >=3.0 ; extra == 'seeedstudio'",
    "pyserial ~=3.0 ; extra == 'serial'",
    "python-can-sontheim >=0.1.2 ; extra == 'sontheim'",
    "windows-curses ; (platform_system == \"Windows\" and platform_python_implementation == \"CPython\") and extra == 'viewer'"
  ],
  "requires_python": ">=3.8",
  "summary": "controller area network interface module for python",
  "version": "4.3.1",
  "releases": [],
  "developers": [
    "python"
  ],
  "kwds": "python_implementation pip pypy python cpython",
  "license_kwds": "lgpl v3",
  "libtype": "pypi",
  "id": "pypi_python_can",
  "homepage": "",
  "release_count": 68,
  "dependency_ids": [
    "pypi_asammdf",
    "pypi_black",
    "pypi_canalystii",
    "pypi_cantact",
    "pypi_filelock",
    "pypi_gs_usb",
    "pypi_msgpack",
    "pypi_mypy",
    "pypi_nixnet",
    "pypi_packaging",
    "pypi_pylint",
    "pypi_pyserial",
    "pypi_python_can_canine",
    "pypi_python_can_cvector",
    "pypi_python_can_remote",
    "pypi_python_can_sontheim",
    "pypi_python_ics",
    "pypi_pywin32",
    "pypi_ruff",
    "pypi_typing_extensions",
    "pypi_uptime",
    "pypi_windows_curses",
    "pypi_wrapt"
  ]
}
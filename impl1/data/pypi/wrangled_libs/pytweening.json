{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: macos x",
    "environment :: win32 (ms windows)",
    "environment :: x11 applications",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "pytweening\r\n==========\r\n\r\na collection of tweening / easing functions implemented in python.\r\n\r\nexample usage\r\n=============\r\n\r\nall tweening / easing functions are passed an argument of a float from 0.0 (for the beginning) to 1.0 (for the end) of the tween:\r\n\r\n    >>> pytweening.linear(0.5)\r\n    0.5\r\n    >>> pytweening.linear(0.75)\r\n    0.75\r\n    >>> pytweening.linear(1.0)\r\n    1.0\r\n    >>> pytweening.easeinquad(0.5)\r\n    0.25\r\n    >>> pytweening.easeinquad(0.75)\r\n    0.5625\r\n    >>> pytweening.easeinquad(1.0)\r\n    1.0\r\n    >>> pytweening.easeinoutsine(0.5)\r\n    0.49999999999999994\r\n    >>> pytweening.easeinoutsine(0.75)\r\n    0.8535533905932737\r\n    >>> pytweening.easeinoutsine(1.0)\r\n    1.0\r\n\r\nthe getline() function also provides a bresenham line algorithm implementation:\r\n\r\n    >>> pytweening.getline(0, 0, 5, 10)\r\n    [(0, 0), (0, 1), (1, 2), (1, 3), (2, 4), (2, 5), (3, 6), (3, 7), (4, 8), (4, 9), (5, 10)]\r\n\r\nthe getlinepoint() function finds a point on the provided line (even if it extends before or past the start or end points):\r\n\r\n    >>> getlinepoint(0, 0, 5, 10, 0.0)\r\n    (0.0, 0.0)\r\n    >>> getlinepoint(0, 0, 5, 10, 0.25)\r\n    (1.25, 2.5)\r\n    >>> getlinepoint(0, 0, 5, 10, 0.5)\r\n    (2.5, 5.0)\r\n    >>> getlinepoint(0, 0, 5, 10, 0.75)\r\n    (3.75, 7.5)\r\n    >>> getlinepoint(0, 0, 5, 10, 1.0)\r\n    (5.0, 10.0)\r\n\r\nsupport\r\n-------\r\n\r\nif you find this project helpful and would like to support its development, [consider donating to its creator on patreon](https://www.patreon.com/alsweigart).\r\n",
  "docs_url": null,
  "keywords": "2d animation tween tweening easing",
  "license": "mit",
  "name": "pytweening",
  "package_url": "https://pypi.org/project/pytweening/",
  "project_url": "https://pypi.org/project/pytweening/",
  "project_urls": {
    "Homepage": "https://github.com/asweigart/pytweening"
  },
  "release_url": "https://pypi.org/project/pytweening/1.0.7/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a collection of tweening / easing functions.",
  "version": "1.0.7",
  "releases": [],
  "developers": [
    "al@inventwithpython.com",
    "al_sweigart"
  ],
  "kwds": "pytweening easing tweening animation easeinquad",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytweening",
  "homepage": "https://github.com/asweigart/pytweening",
  "release_count": 7,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6"
  ],
  "description": "grpc-gcp python\n===============\n\npackage for grpc-gcp python.\n\ninstallation\n------------\n\ngrpc-gcp python is available wherever grpc is available.\n\nfrom pypi\n~~~~~~~~~\n\nif you are installing locally...\n\n::\n\n  $ pip install grpcio-gcp\n\nelse system wide (on ubuntu)...\n\n::\n\n  $ sudo pip install grpcio-gcp\n\nusage\n-----\n\ncreate a config file (e.g. ``spanner.grpc.config``) defining api configuration,\nwith channelpoolconfig and methodconfig.\n\n::\n\n  channel_pool: {\n    max_size: 10\n    max_concurrent_streams_low_watermark: 1\n  }\n  method: {\n    name: \"/google.spanner.v1.spanner/createsession\"\n    affinity: {\n      command: bind\n      affinity_key: \"name\"\n    }\n  }\n  method: {\n    name: \"/google.spanner.v1.spanner/getsession\"\n    affinity: {\n      command: bound\n      affinity_key: \"name\"\n    }\n  }\n  method: {\n    name: \"/google.spanner.v1.spanner/deletesession\"\n    affinity: {\n      command: unbind\n      affinity_key: \"name\"\n    }\n  }\n\nload configuration file to apiconfig object.\n\n.. code-block:: python\n\n  import google.protobuf.text_format\n\n  config = grpc_gcp.api_config_from_text_pb(\n      pkg_resources.resource_string(__name__, 'spanner.grpc.config'))\n\ncreate channel pool using grpc_gcp.\n\n.. code-block:: python\n\n  import grpc_gcp\n  import grpc\n\n  credentials = grpc.ssl_channel_credentials()\n  # add api config key-value pair to options\n  options = [(grpc_gcp.api_config_channel_arg, config)]\n  channel_pool = grpc_gcp.secure_channel(target, credentials, options)\n\nthe generated channel pool is inherited from the original grpc.channel,\nwith underlying support for multiple grpc channels.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "grpcio-gcp",
  "package_url": "https://pypi.org/project/grpcio-gcp/",
  "project_url": "https://pypi.org/project/grpcio-gcp/",
  "project_urls": {
    "Homepage": "https://grpc.io"
  },
  "release_url": "https://pypi.org/project/grpcio-gcp/0.2.2/",
  "requires_dist": [
    "grpcio (>=1.12.0)"
  ],
  "requires_python": "",
  "summary": "grpc extensions for google cloud platform",
  "version": "0.2.2",
  "releases": [],
  "developers": [
    "grpc-io@googlegroups.com",
    "the_grpc"
  ],
  "kwds": "grpc_gcp gcp grpc grpcio max_concurrent_streams_low_watermark",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_grpcio_gcp",
  "homepage": "https://grpc.io",
  "release_count": 4,
  "dependency_ids": [
    "pypi_grpcio"
  ]
}
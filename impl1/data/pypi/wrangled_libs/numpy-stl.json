{
  "classifiers": [
    "development status :: 6 - mature",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "library to make reading, writing and modifying both binary and ascii stl files easy.\nnumpy-stl\n==============================================================================\n\n.. image:: https://github.com/wolph/numpy-stl/actions/workflows/main.yml/badge.svg?branch=master\n    :alt: numpy-stl test status \n    :target: https://github.com/wolph/numpy-stl/actions/workflows/main.yml\n\n.. image:: https://ci.appveyor.com/api/projects/status/cbv7ak2i59wf3lpj?svg=true\n    :alt: numpy-stl test status \n    :target: https://ci.appveyor.com/project/wolph/numpy-stl\n\n.. image:: https://badge.fury.io/py/numpy-stl.svg\n    :alt: numpy-stl pypi version \n    :target: https://pypi.python.org/pypi/numpy-stl\n\n.. image:: https://coveralls.io/repos/wolph/numpy-stl/badge.svg?branch=master\n    :alt: numpy-stl code coverage \n    :target: https://coveralls.io/r/wolph/numpy-stl?branch=master\n\n.. image:: https://img.shields.io/pypi/pyversions/numpy-stl.svg\n\nsimple library to make working with stl files (and 3d objects in general) fast\nand easy.\n\ndue to all operations heavily relying on `numpy` this is one of the fastest\nstl editing libraries for python available.\n\nsecurity contact information\n------------------------------------------------------------------------------\n\nto report a security vulnerability, please use the\n`tidelift security contact <https://tidelift.com/security>`_.\ntidelift will coordinate the fix and disclosure.\n\nissues\n------\n\nif you encounter any issues, make sure you report them `here <https://github.com/wolph/numpy-stl/issues>`_. be sure to search for existing issues however. many issues have been covered before.\nwhile this project uses `numpy` as it's main dependency, it is not in any way affiliated to the `numpy` project or the numfocus organisation.\n\nlinks\n-----\n\n - the source: https://github.com/wolph/numpy-stl\n - project page: https://pypi.python.org/pypi/numpy-stl\n - reporting bugs: https://github.com/wolph/numpy-stl/issues\n - documentation: http://numpy-stl.readthedocs.org/en/latest/\n - my blog: https://wol.ph/\n\nrequirements for installing:\n------------------------------------------------------------------------------\n\n - `numpy`_ any recent version\n - `python-utils`_ version 1.6 or greater\n\ninstallation:\n------------------------------------------------------------------------------\n\n`pip install numpy-stl`\n\ninitial usage:\n------------------------------------------------------------------------------\n\nafter installing the package, you should be able to run the following commands\nsimilar to how you can run `pip`.\n\n.. code-block:: shell\n \n   $ stl2bin your_ascii_stl_file.stl new_binary_stl_file.stl\n   $ stl2ascii your_binary_stl_file.stl new_ascii_stl_file.stl\n   $ stl your_ascii_stl_file.stl new_binary_stl_file.stl\n\ncontributing:\n------------------------------------------------------------------------------\n\ncontributions are always welcome. please view the guidelines to get started:\nhttps://github.com/wolph/numpy-stl/blob/develop/contributing.rst\n\nquickstart\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    import numpy\n    from stl import mesh\n\n    # using an existing stl file:\n    your_mesh = mesh.mesh.from_file('some_file.stl')\n\n    # or creating a new mesh (make sure not to overwrite the `mesh` import by\n    # naming it `mesh`):\n    vertice_count = 100\n    data = numpy.zeros(vertice_count, dtype=mesh.mesh.dtype)\n    your_mesh = mesh.mesh(data, remove_empty_areas=false)\n\n    # the mesh normals (calculated automatically)\n    your_mesh.normals\n    # the mesh vectors\n    your_mesh.v0, your_mesh.v1, your_mesh.v2\n    # accessing individual points (concatenation of v0, v1 and v2 in triplets)\n    assert (your_mesh.points[0][0:3] == your_mesh.v0[0]).all()\n    assert (your_mesh.points[0][3:6] == your_mesh.v1[0]).all()\n    assert (your_mesh.points[0][6:9] == your_mesh.v2[0]).all()\n    assert (your_mesh.points[1][0:3] == your_mesh.v0[1]).all()\n\n    your_mesh.save('new_stl_file.stl')\n\nplotting using `matplotlib`_ is equally easy:\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    from stl import mesh\n    from mpl_toolkits import mplot3d\n    from matplotlib import pyplot\n\n    # create a new plot\n    figure = pyplot.figure()\n    axes = figure.add_subplot(projection='3d')\n\n    # load the stl files and add the vectors to the plot\n    your_mesh = mesh.mesh.from_file('tests/stl_binary/halfdonut.stl')\n    axes.add_collection3d(mplot3d.art3d.poly3dcollection(your_mesh.vectors))\n\n    # auto scale to the mesh size\n    scale = your_mesh.points.flatten()\n    axes.auto_scale_xyz(scale, scale, scale)\n\n    # show the plot to the screen\n    pyplot.show()\n\n.. _numpy: http://numpy.org/\n.. _matplotlib: http://matplotlib.org/\n.. _python-utils: https://github.com/wolph/python-utils\n\nexperimental support for reading 3mf files\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    import pathlib\n    import stl\n\n    path = pathlib.path('tests/3mf/moon.3mf')\n\n    # load the 3mf file\n    for m in stl.mesh.from_3mf_file(path):\n        # do something with the mesh\n        print('mesh', m)\n\nnote that this is still experimental and may not work for all 3mf files.\nadditionally it only allows reading 3mf files, not writing them.\n\nmodifying mesh objects\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    from stl import mesh\n    import math\n    import numpy\n\n    # create 3 faces of a cube\n    data = numpy.zeros(6, dtype=mesh.mesh.dtype)\n\n    # top of the cube\n    data['vectors'][0] = numpy.array([[0, 1, 1],\n                                      [1, 0, 1],\n                                      [0, 0, 1]])\n    data['vectors'][1] = numpy.array([[1, 0, 1],\n                                      [0, 1, 1],\n                                      [1, 1, 1]])\n    # front face\n    data['vectors'][2] = numpy.array([[1, 0, 0],\n                                      [1, 0, 1],\n                                      [1, 1, 0]])\n    data['vectors'][3] = numpy.array([[1, 1, 1],\n                                      [1, 0, 1],\n                                      [1, 1, 0]])\n    # left face\n    data['vectors'][4] = numpy.array([[0, 0, 0],\n                                      [1, 0, 0],\n                                      [1, 0, 1]])\n    data['vectors'][5] = numpy.array([[0, 0, 0],\n                                      [0, 0, 1],\n                                      [1, 0, 1]])\n\n    # since the cube faces are from 0 to 1 we can move it to the middle by\n    # substracting .5\n    data['vectors'] -= .5\n\n    # generate 4 different meshes so we can rotate them later\n    meshes = [mesh.mesh(data.copy()) for _ in range(4)]\n\n    # rotate 90 degrees over the y axis\n    meshes[0].rotate([0.0, 0.5, 0.0], math.radians(90))\n\n    # translate 2 points over the x axis\n    meshes[1].x += 2\n\n    # rotate 90 degrees over the x axis\n    meshes[2].rotate([0.5, 0.0, 0.0], math.radians(90))\n    # translate 2 points over the x and y points\n    meshes[2].x += 2\n    meshes[2].y += 2\n\n    # rotate 90 degrees over the x and y axis\n    meshes[3].rotate([0.5, 0.0, 0.0], math.radians(90))\n    meshes[3].rotate([0.0, 0.5, 0.0], math.radians(90))\n    # translate 2 points over the y axis\n    meshes[3].y += 2\n\n\n    # optionally render the rotated cube faces\n    from matplotlib import pyplot\n    from mpl_toolkits import mplot3d\n\n    # create a new plot\n    figure = pyplot.figure()\n    axes = figure.add_subplot(projection='3d')\n\n    # render the cube faces\n    for m in meshes:\n        axes.add_collection3d(mplot3d.art3d.poly3dcollection(m.vectors))\n\n    # auto scale to the mesh size\n    scale = numpy.concatenate([m.points for m in meshes]).flatten()\n    axes.auto_scale_xyz(scale, scale, scale)\n\n    # show the plot to the screen\n    pyplot.show()\n\nextending mesh objects\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    from stl import mesh\n    import math\n    import numpy\n\n    # create 3 faces of a cube\n    data = numpy.zeros(6, dtype=mesh.mesh.dtype)\n\n    # top of the cube\n    data['vectors'][0] = numpy.array([[0, 1, 1],\n                                      [1, 0, 1],\n                                      [0, 0, 1]])\n    data['vectors'][1] = numpy.array([[1, 0, 1],\n                                      [0, 1, 1],\n                                      [1, 1, 1]])\n    # front face\n    data['vectors'][2] = numpy.array([[1, 0, 0],\n                                      [1, 0, 1],\n                                      [1, 1, 0]])\n    data['vectors'][3] = numpy.array([[1, 1, 1],\n                                      [1, 0, 1],\n                                      [1, 1, 0]])\n    # left face\n    data['vectors'][4] = numpy.array([[0, 0, 0],\n                                      [1, 0, 0],\n                                      [1, 0, 1]])\n    data['vectors'][5] = numpy.array([[0, 0, 0],\n                                      [0, 0, 1],\n                                      [1, 0, 1]])\n\n    # since the cube faces are from 0 to 1 we can move it to the middle by\n    # substracting .5\n    data['vectors'] -= .5\n\n    cube_back = mesh.mesh(data.copy())\n    cube_front = mesh.mesh(data.copy())\n\n    # rotate 90 degrees over the x axis followed by the y axis followed by the\n    # x axis\n    cube_back.rotate([0.5, 0.0, 0.0], math.radians(90))\n    cube_back.rotate([0.0, 0.5, 0.0], math.radians(90))\n    cube_back.rotate([0.5, 0.0, 0.0], math.radians(90))\n\n    cube = mesh.mesh(numpy.concatenate([\n        cube_back.data.copy(),\n        cube_front.data.copy(),\n    ]))\n\n    # optionally render the rotated cube faces\n    from matplotlib import pyplot\n    from mpl_toolkits import mplot3d\n\n    # create a new plot\n    figure = pyplot.figure()\n    axes = figure.add_subplot(projection='3d')\n\n    # render the cube\n    axes.add_collection3d(mplot3d.art3d.poly3dcollection(cube.vectors))\n\n    # auto scale to the mesh size\n    scale = cube_back.points.flatten()\n    axes.auto_scale_xyz(scale, scale, scale)\n\n    # show the plot to the screen\n    pyplot.show()\n\ncreating mesh objects from a list of vertices and faces\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    import numpy as np\n    from stl import mesh\n\n    # define the 8 vertices of the cube\n    vertices = np.array([\\\n        [-1, -1, -1],\n        [+1, -1, -1],\n        [+1, +1, -1],\n        [-1, +1, -1],\n        [-1, -1, +1],\n        [+1, -1, +1],\n        [+1, +1, +1],\n        [-1, +1, +1]])\n    # define the 12 triangles composing the cube\n    faces = np.array([\\\n        [0,3,1],\n        [1,3,2],\n        [0,4,7],\n        [0,7,3],\n        [4,5,6],\n        [4,6,7],\n        [5,1,2],\n        [5,2,6],\n        [2,3,6],\n        [3,7,6],\n        [0,1,5],\n        [0,5,4]])\n\n    # create the mesh\n    cube = mesh.mesh(np.zeros(faces.shape[0], dtype=mesh.mesh.dtype))\n    for i, f in enumerate(faces):\n        for j in range(3):\n            cube.vectors[i][j] = vertices[f[j],:]\n\n    # write the mesh to file \"cube.stl\"\n    cube.save('cube.stl')\n\n\nevaluating mesh properties (volume, center of gravity, inertia)\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    import numpy as np\n    from stl import mesh\n\n    # using an existing closed stl file:\n    your_mesh = mesh.mesh.from_file('some_file.stl')\n\n    volume, cog, inertia = your_mesh.get_mass_properties()\n    print(\"volume                                  = {0}\".format(volume))\n    print(\"position of the center of gravity (cog) = {0}\".format(cog))\n    print(\"inertia matrix at expressed at the cog  = {0}\".format(inertia[0,:]))\n    print(\"                                          {0}\".format(inertia[1,:]))\n    print(\"                                          {0}\".format(inertia[2,:]))\n\ncombining multiple stl files\n------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    import math\n    import stl\n    from stl import mesh\n    import numpy\n\n\n    # find the max dimensions, so we can know the bounding box, getting the height,\n    # width, length (because these are the step size)...\n    def find_mins_maxs(obj):\n        minx = obj.x.min()\n        maxx = obj.x.max()\n        miny = obj.y.min()\n        maxy = obj.y.max()\n        minz = obj.z.min()\n        maxz = obj.z.max()\n        return minx, maxx, miny, maxy, minz, maxz\n\n\n    def translate(_solid, step, padding, multiplier, axis):\n        if 'x' == axis:\n            items = 0, 3, 6\n        elif 'y' == axis:\n            items = 1, 4, 7\n        elif 'z' == axis:\n            items = 2, 5, 8\n        else:\n            raise runtimeerror('unknown axis %r, expected x, y or z' % axis)\n\n        # _solid.points.shape == [:, ((x, y, z), (x, y, z), (x, y, z))]\n        _solid.points[:, items] += (step * multiplier) + (padding * multiplier)\n\n\n    def copy_obj(obj, dims, num_rows, num_cols, num_layers):\n        w, l, h = dims\n        copies = []\n        for layer in range(num_layers):\n            for row in range(num_rows):\n                for col in range(num_cols):\n                    # skip the position where original being copied is\n                    if row == 0 and col == 0 and layer == 0:\n                        continue\n                    _copy = mesh.mesh(obj.data.copy())\n                    # pad the space between objects by 10% of the dimension being\n                    # translated\n                    if col != 0:\n                        translate(_copy, w, w / 10., col, 'x')\n                    if row != 0:\n                        translate(_copy, l, l / 10., row, 'y')\n                    if layer != 0:\n                        translate(_copy, h, h / 10., layer, 'z')\n                    copies.append(_copy)\n        return copies\n\n    # using an existing stl file:\n    main_body = mesh.mesh.from_file('ball_and_socket_simplified_-_main_body.stl')\n\n    # rotate along y\n    main_body.rotate([0.0, 0.5, 0.0], math.radians(90))\n\n    minx, maxx, miny, maxy, minz, maxz = find_mins_maxs(main_body)\n    w1 = maxx - minx\n    l1 = maxy - miny\n    h1 = maxz - minz\n    copies = copy_obj(main_body, (w1, l1, h1), 2, 2, 1)\n\n    # i wanted to add another related stl to the final stl\n    twist_lock = mesh.mesh.from_file('ball_and_socket_simplified_-_twist_lock.stl')\n    minx, maxx, miny, maxy, minz, maxz = find_mins_maxs(twist_lock)\n    w2 = maxx - minx\n    l2 = maxy - miny\n    h2 = maxz - minz\n    translate(twist_lock, w1, w1 / 10., 3, 'x')\n    copies2 = copy_obj(twist_lock, (w2, l2, h2), 2, 2, 1)\n    combined = mesh.mesh(numpy.concatenate([main_body.data, twist_lock.data] +\n                                        [copy.data for copy in copies] +\n                                        [copy.data for copy in copies2]))\n\n    combined.save('combined.stl', mode=stl.mode.ascii)  # save as ascii\n\nknown limitations\n------------------------------------------------------------------------------\n\n - when speedups are enabled the stl name is automatically converted to\n   lowercase.\n",
  "docs_url": "https://pythonhosted.org/numpy-stl/",
  "keywords": "",
  "license": "bsd",
  "name": "numpy-stl",
  "package_url": "https://pypi.org/project/numpy-stl/",
  "project_url": "https://pypi.org/project/numpy-stl/",
  "project_urls": {
    "Homepage": "https://github.com/WoLpH/numpy-stl/"
  },
  "release_url": "https://pypi.org/project/numpy-stl/3.1.1/",
  "requires_dist": [
    "numpy",
    "python-utils >=3.4.5"
  ],
  "requires_python": ">3.6.0",
  "summary": "library to make reading, writing and modifying both binary and ascii stl files easy.",
  "version": "3.1.1",
  "releases": [],
  "developers": [
    "rick_van_hattem",
    "wolph@wol.ph"
  ],
  "kwds": "badge pyversions vertice_count numpy _numpy",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_numpy_stl",
  "homepage": "https://github.com/wolph/numpy-stl/",
  "release_count": 67,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_python_utils"
  ],
  "documentation_summary": "The HTML text is a PyPI (Python Package Index) page for the `numpy-stl` library, version 3.1.1, released on November 19, 2023. This library simplifies reading, writing, and modifying both binary and ASCII STL (Stereolithography) files, heavily relying on numpy for fast operations, making it one of the quickest STL editing libraries available for Python. It requires Python version 3.6.0 or higher and is licensed under the BSD License. The library is developed by Rick van Hattem and is OS independent. It offers features like creating new meshes, modifying existing ones, evaluating mesh properties like volume and center of gravity, and combining multiple STL files. Experimental support for reading 3MF files is also mentioned, though it's still in development and limited to reading files. The page includes installation instructions, initial usage examples, and information on contributing to the project.",
  "embedding": [
    -0.013074910268187523,
    0.0036518366541713476,
    -0.007212289143353701,
    -0.05148421600461006,
    0.009546090848743916,
    0.013320943340659142,
    -0.016111664474010468,
    -0.021355686709284782,
    -0.02329583466053009,
    -0.021763399243354797,
    0.023000596091151237,
    0.002209027297794819,
    -0.02794937789440155,
    0.016997383907437325,
    0.002059649908915162,
    -0.008301865309476852,
    0.01252660807222128,
    -0.015760187059640884,
    0.004941754043102264,
    -0.011380795389413834,
    0.0021861812565475702,
    0.009166496805846691,
    -0.012617991305887699,
    0.010396663099527359,
    -0.014199634082615376,
    0.02106044813990593,
    0.01819240301847458,
    -0.02229764312505722,
    0.005971578881144524,
    -0.0013566977577283978,
    0.028933512046933174,
    -0.018867235630750656,
    -0.03933720290660858,
    -0.01426289975643158,
    -0.019907604902982712,
    -0.01604136824607849,
    0.025151629000902176,
    -0.01430507656186819,
    0.03351676091551781,
    -0.019148416817188263,
    0.019977901130914688,
    -0.0059223719872534275,
    0.0005729060503654182,
    -0.017419155687093735,
    -0.022213289514183998,
    0.016210077330470085,
    0.0145792281255126,
    -0.00190148560795933,
    -0.03036753460764885,
    -0.010326367802917957,
    0.018600115552544594,
    0.021397864446043968,
    0.004709779750555754,
    -0.019513951614499092,
    0.008252658881247044,
    -0.008807990700006485,
    0.0030068778432905674,
    3.0671781132696196e-05,
    0.00031259405659511685,
    -0.00594346085563302,
    0.00685026915743947,
    0.008695518597960472,
    -0.018923472613096237,
    -0.0011625072220340371,
    -0.011570592410862446,
    -0.025489045307040215,
    -0.007444263435900211,
    0.01803775317966938,
    0.0035797839518636465,
    -0.012730464339256287,
    0.03694716840982437,
    0.027148013934493065,
    -0.010284190066158772,
    0.0030191796831786633,
    0.044342223554849625,
    -0.006593691650778055,
    -0.008449485525488853,
    0.0164631400257349,
    -0.015310298651456833,
    -0.029355283826589584,
    0.0013320944271981716,
    -0.0259811133146286,
    0.0016255768714472651,
    0.030198825523257256,
    0.03523196280002594,
    0.010445869527757168,
    -0.011950187385082245,
    0.021130742505192757,
    -0.008407307788729668,
    0.010762197896838188,
    0.024040965363383293,
    0.019682660698890686,
    0.005992667283862829,
    0.0011906252475455403,
    -0.014649523422122002,
    0.02771037444472313,
    -0.01966860145330429,
    0.009068083018064499,
    -0.01222433801740408,
    -0.009820242412388325,
    0.0014340224443003535,
    0.0014682913897559047,
    0.0008615557453595102,
    -0.005577925592660904,
    -0.042373958975076675,
    -0.0043899365700781345,
    0.02519380673766136,
    -0.003975194413214922,
    0.018754763528704643,
    0.004787104204297066,
    -0.02761196158826351,
    0.0197951328009367,
    -0.005054226145148277,
    -0.02855391800403595,
    0.021946167573332787,
    -0.004864429123699665,
    0.013510741293430328,
    0.0054057021625339985,
    -0.0179815161973238,
    -0.006108654662966728,
    0.005679853726178408,
    0.003249396337196231,
    0.010038156993687153,
    -0.0026958216913044453,
    0.009419559501111507,
    0.012463342398405075,
    -0.00808394979685545,
    -0.002469119615852833,
    -0.03852177783846855,
    -0.03433218598365784,
    0.026360707357525826,
    -0.0030226942617446184,
    -0.004509438294917345,
    -0.004425083752721548,
    -0.004611366428434849,
    -0.018557937815785408,
    -0.0020965549629181623,
    -0.015155648812651634,
    -0.037453293800354004,
    -0.027358898892998695,
    0.008716607466340065,
    0.01942959800362587,
    -0.022100817412137985,
    0.002919008955359459,
    -0.03331993147730827,
    0.031323548406362534,
    0.03208273649215698,
    -0.01876882277429104,
    -0.004446172621101141,
    -0.013630243018269539,
    -0.0027292119339108467,
    -0.01837516948580742,
    -0.002824110444635153,
    0.02695118635892868,
    -0.032167091965675354,
    0.007022492121905088,
    -0.00020319710893090814,
    0.008807990700006485,
    -0.01501505821943283,
    -0.01635066792368889,
    -0.009553120471537113,
    0.00685026915743947,
    -0.005957519635558128,
    -0.02655753307044506,
    0.006235186010599136,
    0.025362513959407806,
    -0.009841330349445343,
    -0.026459120213985443,
    -0.03916849568486214,
    -0.00992568489164114,
    0.011802567169070244,
    -0.007943359203636646,
    -0.035485025495290756,
    -0.014227752573788166,
    0.02647317945957184,
    0.028680449351668358,
    0.0002047348243650049,
    0.014108249917626381,
    -0.0259811133146286,
    0.007528617978096008,
    0.026206057518720627,
    -0.006818636320531368,
    0.011240205727517605,
    0.0456356555223465,
    -0.008329982869327068,
    -0.012139984406530857,
    0.02728860452771187,
    -0.0014384158421307802,
    -0.012969467788934708,
    0.020835502073168755,
    0.02692306786775589,
    0.02634664811193943,
    -0.01653343439102173,
    -0.030592478811740875,
    -0.5794575214385986,
    -0.014171515591442585,
    -0.01598513312637806,
    -0.032167091965675354,
    0.0012266515986993909,
    -0.0006743947742506862,
    -0.0069240787997841835,
    0.004657058045268059,
    -0.03450089320540428,
    0.024982919916510582,
    -0.020132550969719887,
    0.029777053743600845,
    0.03275757282972336,
    -0.01845952495932579,
    -0.012920261360704899,
    -0.016786498948931694,
    0.005644706077873707,
    -0.03278569132089615,
    -0.0197951328009367,
    0.007830887101590633,
    -0.02831491455435753,
    0.046338606625795364,
    -0.0021949682850390673,
    0.007521588355302811,
    0.010944965295493603,
    0.01746133156120777,
    0.019134357571601868,
    -0.0027450283523648977,
    0.0062000383622944355,
    0.0054759974591434,
    -0.028596093878149986,
    0.020202845335006714,
    -0.016716202720999718,
    -0.006414438597857952,
    0.04732273891568184,
    0.020160667598247528,
    -0.029692700132727623,
    0.06304074823856354,
    0.03157661110162735,
    -0.002173879649490118,
    0.0021053417585790157,
    -0.030648715794086456,
    -0.0048573995009064674,
    0.014312106184661388,
    0.025207865983247757,
    -0.013609154149889946,
    0.01474793627858162,
    0.011788507923483849,
    -0.015914836898446083,
    -0.039449676871299744,
    0.005461938213557005,
    -0.013496682047843933,
    0.029805172234773636,
    -0.0126882866024971,
    0.02121509611606598,
    -0.009721828624606133,
    0.038296833634376526,
    0.0008769328705966473,
    0.014424578286707401,
    -0.02692306786775589,
    0.01734885945916176,
    -0.0010447626700624824,
    0.01100120134651661,
    -0.008421367034316063,
    -0.009756975807249546,
    0.01247740164399147,
    -0.01374974474310875,
    -0.03374170511960983,
    -0.022381996735930443,
    -0.027330780401825905,
    0.0009314116323366761,
    -0.0012398319086059928,
    0.013363121077418327,
    -0.004776560235768557,
    0.03166096657514572,
    0.09526407718658447,
    0.023816019296646118,
    0.026177939027547836,
    0.011008230969309807,
    0.019724838435649872,
    0.026037348434329033,
    0.0042423163540661335,
    -0.012639080174267292,
    -0.041108641773462296,
    0.041108641773462296,
    0.014649523422122002,
    0.004537556320428848,
    0.0013654845533892512,
    0.016266314312815666,
    0.000770171987824142,
    -0.014171515591442585,
    0.01879694126546383,
    -0.020498085767030716,
    -0.05550510436296463,
    0.007152538280934095,
    0.006702648941427469,
    -0.01374974474310875,
    0.015507125295698643,
    0.0003141317574772984,
    -0.01716609299182892,
    -0.037509527057409286,
    -0.0003413711383473128,
    0.001455110963433981,
    -0.016941146925091743,
    -0.00520536070689559,
    0.03309498727321625,
    -0.025643695145845413,
    0.009342234581708908,
    0.009960832074284554,
    -0.004284493625164032,
    -0.00862522330135107,
    -0.026726242154836655,
    -0.013363121077418327,
    -0.022860005497932434,
    -0.015872661024332047,
    -0.025854581966996193,
    0.02610764466226101,
    -0.004193109925836325,
    -0.0011510842014104128,
    4.238993824401405e-06,
    0.010108452290296555,
    -0.012758581899106503,
    0.009981920942664146,
    0.005816929508000612,
    0.015436829999089241,
    0.002370706293731928,
    0.022283583879470825,
    -0.01519782654941082,
    -0.05305882915854454,
    0.016913030296564102,
    0.019738897681236267,
    0.009061053395271301,
    0.029074102640151978,
    -0.025699932128190994,
    0.012667198665440083,
    0.005194816738367081,
    0.011008230969309807,
    0.007943359203636646,
    0.009546090848743916,
    -0.02377384342253208,
    -0.006449586246162653,
    0.008829079568386078,
    0.021552514284849167,
    -0.030283179134130478,
    -0.01146514993160963,
    -0.020174726843833923,
    0.0008804476237855852,
    0.02432214468717575,
    0.018543878570199013,
    -0.016420962288975716,
    -0.04692908748984337,
    -0.02048402652144432,
    -0.036665987223386765,
    0.00602781493216753,
    0.006312510464340448,
    0.018445465713739395,
    -0.0010676085948944092,
    -0.02958022803068161,
    -0.026065466925501823,
    -0.01716609299182892,
    -0.01247740164399147,
    0.0005979486741125584,
    -0.00043473197729326785,
    0.0007688539335504174,
    -0.03368546813726425,
    0.004059548955410719,
    -0.030901778489351273,
    0.006136772688478231,
    -0.008055832237005234,
    -0.034669600427150726,
    0.00591534236446023,
    -0.01653343439102173,
    -0.009314116090536118,
    0.009939744137227535,
    0.0024515457917004824,
    0.013004614971578121,
    -0.021735280752182007,
    -0.010157658718526363,
    -0.0024761490058153868,
    0.010628636926412582,
    -0.008119097910821438,
    0.004664087668061256,
    -0.030986132100224495,
    -0.007268525660037994,
    0.011584651656448841,
    0.029636463150382042,
    0.012709375470876694,
    0.010628636926412582,
    0.0043583037331700325,
    0.01604136824607849,
    0.00669210497289896,
    -0.0038275746628642082,
    -0.008147215470671654,
    0.0015544029884040356,
    -0.01930306665599346,
    0.0022986535914242268,
    -0.00862522330135107,
    -0.0035130034666508436,
    0.005982122849673033,
    0.02314118482172489,
    0.005194816738367081,
    0.03635668754577637,
    0.005894253961741924,
    0.004734382964670658,
    0.017081737518310547,
    -0.021130742505192757,
    0.014874468557536602,
    -0.005911828018724918,
    -0.0017608952475711703,
    0.003456767415627837,
    0.021468158811330795,
    -0.008322954177856445,
    -0.026698123663663864,
    -0.008885315619409084,
    0.027626020833849907,
    0.013377180323004723,
    0.013299855403602123,
    0.0022107847034931183,
    -0.00017837411724030972,
    0.03528819978237152,
    -0.009714799001812935,
    -0.0019735381938517094,
    0.008815020322799683,
    0.0068151215091347694,
    -0.005078829359263182,
    0.008161274716258049,
    0.01643502153456211,
    -0.017025502398610115,
    0.01036151498556137,
    -0.02834303118288517,
    0.004818737041205168,
    0.004723838530480862,
    0.003143953625112772,
    -0.032167091965675354,
    0.035878680646419525,
    0.020596498623490334,
    0.059722818434238434,
    -0.019106240943074226,
    0.006013755686581135,
    -0.027091776952147484,
    0.0024163981433957815,
    0.002795992186293006,
    0.03205461800098419,
    -0.01964048482477665,
    0.0091383783146739,
    0.02111668325960636,
    0.03601926937699318,
    0.024856388568878174,
    -0.020441848784685135,
    0.007823857478797436,
    -0.007275555282831192,
    0.011725242249667645,
    -0.027780670672655106,
    0.012196220457553864,
    0.020259082317352295,
    -0.019373362883925438,
    -0.007711385376751423,
    0.01564771495759487,
    0.05213093385100365,
    -0.006193008739501238,
    0.009778064675629139,
    0.004161477088928223,
    0.014466756023466587,
    0.022199230268597603,
    0.037509527057409286,
    -0.018501700833439827,
    -0.0031808586791157722,
    -0.01942959800362587,
    -0.0029523991979658604,
    -0.002462089993059635,
    -0.046451080590486526,
    -0.018304875120520592,
    -0.01460734661668539,
    -0.01619601808488369,
    0.03483831137418747,
    -0.006428497843444347,
    0.008962640538811684,
    0.041530415415763855,
    0.0033126622438430786,
    -0.001905000419355929,
    -0.01031933818012476,
    -0.03877484053373337,
    0.011683065444231033,
    0.003029723884537816,
    0.003570997156202793,
    0.014438637532293797,
    -0.020371554419398308,
    0.01242116466164589,
    -0.0021053417585790157,
    0.001512225833721459,
    0.02658565156161785,
    0.008751754648983479,
    0.00811206828802824,
    0.02111668325960636,
    -0.028933512046933174,
    0.004063063766807318,
    0.017320740967988968,
    -0.015254062600433826,
    0.018867235630750656,
    -0.007184171117842197,
    0.02229764312505722,
    -0.015085353516042233,
    0.01637878641486168,
    0.009707769379019737,
    0.04659166932106018,
    -0.011261293664574623,
    0.010340426117181778,
    -0.0035358495078980923,
    -0.0014278716407716274,
    -0.035794325172901154,
    0.01824863813817501,
    -0.016392845660448074,
    -0.04853181913495064,
    0.010769227519631386,
    0.013609154149889946,
    -0.012779670767486095,
    0.004330185241997242,
    0.0024234275333583355,
    0.03042376972734928,
    -0.016125723719596863,
    -0.0001617888337932527,
    -0.015464947558939457,
    -0.016870852559804916,
    0.016139782965183258,
    0.018150225281715393,
    0.0026975790970027447,
    0.017714394256472588,
    0.006266818847507238,
    -0.04054628312587738,
    -0.021257273852825165,
    -0.016674024984240532,
    0.0127656115218997,
    0.0018610658589750528,
    0.004477805458009243,
    0.0033284786622971296,
    -0.0034427084028720856,
    0.02345048449933529,
    0.01788310334086418,
    0.022016461938619614,
    0.015310298651456833,
    0.009180555120110512,
    0.00031676783692091703,
    -0.01293431967496872,
    -0.014073102734982967,
    -0.005518174730241299,
    0.014234781265258789,
    0.02613576129078865,
    0.018811000511050224,
    0.04670414328575134,
    -0.0033601114992052317,
    0.004808193072676659,
    0.011183968745172024,
    -0.017995575442910194,
    -0.013735685497522354,
    -0.0006717586657032371,
    0.014248840510845184,
    0.009623415768146515,
    0.03244827315211296,
    -0.015718011185526848,
    0.012090777046978474,
    0.021130742505192757,
    -0.0014753208961337805,
    -0.007296643685549498,
    0.003546393709257245,
    0.03520384430885315,
    -0.0015025603352114558,
    -0.0047273533418774605,
    0.02997388131916523,
    -0.018867235630750656,
    -0.017728453502058983,
    0.02271941490471363,
    0.01643502153456211,
    -0.035063255578279495,
    -0.008414337411522865,
    0.020146610215306282,
    -0.02958022803068161,
    -0.019232772290706635,
    -0.03253262862563133,
    0.023984728381037712,
    -0.0016528163105249405,
    -0.005303774029016495,
    -0.02006225474178791,
    0.014944762922823429,
    -0.02429402805864811,
    0.0034216197673231363,
    -0.008709577843546867,
    0.03253262862563133,
    -0.015422770753502846,
    -0.007577824406325817,
    -0.005075314547866583,
    -0.021172920241951942,
    0.029805172234773636,
    -0.02955210953950882,
    0.00034159081405960023,
    -0.001441930653527379,
    -0.016913030296564102,
    -0.014424578286707401,
    -0.00433721486479044,
    0.02021690458059311,
    -0.006178949493914843,
    0.027668198570609093,
    0.017503509297966957,
    -0.016674024984240532,
    -0.0024796638172119856,
    0.001410297816619277,
    -0.028230559080839157,
    -0.011338618583977222,
    -0.04493270441889763,
    0.037846945226192474,
    -0.016716202720999718,
    0.00030292844166979194,
    0.01580236479640007,
    -0.011992364190518856,
    0.02634664811193943,
    0.01919059455394745,
    0.021960226818919182,
    -0.026627829298377037,
    -0.0371721126139164,
    -0.005820443853735924,
    0.014122309163212776,
    0.0011545990128070116,
    0.023281775414943695,
    -0.0027133955154567957,
    0.018754763528704643,
    -0.012364928610622883,
    -0.01834705099463463,
    -0.005820443853735924,
    -0.011380795389413834,
    -0.012386017479002476,
    -0.011851773597300053,
    -0.0035007018595933914,
    0.022185171023011208,
    -0.007978507317602634,
    0.010354485362768173,
    0.011563563719391823,
    -0.005061255767941475,
    -0.005700942128896713,
    0.018712587654590607,
    -0.034247830510139465,
    0.022410115227103233,
    -0.0074020866304636,
    0.0371721126139164,
    0.015535242855548859,
    0.0012855237582698464,
    0.006994374096393585,
    -0.03998392075300217,
    0.006649927701801062,
    0.00953203160315752,
    0.0066534425131976604,
    0.005089373793452978,
    -0.009693710133433342,
    -0.021552514284849167,
    -0.018318934366106987,
    0.03739705681800842,
    0.015844542533159256,
    0.007739503402262926,
    -0.02634664811193943,
    -0.00933520495891571,
    -0.013489652425050735,
    0.004667602479457855,
    -0.011816626414656639,
    0.019021885469555855,
    -0.00394356157630682,
    -0.0311267226934433,
    0.011078526265919209,
    -0.004347759298980236,
    -0.005887224338948727,
    -0.026177939027547836,
    -0.022100817412137985,
    -0.01580236479640007,
    -0.01521188486367464,
    0.0127656115218997,
    -0.026360707357525826,
    0.04616989940404892,
    -0.003806486027315259,
    -0.012245426885783672,
    -0.005187787115573883,
    -0.04133358970284462,
    -0.006526911165565252,
    -0.016716202720999718,
    -0.01296243816614151,
    -0.010748138651251793,
    0.029777053743600845,
    0.02224140614271164,
    0.030929895117878914,
    0.008105038665235043,
    0.015029117465019226,
    0.0018434920348227024,
    -0.0023021684028208256,
    0.014333195053040981,
    -0.002303925808519125,
    -0.0007376604480668902,
    -0.0011932613560929894,
    0.023000596091151237,
    0.02250852808356285,
    0.026670005172491074,
    0.013707567937672138,
    0.006305480841547251,
    -0.018079930916428566,
    0.0320264995098114,
    0.011162880808115005,
    -0.009391441009938717,
    -0.01945771649479866,
    -0.03253262862563133,
    -0.017123915255069733,
    -0.0049066063947975636,
    0.00527917081490159,
    0.012048600241541862,
    -0.0429082028567791,
    -0.025446869432926178,
    0.026431001722812653,
    -0.011774448677897453,
    0.017784690484404564,
    0.010572400875389576,
    -0.0029594285879284143,
    -0.0030947469640523195,
    0.006516366731375456,
    0.028638271614909172,
    0.019907604902982712,
    -0.02184775285422802,
    0.010038156993687153,
    -0.030929895117878914,
    0.008196422830224037,
    0.0008171818917617202,
    0.00047229600022546947,
    0.002855743281543255,
    -0.0015192553400993347,
    0.005296744871884584,
    -0.021313510835170746,
    0.023253658786416054,
    -0.006885416805744171,
    -0.00393653241917491,
    0.021229155361652374,
    -0.018712587654590607,
    0.002516568871214986,
    -0.014874468557536602,
    -0.037481408566236496,
    -0.03559749945998192,
    -0.018740704283118248,
    -0.009771035052835941,
    0.01837516948580742,
    0.011908009648323059,
    -0.009068083018064499,
    0.008252658881247044,
    0.02345048449933529,
    -0.015352475456893444,
    0.04012450948357582,
    0.024462735280394554,
    0.020652735605835915,
    0.018811000511050224,
    -0.0006089323433116078,
    -0.035035137087106705,
    -0.020104432478547096,
    -0.02550310455262661,
    0.005282685626298189,
    0.012800759635865688,
    0.019809192046523094,
    -0.04130547121167183,
    -0.01861417293548584,
    0.013644302263855934,
    -0.017939340323209763,
    -0.017784690484404564,
    0.005135065875947475,
    0.019626425579190254,
    0.02121509611606598,
    0.027485430240631104,
    -0.0438079796731472,
    0.003838118864223361,
    -0.014621404930949211,
    0.014705759473145008,
    -0.0015183767536655068,
    -0.008667400106787682,
    -0.0007429326069541276,
    -0.005676338914781809,
    -0.014255870133638382,
    0.023562956601381302,
    0.000586525711696595,
    -0.002082495717331767,
    0.007999596185982227,
    0.0030824453569948673,
    0.0035042166709899902,
    -0.04085557907819748,
    -0.007894152775406837,
    0.024336203932762146,
    -0.00953203160315752,
    0.044735874980688095,
    0.006449586246162653,
    -0.015352475456893444,
    0.03720023110508919,
    0.013208471238613129,
    -0.011071496643126011,
    -0.015493066050112247,
    0.004323156084865332,
    0.03652539476752281,
    -0.014691700227558613,
    0.0058591063134372234,
    -0.023127127438783646,
    -0.004157962277531624,
    0.008639282546937466,
    -0.006927593611180782,
    -0.025039156898856163,
    0.0010640938999131322,
    -0.020385613664984703,
    -0.01695520617067814,
    0.0006603357032872736,
    -0.026613770052790642,
    -0.0022107847034931183,
    -0.024589266628026962,
    -0.011071496643126011,
    0.0068924459628760815,
    -0.01682867482304573,
    0.006031329743564129,
    0.024757975712418556,
    -0.026121703907847404,
    0.0017450788291171193,
    -0.014846350066363811,
    -0.04403292387723923,
    -0.01845952495932579,
    0.006948682479560375,
    -0.004235286731272936,
    0.01217513158917427,
    0.05595499277114868,
    0.008414337411522865,
    0.02326771803200245,
    -0.009405500255525112,
    0.036637868732213974,
    -0.038746725767850876,
    0.009974891319870949,
    -0.004892547149211168,
    -0.004024401307106018,
    0.021411923691630363,
    -0.01716609299182892,
    -0.030283179134130478,
    -0.03160472959280014,
    0.0025148114655166864,
    0.036637868732213974,
    0.007844946347177029,
    -0.016659965738654137,
    0.0018417347455397248,
    0.004421569406986237,
    0.012069689109921455,
    -0.02163686789572239,
    -0.030901778489351273,
    0.026459120213985443,
    -0.012716405093669891,
    -0.0019665088038891554,
    -0.005303774029016495,
    -0.006671016104519367,
    0.020315317437052727,
    0.0013725141761824489,
    0.006765914615243673,
    -0.0074020866304636,
    -0.02789314277470112,
    -0.014522992074489594,
    -0.01580236479640007,
    -0.01592889614403248,
    0.001166021917015314,
    0.03003011643886566,
    0.000194849562831223,
    -0.019415538758039474,
    -0.016659965738654137,
    0.004716808907687664,
    0.01785498484969139,
    -0.014522992074489594,
    0.001100120134651661,
    0.030114471912384033,
    0.018923472613096237,
    0.009904596023261547,
    -0.005693912506103516,
    -0.005272141192108393,
    0.012154042720794678,
    -0.00989756640046835,
    -0.027246426790952682,
    -0.010305278934538364,
    -0.006055932957679033,
    0.02626229263842106,
    -0.006990859284996986,
    -0.0060699922032654285,
    -0.013588065281510353,
    0.019443657249212265,
    -0.007366938982158899,
    -0.019260888919234276,
    -0.028230559080839157,
    0.014002807438373566,
    0.019963841885328293,
    0.003634262830018997,
    0.011437032371759415,
    0.0026518870145082474,
    0.008484632708132267,
    0.0036166890058666468,
    -0.02253664657473564,
    0.0006287028663791716,
    -0.001305733690969646,
    0.012231367640197277,
    0.004164991434663534,
    0.020315317437052727,
    -0.046451080590486526,
    -0.00405603414401412,
    0.008512751199305058,
    -0.0032880587968975306,
    0.017025502398610115,
    0.01640690304338932,
    0.011444061063230038,
    -0.0023900375235825777,
    0.012674227356910706,
    0.020174726843833923,
    0.0030472977086901665,
    0.030508125200867653,
    -0.0011080283438786864,
    -0.03818436339497566,
    -0.025728050619363785,
    0.016547493636608124,
    0.012020482681691647,
    0.021411923691630363,
    -0.0050366525538265705,
    -0.005901283584535122,
    -0.01845952495932579,
    0.0038451484870165586,
    -0.00110275624319911,
    -0.02090579830110073,
    0.006787003483623266,
    0.001999899046495557,
    0.007542676758021116,
    0.016238195821642876,
    0.0335448794066906,
    0.025460928678512573,
    -0.006340628489851952,
    0.010234983637928963,
    -0.021201036870479584,
    0.0148041732609272,
    -0.02547498606145382,
    -0.004161477088928223,
    0.017236387357115746,
    -0.005577925592660904,
    0.023309893906116486,
    0.014874468557536602,
    0.035091374069452286,
    0.006498792674392462,
    0.016603730618953705,
    -0.005665794480592012,
    -0.0045340415090322495,
    -0.030086353421211243,
    -0.0073317913338541985,
    -0.016449080780148506,
    -0.03042376972734928,
    0.012786700390279293,
    -0.0006445192848332226,
    -0.011162880808115005,
    0.012013453058898449,
    -0.02392849139869213,
    -0.024757975712418556,
    -0.03275757282972336,
    -0.0008883558330126107,
    0.007166597526520491,
    -0.005138580221682787,
    -0.01919059455394745,
    0.03199838474392891,
    -0.017123915255069733,
    -0.019289007410407066,
    -0.012062659487128258,
    0.1822052001953125,
    -0.009707769379019737,
    0.040321335196495056,
    0.024069081991910934,
    0.006607750430703163,
    -0.0045340415090322495,
    0.000903293548617512,
    0.007767621427774429,
    0.002491965424269438,
    0.034613367170095444,
    0.004217713139951229,
    -0.018754763528704643,
    0.009658562950789928,
    0.0012152285780757666,
    0.02489856630563736,
    0.0003314858768135309,
    -0.019359303638339043,
    -0.05634864792227745,
    -0.005486541893333197,
    0.004323156084865332,
    -0.0029207663610577583,
    0.0021791518665850163,
    -0.010600518435239792,
    -0.03812812641263008,
    0.01012251153588295,
    0.015521184541285038,
    -0.0008114704396575689,
    -0.019134357571601868,
    0.027049599215388298,
    -0.02284594625234604,
    -0.0092157032340765,
    0.005725545343011618,
    0.0062316711992025375,
    -0.025250041857361794,
    -0.025250041857361794,
    -0.027808787301182747,
    0.010115481913089752,
    0.011943157762289047,
    -0.007345850113779306,
    0.011732271872460842,
    -0.010867640376091003,
    -0.037481408566236496,
    -0.027850965037941933,
    -0.015296239405870438,
    0.006326569709926844,
    0.0025271130725741386,
    -0.03073306940495968,
    0.03287004306912422,
    -0.013763803988695145,
    0.01574612967669964,
    -0.01737697795033455,
    -0.02692306786775589,
    0.0020491057075560093,
    0.010874669998884201,
    -0.0022441749460995197,
    -0.011444061063230038,
    0.011725242249667645,
    0.015324357897043228,
    0.02305683121085167,
    0.008090979419648647,
    -0.012807788327336311,
    0.01779874972999096,
    -0.01864229142665863,
    0.0010500347707420588,
    -0.025967054069042206,
    0.008119097910821438,
    -0.035428788512945175,
    0.011036349460482597,
    -0.018839119002223015,
    -0.018740704283118248,
    0.00820345152169466,
    0.00575717817991972,
    -0.03309498727321625,
    0.004115785006433725,
    -0.026880891993641853,
    -0.009391441009938717,
    0.03689093142747879,
    -0.020596498623490334,
    0.0014946521259844303,
    0.03843742609024048,
    -0.01635066792368889,
    -0.021679045632481575,
    -0.0022441749460995197,
    0.014199634082615376,
    -0.028652330860495567,
    -0.004671117290854454,
    0.017320740967988968,
    -0.012561755254864693,
    0.006013755686581135,
    -0.015479006804525852,
    -0.018571997061371803,
    -0.01635066792368889,
    0.00800662487745285,
    0.008618193678557873,
    0.009658562950789928,
    0.016547493636608124,
    0.023605134338140488,
    0.010783286765217781,
    -0.014438637532293797,
    0.018234578892588615,
    -0.045129530131816864,
    0.04217712953686714,
    0.016786498948931694,
    -0.003273999784141779,
    0.0034128327388316393,
    0.007690296974033117,
    -0.0185860563069582,
    0.0015807637246325612,
    -0.015816424041986465,
    0.006576117593795061,
    -0.003124622395262122,
    -0.024589266628026962,
    -0.0072333780117332935,
    -0.005964549258351326,
    0.0024638473987579346,
    0.00638280576094985,
    -0.0013839370803907514,
    -0.012034540995955467,
    0.030648715794086456,
    0.007317732088267803,
    0.011844743974506855,
    0.015436829999089241,
    0.014178545214235783,
    -0.023281775414943695,
    -0.00989756640046835,
    -0.0047273533418774605,
    -0.017391037195920944,
    0.017756571993231773,
    0.0009182312642224133,
    -0.009468765929341316,
    0.017897162586450577,
    0.006164890713989735,
    0.022831887006759644,
    0.014354283921420574,
    -0.006797547452151775,
    -0.02253664657473564,
    -0.01244928315281868,
    0.0052756560035049915,
    0.005690397694706917,
    -0.0030508125200867653,
    -0.010663784109055996,
    -0.015535242855548859,
    0.003317934228107333,
    -0.025207865983247757,
    0.027415135875344276,
    -0.03123919479548931,
    -0.008062861859798431,
    -0.0015948227373883128,
    0.011415943503379822,
    0.008864226751029491,
    -0.021383805200457573,
    -0.0012837664689868689,
    0.026388823986053467,
    -0.021552514284849167,
    -0.0017881345702335238,
    -0.010762197896838188,
    -0.008034743368625641,
    -0.030986132100224495,
    0.009061053395271301,
    0.004020886495709419,
    -0.0025833493564277887,
    -1.1512214769027196e-05,
    0.0356537327170372,
    0.013742715120315552,
    -0.019738897681236267,
    -0.028202440589666367,
    -0.17725642025470734,
    0.0203996729105711,
    0.011282382532954216,
    -0.02647317945957184,
    0.006428497843444347,
    0.006080536171793938,
    0.0019225742435082793,
    0.002019230043515563,
    0.011415943503379822,
    -0.009735887870192528,
    0.012667198665440083,
    0.016688084229826927,
    -0.015844542533159256,
    -0.01879694126546383,
    -0.011057437397539616,
    -0.0073950570076704025,
    0.034304067492485046,
    -0.01051616482436657,
    0.004762500990182161,
    0.04034945368766785,
    0.018726646900177002,
    -0.014087161980569363,
    0.0271901898086071,
    0.0013110057916492224,
    0.01205562986433506,
    -0.018304875120520592,
    0.013953601010143757,
    0.0048890323378145695,
    -0.015029117465019226,
    -0.023942550644278526,
    0.020413732156157494,
    -0.007922271266579628,
    0.005398672539740801,
    0.022522587329149246,
    0.012470372021198273,
    0.0311267226934433,
    0.002240660134702921,
    -0.02613576129078865,
    0.002690549474209547,
    0.055336397141218185,
    0.019767016172409058,
    0.02873668447136879,
    0.02813214622437954,
    -0.022410115227103233,
    -0.00504719652235508,
    0.011169910430908203,
    -0.0033144194167107344,
    -0.02293029986321926,
    0.022550705820322037,
    -0.04417351633310318,
    0.02607952617108822,
    -0.01308193989098072,
    0.007577824406325817,
    0.006671016104519367,
    0.04822251945734024,
    0.021960226818919182,
    0.0001936413609655574,
    0.004063063766807318,
    0.03399476781487465,
    -0.019050003960728645,
    -0.010537252761423588,
    -0.0447077602148056,
    0.009482825174927711,
    -0.006417953409254551,
    -0.03003011643886566,
    -0.05097809061408043,
    -0.03458524867892265,
    0.020737089216709137,
    -0.01987948827445507,
    0.006906505208462477,
    0.014059043489396572,
    0.030508125200867653,
    -0.01658967137336731,
    -0.0026413428131490946,
    0.012259486131370068,
    0.012667198665440083,
    -0.008554928004741669,
    0.010403691790997982,
    0.021018270403146744,
    0.017658159136772156,
    -0.02377384342253208,
    0.03410723805427551,
    0.026965245604515076,
    -0.01183068472892046,
    0.03039565309882164,
    -0.008498691953718662,
    -0.014874468557536602,
    -0.007187685929238796,
    -0.027063658460974693,
    0.00016574293840676546,
    0.013243619352579117,
    -0.020751148462295532,
    0.014199634082615376,
    -0.003831089474260807,
    0.010867640376091003,
    0.019415538758039474,
    0.0030437828972935677,
    -0.0166177898645401,
    0.01406607311218977,
    -0.019415538758039474,
    0.007669208105653524,
    0.004882002715021372,
    -0.0038521778769791126,
    0.005802870262414217,
    0.04096805304288864,
    0.02208675816655159,
    -0.037875063717365265,
    0.013510741293430328,
    0.02121509611606598,
    -0.01906406320631504,
    0.0223538801074028,
    0.007296643685549498,
    0.01208374835550785,
    0.01924683153629303,
    -0.016181958839297295,
    0.01761598140001297,
    -0.008561957627534866,
    0.00992568489164114,
    0.016870852559804916,
    -0.02876480296254158,
    0.03514760732650757,
    -0.005620102863758802,
    -0.047435212880373,
    0.005412731785327196,
    -0.00611216900870204,
    -0.004976901225745678,
    -0.09981921315193176,
    -0.054436616599559784,
    -0.020048195496201515,
    0.0407993458211422,
    -0.029017865657806396,
    0.024912625551223755,
    -0.024575207382440567,
    0.014508932828903198,
    0.01256878487765789,
    0.022381996735930443,
    0.01256878487765789,
    -0.002272292971611023,
    -0.01819240301847458,
    0.019528010860085487,
    -0.015422770753502846,
    0.011008230969309807,
    -0.028244618326425552,
    0.010312308557331562,
    -0.00980618316680193,
    0.016294430941343307,
    0.0038838107138872147,
    -0.0022459321189671755,
    0.0020420760847628117,
    0.003070143749937415,
    0.00575717817991972,
    0.024884507060050964,
    -0.04504517465829849,
    0.03925285115838051,
    -0.003077173139899969,
    0.015268120914697647,
    -0.0020420760847628117,
    -0.021679045632481575,
    -0.004913635551929474,
    -0.007296643685549498,
    -0.02592487633228302,
    0.022761590778827667,
    -0.015085353516042233,
    -0.028216499835252762,
    0.01367241982370615,
    -0.02586863934993744,
    0.01308193989098072,
    -7.677555549889803e-05,
    -0.02353483811020851,
    -0.02011849172413349,
    0.006526911165565252,
    0.005064770579338074,
    -0.007697326596826315,
    0.020174726843833923,
    0.0017266263021156192,
    -0.006660471670329571,
    -0.0003492793766781688,
    -0.020371554419398308,
    0.013166294433176517,
    -0.004365332890301943,
    0.0053916433826088905,
    0.020737089216709137,
    -0.005075314547866583,
    -0.008920462802052498,
    -0.004762500990182161,
    -0.010473987087607384,
    0.0048749735578894615,
    0.03697528317570686,
    -0.014565168879926205,
    0.010080333799123764,
    0.008646312169730663,
    -0.010614577680826187,
    0.008815020322799683,
    -0.004010342061519623,
    0.01653343439102173,
    0.008554928004741669,
    -0.02810402773320675,
    0.010452899150550365,
    -0.022438233718276024,
    -0.007254466414451599,
    -0.0044883498921990395,
    0.01885317824780941,
    -0.024940744042396545,
    -0.01583048328757286,
    0.011605740524828434,
    -0.007191200740635395,
    0.005852076690644026,
    0.0005504994187504053,
    -0.012702345848083496,
    -0.01619601808488369,
    -0.0038240598514676094,
    0.02208675816655159,
    -0.003711587516590953,
    -0.010959024541079998,
    0.030958013609051704,
    -0.024195613339543343,
    0.017180150374770164,
    -0.012386017479002476,
    0.044426579028367996,
    -0.00602781493216753,
    -0.004126329440623522,
    0.0011229660594835877,
    -0.013447475619614124,
    -0.0046957205049693584,
    -0.016603730618953705,
    0.029383400455117226,
    -0.03197026625275612,
    0.005381098948419094,
    -0.07743721455335617,
    0.007760592270642519,
    0.0069100200198590755,
    -0.017784690484404564,
    0.002330286428332329,
    -0.026037348434329033,
    0.011753360740840435,
    -0.03843742609024048,
    0.012561755254864693,
    -0.008154245093464851,
    -0.024828270077705383,
    -0.0017854985781013966,
    -0.005057740956544876,
    0.00409469660371542,
    0.012575814500451088,
    0.01001706812530756,
    0.03804377093911171,
    0.01031933818012476,
    0.031829673796892166,
    -0.0037467351648956537,
    0.005929401610046625,
    -0.009981920942664146,
    0.01100120134651661,
    0.017137974500656128,
    -0.019415538758039474,
    0.011704153381288052,
    0.003971679601818323,
    0.016941146925091743,
    -0.007444263435900211,
    -0.00035345315700396895,
    0.02018878608942032,
    0.0012477401178330183,
    -0.013271736912429333,
    0.00031171535374596715,
    0.015591478906571865,
    -0.017123915255069733,
    0.008491662330925465,
    -0.002780175767838955,
    0.005753663368523121,
    0.006031329743564129,
    -0.019021885469555855,
    -0.03652539476752281,
    0.014466756023466587,
    0.008836109191179276,
    -0.020652735605835915,
    0.010192806832492352,
    0.018304875120520592,
    0.009960832074284554,
    0.029327165335416794,
    0.011676035821437836,
    0.0359630323946476,
    -0.009173525497317314,
    -0.017686277627944946,
    -0.018979709595441818,
    0.007226348388940096,
    -0.01370053831487894,
    -0.010298249311745167,
    -0.02484232932329178,
    0.010930906049907207,
    0.007669208105653524,
    0.06489654630422592,
    0.021341627463698387,
    0.008140185847878456,
    0.010256072506308556,
    -0.018501700833439827,
    -0.01703956164419651,
    -0.02882103994488716,
    -0.001254769624210894,
    -0.0035956003703176975,
    0.0004837189626414329,
    -0.01585860177874565,
    -0.01921871304512024,
    0.02547498606145382,
    0.004892547149211168,
    0.020962033420801163,
    -0.02281782776117325,
    -0.006400379817932844,
    -0.006031329743564129,
    -0.014480815269052982,
    -0.001305733690969646,
    0.002753815148025751,
    -0.023253658786416054,
    -0.012997585348784924,
    0.017391037195920944,
    0.022677237167954445,
    -0.019415538758039474,
    -0.04122111573815346,
    0.0356537327170372,
    0.008069891482591629,
    0.003404045943170786,
    0.002066679298877716,
    -0.006678045727312565,
    0.007676237728446722,
    -0.01656155288219452,
    0.02629041112959385,
    0.020259082317352295,
    -0.023155244067311287,
    0.002725697122514248,
    0.019907604902982712,
    0.008779873140156269,
    -0.0011326316744089127,
    -0.014508932828903198,
    -0.017447272315621376,
    -0.034275949001312256,
    -0.03393853083252907,
    0.007549706380814314,
    -0.028272736817598343,
    -0.005901283584535122,
    0.003029723884537816,
    0.031829673796892166,
    0.014424578286707401,
    -0.020976092666387558,
    -0.02314118482172489,
    0.024462735280394554,
    -0.017095796763896942,
    0.016210077330470085,
    0.00126179913058877,
    -0.003894355148077011,
    -0.002810051431879401,
    0.04009639099240303,
    -0.006294936873018742,
    -0.008611164055764675,
    0.034304067492485046,
    -0.009257880039513111,
    0.005665794480592012,
    0.030901778489351273,
    0.025179747492074966,
    -0.0011361464858055115,
    0.0037256465293467045,
    -0.030114471912384033,
    -0.01685679331421852,
    0.017967456951737404,
    -0.04577624425292015,
    -0.0008971427450887859,
    0.0035903281532227993,
    0.005033137742429972,
    -0.013461533933877945,
    -0.022311702370643616,
    -0.01664590835571289,
    0.08109256625175476,
    0.003502459265291691,
    0.005071800202131271,
    -0.006709678564220667,
    -0.008027713745832443,
    0.020202845335006714,
    0.011205057613551617,
    -0.03084554150700569,
    0.015760187059640884,
    -0.03163284808397293,
    0.011043379083275795,
    -0.009004817344248295,
    -0.04898170754313469,
    -0.022044580429792404,
    -0.016659965738654137,
    0.010762197896838188,
    -0.04858805611729622,
    0.03483831137418747,
    -0.030986132100224495,
    -0.003425134578719735,
    0.028905393555760384,
    -0.007781680673360825,
    0.010783286765217781,
    -0.0028750745113939047,
    -0.043948568403720856,
    0.02193210832774639,
    0.011626829393208027,
    0.02426590956747532,
    0.010734079405665398,
    -0.02224140614271164,
    -0.015450889244675636,
    0.02435026317834854,
    -0.022986536845564842,
    -0.030283179134130478,
    -0.017573803663253784,
    0.021496277302503586,
    0.0024515457917004824,
    -0.0029998484533280134,
    0.010846552439033985,
    0.039477795362472534,
    0.00174332142341882,
    -0.005880195181816816,
    -0.009011846967041492,
    -0.02245229296386242,
    -0.005124521441757679,
    -0.018909413367509842,
    0.018895354121923447,
    -0.009904596023261547,
    -0.056573592126369476
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: plugins",
    "framework :: sphinx :: extension",
    "intended audience :: developers",
    "license :: osi approved :: gnu general public license v3 (gplv3)",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "topic :: documentation :: sphinx",
    "topic :: software development :: documentation"
  ],
  "description": ".. sphinx-jsonschema readme\n   copyright: (c) 2017-2020, leo noordergraaf\n\n=================\nsphinx-jsonschema\n=================\n\nthis package contains sphinx-jsonschema, an extension to sphinx to allow\nauthors to display a `json schema <http://json-schema.org>`_ in their\ndocumentation.\n\na dockerized version can be found at: `extended sphinx <https://hub.docker.com/r/lnoor/sphinx-extended>`_.\n\nit arose out of a personal itch and implements what i needed.\nsome features of json schema are (not yet) implemented.\nalso i can imagine that other display layouts are desired.\n\nlet me know in comments and perhaps pull requests.\n\n\nfeatures\n========\n\n* near complete support for all features of json schema draft 4.\n* supports inline schemas as well as external schemas loaded from a file or url.\n* supports json pointer notation on external resources to select a subschema.\n* supports cross references between schemas.\n* allows restructuredtext markup in ``title`` and ``description`` fields.\n* allows json schema definitions in both json and yaml format.\n* supports the ``examples`` keyword from draft 7.\n\ninstallation\n============\ninstall the package using pip::\n\n    pip install sphinx-jsonschema\n\nand add it to the extensions list in your conf.py::\n\n    extensions = [\n        'sphinx-jsonschema'\n    ]\n\nusage\n=====\n\nthe extension adds a single directive to sphinx: **jsonschema**.\nyou provide it with either an http url to a schema or you may\nembed the schema inline.\n\nexample\n=======\n\ndisplay a schema fetched from a website::\n\n    .. jsonschema:: http://some.domain/with/a/path/spec.json\n\n\ndisplay a schema located in a file with an absolute path::\n\n    .. jsonschema:: /home/leo/src/jsonschema/sample.json\n\na path relative to the referencing document::\n\n    .. jsonschema:: jsonschema/sample.json\n\nor a schema defined in a python object::\n\n    .. jsonschema:: mod.pkg.schema\n\nwith all three of the above you may add json pointer notation to display a subschema::\n\n    .. jsonschema:: http://some.domain/with/a/path/spec.json#/path/to/schema\n    .. jsonschema:: /home/leo/src/jsonschema/sample.json#/path/to/schema\n    .. jsonschema:: jsonschema/sample.json#/path/to/schema\n    .. jsonschema:: mod.pkg.schema#/path/to/schema\n\nalternatively you can embed the schema::\n\n    .. jsonschema::\n\n        {\n            \"$schema\": \"this field is ignored for now. perhaps use it to indicate schema version in display?\",\n            \"title\": \"test data set 1: **simple type**\",\n            \"id\": \"http://this.better.be.a.regular.domain\",\n            \"description\": \"these data sets exercise `json schema <http://json-schema.org>`_ constructions and show how they are rendered.\\n\\nnote that it is possible to embed restructuredtext elements in strings.\",\n            \"type\": \"string\",\n            \"minlength\": 10,\n            \"maxlength\": 100,\n            \"pattern\": \"^[a-z]+$\"\n        }\n\nthis notation does not support json pointer.\n\njson schema extension\n=====================\n\n$$target\n    sphinx-jsonschema extends json schema with the ``$$target`` key.\n\n    this key is only recognized at the outermost object of the schema.\n\njson schema uses the ``$ref`` key in combination with the ``$id`` key to cross-reference between schemas.\n\nsphinx-jsonschema ignores ``$id`` but uses the value of ``$ref`` to create a restructuredtext ``:ref:`` role.\n\nfor this to work you need to mark the target schema with the ``$$target`` key, the value of which must be\nidentical to the value of the corresponding ``$ref`` key.\n\nso a schema::\n\n    {\n        \"title\": \"schema 1\",\n        \"$ref\": \"#/definitions/schema2\"\n    }\n\nwill have its ``$ref`` replaced by a link pointing to::\n\n    {\n        \"title\": \"schema 2\",\n        \"$$target\": \"#/definitions/schema2\"\n        ...\n    }\n\noccasionally a schema will be addressed from several other schemas using different ``$ref`` values.\nin that case the value of ``$$target`` should be a list enumerating all different references to the\nschema.\n\n$$description\n   sphinx-jsonschema extends json schema with the ``$$description`` key.\n\nthis key serves the same purpose as the ``description`` key and can be used in the same way.\nit differs from ``description`` in that it allows an array of strings as value instead of a\nsingle string.\n\nthis allows you to write::\n\n   {\n      ...\n      \"description\": \"+------------+------------+-----------+ \\n| header 1   | header 2   | header 3  | \\n+============+============+===========+ \\n| body row 1 | column 2   | column 3  | \\n+------------+------------+-----------+ \\n| body row 2 | cells may span columns.| \\n+------------+------------+-----------+ \\n| body row 3 | cells may  | - cells   | \\n+------------+ span rows. | - contain | \\n| body row 4 |            | - blocks. | \\n+------------+------------+-----------+\",\n      ...\n   }\n\nas::\n\n   {\n      ...\n      \"$$description\": [\n         \"+------------+------------+-----------+\",\n         \"| header 1   | header 2   | header 3  |\",\n         \"+============+============+===========+\",\n         \"| body row 1 | column 2   | column 3  |\",\n         \"+------------+------------+-----------+\",\n         \"| body row 2 | cells may span columns.|\",\n         \"+------------+------------+-----------+\",\n         \"| body row 3 | cells may  | - cells   |\",\n         \"+------------+ span rows. | - contain |\",\n         \"| body row 4 |            | - blocks. |\",\n         \"+------------+------------+-----------+\"\n      ],\n      ...\n   }\n\nwhich clearly is much more readable and maintainable.\n\nlicence\n=======\n\ncopyright leo noordergraaf, all rights reserved.\n\nthis software is made available under the gpl v3.\n\n\nchangelog\n=========\n\nversion 1.19.1\n\n`eddie darling <https://github.com/spagh-eddie>` with `michal \u010diha\u0159 <https://github.com/nijel>`\nand `kim berninger <https://github.com/kimberninger>` fixed a bug addressing relative files.\n\nversion 1.19.0\n--------------\n\n`glenn nicholls <https://github.com/glennicholls>` contributed code to load a schema from a\npython dict or object (or actually any python entity with a ``__str__`` method.).\n\nversion 1.18.0\n--------------\n\nexpanding on the work of `pavel odvody <https://github.com/shaded-enmity>`_ with json pointer\nthe ``:pass_unmodified:`` option is included.\nthis option prevents escaping the string pointed at.\nthis extension arose from discussions with `ryan lane <https://github.com/ryan-lane>`\n\nversion 1.17.2\n--------------\n\n`ezequiel orbe <https://github.com/eorbe>`_ found, reported and fixed a bug escaping backspaces.\n\nversion 1.17.0\n--------------\n\n`pavel odvody <https://github.com/shaded-enmity>`_ contributed the ``:hide_key:`` directive option.\nthis option allows you to hide certain keys, specified by a json path specification, to be excluded\nfrom rendering.\n\n\nversion 1.16.11\n---------------\n\nremoved debugging code left in, pointed out by `kevin landreth <https://github.com/crackerjackmack>`.\n\nversion 1.16.10\n---------------\n\n`iamdbychkov <https://github.com/iamdbychkov>`_ added the ``:encoding:`` directive option.\nthis option allows explicit control of the encoding used to read a file\ninstead of relying on the operating system default.\n\nversion 1.16.9\n--------------\n\nbugfix.\n\nversion 1.16.8\n--------------\n\n`jens nielsen <https://github.com/jenshnielsen>`_ improved rendering of string values.\n\nversion 1.16.5-6\n----------------\n\nbugfix version.\n\nversion 1.16.4\n--------------\n\nintroduces the ``:lift_title:`` directive option suggested by `ankostis <https://github.com/ankostis>`_.\nankostis also provided an example on how to extend the formatter to handle custom properties.\n\nfixed a bug in rendering the ``items`` attribute of the ``array`` type reported by nijel (https://github.com/nijel).\n\nversion 1.16.1-3\n----------------\n\nfixed bugs rendering the ``default`` and ``examples`` keywords.\n\nintroduced the configuration entry ``jsonschema_options`` setting default values for the directive options\nintroduced in 1.16. the options now can accept a parameter to explicitly turn the option on or off.\n\nversion 1.16\n------------\n\n`woutertuinstra <https://github.com/woutertuinstra>`_ reimplemented support for ``dependencies`` and properly this time.\nhe also improved error handling and reporting and added a couple of options improving the handling of references.\n\nthe most important additions are the directive options ``:lift_description:``, ``:lift_definitions:``,\n``:auto_target:`` and ``:auto_reference:``.\n\nin addition to all that he also implemented support for the ``if``, ``then`` and ``else`` keywords.\n\nversion 1.15\n------------\n\nadd support for the ``dependencies`` key.\n\n\nversions 1.12 and 1.13 and 1.14\n-------------------------------\n\nsolved several minor bugs.\n\n\nversion 1.11\n------------\n\nsolved a divergence of the standard reported by bbasic (https://github.com/bbasics).\n\nversion 1.10\n------------\n\n`ivan vysotskyy <https://github.com/ivysotskyi>`_ contributed the idea to use an array with\nthe ``description`` key resulting in the new ``$$description`` key.\n\n\nversion 1.9\n-----------\n\n`tom walter <https://github.com/evilpuppetmaster>`_ contributed the ``example`` support.\n\nversion 1.4\n-----------\n\n`chris holdgraf <https://github.com/choldgraf>`_ contributed python3 and yaml support.\n\nversion 1.3\n-----------\n\nadd unicode support.\n\nversion 1.2\n-----------\n\nimproved formatting.\n\nversion 1.1\n-----------\n\nimplemented schema cross referencing.\n\nversion 1.0\n-----------\n\ninitial release of a functioning plugin.",
  "docs_url": null,
  "keywords": "sphinx json schema",
  "license": "gplv3",
  "name": "sphinx-jsonschema",
  "package_url": "https://pypi.org/project/sphinx-jsonschema/",
  "project_url": "https://pypi.org/project/sphinx-jsonschema/",
  "project_urls": {
    "Homepage": "https://github.com/lnoor/sphinx-jsonschema"
  },
  "release_url": "https://pypi.org/project/sphinx-jsonschema/1.19.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "sphinx extension to display json schema",
  "version": "1.19.1",
  "releases": [],
  "developers": [
    "leo@noordergraaf.net",
    "leo_noordergraaf"
  ],
  "kwds": "sphinx jsonschema_options jsonschema schemas schema2",
  "license_kwds": "gplv3",
  "libtype": "pypi",
  "id": "pypi_sphinx_jsonschema",
  "homepage": "https://github.com/lnoor/sphinx-jsonschema",
  "release_count": 35,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: python software foundation license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: c",
    "programming language :: python",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: object brokering"
  ],
  "description": "\npython library for ibm mq\n-------------------------\n\npymqi is a production-ready, open-source python extension for ibm mq (formerly known as websphere mq and mqseries).\n\nfor 20+ years, the library has been used by thousands of companies around the world with their queue managers running on\nlinux, windows, unix and z/os.\n\nsample code\n===========\n\nto put a message on a queue:\n\n.. code-block:: python\n\n    import pymqi\n\n    queue_manager = pymqi.connect('qm.1', 'svrconn.channel.1', '192.168.1.121(1434)')\n\n    q = pymqi.queue(queue_manager, 'testq.1')\n    q.put('hello from python!')\n\nto read the message back from the queue:\n\n.. code-block:: python\n\n    import pymqi\n\n    queue_manager = pymqi.connect('qm.1', 'svrconn.channel.1', '192.168.1.121(1434)')\n\n    q = pymqi.queue(queue_manager, 'testq.1')\n    msg = q.get()\n    print('here is the message:', msg)\n\nthe backbone of ibm mq python messaging\n=======================================\n\npymqi is a low-level library that requires one to know ibm mq apis well.\n\nit serves, however, as the basis for\nibm mq\nsupport\nin\n`zato <https://zato.io>`_,\nwhich is an enterprise\napi platform and backend application server in python that lets one connect to many technologies\nwith little or no programming.\n\nthis includes ibm mq queue managers as well as the ability to seamlessly integrate with java jms systems.\n\n.. image:: https://zato.io/en/docs/3.2/gfx/api/screenshots/conn1.png\n\n.. image:: https://zato.io/en/docs/3.2/gfx/api/screenshots/mq.png\n\nlearn more\n==========\n\nvisit the `documentation <https://zato.io/en/docs/3.2/pymqi/index.html?gh>`_ for more information and usage examples.\n",
  "docs_url": null,
  "keywords": "pymqi ibm mq websphere wmq mqseries ibm middleware messaging queueing asynchronous soa eai esb integration",
  "license": "python software foundation license",
  "name": "pymqi",
  "package_url": "https://pypi.org/project/pymqi/",
  "project_url": "https://pypi.org/project/pymqi/",
  "project_urls": {
    "Download": "https://zato.io/pymqi/install.html",
    "Homepage": "https://zato.io/pymqi"
  },
  "release_url": "https://pypi.org/project/pymqi/1.12.10/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python ibm mqi extension for ibm mq (formerly websphere mq and mqseries).",
  "version": "1.12.10",
  "releases": [],
  "developers": [
    "pymqi@zato.io",
    "zato_source_s"
  ],
  "kwds": "queue_manager pymqi mqseries wmq queue",
  "license_kwds": "python software foundation license",
  "libtype": "pypi",
  "id": "pypi_pymqi",
  "homepage": "https://zato.io/pymqi",
  "release_count": 37,
  "dependency_ids": []
}
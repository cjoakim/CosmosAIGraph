{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django",
    "framework :: django :: 3.0",
    "framework :: django :: 3.1",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "framework :: django :: 4.1",
    "framework :: django :: 4.2",
    "framework :: django :: 5.0",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: build tools"
  ],
  "description": "[![](https://img.shields.io/pypi/pyversions/django-admin-interface.svg?color=3776ab&logo=python&logocolor=white)](https://www.python.org/)\n[![](https://img.shields.io/pypi/djversions/django-admin-interface?color=0c4b33&logo=django&logocolor=white&label=django)](https://www.djangoproject.com/)\n\n[![](https://img.shields.io/pypi/v/django-admin-interface.svg?color=blue&logo=pypi&logocolor=white)](https://pypi.org/project/django-admin-interface/)\n[![](https://static.pepy.tech/badge/django-admin-interface/month)](https://pepy.tech/project/django-admin-interface)\n[![](https://img.shields.io/github/stars/fabiocaccamo/django-admin-interface?logo=github)](https://github.com/fabiocaccamo/django-admin-interface/stargazers)\n[![](https://img.shields.io/pypi/l/django-admin-interface.svg?color=blue)](https://github.com/fabiocaccamo/django-admin-interface/blob/main/license.txt)\n\n[![](https://results.pre-commit.ci/badge/github/fabiocaccamo/django-admin-interface/main.svg)](https://results.pre-commit.ci/latest/github/fabiocaccamo/django-admin-interface/main)\n[![](https://img.shields.io/github/actions/workflow/status/fabiocaccamo/django-admin-interface/test-package.yml?branch=main&label=build&logo=github)](https://github.com/fabiocaccamo/django-admin-interface)\n[![](https://img.shields.io/codecov/c/gh/fabiocaccamo/django-admin-interface?logo=codecov)](https://codecov.io/gh/fabiocaccamo/django-admin-interface)\n[![](https://img.shields.io/codacy/grade/21cb657283c04e70b56fb935277a1ad1?logo=codacy)](https://www.codacy.com/app/fabiocaccamo/django-admin-interface)\n[![](https://img.shields.io/codeclimate/maintainability/fabiocaccamo/django-admin-interface?logo=code-climate)](https://codeclimate.com/github/fabiocaccamo/django-admin-interface/)\n[![](https://img.shields.io/badge/code%20style-black-000000.svg?logo=python&logocolor=black)](https://github.com/psf/black)\n[![](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)\n\n# django-admin-interface\ndjango-admin-interface is a modern **responsive flat admin interface customizable by the admin itself**.\n\n![django-admin-interface-preview](https://user-images.githubusercontent.com/1035294/35631521-64b0cab8-06a4-11e8-8f57-c04fdfbb7e8b.gif)\n\n## features\n- beautiful default **django-theme**\n- themes management and customization *(you can **customize admin title, logo and colors**)*\n- responsive\n- related modal *(instead of the old popup window)*\n- environment name/marker\n- language chooser\n- foldable apps *(accordions in the navigation bar)*\n- [collapsible fieldsets](https://docs.djangoproject.com/en/4.0/ref/contrib/admin/#django.contrib.admin.modeladmin.fieldsets) can have their initial state expanded instead of collapsed\n- `new` collapsible inlines\n- `new` tabbed fieldsets and inlines\n- `new` list filter removal links\n- `new` list filter highlight selected options\n- list filter dropdown\n- list filter sticky\n- form controls sticky *(pagination and save/delete buttons)*\n- compatibility / style optimizations for:\n  - `django-ckeditor`\n  - `django-dynamic-raw-id`\n  - `django-json-widget`\n  - `django-modeltranslation`\n  - `django-rangefilter`\n  - `django-streamfield`\n  - `django-tabbed-admin`\n  - `sorl-thumbnail`\n- translated in many languages: `de`, `es`, `fa`, `fr`, `it`, `pl`, `pt_br`, `ru`, `tr`\n\n## installation\n- run `pip install django-admin-interface`\n- add `admin_interface` and `colorfield` to `settings.installed_apps` **before** `django.contrib.admin`\n```python\ninstalled_apps = (\n    #...\n    \"admin_interface\",\n    \"colorfield\",\n    #...\n    \"django.contrib.admin\",\n    #...\n)\n\nx_frame_options = \"sameorigin\"\nsilenced_system_checks = [\"security.w019\"]\n```\n- run `python manage.py migrate`\n- run `python manage.py collectstatic --clear`\n- restart your application server\n\n> **warning** - if you want use modals instead of popup windows, ensure to add `x_frame_options = \"sameorigin\"` setting.\n\n### optional features\nto make a fieldset start expanded with a `hide` button to collapse, add the class `\"expanded\"` to its classes:\n```python\nclass mymodeladmin(admin.modeladmin):\n    # ...\n    fieldsets = [\n        (\"section title\", {\n            \"classes\": (\"collapse\", \"expanded\"),\n            \"fields\": (...),\n        }),\n    ]\n    # ...\n```\n\n## optional themes\nthis package ships with optional themes as fixtures, they can be installed using the [loaddata admin command](https://docs.djangoproject.com/en/1.11/ref/django-admin/#django-admin-loaddata). optional themes are activated on installation.\n\n##### [django](https://www.djangoproject.com/) theme (default):\nrun `python manage.py loaddata admin_interface_theme_django.json`\n\n##### [bootstrap](http://getbootstrap.com/) theme:\nrun `python manage.py loaddata admin_interface_theme_bootstrap.json`\n\n##### [foundation](http://foundation.zurb.com/) theme:\nrun `python manage.py loaddata admin_interface_theme_foundation.json`\n\n##### [u.s. web design standards](https://standards.usa.gov/) theme:\nrun `python manage.py loaddata admin_interface_theme_uswds.json`\n\n### add more themes\nyou can add a theme you've created through the admin to this repository by [sending us a pr](http://makeapullrequest.com/). here are the steps to follow to add:\n\n1. export your exact theme as fixture using the `dumpdata` admin command:\n`python manage.py dumpdata admin_interface.theme --indent 4 -o admin_interface_theme_{{name}}.json --pks=n`\n\n2. copy the generated json file into the fixtures folder *(making sure its name starts with* `admin_interface_theme_` *to avoid clashes with fixtures that might be provided by other third party apps)*.\n\n3. remove the `pk` from the fixture and make sure the `active` field is set to `true` *(in this way a theme is automatically activated when installed)*.\n\n4. edit the section above to document your theme.\n\n### add theme support to third-party libraries\nyou can add **theme support to existing third-party libraries** using the following **css variables**:\n\n#### header\n\n- `--admin-interface-header-background-color`\n- `--admin-interface-header-text-color`\n- `--admin-interface-header-link-color`\n- `--admin-interface-header-link_hover-color`\n- `--admin-interface-title-color`\n- `--admin-interface-env-color`\n\n#### logo\n\n- `--admin-interface-logo-color`\n- `--admin-interface-logo-default-background-image`\n- `--admin-interface-logo-max-width`\n- `--admin-interface-logo-max-height`\n\n#### modules / links\n- `--admin-interface-module-background-color`\n- `--admin-interface-module-background-selected-color`\n- `--admin-interface-module-border-radius`\n- `--admin-interface-module-text-color`\n- `--admin-interface-module-link-color`\n- `--admin-interface-module-link-selected-color`\n- `--admin-interface-module-link-hover-color`\n- `--admin-interface-generic-link-color`\n- `--admin-interface-generic-link-hover-color`\n- `--admin-interface-generic-link-active-color`\n\n#### buttons\n- `--admin-interface-save-button-background-color`\n- `--admin-interface-save-button-background-hover-color`\n- `--admin-interface-save-button-text-color`\n- `--admin-interface-delete-button-background-color`\n- `--admin-interface-delete-button-background-hover-color`\n- `--admin-interface-delete-button-text-color`\n\n#### related modal\n- `--admin-interface-related-modal-background-color`\n- `--admin-interface-related-modal-background-opacity`\n- `--admin-interface-related-modal-border-radius`\n- `--admin-interface-related-modal-close-button-display`\n\n## screenshots\n###### admin login\n![django-admin-interface_login](https://cloud.githubusercontent.com/assets/1035294/11240233/55c8d4ba-8df1-11e5-9568-00fdc987ede8.gif)\n---\n###### admin dashboard\n![django-admin-interface_dashboard](https://cloud.githubusercontent.com/assets/1035294/11240239/627c0362-8df1-11e5-81fa-216366a5d8da.gif)\n---\n###### admin themes management\n![django-admin-interface_themes_management](https://cloud.githubusercontent.com/assets/1035294/11240245/6cd1c342-8df1-11e5-928b-f22217474d3d.gif)\n---\n###### admin theme customization\n![django-admin-interface_theme_customization](https://cloud.githubusercontent.com/assets/1035294/11240250/7350d942-8df1-11e5-9b28-f2f54c333cdc.gif)\n\n## localization\nat the moment, this package has been translated into the following languages: `de`, `es`, `fa`, `fr`, `it`, `pl`, `pt_br`, `tr`.\n\n### translate into another language\n\n- run `python -m django makemessages --ignore \".tox\" --ignore \"venv\" --add-location \"file\" --extension \"html,py\" --locale \"it\"` *(example for italian localization)*\n\n- update translations in `admin_interface/locale/it/lc_messages/django.po`\n\n- run `python -m django compilemessages --ignore \".tox\" --ignore \"venv\"`\n\n### update translations\n\nif you do some changes to the project, remember to update translations, because if the translations files are not up-to-date, the `lint` step in the ci will fail:\n- run `tox -e translations`\n\n## faq\n\n### custom `base-site.html`\n> i already have a custom `base_site.html`, how can i make it work?\n\nyou can use [django-apptemplates](https://github.com/bittner/django-apptemplates), then add `{% extends \"admin_interface:admin/base_site.html\" %}` to your `base_site.html`\n\n### language chooser not showing\n> i have enabled the **language chooser**, but it is not visible in the admin, what should i do?\n\nyou must configure multilanguage `settings` and `urls` correctly:\n```python\nlanguages = (\n    (\"en\", _(\"english\")),\n    (\"it\", _(\"italiano\")),\n    (\"fr\", _(\"fran\u00e7ais\")),\n    # more than one language is expected here\n)\nlanguage_code = \"en\"\nuse_i18n = true\nmiddleware = [\n    # ...\n    \"django.middleware.locale.localemiddleware\",\n    # ...\n]\n```\n\n```python\nfrom django.conf.urls.i18n import i18n_patterns\nfrom django.contrib import admin\nfrom django.urls import include, path\n\n# ...\n\nurlpatterns = [\n    path(\"i18n/\", include(\"django.conf.urls.i18n\")),\n]\nurlpatterns += i18n_patterns(path(\"admin/\", admin.site.urls))\n```\n\n## testing\n```bash\n# clone repository\ngit clone https://github.com/fabiocaccamo/django-admin-interface.git && cd django-admin-interface\n\n# create virtualenv and activate it\npython -m venv venv && . venv/bin/activate\n\n# upgrade pip\npython -m pip install --upgrade pip\n\n# install requirements\npip install -r requirements.txt -r requirements-test.txt\n\n# install pre-commit to run formatters and linters\npre-commit install --install-hooks\n\n# run tests\ntox\n# or\npython runtests.py\n# or\npython -m django test --settings \"tests.settings\"\n```\n\n## contributing\ncontributions are always welcome, please follow these steps for submitting good quality prs:\n\n- :exclamation: **open an issue**, please don't submit any pr that doesn't refer to an existing issue.\n- :computer: **work on changes**, changes should *preferably* be covered by tests to avoid regressions in the future.\n- :globe_with_meridians: **update the translations** files.\n- :test_tube: **run tests** ensuring that there are no errors.\n- :inbox_tray: **submit a pull-request** and mark it as **\"ready for review\"** only if it passes the `ci`.\n\n## license\nreleased under [mit license](license.txt).\n\n---\n\n## supporting\n\n- :star: star this project on [github](https://github.com/fabiocaccamo/django-admin-interface)\n- :octocat: follow me on [github](https://github.com/fabiocaccamo)\n- :blue_heart: follow me on [twitter](https://twitter.com/fabiocaccamo)\n- :moneybag: sponsor me on [github](https://github.com/sponsors/fabiocaccamo)\n\n## see also\n\n- [`django-colorfield`](https://github.com/fabiocaccamo/django-colorfield) - simple color field for models with a nice color-picker in the admin. \ud83c\udfa8\n\n- [`django-extra-settings`](https://github.com/fabiocaccamo/django-extra-settings) - config and manage typed extra settings using just the django admin. \u2699\ufe0f\n\n- [`django-maintenance-mode`](https://github.com/fabiocaccamo/django-maintenance-mode) - shows a 503 error page when maintenance-mode is on. \ud83d\udea7 \ud83d\udee0\ufe0f\n\n- [`django-redirects`](https://github.com/fabiocaccamo/django-redirects) - redirects with full control. \u21aa\ufe0f\n\n- [`django-treenode`](https://github.com/fabiocaccamo/django-treenode) - probably the best abstract model / admin for your tree based stuff. \ud83c\udf33\n\n- [`python-benedict`](https://github.com/fabiocaccamo/python-benedict) - dict subclass with keylist/keypath support, i/o shortcuts (base64, csv, json, pickle, plist, query-string, toml, xml, yaml) and many utilities. \ud83d\udcd8\n\n- [`python-codicefiscale`](https://github.com/fabiocaccamo/python-codicefiscale) - encode/decode italian fiscal codes - codifica/decodifica del codice fiscale. \ud83c\uddee\ud83c\uddf9 \ud83d\udcb3\n\n- [`python-fontbro`](https://github.com/fabiocaccamo/python-fontbro) - friendly font operations. \ud83e\udde2\n\n- [`python-fsutil`](https://github.com/fabiocaccamo/python-fsutil) - file-system utilities for lazy devs. \ud83e\udddf\u200d\u2642\ufe0f\n",
  "docs_url": null,
  "keywords": "django,admin,interface,responsive,flat,theme,custom,ui",
  "license": "the mit license (mit)  copyright (c) 2016 - present, fabio caccamo - fabio.caccamo@gmail.com  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.  the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software. ",
  "name": "django-admin-interface",
  "package_url": "https://pypi.org/project/django-admin-interface/",
  "project_url": "https://pypi.org/project/django-admin-interface/",
  "project_urls": {
    "Documentation": "https://github.com/fabiocaccamo/django-admin-interface#readme",
    "Download": "https://github.com/fabiocaccamo/django-admin-interface/releases",
    "Funding": "https://github.com/sponsors/fabiocaccamo/",
    "Homepage": "https://github.com/fabiocaccamo/django-admin-interface",
    "Issues": "https://github.com/fabiocaccamo/django-admin-interface/issues",
    "Twitter": "https://twitter.com/fabiocaccamo"
  },
  "release_url": "https://pypi.org/project/django-admin-interface/0.28.0/",
  "requires_dist": [
    "django-colorfield <1.0.0,>=0.8.0",
    "python-slugify <9.0.0,>=7.0.0"
  ],
  "requires_python": "",
  "summary": "django's default admin interface with superpowers - customizable themes, popup windows replaced by modals and many other features.",
  "version": "0.28.0",
  "releases": [],
  "developers": [
    "fabio.caccamo@gmail.com"
  ],
  "kwds": "admin_interface_theme_django django djangoproject admin_interface admin_interface_theme_",
  "license_kwds": "copyright mit license liable liability",
  "libtype": "pypi",
  "id": "pypi_django_admin_interface",
  "homepage": "",
  "release_count": 109,
  "dependency_ids": [
    "pypi_django_colorfield",
    "pypi_python_slugify"
  ]
}
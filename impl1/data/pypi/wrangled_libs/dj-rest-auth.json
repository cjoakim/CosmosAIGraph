{
  "classifiers": [
    "framework :: django",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "operating system :: os independent",
    "topic :: software development"
  ],
  "description": "# dj-rest-auth\n[![<imerica>](https://circleci.com/gh/imerica/dj-rest-auth.svg?style=svg)](https://app.circleci.com/pipelines/github/imerica/dj-rest-auth)\n\n\ndrop-in api endpoints for handling authentication securely in django rest framework. works especially well \nwith spas (e.g., react, vue, angular), and mobile applications. \n\n## requirements\n- django 2, 3, or 4 (see unit test coverage in ci)\n- python 3\n\n## quick setup\n\ninstall package\n\n    pip install dj-rest-auth\n    \nadd `dj_rest_auth` app to installed_apps in your django settings.py:\n\n```python\ninstalled_apps = (\n    ...,\n    'rest_framework',\n    'rest_framework.authtoken',\n    ...,\n    'dj_rest_auth'\n)\n```\n    \nadd url patterns\n\n```python\nurlpatterns = [\n    path('dj-rest-auth/', include('dj_rest_auth.urls')),\n]\n```\n    \n\n(optional) use http-only cookies\n\n```python\nrest_auth = {\n    'use_jwt': true,\n    'jwt_auth_cookie': 'jwt-auth',\n}\n```\n\n### testing\n\ninstall required modules with `pip install -r  dj_rest_auth/tests/requirements.pip`\n\nto run the tests within a virtualenv, run `python runtests.py` from the repository directory.\nthe easiest way to run test coverage is with [`coverage`](https://pypi.org/project/coverage/),\nwhich runs the tests against all supported django installs. to run the test coverage \nwithin a virtualenv, run `coverage run ./runtests.py` from the repository directory then run `coverage report`.\n\n#### tox\n\ntesting may also be done using [`tox`](https://pypi.org/project/tox/), which\nwill run the tests against all supported combinations of python and django.\n\ninstall tox, either globally or within a virtualenv, and then simply run `tox`\nfrom the repository directory. as there are many combinations, you may run them\nin [`parallel`](https://tox.readthedocs.io/en/latest/config.html#cmdoption-tox-p)\nusing `tox --parallel`.\n\nthe `tox.ini` includes an environment for testing code [`coverage`](https://pypi.org/project/coverage/)\nand you can run it and view this report with `tox -e coverage`.\n\nlinting may also be performed via [`flake8`](https://pypi.org/project/flake8/)\nby running `tox -e flake8`.\n\n### documentation\n\nview the full documentation here: https://dj-rest-auth.readthedocs.io/en/latest/index.html\n\n\n### acknowledgements\n\nthis project began as a fork of `django-rest-auth`. big thanks to everyone who contributed to that repo!\n\n#### a note on django allauth from @imerica\n\nthis project has optional and very narrow support for django-allauth. as the maintainer, i have no interest in making this package support all use cases in django-allauth. i would rather focus on improving the quality of the base functionality or focus on oidc support instead. pull requests that extend or add more support for django-allauth will most likely be declined. do you disagree? feel free to fork this repo!\n",
  "docs_url": null,
  "keywords": "django rest auth registration rest-framework django-registration api",
  "license": "mit",
  "name": "dj-rest-auth",
  "package_url": "https://pypi.org/project/dj-rest-auth/",
  "project_url": "https://pypi.org/project/dj-rest-auth/",
  "project_urls": {
    "Homepage": "http://github.com/iMerica/dj-rest-auth"
  },
  "release_url": "https://pypi.org/project/dj-rest-auth/5.0.2/",
  "requires_dist": [
    "Django>=3.2",
    "djangorestframework>=3.13.0",
    "django-allauth<0.58.0,>=0.56.0; extra == \"with-social\""
  ],
  "requires_python": ">=3.6",
  "summary": "authentication and registration in django rest framework",
  "version": "5.0.2",
  "releases": [],
  "developers": [
    "imerica",
    "imichael@pm.me"
  ],
  "kwds": "dj_rest_auth rest_auth rest_framework authentication auth",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_dj_rest_auth",
  "homepage": "http://github.com/imerica/dj-rest-auth",
  "release_count": 47,
  "dependency_ids": [
    "pypi_django",
    "pypi_django_allauth",
    "pypi_djangorestframework"
  ]
}
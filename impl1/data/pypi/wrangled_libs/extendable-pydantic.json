{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent"
  ],
  "description": "[![ci](https://github.com/lmignon/pydantic-ext/actions/workflows/ci.yml/badge.svg)](https://github.com/lmignon/pydantic-ext/actions/workflows/ci.yml)\n[![codecov](https://codecov.io/gh/lmignon/pydantic-ext/branch/master/graph/badge.svg?token=z9fwm57t14)](https://codecov.io/gh/lmignon/pydantic-ext)\n\n# extendable pydantic\n\nthis addons provides a new type used to declare [pydantic](https://pypi.org/project/pydantic/)\nmodel as [extendable](https://pypi.org/project/extendable/) class.\n\nfrom release 1.0.0 it only supports pydantic >= 2.0.0.\n\n\n```python\nfrom pydantic import basemodel\nfrom extendable_pydantic import extendablemodelmeta\nfrom extendable import context, registry\n\nclass location(basemodel, metaclass=extendablemodelmeta):\n    lat = 0.1\n    lng = 10.1\n\nclass extendedlocation(location, extends=location):\n    name: str\n\n_registry = registry.extendableclassesregistry()\ncontext.extendable_registry.set(_registry)\n_registry.init_registry()\n\nloc = location(**{\"lat\": 12.3, \"lng\": 13.2, \"name\": \"my loc\"})\n\nloc.model_dump() == {\"lat\": 12.3, \"lng\": 13.2, \"name\": \"my loc\"}\n#> true\n\nloc.model_json_schema()\n#> {'title': 'location', 'type': 'object', 'properties': {'lat': {'title': 'lat', 'default': 0.1, 'type': 'number'}, 'lng': {'title': 'lng', 'default': 10.1, 'type': 'number'}, 'name': {'title': 'name', 'type': 'string'}}, 'required': ['name']}\n```\n\n## development\n\n`pip install -e .`\n\nthen, copy `extendable_pydantic_patcher.pth` to `$virtual_env/lib/python3.10/site-packages`.\n\n## release\n\n\n* run ``bumpversion patch|minor|major --list\n* check the new_version value returned by the previous command\n* run towncrier build.\n* inspect and commit the updated history.rst.\n* git tag {new_version} ; git push --tags.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license  copyright (c) 2021 laurent mignon (acsone)  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.  the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
  "name": "extendable-pydantic",
  "package_url": "https://pypi.org/project/extendable-pydantic/",
  "project_url": "https://pypi.org/project/extendable-pydantic/",
  "project_urls": {
    "Source": "https://github.com/lmignon/extendable-pydantic"
  },
  "release_url": "https://pypi.org/project/extendable-pydantic/1.3.0/",
  "requires_dist": [
    "extendable>=1.2.0",
    "pydantic>=2.0.2",
    "wrapt",
    "mypy>=1.4.1; extra == 'mypy'",
    "bumpversion; extra == 'release'",
    "towncrier; extra == 'release'",
    "coverage[toml]; extra == 'test'",
    "pytest; extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "",
  "version": "1.3.0",
  "releases": [],
  "developers": [
    "laurent.mignon@acsone.eu"
  ],
  "kwds": "extendable_pydantic extendable_pydantic_patcher pydantic extendable_registry python3",
  "license_kwds": "copyright license liable mit liability",
  "libtype": "pypi",
  "id": "pypi_extendable_pydantic",
  "homepage": "",
  "release_count": 13,
  "dependency_ids": [
    "pypi_bumpversion",
    "pypi_coverage",
    "pypi_extendable",
    "pypi_mypy",
    "pypi_pydantic",
    "pypi_pytest",
    "pypi_towncrier",
    "pypi_wrapt"
  ]
}
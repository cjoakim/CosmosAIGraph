{
  "classifiers": [],
  "description": "# pyqtlet2\n\npyqtlet is a leaflet map wrapper for qt bindings. in construction and design, it mimics the [official leaflet api](http://leafletjs.com/reference-1.3.0.html) as much as possible.\n\n## about\n\nthis is a fork of the repository pyqtlet from @skylarkdrones. since the original repository is not further maintained. since i find this package very useful for a map implementation in the qt environment, i want to further develop this package. if you want to extend this package feel free to get in contact with me or create an issue/pull request with a change! \n\n## installation\n\nyou as a user need to specify the qt package you want to use. please check [qtpy](https://github.com/spyder-ide/qtpy) to find out which qt bindings can be used. \n\n\n\n``` bash\npip3 install \"pyqtlet2[pyqt5]\"\n# or\npip3 install \"pyqtlet2[pyside6]\"\n```\n\nif you have multiple qt bindings installed in your environment, please specify the necessary environment variable inside your code.\n\n``` python \nimport os\nos.environ['qt_api'] = 'pyqt5'\nfrom qtpy import qtgui\n```\n\ncheck if the installation was successful:\n\n``` bash\n# to test whether it is successfully working\npython3 \n>>> from pyqtlet import l, mapwidget\n>>> # no errors\n```\n\n## usage\n\n``` python\nimport os\nimport sys\nos.environ['qt_api'] = 'pyqt5'\nfrom qtpy.qtwidgets import qapplication, qvboxlayout, qwidget\nfrom pyqtlet2 import l, mapwidget\n\n\nclass mapwindow(qwidget):\n    def __init__(self):\n        # setting up the widgets and layout\n        super().__init__()\n        self.mapwidget = mapwidget()\n        self.layout = qvboxlayout()\n        self.layout.addwidget(self.mapwidget)\n        self.setlayout(self.layout)\n\n        # working with the maps with pyqtlet\n        self.map = l.map(self.mapwidget)\n        self.map.setview([12.97, 77.59], 10)\n        l.tilelayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png').addto(self.map)\n        self.marker = l.marker([12.934056, 77.610029])\n        self.marker.bindpopup('maps are a treasure.')\n        self.map.addlayer(self.marker)\n        self.show()\n\nif __name__ == '__main__':\n    app = qapplication(sys.argv)\n    widget = mapwindow()\n    sys.exit(app.exec_())\n```\n\n## additional leaflet packages\n- leaflet.draw (version 0.4.14) - https://github.com/leaflet/leaflet.draw\n- leaflet.rotatedmarker (version 0.2.0) - https://github.com/bbecquet/leaflet.rotatedmarker\n\n## using unimplemented leaflet features\nat this time, there is none actively adding features to pyqtlet. this means that there\nare a lot of leaflet features that are not implemented in pyqtlet. however, there is still\na way to access these features via the `runjavascript` api. this allows arbitrary code to\nbe run within the map window.\n\nfor example, if we want to change the marker icon in the above example, add the following\n2 lines of code after the `self.map.addlayer(self.marker)` statement.\n\n``` python\n        # create a icon called markericon in the js runtime.\n        self.map.runjavascript('var markericon = l.icon({iconurl: \"https://leafletjs.com/examples/custom-icons/leaf-red.png\"});')\n        # edit the existing python object by accessing it's jsname property\n        self.map.runjavascript(f'{self.marker.jsname}.seticon(markericon);')\n```\n\nthis technique will allow users to use all the features available in leaflet.\n\n## contributors\n\na big thank you, goes to all the contributors of this project!\n\n<a href=\"https://github.com/jaweilbaum/pyqtlet2/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=jaweilbaum/pyqtlet2\" />\n</a>\n\n## contributing\nin terms of contributing, there is a lot of work that still needs to be done. \nspecifically, there are a lot of leaflet features that need to be ported into pyqtlet. all contributions welcome.\n",
  "docs_url": null,
  "keywords": "leaflet,qtpy,maps,python,python3",
  "license": "",
  "name": "pyqtlet2",
  "package_url": "https://pypi.org/project/pyqtlet2/",
  "project_url": "https://pypi.org/project/pyqtlet2/",
  "project_urls": {
    "Homepage": "https://github.com/JaWeilBaum/pyqtlet2"
  },
  "release_url": "https://pypi.org/project/pyqtlet2/0.9.3/",
  "requires_dist": [
    "QtPy (>=2.0.1)",
    "PyQt5 (>=5.15.5) ; extra == 'pyqt5'",
    "PyQtWebEngine (>=5.15.5) ; extra == 'pyqt5'",
    "PyQt6 (>=6.2.0) ; extra == 'pyqt6'",
    "PyQt6-WebEngine (>=6.2.0) ; extra == 'pyqt6'",
    "PySide2 ; extra == 'pyside2'",
    "PySide6 ; extra == 'pyside6'"
  ],
  "requires_python": "",
  "summary": "bringing leaflet maps to python qt bindings",
  "version": "0.9.3",
  "releases": [],
  "developers": [
    "leon.friedmann@tum.de",
    "leon_friedmann"
  ],
  "kwds": "qt_api pyqtlet2 qtgui qtwidgets pyqtlet",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pyqtlet2",
  "homepage": "https://github.com/jaweilbaum/pyqtlet2",
  "release_count": 29,
  "dependency_ids": [
    "pypi_pyqt5",
    "pypi_pyqt6",
    "pypi_pyqt6_webengine",
    "pypi_pyqtwebengine",
    "pypi_pyside2",
    "pypi_pyside6",
    "pypi_qtpy"
  ]
}
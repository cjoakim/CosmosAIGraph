{
  "classifiers": [],
  "description": ".. image:: https://raw.githubusercontent.com/quantumlib/cirq/main/docs/images/cirq_logo_color.png\n  :target: https://github.com/quantumlib/cirq\n  :alt: cirq\n  :width: 500px\n\ncirq is a python library for writing, manipulating, and optimizing quantum\ncircuits and running them against quantum computers and simulators.\n\n.. image:: https://github.com/quantumlib/cirq/actions/workflows/ci.yml/badge.svg?event=schedule\n  :target: https://github.com/quantumlib/cirq\n  :alt: build status\n\n.. image:: https://codecov.io/gh/quantumlib/cirq/branch/main/graph/badge.svg\n  :target: https://codecov.io/gh/quantumlib/cirq\n\n.. image:: https://badge.fury.io/py/cirq.svg\n  :target: https://badge.fury.io/py/cirq\n\n.. image:: https://readthedocs.org/projects/cirq/badge/?version=latest\n  :target: https://readthedocs.org/projects/cirq/versions/\n  :alt: documentation status\n\n\ninstallation and documentation\n------------------------------\n\ncirq documentation is available at `quantumai.google/cirq <https://quantumai.google/cirq>`_.\n\ndocumentation for the latest **pre-release** version of cirq (tracks the repository's main branch; what you get if you ``pip install --pre cirq``), is available `here <https://quantumai.google/reference/python/cirq/all_symbols?version=nightly>`__.\n\ndocumentation for the latest **stable** version of cirq (what you get if you ``pip install cirq``) is available `here <https://quantumai.google/reference/python/cirq/all_symbols>`__.\n\n\n- `installation <https://quantumai.google/cirq/start/install>`_\n- `documentation <https://quantumai.google/cirq>`_\n- `tutorials <https://quantumai.google/cirq/build>`_\n\nfor a comprehensive list all of the interactive jupyter notebooks in our repo (including the ones not yet published to the site) open our repo in `colab <https://colab.research.google.com/github/quantumlib/cirq>`_.\n\nfor the latest news regarding cirq, sign up to the `cirq-announce email list <https://groups.google.com/forum/#!forum/cirq-announce>`__!\n\n\nhello qubit\n-----------\n\na simple example to get you up and running:\n\n.. code-block:: python\n\n  import cirq\n\n  # pick a qubit.\n  qubit = cirq.gridqubit(0, 0)\n\n  # create a circuit\n  circuit = cirq.circuit(\n      cirq.x(qubit)**0.5,  # square root of not.\n      cirq.measure(qubit, key='m')  # measurement.\n  )\n  print(\"circuit:\")\n  print(circuit)\n\n  # simulate the circuit several times.\n  simulator = cirq.simulator()\n  result = simulator.run(circuit, repetitions=20)\n  print(\"results:\")\n  print(result)\n\nexample output:\n\n.. code-block::\n\n  circuit:\n  (0, 0): \u2500\u2500\u2500x^0.5\u2500\u2500\u2500m('m')\u2500\u2500\u2500\n  results:\n  m=11000111111011001000\n\n\nfeature requests / bugs / questions\n-----------------------------------\n\nif you have feature requests or you found a bug, please `file them on github <https://github.com/quantumlib/cirq/issues/new/choose>`__.\n\nfor questions about how to use cirq post to\n`quantum computing stack exchange <https://quantumcomputing.stackexchange.com/>`__ with the\n`cirq <https://quantumcomputing.stackexchange.com/questions/tagged/cirq>`__ tag.\n\nhow to cite cirq\n----------------\n\ncirq is uploaded to zenodo automatically. click on the badge below to see all the citation formats for all versions.\n\n.. image:: https://zenodo.org/badge/doi/10.5281/zenodo.4062499.svg\n  :target: https://doi.org/10.5281/zenodo.4062499\n  :alt: doi\n\ncirq contributors community\n---------------------------\n\nwe welcome contributions! before opening your first pr, a good place to start is to read our\n`guidelines <https://github.com/quantumlib/cirq/blob/main/contributing.md>`__.\n\nwe are dedicated to cultivating an open and inclusive community to build software for near term quantum computers.\nplease read our `code of conduct <https://github.com/quantumlib/cirq/blob/main/code_of_conduct.md>`__ for the rules of engagement within our community.\n\nfor real time informal discussions about cirq, join our `cirqdev <https://gitter.im/cirqdev/community>`__ gitter channel, come hangout with us!\n\n**cirq cynque** is our weekly meeting for contributors to discuss upcoming features, designs, issues, community and status of different efforts.\nto get an invitation please join the `cirq-dev email list <https://groups.google.com/forum/#!forum/cirq-dev>`__ which also serves as yet another platform to discuss contributions and design ideas.\n\n\nsee also\n--------\n\nfor those interested in using quantum computers to solve problems in\nchemistry and materials science, we encourage exploring\n`openfermion <https://github.com/quantumlib/openfermion>`__ and\nits sister library for compiling quantum simulation algorithms in cirq,\n`openfermion-cirq <https://github.com/quantumlib/openfermion-cirq>`__.\n\nfor machine learning enthusiasts, `tensorflow quantum <https://github.com/tensorflow/quantum>`__ is a great project to check out!\n\nfor a powerful quantum circuit simulator that integrates well with cirq, we recommend looking at `qsim <https://github.com/quantumlib/qsim>`__.\n\nfinally, `recirq <https://github.com/quantumlib/recirq>`__ contains real world experiments using cirq.\n\ncirq is not an official google product. copyright 2019 the cirq developers\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache 2",
  "name": "cirq",
  "package_url": "https://pypi.org/project/cirq/",
  "project_url": "https://pypi.org/project/cirq/",
  "project_urls": {
    "Homepage": "http://github.com/quantumlib/cirq"
  },
  "release_url": "https://pypi.org/project/cirq/1.3.0/",
  "requires_dist": [
    "cirq-aqt ==1.3.0",
    "cirq-core ==1.3.0",
    "cirq-ft ==1.3.0",
    "cirq-google ==1.3.0",
    "cirq-ionq ==1.3.0",
    "cirq-pasqal ==1.3.0",
    "cirq-rigetti ==1.3.0",
    "cirq-web ==1.3.0",
    "mypy ==1.2.0 ; extra == 'dev_env'",
    "types-backports ==0.1.3 ; extra == 'dev_env'",
    "types-cachetools ; extra == 'dev_env'",
    "types-protobuf ~=3.20 ; extra == 'dev_env'",
    "types-requests ==2.28.1 ; extra == 'dev_env'",
    "types-setuptools ==62.6.1 ; extra == 'dev_env'",
    "pytest ; extra == 'dev_env'",
    "pytest-asyncio ; extra == 'dev_env'",
    "pytest-cov ~=3.0 ; extra == 'dev_env'",
    "pytest-randomly ; extra == 'dev_env'",
    "coverage <=6.2 ; extra == 'dev_env'",
    "pytest-xdist ~=2.2.0 ; extra == 'dev_env'",
    "filelock ~=3.0.12 ; extra == 'dev_env'",
    "freezegun ~=0.3.15 ; extra == 'dev_env'",
    "importlib-metadata ; extra == 'dev_env'",
    "virtualenv ; extra == 'dev_env'",
    "virtualenv-clone ; extra == 'dev_env'",
    "black ==23.3.0 ; extra == 'dev_env'",
    "pylint ~=2.13.0 ; extra == 'dev_env'",
    "grpcio-tools ~=1.56.0 ; extra == 'dev_env'",
    "mypy-protobuf ==3.4 ; extra == 'dev_env'",
    "ipython >=7.34.0 ; extra == 'dev_env'",
    "notebook <=6.4.7,>=6.4.1 ; extra == 'dev_env'",
    "ipykernel ==5.3.4 ; extra == 'dev_env'",
    "papermill ~=2.3.2 ; extra == 'dev_env'",
    "seaborn ~=0.11.1 ; extra == 'dev_env'",
    "setuptools ; extra == 'dev_env'",
    "wheel ; extra == 'dev_env'",
    "twine ; extra == 'dev_env'",
    "asv ; extra == 'dev_env'",
    "qiskit-aer ~=0.12.2 ; extra == 'dev_env'",
    "rstcheck ~=3.3.1 ; extra == 'dev_env'",
    "codeowners ; (platform_system != \"Windows\") and extra == 'dev_env'"
  ],
  "requires_python": ">=3.9.0",
  "summary": "a framework for creating, editing, and invoking noisy intermediate scale quantum (nisq) circuits.",
  "version": "1.3.0",
  "releases": [],
  "developers": [
    "cirq-dev@googlegroups.com",
    "the_cirq_developers"
  ],
  "kwds": "quantumlib quantumcomputing cirq cirqdev qubit",
  "license_kwds": "apache 2",
  "libtype": "pypi",
  "id": "pypi_cirq",
  "homepage": "http://github.com/quantumlib/cirq",
  "release_count": 1767,
  "dependency_ids": [
    "pypi_asv",
    "pypi_black",
    "pypi_cirq_aqt",
    "pypi_cirq_core",
    "pypi_cirq_ft",
    "pypi_cirq_google",
    "pypi_cirq_ionq",
    "pypi_cirq_pasqal",
    "pypi_cirq_rigetti",
    "pypi_cirq_web",
    "pypi_codeowners",
    "pypi_coverage",
    "pypi_filelock",
    "pypi_freezegun",
    "pypi_grpcio_tools",
    "pypi_importlib_metadata",
    "pypi_ipykernel",
    "pypi_ipython",
    "pypi_mypy",
    "pypi_mypy_protobuf",
    "pypi_notebook",
    "pypi_papermill",
    "pypi_pylint",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_pytest_randomly",
    "pypi_pytest_xdist",
    "pypi_qiskit_aer",
    "pypi_rstcheck",
    "pypi_seaborn",
    "pypi_setuptools",
    "pypi_twine",
    "pypi_types_backports",
    "pypi_types_cachetools",
    "pypi_types_protobuf",
    "pypi_types_requests",
    "pypi_types_setuptools",
    "pypi_virtualenv",
    "pypi_virtualenv_clone",
    "pypi_wheel"
  ]
}
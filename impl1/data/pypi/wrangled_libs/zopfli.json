{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "programming language :: python :: implementation :: cpython",
    "topic :: system :: archiving :: compression"
  ],
  "description": "|build status|\n\npyzopfli\n========\n\ncpython bindings for\n`zopfli <http://googledevelopers.blogspot.com/2013/02/compress-data-more-densely-with-zopfli.html>`__.\n\nit requires python 3.8 or greater.\n\nusage\n=====\n\npyzopfli is a straight forward wrapper around zopfli's zlibcompress method.\n\n::\n\n    from zopfli.zlib import compress\n    from zlib import decompress\n    s = 'hello world'\n    print decompress(compress(s))\n\npyzopfli also wraps gzipcompress, but the api point does not try to\nmimic the gzip module.\n\n::\n\n    from zopfli.gzip import compress \n    from stringio import stringio\n    from gzip import gzipfile\n    print gzipfile(fileobj=stringio(compress(\"hello world!\"))).read()\n\nboth zopfli.zlib.compress and zopfli.gzip.compress support the following\nkeyword arguments. all values should be integers; boolean parmaters are\ntreated as expected, 0 and >0 as false and true.\n\n-  *verbose* dumps zopfli debugging data to stderr\n\n-  *numiterations* maximum amount of times to rerun forward and backward\n   pass to optimize lz77 compression cost. good values: 10, 15 for small\n   files, 5 for files over several mb in size or it will be too slow.\n\n-  *blocksplitting* if true, splits the data in multiple deflate blocks\n   with optimal choice for the block boundaries. block splitting gives\n   better compression. default: true (1).\n\n-  *blocksplittinglast* if true, chooses the optimal block split points\n   only after doing the iterative lz77 compression. if false, chooses\n   the block split points first, then does iterative lz77 on each\n   individual block. depending on the file, either first or last gives\n   the best compression. default: false (0).\n\n-  *blocksplittingmax* maximum amount of blocks to split into (0 for\n   unlimited, but this can give extreme results that hurt compression on\n   some files). default value: 15.\n\ntodo\n====\n\n-  stop reading the entire file into memory and support streaming\n\n-  monkey patch zlib and gzip so code with an overly tight binding can\n   be easily modified to use zopfli.\n\n.. |build status| image:: https://github.com/fonttools/py-zopfli/actions/workflows/ci.yml/badge.svg?branch=master\n   :target: https://github.com/fonttools/py-zopfli/actions/workflows/ci.yml\n",
  "docs_url": null,
  "keywords": "",
  "license": "asl",
  "name": "zopfli",
  "package_url": "https://pypi.org/project/zopfli/",
  "project_url": "https://pypi.org/project/zopfli/",
  "project_urls": {
    "Homepage": "https://github.com/fonttools/py-zopfli"
  },
  "release_url": "https://pypi.org/project/zopfli/0.2.3/",
  "requires_dist": [
    "pytest ; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "zopfli module for python",
  "version": "0.2.3",
  "releases": [],
  "developers": [
    "adam_deprince",
    "cosimo@anthrotype.com",
    "cosimo_lupo",
    "deprince@googlealumni.com"
  ],
  "kwds": "zlibcompress zopfli zlib pyzopfli gzipcompress",
  "license_kwds": "asl",
  "libtype": "pypi",
  "id": "pypi_zopfli",
  "homepage": "https://github.com/fonttools/py-zopfli",
  "release_count": 20,
  "dependency_ids": [
    "pypi_pytest"
  ]
}
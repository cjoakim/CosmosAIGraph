{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: security :: cryptography",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "![pyhanko](docs/images/pyhanko-logo.svg)\n\n![status](https://github.com/matthiasvalvekens/pyhanko/workflows/pytest/badge.svg)\n![codecov](https://img.shields.io/codecov/c/github/matthiasvalvekens/pyhanko)\n![pypi](https://img.shields.io/pypi/v/pyhanko.svg)\n\n\n\nthe lack of open-source cli tooling to handle digitally signing and stamping pdf files was bothering me, so i went ahead and rolled my own.\n\n*note:* the working title of this project (and former name of the repository on github) was `pdf-stamp`, which might still linger in some references.\n\n*note:* this project is currently in beta, and not yet production-ready.\n\n### documentation\n\nthe [documentation for pyhanko is hosted on readthedocs](https://pyhanko.readthedocs.io/en/latest/)\nand includes information on cli usage, library usage, and api reference documentation derived from\ninline docstrings.\n\n### installing\n\npyhanko is hosted on [pypi](https://pypi.org/project/pyhanko/),\nand can be installed using `pip`:\n\n```bash\npip install 'pyhanko[pkcs11,image-support,opentype,xmp]'\n```\n\ndepending on your shell, you might have to leave off the quotes:\n\n```bash\npip install pyhanko[pkcs11,image-support,opentype,xmp]\n```\n\nthis `pip` invocation includes the optional dependencies required for pkcs#11, image handling and\nopentype/truetype support.\n\npyhanko requires python 3.8 or later.\n\n### contributing\n\ndo you have a question about pyhanko?\n[post it on the discussion forum][discussion-forum]!\n\nthis project welcomes community contributions. if there's a feature you'd like\nto have implemented, a bug you want to report, or if you're keen on\ncontributing in some other way: that's great! however, please make sure to\nreview the [contribution guidelines](contributing.md) before making your\ncontribution. when in doubt, [ask for help on the discussion board][discussion-forum].\n\n**please do not ask for support on the issue tracker.** the issue tracker is for bug\nreports and actionable feature requests. questions related to pyhanko usage\nand development should be asked in the [discussion forum][discussion-forum] instead.\n\n\n[discussion-forum]: https://github.com/matthiasvalvekens/pyhanko/discussions\n\n\n### features\n\nthe code in this repository functions both as a library and as a command-line tool.\nit's nowhere near complete, but here is a short overview of the features.\nnote that not all of these are necessarily exposed through the cli.\n\n - stamping\n    - simple text-based stamps\n    - qr stamps\n    - font can be monospaced, or embedded from a ttf/otf font (requires `[opentype]` optional deps)\n - document preparation \n    - add empty signature fields to existing pdfs\n    - add seed values to signature fields, with or without constraints\n    - manage document metadata\n - signing\n    * option to use async signing api\n    - signatures can be invisible, or with an appearance based on the stamping tools\n    - ltv-enabled signatures are supported\n        - pades baseline profiles b-b, b-t, b-lt and b-lta are all supported.\n        - adobe-style revocation info embedding is also supported.\n    - rfc 3161 timestamp server support\n    - support for multiple signatures (all modifications are executed using incremental updates to \n      preserve cryptographic integrity)\n    - supports rsa, dsa, ecdsa and eddsa\n      - rsa padding modes: pkcs#1 v1.5 and rsassa-pss\n      - dsa\n      - ecdsa curves: anything supported by the `cryptography` library, \n        see [here](https://cryptography.io/en/latest/hazmat/primitives/asymmetric/ec/#elliptic-curves).\n      - eddsa: both ed25519 and ed448 are supported (in \"pure\" mode only, as per rfc 8419)\n    - built-in support for pdf extensions defined in iso/ts 32001 and iso/ts 32002.\n    - pkcs#11 support\n        - available both from the library and through the cli\n        - extra convenience wrapper for belgian eid cards\n    - \"interrupted signing\" mode for ease of integration with remote and/or interactive signing\n      processes.\n - signature validation\n    - cryptographic integrity check\n    - authentication through x.509 chain of trust validation\n    - ltv validation/sanity check (ad hoc)\n    - difference analysis on files with multiple signatures and/or incremental \n      updates made after signing (experimental)\n    - signature seed value constraint validation\n    - ades validation (incubating)\n - encryption\n    - all encryption methods in pdf 2.0 are supported.\n    - in addition, we support a number of extra file encryption\n      modes of operation for the public-key security handler that are not\n      explicitly called out in the standard.\n         - rsaes-oaep (does not appear to be widely supported in pdf tooling)\n         - ephemeral-static ecdh with x9.63 key derivation (supported by acrobat)\n - cli & configuration\n    - yaml-based configuration (optional for most features)\n    - cli based on `click` \n        - available as `pyhanko` (when installed) or `python -m pyhanko` when running from\n          the source directory\n        - built-in help: run `pyhanko --help` to get started\n\n\n### some todos and known limitations\n\nsee the [known issues](https://pyhanko.readthedocs.io/en/latest/known-issues.html)\npage in the documentation.\n\n\n### acknowledgement\n\nthis repository includes code from `pypdf2` (with both minor and major modifications); the original license has been included [here](pyhanko/pdf_utils/license.pypdf2).\n\n\n## license\n\nmit license, see [license](license).\n",
  "docs_url": null,
  "keywords": "signature,pdf,pades,digital-signature,pkcs11",
  "license": "mit",
  "name": "pyhanko",
  "package_url": "https://pypi.org/project/pyHanko/",
  "project_url": "https://pypi.org/project/pyHanko/",
  "project_urls": {
    "Changes": "https://pyhanko.readthedocs.io/en/latest/changelog.html",
    "Documentation": "https://pyhanko.readthedocs.io/",
    "Homepage": "https://github.com/MatthiasValvekens/pyHanko",
    "Issue Tracker": "https://github.com/MatthiasValvekens/pyHanko/issues",
    "Source Code": "https://github.com/MatthiasValvekens/pyHanko"
  },
  "release_url": "https://pypi.org/project/pyHanko/0.21.0/",
  "requires_dist": [
    "asn1crypto >=1.5.1",
    "qrcode >=7.3.1",
    "tzlocal >=4.3",
    "pyhanko-certvalidator <0.27,>=0.26.2",
    "click >=8.1.3",
    "requests >=2.31.0",
    "pyyaml >=6.0",
    "cryptography >=41.0.5",
    "aiohttp ~=3.9.0 ; extra == 'async-http'",
    "sphinx ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "xsdata ~=23.8 ; extra == 'etsi'",
    "oscrypto >=1.2.1 ; extra == 'extra-pubkey-algs'",
    "Pillow >=7.2.0 ; extra == 'image-support'",
    "python-barcode ==0.15.1 ; extra == 'image-support'",
    "pyHanko[async-http,extra-pubkey-algs,testing-basic,xmp] ; extra == 'live-test'",
    "pytest-aiohttp ~=1.0.4 ; extra == 'live-test'",
    "certomancer-csc-dummy ==0.2.3 ; extra == 'live-test'",
    "certomancer[pkcs12,web-api] <0.12.0,>=0.11.0 ; extra == 'live-test'",
    "pytest-cov <4.2,>=4.0 ; extra == 'live-test'",
    "pyHanko[async-http,etsi,extra-pubkey-algs,image-support,opentype,pkcs11,xmp] ; extra == 'mypy'",
    "types-requests ; extra == 'mypy'",
    "types-python-dateutil ; extra == 'mypy'",
    "types-PyYAML ; extra == 'mypy'",
    "types-tzlocal ; extra == 'mypy'",
    "fonttools >=4.33.3 ; extra == 'opentype'",
    "uharfbuzz <0.38.0,>=0.25.0 ; extra == 'opentype'",
    "python-pkcs11 ~=0.7.0 ; extra == 'pkcs11'",
    "pyHanko[async-http,extra-pubkey-algs,image-support,opentype,pkcs11,testing-basic,xmp] ; extra == 'testing'",
    "pyHanko[etsi] ; extra == 'testing'",
    "pytest-aiohttp ~=1.0.4 ; extra == 'testing'",
    "certomancer-csc-dummy ==0.2.3 ; extra == 'testing'",
    "pytest >=6.1.1 ; extra == 'testing-basic'",
    "requests-mock >=1.8.0 ; extra == 'testing-basic'",
    "freezegun >=1.1.0 ; extra == 'testing-basic'",
    "pytest-asyncio ==0.21.1 ; extra == 'testing-basic'",
    "certomancer ==0.11.* ; extra == 'testing-basic'",
    "pytest-cov <4.2,>=4.0 ; extra == 'testing-basic'",
    "backports.zoneinfo[tzdata] ; (python_version < \"3.9\") and extra == 'testing-basic'",
    "defusedxml ~=0.7.1 ; extra == 'xmp'"
  ],
  "requires_python": ">=3.8",
  "summary": "tools for stamping and signing pdf files",
  "version": "0.21.0",
  "releases": [],
  "developers": [
    "dev@mvalvekens.be"
  ],
  "kwds": "pytest signature signatures pkcs11 pyhanko",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pyhanko",
  "homepage": "",
  "release_count": 31,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_asn1crypto",
    "pypi_backports.zoneinfo",
    "pypi_certomancer",
    "pypi_certomancer_csc_dummy",
    "pypi_click",
    "pypi_cryptography",
    "pypi_defusedxml",
    "pypi_fonttools",
    "pypi_freezegun",
    "pypi_oscrypto",
    "pypi_pillow",
    "pypi_pyhanko",
    "pypi_pyhanko_certvalidator",
    "pypi_pytest",
    "pypi_pytest_aiohttp",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_python_barcode",
    "pypi_python_pkcs11",
    "pypi_pyyaml",
    "pypi_qrcode",
    "pypi_requests",
    "pypi_requests_mock",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_types_python_dateutil",
    "pypi_types_pyyaml",
    "pypi_types_requests",
    "pypi_types_tzlocal",
    "pypi_tzlocal",
    "pypi_uharfbuzz",
    "pypi_xsdata"
  ]
}
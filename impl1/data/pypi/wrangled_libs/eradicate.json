{
  "classifiers": [
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "topic :: software development :: quality assurance"
  ],
  "description": "=========\neradicate\n=========\n\n.. image:: https://github.com/myint/eradicate/actions/workflows/test.yml/badge.svg\n    :target: https://github.com/myint/eradicate/actions/workflows/test.yml\n    :alt: build status\n\n----\n\n``eradicate`` removes commented-out code from python files.\n\n\nintroduction\n============\n\nwith modern revision control available, there is no reason to save\ncommented-out code to your repository. ``eradicate`` helps cleans up\nexisting junk comments. it does this by detecting block comments that\ncontain valid python syntax that are likely to be commented out code.\n(it avoids false positives like the sentence ``this is not good``,\nwhich is valid python syntax, but is probably not code.)\n\n\nexample\n=======\n\n.. code-block:: bash\n\n    $ eradicate --in-place example.py\n\nbefore running ``eradicate``.\n\n.. code-block:: python\n\n    #import os\n    # from foo import junk\n    #a = 3\n    a = 4\n    #foo(1, 2, 3)\n\n    def foo(x, y, z):\n        # print('hello')\n        print(x, y, z)\n\n        # this is a real comment.\n        #return true\n        return false\n\nafter running ``eradicate``.\n\n.. code-block:: python\n\n    a = 4\n\n    def foo(x, y, z):\n        print(x, y, z)\n\n        # this is a real comment.\n        return false\n\n\nwhitelisting\n============\n\nfalse positives can happen so there is a whitelist feature to fix them shorthand.\nyou can either add entries to the default whitelist with ``--whitelist-extend`` or overwrite the default with ``--whitelist``.\nboth arguments expect a string of ``#`` separated regex strings (whitespaces are preserved). e.g. ``eradicate --whitelist \"foo#b a r\" filename``\nthose regex strings are matched case insensitive against the start of the comment itself.\n\nfor the default whitelist please see ``eradicate.py``.\n\n\nrelated\n=======\n\nthere are different tools, plugins, and integrations for ``eradicate`` users:\n\n- `flake8-eradicate <https://github.com/sobolevn/flake8-eradicate>`_ - flake8 plugin to find commented out or dead code.\n",
  "docs_url": null,
  "keywords": "clean,format,commented-out code",
  "license": "expat license",
  "name": "eradicate",
  "package_url": "https://pypi.org/project/eradicate/",
  "project_url": "https://pypi.org/project/eradicate/",
  "project_urls": {
    "Homepage": "https://github.com/myint/eradicate"
  },
  "release_url": "https://pypi.org/project/eradicate/2.3.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "removes commented-out code.",
  "version": "2.3.0",
  "releases": [],
  "developers": [
    "mail@sobolevn.me",
    "steven_myint"
  ],
  "kwds": "eradicate github revision comments comment",
  "license_kwds": "expat license",
  "libtype": "pypi",
  "id": "pypi_eradicate",
  "homepage": "https://github.com/myint/eradicate",
  "release_count": 19,
  "dependency_ids": []
}
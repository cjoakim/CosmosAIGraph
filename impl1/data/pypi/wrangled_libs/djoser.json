{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: django",
    "framework :: django :: 3.1",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "framework :: django :: 4.1",
    "framework :: django :: 4.2",
    "framework :: django :: 5.0",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "======\ndjoser\n======\n\n.. image:: https://img.shields.io/pypi/v/djoser.svg\n   :target: https://pypi.org/project/djoser\n\n.. image:: https://github.com/sunscrapers/djoser/workflows/tests/badge.svg\n    :target: https://github.com/sunscrapers/djoser/actions?query=branch%3amaster+workflow%tests++\n    :alt: build status\n\n.. image:: https://codecov.io/gh/sunscrapers/djoser/branch/master/graph/badge.svg\n :target: https://codecov.io/gh/sunscrapers/djoser\n\n.. image:: https://img.shields.io/pypi/dm/djoser\n   :target: https://img.shields.io/pypi/dm/djoser\n\n.. image:: https://readthedocs.org/projects/djoser/badge/?version=latest\n    :target: https://djoser.readthedocs.io/en/latest/\n    :alt: docs\n\nrest implementation of `django <https://www.djangoproject.com/>`_ authentication\nsystem. **djoser** library provides a set of `django rest framework <https://www.django-rest-framework.org/>`_\nviews to handle basic actions such as registration, login, logout, password\nreset and account activation. it works with\n`custom user model <https://docs.djangoproject.com/en/dev/topics/auth/customizing/>`_.\n\ninstead of reusing django code (e.g. ``passwordresetform``), we reimplemented\nfew things to fit better into `single page app <https://en.wikipedia.org/wiki/single-page_application>`_\narchitecture.\n\ndeveloped by `sunscrapers <http://sunscrapers.com/>`_ with passion & patience.\n\n.. image:: https://asciinema.org/a/94j4eg2tsbd2ieff30a6vgtxw.png\n  :target: https://asciinema.org/a/94j4eg2tsbd2ieff30a6vgtxw\n\nrequirements\n============\n\nto be able to run **djoser** you have to meet the following requirements:\n\n- python>=3.8\n- django>=3.0.0\n- django rest framework>=3.12\n\ninstallation\n============\n\nsimply install using ``pip``:\n\n.. code-block:: bash\n\n    $ pip install djoser\n\nand continue with the steps described at\n`configuration <https://djoser.readthedocs.io/en/latest/getting_started.html#configuration>`_\nguide.\n\ndocumentation\n=============\n\ndocumentation is available to study at\n`https://djoser.readthedocs.io <https://djoser.readthedocs.io>`_\nand in ``docs`` directory.\n\ncontributing and development\n============================\n\nto start developing on **djoser**, clone the repository:\n\n.. code-block:: bash\n\n    $ git clone git@github.com:sunscrapers/djoser.git\n\nwe use `poetry <https://python-poetry.org/>`_ as dependency management and packaging tool.\n\n.. code-block:: bash\n\n    $ cd djoser\n    $ poetry install --all-extras\n\nthis will create a virtualenv with all development dependencies.\n\nto run the test just type:\n\n.. code-block:: bash\n\n    $ poetry run py.test testproject\n\nwe also prepared a convenient ``makefile`` to automate commands above:\n\n.. code-block:: bash\n\n    $ make init\n    $ make test\n\nto activate the virtual environment run\n\n.. code-block:: bash\n\n    $ poetry shell\n\nwithout poetry\n--------------\n\nnew versions of ``pip`` can use ``pyproject.toml`` to build the package and install its dependencies.\n\n.. code-block:: bash\n\n    $ pip install .[test]\n\n.. code-block:: bash\n\n    $ cd testproject\n    $ ./manage.py test\n\nexample project\n---------------\n\nyou can also play with test project by running following commands:\n\n.. code-block:: bash\n\n    $ make migrate\n    $ make runserver\n\ncommiting your code\n-------------------\n\nbefore sending patches please make sure you have `pre-commit <https://pre-commit.com/>`_ activated in your local git repository:\n\n.. code-block:: bash\n\n    $ pre-commit install\n\nthis will ensure that your code is cleaned before you commit it.\n\nsimilar projects\n================\n\nlist of projects related to django, rest and authentication:\n\n- `django-rest-registration <https://github.com/apragacz/django-rest-registration>`_\n- `django-oauth-toolkit <https://github.com/evonove/django-oauth-toolkit>`_\n\nplease, keep in mind that while using custom authentication and tokencreateserializer\nvalidation, there is a path that **ignores intentional return of none** from authenticate()\nand try to find user using parameters. probably, that will be changed in the future.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "djoser",
  "package_url": "https://pypi.org/project/djoser/",
  "project_url": "https://pypi.org/project/djoser/",
  "project_urls": {
    "Documentation": "https://djoser.readthedocs.io/",
    "Homepage": "https://github.com/sunscrapers/djoser",
    "Repository": "https://github.com/sunscrapers/djoser"
  },
  "release_url": "https://pypi.org/project/djoser/2.2.2/",
  "requires_dist": [
    "djangorestframework-simplejwt (>=5.0,<6.0)",
    "django-templated-mail (>=1.1.1,<2.0.0)",
    "social-auth-app-django (>=5.0.0,<6.0.0)",
    "djet (>=0.3.0,<0.4.0) ; extra == \"djet\"",
    "webauthn (<1.0) ; extra == \"webauthn\"",
    "django (>=3.0.0)"
  ],
  "requires_python": ">=3.8,<4.0",
  "summary": "rest implementation of django authentication system.",
  "version": "2.2.2",
  "releases": [],
  "developers": [
    "djoser@tomwojcik.com",
    "info@sunscrapers.com",
    "sunscrapers",
    "tomasz_wojcik"
  ],
  "kwds": "badge djoser branch workflow svg",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_djoser",
  "homepage": "https://github.com/sunscrapers/djoser",
  "release_count": 45,
  "dependency_ids": [
    "pypi_django",
    "pypi_django_templated_mail",
    "pypi_djangorestframework_simplejwt",
    "pypi_djet",
    "pypi_social_auth_app_django",
    "pypi_webauthn"
  ]
}
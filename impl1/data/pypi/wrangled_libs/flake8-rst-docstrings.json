{
  "classifiers": [
    "development status :: 4 - beta",
    "framework :: flake8",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: quality assurance"
  ],
  "description": "flake8-rst-docstrings\n=====================\n\n.. image:: https://img.shields.io/pypi/v/flake8-rst-docstrings.svg\n   :alt: released on the python package index (pypi)\n   :target: https://pypi.org/project/flake8-rst-docstrings/\n.. image:: https://img.shields.io/conda/vn/conda-forge/flake8-rst-docstrings.svg\n   :alt: released on conda\n   :target: https://anaconda.org/conda-forge/flake8-rst-docstrings\n.. image:: https://results.pre-commit.ci/badge/github/peterjc/flake8-rst-docstrings/master.svg\n   :target: https://results.pre-commit.ci/latest/github/peterjc/flake8-rst-docstrings/master\n   :alt: pre-commit.ci status\n.. image:: https://img.shields.io/github/workflow/status/peterjc/flake8-rst-docstrings/test?logo=github-actions\n   :alt: github workflow status\n   :target: https://github.com/peterjc/flake8-rst-docstrings/actions\n.. image:: https://img.shields.io/pypi/dm/flake8-rst-docstrings.svg\n   :alt: pypi downloads\n   :target: https://pypistats.org/packages/flake8-rst-docstrings\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :alt: code style: black\n   :target: https://github.com/python/black\n\nintroduction\n------------\n\nthis is an mit licensed flake8 plugin for validating python docstrings markup\nas restructuredtext (rst) using the python library ``docutils``. it is\navailable to install from the `python package index (pypi)\n<https://pypi.org/project/flake8-rst-docstrings/>`_.\n\nthis is based heavily off ``pydocstyle`` (which is also mit licensed), which\nhas a flake8 plugin called ``flake8-docstrings``, see:\n\n- https://github.com/pycqa/pydocstyle\n- https://github.com/pycqa/flake8-docstrings\n\nthe restructuredtext (rst) validation is done by calling ``docutils`` via\ntodd wolfson's ``restructuredtext-lint`` code:\n\n- http://docutils.sourceforge.net/\n- https://github.com/twolfson/restructuredtext-lint\n\ni recommend you *also* install the related `flake8-docstrings\n<https://gitlab.com/pycqa/flake8-docstrings>`_ plugin, which brings\nthe `pydocstyle <https://github.com/pycqa/pydocstyle>`_ checks into flake8.\nthis checks things like missing docstrings, and other recommendations from\n`pep 257 docstring conventions <https://www.python.org/dev/peps/pep-0257/>`_.\n\nyou may *also* wish to install the related flake8 plugin `flake8-rst\n<https://github.com/kataev/flake8-rst>`_ which can check the python style\nof doctest formatted snippets of python code within your ``*.rst`` files\nor the docstrings within your ``*.py`` files.\n\nflake8 validation codes\n-----------------------\n\nearly versions of flake8 assumed a single character prefix for the validation\ncodes, which became problematic with collisions in the plugin ecosystem. since\nv3.0, flake8 has supported longer prefixes therefore this plugin uses ``rst``\nas its prefix.\n\ninternally we use ``docutils`` for rst validation, which has this to say in\n`pep258 <https://www.python.org/dev/peps/pep-0258/#error-handling>`_:\n\n* level-0, \"debug\": an internal reporting issue. there is no effect on the\n  processing. level-0 system messages are handled separately from the others.\n* level-1, \"info\": a minor issue that can be ignored. there is little or no\n  effect on the processing. typically level-1 system messages are not\n  reported.\n* level-2, \"warning\": an issue that should be addressed. if ignored, there may\n  be minor problems with the output. typically level-2 system messages are\n  reported but do not halt processing\n* level-3, \"error\": a major issue that should be addressed. if ignored, the\n  output will contain unpredictable errors. typically level-3 system messages\n  are reported but do not halt processing\n* level-4, \"severe\": a critical error that must be addressed. typically\n  level-4 system messages are turned into exceptions which halt processing.\n  if ignored, the output will contain severe errors.\n\nthe ``docutils`` \"debug\" level messages are not reported, and the plugin\ncurrently ignores the \"info\" level messages.\n\nwithin each category, the individual messages are mapped to ``flake8`` codes\nusing one hundred times the level. i.e. validation codes ``rst4##`` are\nsevere or critical errors in rst validation, ``rst3##`` are major errors,\n``rst2##`` are warnings, and while currently not yet used, ``rst1##`` would\nbe information only.\n\nwarning codes:\n\n====== =======================================================================\ncode   description\n------ -----------------------------------------------------------------------\nrst201 block quote ends without a blank line; unexpected unindent.\nrst202 bullet list ends without a blank line; unexpected unindent.\nrst203 definition list ends without a blank line; unexpected unindent.\nrst204 enumerated list ends without a blank line; unexpected unindent.\nrst205 explicit markup ends without a blank line; unexpected unindent.\nrst206 field list ends without a blank line; unexpected unindent.\nrst207 literal block ends without a blank line; unexpected unindent.\nrst208 option list ends without a blank line; unexpected unindent.\nrst210 inline strong start-string without end-string.\nrst211 blank line required after table.\nrst212 title underline too short.\nrst213 inline emphasis start-string without end-string.\nrst214 inline literal start-string without end-string.\nrst215 inline interpreted text or phrase reference start-string without end-string.\nrst216 multiple roles in interpreted text (both prefix and suffix present; only one allowed).\nrst217 mismatch: both interpreted text role suffix and reference suffix.\nrst218 literal block expected; none found.\nrst219 inline substitution_reference start-string without end-string.\nrst299 previously unseen warning, not yet assigned a unique code.\n====== =======================================================================\n\nmajor error codes:\n\n====== =======================================================================\ncode   description\n------ -----------------------------------------------------------------------\nrst301 unexpected indentation.\nrst302 malformed table.\nrst303 unknown directive type \"xxx\".\nrst304 unknown interpreted text role \"xxx\".\nrst305 undefined substitution referenced: \"xxx\".\nrst306 unknown target name: \"xxx\".\nrst307 error in \"xxx\" directive:\nrst399 previously unseen major error, not yet assigned a unique code.\n====== =======================================================================\n\nsevere or critial error codes:\n\n====== =======================================================================\ncode   description\n------ -----------------------------------------------------------------------\nrst401 unexpected section title.\nrst499 previously unseen severe error, not yet assigned a unique code.\n====== =======================================================================\n\ncodes ending ``99``, for example ``rst499``, indicate a previously unseen\nvalidation error for which we have yet to assign a unique validation code\nin the associated range, which would be ``rst4##`` in this example. if you see\none of these codes, please report it on our github issue tracker, ideally with\nan example we can use for testing.\n\ncodes starting ``rst9##`` indicate there was a problem parsing the python\nfile in order to extract the docstrings, or in processing the contents.\n\n====== =======================================================================\ncode   description (and notes)\n------ -----------------------------------------------------------------------\nrst900 failed to load file\nrst901 failed to parse file (*no longer used*)\nrst902 failed to parse __all__ entry (*no longer used*)\nrst903 failed to lint docstring\n====== =======================================================================\n\n\ninstallation and usage\n----------------------\n\npython 3.7 or later now required. earlier versions did support python 2.7, use\nv0.0.14 if required.\n\nwe recommend installing the plugin using pip, which handles the dependencies::\n\n    $ pip install flake8-rst-docstrings\n\nalternatively, if you are using the anaconda packaging system, the following\ncommand will install the plugin with its dependencies::\n\n    $ conda install -c conda-forge flake8-rst-docstrings\n\ndevelopers may install the plugin from the git repository with optional\ndependencies::\n\n    $ pip install -e .[develop]\n\nthe new validator should be automatically included when using ``flake8`` which\nmay now report additional validation codes starting with ``rst`` (as defined\nabove). for example::\n\n    $ flake8 example.py\n\nyou can request only the ``rst`` codes be shown using::\n\n    $ flake8 --select rst example.py\n\nsimilarly you might add particular rst validation codes to your flake8\nconfiguration file's select or ignore list.\n\nnote in addition to the ``rst`` prefix alone you can use partial codes\nlike ``rst2`` meaning ``rst200``, ``rst201``, ... and so on.\n\nnormally flake8 violations are to a specific line *and* column. unfortuntatley,\ndocutils only gives us a line number, and occasionally this only points to the\nstart of a paragraph - not the exact line with an issue.\n\n\nconfiguration\n-------------\n\nwe assume you are familiar with `flake8 configuration\n<http://flake8.pycqa.org/en/latest/user/configuration.html>`_.\n\nif you are using sphinx or other extensions to restructuredtext, you will\nwant to define any additional directives or roles you are using to avoid\nfalse positive ``rst303``, ``rst304`` and ``rst305`` violations. you may also\nneed to ignore ``rst307`` if using sphinx directives with arguments.\n\nyou can set these at the command line if you wish::\n\n    $ flake8 --rst-roles class,func,ref --rst-directives envvar,exception ...\n\nwe recommend recording these settings in your ``flake8`` configuration,\nfor example in your ``.flake8``, ``setup.cfg``, or ``tox.ini`` file, e.g.::\n\n    [flake8]\n    rst-roles =\n        class,\n        func,\n        ref,\n    rst-directives =\n        envvar,\n        exception,\n    rst-substitutions =\n        version,\n    extend-ignore =\n        rst307,\n        # ...\n\nnote that flake8 allows splitting the comma separated lists over multiple\nlines, and allows including of hash comment lines.\n\nif you are using the `google python style\n<https://google.github.io/styleguide/pyguide.html#s3.8-comments-and-docstrings>`_\nyou will sometimes get unwanted warnings from this plugin - particularly in the\nargument descriptions - as it does not use strict rst. we therefore currently\nsuggest ignoring some of the violation codes::\n\n    [flake8]\n    extend-ignore =\n        # google python style is not rst until after processed by napoleon\n        # see https://github.com/peterjc/flake8-rst-docstrings/issues/17\n        rst201,rst203,rst301,\n\n\nversion history\n---------------\n\n======= ========== ===========================================================\nversion released   changes\n------- ---------- -----------------------------------------------------------\nv0.3.0  2022-11-16 - replaced ``setup.py`` with ``pyproject.toml``.\nv0.2.7  2022-07-15 - fix where function signature occurred in docstring body.\nv0.2.6  2022-06-07 - configuration option to define additional substitutions\n                     (e.g. from sphinx) for ``rst305`` (contribution from\n                     `andreas thum <https://github.com/andthum>`_).\n                   - requires python 3.7 or later.\nv0.2.5  2021-12-10 - ignore function signature lines at start of docstrings.\nv0.2.4  2021-12-09 - fixed rare line number problem under python 3.7 or older.\n                   - updated test framework to use ``pytest``.\n                   - requires python 3.6 or later.\nv0.2.3  2021-05-03 - fixed line number assert in one-line docstring-only file.\nv0.2.2  2021-04-30 - fixed line number problem under python 3.8 or later.\n                   - corrected off-by-one line number in module docstrings.\nv0.2.1  2021-04-23 - minor internal style change.\nv0.2.0  2021-04-23 - use ast from flake8, not re-parsing with pydocstyle.\n                   - drops ``rst901`` (internal problem with parser).\n                   - drops ``rst902`` (checking any ``__all__`` entry).\nv0.1.2  2021-04-16 - dropped unused logging module import.\n                   - extended test coverage.\nv0.1.1  2021-04-15 - explicit ``pygments`` dependency for any code blocks.\nv0.1.0  2021-04-15 - import the parser from ``pydocstyle`` directly.\n                   - requires python 3 (drops support for python 2).\nv0.0.14 2020-09-22 - adds ``rst307`` for error in directive (eg invalid args).\nv0.0.13 2019-12-26 - adds ``rst218`` and ``rst219``.\nv0.0.12 2019-11-18 - adds ``rst213`` to ``rst217``.\nv0.0.11 2019-08-07 - configuration options to define additional directives and\n                     roles (e.g. from sphinx) for ``rst303`` and ``rst304``.\nv0.0.10 2019-06-17 - fixed flake8 \"builtins\" parameter warning (contribution\n                     from `ruben opdebeeck <https://github.com/ropdebee>`_).\nv0.0.9  2019-04-22 - checks positive and negative examples in test framework.\n                   - adds ``rst212``, ``rst305`` and ``rst306`` (contribution\n                     from `brian skinn <https://github.com/bskinn>`_).\nv0.0.8  2017-10-09 - adds ``rst303`` and ``rst304`` for unknown directives and\n                     interpreted text role as used in sphinx-needs extension.\nv0.0.7  2017-08-25 - remove triple-quotes before linting, was causing false\n                     positives reporting rst entries ending without a blank\n                     line at end of docstrings (bug fix for issue #1).\nv0.0.6  2017-08-18 - support pep263 style encodings following a hashbang line\n                     (bug fix for issue #2).\nv0.0.5  2017-06-19 - support pep263 style encoding declaration under python 2.\n                   - introduced ``rst900`` when fail to open the file.\nv0.0.4  2017-06-19 - catch docstring linting failures, report as ``rst903``.\nv0.0.3  2017-06-16 - ensure plugin code and rst files themselves validate.\n                   - removed unused import of ``six`` module.\n                   - basic continuous integration checks with travisci.\nv0.0.2  2017-06-16 - explicitly depend on flake8 v3.0.0 or later.\n                   - improved documentation.\nv0.0.1  2017-06-16 - initial public release.\n======= ========== ===========================================================\n\n\ndevelopers\n----------\n\nthis plugin is on github at https://github.com/peterjc/flake8-rst-docstrings\n\nto make a new release once tested locally and on travisci::\n\n    $ git tag vx.y.z\n    $ python -m build\n    $ git push origin master --tags\n    $ twine upload dist/flake8?rst?docstrings-x.y.z*\n\nthe pypi upload should trigger an automated pull request updating the\n`flake8-rst-docstrings conda-forge recipe\n<https://github.com/conda-forge/flake8-rst-docstrings-feedstock/blob/master/recipe/meta.yaml>`_.\n",
  "docs_url": null,
  "keywords": "strings,formatting,style,docstrings,restructuredtext",
  "license": "mit",
  "name": "flake8-rst-docstrings",
  "package_url": "https://pypi.org/project/flake8-rst-docstrings/",
  "project_url": "https://pypi.org/project/flake8-rst-docstrings/",
  "project_urls": {
    "Bug Tracker": "https://github.com/peterjc/flake8-rst-docstrings/issues",
    "Documentation": "https://github.com/peterjc/flake8-rst-docstrings/blob/master/README.rst",
    "Homepage": "https://github.com/peterjc/flake8-rst-docstrings",
    "Source Code": "https://github.com/peterjc/flake8-rst-docstrings/"
  },
  "release_url": "https://pypi.org/project/flake8-rst-docstrings/0.3.0/",
  "requires_dist": [
    "flake8 (>=3)",
    "restructuredtext-lint",
    "pygments",
    "build ; extra == 'develop'",
    "twine ; extra == 'develop'"
  ],
  "requires_python": ">=3.7",
  "summary": "python docstring restructuredtext (rst) validator for flake8",
  "version": "0.3.0",
  "releases": [],
  "developers": [
    "p.j.a.cock@googlemail.com",
    "peter_j"
  ],
  "kwds": "docstrings flake8 docstring rst3 docutils",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_flake8_rst_docstrings",
  "homepage": "",
  "release_count": 26,
  "dependency_ids": [
    "pypi_build",
    "pypi_flake8",
    "pypi_pygments",
    "pypi_restructuredtext_lint",
    "pypi_twine"
  ]
}
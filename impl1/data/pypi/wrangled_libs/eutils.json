{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "intended audience :: healthcare industry",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: scientific/engineering :: bio-informatics",
    "topic :: scientific/engineering :: medical science apps."
  ],
  "description": "eutils -- a simplified interface to ncbi e-utilities\n====================================================\n\n|pypi_badge| |build_status| |issues_badge| |contributors| |license| |docs| |changelog|\n\neutils is a python package to simplify searching, fetching, and\nparsing records from ncbi using their e-utilities_ interface.\n\n\nnews\n----\n\n* 0.5.0 was released on 2018-11-20. see `0.5 change log\n  <https://eutils.readthedocs.io/en/stable/changelog/0.5.html>`_.\n\n\n\nfeatures\n--------\n* simple pythonic interface for searching and fetching\n* automatic query rate throttling per ncbi guidelines\n* optional sqlite-based caching of compressed replies\n* \"fa\u00e7ades\" that facilitate access to essential attributes in replies\n\n\n\na quick example\n---------------\n\nas of may 1, 2018, ncbi throttles requests based on whether a client\nis registered. unregistered clients are limited to 3 requests/second;\nregistered clients are granted 10 requests/second, and may request\nmore. see the `ncbi announcement\n<https://ncbiinsights.ncbi.nlm.nih.gov/2017/11/02/new-api-keys-for-the-e-utilities/>`_\nfor more information. \n\nthe eutils package will automatically throttle requests according to\nncbi guidelines (3 or 10 requests/second without or with an api key,\nrespectively).\n\n::\n\n  $ pip install eutils\n  $ ipython\n\n  >>> from eutils import client\n\n  # initialize a client. this client handles all caching and query\n  # throttling.  for example:\n  >>> ec = client(api_key=os.environ.get(\"ncbi_api_key\", none))\n\n  # search for tumor necrosis factor genes\n  # any valid ncbi query may be used\n  >>> esr = ec.esearch(db='gene',term='tumor necrosis factor')\n\n  # fetch one of those (gene id 7157 is human tnf)\n  >>> egs = ec.efetch(db='gene', id=7157)\n\n  # one may fetch multiple genes at a time. these are returned as an\n  # entrezgeneset. we'll grab the first (and only) child, which returns\n  # an instance of the entrezgene class.\n  >>> eg = egs.entrezgenes[0]\n\n  # easily access some basic information about the gene\n  >>> eg.hgnc, eg.maploc, eg.description, eg.type, eg.genus_species\n  ('tp53', '17p13.1', 'tumor protein p53', 'protein-coding', 'homo sapiens')\n\n  # get a list of genomic references\n  >>> sorted([(r.acv, r.label) for r in eg.references])\n  [('nc_000017.11', 'chromosome 17 reference grch38...'),\n   ('nc_018928.2', 'chromosome 17 alternate ...'),\n   ('ng_017013.2', 'refseqgene')]\n\n  # get the first three products defined on grch38\n  #>>> [p.acv for p in eg.references[0].products][:3]\n  #['nm_001126112.2', 'nm_001276761.1', 'nm_000546.5'] \n\n  # as a sample, grab the first product defined on this reference (order is arbitrary)\n  >>> mrna = eg.references[0].products[0]\n  >>> str(mrna)\n  'genecommentary(acv=nm_001126112.2,type=mrna,heading=reference,label=transcript variant 2)'\n\n  # mrna.genomic_coords provides access to the exon definitions on this reference\n\n  >>> mrna.genomic_coords.gi, mrna.genomic_coords.strand\n  ('568815581', -1)\n\n  >>> mrna.genomic_coords.intervals\n  [(7687376, 7687549), (7676520, 7676618), (7676381, 7676402),\n  (7675993, 7676271), (7675052, 7675235), (7674858, 7674970),\n  (7674180, 7674289), (7673700, 7673836), (7673534, 7673607),\n  (7670608, 7670714), (7668401, 7669689)]\n\n  # and the mrna has a product, the resulting protein:\n  >>> str(mrna.products[0])\n  'genecommentary(acv=np_001119584.1,type=peptide,heading=reference,label=isoform a)'\n\n\n\nimportant notes\n---------------\n\n* **you are encouraged to** `browse issues\n  <https://github.com/biocommons/eutils/issues>`_. please report any\n  issues you find.\n* **use a pip package specification to ensure stay within minor\n  releases for api stability.** for example, ``eutils >=0.6,<0.7``.\n\n\ndeveloping and contributing\n---------------------------\n\ncontributions of bug reports, code patches, and documentation are\nwelcome!\n\ndevelopment occurs in the default branch. please work in feature\nbranches or bookmarks from the default branch. feature branches should\nbe named for the eutils issue they fix, as in\n`121-update-xml-facades`.  when merging, use a commit message like\n\"closes #121: update xml facades to new-style interface\". (\"closes #n\"\nis recognized automatically and closes the ticket upon pushing.)\n\nthe included makefile automates many tasks.  in particular, `make\ndevelop` prepares a development environment and `make test` runs\nunittests. (please run tests before committing!)\n\nagain, thanks for your contributions.\n\n\n.. _e-utilities: http://www.ncbi.nlm.nih.gov/books/nbk25499/\n\n\n.. |build_status| image:: https://travis-ci.org/biocommons/eutils.svg?branch=master\n  :target: https://travis-ci.org/biocommons/eutils\n\n.. |changelog| image:: https://img.shields.io/badge/docs-changelog-green.svg\n   :target: https://eutils.readthedocs.io/en/stable/changelog/\n\n.. |contributors| image:: https://img.shields.io/github/contributors/biocommons/eutils.svg\n  :target: https://github.com/biocommons/eutils\n\n.. |docs| image:: https://img.shields.io/badge/docs-readthedocs-green.svg\n   :target: http://eutils.readthedocs.io/\n\n.. |issues_badge| image:: https://img.shields.io/github/issues/biocommons/eutils.png\n  :target: https://github.com/biocommons/eutils/issues\n  :align: middle\n\n.. |license| image:: https://img.shields.io/github/license/biocommons/eutils.svg\n  :target: https://github.com/biocommons/eutils/blob/master/license\n\n.. |pypi_badge| image:: https://img.shields.io/pypi/v/eutils.svg\n  :target: https://pypi.org/project/eutils/\n\n\n",
  "docs_url": "https://pythonhosted.org/eutils/",
  "keywords": "bioinformatics,eutilities,ncbi",
  "license": "",
  "name": "eutils",
  "package_url": "https://pypi.org/project/eutils/",
  "project_url": "https://pypi.org/project/eutils/",
  "project_urls": {
    "Homepage": "https://github.com/biocommons/eutils"
  },
  "release_url": "https://pypi.org/project/eutils/0.6.0/",
  "requires_dist": [
    "lxml",
    "pytz",
    "requests",
    "flake8 ; extra == 'dev'",
    "ipython ; extra == 'dev'",
    "mock ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "restview ; extra == 'dev'",
    "setuptools ; extra == 'dev'",
    "sphinx ; extra == 'dev'",
    "sphinx-rtd-theme ; extra == 'dev'",
    "tox ; extra == 'dev'",
    "vcrpy ; extra == 'dev'",
    "yapf ; extra == 'dev'"
  ],
  "requires_python": ">=3.6",
  "summary": "\"python interface to ncbi's eutilities api\"",
  "version": "0.6.0",
  "releases": [],
  "developers": [
    "biocommons-dev@googlegroups.com",
    "source_code_contributors"
  ],
  "kwds": "ncbi ncbi_api_key ncbiinsights bioinformatics eutils",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_eutils",
  "homepage": "https://github.com/biocommons/eutils",
  "release_count": 27,
  "dependency_ids": [
    "pypi_flake8",
    "pypi_ipython",
    "pypi_lxml",
    "pypi_mock",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytz",
    "pypi_requests",
    "pypi_restview",
    "pypi_setuptools",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_tox",
    "pypi_vcrpy",
    "pypi_yapf"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: flask",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# flask-jwt-extended\n\n### features\n\nflask-jwt-extended not only adds support for using json web tokens (jwt) to flask for protecting routes,\nbut also many helpful (and **optional**) features built in to make working with json web tokens\neasier. these include:\n\n-   adding custom claims to json web tokens\n-   automatic user loading (`current_user`).\n-   custom claims validation on received tokens\n-   [refresh tokens](https://auth0.com/blog/refresh-tokens-what-are-they-and-when-to-use-them/)\n-   first class support for fresh tokens for making sensitive changes.\n-   token revoking/blocklisting\n-   storing tokens in cookies and csrf protection\n\n### usage\n\n[view the documentation online](https://flask-jwt-extended.readthedocs.io/en/stable/)\n\n### upgrading from 3.x.x to 4.0.0\n\n[view the changes](https://flask-jwt-extended.readthedocs.io/en/stable/v4_upgrade_guide/)\n\n### changelog\n\nyou can view the changelog [here](https://github.com/vimalloc/flask-jwt-extended/releases).\nthis project follows [semantic versioning](https://semver.org/).\n\n### chatting\n\ncome chat with the community or ask questions at https://discord.gg/ejbsbfd\n\n### contributing\n\nbefore making any changes, make sure to install the development requirements\nand setup the git hooks which will automatically lint and format your changes.\n\n```bash\npip install -r requirements.txt\npre-commit install\n```\n\nwe require 100% code coverage in our unit tests. you can run the tests locally\nwith `tox` which ensures that all tests pass, tests provide complete code coverage,\ndocumentation builds, and style guide are adhered to\n\n```bash\ntox\n```\n\na subset of checks can also be ran by adding an argument to tox. the available\narguments are:\n\n-   py37, py38, py39, py310, py311, py312, pypy3\n    -   run unit tests on the given python version\n-   mypy\n    -   run mypy type checking\n-   coverage\n    -   run a code coverage check\n-   docs\n    -   ensure documentation builds and there are no broken links\n-   style\n    -   ensure style guide is adhered to\n\n```bash\ntox -e py38\n```\n\nwe also require features to be well documented. you can generate a local copy\nof the documentation by going to the `docs` directory and running:\n\n```bash\nmake clean && make html && open _build/html/index.html\n```\n",
  "docs_url": null,
  "keywords": "flask,jwt,json web token",
  "license": "mit",
  "name": "flask-jwt-extended",
  "package_url": "https://pypi.org/project/Flask-JWT-Extended/",
  "project_url": "https://pypi.org/project/Flask-JWT-Extended/",
  "project_urls": {
    "Homepage": "https://github.com/vimalloc/flask-jwt-extended"
  },
  "release_url": "https://pypi.org/project/Flask-JWT-Extended/4.6.0/",
  "requires_dist": [
    "Werkzeug >=0.14",
    "Flask <4.0,>=2.0",
    "PyJWT <3.0,>=2.0",
    "typing-extensions >=3.7.4 ; python_version < \"3.8\"",
    "cryptography >=3.3.1 ; extra == 'asymmetric_crypto'"
  ],
  "requires_python": ">=3.7,<4",
  "summary": "extended jwt integration with flask",
  "version": "4.6.0",
  "releases": [],
  "developers": [
    "lily.gilbert@hey.com",
    "lily_acadia_gilbert"
  ],
  "kwds": "flask tokens token jwt csrf",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_flask_jwt_extended",
  "homepage": "https://github.com/vimalloc/flask-jwt-extended",
  "release_count": 88,
  "dependency_ids": [
    "pypi_cryptography",
    "pypi_flask",
    "pypi_pyjwt",
    "pypi_typing_extensions",
    "pypi_werkzeug"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering"
  ],
  "description": "super lightweight function registries for your library\n<a href=\"https://explosion.ai\"><img src=\"https://explosion.ai/assets/img/logo.svg\" width=\"125\" height=\"125\" align=\"right\" /></a>\n\n# catalogue: super lightweight function registries for your library\n\n`catalogue` is a tiny, zero-dependencies library that makes it easy to **add\nfunction (or object) registries** to your code. function registries are helpful\nwhen you have objects that need to be both easily serializable and fully\ncustomizable. instead of passing a function into your object, you pass in an\nidentifier name, which the object can use to lookup the function from the\nregistry. this makes the object easy to serialize, because the name is a simple\nstring. if you instead saved the function, you'd have to use pickle for\nserialization, which has many drawbacks.\n\n[![tests](https://github.com/explosion/catalogue/actions/workflows/tests.yml/badge.svg)](https://github.com/explosion/catalogue/actions/workflows/tests.yml)\n[![current release version](https://img.shields.io/github/v/release/explosion/catalogue.svg?style=flat-square&include_prereleases&logo=github)](https://github.com/explosion/catalogue/releases)\n[![pypi version](https://img.shields.io/pypi/v/catalogue.svg?style=flat-square&logo=pypi&logocolor=white)](https://pypi.org/project/catalogue/)\n[![conda version](https://img.shields.io/conda/vn/conda-forge/catalogue.svg?style=flat-square&logo=conda-forge&logocolor=white)](https://anaconda.org/conda-forge/catalogue)\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square)](https://github.com/ambv/black)\n\n## \u23f3 installation\n\n```bash\npip install catalogue\n```\n\n```bash\nconda install -c conda-forge catalogue\n```\n\n> \u26a0\ufe0f **important note:** `catalogue` v2.0+ is only compatible with python 3.6+.\n> for python 2.7+ compatibility, use `catalogue` v1.x.\n\n## \ud83d\udc69\u200d\ud83d\udcbb usage\n\nlet's imagine you're developing a python package that needs to load data\nsomewhere. you've already implemented some loader functions for the most common\ndata types, but you want to allow the user to easily add their own. using\n`catalogue.create` you can create a new registry under the namespace\n`your_package` &rarr; `loaders`.\n\n```python\n# your package\nimport catalogue\n\nloaders = catalogue.create(\"your_package\", \"loaders\")\n```\n\nthis gives you a `loaders.register` decorator that your users can import and\ndecorate their custom loader functions with.\n\n```python\n# user code\nfrom your_package import loaders\n\n@loaders.register(\"custom_loader\")\ndef custom_loader(data):\n    # load something here...\n    return data\n```\n\nthe decorated function will be registered automatically and in your package,\nyou'll be able to access all loaders by calling `loaders.get_all`.\n\n```python\n# your package\ndef load_data(data, loader_id):\n    print(\"all loaders:\", loaders.get_all()) # {\"custom_loader\": <custom_loader>}\n    loader = loaders.get(loader_id)\n    return loader(data)\n```\n\nthe user can now refer to their custom loader using only its string name\n(`\"custom_loader\"`) and your application will know what to do and will use their\ncustom function.\n\n```python\n# user code\nfrom your_package import load_data\n\nload_data(data, loader_id=\"custom_loader\")\n```\n\n## \u2753 faq\n\n#### but can't the user just pass in the `custom_loader` function directly?\n\nsure, that's the more classic callback approach. instead of a string id,\n`load_data` could also take a function, in which case you wouldn't need a\npackage like this. `catalogue` helps you when you need to produce a serializable\nrecord of which functions were passed in. for instance, you might want to write\na log message, or save a config to load back your object later. with\n`catalogue`, your functions can be parameterized by strings, so logging and\nserialization remains easy \u2013 while still giving you full extensibility.\n\n#### how do i make sure all of the registration decorators have run?\n\ndecorators normally run when modules are imported. relying on this side-effect\ncan sometimes lead to confusion, especially if there's no other reason the\nmodule would be imported. one solution is to use\n[entry points](https://packaging.python.org/specifications/entry-points/).\n\nfor instance, in [spacy](https://spacy.io) we're starting to use function\nregistries to make the pipeline components much more customizable. let's say one\nuser, jo, develops a better tagging model using new machine learning research.\nend-users of jo's package should be able to write\n`spacy.load(\"jo_tagging_model\")`. they shouldn't need to remember to write\n`import jos_tagged_model` first, just to run the function registries as a\nside-effect. with entry points, the registration happens at install time \u2013 so\nyou don't need to rely on the import side-effects.\n\n## \ud83c\udf9b api\n\n### <kbd>function</kbd> `catalogue.create`\n\ncreate a new registry for a given namespace. returns a setter function that can\nbe used as a decorator or called with a name and `func` keyword argument. if\n`entry_points=true` is set, the registry will check for\n[python entry points](https://packaging.python.org/tutorials/packaging-projects/#entry-points)\nadvertised for the given namespace, e.g. the entry point group\n`spacy_architectures` for the namespace `\"spacy\", \"architectures\"`, in\n`registry.get` and `registry.get_all`. this allows other packages to\nauto-register functions.\n\n| argument       | type       | description                                                                                    |\n| -------------- | ---------- | ---------------------------------------------------------------------------------------------- |\n| `*namespace`   | str        | the namespace, e.g. `\"spacy\"` or `\"spacy\", \"architectures\"`.                                   |\n| `entry_points` | bool       | whether to check for entry points of the given namespace and pre-populate the global registry. |\n| **returns**    | `registry` | the `registry` object with methods to register and retrieve functions.                         |\n\n```python\narchitectures = catalogue.create(\"spacy\", \"architectures\")\n\n# use as decorator\n@architectures.register(\"custom_architecture\")\ndef custom_architecture():\n    pass\n\n# use as regular function\narchitectures.register(\"custom_architecture\", func=custom_architecture)\n```\n\n### <kbd>class</kbd> `registry`\n\nthe registry object that can be used to register and retrieve functions. it's\nusually created internally when you call `catalogue.create`.\n\n#### <kbd>method</kbd> `registry.__init__`\n\ninitialize a new registry. if `entry_points=true` is set, the registry will\ncheck for\n[python entry points](https://packaging.python.org/tutorials/packaging-projects/#entry-points)\nadvertised for the given namespace, e.g. the entry point group\n`spacy_architectures` for the namespace `\"spacy\", \"architectures\"`, in\n`registry.get` and `registry.get_all`.\n\n| argument       | type       | description                                                                      |\n| -------------- | ---------- | -------------------------------------------------------------------------------- |\n| `namespace`    | tuple[str] | the namespace, e.g. `\"spacy\"` or `\"spacy\", \"architectures\"`.                     |\n| `entry_points` | bool       | whether to check for entry points of the given namespace in `get` and `get_all`. |\n| **returns**    | `registry` | the newly created object.                                                        |\n\n```python\n# user-facing api\narchitectures = catalogue.create(\"spacy\", \"architectures\")\n# internal api\narchitectures = registry((\"spacy\", \"architectures\"))\n```\n\n#### <kbd>method</kbd> `registry.__contains__`\n\ncheck whether a name is in the registry.\n\n| argument    | type | description                          |\n| ----------- | ---- | ------------------------------------ |\n| `name`      | str  | the name to check.                   |\n| **returns** | bool | whether the name is in the registry. |\n\n```python\narchitectures = catalogue.create(\"spacy\", \"architectures\")\n\n@architectures.register(\"custom_architecture\")\ndef custom_architecture():\n    pass\n\nassert \"custom_architecture\" in architectures\n```\n\n#### <kbd>method</kbd> `registry.__call__`\n\nregister a function in the registry's namespace. can be used as a decorator or\ncalled as a function with the `func` keyword argument supplying the function to\nregister. delegates to `registry.register`.\n\n#### <kbd>method</kbd> `registry.register`\n\nregister a function in the registry's namespace. can be used as a decorator or\ncalled as a function with the `func` keyword argument supplying the function to\nregister.\n\n| argument    | type     | description                                               |\n| ----------- | -------- | --------------------------------------------------------- |\n| `name`      | str      | the name to register under the namespace.                 |\n| `func`      | any      | optional function to register (if not used as decorator). |\n| **returns** | callable | the decorator that takes one argument, the name.          |\n\n```python\narchitectures = catalogue.create(\"spacy\", \"architectures\")\n\n# use as decorator\n@architectures.register(\"custom_architecture\")\ndef custom_architecture():\n    pass\n\n# use as regular function\narchitectures.register(\"custom_architecture\", func=custom_architecture)\n```\n\n#### <kbd>method</kbd> `registry.get`\n\nget a function registered in the namespace.\n\n| argument    | type | description              |\n| ----------- | ---- | ------------------------ |\n| `name`      | str  | the name.                |\n| **returns** | any  | the registered function. |\n\n```python\ncustom_architecture = architectures.get(\"custom_architecture\")\n```\n\n#### <kbd>method</kbd> `registry.get_all`\n\nget all functions in the registry's namespace.\n\n| argument    | type           | description                              |\n| ----------- | -------------- | ---------------------------------------- |\n| **returns** | dict[str, any] | the registered functions, keyed by name. |\n\n```python\nall_architectures = architectures.get_all()\n# {\"custom_architecture\": <custom_architecture>}\n```\n\n#### <kbd>method</kbd> `registry.get_entry_points`\n\nget registered entry points from other packages for this namespace. the name of\nthe entry point group is the namespace joined by `_`.\n\n| argument    | type           | description                             |\n| ----------- | -------------- | --------------------------------------- |\n| **returns** | dict[str, any] | the loaded entry points, keyed by name. |\n\n```python\narchitectures = catalogue.create(\"spacy\", \"architectures\", entry_points=true)\n# will get all entry points of the group \"spacy_architectures\"\nall_entry_points = architectures.get_entry_points()\n```\n\n#### <kbd>method</kbd> `registry.get_entry_point`\n\ncheck if registered entry point is available for a given name in the namespace\nand load it. otherwise, return the default value.\n\n| argument    | type | description                                      |\n| ----------- | ---- | ------------------------------------------------ |\n| `name`      | str  | name of entry point to load.                     |\n| `default`   | any  | the default value to return. defaults to `none`. |\n| **returns** | any  | the loaded entry point or the default value.     |\n\n```python\narchitectures = catalogue.create(\"spacy\", \"architectures\", entry_points=true)\n# will get entry point \"custom_architecture\" of the group \"spacy_architectures\"\ncustom_architecture = architectures.get_entry_point(\"custom_architecture\")\n```\n\n#### <kbd>method</kbd> `registry.find`\n\nfind the information about a registered function, including the module and path\nto the file it's defined in, the line number and the docstring, if available.\n\n| argument    | type                       | description                         |\n| ----------- | -------------------------- | ----------------------------------- |\n| `name`      | str                        | name of the registered function.    |\n| **returns** | dict[str, union[str, int]] | the information about the function. |\n\n```python\nimport catalogue\n\narchitectures = catalogue.create(\"spacy\", \"architectures\", entry_points=true)\n\n@architectures(\"my_architecture\")\ndef my_architecture():\n    \"\"\"this is an architecture\"\"\"\n    pass\n\ninfo = architectures.find(\"my_architecture\")\n# {'module': 'your_package.architectures',\n#  'file': '/path/to/your_package/architectures.py',\n#  'line_no': 5,\n#  'docstring': 'this is an architecture'}\n```\n\n### <kbd>function</kbd> `catalogue.check_exists`\n\ncheck if a namespace exists.\n\n| argument     | type | description                                                  |\n| ------------ | ---- | ------------------------------------------------------------ |\n| `*namespace` | str  | the namespace, e.g. `\"spacy\"` or `\"spacy\", \"architectures\"`. |\n| **returns**  | bool | whether the namespace exists.                                |\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "catalogue",
  "package_url": "https://pypi.org/project/catalogue/",
  "project_url": "https://pypi.org/project/catalogue/",
  "project_urls": {
    "Homepage": "https://github.com/explosion/catalogue"
  },
  "release_url": "https://pypi.org/project/catalogue/2.0.10/",
  "requires_dist": [
    "zipp >=0.5 ; python_version < \"3.8\"",
    "typing-extensions >=3.6.4 ; python_version < \"3.8\""
  ],
  "requires_python": ">=3.6",
  "summary": "super lightweight function registries for your library",
  "version": "2.0.10",
  "releases": [],
  "developers": [
    "contact@explosion.ai",
    "explosion"
  ],
  "kwds": "img svg catalogue logo explosion",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_catalogue",
  "homepage": "https://github.com/explosion/catalogue",
  "release_count": 24,
  "dependency_ids": [
    "pypi_typing_extensions",
    "pypi_zipp"
  ],
  "documentation_summary": "The HTML text describes the \"catalogue\" library, a super lightweight function registry for Python libraries, which is available on PyPI. The latest version, 2.0.10, was released on September 25, 2023. It requires Python 3.6 or newer and is licensed under the MIT License. The library, developed by Explosion, is designed to make it easy to add function or object registries to your code, facilitating easy serialization and customization of objects. It supports a range of Python versions from 3.6 up to 3.12 and is intended for developers and those in scientific research. The library is zero-dependency, meaning it doesn't require any additional packages to work. Installation instructions are provided for both pip and conda, and the document includes examples of how to use the library, such as creating a new registry and registering functions.",
  "embedding": [
    -0.014154382981359959,
    0.006139035802334547,
    0.013162720017135143,
    -0.016979552805423737,
    -0.019533619284629822,
    0.023086484521627426,
    0.0002847017894964665,
    0.0010442781494930387,
    -0.0002815805491991341,
    -0.007776349782943726,
    0.020332656800746918,
    -0.02628263458609581,
    -0.012342279776930809,
    0.016993820667266846,
    0.007705007214099169,
    0.010558713227510452,
    0.017778590321540833,
    -0.04554515331983566,
    0.014254262670874596,
    -0.009595587849617004,
    0.029592934995889664,
    0.0011129454942420125,
    -0.03832527622580528,
    -0.022273177281022072,
    -0.019205443561077118,
    0.021588288247585297,
    0.020503880456089973,
    -0.00703795300796628,
    0.033844955265522,
    0.003881040494889021,
    0.03846796229481697,
    -0.014261397533118725,
    -0.005076030269265175,
    -0.024584678933024406,
    -0.005286491010338068,
    0.012927289120852947,
    0.004237753804773092,
    0.00865386426448822,
    0.013933220878243446,
    0.019348129630088806,
    0.0280376635491848,
    0.002238375833258033,
    -0.022130493074655533,
    -9.876499098027125e-05,
    -0.017279190942645073,
    0.005867933388799429,
    0.01792127639055252,
    -0.025226764380931854,
    -0.0058536650612950325,
    -0.002611141186207533,
    0.004219918046146631,
    0.0047014812007546425,
    4.1244973544962704e-05,
    0.016736987978219986,
    -0.004448214545845985,
    -0.009024846367537975,
    -0.024441994726657867,
    -0.0013341077137738466,
    -0.003105189185589552,
    -0.016237588599324226,
    0.00933875422924757,
    -0.010929695330560207,
    -0.026453858241438866,
    -0.004387573339045048,
    0.006413704715669155,
    -0.0003063275362364948,
    0.010344685055315495,
    -0.0039880545809865,
    -0.028365841135382652,
    0.018349330872297287,
    0.0017577047692611814,
    0.02999245375394821,
    0.029678545892238617,
    -0.00965979602187872,
    0.034415699541568756,
    -0.023329049348831177,
    -0.017036626115441322,
    0.025968726724386215,
    -0.011300677433609962,
    -0.01538147684186697,
    0.004523124545812607,
    -0.024071013554930687,
    -0.007230578456073999,
    0.030420510098338127,
    0.002953585935756564,
    0.010651458986103535,
    0.0053364308550953865,
    0.018534822389483452,
    -0.021074621006846428,
    -0.013141317293047905,
    0.003392343409359455,
    0.011935627087950706,
    -0.004009457305073738,
    -0.01394748967140913,
    -0.035328883677721024,
    0.01495342142879963,
    -0.011222200468182564,
    0.02765241451561451,
    -0.008332822471857071,
    -0.026568004861474037,
    -0.021516945213079453,
    0.03584255278110504,
    -0.04049409180879593,
    -0.02067510224878788,
    -0.004052262753248215,
    -0.006613464560359716,
    -0.01133634801954031,
    -0.02004728652536869,
    0.017207849770784378,
    0.01456817053258419,
    -0.04186386987566948,
    0.05402066186070442,
    -0.005978514906018972,
    -0.009345888160169125,
    0.003090920625254512,
    -0.007690738420933485,
    0.007683604024350643,
    -0.015909412875771523,
    -0.014653781428933144,
    -0.010908292606472969,
    0.008282882161438465,
    0.008268614299595356,
    0.03013513796031475,
    -0.00728765269741416,
    0.02429930865764618,
    -0.0015909412177279592,
    -0.011614584363996983,
    0.010237671434879303,
    -0.019091295078396797,
    -0.02241586335003376,
    0.016508691012859344,
    -0.006656270008534193,
    0.0011602099984884262,
    -0.013419553637504578,
    0.01783566363155842,
    0.013205526396632195,
    -0.011429093778133392,
    0.01014492567628622,
    -0.011293542571365833,
    -0.03684134781360626,
    0.024313578382134438,
    0.03684134781360626,
    -0.014839272946119308,
    -0.006356630939990282,
    -0.018406406044960022,
    0.033331289887428284,
    -0.0026218427810817957,
    -0.012855947017669678,
    -0.0014990875497460365,
    -0.018463479354977608,
    -0.005068895872682333,
    -0.013476627878844738,
    -0.030420510098338127,
    -0.009866689331829548,
    -0.0033584556076675653,
    0.0032211209181696177,
    0.006738313939422369,
    0.0014170435024425387,
    0.003271060762926936,
    -0.010251940228044987,
    0.0023721433244645596,
    0.02415662445127964,
    -0.0032550087198615074,
    -0.0410933718085289,
    0.01606636680662632,
    0.029735619202256203,
    0.025326643139123917,
    -0.007116429973393679,
    -0.013148452155292034,
    0.00822580885142088,
    0.007833424024283886,
    0.01568111591041088,
    -0.021345723420381546,
    0.003492223098874092,
    -0.01620905101299286,
    0.007326890714466572,
    -0.015481356531381607,
    0.015238791704177856,
    -0.015766726806759834,
    0.007041520439088345,
    0.006196110043674707,
    0.0034422832541167736,
    0.006399436388164759,
    0.032075658440589905,
    -0.03050612099468708,
    -0.001131672877818346,
    -0.0013225144939497113,
    0.008325688540935516,
    0.009574184194207191,
    0.009167531505227089,
    0.017279190942645073,
    0.029621470719575882,
    -0.019490813836455345,
    -0.006403003353625536,
    -0.5675451159477234,
    -0.00978821236640215,
    -0.0077406782656908035,
    -0.062324944883584976,
    -0.018035423010587692,
    0.019861795008182526,
    0.009367290884256363,
    -7.95916494098492e-05,
    -0.01549562532454729,
    0.04009457305073738,
    -0.05165208503603935,
    0.01569538377225399,
    -0.0010665727313607931,
    -0.020389731973409653,
    -0.027067404240369797,
    -0.004580198787152767,
    0.007469576317816973,
    -0.019505081698298454,
    0.006691941060125828,
    0.008339956402778625,
    0.0061889756470918655,
    0.03649890422821045,
    -0.0072484142147004604,
    -0.001142374356277287,
    -0.0029072132892906666,
    0.0341588631272316,
    0.032960306853055954,
    0.0012440376449376345,
    0.029164878651499748,
    -0.007433904800564051,
    -0.01732199639081955,
    0.012435025535523891,
    -0.010009374469518661,
    0.004865569062530994,
    0.050995729863643646,
    0.020832056179642677,
    -0.026054339483380318,
    0.05744510889053345,
    0.02041826769709587,
    0.032560788094997406,
    -0.017022358253598213,
    -0.018763119354844093,
    0.0170794315636158,
    0.03772599622607231,
    0.026867644861340523,
    -0.014354142360389233,
    0.022330252453684807,
    -0.014254262670874596,
    -0.0037526236847043037,
    -0.015352940186858177,
    0.019975943490862846,
    0.0011512921191751957,
    0.020389731973409653,
    -0.012520636431872845,
    0.03649890422821045,
    -0.02378564141690731,
    0.017279190942645073,
    -0.01779285818338394,
    0.005364967975765467,
    0.007883363403379917,
    0.0028091170825064182,
    0.0003529232053551823,
    -0.008254345506429672,
    -0.037783071398735046,
    0.0031105398666113615,
    0.041521426290273666,
    -0.0028786761686205864,
    -0.01033755112439394,
    -0.014389813877642155,
    -0.0001198333702632226,
    0.032817620784044266,
    0.012142520397901535,
    0.01656576432287693,
    -0.006534987594932318,
    0.020018748939037323,
    0.035928163677453995,
    0.02965000830590725,
    -0.004979717545211315,
    0.0004178004455752671,
    0.035928163677453995,
    0.042177777737379074,
    0.003005309496074915,
    -0.016166245564818382,
    -0.03124808333814144,
    0.016651377081871033,
    0.007697872817516327,
    -0.008418433368206024,
    -0.0015900494763627648,
    0.021945001557469368,
    0.014311336912214756,
    -0.004102202598005533,
    0.005247252527624369,
    -0.0014437970239669085,
    -0.018349330872297287,
    -0.0011842880630865693,
    0.03821112588047981,
    -0.03475814312696457,
    0.011229334399104118,
    -0.019647767767310143,
    -0.013198391534388065,
    0.007947572506964207,
    -0.01919117569923401,
    -0.003123024944216013,
    0.0057716211304068565,
    0.0012199594639241695,
    0.008768012747168541,
    -0.015467087738215923,
    0.01770724728703499,
    0.010294745676219463,
    -0.06226787343621254,
    0.002657514065504074,
    -0.02915061078965664,
    -0.021359991282224655,
    -0.017107969149947166,
    0.004915508907288313,
    -0.032674938440322876,
    0.014068772085011005,
    -0.0057359496131539345,
    -0.018235182389616966,
    0.004911941941827536,
    -0.020618028938770294,
    -0.0037597580812871456,
    -0.013469493947923183,
    0.007612261455506086,
    0.03484375402331352,
    -0.000997013645246625,
    -0.003606371348723769,
    -0.005664607044309378,
    -0.04032287001609802,
    0.009424365125596523,
    0.029792694374918938,
    -0.0071235643699765205,
    0.008382761850953102,
    -0.0015900494763627648,
    0.05533336475491524,
    -0.006056991405785084,
    0.02615421824157238,
    -0.0013519433559849858,
    -0.00022105076641310006,
    -0.011543242260813713,
    -0.03161906450986862,
    -0.010194865986704826,
    0.03672720119357109,
    -0.026596542447805405,
    -0.0024862915743142366,
    0.001711332006379962,
    0.008825086988508701,
    0.014375545084476471,
    -0.02900792472064495,
    0.010744203813374043,
    -0.03886748105287552,
    0.018734581768512726,
    -0.012171057052910328,
    0.0365845151245594,
    0.0054006390273571014,
    0.0038739063311368227,
    -0.02228744700551033,
    -0.010622921399772167,
    -0.009674064815044403,
    -0.008967772126197815,
    -0.0030980550218373537,
    0.03310299292206764,
    0.013897549360990524,
    -0.002694968832656741,
    -0.03176175057888031,
    -0.008867892436683178,
    -0.01682259887456894,
    0.026097144931554794,
    -0.010266208089888096,
    -0.05190891772508621,
    -0.024713097140192986,
    -0.0004886972019448876,
    -0.0008351549622602761,
    0.007883363403379917,
    0.023100752383470535,
    0.02515542134642601,
    -0.013119914568960667,
    0.018891535699367523,
    -0.0007129806908778846,
    -0.019733378663659096,
    -0.0007241279818117619,
    0.003866771934553981,
    -0.029193416237831116,
    0.006980879232287407,
    0.006617031525820494,
    0.020332656800746918,
    -0.005083164200186729,
    -0.0036313412711024284,
    -0.004908374976366758,
    0.00235252408310771,
    -0.0063066910952329636,
    -0.013312540017068386,
    -0.014289934188127518,
    -0.0037276537623256445,
    -0.0077834841795265675,
    0.011857150122523308,
    0.010194865986704826,
    0.004127172753214836,
    -0.015338671393692493,
    0.022972336038947105,
    0.022487206384539604,
    -0.01220672857016325,
    0.026682153344154358,
    -0.016779793426394463,
    -0.01806396059691906,
    -0.0019244682043790817,
    0.007209175731986761,
    0.0026682154275476933,
    -0.0037383553571999073,
    -0.007826289162039757,
    0.013819072395563126,
    0.0009684765827842057,
    -0.02243013121187687,
    0.010137791745364666,
    0.046515412628650665,
    0.034815218299627304,
    0.005329296458512545,
    0.001493736868724227,
    -0.01400456391274929,
    -0.008953503333032131,
    0.01606636680662632,
    -0.013911818154156208,
    0.004680078476667404,
    0.013776266947388649,
    -0.007476710714399815,
    0.0012859513517469168,
    0.011985566467046738,
    0.0017345183296129107,
    -0.0016061016358435154,
    -0.03147638216614723,
    -0.013918952085077763,
    0.024841513484716415,
    0.022872455418109894,
    -0.026753496378660202,
    0.024812975898385048,
    0.013583642430603504,
    0.025683356449007988,
    -0.04400414973497391,
    0.021017547696828842,
    -0.00665983697399497,
    0.02041826769709587,
    0.020889129489660263,
    0.015338671393692493,
    -0.009681198745965958,
    0.006734746973961592,
    -0.00018560238822828978,
    -0.026068607345223427,
    0.0228011142462492,
    -0.012335145846009254,
    0.018763119354844093,
    0.0030623835045844316,
    -0.0050367917865514755,
    -0.006028454750776291,
    0.023700030520558357,
    0.027937784790992737,
    0.009360156953334808,
    0.0031408604700118303,
    0.015410014428198338,
    0.010501638986170292,
    0.015566968359053135,
    0.00485843513160944,
    0.0012743582483381033,
    0.016237588599324226,
    0.01869177632033825,
    0.0005894686910323799,
    -0.026682153344154358,
    -0.008118794299662113,
    -0.025754699483513832,
    0.0026236262638121843,
    -0.038182590156793594,
    -0.025126883760094643,
    -0.025726161897182465,
    -0.009616990573704243,
    -0.015295865945518017,
    0.024812975898385048,
    0.013426688499748707,
    0.020147167146205902,
    0.03147638216614723,
    -0.008097391575574875,
    0.009674064815044403,
    0.009766809642314911,
    -0.007155668456107378,
    0.03558571636676788,
    -0.0013260816922411323,
    0.014653781428933144,
    -0.03350251168012619,
    -0.021488407626748085,
    -0.010380356572568417,
    0.0031248084269464016,
    0.002853706246241927,
    0.00044566867290996015,
    0.014639513567090034,
    -0.008589656092226505,
    0.0030231450218707323,
    -0.02800912782549858,
    0.006160438526421785,
    0.05130963772535324,
    -0.021616825833916664,
    -0.00582869490608573,
    -0.021945001557469368,
    -0.00852544791996479,
    -0.0066705383360385895,
    0.0010433864081278443,
    -0.0012984363129362464,
    0.024113819003105164,
    0.00516877556219697,
    -0.001990460092201829,
    -0.008924966678023338,
    -0.011735866777598858,
    -0.016280394047498703,
    -0.014432619325816631,
    0.0333598256111145,
    -0.01857762783765793,
    -0.024499068036675453,
    -0.0063530635088682175,
    0.0019993779715150595,
    -0.009866689331829548,
    -0.0014651998644694686,
    0.04865569248795509,
    0.03684134781360626,
    -0.031333696097135544,
    -0.025940191000699997,
    -0.00029250490479171276,
    -0.005486250389367342,
    0.026011532172560692,
    -0.00012574144056998193,
    0.0019316024845466018,
    0.005179476924240589,
    -0.03541449457406998,
    -0.02429930865764618,
    -0.016751255840063095,
    -0.0075409188866615295,
    0.004109336994588375,
    0.01806396059691906,
    -0.026496663689613342,
    0.021374261006712914,
    0.014967689290642738,
    0.00669907545670867,
    0.007983243092894554,
    0.0164373479783535,
    -0.02663934789597988,
    0.02692471817135811,
    -0.0019155503250658512,
    -0.019719110801815987,
    0.005539757199585438,
    0.005379236303269863,
    0.0143826799467206,
    0.01906275749206543,
    0.006338795181363821,
    0.0037169524002820253,
    0.02716728486120701,
    0.02106035314500332,
    -0.01389041543006897,
    -0.02802339568734169,
    -0.014482559636235237,
    0.0029821230564266443,
    0.0022472937125712633,
    0.024684559553861618,
    -0.020832056179642677,
    0.02863694354891777,
    0.018392136320471764,
    0.0510813444852829,
    -0.002115309704095125,
    0.020204240456223488,
    0.04069385305047035,
    0.007911900989711285,
    0.015367208048701286,
    0.01182861253619194,
    0.0020439671352505684,
    -0.009288813918828964,
    -0.00203683297149837,
    0.01362644787877798,
    -0.002249077195301652,
    0.0076407985761761665,
    0.00439470773562789,
    0.018277989700436592,
    -0.018634703010320663,
    -0.02765241451561451,
    0.03749769926071167,
    -0.006531420163810253,
    0.020817788317799568,
    -0.00404512882232666,
    -0.002595089143142104,
    -0.05419188365340233,
    -0.0020992576610296965,
    0.003688415512442589,
    -0.022943798452615738,
    -0.009481439366936684,
    0.0007187773007899523,
    -0.010765607468783855,
    -0.0052187154069542885,
    -0.009003443643450737,
    -0.015338671393692493,
    0.0027199387550354004,
    0.002384628402069211,
    -0.03572840243577957,
    -0.009081920608878136,
    0.010323282331228256,
    0.016280394047498703,
    0.016408810392022133,
    0.022744039073586464,
    -0.021588288247585297,
    0.004730018321424723,
    0.00610693171620369,
    0.011507570743560791,
    -0.03823966532945633,
    -0.01743614487349987,
    -0.06340935081243515,
    0.017664441838860512,
    0.0029625038150697947,
    0.0035439464263617992,
    -0.018591895699501038,
    -0.04132166877388954,
    0.023386122658848763,
    -0.021003277972340584,
    -0.017236385494470596,
    0.028109006583690643,
    0.010009374469518661,
    0.018506284803152084,
    0.027723757550120354,
    0.0030588165391236544,
    0.019262516871094704,
    0.026211291551589966,
    -0.014767929911613464,
    -0.00685246242210269,
    -0.009267411194741726,
    -0.005832262337207794,
    0.006542121525853872,
    -0.023000873625278473,
    0.011878552846610546,
    -6.916893471498042e-05,
    -0.021645361557602882,
    -0.010416028089821339,
    -0.0006251400336623192,
    0.005810859613120556,
    0.004433946218341589,
    0.0022312416695058346,
    0.005999917630106211,
    -0.0017193580279126763,
    0.01257057674229145,
    0.0015195986488834023,
    0.031704675406217575,
    -0.015039032325148582,
    -0.0021028248593211174,
    0.0035136258229613304,
    -0.024998467415571213,
    0.002090339781716466,
    0.058843422681093216,
    -0.023015141487121582,
    0.018149571493268013,
    -0.01793554425239563,
    0.01742187701165676,
    -0.021103158593177795,
    0.007362562231719494,
    0.011350616812705994,
    0.007498113438487053,
    -0.015067568980157375,
    -0.029592934995889664,
    -0.001656041480600834,
    0.0045195575803518295,
    0.008325688540935516,
    -0.0024202996864914894,
    0.017107969149947166,
    0.00784055795520544,
    -0.008504045195877552,
    0.015538430772721767,
    -0.001269899308681488,
    0.005860799457877874,
    -0.008361359126865864,
    -0.03124808333814144,
    -0.017222117632627487,
    -0.01804969273507595,
    -0.006410137750208378,
    0.02725289575755596,
    -0.005482683423906565,
    0.0033138664439320564,
    -0.02528383769094944,
    -0.016494423151016235,
    -0.01792127639055252,
    -0.034558381885290146,
    -0.0035011409781873226,
    -0.004926210734993219,
    0.03210419416427612,
    -0.01015206053853035,
    0.047257374972105026,
    0.004658675752580166,
    0.02006155624985695,
    -0.023714300245046616,
    0.01632319949567318,
    0.005949977785348892,
    -0.00466580968350172,
    0.04135020449757576,
    0.0005372993764467537,
    -0.020018748939037323,
    0.002238375833258033,
    0.03338836506009102,
    -0.005311460699886084,
    -0.04137874022126198,
    -0.028051933273673058,
    0.02277257665991783,
    -0.0032246881164610386,
    -0.015795264393091202,
    -0.0006171140121296048,
    -0.021702436730265617,
    -0.024142354726791382,
    0.0023436062037944794,
    -0.011043843813240528,
    -0.001048737089149654,
    -0.027723757550120354,
    -0.0038596377708017826,
    0.019947407767176628,
    0.004209216684103012,
    0.02765241451561451,
    0.025455059483647346,
    0.014147249050438404,
    0.005183043889701366,
    0.019376665353775024,
    -0.009267411194741726,
    -0.009859555400907993,
    -0.0012083662441000342,
    -0.013162720017135143,
    -0.013847609981894493,
    -0.035043515264987946,
    0.0037312209606170654,
    0.008083122782409191,
    0.014996226876974106,
    -0.016266126185655594,
    0.00990236084908247,
    -9.43618142628111e-05,
    0.0020760714542120695,
    0.01917690597474575,
    0.006681239698082209,
    0.027623876929283142,
    -0.043918538838624954,
    -0.013612179085612297,
    -0.02117450162768364,
    -0.027752293273806572,
    -0.010159194469451904,
    -0.0062531838193535805,
    0.0023061514366418123,
    0.01879165694117546,
    0.016522958874702454,
    -0.01806396059691906,
    -0.008796549402177334,
    -0.009424365125596523,
    -0.03387349471449852,
    0.042406074702739716,
    0.023714300245046616,
    0.021488407626748085,
    0.02290099300444126,
    -0.0007669335464015603,
    -0.020860593765974045,
    0.0016399893211200833,
    -0.01549562532454729,
    -0.025255300104618073,
    0.04120751842856407,
    0.0053542666137218475,
    -0.01767870970070362,
    -0.024898586794734,
    0.009402962401509285,
    -0.01882019266486168,
    -0.02604006975889206,
    0.00041668571066111326,
    0.0006260318332351744,
    0.001176262041553855,
    0.02625409886240959,
    -0.017907006666064262,
    -0.009074785746634007,
    -0.00233290484175086,
    -0.001048737089149654,
    -0.022701233625411987,
    -0.03587108850479126,
    -0.0049012405797839165,
    -0.0014134764205664396,
    -0.004765689373016357,
    -0.003149778349325061,
    0.002860840642824769,
    0.03801136836409569,
    0.023329049348831177,
    -0.004013024270534515,
    -0.009110457263886929,
    0.012920155189931393,
    0.0011851799208670855,
    0.007804886903613806,
    0.020632296800613403,
    0.04000896215438843,
    0.005432743579149246,
    -0.008660998195409775,
    0.053506992757320404,
    -0.018035423010587692,
    -0.01969057321548462,
    0.0030552493408322334,
    0.003190800314769149,
    0.04000896215438843,
    0.004109336994588375,
    -0.01569538377225399,
    -0.018149571493268013,
    -0.007144967094063759,
    -0.026325440034270287,
    -0.02701033093035221,
    -0.02217329852283001,
    0.00039907300379127264,
    0.0016221536789089441,
    0.011735866777598858,
    0.007769215386360884,
    -0.007255548145622015,
    -0.021887928247451782,
    -0.007227011024951935,
    0.0010754906106740236,
    -0.00356713286601007,
    -0.009945166297256947,
    0.036299142986536026,
    0.008254345506429672,
    -0.01457530539482832,
    -0.03024928644299507,
    -0.03535741940140724,
    -0.019105562940239906,
    0.01906275749206543,
    -0.005529055837541819,
    -0.010237671434879303,
    0.005468414630740881,
    0.03612792119383812,
    -0.03358812257647514,
    -0.008860758505761623,
    -0.00018471060320734978,
    -0.009602721780538559,
    -0.0033406198490411043,
    0.025355180725455284,
    -0.024085281416773796,
    -0.012042640708386898,
    0.025569207966327667,
    0.0018656104803085327,
    -0.029107803478837013,
    -0.026724958792328835,
    -0.0054541463032364845,
    0.012706127017736435,
    0.008068854920566082,
    -0.006231781095266342,
    0.013733461499214172,
    0.006741881370544434,
    0.015652578324079514,
    -0.01525306049734354,
    -0.03310299292206764,
    0.003798996564000845,
    -0.014767929911613464,
    0.01419005449861288,
    -0.009674064815044403,
    -0.01717931218445301,
    0.032817620784044266,
    0.0019726245664060116,
    0.017750052735209465,
    0.030049527063965797,
    -0.0451170951128006,
    -0.031561993062496185,
    -0.01683686673641205,
    0.0017889171140268445,
    -0.010879755020141602,
    -0.003164046909660101,
    0.024356383830308914,
    -0.008047452196478844,
    -0.013633581809699535,
    0.021459871903061867,
    0.012085446156561375,
    -0.020346926525235176,
    0.03812551498413086,
    0.021145964041352272,
    0.005960679147392511,
    0.02613995037972927,
    -0.025683356449007988,
    -0.031219547614455223,
    -0.001911983243189752,
    -0.00908905453979969,
    -0.01383334118872881,
    0.006495749112218618,
    -0.017236385494470596,
    0.028808165341615677,
    0.019761916249990463,
    -0.025455059483647346,
    -0.020632296800613403,
    -0.0018870133208110929,
    -0.018335063010454178,
    0.004926210734993219,
    -0.015338671393692493,
    0.021716704592108727,
    -0.0037526236847043037,
    0.028094738721847534,
    0.005332863889634609,
    -0.010458833537995815,
    -0.0029518024530261755,
    0.0016382057219743729,
    -0.01570965349674225,
    -0.008882161229848862,
    -0.012356548570096493,
    0.005878635216504335,
    0.012492099776864052,
    -0.010216268710792065,
    -0.01819237694144249,
    -0.02504127286374569,
    0.023856984451413155,
    -0.010558713227510452,
    0.01313418336212635,
    0.034929364919662476,
    -0.01854909025132656,
    -0.003292463719844818,
    -0.01695101521909237,
    -0.029207684099674225,
    -0.01214965432882309,
    0.023086484521627426,
    0.03478667885065079,
    -0.04457489401102066,
    0.014896347187459469,
    -0.017536025494337082,
    0.01944800838828087,
    0.009838152676820755,
    -0.0015900494763627648,
    -0.0005711871781386435,
    -0.02253001183271408,
    0.02726716361939907,
    0.012035506777465343,
    -0.003577834228053689,
    -0.010209133848547935,
    0.013405285775661469,
    0.037554774433374405,
    -0.013819072395563126,
    0.034187402576208115,
    0.04637272655963898,
    -0.0019030653638765216,
    -0.007152101490646601,
    -0.007169937249273062,
    -0.0025201793760061264,
    -0.01001650933176279,
    0.011165126226842403,
    0.03661305084824562,
    -0.033302754163742065,
    0.002746692392975092,
    -0.01620905101299286,
    0.020118629559874535,
    -0.010558713227510452,
    0.003549297107383609,
    -0.013647850602865219,
    0.00958131905645132,
    -0.02417089231312275,
    -0.0038703391328454018,
    0.0032211209181696177,
    -0.016151977702975273,
    -0.011386288329958916,
    0.01351229939609766,
    -0.007633664179593325,
    -0.013983161188662052,
    -0.012977229431271553,
    -0.004765689373016357,
    0.00432693213224411,
    0.0023275541607290506,
    0.004380439408123493,
    0.002060019178315997,
    -0.009731138125061989,
    -0.0001604095014045015,
    0.0025076945312321186,
    0.0066883740946650505,
    -0.004362603649497032,
    0.17715808749198914,
    0.012955826707184315,
    -0.0013207308948040009,
    0.008496910333633423,
    0.006495749112218618,
    -0.011272139847278595,
    0.0028893775306642056,
    0.009024846367537975,
    -0.0013376747956499457,
    0.01583806984126568,
    -0.028679748997092247,
    -0.019975943490862846,
    -0.015167448669672012,
    0.011129454709589481,
    0.01917690597474575,
    0.01239935401827097,
    -0.025183958932757378,
    -0.05912879481911659,
    -0.00914612878113985,
    0.02663934789597988,
    0.022986603900790215,
    -0.02939317561686039,
    -0.023357586935162544,
    -0.011721598915755749,
    0.026953255757689476,
    -0.0008989174966700375,
    -0.0009381559211760759,
    -0.0027413417119532824,
    0.01462524477392435,
    -0.019134100526571274,
    -0.014011697843670845,
    0.025369448587298393,
    -0.01770724728703499,
    0.015010494738817215,
    -0.023742835968732834,
    -0.005158074200153351,
    0.0011307811364531517,
    -0.012235266156494617,
    0.007419636473059654,
    -0.0036242071073502302,
    0.026881912723183632,
    -0.03027782402932644,
    -0.020989010110497475,
    -0.007562321610748768,
    -0.009802481159567833,
    -0.018848730251193047,
    -0.010729935951530933,
    -0.020389731973409653,
    -0.011407691054046154,
    0.03290323540568352,
    -0.029564397409558296,
    -0.030106602236628532,
    0.010187731124460697,
    0.022002074867486954,
    0.0006171140121296048,
    0.010986769571900368,
    0.005411340389400721,
    0.011778673157095909,
    0.03076295368373394,
    0.026938987895846367,
    -0.03798283264040947,
    0.04260583594441414,
    -0.02987830527126789,
    -0.008753743954002857,
    -0.0225585475564003,
    0.03050612099468708,
    -0.027695219963788986,
    -0.02043253742158413,
    0.03210419416427612,
    -0.040437016636133194,
    -0.01608063466846943,
    -0.009938032366335392,
    -0.016851136460900307,
    0.00485843513160944,
    -0.004744286648929119,
    -0.03127662092447281,
    0.0057894568890333176,
    -0.006952342111617327,
    0.011436227709054947,
    0.045916132628917694,
    0.00037254244671203196,
    0.008347091265022755,
    -0.012613382190465927,
    0.011514704674482346,
    -0.023257706314325333,
    -0.018991416320204735,
    0.007869095541536808,
    -0.013505165465176105,
    -0.003888174891471863,
    -0.017536025494337082,
    -0.010701398365199566,
    -0.007002281956374645,
    -0.0013448090758174658,
    0.017350533977150917,
    0.013811938464641571,
    -0.012477830983698368,
    -0.013048572465777397,
    0.0125277703627944,
    -0.03341690078377724,
    -0.01120793167501688,
    -0.06192542612552643,
    0.04842739552259445,
    0.04172118753194809,
    0.01120079681277275,
    -0.002466672332957387,
    -0.004669377114623785,
    -0.014425485394895077,
    0.02241586335003376,
    0.010473102331161499,
    -0.036042310297489166,
    -0.0003145765222143382,
    -0.01583806984126568,
    0.0075052473694086075,
    0.003419096814468503,
    -0.012049774639308453,
    -0.0014125846792012453,
    0.007705007214099169,
    0.02676776424050331,
    0.015666848048567772,
    0.005297192372381687,
    -0.012413622811436653,
    -0.003709818236529827,
    -0.0003130159166175872,
    0.01214965432882309,
    -0.011058111675083637,
    -0.008197271265089512,
    -0.0343300886452198,
    0.034444235265254974,
    -0.015452819876372814,
    -0.032560788094997406,
    0.016494423151016235,
    0.029621470719575882,
    0.018249452114105225,
    0.011557510122656822,
    0.0015160314505919814,
    -0.05065328627824783,
    -0.01857762783765793,
    -0.004672944080084562,
    0.0232862439006567,
    0.00358140142634511,
    -0.002015430014580488,
    -0.027067404240369797,
    0.017507487908005714,
    0.015738191083073616,
    -0.0003257238131482154,
    0.013298271223902702,
    -0.0018406405579298735,
    0.006042723078280687,
    -0.005504086147993803,
    -0.009695467539131641,
    0.015538430772721767,
    -0.0009916629642248154,
    0.007383964955806732,
    -0.01917690597474575,
    0.004847733769565821,
    -0.03675573691725731,
    -0.00353324506431818,
    -0.029935378581285477,
    0.013169854879379272,
    -0.019947407767176628,
    -0.022815382108092308,
    0.003563565667718649,
    0.0074410391971468925,
    0.015780996531248093,
    -0.024099549278616905,
    -0.03387349471449852,
    -0.17955520749092102,
    -0.0014366627437993884,
    0.025426523759961128,
    -0.04380439221858978,
    0.012420756742358208,
    -0.020403999835252762,
    0.0074053676798939705,
    -0.003699116874486208,
    -0.015338671393692493,
    0.01608063466846943,
    0.03127662092447281,
    -0.01870604418218136,
    -0.04089361056685448,
    -0.026111412793397903,
    -0.00846837367862463,
    -0.02802339568734169,
    0.01376199908554554,
    -0.004227052442729473,
    0.04397561401128769,
    0.0039488160982728004,
    0.04779957979917526,
    -0.0010201999684795737,
    0.009053383022546768,
    0.02750972844660282,
    0.014546767808496952,
    -0.022344520315527916,
    -0.011072380468249321,
    -0.014254262670874596,
    -0.004430379252880812,
    -0.014104443602263927,
    0.00045436355867423117,
    -0.006139035802334547,
    0.008332822471857071,
    0.003995188977569342,
    0.00411290442571044,
    0.017008090391755104,
    -0.007002281956374645,
    -0.01582380197942257,
    -0.007319756783545017,
    0.026353977620601654,
    0.02800912782549858,
    0.021088888868689537,
    0.01220672857016325,
    -0.004437513183802366,
    -0.022087687626481056,
    0.011386288329958916,
    -8.248994708992541e-05,
    -0.021588288247585297,
    -0.017036626115441322,
    -0.03310299292206764,
    0.024213697761297226,
    -0.012178191915154457,
    -0.002543365815654397,
    0.03724086657166481,
    0.02205915004014969,
    0.0014134764205664396,
    0.02405674383044243,
    0.01943374052643776,
    0.00756945600733161,
    0.007326890714466572,
    -0.01426853146404028,
    -0.03478667885065079,
    0.00511170132085681,
    0.009688332676887512,
    -0.001111161895096302,
    -0.00878941547125578,
    -0.0019369531655684114,
    -0.01706516370177269,
    0.0016890374245122075,
    0.02290099300444126,
    0.018263719975948334,
    -0.008425568230450153,
    -0.0214313343167305,
    -0.0037347881589084864,
    0.0153101347386837,
    0.004840599372982979,
    -0.01717931218445301,
    -0.0001567309082020074,
    0.0013599693775177002,
    -0.013733461499214172,
    -0.011008172295987606,
    0.022587085142731667,
    -0.005978514906018972,
    0.015281597152352333,
    0.02428504079580307,
    -0.003684848314151168,
    -0.0040486957877874374,
    0.008646730333566666,
    -0.031219547614455223,
    0.0170794315636158,
    0.0011709113605320454,
    0.015224522911012173,
    -0.03424447402358055,
    -0.014297069050371647,
    -0.012784603983163834,
    0.04948326572775841,
    -0.012220997363328934,
    -0.004198515322059393,
    0.018934341147542,
    -0.02665361762046814,
    0.017122237011790276,
    0.012499233707785606,
    -0.02367149293422699,
    -0.0029803395736962557,
    0.06517865508794785,
    0.016394542530179024,
    -0.02090339921414852,
    0.00479065952822566,
    0.013062840327620506,
    -0.002373927040025592,
    0.010537310503423214,
    0.02552640251815319,
    0.027195820584893227,
    0.04959741607308388,
    -0.004102202598005533,
    0.014882078394293785,
    0.0119641637429595,
    -0.016922477632761,
    -0.000738396483939141,
    -0.013961758464574814,
    0.02141706645488739,
    -0.003247874556109309,
    -0.007997511886060238,
    0.01313418336212635,
    0.002193786669522524,
    -0.009388693608343601,
    -0.12944412231445312,
    -0.03475814312696457,
    0.0012101498432457447,
    0.005425609182566404,
    -0.03744062781333923,
    -0.003306732280179858,
    -0.02043253742158413,
    -0.002614708384498954,
    -0.0022686964366585016,
    0.010701398365199566,
    -0.02990684285759926,
    0.015866607427597046,
    -0.022358788177371025,
    0.017136506736278534,
    -0.02031838893890381,
    0.007198474369943142,
    -0.018520554527640343,
    0.0007214526413008571,
    -0.012420756742358208,
    0.01139342226088047,
    0.015766726806759834,
    -0.008475507609546185,
    0.010630056262016296,
    -0.005803725216537714,
    -0.01906275749206543,
    0.002584387781098485,
    -0.01991887018084526,
    0.006110498681664467,
    0.0037026838399469852,
    0.012299474328756332,
    -0.0031105398666113615,
    -0.01232087705284357,
    -0.01794981211423874,
    -0.023000873625278473,
    0.001976191531866789,
    -0.012627650052309036,
    -0.016993820667266846,
    0.005165208596736193,
    0.019776184111833572,
    -0.023129289969801903,
    0.01058011595159769,
    -0.004177112597972155,
    0.02415662445127964,
    0.02379991114139557,
    0.015795264393091202,
    -0.00941009633243084,
    -0.025883115828037262,
    0.02666788548231125,
    0.009310216642916203,
    -0.029678545892238617,
    -0.010194865986704826,
    -0.008389896713197231,
    0.008347091265022755,
    -0.03461545705795288,
    0.01620905101299286,
    -0.02541225403547287,
    -0.021645361557602882,
    0.005097432993352413,
    0.004305529408156872,
    -0.010758472606539726,
    0.0076407985761761665,
    0.0012859513517469168,
    0.010323282331228256,
    0.018648970872163773,
    0.0050189560279250145,
    0.027823636308312416,
    -0.00896063819527626,
    0.006938073318451643,
    -0.0002760069037321955,
    -0.01667991280555725,
    -0.03972359001636505,
    0.0006510017556138337,
    -0.026439588516950607,
    0.006609897129237652,
    0.0021581153851002455,
    0.01182861253619194,
    0.006677672732621431,
    -0.01767870970070362,
    0.0015588370151817799,
    -0.028308765962719917,
    0.014589573256671429,
    0.009181800298392773,
    -0.02278684452176094,
    0.0030623835045844316,
    0.02267269603908062,
    0.015424282290041447,
    0.003064167220145464,
    0.03552864491939545,
    0.03373080864548683,
    -0.046001747250556946,
    0.034187402576208115,
    -0.00637803366407752,
    0.04234900325536728,
    -0.009574184194207191,
    -0.020018748939037323,
    0.007869095541536808,
    0.010201999917626381,
    0.0026896181516349316,
    -0.0009568834211677313,
    0.020989010110497475,
    -0.02477017045021057,
    -0.0026378948241472244,
    -0.07510954886674881,
    0.018977146595716476,
    0.008646730333566666,
    0.0013376747956499457,
    0.01642308011651039,
    -0.023956865072250366,
    -0.028109006583690643,
    -0.016851136460900307,
    -0.008133063092827797,
    0.02738131210207939,
    -0.03250371664762497,
    0.0029107804875820875,
    0.0011289975373074412,
    0.008768012747168541,
    0.014261397533118725,
    -0.018349330872297287,
    0.026453858241438866,
    -0.007712141145020723,
    0.041664112359285355,
    0.01351229939609766,
    0.0048013608902692795,
    0.0406082421541214,
    0.03661305084824562,
    -0.011222200468182564,
    -0.038410887122154236,
    -0.010230537503957748,
    -0.01756456308066845,
    0.0035938862711191177,
    0.0002494763466529548,
    -0.006110498681664467,
    0.011921358294785023,
    -0.013719192706048489,
    -0.007883363403379917,
    0.014425485394895077,
    0.02528383769094944,
    -0.025954458862543106,
    0.04132166877388954,
    -0.019205443561077118,
    0.028308765962719917,
    -0.020118629559874535,
    -0.021602556109428406,
    -0.015980755910277367,
    0.02953585982322693,
    0.02354307658970356,
    -0.007102161645889282,
    -0.016266126185655594,
    0.01819237694144249,
    -0.004148575477302074,
    0.010972500778734684,
    -0.009431499056518078,
    0.02999245375394821,
    0.023942595347762108,
    -0.006656270008534193,
    -0.032817620784044266,
    -0.015281597152352333,
    -0.009495708160102367,
    0.030192213132977486,
    -0.012813141569495201,
    -0.006674105767160654,
    -0.017878470942378044,
    0.03684134781360626,
    0.0004806711513083428,
    0.01526732835918665,
    -0.008061720058321953,
    0.0021723839454352856,
    -0.060327351093292236,
    -0.05818707123398781,
    -0.017750052735209465,
    0.006948774680495262,
    0.002602223539724946,
    0.0009435066604055464,
    0.004765689373016357,
    0.04934058338403702,
    0.003274627961218357,
    0.0070058489218354225,
    -0.028694016858935356,
    -0.009731138125061989,
    -0.014161517843604088,
    -0.0420636311173439,
    0.030734416097402573,
    0.010037912055850029,
    -0.00884648971259594,
    -0.009816749952733517,
    0.018035423010587692,
    0.021602556109428406,
    0.018392136320471764,
    -0.016765523701906204,
    -0.010765607468783855,
    0.0068239253014326096,
    0.02177377976477146,
    -0.03179029002785683,
    0.004997553303837776,
    -0.006206811405718327,
    0.018962878733873367,
    0.013448091223835945,
    0.009795347228646278,
    -0.00010545336408540606,
    0.006117633078247309,
    -0.00017233710968866944,
    0.02243013121187687,
    0.014304202981293201,
    0.0021438468247652054,
    -0.00514023844152689,
    0.008125929161906242,
    -0.0021545481868088245,
    -0.0010915426537394524,
    -0.003633124753832817,
    -0.0182922575622797,
    -0.0019440874457359314,
    -0.003078435780480504,
    -0.004922643303871155,
    -0.002179518109187484,
    -0.00021369355090428144,
    0.013926086947321892,
    -0.013119914568960667,
    -0.008546850644052029,
    0.02154548279941082,
    -0.00965979602187872,
    -0.014589573256671429,
    0.008361359126865864,
    0.01867750845849514,
    0.01629466377198696,
    0.03775453567504883,
    -0.02405674383044243,
    0.0021277947816997766,
    0.0305346567183733,
    0.007997511886060238,
    -0.04896960034966469,
    0.01568111591041088,
    -0.02118876948952675,
    -0.005807292181998491,
    0.006360197905451059,
    -0.025198226794600487,
    -0.0056182341650128365,
    -0.025226764380931854,
    -0.011764404363930225,
    0.02028985135257244,
    0.011072380468249321,
    -0.0022544278763234615,
    0.09223178774118423,
    -0.010558713227510452,
    -0.02778083086013794,
    0.010173463262617588,
    -0.010572982020676136,
    0.024342114105820656,
    0.03427301347255707,
    -0.012313743121922016,
    -0.02738131210207939,
    -0.0058358293026685715,
    -0.014218592084944248,
    -0.013084243051707745,
    -0.00781202083453536,
    -0.03438716009259224,
    -0.020489610731601715,
    0.021631093695759773,
    -0.019847527146339417,
    0.029592934995889664,
    0.032960306853055954,
    -0.003952383063733578,
    0.019005684182047844,
    -0.005978514906018972,
    -0.0118856867775321,
    0.0004302854067645967,
    -0.02529810555279255,
    0.0015909412177279592,
    0.03721233084797859,
    0.03316006809473038,
    -0.018021155148744583,
    -0.06089809164404869,
    0.021502677351236343,
    -0.010408894158899784,
    -0.005928575061261654,
    -0.023271974176168442,
    -0.006820357870310545,
    -0.004109336994588375,
    -0.01695101521909237,
    0.01145049650222063,
    0.00891783181577921,
    0.022587085142731667,
    -0.016765523701906204,
    -0.01432560570538044,
    -0.023000873625278473,
    -0.04026579484343529,
    0.01991887018084526,
    0.024342114105820656,
    -0.005875067785382271,
    0.014603842049837112,
    -0.03524327278137207
  ]
}
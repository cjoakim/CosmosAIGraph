{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: odoo",
    "intended audience :: developers",
    "license :: osi approved :: gnu lesser general public license v3 (lgplv3)",
    "operating system :: posix",
    "programming language :: python"
  ],
  "description": "setuptools-odoo\n===============\n\n.. image:: https://img.shields.io/badge/license-lgpl--3-blue.svg\n   :target: http://www.gnu.org/licenses/lgpl-3.0-standalone.html\n   :alt: license: lgpl-3\n.. image:: https://badge.fury.io/py/setuptools-odoo.svg\n    :target: http://badge.fury.io/py/setuptools-odoo\n.. image:: https://results.pre-commit.ci/badge/github/acsone/setuptools-odoo/master.svg\n   :target: https://results.pre-commit.ci/latest/github/acsone/setuptools-odoo/master\n   :alt: pre-commit.ci status\n.. image:: https://coveralls.io/repos/acsone/setuptools-odoo/badge.svg?branch=master&service=github\n   :target: https://coveralls.io/github/acsone/setuptools-odoo?branch=master\n\n\u26a0\ufe0f this project is progressively being deprecated. please consider using `whool\n<https://github.com/sbidoul/whool>`_ for packaging individual odoo addons, and\n`hatch-odoo <https://github.com/acsone/hatch-odoo>`_ to build complete projects that\ninclude odoo addons. \u26a0\ufe0f\n\n``setuptools-odoo`` is a library to help packaging odoo addons with setuptools.\nit mainly populates the usual ``setup.py`` keywords from the odoo manifest files.\n\nit enables the packaging and distribution of\nodoo addons using standard python infrastructure (ie\n`setuptools <https://pypi.python.org/pypi/setuptools>`_,\n`pip <https://pypi.python.org/pypi/pip>`_,\n`wheel <https://pypi.python.org/pypi/wheel>`_,\nand `pypi <https://pypi.python.org>`_).\n\n.. contents::\n\nrequirements\n~~~~~~~~~~~~\n\nthe following prerequisites apply:\n\n  * odoo version 8, 9, 10, 11, 12, 13, 14, 15 and 16 are supported (see notes in the\n    documentation for implementation differences).\n  * to install addons packaged with this tool, any pip version that\n    supports the wheel package format should work (ie pip >= 1.4).\n  * for any advanced use such as installing from source, installing from\n    git, packaging wheels etc, you need a recent version of pip (>= 9.0.1).\n  * finally, if you are using odoo 8, 9 or 10, you need to install\n    `odoo-autodiscover <https://pypi.python.org/pypi/odoo-autodiscover>`_\n    (``pip install odoo-autodiscover``) to provide automatic extension\n    of the addons path (and workaround a bug with setuptools > 31 and odoo 10).\n    odoo-autodiscover is *not* necessary for odoo >= 11.\n\npackaging a single addon\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nto be packaged with this library, the addon source code must have the\nfollowing structure (assuming the addon is named ``<addon_name>``):\n\n  .. code::\n\n    # odoo >= 11\n    setup.py\n    odoo/\n    odoo/addons/\n    odoo/addons/<addon_name>/\n    odoo/addons/<addon_name>/__manifest__.py\n    odoo/addons/<addon_name>/...\n\n    # odoo 10\n    setup.py\n    odoo/\n    odoo/__init__.py\n    odoo/addons/\n    odoo/addons/__init__.py\n    odoo/addons/<addon_name>/\n    odoo/addons/<addon_name>/__manifest__.py\n    odoo/addons/<addon_name>/...\n\n    # odoo 8, 9\n    setup.py\n    odoo_addons/\n    odoo_addons/__init__.py\n    odoo_addons/<addon_name>/\n    odoo_addons/<addon_name>/__openerp__.py\n    odoo_addons/<addon_name>/...\n\nwhere ``odoo/__init__.py``, ``odoo/addons/__init__.py``,\nand ``odoo_addons/__init__.py`` are standard python namespace package\ndeclaration ``__init__.py`` (note ``__init__.py`` is absent for odoo >= 11):\n\n  .. code:: python\n\n    __import__('pkg_resources').declare_namespace(__name__)\n\nand where setup.py has the following content:\n\n  .. code:: python\n\n    import setuptools\n\n    setuptools.setup(\n        setup_requires=['setuptools-odoo'],\n        odoo_addon=true,\n    )\n\nthe usual setup() keyword arguments are computed automatically from the\nodoo manifest file (``__manifest__.py`` or ``__openerp__.py``) and contain:\n\n  * ``name``: the package name, ``odoo<series>-addon-<addon_name>``\n  * ``version``: the ``version`` key from the manifest\n  * ``description``: the ``summary`` key from the manifest if it exists otherwise\n    the ``name`` key from the manifest\n  * ``long_description``: the content of the ``readme.rst`` file if it exists,\n    otherwise the ``description`` key from the manifest\n  * ``url``: the ``website`` key from the manifest\n  * ``license``: the ``license`` key from the manifest\n  * ``packages``: autodetected packages\n  * ``namespace_packages``: ``['odoo', 'odoo.addons']`` (odoo 10) or\n    ``['odoo_addons']`` (odoo 8, 9), absent for odoo 11\n  * ``zip_safe``: ``false``\n  * ``include_package_data``: ``true``\n  * ``install_requires``: dependencies to odoo, other addons (except official\n    odoo community and enterprise addons, which are brought by the odoo dependency)\n    and python libraries.\n  * ``python_requires``\n\nthen, the addon can be deployed and packaged with usual ``pip`` commands such as:\n\n  .. code:: shell\n\n    pip install odoo<8|9|10|11|12|13|14>-addon-<addon name>\n    pip install \"git+https://github.com/oca/<repo>#subdirectory=setup/<addon name>\"\n    pip install \"git+https://github.com/oca/<repo>@<branch or reference>#subdirectory=setup/<addon name>\"\n    pip install -e .\n    pip wheel .\n    python -m build\n\n.. note::\n\n   please make sure to use the latest pip version.\n\n.. note::\n\n   when using python 2 (odoo 8, 9, 10), please install ``odoo-autodiscover>=2`` so the\n   addons-path is automatically populated with all places providing odoo addons\n   installed with this method.\n\nit is of course highly recommanded to run in a virtualenv.\n\n  .. note:: odoo 8, 9 namespace.\n\n     although the addons are packaged in the ``odoo_addons`` namespace,\n     the code can still import them using ``import odoo.addons....``.\n     ``odoo_addons`` must never appear in the code, it is just a packaging\n     peculiarity for odoo 8 and 9 only, and does not require any change\n     to the addons source code.\n\npackaging multiple addons\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\naddons that are intended to be reused or depended upon by other addons\nmust be packaged individually.  when preparing a project for a specific customer,\nit is common to prepare a collection of addons that are not intended to be\ndepended upon by addons outside of the project. setuptools-odoo provides\ntools to help you do that.\n\nto be packaged with this library, your project must be structured according\nto the following structure:\n\n  .. code::\n\n    # odoo >= 11\n    setup.py\n    odoo/\n    odoo/addons/\n    odoo/addons/<addon1_name>/\n    odoo/addons/<addon1_name>/__manifest__.py\n    odoo/addons/<addon1_name>/...\n    odoo/addons/<addon2_name>/\n    odoo/addons/<addon2_name>/__manifest__.py\n    odoo/addons/<addon2_name>/...\n\n    # odoo 10\n    setup.py\n    odoo/\n    odoo/__init__.py\n    odoo/addons/\n    odoo/addons/__init__.py\n    odoo/addons/<addon1_name>/\n    odoo/addons/<addon1_name>/__manifest__.py\n    odoo/addons/<addon1_name>/...\n    odoo/addons/<addon2_name>/\n    odoo/addons/<addon2_name>/__manifest__.py\n    odoo/addons/<addon2_name>/...\n\n    # odoo 8, 9\n    setup.py\n    odoo_addons/\n    odoo_addons/__init__.py\n    odoo_addons/<addon1_name>/\n    odoo_addons/<addon1_name>/__openerp__.py\n    odoo_addons/<addon1_name>/...\n    odoo_addons/<addon2_name>/\n    odoo_addons/<addon2_name>/__openerp__.py\n    odoo_addons/<addon2_name>/...\n\nwhere setup.py has the following content:\n\n  .. code:: python\n\n    import setuptools\n\n    setuptools.setup(\n        name='<your project package name>',\n        version='<your version>',\n        # ...any other setup() keyword\n        setup_requires=['setuptools-odoo'],\n        odoo_addons=true,\n    )\n\nthe following setup() keyword arguments are computed automatically from the\nodoo manifest files (``__manifest__.py`` or ``__openerp__.py``) and contain:\n\n  * ``packages``: autodetected packages\n  * ``namespace_packages``: ``['odoo', 'odoo.addons']`` (odoo 10) or\n    ``['odoo_addons']`` (odoo 8, 9), absent for python 3 (odoo 11 and later)\n  * ``zip_safe``: ``false``\n  * ``include_package_data``: ``true``\n  * ``install_requires``: dependencies on odoo, any depending addon not found\n    in the addons directory, and external python dependencies.\n  * ``python_requires``\n\ninstalling odoo ce and ee addons\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``setuptools-odoo`` has built-in knowledge of the addons that are part of the odoo\ncommunity and enterprise editions. dependencies on these addons are condidered to be\nsatisfied by the ``odoo`` distribution.\n\nthis means odoo must be *installed* in your python environment.\n\nas of odoo 8 to 16, a good way to install odoo is in a virtual environment. there are\nseveral possibilities, but the following bash commands should get you started:\n\n.. code:: console\n\n  $ python3 -m venv ./venv\n  $ source ./venv/bin/activate\n  (venv) $ python3 -m pip install --upgrade pip wheel\n  (venv) $ python3 -m pip install -r ./odoo/requirements.txt\n  (venv) $ python3 -m pip install -e ./odoo\n\nafter that, ``./venv/bin/pip list`` will show ``odoo`` as part of the installed\nprojects, and running ``./venv/bin/odoo`` will start odoo with a proper addons path.\n\nif you need to add the odoo enterprise addons, you can make them visible to odoo using\nthe ``--addons-path`` odoo option, or package them in a multi-addons project that you\npip install, as explained above.\n\ncontrolling setuptools-odoo behaviour\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nit is possible to use a dictionary instead of ``true`` for the ``odoo_addon``\nand ``odoo_addons`` keywords, in order to control their behaviour.\n\nthe following keys are supported:\n\n  * ``depends_override``, used to precisely control odoo addons dependencies.\n    its value must be a dictionary mapping addon names to a package\n    requirement string.\n  * ``external_dependencies_override``, used to precisely control python\n    external dependencies. its value must be a dictionary with one ``python``\n    key, with value a dictionary mapping python external dependencies to\n    a python package requirement specifier or list of specifiers.\n  * ``odoo_version_override``, used to specify which odoo series to use\n    (8.0, 9.0, 10.0, 11.0, ...) in case an addon version does not start with the odoo\n    series number. use this only as a last resort, if you have no way to\n    correct the addon version in its manifest.\n  * ``post_version_strategy_override``, used to specify how the git commits are used\n    to amend the version found in the manifest (see the versioning_ section below).\n\nfor instance, if your module requires at least version 10.0.3.2.0 of\nthe connector addon, as well as at least version 0.5.5 of py-asterisk,\nyour setup.py would look like this:\n\n  .. code:: python\n\n    import setuptools\n\n    setuptools.setup(\n        setup_requires=['setuptools-odoo'],\n        odoo_addon={\n            'depends_override': {\n                'connector': 'odoo10-addon-connector>=10.0.3.2.0',\n            },\n            'external_dependencies_override': {\n                'python': {\n                    'asterisk': 'py-asterisk>=0.5.5',\n                    'somepkg': [\n                      'somepkg<3 ; python_version < \"3\"',\n                      'somepkg>=3 ; python_version > \"3\"',\n                    ]\n                },\n            },\n        },\n    )\n\nsetuptools-odoo-make-default helper script\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nsince reusable addons are generally not structured using the namespace\npackage but instead collected in a directory with each subdirectory containing\nan addon, this package provides the ``setuptools-odoo-make-default`` script which\ncreates a default ``setup.py`` for each addon according to the following structure:\n\n  .. code::\n\n    # odoo >= 11\n    setup/\n    setup/addon1/\n    setup/addon1/setup.py\n    setup/addon1/odoo/\n    setup/addon1/odoo/addons/\n    setup/addon1/odoo/addons/<addon1_name> -> ../../../../<addon1_name>\n    setup/addon2/setup.py\n    setup/addon1/odoo/\n    setup/addon2/odoo/addons/\n    setup/addon2/odoo/addons/<addon2_name> -> ../../../../<addon2_name>\n    <addon1_name>/\n    <addon1_name>/__manifest__.py\n    <addon1_name>/...\n    <addon2_name>/\n    <addon2_name>/__manifest__.py\n    <addon2_name>/...\n\n    # odoo 10\n    setup/\n    setup/addon1/\n    setup/addon1/setup.py\n    setup/addon1/odoo/\n    setup/addon1/odoo/__init__.py\n    setup/addon1/odoo/addons/\n    setup/addon1/odoo/addons/__init__.py\n    setup/addon1/odoo/addons/<addon1_name> -> ../../../../<addon1_name>\n    setup/addon2/setup.py\n    setup/addon1/odoo/\n    setup/addon1/odoo/__init__.py\n    setup/addon2/odoo/addons/\n    setup/addon2/odoo/addons/__init__.py\n    setup/addon2/odoo/addons/<addon2_name> -> ../../../../<addon2_name>\n    <addon1_name>/\n    <addon1_name>/__manifest__.py\n    <addon1_name>/...\n    <addon2_name>/\n    <addon2_name>/__manifest__.py\n    <addon2_name>/...\n\n    # odoo 8, 9\n    setup/\n    setup/addon1/\n    setup/addon1/setup.py\n    setup/addon1/odoo_addons/\n    setup/addon1/odoo_addons/__init__.py\n    setup/addon1/odoo_addons/<addon1_name> -> ../../../<addon1_name>\n    setup/addon2/setup.py\n    setup/addon2/odoo_addons/\n    setup/addon2/odoo_addons/__init__.py\n    setup/addon2/odoo_addons/<addon2_name> -> ../../../<addon2_name>\n    <addon1_name>/\n    <addon1_name>/__openerp__.py\n    <addon1_name>/...\n    <addon2_name>/\n    <addon2_name>/__openerp__.py\n    <addon2_name>/...\n\navailable options::\n\n  usage: setuptools-odoo-make-default [-h] --addons-dir addons_dir [--force]\n                                      [--odoo-version-override odoo_version_override]\n                                      [--metapackage metapackage] [--clean]\n                                      [--commit]\n\n  generate default setup.py for all addons in an odoo addons directory\n\n  optional arguments:\n    -h, --help            show this help message and exit\n    --addons-dir addons_dir, -d addons_dir\n    --force, -f\n    --odoo-version-override odoo_version_override\n                          force odoo version for situations where some addons\n                          versions do not start with the odoo version.\n    --metapackage metapackage, -m metapackage\n                          create a metapackage using the given name. this\n                          package depends on all installable addons in\n                          addons_dir.\n    --clean, -c           clean the setup directory: remove setups of\n                          uninstallable addons, remove files corresponding to\n                          other odoo versions, remove metapackage setup if there\n                          are no installable addons.\n    --commit              git commit changes, if any.\n\n``setuptools-odoo-make-default`` is also available as a `pre-commit\n<https://pre-commit.com/>`_ hook. to use it, you can add such an entry\nin your `.pre-commit-config.yaml`:\n\n.. code:: yaml\n\n  repos:\n    - repo: https://github.com/acsone/setuptools-odoo\n      rev: 2.5.2\n      hooks:\n        - id: setuptools-odoo-make-default\n\nsetuptools-odoo-get-requirements helper script\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nsince it is a common practice in the odoo world to have a file named\n``requirements.txt`` at the repository root, this script helps generating it\nfrom the external dependencies declared in addons manifests.::\n\n  usage: setuptools-odoo-get-requirements [-h] [--addons-dir addons_dir] [--output output]\n\n  print external python dependencies for all addons in an odoo addons directory.\n  if dependencies overrides are declared in setup/{addon}/setup.py, they are\n  honored in the output.\n\n  optional arguments:\n    -h, --help            show this help message and exit\n    --addons-dir addons_dir, -d addons_dir\n                          addons directory (default: .)\n    --output output, -o output\n                          output file (default: stdout)\n    --header header       output file header\n    --include-addons      include addons and odoo requirements in addition to\n                          python external dependencies (default: false).\n\n\nversioning\n~~~~~~~~~~\n\nby default, setuptools-odoo does its best to detect if an addon has changed\ncompared to the version indicated in it's manifest. to this end it explores the\ngit log of the addon subtree.\n\nif the last change to the addon corresponds to the version number in the manifest,\nit is used as is for the python package version. otherwise a counter\nis incremented for each commit and the resulting version number includes that counter.\n\nthe default strategy depends on the odoo series. it has the following form,\nn being the number of git commits since the version change.\n\n- strategy ``.99.devn`` is the default for series 8 to 12 and yields\n  ``[8|9|10|11|12].0.x.y.z.99.devn``.\n- strategy ``+1.devn`` is the default for series 13 and 14 and yields\n  ``[13|14].0.x.y.z+1.devn``.\n- strategy ``.n`` is the default for series 15 and later, and\n  adds a digit, typically yielding ``[series].0.x.y.z.n``.\n- strategy ``none`` is not used by default and disables the post\n  versioning mechanism, yielding the version found in the manifest.\n\nthese schemes are compliant with the accepted python versioning scheme documented\nin `pep 440 <https://www.python.org/dev/peps/pep-0440/#developmental-releases>`_.\n\nthe default strategy can be overridden using the\n``post_version_strategy_override`` keyword or the\n``setuptools_odoo_post_version_strategy_override`` environment variable. if set\nand not empty, the environment variable has priority over the ``setup.py``\nkeyword.\n\n.. note::\n\n  for ``pip`` to install a developmental version, it must be invoked with the ``--pre``\n  option.\n\npublic api\n~~~~~~~~~~\n\nthe ``setuptools_odoo`` package exposes a provisional public api.\n\n* ``get_addon_metadata(addon_dir, ...)`` returns an ``email.message.message``\n  compliant with `python core metadata specifications\n  <https://packaging.python.org/en/latest/specifications/core-metadata/>`_.\n\nuseful links\n~~~~~~~~~~~~\n\n- pypi page: https://pypi.python.org/pypi/setuptools-odoo\n- documentation: https://setuptools-odoo.readthedocs.io\n- code repository: https://github.com/acsone/setuptools-odoo\n- report issues at: https://github.com/acsone/setuptools-odoo/issues\n- see also odoo-autodiscover: https://pypi.python.org/pypi/odoo-autodiscover\n\ncredits\n~~~~~~~\n\nauthor:\n\n  - st\u00e9phane bidoul (`acsone <http://acsone.eu/>`_)\n\ncontributors\n\n  - benjamin willig\n  - matteo bilotta\n\nmany thanks to daniel reis who cleared the path, and laurent mignon who convinced\nme it was possible to do it using standard python packaging tools and had the idea of\nthe odoo_addons namespace package.\n\nchanges\n~~~~~~~\n\n.. towncrier release notes start\n\n3.2.1 (2023-09-30)\n------------------\n\nbugfixes\n++++++++\n\n- fix ``filenotfounderror`` regression in ``setuptools-odoo-make-default``. (`#116 <https://github.com/acsone/setuptools-odoo/issues/116>`_)\n\n\n3.2.0 (2023-09-20)\n------------------\n\nfeatures\n++++++++\n\n- generate python metadata version 2.1 instead 2.2. we are compatible with 2.1, and while\n  pypi does not support 2.2 packages generated with such metadata can't be uploaded to\n  pypi. (`#112 <https://github.com/acsone/setuptools-odoo/issues/112>`_)\n- update core addon lists. (`#115 <https://github.com/acsone/setuptools-odoo/issues/115>`_)\n\n\nbugfixes\n++++++++\n\n- open ``readme.rst`` using utf-8 encoding to avoid decoding issues on platform\n  where the default encoding is not utf-8. (`#108 <https://github.com/acsone/setuptools-odoo/issues/108>`_)\n\n\n3.1.12 (2023-03-29)\n-------------------\n\nfeatures\n++++++++\n\n- update core addon lists. (`#107 <https://github.com/acsone/setuptools-odoo/issues/107>`_)\n\n\n3.1.11 (2023-03-15)\n-------------------\n\nfeatures\n++++++++\n\n- update core addon lists. (`#106 <https://github.com/acsone/setuptools-odoo/issues/106>`_)\n\n\n3.1.10 (2022-12-28)\n-------------------\n\nfeatures\n++++++++\n\n- update core addon lists. (`#105 <https://github.com/acsone/setuptools-odoo/issues/105>`_)\n\n\n3.1.9 (2022-11-24)\n------------------\n\nfeatures\n++++++++\n\n- update core addon lists. (`#100 <https://github.com/acsone/setuptools-odoo/issues/100>`_)\n\n\n3.1.8 (2022-11-01)\n------------------\n\nfeatures\n++++++++\n\n- update core addon lists. (`#97 <https://github.com/acsone/setuptools-odoo/issues/97>`_)\n\n\n3.1.7 (2022-10-16)\n------------------\n\nfeatures\n++++++++\n\n- update core addon lists. (`#96 <https://github.com/acsone/setuptools-odoo/issues/96>`_)\n\n\n3.1.6 (2022-10-02)\n------------------\n\nfeatures\n++++++++\n\n- require python 3.10 for odoo 16. (`#93 <https://github.com/acsone/setuptools-odoo/issues/93>`_)\n- update core addon lists. (`#94 <https://github.com/acsone/setuptools-odoo/issues/94>`_)\n\n\n3.1.5 (2022-09-21)\n------------------\n\nfeatures\n++++++++\n\n- update odoo base addons list.\n\n3.1.4 (2022-09-14)\n------------------\n\nfeatures\n++++++++\n\n- update odoo base addons list.\n\n3.1.3 (2022-09-01)\n------------------\n\nbug fixes\n+++++++++\n\n- properly handle odoo_version_override in setuptools-odoo-makedefault metapackage generation. (`#89 <https://github.com/acsone/setuptools-odoo/issues/89>`_)\n\nfeatures\n++++++++\n\n- update odoo base addons list.\n\n3.1.1 (2022-05-17)\n------------------\n\nfeatures\n++++++++\n\n- better error message when the odoo version cannot be detected. (`#85 <https://github.com/acsone/setuptools-odoo/issues/85>`_)\n- update odoo base addons list.\n\n3.1.0 (2022-05-06)\n------------------\n\n- support overriding external dependencies with a list of requirements, enabling more\n  advanced use cases such as declaring environment markers.\n  (`#81 <https://github.com/acsone/setuptools-odoo/pull/81>`)\n- preliminary odoo 16 support (`#83 <https://github.com/acsone/setuptools-odoo/issues/83>`_)\n- update odoo base addons list.\n\n\n3.0.7 (2022-02-26)\n------------------\n\n- setuptools-odoo-get-requirements: fixed a regression when using ``--include-addons``,\n  where the addons of the local directory where reported as requirements. (`#67 <https://github.com/acsone/setuptools-odoo/issues/67>`_)\n- update odoo base addons list.\n\n3.0.6 (2022-01-11)\n------------------\n\n- update odoo base addons list.\n\n3.0.5 (2021-12-17)\n------------------\n\n- fix reading pkg-info metadata for odoo >= 15. (`#70 <https://github.com/acsone/setuptools-odoo/issues/70>`_)\n\n3.0.4 (2021-12-04)\n------------------\n\n- update odoo base addons list.\n\n\n3.0.3 (2021-10-18)\n------------------\n\n- odoo 15 addons now require python >= 3.8 by default. (`#65 <https://github.com/acsone/setuptools-odoo/issues/65>`_)\n\n\n3.0.2 (2021-10-09)\n------------------\n\n- ``setuptools-odoo-make-default`` now uses the new naming scheme for the metapackage name. (`#64 <https://github.com/acsone/setuptools-odoo/issues/64>`_)\n\n\n3.0.1 (2021-10-06)\n------------------\n- generate metada-version 2.2. since metadata obtained from a sdist with pkg-info\n  is directly read from the pkg-info, all metadata is static by definition.\n- add a ``precomputed_metadata_path`` argument to ``get_addon_metadata``.\n- support odoo 15, with new ``odoo-addon-{addon_name}`` package name structure.\n  this leverages the new pip dependency resolver to correctly install the correct\n  version, depending on the installed odoo version. the default git postversion strategy\n  for odoo 15 addons is now ``.n``, which means it adds a 6th digit to the version\n  number with the number of commit since the last version bump in the addon manifest.\n- add support for the new odoo series trove classifers.\n- update odoo base addons list.\n\n2.7.1 (2021-03-15)\n------------------\n- ``setuptools-odoo-get-requirements --include-addons`` does not output\n  local addons, as it is meant to list third party dependencies\n\n2.7.0 (2021-03-13)\n------------------\n- [add] add new ``.n`` git post version strategy that adds a 6th digit with the\n  number of commit since the latest manifest version change\n- [add] implement the ``post_version_strategy_override`` keyword that was documented\n  but not effective\n- [add] allow overriding the post version strategy using the\n  ``setuptools_odoo_post_version_strategy_override`` environment variable\n- [add] add ``--include-addons`` option to ``setuptools-odoo-get-requirements``,\n  to output addon packages and odoo in addition to python external dependencies\n- [upd] update base addons lists\n\n2.6.3 (2021-01-29)\n------------------\n- [upd] update base addons lists\n\n2.6.2 (2021-01-13)\n------------------\n- fixed build system by opting-in to pep 517\n\n2.6.1 (unreleased)\n------------------\n- [upd] update base addons lists\n\n2.6.0 (2020-10-21)\n------------------\n\n- [add] support for post version strategy override\n- [add] setuptools-odoo-get-requirements to extract the list of external python\n  dependencies from addon manifests\n\n2.5.10 (2020-09-29)\n-------------------\n- [upd] update base addons lists\n- [add] odoo 14 support\n\n2.5.9 (2020-05-25)\n------------------\n- [fix] further avoid depending on broken setuptools_scm 4.0.0\n\n2.5.8 (2020-05-25)\n------------------\n- [fix] avoid depending on broken setuptools_scm 4.0.0\n- [upd] update base addons lists\n\n2.5.7 (2020-05-07)\n------------------\n- [upd] update base addons lists\n\n2.5.6 (2020-04-24)\n------------------\n- [upd] update base addons lists\n\n2.5.5 (2020-03-06)\n------------------\n- [upd] update base addons lists\n\n2.5.4 (2020-02-16)\n------------------\n- [upd] update base addons lists\n\n2.5.3 (2020-01-16)\n------------------\n- [imp] update documentation for odoo 12 and 13\n\n2.5.2 (2020-01-16)\n------------------\n- [upd] update base addons lists\n- [add] pre-commit hook for setuptools-odoo-make-default\n\n2.5.1 (2019-12-13)\n------------------\n- [fix] better detection of git repo root\n- [upd] update base addons lists\n\n2.5.0 (2019-10-04)\n------------------\n- [add] new git autoversioning strategy (increase last digit instead of\n  appending .99), will be used for odoo 13\n- [add] preliminary odoo 13 support\n- [add] new provisional public api that returns python package metada 2.1 for\n  and odoo addon\n\n2.4.1 (2018-11-05)\n------------------\n- [fix] issue with make-default-setup metapackage generator\n  now honors .setuptools-odoo-make-default-ignore\n\n2.4.0 (2018-10-04)\n------------------\n- [imp] update base addons lists, including odoo 12\n\n2.3.0 (2018-05-13)\n------------------\n- [fix] remove tests from sdist (they work only within a proper\n  git clone)\n- [imp] support development_status manifest key to generate\n  corresponding pypi classifers\n- [imp] use pypa/setuptools_scm instead of the unmaintained\n  setuptools-git as git file finder\n\n2.2.1 (2018-05-08)\n------------------\n- [fix] issue with make-default-setup --commit in empty directory\n\n2.2.0 (2018-04-30)\n------------------\n- [imp] silence some useless git warnings when looking for manifst\n  in git history\n- [imp] when searching for manifest, look for __manifest__.py before\n  __openerp__.py, this should slightly improve performance for what\n  is becoming the most common case in recent odoo versions\n- [imp] update base addons list for odoo 8, 9, 10\n- [imp] load base addons list from resource files, making it easier\n  to maintain these lists (using the udpated mk_base_addons script)\n- [imp] add openssl and suds in external dependencies map\n\n2.1.0 (2018-04-22)\n------------------\n- [fix] give precedence to pkg-info over manifest to get version,\n  so the git post version obtained when generating an sdist is\n  preserved (before it would fall back in the manifest version\n  when trying to build from an sdist outside of git)\n- [imp] update base addons list for odoo 11.0\n\n2.0.4 (2018-04-18)\n------------------\n- [fix] setuptools-odoo-make-default: make metapackage a universal\n  wheel for odoo 11\n\n2.0.3 (2018-04-18)\n------------------\n- [imp] add --clean, --commit and --metapackage options to\n  setuptools-odoo-make-default\n\n2.0.2 (2017-10-07)\n------------------\n- [imp] update base addons list for odoo 11 (ce and ee)\n\n2.0.1 (2017-10-02)\n------------------\n- [fix] fix issue when odoo/addons has no __init__.py.\n\n2.0.0 (2017-09-19)\n------------------\n- [imp] update base addons list for odoo 10.0\n- [imp] when setuptools extends a list-type keyword, prevent duplicate items\n- [imp] make tests pass with python 3\n- [add] preliminary odoo 11 support\n- [imp] breaking: remove legacy_mode support\n- [imp] python_requires is now part of the generated keywords\n- [chg] in the classifiers, use python instead of python :: 2.7\n  since we now have python_requires that is more precise\n\n1.0.1 (2017-04-08)\n------------------\n- [add] add license classifier for the licenses commonly used in oca\n\n1.0.0 (2017-04-07)\n------------------\n- [add] support the brand new framework :: odoo classifier\n\n1.0.0rc4 (2017-02-21)\n---------------------\n- [fix] avoid setuptools-git version 1.2 as it is broken for\n  our use case\n\n1.0.0rc3 (2017-01-14)\n---------------------\n- [fix] git based automatic postversioning was not working\n  in situations where the manifest was renamed (eg when\n  renaming ``__openerp__.py`` to ``__manifest__.py``)\n- [imp] support author email: since the odoo manifest has\n  no such concept this is currently just a special case\n  when oca is in the authors\n\n1.0.0rc2 (2016-10-07)\n---------------------\n- [imp] 10.0 addons now depend on the specific odoo version again\n  (>=10.0, <10.1dev)\n\n1.0.0rc1 (2016-10-03)\n---------------------\n- [imp] odoo 10.0 support with addons in the odoo.addons namespace.\n- [imp] update base addons list for odoo 9.0 and 10.0rc1\n\n1.0.0b7 (2016-09-22)\n--------------------\n- [imp] add __manifest__.py support for odoo 10,\n  drop __odoo__.py support which has never been supported by odoo.\n- [imp] breaking: package names are now constructed along the\n  following scheme: odoo{series}-addon-{addon_name} where series\n  is 8, 9 or 10.\n\n1.0.0b6 (2016-08-23)\n--------------------\n- [imp] the odoo_addon and odoo_addons keyword now extend\n  list keywords such as install_requires if they are present\n  in setup.py (previously, it left them alone); this is useful\n  to create a package that contains odoo addons in addition to\n  other python packages\n- [imp] allow none as value for depends_override to disable\n  the addition of an addon present in __openerp__.py 'depends'\n  key to setup.py 'install_requires'\n- [imp] check if odoo version is supported also in presence of\n  odoo_version_override\n- [add] preliminary openerp 7.0 support\n- [add] --odoo-version-override to setuptools-odoo-make-default\n  to use when there is no practical way to normalize addons versions\n- [fix] when using odoo_version_override, make sure the package\n  version starts with the odoo version, otherwise dependencies from\n  other packages do not work\n- [upd] refresh base addons list for odoo 9c with new modules added\n  over the last months\n\n1.0.0b5 (2016-05-03)\n--------------------\n- [fix] fix bug of previous release that prevented the packaging\n  of a single auto_install addon\n\n1.0.0b4 (2016-04-06)\n--------------------\n- [upd] pycrypto in external dependencies map\n- [add] setuptools-odoo-make-default now ignores addons listed\n  in .setuptools-odoo-make-default-ignore; this is useful when\n  some addons are manually included in another package (such as\n  autoinstallable glue modules)\n- [add] setuptools-odoo-make-default now generates readme and\n  .setuptools-odoo-make-default-ignore files at the root of\n  the setup directory\n- [imp] the odoo_addon setup keyword now accepts several addons in the\n  odoo_addons namespace, provided exactly one is installable and not\n  auto installable. this is meant to package an addon together with one\n  or more auto_installable glue modules.\n\n1.0.0b3 (2016-02-10)\n--------------------\n- [add] mechanism to specify which odoo version to use in dependencies\n  (8.0, 9.0) in case some addons to be packaged have non-standard version\n  numbers\n- [add] support for addons without version number in their manifest\n  (unfortunately there are some in the wild...)\n\n1.0.0b2 (2016-01-26)\n--------------------\n- [add] mechanism to override dependencies, to allow addon authors to\n  require minimal versions of dependent odoo addons, and to control external\n  python dependencies\n\n1.0.0b1 (2015-12-29)\n--------------------\n- [fix] fix postversioning when running outside git directory\n- [imp] additional mappings for python external dependencies\n- [add] make_pkg_name public api to convert an addon name to a python\n  package name\n- [add] make_pkg_requirement public api to obtain a valid package requirement\n  for a given addon (same as make_pkg_name but includes requirement\n  for the correct odoo series)\n- [fix] crash in case a previous commit had a bad `__openerp__.py`\n\n0.9.0 (2015-12-13)\n------------------\n- first beta\n",
  "docs_url": null,
  "keywords": "",
  "license": "lgplv3",
  "name": "setuptools-odoo",
  "package_url": "https://pypi.org/project/setuptools-odoo/",
  "project_url": "https://pypi.org/project/setuptools-odoo/",
  "project_urls": {
    "Homepage": "http://github.com/acsone/setuptools-odoo"
  },
  "release_url": "https://pypi.org/project/setuptools-odoo/3.2.1/",
  "requires_dist": [
    "setuptools",
    "setuptools-scm !=4.0.0,>=2.1"
  ],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
  "summary": "a library to help package odoo addons with setuptools",
  "version": "3.2.1",
  "releases": [],
  "developers": [
    "acsone_sa",
    "info@acsone.eu"
  ],
  "kwds": "setuptools_odoo lgpl setuptools odoo_addons setuptools_odoo_post_version_strategy_override",
  "license_kwds": "lgplv3",
  "libtype": "pypi",
  "id": "pypi_setuptools_odoo",
  "homepage": "http://github.com/acsone/setuptools-odoo",
  "release_count": 65,
  "dependency_ids": [
    "pypi_setuptools",
    "pypi_setuptools_scm"
  ]
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.2",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.8"
  ],
  "description": "edx-django-utils\n================\n\n|pypi-badge| |ci-badge| |codecov-badge| |doc-badge| |pyversions-badge|\n|license-badge| |status-badge|\n\nedx utilities for django application development.\n\nnote that some utilities may warrant their own repository. a judgement call\nneeds to be made as to whether code properly belongs here or not. please\nreview with the architecture team if you have any questions.\n\npurpose\n-------\n\nthis repository includes shared utilities for:\n\n* `cache utilities`_: includes a requestcache and a tieredcache.\n\n* `django user and group utilities`_: includes user and group utilities.\n\n* `ip address utilities`_: utilities for handling request ip addresses.\n\n* `logging utilities`_: includes log filters and an encrypted logging helper.\n\n* `monitoring utilities`_: includes middleware and utilities for enhanced monitoring.\n  at this time, supports newrelic monitoring.\n\n* `plugin infrastructure`_: enables enhanced django plugin capabilities.\n\n* `security utilities`_: includes a middleware to add csp response headers.\n\n.. _cache utilities: edx_django_utils/cache/readme.rst\n\n.. _django user and group utilities: edx_django_utils/user/readme.rst\n\n.. _ip address utilities: edx_django_utils/ip/readme.rst\n\n.. _logging utilities: edx_django_utils/logging/readme.rst\n\n.. _monitoring utilities: edx_django_utils/monitoring/readme.rst\n\n.. _plugin infrastructure: edx_django_utils/plugins/readme.rst\n\n.. _security utilities: edx_django_utils/security/readme.rst\n\ndocumentation\n-------------\n\nthe full documentation is in the docs directory, and is published to https://edx-django-utils.readthedocs.org.\n\ngetting started with development\n--------------------------------\n\nplease see the open edx documentation for `guidance on python development <https://docs.openedx.org/en/latest/developers/how-tos/get-ready-for-python-dev.html>`_ in this repo.\n\ndesign pattern followed by packages\n-----------------------------------\n\nall tools in edx_django_utils should expose their public api in their __init__.py files. this entails adding to __init__.py all functions/classes/constants/objects that are intended to be used by users of library.\n\ngetting help\n------------\n\nif you're having trouble, we have discussion forums at\n`discuss.openedx.org <https://discuss.openedx.org>`_ where you can connect with others in the\ncommunity.\n\nour real-time conversations are on slack. you can request a `slack\ninvitation`_, then join our `community slack workspace`_.\n\nfor anything non-trivial, the best path is to `open an issue`__ in this\nrepository with as many details about the issue you are facing as you\ncan provide.\n\n__ https://github.com/openedx/django-config-models/issues\n\nfor more information about these options, see the `getting help`_ page.\n\n.. _slack invitation: https://openedx.org/slack\n.. _community slack workspace: https://openedx.slack.com/\n.. _getting help: https://openedx.org/getting-help\n\nhow to contribute\n-----------------\n\ncontributions are very welcome.\n\nplease read `how to contribute <https://github.com/openedx/.github/blob/master/contributing.md>`_ for details.\n\npr description template should be automatically applied if you are sending pr from github interface; otherwise you\ncan find it it at `pull_request_template.md <https://github.com/openedx/edx-django-utils/blob/master/.github/pull_request_template.md>`_\n\nissue report template should be automatically applied if you are sending it from github ui as well; otherwise you\ncan find it at `issue_template.md <https://github.com/openedx/edx-django-utils/blob/master/.github/issue_template.md>`_\n\nthis project is currently accepting all types of contributions, bug fixes, security fixes, maintenance work, or new features. however, please make sure to have a discussion about your new feature idea with the maintainers prior to beginning development to maximize the chances of your change being accepted. you can start a conversation by creating a new issue on this repo summarizing your idea.\n\nopen edx code of conduct\n------------------------\nall community members are expected to follow the `open edx code of conduct`_.\n\n.. _open edx code of conduct: https://openedx.org/code-of-conduct/\n\npeople\n------\nthe assigned maintainers for this component and other project details may be\nfound in `backstage`_. backstage pulls this data from the ``catalog-info.yaml``\nfile in this repo.\n\n\n.. _backstage: https://backstage.openedx.org/catalog/default/component/edx-django-utils\n\nreporting security issues\n-------------------------\n\nplease do not report security issues in public. please email security@openedx.org.\n\nlicense\n-------\n\nthe code in this repository is licensed under the apache license, version 2.0, unless\notherwise noted.\n\nplease see ``license.txt`` for details.\n\n\n.. |pypi-badge| image:: https://img.shields.io/pypi/v/edx-django-utils.svg\n    :target: https://pypi.python.org/pypi/edx-django-utils/\n    :alt: pypi\n\n.. |ci-badge| image:: https://github.com/openedx/edx-django-utils/workflows/python%20ci/badge.svg?branch=master\n    :target: https://github.com/openedx/edx-django-utils/actions?query=workflow%3a%22python+ci%22\n    :alt: ci\n\n.. |codecov-badge| image:: http://codecov.io/github/edx/edx-django-utils/coverage.svg?branch=master\n    :target: http://codecov.io/github/edx/edx-django-utils?branch=master\n    :alt: codecov\n\n.. |doc-badge| image:: https://readthedocs.org/projects/edx-django-utils/badge/?version=latest\n    :target: http://edx-django-utils.readthedocs.io/en/latest/\n    :alt: documentation\n\n.. |pyversions-badge| image:: https://img.shields.io/pypi/pyversions/edx-django-utils.svg\n    :target: https://pypi.python.org/pypi/edx-django-utils/\n    :alt: supported python versions\n\n.. |license-badge| image:: https://img.shields.io/github/license/edx/edx-django-utils.svg\n    :target: https://github.com/openedx/edx-django-utils/blob/master/license.txt\n    :alt: license\n\n.. |status-badge| image:: https://img.shields.io/badge/status-maintained-brightgreen\n    :alt: maintenance status\n\n\nchange log\n==========\n\n..\n   all enhancements and patches to edx_django_utils will be documented\n   in this file.  it adheres to the structure of https://keepachangelog.com/ ,\n   but in restructuredtext instead of markdown (for ease of incorporation into\n   sphinx documentation and the pypi description).\n\n   this project adheres to semantic versioning (https://semver.org/).\n\n.. there should always be an \"unreleased\" section for changes pending release.\n\n[5.9.0] - 2023-11-27\n--------------------\n\nremoved\n~~~~~~~\n* removed ``edx_django_utils.cache.disable_forced_cache_miss_for_none`` which was added in ``5.7.0``.\n\n[5.8.0] - 2023-11-03\n--------------------\n\nchanged\n~~~~~~~\n* adjusted ``get_plugin_apps`` to log at info level rather than debug and with more detail, though with a comment that this may not actually end up logging.\n\n[5.7.0] - 2023-08-04\n--------------------\n\nadded\n~~~~~\n* support added for django 4.2\n\nfixed\n~~~~~\n* fixed bug where none was not properly being stored by tieredcache.\n  for backward compatibility, ``edx_django_utils.cache.disable_forced_cache_miss_for_none`` waffle switch has\n  been added, which defaults to the old broken behavior of treating none as a cache miss.\n\n[5.6.0] - 2023-07-24\n--------------------\n\nchanged\n~~~~~~~\n* updated and renamed new_relic_nrql_search to search in text widgets as well as nrql queries\n\n[5.5.0] - 2023-06-01\n--------------------\n\nchanged\n~~~~~~~\n* switched to ``sphinx-book-theme`` as the new standard theme across all open\n  edx repos.  see https://github.com/openedx/edx-sphinx-theme/issues/184 for\n  more details.\n* cookiemonitoringmiddleware will now remove cookies based on a ``cookie_prefixes_to_remove`` setting\n\n\n[5.4.0] - 2023-04-12\n--------------------\n\nadded\n~~~~~\n\n* added content-security-policy response header middleware under ``security/csp``\n\n[5.3.0] - 2023-03-17\n--------------------\n\nfixed\n~~~~~\n\n* report both specified and existing email when refusing to create a user\n\n[5.2.0] - 2022-10-06\n--------------------\n\nadded\n~~~~~\n\n* added a wrapper for background_task in monitoring.\n\n[5.1.0] - 2022-09-19\n--------------------\n\nadded\n~~~~~\n\n* utilities for safely determining the ip address of a request: ``edx_django_utils.ip`` (moved from edx-platform)\n\n[5.0.1] - 2022-09-09\n--------------------\n\nchanged\n~~~~~~~\n\n* license has been changed from agpl v3 to apache v2 to reflect existing policies\n\n[5.0.0] - 2022-05-19\n--------------------\n\nchanged\n~~~~~~~\n\n* corrupt cookie logging:\n\n  * make independent of other cookie logging; no longer needs to meet cookie size threshold or sampling rate.\n  * **breaking change**, although low impact: setting name changed from ``unusual_cookie_sampling_public_key`` to ``unusual_cookie_header_public_key``.\n  * new setting ``unusual_cookie_header_log_chunk`` helps avoid truncated (non-decryptable) messages by splitting the output across multiple log messages.\n\n[4.8.1] - 2022-05-06\n--------------------\n\nadded\n~~~~~\n\n* added ability to log headers when a corrupted cookie is detected in a large (or sampled) cookie header\n\n[4.8.0] - 2022-05-06\n--------------------\n\nbad version -- tag does not match package version, not released to pypi. released as 4.8.1 instead.\n\n[4.7.0] - 2022-05-05\n--------------------\n\nadded\n~~~~~\n\n* added ``encrypt_for_log`` logging helper and ``log-sensitive`` cli command for encrypted logging of sensitive information\n\n[4.6.0] - 2022-03-16\n--------------------\n\nadded\n~~~~~\n\n* added ``cookiemonitoringmiddleware`` for monitoring cookie header sizes and cookie sizes.\n\n[4.5.0] - 2022-01-31\n--------------------\n\nremoved\n~~~~~~~\n\n* removed django22, 30 and 31 from ci\n\n[4.4.2] - 2022-01-24\n--------------------\n\nfixed\n~~~~~\n\n* no longer clear the ``requestcache`` during the exception-handling phase (wait until response phase)\n\n  * it turns out all the ``process_exception`` methods get called until one returns a response, and only *then* do the ``process_response`` methods start getting called. the result was that on exception, some middlewares were unable to use requestcache'd values in their response phase.\n\nupdated\n~~~~~~~\n\n* replaced usage of 'django.conf.urls' with 'django.urls'\n\n[4.4.1] - 2021-12-17\n--------------------\n\nupdated\n~~~~~~~\n\n* replaced usage of 'django.conf.urls.url()' with 'django.urls.re_path()'\n\n[4.4.0] - 2021-09-02\n--------------------\n\nadded\n~~~~~\n\n* added ``deploymentmonitoringmiddleware`` to record ``python`` and ``django`` versions in newrelic with each transaction.\n\n[4.3.0] - 2021-07-20\n--------------------\n\nadded\n~~~~~\n\n* added user and group management utilities.\n\n[4.2.0] - 2021-07-14\n--------------------\n\nadded\n~~~~~\n\n* added support for django 3.1 and 3.2\n\n[4.1.0] - 2021-06-01\n--------------------\n\nadded\n~~~~~\n\n* added mixin for a custom django admin class which disables crud operation on the admin's model.\n\nadded\n~~~~~\n\n* script new_relic_nrql_search.py to search the nrql in new relic alert policies and dashboards using a supplied regex.\n\n[4.0.0] - 2021-05-03\n--------------------\n\nremoved\n~~~~~~~\n\n* removed the old location of ``codeownermonitoringmiddleware``. it had moved in a past commit. although technically a breaking change, all references in the open edx platform have already been updated to point to the new location.\n\nadded\n~~~~~\n\n* added new ``code_owner_theme`` and ``code_owner_squad`` custom attributes. this is useful in cases where the ``code_owner`` combines a theme and squad name, because monitoring can instead reference ``code_owner_squad`` to be resilient to theme name updates. for the decision doc, see edx_django_utils/monitoring/docs/decisions/0004-code-owner-theme-and-squad.rst.\n\nupdated\n~~~~~~~\n\n* misconfigurations of code_owner_mappings will now fail fast, rather than just logging. although technically a breaking change, if code_owner_mappings is in use, it is probably correctly configured and this change should be a no-op.\n\n[3.16.0] - 2021-03-24\n---------------------\n\nadded\n~~~~~\n\n* added ``pluggable_override`` decorator.\n\n\n[3.15.0] - 2021-03-02\n---------------------\n\n* added chunked_queryset utility.\n\n[3.14.0] - 2020-12-15\n---------------------\n\nremoved\n~~~~~~~\n\n* dropped support for python 3.5.\n\n\n[3.13.0] - 2020-11-18\n---------------------\n\nadded\n~~~~~\n\n* added record_exception to monitor caught exceptions.\n\nupdated\n~~~~~~~\n\n* added additional details to the `deprecated_monitoring_utils` custom attribute values to make it simpler to track down usage.\n\n[3.12.0] - 2020-11-17\n---------------------\n\nadded\n~~~~~\n\n* added set_code_owner_attribute decorator for use with celery tasks.\n* added set_code_owner_attribute_from_module as an alternative to the decorator.\n\nupdated\n~~~~~~~\n\n* cleaned up some of the code owner middleware code. in doing so, renamed custom attribute code_owner_path_module to code_owner_module. this may affect monitoring dashboards. also slightly changed when error custom attributes are set.\n\n[3.11.0] - 2020-10-31\n---------------------\n\nadded\n~~~~~\n\n* added adr 0004-public-api-and-app-organization.rst to explain a new app organization, which makes use of the public api more consistent.\n\nupdated\n~~~~~~~\n\n* applied the new app organization described in th adr to the monitoring django app.\n* moved cachedcustommonitoringmiddleware, codeownermonitoringmiddleware, and monitoringmemorymiddleware to the public api.\n\ndeprecated\n~~~~~~~~~~\n\n* deprecated the old locations of cachedcustommonitoringmiddleware, codeownermonitoringmiddleware, and monitoringmemorymiddleware.\n* deprecated various methods from modules that were always meant to be used from the public api.\n\n  * accumulate\n  * increment\n  * set_custom_attribute\n  * set_custom_attributes_for_course_key\n\n* added additional custom attributes for deprecated classes and methods to make them safer to retire.\n\n.. note::\n\n  some method implementations that were available in the public api were moved without adding a deprecated equivalent. these were not found when searching, so hopefully they are only used via the public api, which did not change. this includes functions in ``transactions.py`` and ``code_owner/utils.py``.\n\nremoved\n~~~~~~~\n\n* removed the middleware ordering checks. this is not a typical django feature and it is painful when refactoring.\n\n[3.10.0] - 2020-10-28\n---------------------\n\nadded\n~~~~~\n\n* added logging filter classes for users and remote ip addresses to be used by all idas. these were moved here from edx-platform.\n\n[3.9.0] - 2020-10-21\n--------------------\n\nupdated\n~~~~~~~\n\n* exposed existing get_code_owner_from_module via the public api.\n* fixed get_code_owner_from_module to not require a call to is_code_owner_mappings_configured beforehand.\n* set the existing code_owner_path_module custom attribute, even for cases where the transaction name was used, rather than the view module.\n* refactor code owner setting processing.\n\n[3.8.0] - 2020-08-31\n--------------------\n\nupdated\n~~~~~~~\n\n* renamed \"custom metric\" to \"custom attribute\" throughout the monitoring library. this decision can be read about in the adr 0002-custom-monitoring-language.rst.  the following have been deprecated:\n\n  * set_custom_metric (use set_custom_attribute)\n  * set_custom_metrics_for_course_key (use set_custom_attributes_for_course_key)\n  * monitoringcustommetricsmiddleware (use cachedcustommonitoringmiddleware)\n  * cachedcustommonitoringmiddleware.accumulate_metric (use cachedcustommonitoringmiddleware.accumulate_attribute)\n\n    * this wasn't meant to be used publicly, but was deprecated just in case.\n\n  * codeownermetricmiddleware (use codeownermonitoringmiddleware)\n\n[3.7.4] - 2020-08-29\n--------------------\n\n* fix to custom monitoring accumulate to actually accumulate rather than overwrite.\n\n[3.7.3] - 2020-08-12\n--------------------\n\nupdated\n~~~~~~~\n\n* upgrade psutil to latest version\n\n[3.7.2] - 2020-08-10\n--------------------\n\nupdated\n~~~~~~~\n\n* added missing classes to plugins public api. see ``plugins.__init__.py`` for latest api.\n* updated plugin method names to be more descriptive. see ``plugins.__init__.py`` for latest.\n\n.. note:: although these changes are backwards incompatible, they are being added as a bug fix because plugins code release (3.7.0) is not yet in use.\n\n[3.7.1] - 2020-08-10\n--------------------\n\nupdated\n~~~~~~~\n\n* exposing all public functions in edx_django_utils/plugins directory in its __init__.py file.\n    * this was done to keep inline with standard/pattern used in other packages in edx_django_utils\n\n[3.7.0] - 2020-08-10\n--------------------\n\nadded\n~~~~~\n\n* adding plugin infrastructure\n    * allows idas to use plugins\n\n[3.6.0] - 2020-08-04\n--------------------\n\nadded\n~~~~~\n\n* improved documentation for codeownermetricmiddleware, including a how_tos/add_code_owner_custom_metric_to_an_ida.rst for adding it to a new ida.\n* added ignore_transaction monitoring utility to ignore transactions we don't want tracked.\n\nupdated\n~~~~~~~\n\n* moved transaction-related monitoring code into it's own file. still exposed through `__init__.py` so it's a non-breaking change.\n\n[3.5.0] - 2020-07-22\n--------------------\n\nupdated\n~~~~~~~\n\n* added a catch-all capability to codeownermetricmiddleware when code_owner_mappings includes a '*' as a team's module. the catch-all is used only if there is no other match.\n\n[3.4.0] - 2020-07-20\n--------------------\n\nadded\n~~~~~\n\n* added get_current_transaction for monitoring that returns a transaction object with a name property.\n\nupdated\n~~~~~~~\n\n* updated codeownermetricmiddleware to use newrelic's current transaction for cases where resolve() doesn't work to determine the code_owner, like for middleware.\n\n[3.3.0] - 2020-07-16\n--------------------\n\nadded\n~~~~~\n\n* codeownermetricmiddleware was moved here (from edx-platform) in order to be able to take advantage of the ``code_owner`` metric in other idas. for details on this decision, see the `adr for monitoring code owner`_. see the docstring for more details on usage.\n\n.. _adr for monitoring code owner: https://github.com/openedx/edx-django-utils/blob/master/edx_django_utils/monitoring/docs/decisions/0001-monitoring-by-code-owner.rst\n\n[3.2.3] - 2020-05-30\n--------------------\n* removed ceninusepy3 usage.\n\n[3.2.2] - 2020-05-04\n--------------------\n* added support for python 3.8 and dropped support for django versions older than 2.2\n\n[3.2.1] - 2020-04-17\n--------------------\n\nchanged\n~~~~~~~\n\n* imported get_cache_key in cache/__init__.py.\n\n[3.2.0] - 2020-04-09\n--------------------\n\nadded\n~~~~~\n\n* added get_cache_key utility.\n\n[2.0.1] - 2019-10-09\n--------------------\n\nchanged\n~~~~~~~\n\n* fixed: updated function tracing to accomodate changes in new relic's 5.x agent.\n\n[2.0.0] - 2019-07-07\n--------------------\n\nchanged\n~~~~~~~\n\n* converted middleware (from old style middleware_classes to middleware).\n* removed support for django versions < 1.11\n\n[1.0.1] - 2018-09-07\n--------------------\n\nchanged\n~~~~~~~\n\n* fixed: requestcache now properly uses thread.local.\n* fixed: cachedresponse.__repr__ now handles unicode.\n\n[1.0.0] - 2018-08-28\n--------------------\n\nadded\n~~~~~~~\n\n* add ``data`` dict property to better match legacy requestcache interface.\n\nchanged\n~~~~~~~\n\n* change is_hit/is_miss to is_found.\n\n[0.5.1] - 2018-08-17\n--------------------\n\nchanged\n~~~~~~~\n\n* fixed bug in tieredcachemiddleware dependency declaration.\n\n[0.5.0] - 2018-08-16\n--------------------\n\nchanged\n~~~~~~~\n\n* restored python 3 support.\n* refactor/clean-up, including middleware dependency checking.\n* docs updates and other cookiecutter updates.\n\n[0.4.1] - 2018-08-10\n--------------------\n\nchanged\n~~~~~~~\n\n* split out tieredcachemiddleware from requestcachemiddleware.\n\n[0.4.0] - 2018-08-10\n--------------------\n\nchanged\n~~~~~~~\n\n* rename cacheutilsmiddleware to requestcachemiddleware.\n\n[0.3.0] - 2018-08-02\n--------------------\n\nremoved\n~~~~~~~\n\n* temporarily dropped python 3 support to land this.\n\n[0.2.0] - 2018-08-01\n--------------------\n\nadded\n~~~~~\n\n* added cache and monitoring utilities.\n\n\n[0.1.0] - 2018-07-23\n--------------------\n\nadded\n~~~~~\n\n* first release on pypi.\n",
  "docs_url": null,
  "keywords": "django edx",
  "license": "",
  "name": "edx-django-utils",
  "package_url": "https://pypi.org/project/edx-django-utils/",
  "project_url": "https://pypi.org/project/edx-django-utils/",
  "project_urls": {
    "Homepage": "https://github.com/openedx/edx-django-utils"
  },
  "release_url": "https://pypi.org/project/edx-django-utils/5.9.0/",
  "requires_dist": [
    "Django",
    "PyNaCl",
    "click",
    "django-crum",
    "django-waffle",
    "newrelic",
    "psutil",
    "stevedore"
  ],
  "requires_python": "",
  "summary": "edx utilities for django application development.",
  "version": "5.9.0",
  "releases": [],
  "developers": [
    "edx",
    "oscm@edx.org"
  ],
  "kwds": "edx_django_utils django _django django22 cachedcustommonitoringmiddleware",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_edx_django_utils",
  "homepage": "https://github.com/openedx/edx-django-utils",
  "release_count": 61,
  "dependency_ids": [
    "pypi_click",
    "pypi_django",
    "pypi_django_crum",
    "pypi_django_waffle",
    "pypi_newrelic",
    "pypi_psutil",
    "pypi_pynacl",
    "pypi_stevedore"
  ]
}
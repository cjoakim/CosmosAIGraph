{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.9"
  ],
  "description": "backports.strenum\n=================\n\na backport of (copy and paste from) python 3.11's ``strenum`` class for >=3.8.6:\n\nsee the `design discussion <https://discuss.python.org/t/built-in-strenum/4192>`_,\nand `ethan furman <https://github.com/ethanfurman>`_'s `first <https://github.com/python/cpython/pull/22337>`_ and\n`second <https://github.com/python/cpython/pull/22362>`_ pr with this implementation.\n\na slightly different implementation would likely be compatible with lower python versions;\nprs are welcome if they pass the test suite.\nthe existing (reference) implementation should still be the one used on supported versions.\n\ninstall with ``pip install backports.strenum``, and use with:\n\n.. code-block:: python\n\n    import sys\n\n    if sys.version_info >= (3, 11):\n        from enum import strenum\n    else:\n        from backports.strenum import strenum\n\n    class mystrenum(strenum):\n        potato = \"potato\"\n        orange = \"orange\"\n        spade = \"spade\"\n\n    mystrenum.potato == \"potato\"  # true\n    mystrenum.orange.upper() == \"orange\"  # true\n    str(mystrenum.spade) == \"spade\"  # true\n\nfrom version 1.3.0, this package cannot be installed on python >=3.11.\nit shouldn't be used on them anyway.\nmake sure that in your package, this is a conditional dependency.\n\ngotchas\n^^^^^^^\n\na number of behaviours relating to the treatment of enum classes as containers of their members (e.g. iterating and containment checks) will be changing in python 3.12.\n\nthis package intends only to allow pre-3.11 users to get 3.11-like behaviour; after that, stick with the standard library.\n\n----\n\nthese are the `docs provided with python 3.11 <https://docs.python.org/3.11/library/enum.html#enum.strenum>`_:\n\n``class enum.strenum``\n^^^^^^^^^^^^^^^^^^^^^^\n\n*strenum* is the same as *enum*, but its members are also strings and can be used in most of the same places that a string can be used.\nthe result of any string operation performed on or with a *strenum* member is not part of the enumeration.\n\n.. note::\n    there are places in the stdlib that check for an exact `str <https://docs.python.org/3.11/library/enum.html#enum.strenum>`_ instead of a `str <https://docs.python.org/3.11/library/enum.html#enum.strenum>`_ subclass (i.e. ``type(unknown) == str`` instead of ``isinstance(unknown, str)``), and in those locations you will need to use ``str(strenum.member)``.\n\n.. note::\n    using `auto <https://docs.python.org/3.11/library/enum.html#enum.auto>`_ with `strenum <https://docs.python.org/3.11/library/enum.html#enum.strenum>`_ results in the lower-cased member name as the value.\n\n.. note::\n    `__str__() <https://docs.python.org/3.11/reference/datamodel.html#object.__str__>`_ is str.__str__() to better support the replacement of existing constants use-case. `__format__() <https://docs.python.org/3.11/reference/datamodel.html#object.__format__>`_ is likewise ``str.__format__()`` for that same reason.\n\n",
  "docs_url": null,
  "keywords": "backports,enum,strenum",
  "license": "mit",
  "name": "backports.strenum",
  "package_url": "https://pypi.org/project/backports.strenum/",
  "project_url": "https://pypi.org/project/backports.strenum/",
  "project_urls": {
    "Homepage": "https://github.com/clbarnes/backports.strenum",
    "Repository": "https://github.com/clbarnes/backports.strenum"
  },
  "release_url": "https://pypi.org/project/backports.strenum/1.3.1/",
  "requires_dist": [],
  "requires_python": ">=3.8.6,<3.11",
  "summary": "base class for creating enumerated constants that are also subclasses of str",
  "version": "1.3.1",
  "releases": [],
  "developers": [
    "chris_l",
    "chrislloydbarnes@gmail.com"
  ],
  "kwds": "cpython python pip strenum backports",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_backports.strenum",
  "homepage": "https://github.com/clbarnes/backports.strenum",
  "release_count": 6,
  "dependency_ids": []
}
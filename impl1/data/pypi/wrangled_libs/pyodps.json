{
  "classifiers": [
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries"
  ],
  "description": "odps python sdk and data analysis framework\n===========================================\n\n|pypi version| |docs| |license| |implementation|\n\nelegent way to access odps api.\n`documentation <http://pyodps.readthedocs.org/>`__\n\ninstallation\n------------\n\nthe quick way:\n\n::\n\n   pip install pyodps[full]\n\nif you don\u2019t need to use jupyter, just type\n\n::\n\n   pip install pyodps\n\nthe dependencies will be installed automatically.\n\nor from source code:\n\n.. code:: shell\n\n   $ virtualenv pyodps_env\n   $ source pyodps_env/bin/activate\n   $ pip install git+https://github.com/aliyun/aliyun-odps-python-sdk.git\n\ndependencies\n------------\n\n-  python (>=2.7), including python 3+, pypy, python 3.7 recommended\n-  setuptools (>=3.0)\n\nrun tests\n---------\n\n-  install pytest\n-  copy conf/test.conf.template to odps/tests/test.conf, and fill it\n   with your account\n-  run ``pytest odps``\n\nusage\n-----\n\n.. code:: python\n\n   >>> from odps import odps\n   >>> o = odps('**your-access-id**', '**your-secret-access-key**',\n   ...          project='**your-project**', endpoint='**your-end-point**')\n   >>> dual = o.get_table('dual')\n   >>> dual.name\n   'dual'\n   >>> dual.table_schema\n   odps.schema {\n     c_int_a                 bigint\n     c_int_b                 bigint\n     c_double_a              double\n     c_double_b              double\n     c_string_a              string\n     c_string_b              string\n     c_bool_a                boolean\n     c_bool_b                boolean\n     c_datetime_a            datetime\n     c_datetime_b            datetime\n   }\n   >>> dual.creation_time\n   datetime.datetime(2014, 6, 6, 13, 28, 24)\n   >>> dual.is_virtual_view\n   false\n   >>> dual.size\n   448\n   >>> dual.table_schema.columns\n   [<column c_int_a, type bigint>,\n    <column c_int_b, type bigint>,\n    <column c_double_a, type double>,\n    <column c_double_b, type double>,\n    <column c_string_a, type string>,\n    <column c_string_b, type string>,\n    <column c_bool_a, type boolean>,\n    <column c_bool_b, type boolean>,\n    <column c_datetime_a, type datetime>,\n    <column c_datetime_b, type datetime>]\n\ndataframe api\n-------------\n\n.. code:: python\n\n   >>> from odps.df import dataframe\n   >>> df = dataframe(o.get_table('pyodps_iris'))\n   >>> df.dtypes\n   odps.schema {\n     sepallength           float64\n     sepalwidth            float64\n     petallength           float64\n     petalwidth            float64\n     name                  string\n   }\n   >>> df.head(5)\n   |==========================================|   1 /  1  (100.00%)         0s\n      sepallength  sepalwidth  petallength  petalwidth         name\n   0          5.1         3.5          1.4         0.2  iris-setosa\n   1          4.9         3.0          1.4         0.2  iris-setosa\n   2          4.7         3.2          1.3         0.2  iris-setosa\n   3          4.6         3.1          1.5         0.2  iris-setosa\n   4          5.0         3.6          1.4         0.2  iris-setosa\n   >>> df[df.sepalwidth > 3]['name', 'sepalwidth'].head(5)\n   |==========================================|   1 /  1  (100.00%)        12s\n             name  sepalwidth\n   0  iris-setosa         3.5\n   1  iris-setosa         3.2\n   2  iris-setosa         3.1\n   3  iris-setosa         3.6\n   4  iris-setosa         3.9\n\ncommand-line and ipython enhancement\n------------------------------------\n\n::\n\n   in [1]: %load_ext odps\n\n   in [2]: %enter\n   out[2]: <odps.inter.room at 0x10fe0e450>\n\n   in [3]: %sql select * from pyodps_iris limit 5\n   |==========================================|   1 /  1  (100.00%)         2s\n   out[3]:\n      sepallength  sepalwidth  petallength  petalwidth         name\n   0          5.1         3.5          1.4         0.2  iris-setosa\n   1          4.9         3.0          1.4         0.2  iris-setosa\n   2          4.7         3.2          1.3         0.2  iris-setosa\n   3          4.6         3.1          1.5         0.2  iris-setosa\n   4          5.0         3.6          1.4         0.2  iris-setosa\n\npython udf debugging tool\n-------------------------\n\n.. code:: python\n\n   #file: plus.py\n   from odps.udf import annotate\n\n   @annotate('bigint,bigint->bigint')\n   class plus(object):\n       def evaluate(self, a, b):\n           return a + b\n\n::\n\n   $ cat plus.input\n   1,1\n   3,2\n   $ pyou plus.plus < plus.input\n   2\n   5\n\ncontributing\n------------\n\nfor a development install, clone the repository and then install from\nsource:\n\n::\n\n   git clone https://github.com/aliyun/aliyun-odps-python-sdk.git\n   cd pyodps\n   pip install -r requirements.txt -e .\n\nif you need to modify the frontend code, you need to install\n`nodejs/npm <https://www.npmjs.com/>`__. to build and install your\nfrontend code, use\n\n::\n\n   python setup.py build_js\n   python setup.py install_js\n\nlicense\n-------\n\nlicensed under the `apache license\n2.0 <https://www.apache.org/licenses/license-2.0.html>`__\n\n.. |pypi version| image:: https://img.shields.io/pypi/v/pyodps.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/pyodps\n.. |docs| image:: https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat-square\n   :target: http://pyodps.readthedocs.org/\n.. |license| image:: https://img.shields.io/pypi/l/pyodps.svg?style=flat-square\n   :target: https://github.com/aliyun/aliyun-odps-python-sdk/blob/master/license\n.. |implementation| image:: https://img.shields.io/pypi/implementation/pyodps.svg?style=flat-square\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "pyodps",
  "package_url": "https://pypi.org/project/pyodps/",
  "project_url": "https://pypi.org/project/pyodps/",
  "project_urls": {
    "Homepage": "http://github.com/aliyun/aliyun-odps-python-sdk"
  },
  "release_url": "https://pypi.org/project/pyodps/0.11.4.1/",
  "requires_dist": [
    "urllib3 (<2.0,>=1.26.0)",
    "certifi (>=2017.4.17)",
    "chardet (<5,>=3.0.2) ; python_version < \"3\"",
    "idna (<3,>=2.5) ; python_version < \"3\"",
    "charset-normalizer (>=2) ; python_version >= \"3\"",
    "idna (>=2.5) ; python_version >= \"3\"",
    "jupyter (>=1.0.0) ; extra == 'full'",
    "ipython (>=4.0.0) ; extra == 'full'",
    "numpy (>=1.6.0) ; extra == 'full'",
    "pandas (>=0.17.0) ; extra == 'full'",
    "matplotlib (>=1.4) ; extra == 'full'",
    "graphviz (>=0.4) ; extra == 'full'",
    "ipython (<6.0.0) ; extra == 'full'",
    "cython (>=0.20) ; extra == 'full'",
    "pymars (>=0.5.4) ; extra == 'mars'",
    "protobuf (<4.0,>=3.6) ; extra == 'mars'"
  ],
  "requires_python": "",
  "summary": "odps python sdk and data analysis framework",
  "version": "0.11.4.1",
  "releases": [],
  "developers": [
    "weiwu@cacheme.net",
    "wenjun.swj@alibaba-inc.com",
    "wenjun_si",
    "wu_wei"
  ],
  "kwds": "pyodps_env pip pyodps python ipython",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_pyodps",
  "homepage": "http://github.com/aliyun/aliyun-odps-python-sdk",
  "release_count": 116,
  "dependency_ids": [
    "pypi_certifi",
    "pypi_chardet",
    "pypi_charset_normalizer",
    "pypi_cython",
    "pypi_graphviz",
    "pypi_idna",
    "pypi_ipython",
    "pypi_jupyter",
    "pypi_matplotlib",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_protobuf",
    "pypi_pymars",
    "pypi_urllib3"
  ]
}
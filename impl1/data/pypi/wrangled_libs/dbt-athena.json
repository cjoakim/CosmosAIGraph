{
  "classifiers": [],
  "description": "## dbt-athena\n\n## note: this repository is not actively maintained. you can find a newer version of the adapter with athena engine 2 support, seeds and more in the following repository:\n## https://github.com/tomme/dbt-athena/\n\n### installation\nthis plugin can be installed via pip:\n```\n$ pip install git+https://github.com/dandandan/dbt-athena.git\n```\n\n### configuring your profile\n\na dbt profile can be configured to run against athena using the following configuration:\n\n| option  | description                                        | required?               | example                  |\n|---------|----------------------------------------------------|-------------------------|--------------------------|\n| s3_staging_dir  | the location where athena stores meta info | required  | s3://bucket/staging |\n| schema  | specify the schema (athena database) to build models into | required | `dev` |\n| database  | data catalog | required | `awsdatacatalog` |\n| region_name | specify in which aws region it should connect | required | `eu-west-1` |\n| threads    | how many threads dbt should use | optional(default=`1`) | `8` |\n| max_retry_number | number for retries for exponential backoff | optional(default=`5`) | `8` |\n| max_retry_delay  | maximum delay for exponential backoff in seconds | optional(default=`100`) | `8` |\n\n\n**example profiles.yml entry:**\n```\nathena:\n  target: athena\n  outputs:\n    athena:\n      type: athena\n      database: awsdatacatalog\n      schema: dev\n      region_name: eu-west-1\n      threads: 8\n      s3_staging_dir: s3://athena-staging-bucket/\n```\n\n### usage notes\n\n#### supported functionality\ndue to the nature of athena, not all core dbt functionality is supported.\nthe following features of dbt are not implemented on athena:\n- archival\n- incremental models\n\n\nif you are interested in helping to add support for this functionality in dbt on athena, please [open an issue](https://github.com/dandandan/dbt-athena/issues/new)!\n\nknown issues:\n\n- quoting is not supported\n\n### reporting bugs and contributing code\n\n-   want to report a bug or request a feature? let us know on [slack](http://slack.getdbt.com/), or open [an issue](https://github.com/dandandan/dbt-athena/issues/new).\n\n### running the tests\n\n#### unit tests\n\n1. install tox:\n\n  ```bash\n  pip install tox\n  ```\n\n2. run unit tests:\n\n  ```bash\n  tox -e unit\n  ```\n\n#### integration tests\n\nat this time, an aws account is not provided in order to run the tests in ci. we kindly ask contributors/reviewers to use their own aws accounts in order to test contributions.\n\nyou can also reach out in the [slack](http://slack.getdbt.com/) `#athena` channel for someone to run the tests for you.\n\nsteps:\n\n1. clone the [dbt-integration-tests](https://github.com/fishtown-analytics/dbt-integration-tests) repository\n\n  ```bash\n  git clone --branch athena-support https://github.com/earnestresearch/dbt-integration-tests.git\n  ```\n\n2. run the tests:\n\n  _additionally, you might need to set the `aws_profile` environment variable if you use another value than \"default\" (for example if you connect to multiple aws accounts or assume different iam roles)_\n\n  ```bash\n  aws_default_region=us-west-2 athena_s3_staging_dir=s3://dbt-athena-integration-tests/tests/ dbt_profiles_dir=$(pwd)/test/integration/ tox -e integration-athena\n  ```\n\n## code of conduct\n\neveryone interacting in the dbt project's codebases, issue trackers, chat rooms, and mailing lists is expected to follow the [pypa code of conduct](https://www.pypa.io/en/latest/code-of-conduct/).\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "dbt-athena",
  "package_url": "https://pypi.org/project/dbt-athena/",
  "project_url": "https://pypi.org/project/dbt-athena/",
  "project_urls": {
    "Homepage": "https://github.com/lsaletti/dbt-athena"
  },
  "release_url": "https://pypi.org/project/dbt-athena/0.0.5/",
  "requires_dist": [
    "pyathena (==2.1.1)"
  ],
  "requires_python": "",
  "summary": "the athena adapter plugin for dbt (data build tool)",
  "version": "0.0.5",
  "releases": [],
  "developers": [
    "lucas.saletti92@gmail.com",
    "lucas_saletti"
  ],
  "kwds": "athena_s3_staging_dir athena dbt_profiles_dir dbt awsdatacatalog",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_dbt_athena",
  "homepage": "https://github.com/lsaletti/dbt-athena",
  "release_count": 1,
  "dependency_ids": [
    "pypi_pyathena"
  ]
}
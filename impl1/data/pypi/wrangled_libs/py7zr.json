{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: gnu lesser general public license v2 or later (lgplv2+)",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "======================================\n|logo| py7zr -- a 7z library on python\n======================================\n\n.. |logo| image:: logo.svg\n    :width: 80pt\n    :height: 80pt\n    :target: https://pypi.org/project/py7zr\n\n.. image:: https://readthedocs.org/projects/py7zr/badge/?version=latest\n  :target: https://py7zr.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://badge.fury.io/py/py7zr.svg\n  :target: https://badge.fury.io/py/py7zr\n\n.. image:: https://img.shields.io/pypi/dd/py7zr\n  :target: https://pypi.org/project/py7zr\n\n.. image:: https://img.shields.io/conda/vn/conda-forge/py7zr\n  :target: https://anaconda.org/conda-forge/py7zr\n\n.. image:: https://github.com/miurahr/py7zr/workflows/run%20tox%20tests/badge.svg\n  :target: https://github.com/miurahr/py7zr/actions\n\n.. image:: https://dev.azure.com/miurahr/github/_apis/build/status/miurahr.py7zr?branchname=master\n  :target: https://dev.azure.com/miurahr/github/_build/latest?definitionid=14&branchname=master\n\n.. image:: https://coveralls.io/repos/github/miurahr/py7zr/badge.svg?branch=master\n  :target: https://coveralls.io/github/miurahr/py7zr?branch=master\n\n.. image:: https://img.shields.io/pypi/l/py7zr\n  :target: https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html\n  \n.. image:: https://raw.githubusercontent.com/vshymanskyy/standwithukraine/main/badges/standwithukraine.svg\n  :target: https://github.com/vshymanskyy/standwithukraine/blob/main/docs/readme.md\n  \n.. image:: https://snyk.io/advisor/python/py7zr/badge.svg\n  :target: https://snyk.io/advisor/python/py7zr\n  :alt: py7zr\n  \n\npy7zr is a library and utility to support 7zip archive compression, decompression,\nencryption and decryption written by python programming language.\n\nsecurity notice\n===============\n\nversion 0.20.0, 0.19.0, 0.18.10 or before has a `vulnerability for path traversal`_  attack.\ndetails are on \"cve-2022-44900: path traversal vulnerability in py7zr\" `disclose article`_ .\n\naffected versions  are vulnerable to directory traversal due to insufficient checks in the 'py7zr.py' and 'helpers.py' files\n\nyou are recommend to update immediately to version 0.20.2 or later, 0.19.2 or 0.18.12\n\n.. _`vulnerability for path traversal`: https://security.snyk.io/vuln/snyk-python-py7zr-3092461\n\ni realy appreciate mr. matteo cosentino for notification and coorporation on security improvement.\n\n.. _`disclose article`: https://lessonsec.com/cve/cve-2022-44900/\n\n\ncompression algorithms\n======================\n\n``py7zr`` supports algorithms and filters which `lzma module`_ and `liblzma`_ support,\nand supports bzip2 and deflate that are implemented in python core libraries,\nit also supports zstandard, brotli and ppmd with third party libraries.\n\n``py7zr`` is also able to encrypt and decrypt data using 3rd party encryption library.\n\n\nsupported algorithms\n--------------------\n\n* compress\n    * lzma2\n    * lzma\n    * bzip2\n    * deflate\n    * copy\n    * zstandard\n    * brotli\n    * ppmd\n    * enhanced deflate (experimental)\n\n* crypt\n    * 7zaes\n\n* filters\n    * delta\n    * bcj(x86,armt,arm,ppc,sparc,ia64)\n\n.. note::\n  * a feature handling symbolic link is basically compatible with ``p7zip`` implementation,\n    but not work with original 7-zip because the original does not implement the feature.\n  * ``py7zr`` try checking symbolic links strictly and raise valueerror when bad link is requested,\n    but it does **not** guarantee to block all the bad cases.\n  * zstandard and brotli is not default methods of 7-zip, so these archives are considered\n    not to be compatible with original 7-zip on windows/p7zip on linux/mac.\n  * enhanced deflate is also known as `deflate64` :sup:`tm` that is a registered trademark of `pkware, inc.`\n  * enhanced deflate is tested only on cpython. it is disabled on pypy.\n\nnot supported algorithms\n------------------------\n\n* bcj2 (standard `lzma module`_ does not provide).\n\n\ninstall\n=======\n\nyou can install py7zr as usual other libraries using pip.\n\n.. code-block:: shell\n\n    $ pip install py7zr\n\nor, alternatively using conda:\n\n.. code-block:: shell\n\n    $ conda install -c conda-forge py7zr\n\ndocuments\n=========\n\nuser manuals\n------------\n\n* `user guide`_ for latest version.\n\n* `api guide`_ for latest version.\n\n* `manual`_ for stable version.\n\ndeveloper guide\n---------------\n\n* `contributor guide`_ for one want to contribute the project.\n\n* `7z file specification`_\n\n\n.. _`user guide`: https://py7zr.readthedocs.io/en/latest/user_guide.html\n\n.. _`api guide` : https://py7zr.readthedocs.io/en/latest/api.html\n\n.. _`manual` : https://py7zr.readthedocs.io/en/stable/\n\n.. _`contributor guide` : https://py7zr.readthedocs.io/en/latest/contribution.html\n\n.. _`7z file specification` : https://py7zr.readthedocs.io/en/latest/archive_format.html\n\n\ncli usage\n=========\n\nyou can run command script py7zr like as follows;\n\n* list archive contents\n\n.. code-block:: shell\n\n    $ py7zr l test.7z\n\n* extract archive\n\n.. code-block:: shell\n\n    $ py7zr x test.7z\n\n* extract archive with password\n\n.. code-block:: shell\n\n    $ py7zr x -p test.7z\n      password?: ****\n\n* create and compress to archive\n\n.. code-block:: shell\n\n    $ py7zr c target.7z test_dir\n\n* create multi-volume archive\n\n.. code-block:: shell\n\n    $ py7zr c -v 500k target.7z test_dir\n\n* test archive\n\n.. code-block:: shell\n\n    $ py7zr t test.7z\n\n* append files to archive\n\n.. code-block:: shell\n\n    $ py7zr a test.7z test_dir\n\n* show information\n\n.. code-block:: shell\n\n    $ py7zr i\n\n* show version\n\n.. code-block:: shell\n\n    $ py7zr --version\n\n\nsevenzipfile class usage\n========================\n\npy7zr is a library which can use in your python application.\n\ndecompression/decryption\n------------------------\n\nhere is a code snippet how to decompress some file in your application.\n\n.. code-block:: python\n\n    import py7zr\n\n    archive = py7zr.sevenzipfile('sample.7z', mode='r')\n    archive.extractall(path=\"/tmp\")\n    archive.close()\n\n\n\nyou can also use 'with' block because py7zr provide context manager(v0.6 and later).\n\n.. code-block:: python\n\n    import py7zr\n\n    with py7zr.sevenzipfile('sample.7z', mode='r') as z:\n        z.extractall()\n\n    with py7zr.sevenzipfile('target.7z', 'w') as z:\n        z.writeall('./base_dir')\n\n\n``py7zr`` also supports extraction of single or selected files by 'extract(targets=['file path'])'.\nnote: if you specify only a file but not a parent directory, it will fail.\n\n.. code-block:: python\n\n    import py7zr\n    import re\n\n    filter_pattern = re.compile(r'<your/target/file_and_directories/regex/expression>')\n    with py7zr.sevenzipfile('archive.7z', 'r') as archive:\n        allfiles = archive.getnames()\n        selective_files = [f for f in allfiles if filter_pattern.match(f)]\n        archive.extract(targets=selective_files)\n\n\npy7zr support an extraction of password protected archive.(v0.6 and later)\n\n.. code-block:: python\n\n    import py7zr\n\n    with py7zr.sevenzipfile('encrypted.7z', mode='r', password='secret') as z:\n        z.extractall()\n\ncompression/encryption\n----------------------\n\nhere is a code snippet how to produce archive.\n\n.. code-block:: python\n\n    import py7zr\n\n    with py7zr.sevenzipfile('target.7z', 'w') as archive:\n        archive.writeall('/path/to/base_dir', 'base')\n\n\nto create encrypted archive, please pass a password.\n\n.. code-block:: python\n\n    import py7zr\n\n    with py7zr.sevenzipfile('target.7z', 'w', password='secret') as archive:\n        archive.writeall('/path/to/base_dir', 'base')\n\n\nto create archive with algorithms such as zstandard, you can call with custom filter.\n\n.. code-block:: python\n\n    import py7zr\n\n    my_filters = [{\"id\": py7zr.filter_zstd}]\n    another_filters = [{\"id\": py7zr.filter_arm}, {\"id\": py7zr.filter_lzma2, \"preset\": 7}]\n    with py7zr.sevenzipfile('target.7z', 'w', filters=my_filters) as archive:\n        archive.writeall('/path/to/base_dir', 'base')\n\n\nshutil helper\n=============\n\npy7zr also support `shutil`  interface.\n\n.. code-block:: python\n\n    from py7zr import pack_7zarchive, unpack_7zarchive\n    import shutil\n\n    # register file format at first.\n    shutil.register_archive_format('7zip', pack_7zarchive, description='7zip archive')\n    shutil.register_unpack_format('7zip', ['.7z'], unpack_7zarchive)\n\n    # extraction\n    shutil.unpack_archive('test.7z', '/tmp')\n\n    # compression\n    shutil.make_archive('target', '7zip', 'src')\n\n\nrequirements\n============\n\n`py7zr` uses a python3 standard `lzma module`_ for extraction and compression.\nthe standard lzma module uses `liblzma`_ that support core compression algorithm of 7zip.\n\nminimum required version is python 3.7.\n\n``py7zr`` tested on linux, macos, windows and ubuntu aarch64.\n\nit hopefully works on m1 mac too.\n\nrecommended versions are:\n\n- cpython 3.7.5, cpython 3.8.0 and later.\n- pypy3.7-7.3.3 and later.\n\nfollowing fixes are included in these versions, and it is not fixed on python3.6.\n\n- `bpo-21872`_: lzma library sometimes fails to decompress a file\n- `pypy3-3090`_: lzma.lzmadecomporessor.decompress does not respect max_length\n- `pypy3-3242`_: '_lzma_cffi' has no function named 'lzma_stream_encoder'\n\nfollowing improvements are included in cpython 3.10\n\n- `bpo-41486`_: faster bz2/lzma/zlib via new output buffering\n\n.. _`lzma module`: https://docs.python.org/3/library/lzma.html\n.. _`liblzma`: https://tukaani.org/xz/\n.. _`bpo-21872`: https://bugs.python.org/issue21872\n.. _`bpo-41486`: https://bugs.python.org/issue41486\n.. _`pypy3-3090`: https://foss.heptapod.net/pypy/pypy/-/issues/3090\n.. _`pypy3-3242`: https://foss.heptapod.net/pypy/pypy/-/issues/3242\n\n\n\ndependencies\n============\n\nthere are several dependencies to support algorithms and cli expressions.\n\n===================== ===============================\npackage               purpose\n===================== ===============================\n`pycryptodomex`_      7zaes encryption\n`pyzstd`_             zstandard compression\n`pyppmd`_             ppmd compression\n`brotli`_             brotli compression (cpython)\n`brotlicffi`_         brotli compression (pypy)\n`inflate64`_          enhanced deflate compression\n`pybcj`_              bcj filters\n`multivolumefile`_    multi-volume archive read/write\n`texttable`_          cli formatter\n===================== ===============================\n\n\n.. _`pycryptodomex` : https://www.pycryptodome.org/en/latest/index.html\n.. _`pyzstd` : https://pypi.org/project/pyzstd\n.. _`pyppmd` : https://pypi.org/project/pyppmd\n.. _`brotli` : https://pypi.org/project/brotli\n.. _`brotlicffi` : https://pypi.org/project/brotlicffi\n.. _`inflate64` : https://pypi.org/project/inflate64\n.. _`pybcj` : https://pypi.org/project/pybcj\n.. _`multivolumefile` : https://pypi.org/project/multivolumefile\n.. _`texttable` : https://pypi.org/project/texttable\n\n\nperformance\n===========\n\nyou can find a compression and decompression benchmark results at\n[github issue](https://github.com/miurahr/py7zr/issues/297) and [wiki page](https://github.com/miurahr/py7zr/wiki/benchmarks)\n\npy7zr works well, but slower than ``7-zip`` and ``p7zip`` c/c++ implementation by several reasons.\nwhen compression/decompression **speed** is important, it is recommended to use these\nalternatives through ``subprocess.run`` python interface.\n\npy7zr consumes some memory to decompress and compress data. it requires about 300mib - 700mib free memory to work well at least.\n\n\nuse cases\n=========\n\n- `aqtinstall`_ another (unofficial) qt (aqt) cli installer on multi-platforms.\n- prenlp_ preprocessing library for natural language processing\n- mlox_  a tool for sorting and analyzing morrowind plugin load order\n\n.. _aqtinstall: https://github.com/miurahr/aqtinstall\n.. _prenlp: https://github.com/lyeoni/prenlp\n.. _mlox: https://github.com/mlox/mlox\n\nlicense\n=======\n\n* copyright (c) 2019-2022 hiroshi miura\n\n* pylzma copyright (c) 2004-2015 by joachim bauch\n* 7-zip copyright (c) 1999-2010 igor pavlov\n* lzma sdk copyright (c) 1999-2010 igor pavlov\n\nthis library is free software; you can redistribute it and/or\nmodify it under the terms of the gnu lesser general public\nlicense as published by the free software foundation; either\nversion 2.1 of the license, or (at your option) any later version.\n\nthis library is distributed in the hope that it will be useful,\nbut without any warranty; without even the implied warranty of\nmerchantability or fitness for a particular purpose.  see the gnu\nlesser general public license for more details.\n\nyou should have received a copy of the gnu lesser general public\nlicense along with this library; if not, write to the free software\nfoundation, inc., 51 franklin street, fifth floor, boston, ma  02110-1301  usa\n\n",
  "docs_url": null,
  "keywords": "compression,7zip,lzma,zstandard,ppmd,lzma2,bcj,archive",
  "license": "lgpl-2.1-or-later",
  "name": "py7zr",
  "package_url": "https://pypi.org/project/py7zr/",
  "project_url": "https://pypi.org/project/py7zr/",
  "project_urls": {
    "Bug Tracker": "https://github.com/miurahr/py7zr/issues",
    "Changelog": "https://py7zr.readthedocs.io/en/latest/changelog.html",
    "Documentation": "https://py7zr.readthedocs.io/en/stable/",
    "Homepage": "https://py7zr.readthedocs.io/",
    "Source": "https://github.com/miurahr/py7zr"
  },
  "release_url": "https://pypi.org/project/py7zr/0.20.8/",
  "requires_dist": [
    "texttable",
    "pycryptodomex >=3.16.0",
    "pyzstd >=0.15.9",
    "pyppmd <1.2.0,>=1.1.0",
    "pybcj <1.1.0,>=1.0.0",
    "multivolumefile >=0.2.3",
    "inflate64 <1.1.0,>=1.0.0",
    "brotli >=1.1.0 ; platform_python_implementation == \"CPython\"",
    "brotlicffi >=1.1.0.0 ; platform_python_implementation == \"PyPy\"",
    "importlib-metadata ; python_version < \"3.8\"",
    "psutil ; sys_platform != \"cygwin\"",
    "mypy >=0.940 ; extra == 'check'",
    "mypy-extensions >=0.4.1 ; extra == 'check'",
    "lxml ; extra == 'check'",
    "types-psutil ; extra == 'check'",
    "check-manifest ; extra == 'check'",
    "flake8 <7 ; extra == 'check'",
    "flake8-black >=0.3.6 ; extra == 'check'",
    "flake8-deprecated ; extra == 'check'",
    "flake8-isort ; extra == 'check'",
    "isort >=5.0.3 ; extra == 'check'",
    "pygments ; extra == 'check'",
    "readme-renderer ; extra == 'check'",
    "twine ; extra == 'check'",
    "black >=23.1.0 ; extra == 'check'",
    "pytest ; extra == 'debug'",
    "pytest-leaks ; extra == 'debug'",
    "pytest-profiling ; extra == 'debug'",
    "sphinx >=5.0 ; extra == 'docs'",
    "sphinx-py3doc-enhanced-theme ; extra == 'docs'",
    "sphinx-a4doc ; extra == 'docs'",
    "docutils ; extra == 'docs'",
    "pytest ; extra == 'test'",
    "pytest-benchmark ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytest-remotedata ; extra == 'test'",
    "pytest-timeout ; extra == 'test'",
    "pyannotate ; extra == 'test'",
    "py-cpuinfo ; extra == 'test'",
    "coverage[toml] >=5.2 ; extra == 'test'",
    "coveralls >=2.1.1 ; extra == 'test'",
    "libarchive-c ; extra == 'test_compat'"
  ],
  "requires_python": ">=3.7",
  "summary": "pure python 7-zip library",
  "version": "0.20.8",
  "releases": [],
  "developers": [
    "miurahr@linux.com"
  ],
  "kwds": "p7zip 7zip py7zr bzip2 compression",
  "license_kwds": "lgpl-2.1-or-later",
  "libtype": "pypi",
  "id": "pypi_py7zr",
  "homepage": "",
  "release_count": 153,
  "dependency_ids": [
    "pypi_black",
    "pypi_brotli",
    "pypi_brotlicffi",
    "pypi_check_manifest",
    "pypi_coverage",
    "pypi_coveralls",
    "pypi_docutils",
    "pypi_flake8",
    "pypi_flake8_black",
    "pypi_flake8_deprecated",
    "pypi_flake8_isort",
    "pypi_importlib_metadata",
    "pypi_inflate64",
    "pypi_isort",
    "pypi_libarchive_c",
    "pypi_lxml",
    "pypi_multivolumefile",
    "pypi_mypy",
    "pypi_mypy_extensions",
    "pypi_psutil",
    "pypi_py_cpuinfo",
    "pypi_pyannotate",
    "pypi_pybcj",
    "pypi_pycryptodomex",
    "pypi_pygments",
    "pypi_pyppmd",
    "pypi_pytest",
    "pypi_pytest_benchmark",
    "pypi_pytest_cov",
    "pypi_pytest_leaks",
    "pypi_pytest_profiling",
    "pypi_pytest_remotedata",
    "pypi_pytest_timeout",
    "pypi_pyzstd",
    "pypi_readme_renderer",
    "pypi_sphinx",
    "pypi_sphinx_a4doc",
    "pypi_sphinx_py3doc_enhanced_theme",
    "pypi_texttable",
    "pypi_twine",
    "pypi_types_psutil"
  ]
}
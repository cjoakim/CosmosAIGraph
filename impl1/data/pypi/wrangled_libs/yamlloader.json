{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: science/research",
    "intended audience :: system administrators",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: utilities"
  ],
  "description": "\n.. image:: https://github.com/phynix/yamlloader/actions/workflows/ci.yml/badge.svg\n    :target: https://github.com/phynix/yamlloader/actions\n.. image:: https://img.shields.io/pypi/pyversions/yamlloader.svg\n    :target: https://pypi.org/project/yamlloader/\n.. image:: https://badge.fury.io/py/yamlloader.svg\n    :target: https://badge.fury.io/py/yamlloader\n.. image:: https://coveralls.io/repos/github/phynix/yamlloader/badge.svg\n    :target: https://coveralls.io/github/phynix/yamlloader\n\nyamlloader\n==========\n\n\nthis module provides loaders and dumpers for pyyaml. currently, an ordereddict loader/dumper is\nimplemented, allowing to keep items order\nwhen loading resp. dumping a file from/to an ordereddict (python 3.7+: also regular dicts are supported and are the default items to be loaded to. as of python 3.7 preservation of insertion order is a language feature of regular dicts.)\n\nthis project was originally mirrored from\n`yamlordereddict <https://github.com/fmenabe/python-yamlordereddictloader>`_\nmany thanks to the original author fran\u00e7ois m\u00e9nab\u00e9!\nthe library contains several improvements including automated testing and\nthe much faster c-versions of the loaders/dumpers.\n\n\n`api documentation <https://yamlloader.readthedocs.io/>`_\n\n\ninstall\n-------\nthere is a pip and a conda version available\n\n.. code-block:: bash\n\n    $ pip install yamlloader\n\nor\n\n.. code-block:: bash\n\n    $ conda install yamlloader -c conda-forge\n\n\nbut does [your special case here] also work?\n--------------------------------------------\n\ntests are run continuously using randomly generated yaml files.\nalso, there are no fails to be expected.\n\nstill, if you are concerned that *your* special case may breaks in the future, please\nadd your own tests as `test_ext_anyname.py` under `tests/` or let us know about your needs.\nthis guarantees that no code will be added that breaks *your* case.\n\n\nc vs non-c version\n------------------\n\na significant speedup can be reached by replacing the loader* and dumper* classes by cloader*\nand cdumper*. the package hereby relies on the implementations from pyyaml. if they have not\nbeen compiled, *yamlloader* **automatically** falls back to the non-c versions.\n\ntherefore using the c-version is safe: if it is not available, the pure python version is\nautomatically used.\n\nusage examples\n==============\n\n\nloader usage\n------------\n\n.. code-block:: python\n\n    import yaml\n    import yamlloader\n\n    with open('myfile.yml') as yaml_file:\n        data = yaml.load(yaml_file,\n                         loader=yamlloader.ordereddict.cloader)\n                         # cloader is faster than loader\n\n**note:** for using the safe loader (which takes standard yaml tags and does\nnot construct arbitrary python objects), replace ``yamlloader.ordereddict.cloader`` by\n``yamlloader.ordereddict.csafeloader``.\n\ndumper usage\n------------\n\n.. code-block:: python\n\n    import yaml\n    import yamlloader\n    from collections import ordereddict\n\n    data = ordereddict([('key1', 'val1'),\n                        ('key2', ordereddict([('key21', 'val21'),\n                                              ('key22', 'val22')]))])\n\n    with open('myfile.yaml', 'w') as yaml_file:\n        yaml.dump(data, yaml_file,\n                  dumper=yamlloader.ordereddict.cdumper)\n\n**note:** for using the safe dumper (which produce standard yaml tags and does\nnot represent arbitrary python objects), replace ``yamlloader.ordereddict.cdumper`` by\n``yamlloader.ordereddict.csafedumper``.\n\n\nfaq\n===\n\nc version not working\n---------------------------\nif the c version is not working (it falls back by default to a non-c version),\ncheck if yaml.cyaml exists. if not, the cyaml module was not compiled during the installation of\nyaml (pyyaml). make sure that cython is installed (`pip install cython`) and the yaml.h file is\nthere (apt: libyaml-dev).\n",
  "docs_url": null,
  "keywords": "yaml,loader,dumper,ordered,ordereddict,pyyaml",
  "license": "mit license",
  "name": "yamlloader",
  "package_url": "https://pypi.org/project/yamlloader/",
  "project_url": "https://pypi.org/project/yamlloader/",
  "project_urls": {
    "Download": "https://github.com/Phynix/yamlloader",
    "Homepage": "https://github.com/Phynix/yamlloader"
  },
  "release_url": "https://pypi.org/project/yamlloader/1.3.2/",
  "requires_dist": [
    "pyyaml",
    "pytest ; extra == 'dev'",
    "hypothesis ; extra == 'dev'"
  ],
  "requires_python": ">=3.7",
  "summary": "ordered yaml loader and dumper for pyyaml.",
  "version": "1.3.2",
  "releases": [],
  "developers": [
    "johannes.lade@phynix.science",
    "jonas.eschle@phynix.science",
    "jonas_eschle"
  ],
  "kwds": "yamlordereddictloader yamlloader yaml_file yamlordereddict yaml",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_yamlloader",
  "homepage": "https://github.com/phynix/yamlloader",
  "release_count": 9,
  "dependency_ids": [
    "pypi_hypothesis",
    "pypi_pytest",
    "pypi_pyyaml"
  ]
}
{
  "classifiers": [
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7"
  ],
  "description": "jsoncsv : easily convert json to csv or xls[x]\n==============================================\n\n.. image:: https://img.shields.io/pypi/v/jsoncsv.svg\n    :target: https://pypi.python.org/pypi/jsoncsv\n\n.. image:: https://api.travis-ci.org/alingse/jsoncsv.svg?branch=master\n\n.. image:: https://coveralls.io/repos/github/alingse/jsoncsv/badge.svg\n    :target: https://coveralls.io/github/alingse/jsoncsv\n\n\njsoncsv (with `mkexcel`) is a command tool to convert json file to csv/xlsx file.\n\nit's simple, and no need user to specify the keys.\n\njust use them.\n\nquick start :\n=================\n\ncat the raw.json to csv/xls use command line tool\n\n.. code-block:: bash\n\n    cat raw.json | jsoncsv | mkexcel > output.csv\n    cat raw.json | jsoncsv | mkexcel -t xls > output.xls\n\nmake sure each line of raw json text file is a json object\n\n.. code-block:: bash\n\n    $cat raw.json\n    {\"id\":1, \"name\":\"a\", \"year\": 2015}\n    {\"id\":2, \"name\":\"s\", \"zone\": \"china\"}\n    $cat raw.json | jsoncsv | mkexcel > output.csv\n    $cat output.csv\n    id,name,year,zone\n    1,a,2015,\n    2,s,,china\n\nthis is easily and needn't care the different keys from any two object.\n\nif input file is an json_array, use `-a/--array` to decode it\n\n.. code-block:: bash\n\n    $cat raw.json\n    [{\"id\":1, \"name\":\"a\", \"year\": 2015}, {\"id\":2, \"name\":\"s\", \"zone\": \"china\"}]\n    $cat raw.json | jsoncsv -a | mkexcel > output.csv\n    $cat output.csv\n    id,name,year,zone\n    1,a,2015,\n    2,s,,china\n\nanother way to convert file step by step\n\n.. code-block:: bash\n\n    $jsoncsv raw.json expand.json\n    $mkexcel expand.json -t xls output.xls\n\nget more options with `--help`.\n\n.. code-block:: bash\n\n    jsoncsv --help\n    mkexcel --help\n\ninstall\n================\n\n.. code-block:: bash\n\n    pip install jsoncsv\n\n\nusage\n=================\n\nsee #quickstart and get more options with `--help`.\n\njust expand/restore the json, the expand json is one layer json.\n\n.. code-block:: bash\n\n    jsoncsv raw.json expand.json\n    jsoncsv -r expand.json raw.json\n    cat raw.json | jsoncsv | jsoncsv -r > raw2.json\n\nmkexcel the expanded json (one layer)\n\n.. code-block:: bash\n\n    mkexcel expand.json output.csv\n    mkexcel -t xls expand.json > output.xls\n    mkexcel -t csv expand.json > output.csv\n\n-e, --expand\n-------------\n\nexpand json, \u5c55\u5f00 json\n\n.. code-block:: bash\n\n    $jsoncsv -e raw.json expand.json\n    $cat raw.json expand.json\n    {\"s\":[1,2,{\"w\":1}]}\n    {\"s.2.w\": 1,\"s.0\": 1,\"s.1\": 2}\n\n\n{\"s\":[1,2,{\"w\":1}]} will transformed to {\"s.2.w\": 1,\"s.0\": 1,\"s.1\": 2}\n\nthe output \"expand.json\" is only one layer json, it can be easy change to csv or xlsx (with `mkexcel`)\n\n-r, --restore\n---------------\nrestore the expanded json \u91cd\u6784\u88ab\u5c55\u5f00\u7684json\n\n.. code-block:: bash\n\n    jsoncsv -r expand.json raw.json\n    cat expand.json raw.json\n    {\"s.2.w\": 1,\"s.0\": 1,\"s.1\": 2}\n    {\"s\": [1, 2, {\"w\": 1}]}\n\n{\"s.2.w\": 1,\"s.0\": 1,\"s.1\": 2} change to {\"s\":[1,2,{\"w\":1}]}\n\n-s, --separator\n---------------\n\nseparator used for combine the keys in the tree\n\ndefault separator is **.**\n\n--safe\n---------\non safe mode, use escape separator to avoid confilct\n\nexpand:\n\n['aa', 'bb', 'www.xxx.com'] --> 'aa\\\\.bb\\\\.www.xxx.com'\n\nrestore:\n\n'aa\\\\.bb\\\\.www.xxx.com' --> ['aa', 'bb', 'www.xxx.com']\n\n\nmkexcel\n>>>>>>>>>>>\n\ndump expanded (by **jsoncsv**) json file to csv or xls file\n\n.. code-block:: bash\n\n    mkexcel expand.json output.csv\n\n-t, --type\n--------------\n\nchose dump type in ['csv', 'xls'] default is 'csv'\n\n.. code-block:: bash\n\n    cat expand.json|mkexcel -t csv > output.csv\n    cat expand.json|mkexcel -t xls > output.xls\n\n\nnote/todo\n>>>>>>>>>\n\n1. dict keys can't be  just array indexes\n--------------------------------------------\n\nexample:\n\n.. code-block:: bash\n\n\techo '{\"0\":1,\"1\":[1,2]}'|jsoncsv -e| jsoncsv -r\n\t[1, [1, 2]]\n\n\n2. mkexcel enable hooks\n-----------------------------------------\n\nwait next next version\n\n\n3. unicodecsv is not good enough\n-----------------------------------------\n\nbut better than python strand library csv.\n\n4. windows is poor support\n-----------------------------------------\nsee https://github.com/alingse/jsoncsv/issues/37\n\ntry use https://jsoncsv.jsonutil.online/ instead",
  "docs_url": null,
  "keywords": "jsoncsv,jsontocsv,json2csv,convert,json2xls",
  "license": "apache 2.0",
  "name": "jsoncsv",
  "package_url": "https://pypi.org/project/jsoncsv/",
  "project_url": "https://pypi.org/project/jsoncsv/",
  "project_urls": {
    "Homepage": "https://github.com/alingse/jsoncsv"
  },
  "release_url": "https://pypi.org/project/jsoncsv/2.2.5/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a command tool easily convert json file to csv or xlsx.",
  "version": "2.2.5",
  "releases": [],
  "developers": [
    "alingse",
    "alingse@foxmail.com"
  ],
  "kwds": "jsoncsv json2csv jsontocsv jsonutil json2xls",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_jsoncsv",
  "homepage": "https://github.com/alingse/jsoncsv",
  "release_count": 21,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: scientific/engineering :: mathematics",
    "topic :: software development",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "<div align=\"center\">\n  <img src=\"https://github.com/tensorflow/community/blob/master/sigs/logos/sigio.png\" width=\"60%\"><br><br>\n</div>\n\n-----------------\n\n# tensorflow i/o\n\n[![github ci](https://github.com/tensorflow/io/workflows/github%20ci/badge.svg?branch=master)](https://github.com/tensorflow/io/actions?query=branch%3amaster)\n[![pypi](https://badge.fury.io/py/tensorflow-io.svg)](https://pypi.org/project/tensorflow-io/)\n[![license](https://img.shields.io/badge/license-apache%202.0-blue.svg)](https://github.com/tensorflow/io/blob/master/license)\n[![documentation](https://img.shields.io/badge/api-reference-blue.svg)](https://www.tensorflow.org/io)\n\ntensorflow i/o is a collection of file systems and file formats that are not\navailable in tensorflow's built-in support. a full list of supported file systems\nand file formats by tensorflow i/o can be found [here](https://www.tensorflow.org/io/api_docs/python/tfio).\n\nthe use of tensorflow-io is straightforward with keras. below is an example\nto [get started with tensorflow](https://www.tensorflow.org/tutorials/quickstart/beginner) with\nthe data processing aspect replaced by tensorflow-io:\n\n```python\nimport tensorflow as tf\nimport tensorflow_io as tfio\n\n# read the mnist data into the iodataset.\ndataset_url = \"https://storage.googleapis.com/cvdf-datasets/mnist/\"\nd_train = tfio.iodataset.from_mnist(\n    dataset_url + \"train-images-idx3-ubyte.gz\",\n    dataset_url + \"train-labels-idx1-ubyte.gz\",\n)\n\n# shuffle the elements of the dataset.\nd_train = d_train.shuffle(buffer_size=1024)\n\n# by default image data is uint8, so convert to float32 using map().\nd_train = d_train.map(lambda x, y: (tf.image.convert_image_dtype(x, tf.float32), y))\n\n# prepare batches the data just like any other tf.data.dataset\nd_train = d_train.batch(32)\n\n# build the model.\nmodel = tf.keras.models.sequential(\n    [\n        tf.keras.layers.flatten(input_shape=(28, 28)),\n        tf.keras.layers.dense(512, activation=tf.nn.relu),\n        tf.keras.layers.dropout(0.2),\n        tf.keras.layers.dense(10, activation=tf.nn.softmax),\n    ]\n)\n\n# compile the model.\nmodel.compile(\n    optimizer=\"adam\", loss=\"sparse_categorical_crossentropy\", metrics=[\"accuracy\"]\n)\n\n# fit the model.\nmodel.fit(d_train, epochs=5, steps_per_epoch=200)\n```\n\nin the above [mnist](http://yann.lecun.com/exdb/mnist/) example, the url's\nto access the dataset files are passed directly to the `tfio.iodataset.from_mnist` api call.\nthis is due to the inherent support that `tensorflow-io` provides for `http`/`https` file system,\nthus eliminating the need for downloading and saving datasets on a local directory.\n\nnote: since `tensorflow-io` is able to detect and uncompress the mnist dataset automatically if needed,\nwe can pass the url's for the compressed files (gzip) to the api call as is.\n\nplease check the official [documentation](https://www.tensorflow.org/io) for more\ndetailed and interesting usages of the package.\n\n## installation\n\n### python package\n\nthe `tensorflow-io` python package can be installed with pip directly using:\n```sh\n$ pip install tensorflow-io\n```\n\npeople who are a little more adventurous can also try our nightly binaries:\n```sh\n$ pip install tensorflow-io-nightly\n```\n\nto ensure you have a version of tensorflow that is compatible with tensorflow-io,\nyou can specify the `tensorflow` extra requirement during install:\n\n```\npip install tensorflow-io[tensorflow]\n```\n\nsimilar extras exist for the `tensorflow-gpu`, `tensorflow-cpu` and `tensorflow-rocm`\npackages.\n\n### docker images\n\nin addition to the pip packages, the docker images can be used to quickly get started.\n\nfor stable builds:\n```sh\n$ docker pull tfsigio/tfio:latest\n$ docker run -it --rm --name tfio-latest tfsigio/tfio:latest\n```\n\nfor nightly builds:\n```sh\n$ docker pull tfsigio/tfio:nightly\n$ docker run -it --rm --name tfio-nightly tfsigio/tfio:nightly\n```\n\n### r package\n\nonce the `tensorflow-io` python package has been successfully installed, you\ncan install the development version of the r package from github via the following:\n```r\nif (!require(\"remotes\")) install.packages(\"remotes\")\nremotes::install_github(\"tensorflow/io\", subdir = \"r-package\")\n```\n\n### tensorflow version compatibility\n\nto ensure compatibility with tensorflow, it is recommended to install a matching\nversion of tensorflow i/o according to the table below. you can find the list\nof releases [here](https://github.com/tensorflow/io/releases).\n\n| tensorflow i/o version | tensorflow compatibility | release date |\n| --- | --- | --- |\n| 0.35.0 | 2.14.x | dec 18, 2023 |\n| 0.34.0 | 2.13.x | sep 08, 2023 |\n| 0.33.0 | 2.13.x | aug 01, 2023 |\n| 0.32.0 | 2.12.x | mar 28, 2023 |\n| 0.31.0 | 2.11.x | feb 25, 2023 |\n| 0.30.0 | 2.11.x | jan 20, 2023 |\n| 0.29.0 | 2.11.x | dec 18, 2022 |\n| 0.28.0 | 2.11.x | nov 21, 2022 |\n| 0.27.0 | 2.10.x | sep 08, 2022 |\n| 0.26.0 | 2.9.x | may 17, 2022 |\n| 0.25.0 | 2.8.x | apr 19, 2022 |\n| 0.24.0 | 2.8.x | feb 04, 2022 |\n| 0.23.1 | 2.7.x | dec 15, 2021 |\n| 0.23.0 | 2.7.x | dec 14, 2021 |\n| 0.22.0 | 2.7.x | nov 10, 2021 |\n| 0.21.0 | 2.6.x | sep 12, 2021 |\n| 0.20.0 | 2.6.x | aug 11, 2021 |\n| 0.19.1 | 2.5.x | jul 25, 2021 |\n| 0.19.0 | 2.5.x | jun 25, 2021 |\n| 0.18.0 | 2.5.x | may 13, 2021 |\n| 0.17.1 | 2.4.x | apr 16, 2021 |\n| 0.17.0 | 2.4.x | dec 14, 2020 |\n| 0.16.0 | 2.3.x | oct 23, 2020 |\n| 0.15.0 | 2.3.x | aug 03, 2020 |\n| 0.14.0 | 2.2.x | jul 08, 2020 |\n| 0.13.0 | 2.2.x | may 10, 2020 |\n| 0.12.0 | 2.1.x | feb 28, 2020 |\n| 0.11.0 | 2.1.x | jan 10, 2020 |\n| 0.10.0 | 2.0.x | dec 05, 2019 |\n| 0.9.1 | 2.0.x | nov 15, 2019 |\n| 0.9.0 | 2.0.x | oct 18, 2019 |\n| 0.8.1 | 1.15.x | nov 15, 2019 |\n| 0.8.0 | 1.15.x | oct 17, 2019 |\n| 0.7.2 | 1.14.x | nov 15, 2019 |\n| 0.7.1 | 1.14.x | oct 18, 2019 |\n| 0.7.0 | 1.14.x | jul 14, 2019 |\n| 0.6.0 | 1.13.x | may 29, 2019 |\n| 0.5.0 | 1.13.x | apr 12, 2019 |\n| 0.4.0 | 1.13.x | mar 01, 2019 |\n| 0.3.0 | 1.12.0 | feb 15, 2019 |\n| 0.2.0 | 1.12.0 | jan 29, 2019 |\n| 0.1.0 | 1.12.0 | dec 16, 2018 |\n\n\n## performance benchmarking\n\nwe use [github-pages](https://tensorflow.github.io/io/dev/bench/) to document the results of api performance benchmarks. the benchmark job is triggered on every commit to `master` branch and\nfacilitates tracking performance w.r.t commits.\n\n## contributing\n\ntensorflow i/o is a community led open source project. as such, the project\ndepends on public contributions, bug-fixes, and documentation. please see:\n\n- [contribution guidelines](contributing.md) for a guide on how to contribute.\n- [development doc](docs/development.md) for instructions on the development environment setup.\n- [tutorials](docs/tutorials) for a list of tutorial notebooks and instructions on how to write one.\n\n### build status and ci\n\n| build | status |\n| --- | --- |\n| linux cpu python 2 | [![status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-py2.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-py2.html) |\n| linux cpu python 3 | [![status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-py3.html) |\n| linux gpu python 2| [![status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-gpu-py2.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-gpu-py2.html) |\n| linux gpu python 3| [![status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-gpu-py3.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/io/ubuntu-gpu-py3.html) |\n\nbecause of manylinux2010 requirement, tensorflow i/o is built with\nubuntu:16.04 + developer toolset 7 (gcc 7.3) on linux. configuration\nwith ubuntu 16.04 with developer toolset 7 is not exactly straightforward.\nif the system have docker installed, then the following command\nwill automatically build manylinux2010 compatible whl package:\n\n```sh\n#!/usr/bin/env bash\n\nls dist/*\nfor f in dist/*.whl; do\n  docker run -i --rm -v $pwd:/v -w /v --net=host quay.io/pypa/manylinux2010_x86_64 bash -x -e /v/tools/build/auditwheel repair --plat manylinux2010_x86_64 $f\ndone\nsudo chown -r $(id -nu):$(id -ng) .\nls wheelhouse/*\n```\n\nit takes some time to build, but once complete, there will be python\n`3.5`, `3.6`, `3.7` compatible whl packages available in `wheelhouse`\ndirectory.\n\non macos, the same command could be used. however, the script expects `python` in shell\nand will only generate a whl package that matches the version of `python` in shell. if\nyou want to build a whl package for a specific python then you have to alias this version\nof python to `python` in shell. see [.github/workflows/build.yml](.github/workflows/build.yml)\nauditwheel step for instructions how to do that.\n\nnote the above command is also the command we use when releasing packages for linux and macos.\n\ntensorflow i/o uses both github workflows and google ci (kokoro) for continuous integration.\ngithub workflows is used for macos build and test. kokoro is used for linux build and test.\nagain, because of the manylinux2010 requirement, on linux whl packages are always\nbuilt with ubuntu 16.04 + developer toolset 7. tests are done on a variatiy of systems\nwith different python3 versions to ensure a good coverage:\n\n| python | ubuntu 18.04| ubuntu 20.04 | macos + osx9 | windows-2019 |\n| ------- | ----- | ------- | ------- | --------- |\n| 2.7 |  :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | n/a |\n| 3.7 |  :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: |\n| 3.8 |  :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: |\n\n\ntensorflow i/o has integrations with many systems and cloud vendors such as\nprometheus, apache kafka, apache ignite, google cloud pubsub, aws kinesis,\nmicrosoft azure storage, alibaba cloud oss etc.\n\nwe tried our best to test against those systems in our continuous integration\nwhenever possible. some tests such as prometheus, kafka, and ignite\nare done with live systems, meaning we install prometheus/kafka/ignite on ci machine before\nthe test is run. some tests such as kinesis, pubsub, and azure storage are done\nthrough official or non-official emulators. offline tests are also performed whenever\npossible, though systems covered through offine tests may not have the same\nlevel of coverage as live systems or emulators.\n\n\n|  | live system | emulator| ci integration |  offline |\n| ------- | ----- | ----- | ----- | ----- |\n| apache kafka | :heavy_check_mark:  | | :heavy_check_mark:| |\n| apache ignite |  :heavy_check_mark: | |:heavy_check_mark:| |\n| prometheus |  :heavy_check_mark: | |:heavy_check_mark:| |\n| google pubsub |   | :heavy_check_mark: |:heavy_check_mark:| |\n| azure storage |   | :heavy_check_mark: |:heavy_check_mark:| |\n| aws kinesis |   | :heavy_check_mark: |:heavy_check_mark:| |\n| alibaba cloud oss |   | | |  :heavy_check_mark: |\n| google bigtable/bigquery |   | to be added | | |\n| elasticsearch (experimental) |  :heavy_check_mark: | |:heavy_check_mark:| |\n| mongodb (experimental) |  :heavy_check_mark: | |:heavy_check_mark:| |\n\n\nreferences for emulators:\n- official [pubsub emulator](https://cloud.google.com/sdk/gcloud/reference/beta/emulators/pubsub/) by google cloud for cloud pubsub.\n- official [azurite emulator](https://github.com/azure/azurite) by azure for azure storage.\n- none-official [localstack emulator](https://github.com/localstack/localstack) by localstack for aws kinesis.\n\n\n## community\n\n* sig io [google group](https://groups.google.com/a/tensorflow.org/forum/#!forum/io) and mailing list: [io@tensorflow.org](io@tensorflow.org)\n* sig io [monthly meeting notes](https://docs.google.com/document/d/1cb51yjxns5wa4ylv89d-a5qreigtc0gyum6du-9nkgo/edit)\n* gitter room: [tensorflow/sig-io](https://gitter.im/tensorflow/sig-io)\n\n## additional information\n\n* [streaming machine learning with tiered storage and without a data lake](https://www.confluent.io/blog/streaming-machine-learning-with-tiered-storage/) - [kai waehner](https://github.com/kaiwaehner)\n* [tensorflow with apache arrow datasets](https://medium.com/tensorflow/tensorflow-with-apache-arrow-datasets-cdbcfe80a59f) - [bryan cutler](https://github.com/bryancutler)\n* [how to build a custom dataset for tensorflow](https://towardsdatascience.com/how-to-build-a-custom-dataset-for-tensorflow-1fe3967544d8) - [ivelin ivanov](https://github.com/ivelin)\n* [tensorflow on apache ignite](https://medium.com/tensorflow/tensorflow-on-apache-ignite-99f1fc60efeb) - [anton dmitriev](https://github.com/dmitrievanthony)\n\n## license\n\n[apache license 2.0](license)\n",
  "docs_url": null,
  "keywords": "tensorflow io machine learning",
  "license": "",
  "name": "tensorflow-io",
  "package_url": "https://pypi.org/project/tensorflow-io/",
  "project_url": "https://pypi.org/project/tensorflow-io/",
  "project_urls": {
    "Bug Reports": "https://github.com/tensorflow/io/issues",
    "Documentation": "https://tensorflow.org/io",
    "Download": "https://github.com/tensorflow/io/tags",
    "Homepage": "https://github.com/tensorflow/io",
    "Source": "https://github.com/tensorflow/io"
  },
  "release_url": "https://pypi.org/project/tensorflow-io/0.35.0/",
  "requires_dist": [
    "tensorflow-io-gcs-filesystem ==0.35.0",
    "tensorflow <2.15.0,>=2.14.0 ; extra == 'tensorflow'",
    "tensorflow-aarch64 <2.15.0,>=2.14.0 ; extra == 'tensorflow-aarch64'",
    "tensorflow-cpu <2.15.0,>=2.14.0 ; extra == 'tensorflow-cpu'",
    "tensorflow-gpu <2.15.0,>=2.14.0 ; extra == 'tensorflow-gpu'",
    "tensorflow-rocm <2.15.0,>=2.14.0 ; extra == 'tensorflow-rocm'"
  ],
  "requires_python": ">=3.7, <3.12",
  "summary": "tensorflow io",
  "version": "0.35.0",
  "releases": [],
  "developers": [
    "google_inc",
    "opensource@google.com"
  ],
  "kwds": "tensorflow_io tensorflow badge badges keras",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_tensorflow_io",
  "homepage": "https://github.com/tensorflow/io",
  "release_count": 34,
  "dependency_ids": [
    "pypi_tensorflow",
    "pypi_tensorflow_aarch64",
    "pypi_tensorflow_cpu",
    "pypi_tensorflow_gpu",
    "pypi_tensorflow_io_gcs_filesystem",
    "pypi_tensorflow_rocm"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "operating system :: posix",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: quality assurance"
  ],
  "description": "# import_deps\n\n[![pypi version](https://img.shields.io/pypi/v/import-deps.svg)](https://pypi.org/project/import-deps/)\n[![python versions](https://img.shields.io/pypi/pyversions/import-deps.svg)](https://pypi.org/project/import-deps/)\n[![ci github actions](https://github.com/schettino72/import-deps/actions/workflows/test.yml/badge.svg?branch=master)](https://github.com/schettino72/import-deps/actions/workflows/test.yml?query=branch%3amaster)\n\nfind python module's import dependencies.\n\n`import_deps` is based on [ast module](https://docs.python.org/3/library/ast.html) from standard library,\nso the modules being analysed are *not* executed.\n\n\n## install\n\n```\npip install import_deps\n```\n\n## usage\n\n\n`import_deps` is designed to track only imports within a known set of package and modules.\n\ngiven a package with the modules:\n\n- `foo/__init__.py`\n- `foo/foo_a.py`\n- `foo/foo_b.py`\n- `foo/foo_c.py`\n\nwhere `foo_a.py` has the following imports:\n\n```python3\nfrom . import foo_b\nfrom .foo_c import obj_c\n```\n\n\n```python3\nimport pathlib\nfrom import_deps import moduleset\n\n# first initialise a moduleset instance with a list str of modules to track\npkg_paths = pathlib.path('foo').glob('**/*.py')\nmodule_set = moduleset([str(p) for p in pkg_paths])\n\n# then you can get the set of imports\nfor imported in module_set.mod_imports('foo.foo_a'):\n    print(imported)\n\n# foo.foo_c\n# foo.foo_b\n```\n\n### moduleset\n\nyou can get a list of  all modules in a `moduleset` by path or module's full qualified name.\n\n`by_path`\n\nnote that key for `by_path` must be exactly the as provided on moduleset initialization.\n\n```python3\nfor mod in sorted(module_set.by_path.keys()):\n    print(mod)\n\n# results in:\n# foo/__init__.py\n# foo/foo_a.py\n# foo/foo_b.py\n# foo/foo_c.py\n```\n\n`by_name`\n\n```python3\nfor mod in sorted(module_set.by_name.keys()):\n    print(mod)\n\n# results in:\n# foo.__init__\n# foo.foo_a\n# foo.foo_b\n# foo.foo_c\n```\n\n\n\n### ast_imports(file_path)\n\n`ast_imports` is a low level function that returns a list of entries for import statement in the module.\nthe parameter `file_path` can be a string or `pathlib.path` instance.\n\nthe return value is a list of 4-tuple items with values:\n - module name (of the \"from\" statement, `none` if a plain `import`)\n - object name\n - as name\n - level of relative import (number of parent, `none` if plain `import`)\n\n\n```python3\nfrom import_deps import ast_imports\n\nast_imports('foo.py')\n```\n\n\n```python3\n# import datetime\n(none, 'datetime', none, none)\n\n# from datetime import time\n('datetime', 'time', none, 0)\n\n# from datetime import datetime as dt\n('datetime', 'datetime', 'dt', 0)\n\n# from .. import bar\n(none, 'bar', none, 2)\n\n# from .acme import baz\n('acme', 'baz', none, 1)\n\n\n# note that a single statement will contain one entry per imported \"name\"\n# from datetime import time, timedelta\n('datetime', 'time', none, 0)\n('datetime', 'timedelta', none, 0)\n```",
  "docs_url": null,
  "keywords": "import graph quality",
  "license": "",
  "name": "import-deps",
  "package_url": "https://pypi.org/project/import-deps/",
  "project_url": "https://pypi.org/project/import-deps/",
  "project_urls": {
    "Homepage": "https://github.com/schettino72/import-deps"
  },
  "release_url": "https://pypi.org/project/import-deps/0.2.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "find python module imports",
  "version": "0.2.0",
  "releases": [],
  "developers": [
    "eduardo_naufel_schettino",
    "schettino72@gmail.com"
  ],
  "kwds": "import_deps deps ast_imports pyversions python3",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_import_deps",
  "homepage": "https://github.com/schettino72/import-deps",
  "release_count": 2,
  "dependency_ids": []
}
{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# wunsen\n\nwunsen transliterates/transcribes from other languages into thai.\n\n\u0e27\u0e38\u0e49\u0e19\u0e40\u0e2a\u0e49\u0e19\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e17\u0e31\u0e1a\u0e28\u0e31\u0e1e\u0e17\u0e4c\u0e08\u0e32\u0e01\u0e20\u0e32\u0e29\u0e32\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\n\ncurrently support:\n\n- japanese (from hepburn romanization)\n- korean (from revised romanization)\n- mandarin (from hanyu pinyin)\n- vietnamese (latin script)\n\ndemo [here](https://wunsen.herokuapp.com/).\n\n## installation\n\nrequirement:\n\npython >= 3.7\n\n[khanaa](https://github.com/cakimpei/khanaa)\n\n```\npip install wunsen\n```\n\n## usage\n\n```python\nfrom wunsen import thapsap\n\n# japanese\nthap_ja = thapsap('ja')\nthap_ja.thap('ohay\u014d')\n# => '\u0e42\u0e2d\u0e2e\u0e32\u0e42\u0e22'\n\n# without macron\nthap_ja_no_macron = thapsap('ja', input='hepburn-no diacritic')\nthap_ja_no_macron.thap('ohayou')\n# => '\u0e42\u0e2d\u0e2e\u0e32\u0e42\u0e22'\n\n# another transliteration system for japanese\nthap_ja = thapsap('ja', system='ri35')\nthap_ja.thap('ohay\u014d')\n# => '\u0e42\u0e2d\u0e30\u0e2e\u0e30\u0e42\u0e22'\n\n# korean\nthap_ko = thapsap('ko')\nthap_ko.thap('annyeonghaseyo')\n# => '\u0e2d\u0e31\u0e19\u0e19\u0e22\u0e47\u0e2d\u0e07\u0e2e\u0e32\u0e40\u0e0b\u0e42\u0e22'\n\n# mandarin (pinyin with tone diacritics is not supported yet.)\nthap_zh = thapsap('zh', system='ri49')\nthap_zh.thap('ni3 hao3')\n# => '\u0e2b\u0e19\u0e35 \u0e2b\u0e48\u0e32\u0e27'\n\nthap_zh = thapsap('zh', system='thc43')\nthap_zh.thap('ni3 hao3')\n# => '\u0e2b\u0e19\u0e35 \u0e40\u0e2b\u0e48\u0e32'\n\n# vietnamese\nthap_vi = thapsap('vi')\nthap_vi.thap('xin ch\u00e0o')\n# => '\u0e0b\u0e35\u0e19 \u0e08\u0e48\u0e32\u0e27'\n```\n\n## transcription/transliteration system in wunsen\n\nthere might be some differences between wunsen result and the intended result from the actual system, so please review the results.\n\n- japanese =>\n    - \u0e2b\u0e25\u0e31\u0e01\u0e40\u0e01\u0e13\u0e11\u0e4c\u0e01\u0e32\u0e23\u0e17\u0e31\u0e1a\u0e28\u0e31\u0e1e\u0e17\u0e4c\u0e20\u0e32\u0e29\u0e32\u0e0d\u0e35\u0e48\u0e1b\u0e38\u0e48\u0e19 (\u0e2a\u0e33\u0e19\u0e31\u0e01\u0e07\u0e32\u0e19\u0e23\u0e32\u0e0a\u0e1a\u0e31\u0e13\u0e11\u0e34\u0e15\u0e22\u0e2a\u0e20\u0e32 \u0e1e.\u0e28. 2561) 'ors61'\n    - \u0e2b\u0e25\u0e31\u0e01\u0e40\u0e01\u0e13\u0e11\u0e4c\u0e01\u0e32\u0e23\u0e17\u0e31\u0e1a\u0e28\u0e31\u0e1e\u0e17\u0e4c\u0e20\u0e32\u0e29\u0e32\u0e0d\u0e35\u0e48\u0e1b\u0e38\u0e48\u0e19 (\u0e23\u0e32\u0e0a\u0e1a\u0e31\u0e13\u0e11\u0e34\u0e15\u0e22\u0e2a\u0e16\u0e32\u0e19 \u0e1e.\u0e28. 2535) 'ri35'\n- korean => \u0e2b\u0e25\u0e31\u0e01\u0e40\u0e01\u0e13\u0e11\u0e4c\u0e01\u0e32\u0e23\u0e17\u0e31\u0e1a\u0e28\u0e31\u0e1e\u0e17\u0e4c\u0e20\u0e32\u0e29\u0e32\u0e40\u0e01\u0e32\u0e2b\u0e25\u0e35 (\u0e23\u0e32\u0e0a\u0e1a\u0e31\u0e13\u0e11\u0e34\u0e15\u0e22\u0e2a\u0e16\u0e32\u0e19 \u0e1e.\u0e28. 2555) 'ri55'\n- mandarin =>\n    - \u0e2b\u0e25\u0e31\u0e01\u0e40\u0e01\u0e13\u0e11\u0e4c\u0e01\u0e32\u0e23\u0e17\u0e31\u0e1a\u0e28\u0e31\u0e1e\u0e17\u0e4c\u0e20\u0e32\u0e29\u0e32\u0e08\u0e35\u0e19 (\u0e23\u0e32\u0e0a\u0e1a\u0e31\u0e13\u0e11\u0e34\u0e15\u0e22\u0e2a\u0e16\u0e32\u0e19 \u0e1e.\u0e28. 2549) 'ri49'\n    - \u0e40\u0e01\u0e13\u0e11\u0e4c\u0e01\u0e32\u0e23\u0e16\u0e48\u0e32\u0e22\u0e17\u0e2d\u0e14\u0e40\u0e2a\u0e35\u0e22\u0e07\u0e20\u0e32\u0e29\u0e32\u0e08\u0e35\u0e19\u0e41\u0e21\u0e19\u0e14\u0e32\u0e23\u0e34\u0e19\u0e14\u0e49\u0e27\u0e22\u0e2d\u0e31\u0e01\u0e02\u0e23\u0e27\u0e34\u0e18\u0e35\u0e44\u0e17\u0e22 (\u0e04\u0e13\u0e30\u0e01\u0e23\u0e23\u0e21\u0e01\u0e32\u0e23\u0e2a\u0e37\u0e1a\u0e04\u0e49\u0e19\u0e1b\u0e23\u0e30\u0e27\u0e31\u0e15\u0e34\u0e28\u0e32\u0e2a\u0e15\u0e23\u0e4c\u0e44\u0e17\u0e22\u0e43\u0e19\u0e40\u0e2d\u0e01\u0e2a\u0e32\u0e23\u0e20\u0e32\u0e29\u0e32\u0e08\u0e35\u0e19 \u0e1e.\u0e28. 2543) 'thc43'\n- vietnamese => \u0e2b\u0e25\u0e31\u0e01\u0e40\u0e01\u0e13\u0e11\u0e4c\u0e01\u0e32\u0e23\u0e17\u0e31\u0e1a\u0e28\u0e31\u0e1e\u0e17\u0e4c\u0e20\u0e32\u0e29\u0e32\u0e40\u0e27\u0e35\u0e22\u0e14\u0e19\u0e32\u0e21 (\u0e23\u0e32\u0e0a\u0e1a\u0e31\u0e13\u0e11\u0e34\u0e15\u0e22\u0e2a\u0e16\u0e32\u0e19 \u0e1e.\u0e28. 2555) 'ri55'\n\nwunsen is not affiliated with proposers of the above transliteration systems.\n\n\u0e27\u0e38\u0e49\u0e19\u0e40\u0e2a\u0e49\u0e19\u0e44\u0e21\u0e48\u0e21\u0e35\u0e2a\u0e48\u0e27\u0e19\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e1a\u0e1c\u0e39\u0e49\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e41\u0e19\u0e27\u0e17\u0e32\u0e07\u0e01\u0e32\u0e23\u0e17\u0e31\u0e1a\u0e28\u0e31\u0e1e\u0e17\u0e4c\u0e41\u0e15\u0e48\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e43\u0e14\n\n### notes\n\n#### syllabification issues\n\nwunsen might break syllables in incorrect place. you might have to add apostrophe:\n\n```python\nthap_ja.thap(\"honya | hon'ya\")\n# => \"\u0e42\u0e2e\u0e40\u0e19\u0e35\u0e22 | \u0e2e\u0e07\u0e22\u0e30\"\n\nthap_ko.thap(\"waengwaeng, maeum | waeng'waeng, ma'eum\")\n# => \"\u0e41\u0e27\u0e47\u0e19\u0e01\u0e41\u0e27\u0e47\u0e07, \u0e41\u0e21\u0e2d\u0e38\u0e21 | \u0e41\u0e27\u0e47\u0e07\u0e41\u0e27\u0e47\u0e07, \u0e21\u0e32\u0e2d\u0e36\u0e21\"\n```\n\n#### mandarin tone sandhi\n\nfor mandarin, both transliteration systems specify that we should apply third tone sandhi rule to the thai result. wunsen will automatically apply it, but you can turn it off.\n\n```python\nthap_zh_no_sandhi = thapsap('zh', option={'sandhi': false})\nthap_zh_no_sandhi.thap('ni3 hao3')\n# => '\u0e2b\u0e19\u0e35\u0e48 \u0e40\u0e2b\u0e48\u0e32' / ni3 hao3\n\n# if we turn it on\nthap_zh_with_sandhi = thapsap('zh', option={'sandhi': true})\nthap_zh_with_sandhi.thap('ni3 hao3')\n# => '\u0e2b\u0e19\u0e35 \u0e40\u0e2b\u0e48\u0e32' / ni2 hao3\n\nthap_zh_with_sandhi.thap('ni3hao3')\n# => '\u0e2b\u0e19\u0e35\u0e40\u0e2b\u0e48\u0e32' / ni2hao3\n\n# examples from wikipedia\nthap_zh_with_sandhi.thap('bao3guan3 hao3')\n# => '\u0e40\u0e1b\u0e4b\u0e32\u0e01\u0e4b\u0e27\u0e19 \u0e40\u0e2b\u0e48\u0e32' / bao2guan2 hao3\n\nthap_zh_with_sandhi.thap('lao3 bao3guan3')\n# => '\u0e40\u0e2b\u0e25\u0e48\u0e32 \u0e40\u0e1b\u0e4b\u0e32\u0e01\u0e48\u0e27\u0e19' / lao3 bao2guan3\n```\n\nwunsen doesn't apply \u4e0d (b\u00f9) and \u4e00 (y\u012b) tone rules as they are difficult to recognize in pinyin.\n\n#### japanese long vowels\n\nalthough we should transcribe two short vowels from different origins, that are next to each other, as two short vowels (not one long vowel), wunsen cannot cover this case reliably.\n\n```python\nthap_ja.thap(\"\u516c\u5b50 k\u014dshi | \u5b50\u725b koushi | \u77f3\u4e95 ishii | \u305f\u3060\u3044\u307e tadaima\")\n# => \"\u516c\u5b50 \u0e42\u0e04\u0e0a\u0e34 | \u5b50\u725b \u0e42\u0e04\u0e2d\u0e39\u0e0a\u0e34 | \u77f3\u4e95 \u0e2d\u0e34\u0e0a\u0e34\u0e2d\u0e34 | \u305f\u3060\u3044\u307e \u0e17\u0e32\u0e44\u0e14\u0e21\u0e30\"\n# k\u014dshi, koushi, ishii are fine but tadaima is ta-dai-ma in wunsen instead of ta-da-i-ma\n\nthap_ja_no_macron.thap(\"\u516c\u5b50 koushi | \u5b50\u725b koushi | \u77f3\u4e95 ishii | \u305f\u3060\u3044\u307e tadaima\")\n# => \"\u516c\u5b50 \u0e42\u0e04\u0e0a\u0e34 | \u5b50\u725b \u0e42\u0e04\u0e0a\u0e34 | \u77f3\u4e95 \u0e2d\u0e34\u0e0a\u0e35 | \u305f\u3060\u3044\u307e \u0e17\u0e32\u0e44\u0e14\u0e21\u0e30\"\n# they're transcribed as kou-shi | kou-shi | i-shii | ta-dai-ma so they're incorrect except \u516c\u5b50\n```\n\n#### spacing in thai\n\nif we want to follow the actual transcription/transliteration system, in some cases, space between syllables or words might have to be deleted in thai result.\n\nfor example, \u0e2b\u0e25\u0e31\u0e01\u0e40\u0e01\u0e13\u0e11\u0e4c\u0e01\u0e32\u0e23\u0e17\u0e31\u0e1a\u0e28\u0e31\u0e1e\u0e17\u0e4c\u0e20\u0e32\u0e29\u0e32\u0e40\u0e27\u0e35\u0e22\u0e14\u0e19\u0e32\u0e21 (\u0e23\u0e32\u0e0a\u0e1a\u0e31\u0e13\u0e11\u0e34\u0e15\u0e22\u0e2a\u0e16\u0e32\u0e19 \u0e1e.\u0e28. 2555) (vietnamese system) specifies that space in vietnamese place names should be deleted, but in personal name, the space should still be there as in vietnamese.\n\nbecause it depends on the situation, wunsen will leave spacing as it is.",
  "docs_url": null,
  "keywords": "",
  "license": "mit license  copyright (c) 2022 cakimpei, cakimpei@gmail.com  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.  the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
  "name": "wunsen",
  "package_url": "https://pypi.org/project/wunsen/",
  "project_url": "https://pypi.org/project/wunsen/",
  "project_urls": {
    "Bug Tracker": "https://github.com/cakimpei/wunsen/issues",
    "Homepage": "https://github.com/cakimpei/wunsen"
  },
  "release_url": "https://pypi.org/project/wunsen/0.0.3/",
  "requires_dist": [
    "khanaa>=0.0.6"
  ],
  "requires_python": ">=3.7",
  "summary": "transliterate/transcribe from other languages into thai",
  "version": "0.0.3",
  "releases": [],
  "developers": [
    "cakimpei@gmail.com"
  ],
  "kwds": "transliteration transliterates transliterate pinyin romanization",
  "license_kwds": "copyright license mit liable liability",
  "libtype": "pypi",
  "id": "pypi_wunsen",
  "homepage": "",
  "release_count": 3,
  "dependency_ids": [
    "pypi_khanaa"
  ]
}
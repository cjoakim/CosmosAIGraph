{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# pytest-env\n\n[![pypi](https://img.shields.io/pypi/v/pytest-env?style=flat-square)](https://pypi.org/project/pytest-env/)\n[![supported python\nversions](https://img.shields.io/pypi/pyversions/pytest-env.svg)](https://pypi.org/project/pytest-env/)\n[![check](https://github.com/pytest-dev/pytest-env/actions/workflows/check.yml/badge.svg)](https://github.com/pytest-dev/pytest-env/actions/workflows/check.yml)\n[![code style:\nblack](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![downloads](https://static.pepy.tech/badge/pytest-env/month)](https://pepy.tech/project/pytest-env)\n\nthis is a `pytest` plugin that enables you to set environment variables in a `pytest.ini` or `pyproject.toml` file.\n\n## installation\n\ninstall with pip:\n\n```shell\npip install pytest-env\n```\n\n## usage\n\n### native form in `pyproject.toml`\n\n```toml\n[tool.pytest_env]\nhome = \"~/tmp\"\nrun_env = 1\ntransformed = {value = \"{user}/alpha\", transform = true}\nskip_if_set = {value = \"on\", skip_if_set = true}\n```\n\nthe `tool.pytest_env` tables keys are the environment variables keys to set. the right hands-ide of the assigment:\n\n- if an inline table you can set options via the `transform` or `skip_if_set` keys, while the `value` key holds the\n  value to set (or transform before setting). for transformation the variables you can use is other environment\n  variable,\n- otherwise the value to set for the environment variable to set (casted to a string).\n\n### via pytest configurations\n\nin your pytest.ini file add a key value pair with `env` as the key and the environment variables as a line separated\nlist of `key=value` entries. the defined variables will be added to the environment before any tests are run:\n\n```ini\n[pytest]\nenv =\n    home=~/tmp\n    run_env=test\n```\n\nor with `pyproject.toml`:\n\n```toml\n[tool.pytest.ini_options]\nenv = [\n    \"home=~/tmp\",\n    \"run_env=test\",\n]\n```\n\n### only set if not already set\n\nyou can use `d:` (default) as prefix if you don't want to override existing environment variables:\n\n```ini\n[pytest]\nenv =\n    d:home=~/tmp\n    d:run_env=test\n```\n\n### transformation\n\nyou can use existing environment variables using a python-like format, these environment variables will be expended\nbefore setting the environment variable:\n\n```ini\n[pytest]\nenv =\n    run_path=/run/path/{user}\n```\n\nyou can apply the `r:` prefix to keep the raw value and skip this transformation step (can combine with the `d:` flag,\norder is not important):\n\n```ini\n[pytest]\nenv =\n    r:run_path=/run/path/{user}\n    r:d:run_path_if_not_set=/run/path/{user}\n```\n",
  "docs_url": null,
  "keywords": "env,pytest",
  "license": "mit license  copyright (c) 2010-202x the pytest-env developers  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.  the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
  "name": "pytest-env",
  "package_url": "https://pypi.org/project/pytest-env/",
  "project_url": "https://pypi.org/project/pytest-env/",
  "project_urls": {
    "Homepage": "https://github.com/pytest-dev/pytest-env",
    "Source": "https://github.com/pytest-dev/pytest-env",
    "Tracker": "https://github.com/pytest-dev/pytest-env/issues"
  },
  "release_url": "https://pypi.org/project/pytest-env/1.1.3/",
  "requires_dist": [
    "pytest>=7.4.3",
    "tomli>=2.0.1; python_version < '3.11'",
    "covdefaults>=2.3; extra == 'test'",
    "coverage>=7.3.2; extra == 'test'",
    "pytest-mock>=3.12; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "pytest plugin that allows you to add environment variables.",
  "version": "1.1.3",
  "releases": [],
  "developers": [
    "gaborjbernat@gmail.com"
  ],
  "kwds": "pytest_env pytest pypi pyversions badge",
  "license_kwds": "copyright license liable liability pytest",
  "libtype": "pypi",
  "id": "pypi_pytest_env",
  "homepage": "",
  "release_count": 15,
  "dependency_ids": [
    "pypi_covdefaults",
    "pypi_coverage",
    "pypi_pytest",
    "pypi_pytest_mock",
    "pypi_tomli"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: scientific/engineering :: human machine interfaces",
    "topic :: scientific/engineering :: information analysis",
    "topic :: text processing :: general",
    "topic :: text processing :: indexing",
    "topic :: text processing :: linguistic"
  ],
  "description": "# pytextrank\n\n[![doi](https://zenodo.org/badge/doi/10.5281/zenodo.4637885.svg)](https://doi.org/10.5281/zenodo.4637885)\n![licence](https://img.shields.io/github/license/derwenai/pytextrank)\n![repo size](https://img.shields.io/github/repo-size/derwenai/pytextrank)\n![github commit activity](https://img.shields.io/github/commit-activity/w/derwenai/pytextrank?style=plastic)\n[![checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n[![security: bandit](https://img.shields.io/badge/security-bandit-yellow.svg)](https://github.com/pycqa/bandit)\n[![language grade: python](https://img.shields.io/lgtm/grade/python/g/derwenai/pytextrank.svg?logo=lgtm&logowidth=18)](https://lgtm.com/projects/g/derwenai/pytextrank/context:python)\n![ci](https://github.com/derwenai/pytextrank/workflows/ci/badge.svg)\n![downloads](https://img.shields.io/pypi/dm/pytextrank)\n![sponsor](https://img.shields.io/github/sponsors/ceteri)\n\n**pytextrank** is a python implementation of *textrank* as a\n[spacy pipeline extension](https://spacy.io/universe/project/spacy-pytextrank),\nfor graph-based natural language work -- and related knowledge graph practices.\nthis includes the family of \n[*textgraph*](https://derwen.ai/docs/ptr/glossary/#textgraphs) algorithms:\n\n  - *textrank* by [[mihalcea04textrank]](https://derwen.ai/docs/ptr/biblio/#mihalcea04textrank)\n  - *positionrank* by [[florescuc17]](https://derwen.ai/docs/ptr/biblio/#florescuc17)\n  - *biased textrank* by [[kazemi-etal-2020-biased]](https://derwen.ai/docs/ptr/biblio/#kazemi-etal-2020-biased)\n  - *topicrank* by [[bougouin-etal-2013-topicrank]](https://derwen.ai/docs/ptr/biblio/#bougouin-etal-2013-topicrank)\n\npopular use cases for this library include:\n\n  - *phrase extraction*: get the top-ranked phrases from a text document\n  - low-cost *extractive summarization* of a text document\n  - help infer concepts from unstructured text into more structured representation\n\nsee our full documentation at: <https://derwen.ai/docs/ptr/>\n\n\n## getting started\n\nsee the [\"getting started\"](https://derwen.ai/docs/ptr/start/)\nsection of the online documentation.\n\nto install from [pypi](https://pypi.python.org/pypi/pytextrank):\n```\npython3 -m pip install pytextrank\npython3 -m spacy download en_core_web_sm\n```\n\nif you work directly from this git repo, be sure to install the\ndependencies as well:\n```\npython3 -m pip install -r requirements.txt\n```\n\nalternatively, to install dependencies using `conda`:\n```\nconda env create -f environment.yml\nconda activate pytextrank\n```\n\nthen to use the library with a simple use case:\n```python\nimport spacy\nimport pytextrank\n\n# example text\ntext = \"compatibility of systems of linear constraints over the set of natural numbers. criteria of compatibility of a system of linear diophantine equations, strict inequations, and nonstrict inequations are considered. upper bounds for components of a minimal set of solutions and algorithms of construction of minimal generating sets of solutions for all types of systems are given. these criteria and the corresponding algorithms for constructing a minimal supporting set of solutions can be used in solving all the considered types systems and systems of mixed types.\"\n\n# load a spacy model, depending on language, scale, etc.\nnlp = spacy.load(\"en_core_web_sm\")\n\n# add pytextrank to the spacy pipeline\nnlp.add_pipe(\"textrank\")\ndoc = nlp(text)\n\n# examine the top-ranked phrases in the document\nfor phrase in doc._.phrases:\n    print(phrase.text)\n    print(phrase.rank, phrase.count)\n    print(phrase.chunks)\n```\n\nsee the **tutorial notebooks** in the `examples` subdirectory for\nsample code and patterns to use in integrating **pytexttank** with\nrelated libraries in python:\n<https://derwen.ai/docs/ptr/tutorial/>\n\n\n<details>\n  <summary>contributing code</summary>\n\nwe welcome people getting involved as contributors to this open source\nproject!\n\nfor detailed instructions please see:\n[contributing.md](https://github.com/derwenai/pytextrank/blob/main/contributing.md)\n</details>\n\n<details>\n  <summary>build instructions</summary>\n\n<strong>\nnote: unless you are contributing code and updates,\nin most use cases won't need to build this package locally.\n</strong>\n\ninstead, simply install from\n[pypi](https://pypi.python.org/pypi/pytextrank)\nor use [conda](https://docs.conda.io/).\n\nto set up the build environment locally, see the \n[\"build instructions\"](https://derwen.ai/docs/ptr/build/)\nsection of the online documentation.\n</details>\n\n<details>\n  <summary>semantic versioning</summary>\n\ngenerally speaking the major release number of <strong>pytextrank</strong> \nwill track with the major release number of the associated <code>spacy</code>\nversion.\n\nsee:\n[changelog.md](https://github.com/derwenai/pytextrank/blob/main/changelog.md)\n</details>\n\n<img\n alt=\"thanks noam!\"\n src=\"https://raw.githubusercontent.com/derwenai/pytextrank/main/docs/assets/noam.jpg\"\n width=\"231\"\n/>\n\n\n## license and copyright\n\nsource code for **pytextrank** plus its logo, documentation, and examples\nhave an [mit license](https://spdx.org/licenses/mit.html) which is\nsuccinct and simplifies use in commercial applications.\n\nall materials herein are copyright &copy; 2016-2023 derwen, inc.\n\n\n## attribution\n\nplease use the following bibtex entry for citing **pytextrank** if you \nuse it in your research or software:\n```bibtex\n@software{pytextrank,\n  author = {paco nathan},\n  title = {{pytextrank, a python implementation of textrank for phrase extraction and summarization of text documents}},\n  year = 2016,\n  publisher = {derwen},\n  doi = {10.5281/zenodo.4637885},\n  url = {https://github.com/derwenai/pytextrank}\n}\n```\n\ncitations are helpful for the continued development and maintenance of\nthis library.\nfor example, see our citations listed on\n[google scholar](https://scholar.google.com/scholar?q=related:5tl6j4xzlcij:scholar.google.com/&scioq=&hl=en&as_sdt=0,5).\n\n\n## kudos\n\nmany thanks to our open source [sponsors](https://github.com/sponsors/ceteri);\nand to our contributors:\n[@ceteri](https://github.com/ceteri),\n[@louisguitton](https://github.com/louisguitton),\n[@ankush-chander](https://github.com/ankush-chander),\n[@tomaarsen](https://github.com/tomaarsen),\n[@captxiong](https://github.com/captxiong),\n[@lord-v15](https://github.com/lord-v15),\n[@anna-droid-beep](https://github.com/anna-droid-beep),\n[@dvsrepo](https://github.com/dvsrepo),\n[@clabornd](https://github.com/clabornd),\n[@dayalstrub-cma](https://github.com/dayalstrub-cma),\n[@kavorite](https://github.com/kavorite),\n[@0db](https://github.com/0db),\n[@htmartin](https://github.com/htmartin),\n[@williamsmj](https://github.com/williamsmj/),\n[@mattkohl](https://github.com/mattkohl),\n[@vanita5](https://github.com/vanita5),\n[@harshgrandeur](https://github.com/harshgrandeur),\n[@mnowotka](https://github.com/mnowotka),\n[@kjam](https://github.com/kjam),\n[@saithejeshwar](https://github.com/saithejeshwar),\n[@laxatives](https://github.com/laxatives),\n[@dimmu](https://github.com/dimmu), \n[@jasonzhangzy1757](https://github.com/jasonzhangzy1757), \n[@jake-aft](https://github.com/jake-aft),\n[@junchen1992](https://github.com/junchen1992),\n[@shyamcody](https://github.com/shyamcody),\n[@chikubee](https://github.com/chikubee);\nalso to [@mihalcea](https://github.com/mihalcea) who leads outstanding nlp research work,\nencouragement from the wonderful folks at explosion who develop [spacy](https://github.com/explosion/spacy),\nplus general support from [derwen, inc.](https://derwen.ai/)\n\n## star history\n\n[![star history chart](https://api.star-history.com/svg?repos=derwenai/pytextrank&type=date)](https://star-history.com/#derwenai/pytextrank&date)\n",
  "docs_url": null,
  "keywords": "biased textrank,entity linking,extractive summarization,graph algorithms,knowledge graph,natural language processing,nlp,parsing,phrase extraction,pipeline component,positionrank,spacy,text analytics,textgraphs,textrank,topicrank",
  "license": "mit",
  "name": "pytextrank",
  "package_url": "https://pypi.org/project/pytextrank/",
  "project_url": "https://pypi.org/project/pytextrank/",
  "project_urls": {
    "Citations": "https://scholar.google.com/scholar?q=related:5tl6J4xZlCIJ:scholar.google.com/&scioq=&hl=en&as_sdt=0,5",
    "Discussion Forum": "https://www.linkedin.com/groups/6725785/",
    "Homepage": "https://derwen.ai/docs/ptr/",
    "Issue Tracker": "https://github.com/DerwenAI/pytextrank/issues",
    "Source": "http://github.com/DerwenAI/pytextrank",
    "StackOverflow": "https://stackoverflow.com/search?q=pytextrank",
    "spaCy uniVerse": "https://spacy.io/universe/project/spacy-pytextrank"
  },
  "release_url": "https://pypi.org/project/pytextrank/3.2.5/",
  "requires_dist": [
    "graphviz >=0.13",
    "icecream >=2.1",
    "networkx[default] >=2.6",
    "pygments >=2.7.4",
    "scipy >=1.7",
    "spacy >=3.0",
    "graphviz >=0.13 ; extra == 'base'",
    "icecream >=2.1 ; extra == 'base'",
    "networkx[default] >=2.6 ; extra == 'base'",
    "pygments >=2.7.4 ; extra == 'base'",
    "scipy >=1.7 ; extra == 'base'",
    "spacy >=3.0 ; extra == 'base'",
    "bandit ; extra == 'docs'",
    "check-manifest >=0.48 ; extra == 'docs'",
    "codespell ; extra == 'docs'",
    "coverage ; extra == 'docs'",
    "flask ; extra == 'docs'",
    "grayskull ; extra == 'docs'",
    "jupyterlab >=3.1.4 ; extra == 'docs'",
    "mistune ; extra == 'docs'",
    "mkdocs-git-revision-date-plugin ; extra == 'docs'",
    "mkdocs-material ; extra == 'docs'",
    "mknotebooks ; extra == 'docs'",
    "mkrefs >=0.2.0 ; extra == 'docs'",
    "mypy ; extra == 'docs'",
    "nbconvert >=6.4 ; extra == 'docs'",
    "nbmake >=1.0 ; extra == 'docs'",
    "notebook >=6.1.5 ; extra == 'docs'",
    "pipdeptree ; extra == 'docs'",
    "pre-commit ; extra == 'docs'",
    "pylint >=2.7.0 ; extra == 'docs'",
    "pytest ; extra == 'docs'",
    "pymdown-extensions ; extra == 'docs'",
    "selenium ; extra == 'docs'",
    "setuptools >=65.5.1 ; extra == 'docs'",
    "twine ; extra == 'docs'",
    "wheel >=0.38.0 ; extra == 'docs'",
    "altair >=4.1.0 ; extra == 'viz'"
  ],
  "requires_python": ">=3.7",
  "summary": "python implementation of textrank as a spacy pipeline extension, for graph-based natural language work plus related knowledge graph practices; used for for phrase extraction and lightweight extractive summarization of text documents.",
  "version": "3.2.5",
  "releases": [],
  "developers": [
    "paco@derwen.ai",
    "paco_nathan"
  ],
  "kwds": "textrank pytextrank topicrank mihalcea04textrank positionrank",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytextrank",
  "homepage": "https://derwen.ai/docs/ptr/",
  "release_count": 19,
  "dependency_ids": [
    "pypi_altair",
    "pypi_bandit",
    "pypi_check_manifest",
    "pypi_codespell",
    "pypi_coverage",
    "pypi_flask",
    "pypi_graphviz",
    "pypi_grayskull",
    "pypi_icecream",
    "pypi_jupyterlab",
    "pypi_mistune",
    "pypi_mkdocs_git_revision_date_plugin",
    "pypi_mkdocs_material",
    "pypi_mknotebooks",
    "pypi_mkrefs",
    "pypi_mypy",
    "pypi_nbconvert",
    "pypi_nbmake",
    "pypi_networkx",
    "pypi_notebook",
    "pypi_pipdeptree",
    "pypi_pre_commit",
    "pypi_pygments",
    "pypi_pylint",
    "pypi_pymdown_extensions",
    "pypi_pytest",
    "pypi_scipy",
    "pypi_selenium",
    "pypi_setuptools",
    "pypi_spacy",
    "pypi_twine",
    "pypi_wheel"
  ]
}
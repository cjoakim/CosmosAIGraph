{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3"
  ],
  "description": "python-mnemonic\n===============\n\n.. image:: https://badge.fury.io/py/mnemonic.svg\n    :target: https://badge.fury.io/py/mnemonic\n\nreference implementation of bip-0039: mnemonic code for generating\ndeterministic keys\n\nabstract\n--------\n\nthis bip describes the implementation of a mnemonic code or mnemonic sentence --\na group of easy to remember words -- for the generation of deterministic wallets.\n\nit consists of two parts: generating the mnenomic, and converting it into a\nbinary seed. this seed can be later used to generate deterministic wallets using\nbip-0032 or similar methods.\n\nbip paper\n---------\n\nsee https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\nfor full specification\n\ninstallation\n------------\n\nto install this library and its dependencies use:\n\n ``pip install mnemonic``\n\nusage examples\n--------------\n\nimport library into python project via:\n\n.. code-block:: python\n\n   from mnemonic import mnemonic\n\ninitialize class instance, picking from available dictionaries:\n\n- english\n- chinese_simplified\n- chinese_traditional\n- french\n- italian\n- japanese\n- korean \n- spanish\n\n.. code-block:: python\n\n   mnemo = mnemonic(language)\n   mnemo = mnemonic(\"english\")\n\ngenerate word list given the strength (128 - 256):\n\n.. code-block:: python\n\n   words = mnemo.generate(strength=256)\n\ngiven the word list and custom passphrase (empty in example), generate seed:\n\n.. code-block:: python\n\n   seed = mnemo.to_seed(words, passphrase=\"\") \n\ngiven the word list, calculate original entropy:\n\n.. code-block:: python\n\n   entropy = mnemo.to_entropy(words)\n\nchangelog\n=========\n\n.. default-role:: code\n\nall notable changes to this project will be documented in this file.\n\nthe format is based on `keep a changelog`_, and this project adheres to\n`semantic versioning`_.\n\n`0.20`_ - 2021-07-27\n---------------------\n\n.. _0.20: https://github.com/trezor/python-mnemonic/compare/v0.19...v0.20\n\nadded\n~~~~~\n\n- type annotations\n- support for testnet private keys\n\nchanged\n~~~~~~~\n\n- project directory structure was cleaned up\n- language on the `mnemonic` object is remembered instead of repeatedly detecting\n\nremoved\n~~~~~~~\n\n- support for python 2.7 and 3.4 was dropped\n\n\n\n0.19 - 2019-10-01\n------------------\n\nadded\n~~~~~\n\n- start of changelog\n\n\n.. _keep a changelog: https://keepachangelog.com/en/1.0.0/\n.. _semantic versioning: https://semver.org/spec/v2.0.0.html\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "mnemonic",
  "package_url": "https://pypi.org/project/mnemonic/",
  "project_url": "https://pypi.org/project/mnemonic/",
  "project_urls": {
    "Homepage": "https://github.com/trezor/python-mnemonic"
  },
  "release_url": "https://pypi.org/project/mnemonic/0.20/",
  "requires_dist": [],
  "requires_python": ">=3.5",
  "summary": "implementation of bitcoin bip-0039",
  "version": "0.20",
  "releases": [],
  "developers": [
    "info@trezor.io",
    "trezor"
  ],
  "kwds": "mnemonic bip wallets python generate",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_mnemonic",
  "homepage": "https://github.com/trezor/python-mnemonic",
  "release_count": 13,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: gnu affero general public license v3 or later (agplv3+)",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: scientific/engineering :: image recognition",
    "topic :: software development"
  ],
  "description": "<div align=\"center\">\n  <p>\n    <a href=\"https://yolovision.ultralytics.com/\" target=\"_blank\">\n      <img width=\"100%\" src=\"https://raw.githubusercontent.com/ultralytics/assets/main/im/banner-yolo-vision-2023.png\" alt=\"yolo vision banner\"></a>\n  </p>\n\n[\u4e2d\u6587](https://docs.ultralytics.com/zh/) | [\ud55c\uad6d\uc5b4](https://docs.ultralytics.com/ko/) | [\u65e5\u672c\u8a9e](https://docs.ultralytics.com/ja/) | [\u0440\u0443\u0441\u0441\u043a\u0438\u0439](https://docs.ultralytics.com/ru/) | [deutsch](https://docs.ultralytics.com/de/) | [fran\u00e7ais](https://docs.ultralytics.com/fr/) | [espa\u00f1ol](https://docs.ultralytics.com/es/) | [portugu\u00eas](https://docs.ultralytics.com/pt/) | [\u0939\u093f\u0928\u094d\u0926\u0940](https://docs.ultralytics.com/hi/) | [\u0627\u0644\u0639\u0631\u0628\u064a\u0629](https://docs.ultralytics.com/ar/) <br>\n\n<div>\n    <a href=\"https://github.com/ultralytics/ultralytics/actions/workflows/ci.yaml\"><img src=\"https://github.com/ultralytics/ultralytics/actions/workflows/ci.yaml/badge.svg\" alt=\"ultralytics ci\"></a>\n    <a href=\"https://codecov.io/github/ultralytics/ultralytics\"><img src=\"https://codecov.io/github/ultralytics/ultralytics/branch/main/graph/badge.svg?token=hhw7iivfvy\" alt=\"ultralytics code coverage\"></a>\n    <a href=\"https://zenodo.org/badge/latestdoi/264818686\"><img src=\"https://zenodo.org/badge/264818686.svg\" alt=\"yolov8 citation\"></a>\n    <a href=\"https://hub.docker.com/r/ultralytics/ultralytics\"><img src=\"https://img.shields.io/docker/pulls/ultralytics/ultralytics?logo=docker\" alt=\"docker pulls\"></a>\n    <a href=\"https://ultralytics.com/discord\"><img alt=\"discord\" src=\"https://img.shields.io/discord/1089800235347353640?logo=discord&logocolor=white&label=discord&color=blue\"></a>\n    <br>\n    <a href=\"https://console.paperspace.com/github/ultralytics/ultralytics\"><img src=\"https://assets.paperspace.io/img/gradient-badge.svg\" alt=\"run on gradient\"></a>\n    <a href=\"https://colab.research.google.com/github/ultralytics/ultralytics/blob/main/examples/tutorial.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"open in colab\"></a>\n    <a href=\"https://www.kaggle.com/ultralytics/yolov8\"><img src=\"https://kaggle.com/static/images/open-in-kaggle.svg\" alt=\"open in kaggle\"></a>\n</div>\n<br>\n\n[ultralytics](https://ultralytics.com) [yolov8](https://github.com/ultralytics/ultralytics) is a cutting-edge, state-of-the-art (sota) model that builds upon the success of previous yolo versions and introduces new features and improvements to further boost performance and flexibility. yolov8 is designed to be fast, accurate, and easy to use, making it an excellent choice for a wide range of object detection and tracking, instance segmentation, image classification and pose estimation tasks.\n\nwe hope that the resources here will help you get the most out of yolov8. please browse the yolov8 <a href=\"https://docs.ultralytics.com/\">docs</a> for details, raise an issue on <a href=\"https://github.com/ultralytics/ultralytics/issues/new/choose\">github</a> for support, and join our <a href=\"https://ultralytics.com/discord\">discord</a> community for questions and discussions!\n\nto request an enterprise license please complete the form at [ultralytics licensing](https://ultralytics.com/license).\n\n<img width=\"100%\" src=\"https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/yolo-comparison-plots.png\" alt=\"yolov8 performance plots\"></a>\n\n<div align=\"center\">\n  <a href=\"https://github.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-github.png\" width=\"2%\" alt=\"ultralytics github\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://www.linkedin.com/company/ultralytics/\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-linkedin.png\" width=\"2%\" alt=\"ultralytics linkedin\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://twitter.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-twitter.png\" width=\"2%\" alt=\"ultralytics twitter\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://youtube.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-youtube.png\" width=\"2%\" alt=\"ultralytics youtube\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://www.tiktok.com/@ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-tiktok.png\" width=\"2%\" alt=\"ultralytics tiktok\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://www.instagram.com/ultralytics/\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-instagram.png\" width=\"2%\" alt=\"ultralytics instagram\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://ultralytics.com/discord\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-discord.png\" width=\"2%\" alt=\"ultralytics discord\"></a>\n</div>\n</div>\n\n## <div align=\"center\">documentation</div>\n\nsee below for a quickstart installation and usage example, and see the [yolov8 docs](https://docs.ultralytics.com) for full documentation on training, validation, prediction and deployment.\n\n<details open>\n<summary>install</summary>\n\npip install the ultralytics package including all [requirements](https://github.com/ultralytics/ultralytics/blob/main/requirements.txt) in a [**python>=3.8**](https://www.python.org/) environment with [**pytorch>=1.8**](https://pytorch.org/get-started/locally/).\n\n[![pypi version](https://badge.fury.io/py/ultralytics.svg)](https://badge.fury.io/py/ultralytics) [![downloads](https://static.pepy.tech/badge/ultralytics)](https://pepy.tech/project/ultralytics)\n\n```bash\npip install ultralytics\n```\n\nfor alternative installation methods including [conda](https://anaconda.org/conda-forge/ultralytics), [docker](https://hub.docker.com/r/ultralytics/ultralytics), and git, please refer to the [quickstart guide](https://docs.ultralytics.com/quickstart).\n\n</details>\n\n<details open>\n<summary>usage</summary>\n\n#### cli\n\nyolov8 may be used directly in the command line interface (cli) with a `yolo` command:\n\n```bash\nyolo predict model=yolov8n.pt source='https://ultralytics.com/images/bus.jpg'\n```\n\n`yolo` can be used for a variety of tasks and modes and accepts additional arguments, i.e. `imgsz=640`. see the yolov8 [cli docs](https://docs.ultralytics.com/usage/cli) for examples.\n\n#### python\n\nyolov8 may also be used directly in a python environment, and accepts the same [arguments](https://docs.ultralytics.com/usage/cfg/) as in the cli example above:\n\n```python\nfrom ultralytics import yolo\n\n# load a model\nmodel = yolo(\"yolov8n.yaml\")  # build a new model from scratch\nmodel = yolo(\"yolov8n.pt\")  # load a pretrained model (recommended for training)\n\n# use the model\nmodel.train(data=\"coco128.yaml\", epochs=3)  # train the model\nmetrics = model.val()  # evaluate model performance on the validation set\nresults = model(\"https://ultralytics.com/images/bus.jpg\")  # predict on an image\npath = model.export(format=\"onnx\")  # export the model to onnx format\n```\n\nsee yolov8 [python docs](https://docs.ultralytics.com/usage/python) for more examples.\n\n</details>\n\n## <div align=\"center\">models</div>\n\nyolov8 [detect](https://docs.ultralytics.com/tasks/detect), [segment](https://docs.ultralytics.com/tasks/segment) and [pose](https://docs.ultralytics.com/tasks/pose) models pretrained on the [coco](https://docs.ultralytics.com/datasets/detect/coco) dataset are available here, as well as yolov8 [classify](https://docs.ultralytics.com/tasks/classify) models pretrained on the [imagenet](https://docs.ultralytics.com/datasets/classify/imagenet) dataset. [track](https://docs.ultralytics.com/modes/track) mode is available for all detect, segment and pose models.\n\n<img width=\"1024\" src=\"https://raw.githubusercontent.com/ultralytics/assets/main/im/banner-tasks.png\" alt=\"ultralytics yolo supported tasks\">\n\nall [models](https://github.com/ultralytics/ultralytics/tree/main/ultralytics/cfg/models) download automatically from the latest ultralytics [release](https://github.com/ultralytics/assets/releases) on first use.\n\n<details open><summary>detection (coco)</summary>\n\nsee [detection docs](https://docs.ultralytics.com/tasks/detect/) for usage examples with these models trained on [coco](https://docs.ultralytics.com/datasets/detect/coco/), which include 80 pre-trained classes.\n\n| model                                                                                | size<br><sup>(pixels) | map<sup>val<br>50-95 | speed<br><sup>cpu onnx<br>(ms) | speed<br><sup>a100 tensorrt<br>(ms) | params<br><sup>(m) | flops<br><sup>(b) |\n| ------------------------------------------------------------------------------------ | --------------------- | -------------------- | ------------------------------ | ----------------------------------- | ------------------ | ----------------- |\n| [yolov8n](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n.pt) | 640                   | 37.3                 | 80.4                           | 0.99                                | 3.2                | 8.7               |\n| [yolov8s](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8s.pt) | 640                   | 44.9                 | 128.4                          | 1.20                                | 11.2               | 28.6              |\n| [yolov8m](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8m.pt) | 640                   | 50.2                 | 234.7                          | 1.83                                | 25.9               | 78.9              |\n| [yolov8l](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8l.pt) | 640                   | 52.9                 | 375.2                          | 2.39                                | 43.7               | 165.2             |\n| [yolov8x](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8x.pt) | 640                   | 53.9                 | 479.1                          | 3.53                                | 68.2               | 257.8             |\n\n- **map<sup>val</sup>** values are for single-model single-scale on [coco val2017](http://cocodataset.org) dataset. <br>reproduce by `yolo val detect data=coco.yaml device=0`\n- **speed** averaged over coco val images using an [amazon ec2 p4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>reproduce by `yolo val detect data=coco.yaml batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>detection (open image v7)</summary>\n\nsee [detection docs](https://docs.ultralytics.com/tasks/detect/) for usage examples with these models trained on [open image v7](https://docs.ultralytics.com/datasets/detect/open-images-v7/), which include 600 pre-trained classes.\n\n| model                                                                                     | size<br><sup>(pixels) | map<sup>val<br>50-95 | speed<br><sup>cpu onnx<br>(ms) | speed<br><sup>a100 tensorrt<br>(ms) | params<br><sup>(m) | flops<br><sup>(b) |\n| ----------------------------------------------------------------------------------------- | --------------------- | -------------------- | ------------------------------ | ----------------------------------- | ------------------ | ----------------- |\n| [yolov8n](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n-oiv7.pt) | 640                   | 18.4                 | 142.4                          | 1.21                                | 3.5                | 10.5              |\n| [yolov8s](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8s-oiv7.pt) | 640                   | 27.7                 | 183.1                          | 1.40                                | 11.4               | 29.7              |\n| [yolov8m](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8m-oiv7.pt) | 640                   | 33.6                 | 408.5                          | 2.26                                | 26.2               | 80.6              |\n| [yolov8l](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8l-oiv7.pt) | 640                   | 34.9                 | 596.9                          | 2.43                                | 44.1               | 167.4             |\n| [yolov8x](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8x-oiv7.pt) | 640                   | 36.3                 | 860.6                          | 3.56                                | 68.7               | 260.6             |\n\n- **map<sup>val</sup>** values are for single-model single-scale on [open image v7](https://docs.ultralytics.com/datasets/detect/open-images-v7/) dataset. <br>reproduce by `yolo val detect data=open-images-v7.yaml device=0`\n- **speed** averaged over open image v7 val images using an [amazon ec2 p4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>reproduce by `yolo val detect data=open-images-v7.yaml batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>segmentation (coco)</summary>\n\nsee [segmentation docs](https://docs.ultralytics.com/tasks/segment/) for usage examples with these models trained on [coco-seg](https://docs.ultralytics.com/datasets/segment/coco/), which include 80 pre-trained classes.\n\n| model                                                                                        | size<br><sup>(pixels) | map<sup>box<br>50-95 | map<sup>mask<br>50-95 | speed<br><sup>cpu onnx<br>(ms) | speed<br><sup>a100 tensorrt<br>(ms) | params<br><sup>(m) | flops<br><sup>(b) |\n| -------------------------------------------------------------------------------------------- | --------------------- | -------------------- | --------------------- | ------------------------------ | ----------------------------------- | ------------------ | ----------------- |\n| [yolov8n-seg](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n-seg.pt) | 640                   | 36.7                 | 30.5                  | 96.1                           | 1.21                                | 3.4                | 12.6              |\n| [yolov8s-seg](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8s-seg.pt) | 640                   | 44.6                 | 36.8                  | 155.7                          | 1.47                                | 11.8               | 42.6              |\n| [yolov8m-seg](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8m-seg.pt) | 640                   | 49.9                 | 40.8                  | 317.0                          | 2.18                                | 27.3               | 110.2             |\n| [yolov8l-seg](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8l-seg.pt) | 640                   | 52.3                 | 42.6                  | 572.4                          | 2.79                                | 46.0               | 220.5             |\n| [yolov8x-seg](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8x-seg.pt) | 640                   | 53.4                 | 43.4                  | 712.1                          | 4.02                                | 71.8               | 344.1             |\n\n- **map<sup>val</sup>** values are for single-model single-scale on [coco val2017](http://cocodataset.org) dataset. <br>reproduce by `yolo val segment data=coco-seg.yaml device=0`\n- **speed** averaged over coco val images using an [amazon ec2 p4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>reproduce by `yolo val segment data=coco-seg.yaml batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>pose (coco)</summary>\n\nsee [pose docs](https://docs.ultralytics.com/tasks/pose/) for usage examples with these models trained on [coco-pose](https://docs.ultralytics.com/datasets/pose/coco/), which include 1 pre-trained class, person.\n\n| model                                                                                                | size<br><sup>(pixels) | map<sup>pose<br>50-95 | map<sup>pose<br>50 | speed<br><sup>cpu onnx<br>(ms) | speed<br><sup>a100 tensorrt<br>(ms) | params<br><sup>(m) | flops<br><sup>(b) |\n| ---------------------------------------------------------------------------------------------------- | --------------------- | --------------------- | ------------------ | ------------------------------ | ----------------------------------- | ------------------ | ----------------- |\n| [yolov8n-pose](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n-pose.pt)       | 640                   | 50.4                  | 80.1               | 131.8                          | 1.18                                | 3.3                | 9.2               |\n| [yolov8s-pose](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8s-pose.pt)       | 640                   | 60.0                  | 86.2               | 233.2                          | 1.42                                | 11.6               | 30.2              |\n| [yolov8m-pose](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8m-pose.pt)       | 640                   | 65.0                  | 88.8               | 456.3                          | 2.00                                | 26.4               | 81.0              |\n| [yolov8l-pose](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8l-pose.pt)       | 640                   | 67.6                  | 90.0               | 784.5                          | 2.59                                | 44.4               | 168.6             |\n| [yolov8x-pose](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8x-pose.pt)       | 640                   | 69.2                  | 90.2               | 1607.1                         | 3.73                                | 69.4               | 263.2             |\n| [yolov8x-pose-p6](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8x-pose-p6.pt) | 1280                  | 71.6                  | 91.2               | 4088.7                         | 10.04                               | 99.1               | 1066.4            |\n\n- **map<sup>val</sup>** values are for single-model single-scale on [coco keypoints val2017](http://cocodataset.org) dataset. <br>reproduce by `yolo val pose data=coco-pose.yaml device=0`\n- **speed** averaged over coco val images using an [amazon ec2 p4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>reproduce by `yolo val pose data=coco-pose.yaml batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>classification (imagenet)</summary>\n\nsee [classification docs](https://docs.ultralytics.com/tasks/classify/) for usage examples with these models trained on [imagenet](https://docs.ultralytics.com/datasets/classify/imagenet/), which include 1000 pretrained classes.\n\n| model                                                                                        | size<br><sup>(pixels) | acc<br><sup>top1 | acc<br><sup>top5 | speed<br><sup>cpu onnx<br>(ms) | speed<br><sup>a100 tensorrt<br>(ms) | params<br><sup>(m) | flops<br><sup>(b) at 640 |\n| -------------------------------------------------------------------------------------------- | --------------------- | ---------------- | ---------------- | ------------------------------ | ----------------------------------- | ------------------ | ------------------------ |\n| [yolov8n-cls](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n-cls.pt) | 224                   | 66.6             | 87.0             | 12.9                           | 0.31                                | 2.7                | 4.3                      |\n| [yolov8s-cls](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8s-cls.pt) | 224                   | 72.3             | 91.1             | 23.4                           | 0.35                                | 6.4                | 13.5                     |\n| [yolov8m-cls](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8m-cls.pt) | 224                   | 76.4             | 93.2             | 85.4                           | 0.62                                | 17.0               | 42.7                     |\n| [yolov8l-cls](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8l-cls.pt) | 224                   | 78.0             | 94.1             | 163.0                          | 0.87                                | 37.5               | 99.7                     |\n| [yolov8x-cls](https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8x-cls.pt) | 224                   | 78.4             | 94.3             | 232.0                          | 1.01                                | 57.4               | 154.8                    |\n\n- **acc** values are model accuracies on the [imagenet](https://www.image-net.org/) dataset validation set. <br>reproduce by `yolo val classify data=path/to/imagenet device=0`\n- **speed** averaged over imagenet val images using an [amazon ec2 p4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>reproduce by `yolo val classify data=path/to/imagenet batch=1 device=0|cpu`\n\n</details>\n\n## <div align=\"center\">integrations</div>\n\nour key integrations with leading ai platforms extend the functionality of ultralytics' offerings, enhancing tasks like dataset labeling, training, visualization, and model management. discover how ultralytics, in collaboration with [roboflow](https://roboflow.com/?ref=ultralytics), clearml, [comet](https://bit.ly/yolov8-readme-comet), neural magic and [openvino](https://docs.ultralytics.com/integrations/openvino), can optimize your ai workflow.\n\n<br>\n<a href=\"https://bit.ly/ultralytics_hub\" target=\"_blank\">\n<img width=\"100%\" src=\"https://github.com/ultralytics/assets/raw/main/yolov8/banner-integrations.png\" alt=\"ultralytics active learning integrations\"></a>\n<br>\n<br>\n\n<div align=\"center\">\n  <a href=\"https://roboflow.com/?ref=ultralytics\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-roboflow.png\" width=\"10%\" alt=\"roboflow logo\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"15%\" height=\"0\" alt=\"space\">\n  <a href=\"https://cutt.ly/yolov5-readme-clearml\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-clearml.png\" width=\"10%\" alt=\"clearml logo\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"15%\" height=\"0\" alt=\"space\">\n  <a href=\"https://bit.ly/yolov8-readme-comet\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-comet.png\" width=\"10%\" alt=\"comet ml logo\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"15%\" height=\"0\" alt=\"space\">\n  <a href=\"https://bit.ly/yolov5-neuralmagic\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-neuralmagic.png\" width=\"10%\" alt=\"neuralmagic logo\"></a>\n</div>\n\n|                                                           roboflow                                                           |                                                            clearml \u2b50 new                                                            |                                                                        comet \u2b50 new                                                                        |                                           neural magic \u2b50 new                                           |\n| :--------------------------------------------------------------------------------------------------------------------------: | :---------------------------------------------------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------------------: |\n| label and export your custom datasets directly to yolov8 for training with [roboflow](https://roboflow.com/?ref=ultralytics) | automatically track, visualize and even remotely train yolov8 using [clearml](https://cutt.ly/yolov5-readme-clearml) (open-source!) | free forever, [comet](https://bit.ly/yolov8-readme-comet) lets you save yolov8 models, resume training, and interactively visualize and debug predictions | run yolov8 inference up to 6x faster with [neural magic deepsparse](https://bit.ly/yolov5-neuralmagic) |\n\n## <div align=\"center\">ultralytics hub</div>\n\nexperience seamless ai with [ultralytics hub](https://bit.ly/ultralytics_hub) \u2b50, the all-in-one solution for data visualization, yolov5 and yolov8 \ud83d\ude80 model training and deployment, without any coding. transform images into actionable insights and bring your ai visions to life with ease using our cutting-edge platform and user-friendly [ultralytics app](https://ultralytics.com/app_install). start your journey for **free** now!\n\n<a href=\"https://bit.ly/ultralytics_hub\" target=\"_blank\">\n<img width=\"100%\" src=\"https://github.com/ultralytics/assets/raw/main/im/ultralytics-hub.png\" alt=\"ultralytics hub preview image\"></a>\n\n## <div align=\"center\">contribute</div>\n\nwe love your input! yolov5 and yolov8 would not be possible without help from our community. please see our [contributing guide](https://docs.ultralytics.com/help/contributing) to get started, and fill out our [survey](https://ultralytics.com/survey?utm_source=github&utm_medium=social&utm_campaign=survey) to send us feedback on your experience. thank you \ud83d\ude4f to all our contributors!\n\n<!-- svg image from https://opencollective.com/ultralytics/contributors.svg?width=990 -->\n\n<a href=\"https://github.com/ultralytics/yolov5/graphs/contributors\">\n<img width=\"100%\" src=\"https://github.com/ultralytics/assets/raw/main/im/image-contributors.png\" alt=\"ultralytics open-source contributors\"></a>\n\n## <div align=\"center\">license</div>\n\nultralytics offers two licensing options to accommodate diverse use cases:\n\n- **agpl-3.0 license**: this [osi-approved](https://opensource.org/licenses/) open-source license is ideal for students and enthusiasts, promoting open collaboration and knowledge sharing. see the [license](https://github.com/ultralytics/ultralytics/blob/main/license) file for more details.\n- **enterprise license**: designed for commercial use, this license permits seamless integration of ultralytics software and ai models into commercial goods and services, bypassing the open-source requirements of agpl-3.0. if your scenario involves embedding our solutions into a commercial offering, reach out through [ultralytics licensing](https://ultralytics.com/license).\n\n## <div align=\"center\">contact</div>\n\nfor ultralytics bug reports and feature requests please visit [github issues](https://github.com/ultralytics/ultralytics/issues), and join our [discord](https://ultralytics.com/discord) community for questions and discussions!\n\n<br>\n<div align=\"center\">\n  <a href=\"https://github.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-github.png\" width=\"3%\" alt=\"ultralytics github\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://www.linkedin.com/company/ultralytics/\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-linkedin.png\" width=\"3%\" alt=\"ultralytics linkedin\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://twitter.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-twitter.png\" width=\"3%\" alt=\"ultralytics twitter\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://youtube.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-youtube.png\" width=\"3%\" alt=\"ultralytics youtube\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://www.tiktok.com/@ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-tiktok.png\" width=\"3%\" alt=\"ultralytics tiktok\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://www.instagram.com/ultralytics/\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-instagram.png\" width=\"3%\" alt=\"ultralytics instagram\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://ultralytics.com/discord\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-discord.png\" width=\"3%\" alt=\"ultralytics discord\"></a>\n</div>\n",
  "docs_url": null,
  "keywords": "machine-learning,deep-learning,vision,ml,dl,ai,yolo,yolov3,yolov5,yolov8,hub,ultralytics",
  "license": "agpl-3.0",
  "name": "ultralytics",
  "package_url": "https://pypi.org/project/ultralytics/",
  "project_url": "https://pypi.org/project/ultralytics/",
  "project_urls": {
    "Bug Reports": "https://github.com/ultralytics/ultralytics/issues",
    "Funding": "https://ultralytics.com",
    "Homepage": "https://github.com/ultralytics/ultralytics",
    "Source": "https://github.com/ultralytics/ultralytics"
  },
  "release_url": "https://pypi.org/project/ultralytics/8.0.229/",
  "requires_dist": [
    "matplotlib >=3.3.0",
    "numpy >=1.22.2",
    "opencv-python >=4.6.0",
    "pillow >=7.1.2",
    "pyyaml >=5.3.1",
    "requests >=2.23.0",
    "scipy >=1.4.1",
    "torch >=1.8.0",
    "torchvision >=0.9.0",
    "tqdm >=4.64.0",
    "pandas >=1.1.4",
    "seaborn >=0.11.0",
    "psutil",
    "py-cpuinfo",
    "thop >=0.1.1",
    "ipython ; extra == 'dev'",
    "check-manifest ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "coverage ; extra == 'dev'",
    "mkdocs-material ; extra == 'dev'",
    "mkdocstrings[python] ; extra == 'dev'",
    "mkdocs-redirects ; extra == 'dev'",
    "mkdocs-ultralytics-plugin >=0.0.34 ; extra == 'dev'",
    "coremltools >=7.0 ; extra == 'export'",
    "openvino-dev >=2023.0 ; extra == 'export'",
    "tensorflow <=2.13.1 ; extra == 'export'",
    "jax <=0.4.21 ; extra == 'export'",
    "jaxlib <=0.4.21 ; extra == 'export'",
    "tensorflowjs ; extra == 'export'"
  ],
  "requires_python": ">=3.8",
  "summary": "ultralytics yolov8 for sota object detection, multi-object tracking, instance segmentation, pose estimation and image classification.",
  "version": "8.0.229",
  "releases": [],
  "developers": [
    "hello@ultralytics.com",
    "ultralytics"
  ],
  "kwds": "yolov3 \u65e5\u672c\u8a9e yolov5 yolov8x \u4e2d\u6587",
  "license_kwds": "agpl-3.0",
  "libtype": "pypi",
  "id": "pypi_ultralytics",
  "homepage": "https://github.com/ultralytics/ultralytics",
  "release_count": 262,
  "dependency_ids": [
    "pypi_check_manifest",
    "pypi_coremltools",
    "pypi_coverage",
    "pypi_ipython",
    "pypi_jax",
    "pypi_jaxlib",
    "pypi_matplotlib",
    "pypi_mkdocs_material",
    "pypi_mkdocs_redirects",
    "pypi_mkdocs_ultralytics_plugin",
    "pypi_mkdocstrings",
    "pypi_numpy",
    "pypi_opencv_python",
    "pypi_openvino_dev",
    "pypi_pandas",
    "pypi_pillow",
    "pypi_pre_commit",
    "pypi_psutil",
    "pypi_py_cpuinfo",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_scipy",
    "pypi_seaborn",
    "pypi_tensorflow",
    "pypi_tensorflowjs",
    "pypi_thop",
    "pypi_torch",
    "pypi_torchvision",
    "pypi_tqdm"
  ]
}
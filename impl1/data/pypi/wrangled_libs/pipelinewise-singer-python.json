{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3 :: only"
  ],
  "description": "pipelinewise-singer-python\n===================\n[![pypi version](https://badge.fury.io/py/pipelinewise-singer-python.svg)](https://badge.fury.io/py/pipelinewise-singer-python)\n[![pypi - python version](https://img.shields.io/pypi/pyversions/pipelinewise-singer-python.svg)](https://pypi.org/project/pipelinewise-singer-python/)\n[![license: mit](https://img.shields.io/badge/license-apache2-yellow.svg)](https://opensource.org/licenses/apache-2.0)\n\nwrites the singer format from python.\n\nthis is a fork of [singer's singer-python](https://github.com/singer-io/singer-python) made for [pipelinewise](https://transferwise.github.io/pipelinewise).\n\nusage\n---\n\n### setup environment\nthis library depends on python3. we recommend using a `virtualenv` like this:\n\n```bash\npython3 -m venv ~/.virtualenvs/singer-python\n```\n\n### installation\nnext, install this library:\n\n```bash\nsource ~/.virtualenvs/singer-python/bin/activate\ngit clone http://github.com/singer-io/singer-python\ncd singer-python\nmake install\n```\n\n### usage example\nnow, from python code within the same `virtualenv`, you can use the library:\n\n```python\nimport singer\n\nsinger.write_schema('my_table',\n\t            {'properties':{'id': {'type': 'string', 'key': true}}},\n\t\t    ['id'])\nsinger.write_records('my_table',\n                     [{'id': 'b'}, {'id':'d'}])\nsinger.write_state({'my_table': 'd'})\n```\n\n### logging configuration\n\n**pipelinewise-singer-python** by default doesn't use any predefined logging configuration, it's up to the calling \nlibrary to define it. however, if the environment variable `logging_conf_file` is found and set then the **pipelinewise-singer-python** \nwould use the path provided in the env variable as the logging configuration for the logger. \n\n\nlicense\n-------\n\ndistributed under the apache license version 2.0\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "pipelinewise-singer-python",
  "package_url": "https://pypi.org/project/pipelinewise-singer-python/",
  "project_url": "https://pypi.org/project/pipelinewise-singer-python/",
  "project_urls": {
    "Homepage": "https://github.com/transferwise/pipelinewise-singer-python"
  },
  "release_url": "https://pypi.org/project/pipelinewise-singer-python/2.0.1/",
  "requires_dist": [
    "pytz",
    "jsonschema (==3.2.0)",
    "orjson (==3.6.1)",
    "python-dateutil (>=2.6.0)",
    "backoff (==1.11.1)",
    "ciso8601",
    "pylint (==2.11.1) ; extra == 'dev'",
    "ipython ; extra == 'dev'",
    "ipdb ; extra == 'dev'",
    "nose ; extra == 'dev'",
    "unify (==0.5) ; extra == 'dev'"
  ],
  "requires_python": "",
  "summary": "singer.io utility library - pipelinewise compatible",
  "version": "2.0.1",
  "releases": [],
  "developers": [
    "transferwise"
  ],
  "kwds": "pipelinewise python3 pyversions pypi python",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pipelinewise_singer_python",
  "homepage": "https://github.com/transferwise/pipelinewise-singer-python",
  "release_count": 10,
  "dependency_ids": [
    "pypi_backoff",
    "pypi_ciso8601",
    "pypi_ipdb",
    "pypi_ipython",
    "pypi_jsonschema",
    "pypi_nose",
    "pypi_orjson",
    "pypi_pylint",
    "pypi_python_dateutil",
    "pypi_pytz",
    "pypi_unify"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: end users/desktop",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: database"
  ],
  "description": "# sqlite-utils\n\n[![pypi](https://img.shields.io/pypi/v/sqlite-utils.svg)](https://pypi.org/project/sqlite-utils/)\n[![changelog](https://img.shields.io/github/v/release/simonw/sqlite-utils?include_prereleases&label=changelog)](https://sqlite-utils.datasette.io/en/stable/changelog.html)\n[![python 3.x](https://img.shields.io/pypi/pyversions/sqlite-utils.svg?logo=python&logocolor=white)](https://pypi.org/project/sqlite-utils/)\n[![tests](https://github.com/simonw/sqlite-utils/workflows/test/badge.svg)](https://github.com/simonw/sqlite-utils/actions?query=workflow%3atest)\n[![documentation status](https://readthedocs.org/projects/sqlite-utils/badge/?version=stable)](http://sqlite-utils.datasette.io/en/stable/?badge=stable)\n[![codecov](https://codecov.io/gh/simonw/sqlite-utils/branch/main/graph/badge.svg)](https://codecov.io/gh/simonw/sqlite-utils)\n[![license](https://img.shields.io/badge/license-apache%202.0-blue.svg)](https://github.com/simonw/sqlite-utils/blob/main/license)\n[![discord](https://img.shields.io/discord/823971286308356157?label=discord)](https://discord.gg/ass7bcamdw)\n\npython cli utility and library for manipulating sqlite databases.\n\n## some feature highlights\n\n- [pipe json](https://sqlite-utils.datasette.io/en/stable/cli.html#inserting-json-data) (or [csv or tsv](https://sqlite-utils.datasette.io/en/stable/cli.html#inserting-csv-or-tsv-data)) directly into a new sqlite database file, automatically creating a table with the appropriate schema\n- [run in-memory sql queries](https://sqlite-utils.datasette.io/en/stable/cli.html#querying-data-directly-using-an-in-memory-database), including joins, directly against data in csv, tsv or json files and view the results\n- [configure sqlite full-text search](https://sqlite-utils.datasette.io/en/stable/cli.html#configuring-full-text-search) against your database tables and run search queries against them, ordered by relevance\n- run [transformations against your tables](https://sqlite-utils.datasette.io/en/stable/cli.html#transforming-tables) to make schema changes that sqlite `alter table` does not directly support, such as changing the type of a column\n- [extract columns](https://sqlite-utils.datasette.io/en/stable/cli.html#extracting-columns-into-a-separate-table) into separate tables to better normalize your existing data\n- [install plugins](https://sqlite-utils.datasette.io/en/stable/plugins.html) to add custom sql functions and additional features\n\nread more on my blog, in this series of posts on [new features in sqlite-utils](https://simonwillison.net/series/sqlite-utils-features/) and other [entries tagged sqliteutils](https://simonwillison.net/tags/sqliteutils/).\n\n## installation\n\n    pip install sqlite-utils\n\nor if you use [homebrew](https://brew.sh/) for macos:\n\n    brew install sqlite-utils\n\n## using as a cli tool\n\nnow you can do things with the cli utility like this:\n\n    $ sqlite-utils memory dogs.csv \"select * from t\"\n    [{\"id\": 1, \"age\": 4, \"name\": \"cleo\"},\n     {\"id\": 2, \"age\": 2, \"name\": \"pancakes\"}]\n\n    $ sqlite-utils insert dogs.db dogs dogs.csv --csv\n    [####################################]  100%\n\n    $ sqlite-utils tables dogs.db --counts\n    [{\"table\": \"dogs\", \"count\": 2}]\n\n    $ sqlite-utils dogs.db \"select id, name from dogs\"\n    [{\"id\": 1, \"name\": \"cleo\"},\n     {\"id\": 2, \"name\": \"pancakes\"}]\n\n    $ sqlite-utils dogs.db \"select * from dogs\" --csv\n    id,age,name\n    1,4,cleo\n    2,2,pancakes\n\n    $ sqlite-utils dogs.db \"select * from dogs\" --table\n      id    age  name\n    ----  -----  --------\n       1      4  cleo\n       2      2  pancakes\n\nyou can import json data into a new database table like this:\n\n    $ curl https://api.github.com/repos/simonw/sqlite-utils/releases \\\n        | sqlite-utils insert releases.db releases - --pk id\n\nor for data in a csv file:\n\n    $ sqlite-utils insert dogs.db dogs dogs.csv --csv\n\n`sqlite-utils memory` lets you import csv or json data into an in-memory database and run sql queries against it in a single command:\n\n    $ cat dogs.csv | sqlite-utils memory - \"select name, age from stdin\"\n\nsee the [full cli documentation](https://sqlite-utils.datasette.io/en/stable/cli.html) for comprehensive coverage of many more commands.\n\n## using as a library\n\nyou can also `import sqlite_utils` and use it as a python library like this:\n\n```python\nimport sqlite_utils\ndb = sqlite_utils.database(\"demo_database.db\")\n# this line creates a \"dogs\" table if one does not already exist:\ndb[\"dogs\"].insert_all([\n    {\"id\": 1, \"age\": 4, \"name\": \"cleo\"},\n    {\"id\": 2, \"age\": 2, \"name\": \"pancakes\"}\n], pk=\"id\")\n```\n\ncheck out the [full library documentation](https://sqlite-utils.datasette.io/en/stable/python-api.html) for everything else you can do with the python library.\n\n## related projects\n\n* [datasette](https://datasette.io/): a tool for exploring and publishing data\n* [csvs-to-sqlite](https://github.com/simonw/csvs-to-sqlite): convert csv files into a sqlite database\n* [db-to-sqlite](https://github.com/simonw/db-to-sqlite): cli tool for exporting a mysql or postgresql database as a sqlite file\n* [dogsheep](https://dogsheep.github.io/): a family of tools for personal analytics, built on top of `sqlite-utils`\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license, version 2.0",
  "name": "sqlite-utils",
  "package_url": "https://pypi.org/project/sqlite-utils/",
  "project_url": "https://pypi.org/project/sqlite-utils/",
  "project_urls": {
    "CI": "https://github.com/simonw/sqlite-utils/actions",
    "Changelog": "https://sqlite-utils.datasette.io/en/stable/changelog.html",
    "Documentation": "https://sqlite-utils.datasette.io/en/stable/",
    "Homepage": "https://github.com/simonw/sqlite-utils",
    "Issues": "https://github.com/simonw/sqlite-utils/issues",
    "Source code": "https://github.com/simonw/sqlite-utils"
  },
  "release_url": "https://pypi.org/project/sqlite-utils/3.36/",
  "requires_dist": [
    "sqlite-fts4",
    "click",
    "click-default-group >=1.2.3",
    "tabulate",
    "python-dateutil",
    "pluggy",
    "furo ; extra == 'docs'",
    "sphinx-autobuild ; extra == 'docs'",
    "codespell ; extra == 'docs'",
    "sphinx-copybutton ; extra == 'docs'",
    "beanbag-docutils >=2.0 ; extra == 'docs'",
    "pygments-csv-lexer ; extra == 'docs'",
    "flake8 ; extra == 'flake8'",
    "mypy ; extra == 'mypy'",
    "types-click ; extra == 'mypy'",
    "types-tabulate ; extra == 'mypy'",
    "types-python-dateutil ; extra == 'mypy'",
    "types-pluggy ; extra == 'mypy'",
    "data-science-types ; extra == 'mypy'",
    "pytest ; extra == 'test'",
    "black ; extra == 'test'",
    "hypothesis ; extra == 'test'",
    "cogapp ; extra == 'test'",
    "trogon ; extra == 'tui'"
  ],
  "requires_python": ">=3.7",
  "summary": "cli tool and python library for manipulating sqlite databases",
  "version": "3.36",
  "releases": [],
  "developers": [
    "simon_willison"
  ],
  "kwds": "sqlite sqliteutils sqlite_utils changelog pyversions",
  "license_kwds": "apache license, version 2.0",
  "libtype": "pypi",
  "id": "pypi_sqlite_utils",
  "homepage": "https://github.com/simonw/sqlite-utils",
  "release_count": 123,
  "dependency_ids": [
    "pypi_beanbag_docutils",
    "pypi_black",
    "pypi_click",
    "pypi_click_default_group",
    "pypi_codespell",
    "pypi_cogapp",
    "pypi_data_science_types",
    "pypi_flake8",
    "pypi_furo",
    "pypi_hypothesis",
    "pypi_mypy",
    "pypi_pluggy",
    "pypi_pygments_csv_lexer",
    "pypi_pytest",
    "pypi_python_dateutil",
    "pypi_sphinx_autobuild",
    "pypi_sphinx_copybutton",
    "pypi_sqlite_fts4",
    "pypi_tabulate",
    "pypi_trogon",
    "pypi_types_click",
    "pypi_types_pluggy",
    "pypi_types_python_dateutil",
    "pypi_types_tabulate"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: c++",
    "programming language :: cython",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: information analysis",
    "topic :: software development :: libraries",
    "topic :: system :: distributed computing"
  ],
  "description": "# cityhash/farmhash\n\npython wrapper for [farmhash](https://github.com/google/farmhash) and\n[cityhash](https://github.com/google/cityhash), a family of fast\nnon-cryptographic hash functions.\n\n[![build status](https://img.shields.io/github/actions/workflow/status/escherba/python-cityhash/build.yml?branch=master)](https://github.com/escherba/python-cityhash/actions/workflows/build.yml)\n[![pypi version](https://img.shields.io/pypi/v/cityhash.svg)](https://pypi.python.org/pypi/cityhash)\n[![conda-forge version](https://anaconda.org/conda-forge/python-cityhash/badges/version.svg)](https://anaconda.org/conda-forge/python-cityhash)\n[![downloads](https://img.shields.io/pypi/dm/cityhash.svg)](https://pypistats.org/packages/cityhash)\n[![license](https://img.shields.io/pypi/l/cityhash.svg)](https://opensource.org/licenses/mit-license)\n[![supported python versions](https://img.shields.io/pypi/pyversions/cityhash.svg)](https://pypi.python.org/pypi/cityhash)\n\n## getting started\n\nto install from pypi:\n\n``` bash\npip install cityhash\n```\n\nto install in a conda environment:\n\n``` bash\nconda install -c conda-forge python-cityhash\n```\n\nthe package exposes python apis for cityhash and farmhash under `cityhash` and\n`farmhash` namespaces, respectively. each provides 32-, 64- and 128-bit\nimplementations.\n\n## usage examples\n\n### stateless hashing\n\nusage example for farmhash:\n\n``` python\n>>> from farmhash import farmhash32, farmhash64, farmhash128\n>>> farmhash32(\"abc\")\n1961358185\n>>> farmhash64(\"abc\")\n2640714258260161385\n>>> farmhash128(\"abc\")\n76434233956484675513733017140465933893\n\n```\n\n### hardware-independent fingerprints\n\nfingerprints are seedless hashes that are guaranteed to be hardware- and\nplatform-independent. this can be useful for networking applications which\nrequire persisting hashed values.\n\n``` python\n>>> from farmhash import fingerprint128\n>>> fingerprint128(\"abc\")\n76434233956484675513733017140465933893\n\n```\n\n### incremental hashing\n\ncityhash and farmhash do not support incremental hashing and thus are not ideal\nfor hashing of character streams. if you require incremental hashing, consider\nanother hashing library, such as\n[metrohash](https://github.com/escherba/python-metrohash) or\n[xxhash](https://github.com/ifduyue/python-xxhash).\n\n### fast hashing of numpy arrays\n\nthe [buffer protocol](https://docs.python.org/3/c-api/buffer.html) allows\npython objects to expose their data as raw byte arrays for fast access without\nhaving to copy to a separate location in memory. numpy is one well-known\nlibrary that extensively uses this protocol.\n\nall hashing functions in this package will read byte arrays from objects that\nexpose them via the buffer protocol. here is an example showing hashing of a\nfour-dimensional numpy array:\n\n``` python\n>>> import numpy as np\n>>> from farmhash import farmhash64\n>>> arr = np.zeros((256, 256, 4))\n>>> farmhash64(arr)\n1550282412043536862\n\n```\n\nthe numpy arrays need to be contiguous for this to work. to convert a\nnon-contiguous array, use numpy's `ascontiguousarray()` function.\n\n## sse4.2 support\n\nfor x86-64 platforms, the pypi repository for this package includes wheels\ncompiled with sse4.2 support.  the 32- and 64-bit (but not the 128-bit)\nvariants of farmhash significantly benefit from sse4.2 instructions.\n\nthe vanilla cityhash functions (under `cityhash` module) do not take advantage\nof sse4.2. instead, one can use the `cityhashcrc` module provided with this\npackage which exposes 128- and 256-bit crc functions that do harness sse4.2.\nthese functions are very fast, and beat `farmhash128` on speed (farmhash does\nnot include a 256-bit function). since farmhash is the intended successor of\ncityhash, i would be careful before using the cityhash-crc functions, however,\nand would verify whether they provide sufficient randomness for your intended\napplication.\n\n## development\n\n### local workflow\n\nfor those wanting to contribute, here is a quick start using make commands:\n\n``` bash\ngit clone https://github.com/escherba/python-cityhash.git\ncd python-cityhash\nmake env           # create a virtual environment\nmake test          # run python tests\nmake cpp-test      # run c++ tests\nmake shell         # enter ipython shell\n```\n\nto find out which make targets are available, enter:\n\n``` bash\nmake help\n```\n\n### distribution\n\nthe package wheels are built using\n[cibuildwheel](https://cibuildwheel.readthedocs.io/) and are distributed to\npypi using github actions. the wheels contain compiled binaries and are\navailable for the following platforms: windows-amd64, ubuntu-x86,\nlinux-x86\\_64, linux-aarch64, and macosx-x86\\_64.\n\n## see also\n\nfor other fast non-cryptographic hash functions available as python extensions,\nsee [metrohash](https://github.com/escherba/python-metrohash),\n[murmurhash](https://github.com/hajimes/mmh3), and\n[xxhash](https://github.com/ifduyue/python-xxhash).\n\n## authors\n\nthe original cityhash python bindings are due to alexander \\[amper\\] marshalov.\nthey were rewritten in cython by eugene scherba, who also added the farmhash\nbindings. the cityhash and farmhash algorithms and their c++ implementation are\nby google.\n\n## license\n\nthis software is licensed under the [mit\nlicense](http://www.opensource.org/licenses/mit-license). see the included\nlicense file for details.\n",
  "docs_url": null,
  "keywords": "google,hash,hashing,cityhash,farmhash,murmurhash,cython",
  "license": "mit",
  "name": "cityhash",
  "package_url": "https://pypi.org/project/cityhash/",
  "project_url": "https://pypi.org/project/cityhash/",
  "project_urls": {
    "Download": "https://github.com/escherba/python-cityhash/tarball/master/0.4.7",
    "Homepage": "https://github.com/escherba/python-cityhash"
  },
  "release_url": "https://pypi.org/project/cityhash/0.4.7/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "python bindings for cityhash and farmhash",
  "version": "0.4.7",
  "releases": [],
  "developers": [
    "escherba+cityhash@gmail.com",
    "eugene_scherba"
  ],
  "kwds": "farmhash farmhash32 cityhash farmhash64 murmurhash",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_cityhash",
  "homepage": "https://github.com/escherba/python-cityhash",
  "release_count": 78,
  "dependency_ids": []
}
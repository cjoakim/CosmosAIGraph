{
  "classifiers": [
    "development status :: 6 - mature",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.2",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: astronomy"
  ],
  "description": "==============\npyephem readme\n==============\n\n.. _ephem: http://pypi.python.org/pypi/ephem/\n.. _pyephem: http://pypi.python.org/pypi/pyephem/\n.. _xephem: http://www.clearskyinstitute.com/xephem/\n.. _quick reference: http://rhodesmill.org/pyephem/quick\n.. _tutorial: http://rhodesmill.org/pyephem/tutorial\n.. _pyephem web site: http://rhodesmill.org/pyephem/\n\npyephem provides an ``ephem`` python package\nfor performing high-precision astronomy computations.\nthe underlying numeric routines are coded in c\nand are the same ones that drive the popular `xephem`_ astronomy application,\nwhose author, elwood charles downey,\ngenerously gave permission for their use in pyephem.\nthe name *ephem* is short for the word *ephemeris*,\nwhich is the traditional term for a table\ngiving the position of a planet, asteroid, or comet for a series of dates.\n\nthe `pyephem web site`_ offers documentation\nand also links to the project bug tracker, user support forum,\nand source code repository.\nif you have a c compiler and the\n`pip python installer tool <https://pip.pypa.io/en/latest/installing.html>`_\non your system,\nthen installing pyephem should be as easy as::\n\n  pip install ephem\n\nthere are also windows installers in the downloads section below.\n\nthe design of pyephem emphasizes convenience and ease of use.\nboth celestial bodies and the observer's location on earth\nare represented by python objects,\nwhile dates and angles automatically print themselves\nin standard astronomical formats::\n\n >>> import ephem\n >>> mars = ephem.mars()\n >>> mars.compute('2008/1/1')\n >>> print(mars.ra)\n 5:59:27.35\n >>> print(mars.dec)\n 26:56:27.4\n\nthe documentation includes both a `quick reference`_ and a `tutorial`_,\nwhich are included in text files within the module itself\nas well as being available on the `pyephem web site`_.\n\nthe features provided by pyephem include:\n\n* find where a planet, comet, or asteroid is in the sky.\n\n  * high-precision orbital routines are provdied\n    for the moon, sun, planets, and the major planet moons.\n  * the user can supply the orbital elements of a comet, asteroid,\n    or earth-orbiting satellite, and have its location computed.\n  * the positions of 94 bright stars come built-in,\n    and the user can create further fixed objects as needed\n    for their calculations.\n\n* determine where in the sky an object appears for a particular observer.\n\n  * the user can supply the longitude, latitude, and altitude\n    of the location from which they will be observing.\n  * for convenience, a small database of longitudes and latitudes\n    for 122 world cities is included.\n  * for specified weather conditions (temperature and pressure),\n    pyephem will compensate for atmospheric refraction\n    by adjusting the positions of bodies near the horizon.\n\n* compute when a body will rise, transit overhead, and set\n  from a particular location.\n\n* parse and use orbital data in either the traditional xephem file format,\n  or the standard tle format used for tracking earth-orbiting satellites.\n\n* determine the dates of the equinoxes and solstices.\n\n* compute the dates of the various phases of the moon.\n\n* convert from the greenwich time (more precisely, ephemeris time)\n  which pyephem uses to the local time of the user.\n\n* convert positions between the equatorial, ecliptic, and galactic\n  coordinate systems.\n\n* determine on which page of the uranometria or the millennium star atlas\n  a particular star should appear.\n\n* return the julian date corresponding to any calendar date.\n\ndevelopers\n----------\n\nif you are interested in learning about how pyephem works or in\nexploring its source code, check out this repository from github.  it is\nhosted at:\n\nhttps://github.com/brandon-rhodes/pyephem\n\nif you lack expertise with version control, you can instead simply\ndownload a static copy of the most recent source code using this link:\n\nhttps://github.com/brandon-rhodes/pyephem/archive/master.zip\n\nto run its source code in place, create a `virtual environment\n<http://docs.python-guide.org/en/latest/dev/virtualenvs/>`_, activate\nit, change directory to the root of the pyephem source code, and run::\n\n    python setup.py build_ext -i\n\nyou can then run the pyephem test suite to see whether all of its\nfeatures are working correctly on your operating system and platform::\n\n    python -m unittest discover ephem\n\npyephem\u2019s documentation is organized as a standard `sphinx\n<http://www.sphinx-doc.org/en/master/>`_ document project.  you can\nbuild the documentation either with the sphinx command line::\n\n    sphinx-build -b html pyephem/ephem/doc/ ./my_documentation_directory/\n\n\u2014 or, more typically, by invoking one of the targets in the\ndocumentation\u2019s makefile::\n\n    make -c ephem/doc html\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "ephem",
  "package_url": "https://pypi.org/project/ephem/",
  "project_url": "https://pypi.org/project/ephem/",
  "project_urls": {
    "Homepage": "http://rhodesmill.org/pyephem/",
    "Source": "https://github.com/brandon-rhodes/pyephem"
  },
  "release_url": "https://pypi.org/project/ephem/4.1.5/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "compute positions of the planets and stars",
  "version": "4.1.5",
  "releases": [],
  "developers": [
    "brandon@rhodesmill.org",
    "brandon_rhodes"
  ],
  "kwds": "python _xephem xephem astronomy ephem",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_ephem",
  "homepage": "http://rhodesmill.org/pyephem/",
  "release_count": 17,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: information technology",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# html to json\n\n[![pypi](https://img.shields.io/pypi/v/html-to-json.svg)](https://pypi.python.org/pypi/html-to-json)\n[![build status](https://travis-ci.com/fhightower/html-to-json.svg?branch=main)](https://travis-ci.com/fhightower/html-to-json)\n[![codecov](https://codecov.io/gh/fhightower/html-to-json/branch/main/graph/badge.svg?token=v0woixrgmm)](https://codecov.io/gh/fhightower/html-to-json)\n\nconvert html and/or html tables to json.\n\n## installation\n\n```\npip install html-to-json\n```\n\n## usage\n\n### html to json\n\n```python\nimport html_to_json\n\nhtml_string = \"\"\"<head>\n    <title>test site</title>\n    <meta charset=\"utf-8\"></head>\"\"\"\noutput_json = html_to_json.convert(html_string)\nprint(output_json)\n```\n\nwhen calling the `html_to_json.convert` function, you can choose to not capture the text values from the html by passing in the key-word argument `capture_element_values=false`. you can also choose to not capture the attributes of the elements by passing `capture_element_attributes=false` into the function.\n\n#### example\n\nexample input:\n\n```html\n<head>\n    <title>floyd hightower's projects</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"description\" content=\"floyd hightower&#39;s projects\">\n    <meta name=\"keywords\" content=\"projects,fhightower,floyd,hightower\">\n</head>\n```\n\nexample output:\n\n```json\n{\n    \"head\": [\n    {\n        \"title\": [\n        {\n            \"_value\": \"floyd hightower's projects\"\n        }],\n        \"meta\": [\n        {\n            \"_attributes\":\n            {\n                \"charset\": \"utf-8\"\n            }\n        },\n        {\n            \"_attributes\":\n            {\n                \"name\": \"description\",\n                \"content\": \"floyd hightower's projects\"\n            }\n        },\n        {\n            \"_attributes\":\n            {\n                \"name\": \"keywords\",\n                \"content\": \"projects,fhightower,floyd,hightower\"\n            }\n        }]\n    }]\n}\n```\n\n### html tables to json\n\nin addition to converting html to json, this library can also intelligently convert html tables to json.\n\ncurrently, this library can handle three types of tables:\n\na. those with [table headers](https://developer.mozilla.org/en-us/docs/web/html/element/th) in the first row\nb. those with table headers in the first column\nc. those without table headers\n\ntables of type a and b are diagrammed below:\n\n![this package can handle tables with the headers in the first row or headers in the first column](./html_table_varieties.jpg)\n\n#### example\n\nthis code:\n\n```python\nimport html_to_json\n\nhtml_string = \"\"\"<table>\n    <tr>\n        <th>#</th>\n        <th>malware</th>\n        <th>md5</th>\n        <th>date added</th>\n    </tr>\n\n    <tr>\n        <td>25548</td>\n        <td><a href=\"/stats/darkcomet/\">darkcomet</a></td>\n        <td><a href=\"/config/034a37b2a2307f876adc9538986d7b86\">034a37b2a2307f876adc9538986d7b86</a></td>\n        <td>july 9, 2018, 6:25 a.m.</td>\n    </tr>\n\n    <tr>\n        <td>25547</td>\n        <td><a href=\"/stats/darkcomet/\">darkcomet</a></td>\n        <td><a href=\"/config/706eeefbac3de4d58b27d964173999c3\">706eeefbac3de4d58b27d964173999c3</a></td>\n        <td>july 7, 2018, 6:25 a.m.</td>\n    </tr></table>\"\"\"\ntables = html_to_json.convert_tables(html_string)\nprint(tables)\n```\n\nwill produce this output:\n\n```json\n[\n    [\n        {\n            \"#\": \"25548\",\n            \"malware\": \"darkcomet\",\n            \"md5\": \"034a37b2a2307f876adc9538986d7b86\",\n            \"date added\": \"july 9, 2018, 6:25 a.m.\"\n        }, {\n            \"#\": \"25547\",\n            \"malware\": \"darkcomet\",\n            \"md5\": \"706eeefbac3de4d58b27d964173999c3\",\n            \"date added\": \"july 7, 2018, 6:25 a.m.\"\n        }\n    ]\n]\n```\n\n## credits\n\nthis package was created with [cookiecutter](https://github.com/audreyr/cookiecutter) and fhightower's [python project template](https://github.com/fhightower-templates/python-project-template).\n\n\n",
  "docs_url": null,
  "keywords": "html to json,html,json,conversion",
  "license": "mit license",
  "name": "html-to-json",
  "package_url": "https://pypi.org/project/html-to-json/",
  "project_url": "https://pypi.org/project/html-to-json/",
  "project_urls": {
    "CI": "https://travis-ci.com/fhightower/html-to-json.svg?branch=main",
    "Changelog": "https://github.com/fhightower/html-to-json/blob/main/CHANGELOG.md",
    "Documentation": "https://github.com/fhightower/html-to-json",
    "Homepage": "https://github.com/fhightower/html-to-json",
    "PyPi": "https://pypi.org/project/html-to-json/",
    "Say Thanks!": "https://saythanks.io/to/floyd.hightower27%40gmail.com",
    "Source": "https://github.com/fhightower/html-to-json",
    "Tracker": "https://github.com/fhightower/html-to-json/issues"
  },
  "release_url": "https://pypi.org/project/html-to-json/2.0.0/",
  "requires_dist": [
    "bs4"
  ],
  "requires_python": "",
  "summary": "convert html to json.",
  "version": "2.0.0",
  "releases": [],
  "developers": [
    "floyd_hightower"
  ],
  "kwds": "html_to_json output_json json html_string pip",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_html_to_json",
  "homepage": "https://github.com/fhightower/html-to-json",
  "release_count": 3,
  "dependency_ids": [
    "pypi_bs4"
  ]
}
{
  "classifiers": [],
  "description": "[![actions status](https://github.com/pulumi/pulumi-aws/workflows/master/badge.svg)](https://github.com/pulumi/pulumi-aws/actions)\n[![slack](http://www.pulumi.com/images/docs/badges/slack.svg)](https://slack.pulumi.com)\n[![npm version](https://badge.fury.io/js/%40pulumi%2faws.svg)](https://www.npmjs.com/package/@pulumi/aws)\n[![python version](https://badge.fury.io/py/pulumi-aws.svg)](https://pypi.org/project/pulumi-aws)\n[![nuget version](https://badge.fury.io/nu/pulumi.aws.svg)](https://badge.fury.io/nu/pulumi.aws)\n[![pkggodev](https://pkg.go.dev/badge/github.com/pulumi/pulumi-aws/sdk/v6/go)](https://pkg.go.dev/github.com/pulumi/pulumi-aws/sdk/v6/go)\n[![license](https://img.shields.io/github/license/pulumi/pulumi-aws)](https://github.com/pulumi/pulumi-aws/blob/master/license)\n\n# amazon web services (aws) provider\n\nthe amazon web services (aws) resource provider for pulumi lets you use aws resources in your cloud programs. to use\nthis package, [install the pulumi cli](https://www.pulumi.com/docs/get-started/install/). for a streamlined pulumi walkthrough, including language runtime installation and aws configuration, select \"get started\" below.\n\n<div>\n    <a href=\"https://www.pulumi.com/docs/get-started/aws\" title=\"get started\">\n       <img src=\"https://www.pulumi.com/images/get-started.svg?\" width=\"120\">\n    </a>\n</div>\n\n## installing\n\nthis package is available in many languages in the standard packaging formats.\n\n### node.js (java/typescript)\n\nto use from javascript or typescript in node.js, install using either `npm`:\n\n    $ npm install @pulumi/aws\n\nor `yarn`:\n\n    $ yarn add @pulumi/aws\n\n### python\n\nto use from python, install using `pip`:\n\n    $ pip install pulumi_aws\n\n### go\n\nto use from go, use `go get` to grab the latest version of the library\n\n    $ go get github.com/pulumi/pulumi-aws/sdk/v6\n\n### .net\n\nto use from .net, install using `dotnet add package`:\n\n    $ dotnet add package pulumi.aws\n\n## concepts\n\nthe `@pulumi/aws` package provides a strongly-typed means to create cloud applications that create and interact closely\nwith aws resources.  resources are exposed for the entirety of aws resources and their properties, including (but not\nlimited to), 'apigateway', 'cloudformation', 'ec2', 'ecs', 'iam', 'lambda', etc.  many convenience apis have also been\nadded to make development easier and to help avoid common mistakes, and to get stronger typing.\n\n### serverless functions\n\nthe `aws.lambda.callbackfunction` class allows you to create an aws lambda function directly out of a javascript/typescript\nfunction object of the right signature. this allows a pulumi program to simply define a lambda using a simple lambda in\nthe language of choice, while having pulumi itself do the appropriate transformation into the final aws lambda resource.\n\nthis makes many apis easier to use, such as defining a lambda to execute when an s3 bucket is manipulated,\nor a cloudwatch timer is fired. to see some examples of this in action, please refer to the `examples/` directory.\n\n## configuration\n\nthe following configuration points are available:\n\n- `aws:region` - (required) this is the aws region.\n\n- `aws:accesskey` - (optional) this is the aws access key. it can also be sourced from the\n  `aws_access_key_id` environment variable, or via a shared credentials file if `aws:profile` is specified.\n- `aws:secretkey` - (optional) this is the aws secret key. it can also be sourced from the\n  `aws_secret_access_key` environment variable, or via a shared credentials file if `aws:profile` is specified.\n- `aws:profile` - (optional) this is the aws profile name as set in the shared credentials file.\n- `aws:sharedcredentialsfiles` - (optional) list of paths to the shared credentials file. if not set and a profile\n  is used, the default value is [~/.aws/credentials]. a single value can also be set with the\n  `aws_shared_credentials_file` environment variable.\n- `aws:token` - (optional) session token for validating temporary credentials. typically provided after successful\n  identity federation or multi-factor authentication (mfa) login. with mfa login, this is the session token provided\n  afterward, not the 6 digit mfa code used to get temporary credentials. it can also be sourced from the\n  `aws_session_token` environment variable.\n- `aws:maxretries` - (optional) this is the maximum number of times an api call is retried, in the case where requests\n  are being throttled or experiencing transient failures. the delay between the subsequent api calls increases\n  exponentially. if omitted, the default value is `25`.\n- `aws:allowedaccountids` - (optional)  list of allowed aws account ids to prevent you from mistakenly using an incorrect\n  one. conflicts with `aws:forbiddenaccountids`.\n- `aws:forbiddenaccountids` - (optional) list of forbidden aws account ids to prevent you from mistakenly using the wrong\n  one. conflicts with `aws:allowedaccountids`.\n- `aws:assumerole` - (optional) supports the following (optional) arguments:\n  `durationsections`: number of seconds to restrict the assume role session duration.\n  `externalid`: external identifier to use when assuming the role.\n  `policy`: iam policy json describing further restricting permissions for the iam role being assumed.\n  `policyarns`: set of amazon resource names (arns) of iam policies describing further restricting permissions for the role.\n  `rolearn`: amazon resource name (arn) of the iam role to assume.\n  `sessionname`: session name to use when assuming the role.\n  `tags`: map of assume role session tags.\n- `aws:insecure` - (optional) explicitly allow the provider to perform \"insecure\" ssl requests. if omitted, the default value is `false`.\n- `aws:skipcredentialsvalidation` - (optional) skip the credentials validation via the sts api. useful for aws api implementations that do not have sts available or implemented. default value is `false`. can be set via the environment variable `aws_skip_credentials_validation`.\n- `aws:skipregionvalidation` - (optional) skip validation of provided region name. useful for aws-like implementations that use their own region names or to bypass the validation for regions that aren't publicly available yet. default value is `true`.\n- `aws:skiprequestionaccountid` - (optional) skip requesting the account id. useful for aws api implementations that do not have the iam, sts api, or metadata api. default value is `false`. when specified, the use of arns is compromised as there is no accountid available to construct the arn.\n- `aws:skipmetadataapicheck` - (optional) skip the aws metadata api check. useful for aws api implementations that do not have a metadata api endpoint. this provider from authenticating via the metadata api by default. you may need to use other authentication methods like static credentials, configuration variables, or environment variables. default is `true`. can be set via the environment variable `aws_skip_metadata_api_check`.\n- `aws:s3usepathstyle` - (optional) set this to true to force the request to use path-style addressing, i.e., `http://s3.amazonaws.com/bucket/key`. by default, the s3 client will use virtual hosted bucket addressing, `http://bucket.s3.amazonaws.com/key`, when possible. specific to the amazon s3 service. default is `false`.\n\n### authenticating pulumi-aws via ec2 instance metadata?\n\nas of pulumi-aws v3.28.1, the default behaviour for the provider [was changed](https://github.com/pulumi/pulumi-aws/blob/master/changelog_old.md#3281-2021-02-10) to disable metadataapicheck by default. this means, you need to do either of the following\n\n1. when using the default provider:\n```\npulumi config set aws:skipmetadataapicheck false\n```\n\n2. when using a named provider\n```typescript\nconst myprovider = new aws.provider(\"named-provider\", {\n  // other config\n  skipmetadataapicheck: false,\n});\n```\n\n```csharp\nvar provider = new aws.provider(\"named-provider\", new aws.providerargs\n{\n  // other config\n  skipmetadataapicheck = false,\n});\n```\n\n```go\nprovider, err := aws.newprovider(ctx, \"named-provider\", &aws.providerargs{\n    // other config\n    skipmetadataapicheck: pulumi.boolptr(false),\n})\n```\n\n```python\nprovider = pulumi_aws.provider('named-provider', skip_metadata_api_check=false)\n```\n\n## reference\n\nfor further information, visit [aws in the pulumi registry](https://www.pulumi.com/registry/packages/aws/)\nor for detailed api reference documentation, visit [aws api docs in the pulumi registry](https://www.pulumi.com/registry/packages/aws/api-docs/).\n",
  "docs_url": null,
  "keywords": "pulumi,aws",
  "license": "apache-2.0",
  "name": "pulumi-aws",
  "package_url": "https://pypi.org/project/pulumi-aws/",
  "project_url": "https://pypi.org/project/pulumi-aws/",
  "project_urls": {
    "Homepage": "https://pulumi.io",
    "Repository": "https://github.com/pulumi/pulumi-aws"
  },
  "release_url": "https://pypi.org/project/pulumi-aws/6.17.0/",
  "requires_dist": [
    "parver >=0.2.1",
    "pulumi <4.0.0,>=3.0.0",
    "semver >=2.8.1"
  ],
  "requires_python": ">=3.7",
  "summary": "a pulumi package for creating and managing amazon web services (aws) cloud resources.",
  "version": "6.17.0",
  "releases": [],
  "developers": [],
  "kwds": "pulumi_aws badge badges svg slack",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_pulumi_aws",
  "homepage": "",
  "release_count": 1157,
  "dependency_ids": [
    "pypi_parver",
    "pypi_pulumi",
    "pypi_semver"
  ]
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: scientific/engineering :: information analysis"
  ],
  "description": "# lightning \u26a1 graphcore\n\n**audience:** users looking to save money and run large models faster using single or multiple ipu devices.\n\n[![lightning](https://img.shields.io/badge/-lightning_2.0+-792ee5?logo=pytorchlightning&logocolor=white)](https://lightning.ai/)\n[![build status](https://dev.azure.com/lightning-ai/compatibility/_apis/build/status%2faccelerators%2flightning-ai.lightning-graphcore?branchname=main)](https://dev.azure.com/lightning-ai/compatibility/_build/latest?definitionid=48&branchname=main)\n[![general checks](https://github.com/lightning-ai/lightning-graphcore/actions/workflows/ci-checks.yml/badge.svg?event=push)](https://github.com/lightning-ai/lightning-graphcore/actions/workflows/ci-checks.yml)\n[![deploy docs](https://github.com/lightning-ai/lightning-graphcore/actions/workflows/docs-deploy.yml/badge.svg?event=push)](https://lightning-ai.github.io/lightning-graphcore/)\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/lightning-ai/lightning-graphcore/main.svg)](https://results.pre-commit.ci/latest/github/lightning-ai/lightning-graphcore/main)\n\n## what is an ipu?\n\nthe graphcore [intelligence processing unit (ipu)](https://www.graphcore.ai/products/ipu), built for artificial intelligence and machine learning, consists of many individual cores, called *tiles*, allowing highly parallel computation. due to the high bandwidth between tiles, ipus facilitate machine learning loads where parallelization is essential. because computation is heavily parallelized,\n\nipus operate in a different way to conventional accelerators such as cpu/gpus. ipus do not require large batch sizes for maximum parallelization, can provide optimizations across the compiled graph and rely on model parallelism to fully utilize tiles for larger models.\n\nipus are used to build ipu-pods, rack-based systems of ipu-machines for larger workloads. see the [ipu architecture](https://www.graphcore.ai/products/ipu) for more information.\n\nsee the [graphcore glossary](https://docs.graphcore.ai/projects/graphcore-glossary/) for the definitions of other ipu-specific terminology.\n\n______________________________________________________________________\n\n## installation\n\n```bash\npip install -u lightning-graphcore[lightning]\n```\n\n## run on ipu\n\nto enable pytorch lightning to utilize the ipu accelerator, simply provide `accelerator=\"ipu\"` parameter to the trainer class.\n\nto use multiple ipus set the devices to a number that is a power of 2 (i.e: 2, 4, 8, 16, ...)\n\n```py\nfrom lightning import trainer\n# run on as many ipus as available by default\ntrainer = trainer(accelerator=\"auto\", devices=\"auto\", strategy=\"auto\")\n# equivalent to\ntrainer = trainer()\n\n# run on one ipu\ntrainer = trainer(accelerator=\"ipu\", devices=1)\n# run on multiple ipus\ntrainer = trainer(accelerator=\"ipu\", devices=8)\n# choose the number of devices automatically\ntrainer = trainer(accelerator=\"ipu\", devices=\"auto\")\n```\n\n## how to access ipus\n\nto use ipus you must have access to a system with ipu devices. to get access see [get started](https://www.graphcore.ai/getstarted).\n\nyou must ensure that the ipu system has enabled the popart and poplar packages from the sdk. instructions are in the get started guide for your ipu system, on the graphcore [documents portal](https://docs.graphcore.ai/page/getting-started.html).\n\n## known limitations\n\ncurrently there are some known limitations that are being addressed in the near future to make the experience seamless when moving from different devices.\n\nplease see the [mnist example](https://github.com/lightning-ai/lightning/blob/master/examples/pytorch/ipu/mnist_sample.py) which displays most of the limitations and how to overcome them till they are resolved.\n\n- `self.log` is not supported in the `training_step`, `validation_step`, `test_step` or `predict_step`. this is due to the step function being traced and sent to the ipu devices.\n- since the step functions are traced, branching logic or any form of primitive values are traced into constants. be mindful as this could lead to errors in your custom code.\n- clipping gradients is not supported.\n- it is not possible to use `batchsampler` in your dataloaders if you are using multiple ipus.\n- ipus handle the data transfer to the device on the host, hence the hooks `modelhooks.transfer_batch_to_device` and `modelhooks.on_after_batch_transfer` do not apply here and if you have overridden any of them, an exception will be raised.\n",
  "docs_url": null,
  "keywords": "deep learning,pytorch,ai",
  "license": "apache-2.0",
  "name": "lightning-graphcore",
  "package_url": "https://pypi.org/project/lightning-graphcore/",
  "project_url": "https://pypi.org/project/lightning-graphcore/",
  "project_urls": {
    "Bug Tracker": "https://github.com/Lightning-AI/lightning-graphcore/issues",
    "Documentation": "https://lightning-graphcore.rtfd.io/en/latest/",
    "Download": "https://github.com/Lightning-AI/lightning-graphcore",
    "Homepage": "https://github.com/Lightning-AI/lightning-graphcore",
    "Source Code": "https://github.com/Lightning-AI/lightning-graphcore"
  },
  "release_url": "https://pypi.org/project/lightning-graphcore/0.1.0/",
  "requires_dist": [
    "lightning-utilities >=0.7.0"
  ],
  "requires_python": ">=3.8",
  "summary": "lightning support for graphcore accelerators",
  "version": "0.1.0",
  "releases": [],
  "developers": [
    "lightning",
    "name@lightning.ai"
  ],
  "kwds": "graphcore azure ai ipus ipu",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_lightning_graphcore",
  "homepage": "https://github.com/lightning-ai/lightning-graphcore",
  "release_count": 8,
  "dependency_ids": [
    "pypi_lightning_utilities"
  ]
}
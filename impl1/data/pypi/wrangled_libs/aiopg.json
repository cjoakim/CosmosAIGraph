{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: asyncio",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: database",
    "topic :: database :: front-ends"
  ],
  "description": "aiopg\n=====\n.. image:: https://github.com/aio-libs/aiopg/workflows/ci/badge.svg\n   :target: https://github.com/aio-libs/aiopg/actions?query=workflow%3aci\n.. image:: https://codecov.io/gh/aio-libs/aiopg/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/aio-libs/aiopg\n.. image:: https://badges.gitter.im/join%20chat.svg\n    :target: https://gitter.im/aio-libs/lobby\n    :alt: chat on gitter\n\n**aiopg** is a library for accessing a postgresql_ database\nfrom the asyncio_ (pep-3156/tulip) framework. it wraps\nasynchronous features of the psycopg database driver.\n\nexample\n-------\n\n.. code:: python\n\n    import asyncio\n    import aiopg\n\n    dsn = 'dbname=aiopg user=aiopg password=passwd host=127.0.0.1'\n\n    async def go():\n        pool = await aiopg.create_pool(dsn)\n        async with pool.acquire() as conn:\n            async with conn.cursor() as cur:\n                await cur.execute(\"select 1\")\n                ret = []\n                async for row in cur:\n                    ret.append(row)\n                assert ret == [(1,)]\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(go())\n\n\nexample of sqlalchemy optional integration\n------------------------------------------\n\n.. code:: python\n\n   import asyncio\n   from aiopg.sa import create_engine\n   import sqlalchemy as sa\n\n   metadata = sa.metadata()\n\n   tbl = sa.table('tbl', metadata,\n       sa.column('id', sa.integer, primary_key=true),\n       sa.column('val', sa.string(255)))\n\n   async def create_table(engine):\n       async with engine.acquire() as conn:\n           await conn.execute('drop table if exists tbl')\n           await conn.execute('''create table tbl (\n                                     id serial primary key,\n                                     val varchar(255))''')\n\n   async def go():\n       async with create_engine(user='aiopg',\n                                database='aiopg',\n                                host='127.0.0.1',\n                                password='passwd') as engine:\n\n           async with engine.acquire() as conn:\n               await conn.execute(tbl.insert().values(val='abc'))\n\n               async for row in conn.execute(tbl.select()):\n                   print(row.id, row.val)\n\n   loop = asyncio.get_event_loop()\n   loop.run_until_complete(go())\n\n.. _postgresql: http://www.postgresql.org/\n.. _asyncio: https://docs.python.org/3/library/asyncio.html\n\nplease use::\n\n   $ make test\n\nfor executing the project's unittests.\nsee https://aiopg.readthedocs.io/en/stable/contributing.html for details\non how to set up your environment to run the tests.\n\nchangelog\n---------\n\n1.4.0 (2022-10-26)\n^^^^^^^^^^^^^^^^^^\n\n* add python 3.11 and drop python 3.6 support` #892 <https://github.com/aio-libs/aiopg/pull/892>`_\n\n\n1.3.5 (2022-09-25)\n^^^^^^^^^^^^^^^^^^\n\n* fix pool size limit check for unlimited pools `#888 <https://github.com/aio-libs/aiopg/pull/888>`_\n\n\n1.3.4 (2022-06-30)\n^^^^^^^^^^^^^^^^^^\n\n\n1.3.4b3 (2022-06-29)\n^^^^^^^^^^^^^^^^^^^^\n\n\n1.3.4b2 (2022-06-29)\n^^^^^^^^^^^^^^^^^^^^\n\n\n1.3.4b1 (2022-06-29)\n^^^^^^^^^^^^^^^^^^^^\n\n* fix compatibility with sa 1.4.38 `#891 <https://github.com/aio-libs/aiopg/pull/891>`_\n* add py.typed marker `#878 <https://github.com/aio-libs/aiopg/pull/878>`_\n\n\n1.3.3 (2021-11-01)\n^^^^^^^^^^^^^^^^^^\n\n* support async-timeout 4.0+\n\n\n1.3.2 (2021-10-07)\n^^^^^^^^^^^^^^^^^^\n\n\n1.3.2b2 (2021-10-07)\n^^^^^^^^^^^^^^^^^^^^\n\n* respect use_labels for select statement `#882 <https://github.com/aio-libs/aiopg/pull/882>`_\n\n\n1.3.2b1 (2021-07-11)\n^^^^^^^^^^^^^^^^^^^^\n\n* fix compatibility with sqlalchemy >= 1.4 `#870 <https://github.com/aio-libs/aiopg/pull/870>`_\n\n\n1.3.1 (2021-07-08)\n^^^^^^^^^^^^^^^^^^\n\n\n1.3.1b2 (2021-07-06)\n^^^^^^^^^^^^^^^^^^^^\n\n* suppress \"future exception was never retrieved\" `#862 <https://github.com/aio-libs/aiopg/pull/862>`_\n\n\n1.3.1b1 (2021-07-05)\n^^^^^^^^^^^^^^^^^^^^\n\n* fix closablequeue.get on cancellation, close it on connection.close `#859 <https://github.com/aio-libs/aiopg/pull/859>`_\n\n\n1.3.0 (2021-06-30)\n^^^^^^^^^^^^^^^^^^\n\n\n1.3.0b4 (2021-06-28)\n^^^^^^^^^^^^^^^^^^^^\n\n* fix \"unable to detect disconnect when using notify/listen\" `#559 <https://github.com/aio-libs/aiopg/pull/559>`_\n\n\n1.3.0b3 (2021-04-03)\n^^^^^^^^^^^^^^^^^^^^\n\n* reformat using black `#814 <https://github.com/aio-libs/aiopg/pull/814>`_\n\n\n1.3.0b2 (2021-04-02)\n^^^^^^^^^^^^^^^^^^^^\n\n* type annotations `#813 <https://github.com/aio-libs/aiopg/pull/813>`_\n\n\n1.3.0b1 (2021-03-30)\n^^^^^^^^^^^^^^^^^^^^\n\n* raise resourceclosederror if we try to open a cursor on a closed saconnection `#811 <https://github.com/aio-libs/aiopg/pull/811>`_\n\n\n1.3.0b0 (2021-03-25)\n^^^^^^^^^^^^^^^^^^^^\n\n* fix compatibility with sa 1.4 for in statement `#806 <https://github.com/aio-libs/aiopg/pull/806>`_\n\n\n1.2.1 (2021-03-23)\n^^^^^^^^^^^^^^^^^^\n\n* pop loop in connection init due to backward compatibility `#808 <https://github.com/aio-libs/aiopg/pull/808>`_\n\n\n1.2.0b4 (2021-03-23)\n^^^^^^^^^^^^^^^^^^^^\n\n* set max supported sqlalchemy version `#805 <https://github.com/aio-libs/aiopg/pull/805>`_\n\n\n1.2.0b3 (2021-03-22)\n^^^^^^^^^^^^^^^^^^^^\n\n* don't run rollback when the connection is closed `#778 <https://github.com/aio-libs/aiopg/pull/778>`_\n\n* multiple cursors support `#801 <https://github.com/aio-libs/aiopg/pull/801>`_\n\n\n1.2.0b2 (2020-12-21)\n^^^^^^^^^^^^^^^^^^^^\n\n* fix isolationlevel.read_committed and introduce isolationlevel.default `#770 <https://github.com/aio-libs/aiopg/pull/770>`_\n\n* fix python 3.8 warnings in tests `#771 <https://github.com/aio-libs/aiopg/pull/771>`_\n\n\n1.2.0b1 (2020-12-16)\n^^^^^^^^^^^^^^^^^^^^\n\n* deprecate blocking connection.cancel() method `#570 <https://github.com/aio-libs/aiopg/pull/570>`_\n\n\n1.2.0b0 (2020-12-15)\n^^^^^^^^^^^^^^^^^^^^\n\n* implement timeout on acquiring connection from pool `#766 <https://github.com/aio-libs/aiopg/pull/766>`_\n\n\n1.1.0 (2020-12-10)\n^^^^^^^^^^^^^^^^^^\n\n\n1.1.0b2 (2020-12-09)\n^^^^^^^^^^^^^^^^^^^^\n\n* added missing slots to context managers `#763 <https://github.com/aio-libs/aiopg/pull/763>`_\n\n\n1.1.0b1 (2020-12-07)\n^^^^^^^^^^^^^^^^^^^^\n\n* fix on_connect multiple call on acquire `#552 <https://github.com/aio-libs/aiopg/pull/552>`_\n\n* fix python 3.8 warnings `#622 <https://github.com/aio-libs/aiopg/pull/642>`_\n\n* bump minimum psycopg version to 2.8.4 `#754 <https://github.com/aio-libs/aiopg/pull/754>`_\n\n* fix engine.release method to release connection in any way `#756 <https://github.com/aio-libs/aiopg/pull/756>`_\n\n\n1.0.0 (2019-09-20)\n^^^^^^^^^^^^^^^^^^\n\n* removal of an asynchronous call in favor of issues # 550\n\n* big editing of documentation and minor bugs #534\n\n\n0.16.0 (2019-01-25)\n^^^^^^^^^^^^^^^^^^^\n\n* fix select priority name `#525 <https://github.com/aio-libs/aiopg/issues/525>`_\n\n* rename `psycopg2` to `psycopg2-binary` to fix deprecation warning `#507 <https://github.com/aio-libs/aiopg/issues/507>`_\n\n* fix `#189 <https://github.com/aio-libs/aiopg/issues/189>`_ hstore when using readdictcursor `#512 <https://github.com/aio-libs/aiopg/issues/512>`_\n\n* close cannot be used while an asynchronous query is underway `#452 <https://github.com/aio-libs/aiopg/issues/452>`_\n\n* sqlalchemy adapter trx begin allow transaction_mode `#498 <https://github.com/aio-libs/aiopg/issues/498>`_\n\n\n0.15.0 (2018-08-14)\n^^^^^^^^^^^^^^^^^^^\n\n* support python 3.7 `#437 <https://github.com/aio-libs/aiopg/issues/437>`_\n\n\n0.14.0 (2018-05-10)\n^^^^^^^^^^^^^^^^^^^\n\n* add ``get_dialect`` func to have ability to pass ``json_serializer`` `#451 <https://github.com/aio-libs/aiopg/issues/451>`_\n\n\n0.13.2 (2018-01-03)\n^^^^^^^^^^^^^^^^^^^\n\n* fixed compatibility with sqlalchemy 1.2.0 `#412 <https://github.com/aio-libs/aiopg/issues/412>`_\n\n* added support for transaction isolation levels `#219 <https://github.com/aio-libs/aiopg/issues/219>`_\n\n\n0.13.1 (2017-09-10)\n^^^^^^^^^^^^^^^^^^^\n\n* added connection poll recycling logic `#373 <https://github.com/aio-libs/aiopg/issues/373>`_\n\n\n0.13.0 (2016-12-02)\n^^^^^^^^^^^^^^^^^^^\n\n* add `async with` support to `.begin_nested()` `#208 <https://github.com/aio-libs/aiopg/issues/208>`_\n\n* fix connection.cancel() `#212 <https://github.com/aio-libs/aiopg/issues/212>`_ `#223 <https://github.com/aio-libs/aiopg/issues/223>`_\n\n* raise informative error on unexpected connection closing `#191 <https://github.com/aio-libs/aiopg/issues/191>`_\n\n* added support for python types columns issues `#217 <https://github.com/aio-libs/aiopg/issues/217>`_\n\n* added support for default values in sa table issues `#206 <https://github.com/aio-libs/aiopg/issues/206>`_\n\n\n0.12.0 (2016-10-09)\n^^^^^^^^^^^^^^^^^^^\n\n* add an on_connect callback parameter to pool `#141 <https://github.com/aio-libs/aiopg/issues/141>`_\n\n* fixed connection to work under both windows and posix based systems `#142 <https://github.com/aio-libs/aiopg/issues/142>`_\n\n\n0.11.0 (2016-09-12)\n^^^^^^^^^^^^^^^^^^^\n\n* immediately remove callbacks from a closed file descriptor `#139 <https://github.com/aio-libs/aiopg/issues/139>`_\n\n* drop python 3.3 support\n\n\n0.10.0 (2016-07-16)\n^^^^^^^^^^^^^^^^^^^\n\n* refactor tests to use dockerized postgres server `#107 <https://github.com/aio-libs/aiopg/issues/107>`_\n\n* reduce default pool minsize to 1 `#106 <https://github.com/aio-libs/aiopg/issues/106>`_\n\n* explicitly enumerate packages in setup.py `#85 <https://github.com/aio-libs/aiopg/issues/85>`_\n\n* remove expired connections from pool on acquire `#116 <https://github.com/aio-libs/aiopg/issues/116>`_\n\n* don't crash when connection is gc'ed `#124 <https://github.com/aio-libs/aiopg/issues/124>`_\n\n* use loop.create_future() if available\n\n\n0.9.2 (2016-01-31)\n^^^^^^^^^^^^^^^^^^\n\n* make pool.release return asyncio.future, so we can wait on it in\n  `__aexit__` `#102 <https://github.com/aio-libs/aiopg/issues/102>`_\n\n* add support for uuid type `#103 <https://github.com/aio-libs/aiopg/issues/103>`_\n\n\n0.9.1 (2016-01-17)\n^^^^^^^^^^^^^^^^^^\n\n* documentation update `#101 <https://github.com/aio-libs/aiopg/issues/101>`_\n\n\n0.9.0 (2016-01-14)\n^^^^^^^^^^^^^^^^^^\n\n* add async context managers for transactions `#91 <https://github.com/aio-libs/aiopg/issues/91>`_\n\n* support async iterator in resultproxy `#92 <https://github.com/aio-libs/aiopg/issues/92>`_\n\n* add async with for engine `#90 <https://github.com/aio-libs/aiopg/issues/90>`_\n\n\n0.8.0 (2015-12-31)\n^^^^^^^^^^^^^^^^^^\n\n* add postgresql notification support `#58 <https://github.com/aio-libs/aiopg/issues/58>`_\n\n* support pools with unlimited size `#59 <https://github.com/aio-libs/aiopg/issues/59>`_\n\n* cancel current db operation on asyncio timeout `#66 <https://github.com/aio-libs/aiopg/issues/66>`_\n\n* add async with support for pool, connection, cursor `#88 <https://github.com/aio-libs/aiopg/issues/88>`_\n\n\n0.7.0 (2015-04-22)\n^^^^^^^^^^^^^^^^^^\n\n* get rid of resource leak on connection failure.\n\n* report resourcewarning on non-closed connections.\n\n* deprecate iteration protocol support in cursor and resultproxy.\n\n* release sa connection to pool on `connection.close()`.\n\n\n0.6.0 (2015-02-03)\n^^^^^^^^^^^^^^^^^^\n\n* accept dict, list, tuple, named and positional parameters in\n  `saconnection.execute()`\n\n\n0.5.2 (2014-12-08)\n^^^^^^^^^^^^^^^^^^\n\n* minor release, fixes a bug that leaves connection in broken state\n  after `cursor.execute()` failure.\n\n\n0.5.1 (2014-10-31)\n^^^^^^^^^^^^^^^^^^\n\n* fix a bug for processing transactions in line.\n\n\n0.5.0 (2014-10-31)\n^^^^^^^^^^^^^^^^^^\n\n* add .terminate() to pool and engine\n\n* reimplement connection pool (now pool size cannot be greater than pool.maxsize)\n\n* add .close() and .wait_closed() to pool and engine\n\n* add minsize, maxsize, size and freesize properties to sa.engine\n\n* support *echo* parameter for logging executed sql commands\n\n* connection.close() is not a coroutine (but we keep backward compatibility).\n\n\n0.4.1 (2014-10-02)\n^^^^^^^^^^^^^^^^^^\n\n* make cursor iterable\n\n* update docs\n\n\n0.4.0 (2014-10-02)\n^^^^^^^^^^^^^^^^^^\n\n* add timeouts for database operations.\n\n* autoregister psycopg2 support for json data type.\n\n* support json in aiopg.sa\n\n* support array in aiopg.sa\n\n* autoregister hstore support if present in connected db\n\n* support hstore in aiopg.sa\n\n\n0.3.2 (2014-07-07)\n^^^^^^^^^^^^^^^^^^\n\n* change signature to cursor.execute(operation, parameters=none) to\n  follow psycopg2 convention.\n\n\n0.3.1 (2014-07-04)\n^^^^^^^^^^^^^^^^^^\n\n* forward arguments to cursor constructor for pooled connections.\n\n\n0.3.0 (2014-06-22)\n^^^^^^^^^^^^^^^^^^\n\n* allow executing sqlalchemy ddl statements.\n\n* fix bug with race conditions on acquiring/releasing connections from pool.\n\n\n0.2.3 (2014-06-12)\n^^^^^^^^^^^^^^^^^^\n\n* fix bug in connection pool.\n\n\n0.2.2 (2014-06-07)\n^^^^^^^^^^^^^^^^^^\n\n* fix bug with passing parameters into saconnection.execute when\n  executing raw sql expression.\n\n\n0.2.1 (2014-05-08)\n^^^^^^^^^^^^^^^^^^\n\n* close connection with invalid transaction status on returning to pool.\n\n\n0.2.0 (2014-05-04)\n^^^^^^^^^^^^^^^^^^\n\n* implemented optional support for sqlalchemy functional sql layer.\n\n\n0.1.0 (2014-04-06)\n^^^^^^^^^^^^^^^^^^\n\n* implemented plain connections: connect, connection, cursor.\n\n* implemented database pools: create_pool and pool.\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "aiopg",
  "package_url": "https://pypi.org/project/aiopg/",
  "project_url": "https://pypi.org/project/aiopg/",
  "project_urls": {
    "CI: GA": "https://github.com/aio-libs/aiopg/actions?query=workflow%3ACI",
    "Chat: Gitter": "https://gitter.im/aio-libs/Lobby",
    "Coverage: codecov": "https://codecov.io/gh/aio-libs/aiopg",
    "Docs: RTD": "https://aiopg.readthedocs.io",
    "Download": "https://pypi.python.org/pypi/aiopg",
    "GitHub: issues": "https://github.com/aio-libs/aiopg/issues",
    "GitHub: repo": "https://github.com/aio-libs/aiopg",
    "Homepage": "https://aiopg.readthedocs.io"
  },
  "release_url": "https://pypi.org/project/aiopg/1.4.0/",
  "requires_dist": [
    "psycopg2-binary (>=2.9.5)",
    "async-timeout (<5.0,>=3.0)",
    "sqlalchemy[postgresql_psycopg2binary] (<1.5,>=1.3) ; extra == 'sa'"
  ],
  "requires_python": ">=3.7",
  "summary": "postgres integration with asyncio.",
  "version": "1.4.0",
  "releases": [],
  "developers": [
    "alexey.popravka@horsedevel.com",
    "andrew.svetlov@gmail.com",
    "andrew_svetlov",
    "virmir49@gmail.com",
    "yury.pliner@gmail.com"
  ],
  "kwds": "aiopg psycopg psycopg2 _postgresql postgresql_",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_aiopg",
  "homepage": "https://aiopg.readthedocs.io",
  "release_count": 59,
  "dependency_ids": [
    "pypi_async_timeout",
    "pypi_psycopg2_binary",
    "pypi_sqlalchemy"
  ]
}
{
  "classifiers": [],
  "description": "# aleph alpha client\n\n<p align=\"center\">\n    <img src=\"https://i.imgur.com/fsm2nnv.png\" width=\"50%\" />\n</p>\n\n[![license](https://img.shields.io/crates/l/aleph-alpha-client)](https://github.com/aleph-alpha/aleph-alpha-client/blob/main/license)\n[![pypi version](https://badge.fury.io/py/aleph-alpha-client.svg)](https://pypi.org/project/aleph-alpha-client/)\n[![documentation status](https://readthedocs.org/projects/aleph-alpha-client/badge/?version=latest)](https://aleph-alpha-client.readthedocs.io/en/latest/?badge=latest)\n\npython client for the [aleph alpha](https://aleph-alpha.com) api.\n\n## usage\n\n### synchronous client\n\n```python\nimport os\nfrom aleph_alpha_client import client, completionrequest, prompt\n\nclient = client(token=os.getenv(\"aa_token\"))\nrequest = completionrequest(\n    prompt=prompt.from_text(\"provide a short description of ai:\"),\n    maximum_tokens=64,\n)\nresponse = client.complete(request, model=\"luminous-extended\")\n\nprint(response.completions[0].completion)\n```\n\n### asynchronous client\n\n```python\nimport os\nfrom aleph_alpha_client import asyncclient, completionrequest, prompt\n\n# can enter context manager within an async function\nasync with asyncclient(token=os.environ[\"aa_token\"]) as client:\n    request = completionrequest(\n        prompt=prompt.from_text(\"provide a short description of ai:\"),\n        maximum_tokens=64,\n    )\n    response = await client.complete(request, model=\"luminous-base\") \n    print(response.completions[0].completion)\n```\n\n### interactive examples\n\nthis table contains interactive code examples, further exercises can be found in the [examples repository](https://github.com/aleph-alpha/examples).\n| template | description | internal link | colab link |\n|----------|-------------|---------------| -----------|\n| 1 | calling the api | [template 1](https://github.com/aleph-alpha/examples/blob/main/boilerplate/01_using_client.ipynb) | [![open in colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/aleph-alpha/examples/blob/main/boilerplate/01_using_client.ipynb)|\n| 2 | simple completion | [template 2](https://github.com/aleph-alpha/examples/blob/main/boilerplate/02_prompting.ipynb) | [![open in colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/aleph-alpha/examples/blob/main/boilerplate/02_prompting.ipynb)|\n| 3 | simple search | [template 3](https://github.com/aleph-alpha/examples/blob/main/boilerplate/03_simple_search.ipynb) | [![open in colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/aleph-alpha/examples/blob/main/boilerplate/03_simple_search.ipynb)|\n| 4 | symmetric and asymmetric search | [template 4](https://github.com/aleph-alpha/examples/blob/main/boilerplate/04_semantic_search.ipynb) | [![open in colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/aleph-alpha/examples/blob/main/boilerplate/04_semantic_search.ipynb)|\n| 5 | hidden embeddings | [template 5](https://github.com/aleph-alpha/examples/blob/main/boilerplate/05_hidden_embeddings.ipynb) | [![open in colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/aleph-alpha/examples/blob/main/boilerplate/05_hidden_embeddings.ipynb)|\n| 6 | task-specific endpoints | [template 6](https://github.com/aleph-alpha/examples/blob/main/boilerplate/06_task_specific_endpoints.ipynb) | [![open in colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/aleph-alpha/examples/blob/main/boilerplate/06_task_specific_endpoints.ipynb)|\n\n## installation\n\nthe latest stable version is deployed to pypi so you can install this package via pip.\n\n```sh\npip install aleph-alpha-client\n```\n\nget started using the client by first [creating an account](https://app.aleph-alpha.com/signup). afterwards head over to [your profile](https://app.aleph-alpha.com/profile) to create an api token. read more about how you can manage your api tokens [here](https://docs.aleph-alpha.com/docs/account).\n\n## links\n\n- [http api docs](https://docs.aleph-alpha.com/api/)\n- [interactive playground](https://app.aleph-alpha.com/playground/)\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "aleph-alpha-client",
  "package_url": "https://pypi.org/project/aleph-alpha-client/",
  "project_url": "https://pypi.org/project/aleph-alpha-client/",
  "project_urls": {
    "Homepage": "https://github.com/Aleph-Alpha/aleph-alpha-client"
  },
  "release_url": "https://pypi.org/project/aleph-alpha-client/5.0.0/",
  "requires_dist": [
    "requests >=2.28",
    "urllib3 >=1.26",
    "aiohttp >=3.8.6",
    "aiodns >=3.0.0",
    "aiohttp-retry >=2.8.3",
    "tokenizers >=0.13.2",
    "typing-extensions >=4.5.0",
    "Pillow >=9.2.0",
    "tqdm >=v4.62.0",
    "python-liquid >=1.9.4",
    "pytest ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "pytest-dotenv ; extra == 'dev'",
    "pytest-httpserver ; extra == 'dev'",
    "pytest-aiohttp ; extra == 'dev'",
    "mypy ; extra == 'dev'",
    "types-requests ; extra == 'dev'",
    "types-Pillow ; extra == 'dev'",
    "types-tqdm ; extra == 'dev'",
    "nbconvert ; extra == 'dev'",
    "ipykernel ; extra == 'dev'",
    "black ; extra == 'dev'",
    "sphinx ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "pytest ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytest-dotenv ; extra == 'test'",
    "pytest-httpserver ; extra == 'test'",
    "pytest-aiohttp ; extra == 'test'",
    "mypy ; extra == 'types'",
    "types-requests ; extra == 'types'",
    "types-Pillow ; extra == 'types'",
    "types-tqdm ; extra == 'types'"
  ],
  "requires_python": "",
  "summary": "python client to interact with aleph alpha api endpoints",
  "version": "5.0.0",
  "releases": [],
  "developers": [
    "aleph_alpha",
    "support@aleph-alpha.com"
  ],
  "kwds": "aleph_alpha_client aleph badge alpha pypi",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_aleph_alpha_client",
  "homepage": "https://github.com/aleph-alpha/aleph-alpha-client",
  "release_count": 67,
  "dependency_ids": [
    "pypi_aiodns",
    "pypi_aiohttp",
    "pypi_aiohttp_retry",
    "pypi_black",
    "pypi_ipykernel",
    "pypi_mypy",
    "pypi_nbconvert",
    "pypi_pillow",
    "pypi_pytest",
    "pypi_pytest_aiohttp",
    "pypi_pytest_cov",
    "pypi_pytest_dotenv",
    "pypi_pytest_httpserver",
    "pypi_python_liquid",
    "pypi_requests",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_tokenizers",
    "pypi_tqdm",
    "pypi_types_pillow",
    "pypi_types_requests",
    "pypi_types_tqdm",
    "pypi_typing_extensions",
    "pypi_urllib3"
  ]
}
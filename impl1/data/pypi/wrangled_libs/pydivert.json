{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: win32 (ms windows)",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "intended audience :: telecommunications industry",
    "license :: osi approved :: gnu lesser general public license v3 or later (lgplv3+)",
    "operating system :: microsoft :: windows :: windows 7",
    "operating system :: microsoft :: windows :: windows server 2008",
    "operating system :: microsoft :: windows :: windows vista",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: networking :: firewalls",
    "topic :: system :: networking :: monitoring",
    "topic :: utilities"
  ],
  "description": "pydivert\r\n^^^^^^^^\r\n\r\n|appveyor| |codecov| |latest_release| |python_versions|\r\n\r\npython bindings for windivert_, a windows driver that allows user-mode applications to\r\ncapture/modify/drop network packets sent to/from the windows network stack.\r\n\r\nrequirements\r\n------------\r\n\r\n- python 2.7 or python 3.4+ (32 or 64 bit)\r\n- windows vista/7/8/10 or windows server 2008 (32 or 64 bit)\r\n- administrator privileges\r\n\r\ninstallation\r\n------------\r\n\r\nyou can install pydivert by running\r\n\r\n.. code-block:: text\r\n\r\n    $ pip install pydivert\r\n\r\nstarting with pydivert 1.0.2, windivert_ is bundled with\r\npydivert and does not need to be installed separately.\r\n\r\n\r\n**windivert version compatibility**\r\n\r\n=================================  ===============\r\npydivert                           windivert\r\n---------------------------------  ---------------\r\n0.0.7                              1.0.x or 1.1.x\r\n1.0.x (api-compatible with 0.0.7)  1.1.8 (bundled)\r\n2.0.x                              1.1.8 (bundled)\r\n2.1.x                              1.3 (bundled)\r\n=================================  ===============\r\n\r\ngetting started\r\n---------------\r\n\r\npydivert consists of two main classes: ``pydivert.windivert`` and ``pydivert.packet``.\r\nfirst, you usually want to create a ``windivert`` object to start capturing network traffic and then\r\ncall ``.recv()`` to receive the first ``packet`` that was captured. by receiving packets, they are taken\r\nout of the windows network stack and will not be sent out unless you take action.\r\nyou can re-inject packets by calling ``.send(packet)``.\r\nthe following example opens a windivert handle, receives a single packet, prints it, re-injects it,\r\nand then exits:\r\n\r\n.. code-block:: python\r\n\r\n    import pydivert\r\n\r\n    # capture only tcp packets to port 80, i.e. http requests.\r\n    w = pydivert.windivert(\"tcp.dstport == 80 and tcp.payloadlength > 0\")\r\n\r\n    w.open()  # packets will be captured from now on\r\n\r\n    packet = w.recv()  # read a single packet\r\n    print(packet)\r\n    w.send(packet)  # re-inject the packet into the network stack\r\n\r\n    w.close()  # stop capturing packets\r\n\r\npackets that are not matched by the ``\"tcp.dstport == 80 and tcp.payloadlength > 0\"`` filter will not be handled by windivert\r\nand continue as usual. the syntax for the filter language is described in the `windivert documentation <https://reqrypt.org/windivert-doc.html#filter_language>`_.\r\n\r\npython idioms\r\n-------------\r\n\r\n``pydivert.windivert`` instances can be used as *context managers* for capturing traffic and as (infinite) *iterators* over\r\npackets. the following code is equivalent to the example above:\r\n\r\n.. code-block:: python\r\n\r\n    import pydivert\r\n\r\n    with pydivert.windivert(\"tcp.dstport == 80 and tcp.payloadlength > 0\") as w:\r\n        for packet in w:\r\n            print(packet)\r\n            w.send(packet)\r\n            break\r\n\r\npacket modification\r\n-------------------\r\n\r\n``pydivert.packet`` provides a variety of properties that can be used to access and modify the\r\npacket's headers or payload. for example, you can browse the web on port 1234 with pydivert:\r\n\r\n.. code-block:: python\r\n\r\n    import pydivert\r\n\r\n    with pydivert.windivert(\"tcp.dstport == 1234 or tcp.srcport == 80\") as w:\r\n        for packet in w:\r\n            if packet.dst_port == 1234:\r\n                print(\">\") # packet to the server\r\n                packet.dst_port = 80\r\n            if packet.src_port == 80:\r\n                print(\"<\") # reply from the server\r\n                packet.src_port = 1234\r\n            w.send(packet)\r\n\r\ntry opening http://example.com:1234/ in your browser!\r\n\r\nwindivert supports access and modification of a variety of tcp/udp/icmp attributes out of the box.\r\n\r\n.. code-block:: python\r\n\r\n    >>> print(packet)\r\n    packet({'direction': <direction.outbound: 0>,\r\n     'dst_addr': '93.184.216.34',\r\n     'dst_port': 443,\r\n     'icmpv4': none,\r\n     'icmpv6': none,\r\n     'interface': (23, 0),\r\n     'ipv4': {'src_addr': '192.168.86.169',\r\n              'dst_addr': '93.184.216.34',\r\n              'packet_len': 81},\r\n     'ipv6': none,\r\n     'is_inbound': false,\r\n     'is_loopback': false,\r\n     'is_outbound': true,\r\n     'payload': '\\x17\\x03\\x03\\x00$\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x05\\x19q\\xbd\\xcfd\\x8a\\xe3...',\r\n     'raw': <memory at 0x028924e0>,\r\n     'src_addr': '192.168.86.169',\r\n     'src_port': 52387,\r\n     'tcp': {'src_port': 52387,\r\n             'dst_port': 443,\r\n             'syn': false,\r\n             'ack': true,\r\n             'fin': false,\r\n             'rst': false,\r\n             'psh': true,\r\n             'urg': false,\r\n             'header_len': 20,\r\n             'payload': '\\x17\\x03\\x03\\x00$\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x05\\x19q\\xbd\\xcfd\\x8a\\xe3...'},\r\n     'udp': none})\r\n\r\nuninstalling pydivert\r\n---------------------\r\n\r\nyou can uninstall pydivert by running\r\n\r\n.. code-block:: text\r\n\r\n    $ pip uninstall pydivert\r\n\r\nif the windivert driver is still running at that time, it will remove itself on the next reboot.\r\n\r\napi reference documentation\r\n---------------------------\r\n\r\nthe api reference documentation for pydivert can be found `here <https://ffalcinelli.github.io/pydivert/>`_.\r\n\r\n.. |appveyor| image:: https://img.shields.io/appveyor/ci/ffalcinelli/pydivert/master.svg\r\n    :target: https://ci.appveyor.com/project/ffalcinelli/pydivert\r\n    :alt: appveyor build status\r\n\r\n.. |codecov| image:: https://img.shields.io/codecov/c/github/ffalcinelli/pydivert/master.svg\r\n    :target: https://codecov.io/gh/ffalcinelli/pydivert\r\n    :alt: coverage status\r\n\r\n.. |latest_release| image:: https://img.shields.io/pypi/v/pydivert.svg\r\n    :target: https://pypi.python.org/pypi/pydivert\r\n    :alt: latest version\r\n\r\n.. |python_versions| image:: https://img.shields.io/pypi/pyversions/pydivert.svg\r\n    :target: https://pypi.python.org/pypi/pydivert\r\n    :alt: supported python versions\r\n\r\n.. _windivert: https://reqrypt.org/windivert.html\r\n\r\n\r\n",
  "docs_url": "https://pythonhosted.org/pydivert/",
  "keywords": "windivert,network,tcp/ip",
  "license": "lgplv3",
  "name": "pydivert",
  "package_url": "https://pypi.org/project/pydivert/",
  "project_url": "https://pypi.org/project/pydivert/",
  "project_urls": {
    "Download": "https://github.com/ffalcinelli/pydivert/releases/2.1.0",
    "Homepage": "https://github.com/ffalcinelli/pydivert"
  },
  "release_url": "https://pypi.org/project/pydivert/2.1.0/",
  "requires_dist": [
    "win-inet-pton (>=1.0.1); python_version == \"2.7\" or python_version == \"3.3\"",
    "enum34 (>=1.1.6); python_version == \"2.7\" or python_version == \"3.3\"",
    "sphinx (>=1.4.8); extra == 'docs'",
    "mock (>=1.0.1); extra == 'test'",
    "hypothesis (>=3.5.3); extra == 'test'",
    "pytest (>=3.0.3); extra == 'test'",
    "pytest-cov (>=2.2.1); extra == 'test'",
    "pytest-timeout (<2,>=1.0.0); extra == 'test'",
    "pytest-faulthandler (<2,>=1.3.0); extra == 'test'",
    "codecov (>=2.0.5); extra == 'test'",
    "wheel (>=0.29); extra == 'test'"
  ],
  "requires_python": "",
  "summary": "python binding to windivert driver",
  "version": "2.1.0",
  "releases": [],
  "developers": [
    "fabio.falcinelli@gmail.com",
    "fabio_falcinelli"
  ],
  "kwds": "pydivert packet_len packets windivert tcp",
  "license_kwds": "lgplv3",
  "libtype": "pypi",
  "id": "pypi_pydivert",
  "homepage": "https://github.com/ffalcinelli/pydivert",
  "release_count": 19,
  "dependency_ids": [
    "pypi_codecov",
    "pypi_enum34",
    "pypi_hypothesis",
    "pypi_mock",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_faulthandler",
    "pypi_pytest_timeout",
    "pypi_sphinx",
    "pypi_wheel",
    "pypi_win_inet_pton"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "microsoft azure event hubs client library for python\n# azure event hubs client library for python\n\nazure event hubs is a highly scalable publish-subscribe service that can ingest millions of events per second and stream\nthem to multiple consumers. this lets you process and analyze the massive amounts of data produced by your connected\ndevices and applications. once event hubs has collected the data, you can retrieve, transform, and store it by using\nany real-time analytics provider or with batching/storage adapters. if you would like to know more about azure event hubs,\nyou may wish to review: [what is event hubs](https://docs.microsoft.com/azure/event-hubs/event-hubs-about)?\n\nthe azure event hubs client library allows for publishing and consuming of azure event hubs events and may be used to:\n\n- emit telemetry about your application for business intelligence and diagnostic purposes.\n- publish facts about the state of your application which interested parties may observe and use as a trigger for taking action.\n- observe interesting operations and interactions happening within your business or other ecosystem, allowing loosely coupled systems to interact without the need to bind them together.\n- receive events from one or more publishers, transform them to better meet the needs of your ecosystem, then publish the transformed events to a new stream for consumers to observe.\n\n[source code](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/eventhub/azure-eventhub/)\n| [package (pypi)](https://pypi.org/project/azure-eventhub/)\n| [package (conda)](https://anaconda.org/microsoft/azure-eventhub/)\n| [api reference documentation][api_reference]\n| [product documentation](https://docs.microsoft.com/azure/event-hubs/)\n| [samples](https://github.com/azure/azure-sdk-for-python/tree/main/sdk/eventhub/azure-eventhub/samples)\n\n## getting started\n\n### prerequisites\n\n- python 3.7 or later.\n- **microsoft azure subscription:**  to use azure services, including azure event hubs, you'll need a subscription.\nif you do not have an existing azure account, you may sign up for a free trial or use your msdn subscriber benefits when you [create an account](https://account.windowsazure.com/home/index).\n\n- **event hubs namespace with an event hub:** to interact with azure event hubs, you'll also need to have a namespace and event hub  available.\nif you are not familiar with creating azure resources, you may wish to follow the step-by-step guide\nfor [creating an event hub using the azure portal](https://docs.microsoft.com/azure/event-hubs/event-hubs-create).\nthere, you can also find detailed instructions for using the azure cli, azure powershell, or azure resource manager (arm) templates to create an event hub.\n\n### install the package\n\ninstall the azure event hubs client library for python with pip:\n\n```\n$ pip install azure-eventhub\n```\n\n### authenticate the client\n\ninteraction with event hubs starts with an instance of eventhubconsumerclient or eventhubproducerclient class. you need either the host name, sas/aad credential and event hub name or a connection string to instantiate the client object.\n\n**[create client from connection string:](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/eventhub/azure-eventhub/samples/sync_samples/connection_string_authentication.py)**\n\nfor the event hubs client library to interact with an event hub, the easiest means is to use a connection string, which is created automatically when creating an event hubs namespace.\nif you aren't familiar with shared access policies in azure, you may wish to follow the step-by-step guide to [get an event hubs connection string](https://docs.microsoft.com/azure/event-hubs/event-hubs-get-connection-string).\n\n- the `from_connection_string` method takes the connection string of the form\n`endpoint=sb://<yournamespace>.servicebus.windows.net/;sharedaccesskeyname=<yoursharedaccesskeyname>;sharedaccesskey=<yoursharedaccesskey>` and\nentity name to your event hub instance. you can get the connection string from the [azure portal](https://docs.microsoft.com/azure/event-hubs/event-hubs-get-connection-string#get-connection-string-from-the-portal).\n\n**[create client using the azure-identity library:](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/eventhub/azure-eventhub/samples/sync_samples/client_identity_authentication.py)**\n\nalternately, one can use a credential object to authenticate via aad with the azure-identity package.\n\n- this constructor demonstrated in the sample linked above takes the host name and entity name of your event hub instance and credential that implements the\n[tokencredential](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/azure/core/credentials.py)\nprotocol. there are implementations of the `tokencredential` protocol available in the\n[azure-identity package](https://pypi.org/project/azure-identity/). the host name is of the format `<yournamespace.servicebus.windows.net>`.\n- to use the credential types provided by `azure-identity`, please install the package:\n```pip install azure-identity```\n- additionally, to use the async api,  you must first install an async transport, such as [`aiohttp`](https://pypi.org/project/aiohttp/):\n```pip install aiohttp```\n- when using azure active directory, your principal must be assigned a role which allows access to event hubs, such as the\nazure event hubs data owner role. for more information about using azure active directory authorization with event hubs,\nplease refer to [the associated documentation](https://docs.microsoft.com/azure/event-hubs/authorize-access-azure-active-directory).\n\n## key concepts\n\n- an **eventhubproducerclient** is a source of telemetry data, diagnostics information, usage logs, or other log data,\nas part of an embedded device solution, a mobile device application, a game title running on a console or other device,\nsome client or server based business solution, or a web site.\n\n- an **eventhubconsumerclient** picks up such information from the event hub and processes it. processing may involve aggregation,\ncomplex computation, and filtering. processing may also involve distribution or storage of the information in a raw or transformed fashion.\nevent hub consumers are often robust and high-scale platform infrastructure parts with built-in analytics capabilities,\nlike azure stream analytics, apache spark, or apache storm.\n\n- a **partition** is an ordered sequence of events that is held in an event hub. azure event hubs provides message streaming\nthrough a partitioned consumer pattern in which each consumer only reads a specific subset, or partition, of the message stream.\nas newer events arrive, they are added to the end of this sequence. the number of partitions is specified at the time an event hub is created and cannot be changed.\n\n- a **consumer group** is a view of an entire event hub. consumer groups enable multiple consuming applications to each\nhave a separate view of the event stream, and to read the stream independently at their own pace and from their own position.\nthere can be at most 5 concurrent readers on a partition per consumer group; however it is recommended that there is only\none active consumer for a given partition and consumer group pairing. each active reader receives all of the events from\nits partition; if there are multiple readers on the same partition, then they will receive duplicate events.\n\nfor more concepts and deeper discussion, see: [event hubs features](https://docs.microsoft.com/azure/event-hubs/event-hubs-features).\nalso, the concepts for amqp are well documented in [oasis advanced messaging queuing protocol (amqp) version 1.0](https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-overview-v1.0-os.html).\n\n### thread safety\n\nwe do not guarantee that the eventhubproducerclient or eventhubconsumerclient are thread-safe. we do not recommend reusing these instances across threads. it is up to the running application to use these classes in a thread-safe manner.\n\nthe data model type, `eventdatabatch` is not thread-safe. it should not be shared across threads nor used concurrently with client methods.\n\n## examples\n\nthe following sections provide several code snippets covering some of the most common event hubs tasks, including:\n\n- [inspect an event hub](#inspect-an-event-hub)\n- [publish events to an event hub](#publish-events-to-an-event-hub)\n- [consume events from an event hub](#consume-events-from-an-event-hub)\n- [consume events from an event hub in batches](#consume-events-from-an-event-hub-in-batches)\n- [publish events to an event hub asynchronously](#publish-events-to-an-event-hub-asynchronously)\n- [consume events from an event hub asynchronously](#consume-events-from-an-event-hub-asynchronously)\n- [consume events from an event hub in batches asynchronously](#consume-events-from-an-event-hub-in-batches-asynchronously)\n- [consume events and save checkpoints using a checkpoint store](#consume-events-and-save-checkpoints-using-a-checkpoint-store)\n- [use eventhubconsumerclient to work with iot hub](#use-eventhubconsumerclient-to-work-with-iot-hub)\n\n### inspect an event hub\n\nget the partition ids of an event hub.\n\n<!-- snippet:connection_string_authentication.connection_string_authentication -->\n\n```python\nimport os\nfrom azure.eventhub import eventhubconsumerclient\n\nconnection_str = os.environ[\"event_hub_conn_str\"]\neventhub_name = os.environ['event_hub_name']\n\nconsumer_client = eventhubconsumerclient.from_connection_string(\n    conn_str=connection_str,\n    consumer_group='$default',\n    eventhub_name=eventhub_name,\n)\n\nwith consumer_client:\n    pass # consumer_client is now ready to be used.\n```\n\n<!-- end snippet -->\n\n### publish events to an event hub\n\nuse the `create_batch` method on `eventhubproducerclient` to create an `eventdatabatch` object which can then be sent using the `send_batch` method.\nevents may be added to the `eventdatabatch` using the `add` method until the maximum batch size limit in bytes has been reached.\n\n<!-- snippet:send.send_event_data_batch -->\n\n```python\ndef send_event_data_batch(producer):\n    # without specifying partition_id or partition_key\n    # the events will be distributed to available partitions via round-robin.\n    event_data_batch = producer.create_batch()\n    event_data_batch.add(eventdata('single message'))\n    producer.send_batch(event_data_batch)\n```\n\n<!-- end snippet -->\n\n### consume events from an event hub\n\nthere are multiple ways to consume events from an eventhub.  to simply trigger a callback when an event is received,\nthe `eventhubconsumerclient.receive` method will be of use as follows:\n\n```python\nimport logging\nfrom azure.eventhub import eventhubconsumerclient\n\nconnection_str = '<< connection string for the event hubs namespace >>'\nconsumer_group = '<< consumer group >>'\neventhub_name = '<< name of the event hub >>'\nclient = eventhubconsumerclient.from_connection_string(connection_str, consumer_group, eventhub_name=eventhub_name)\n\nlogger = logging.getlogger(\"azure.eventhub\")\nlogging.basicconfig(level=logging.info)\n\ndef on_event(partition_context, event):\n    logger.info(\"received event from partition {}\".format(partition_context.partition_id))\n    partition_context.update_checkpoint(event)\n\nwith client:\n    client.receive(\n        on_event=on_event,\n        starting_position=\"-1\",  # \"-1\" is from the beginning of the partition.\n    )\n    # receive events from specified partition:\n    # client.receive(on_event=on_event, partition_id='0')\n```\n\n### consume events from an event hub in batches\n\nwhereas the above sample triggers the callback for each message as it is received, the following sample\ntriggers the callback on a batch of events, attempting to receive a number at a time.\n\n```python\nimport logging\nfrom azure.eventhub import eventhubconsumerclient\n\nconnection_str = '<< connection string for the event hubs namespace >>'\nconsumer_group = '<< consumer group >>'\neventhub_name = '<< name of the event hub >>'\nclient = eventhubconsumerclient.from_connection_string(connection_str, consumer_group, eventhub_name=eventhub_name)\n\nlogger = logging.getlogger(\"azure.eventhub\")\nlogging.basicconfig(level=logging.info)\n\ndef on_event_batch(partition_context, events):\n    logger.info(\"received event from partition {}\".format(partition_context.partition_id))\n    partition_context.update_checkpoint()\n\nwith client:\n    client.receive_batch(\n        on_event_batch=on_event_batch,\n        starting_position=\"-1\",  # \"-1\" is from the beginning of the partition.\n    )\n    # receive events from specified partition:\n    # client.receive_batch(on_event_batch=on_event_batch, partition_id='0')\n```\n\n### publish events to an event hub asynchronously\n\nuse the `create_batch` method on `eventhubproducer` to create an `eventdatabatch` object which can then be sent using the `send_batch` method.\nevents may be added to the `eventdatabatch` using the `add` method until the maximum batch size limit in bytes has been reached.\n```python\nimport asyncio\nfrom azure.eventhub.aio import eventhubproducerclient  # the package name suffixed with \".aio\" for async\nfrom azure.eventhub import eventdata\n\nconnection_str = '<< connection string for the event hubs namespace >>'\nconsumer_group = '<< consumer group >>'\neventhub_name = '<< name of the event hub >>'\n\nasync def create_batch(client):\n    event_data_batch = await client.create_batch()\n    can_add = true\n    while can_add:\n        try:\n            event_data_batch.add(eventdata('message inside eventbatchdata'))\n        except valueerror:\n            can_add = false  # eventdatabatch object reaches max_size.\n    return event_data_batch\n\nasync def send():\n    client = eventhubproducerclient.from_connection_string(connection_str, eventhub_name=eventhub_name)\n    batch_data = await create_batch(client)\n    async with client:\n        await client.send_batch(batch_data)\n\nif __name__ == '__main__':\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(send())\n```\n\n### consume events from an event hub asynchronously\n\nthis sdk supports both synchronous and asyncio based code.  to receive as demonstrated in the samples above, but within\naio, one would need the following:\n\n```python\nimport logging\nimport asyncio\nfrom azure.eventhub.aio import eventhubconsumerclient\n\nconnection_str = '<< connection string for the event hubs namespace >>'\nconsumer_group = '<< consumer group >>'\neventhub_name = '<< name of the event hub >>'\n\nlogger = logging.getlogger(\"azure.eventhub\")\nlogging.basicconfig(level=logging.info)\n\nasync def on_event(partition_context, event):\n    logger.info(\"received event from partition {}\".format(partition_context.partition_id))\n    await partition_context.update_checkpoint(event)\n\nasync def receive():\n    client = eventhubconsumerclient.from_connection_string(connection_str, consumer_group, eventhub_name=eventhub_name)\n    async with client:\n        await client.receive(\n            on_event=on_event,\n            starting_position=\"-1\",  # \"-1\" is from the beginning of the partition.\n        )\n        # receive events from specified partition:\n        # await client.receive(on_event=on_event, partition_id='0')\n\nif __name__ == '__main__':\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(receive())\n```\n\n### consume events from an event hub in batches asynchronously\n\nall synchronous functions are supported in aio as well.  as demonstrated above for synchronous batch receipt, one can accomplish\nthe same within asyncio as follows:\n\n```python\nimport logging\nimport asyncio\nfrom azure.eventhub.aio import eventhubconsumerclient\n\nconnection_str = '<< connection string for the event hubs namespace >>'\nconsumer_group = '<< consumer group >>'\neventhub_name = '<< name of the event hub >>'\n\nlogger = logging.getlogger(\"azure.eventhub\")\nlogging.basicconfig(level=logging.info)\n\nasync def on_event_batch(partition_context, events):\n    logger.info(\"received event from partition {}\".format(partition_context.partition_id))\n    await partition_context.update_checkpoint()\n\nasync def receive_batch():\n    client = eventhubconsumerclient.from_connection_string(connection_str, consumer_group, eventhub_name=eventhub_name)\n    async with client:\n        await client.receive_batch(\n            on_event_batch=on_event_batch,\n            starting_position=\"-1\",  # \"-1\" is from the beginning of the partition.\n        )\n        # receive events from specified partition:\n        # await client.receive_batch(on_event_batch=on_event_batch, partition_id='0')\n\nif __name__ == '__main__':\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(receive_batch())\n```\n\n### consume events and save checkpoints using a checkpoint store\n\n`eventhubconsumerclient` is a high level construct which allows you to receive events from multiple partitions at once\nand load balance with other consumers using the same event hub and consumer group.\n\nthis also allows the user to track progress when events are processed using checkpoints.\n\na checkpoint is meant to represent the last successfully processed event by the user from a particular partition of\na consumer group in an event hub instance. the `eventhubconsumerclient` uses an instance of `checkpointstore` to update checkpoints\nand to store the relevant information required by the load balancing algorithm.\n\nsearch pypi with the prefix `azure-eventhub-checkpointstore` to\nfind packages that support this and use the `checkpointstore` implementation from one such package. please note that both sync and async libraries are provided.\n\nin the below example, we create an instance of `eventhubconsumerclient` and use a `blobcheckpointstore`. you need\nto [create an azure storage account](https://docs.microsoft.com/azure/storage/common/storage-quickstart-create-account?tabs=azure-portal)\nand a [blob container](https://docs.microsoft.com/azure/storage/blobs/storage-quickstart-blobs-portal#create-a-container) to run the code.\n\n[azure blob storage checkpoint store async](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/eventhub/azure-eventhub-checkpointstoreblob-aio)\nand [azure blob storage checkpoint store sync](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/eventhub/azure-eventhub-checkpointstoreblob)\nare one of the `checkpointstore` implementations we provide that applies azure blob storage as the persistent store.\n\n\n```python\nimport asyncio\n\nfrom azure.eventhub.aio import eventhubconsumerclient\nfrom azure.eventhub.extensions.checkpointstoreblobaio import blobcheckpointstore\n\nconnection_str = '<< connection string for the event hubs namespace >>'\nconsumer_group = '<< consumer group >>'\neventhub_name = '<< name of the event hub >>'\nstorage_connection_str = '<< connection string for the storage >>'\ncontainer_name = '<<name of the blob container>>'\n\nasync def on_event(partition_context, event):\n    # do something\n    await partition_context.update_checkpoint(event)  # or update_checkpoint every n events for better performance.\n\nasync def receive(client):\n    await client.receive(\n        on_event=on_event,\n        starting_position=\"-1\",  # \"-1\" is from the beginning of the partition.\n    )\n\nasync def main():\n    checkpoint_store = blobcheckpointstore.from_connection_string(storage_connection_str, container_name)\n    client = eventhubconsumerclient.from_connection_string(\n        connection_str,\n        consumer_group,\n        eventhub_name=eventhub_name,\n        checkpoint_store=checkpoint_store,  # for load balancing and checkpoint. leave none for no load balancing\n    )\n    async with client:\n        await receive(client)\n\nif __name__ == '__main__':\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n```\n\n### use eventhubconsumerclient to work with iot hub\n\nyou can use `eventhubconsumerclient` to work with iot hub as well. this is useful for receiving telemetry data of iot hub from the\nlinked eventhub. the associated connection string will not have send claims, hence sending events is not possible.\n\nplease notice that the connection string needs to be for an [event hub-compatible endpoint](https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messages-read-builtin),\ne.g. \"endpoint=sb://my-iothub-namespace-[uid].servicebus.windows.net/;sharedaccesskeyname=my-sa-name;sharedaccesskey=my-sa-key;entitypath=my-iot-hub-name\"\n\nthere are two ways to get the event hubs compatible endpoint:\n- manually get the \"built-in endpoints\" of the iot hub in azure portal and receive from it.\n```python\nfrom azure.eventhub import eventhubconsumerclient\n\nconnection_str = 'endpoint=sb://my-iothub-namespace-[uid].servicebus.windows.net/;sharedaccesskeyname=my-sa-name;sharedaccesskey=my-sa-key;entitypath=my-iot-hub-name'\nconsumer_group = '<< consumer group >>'\nclient = eventhubconsumerclient.from_connection_string(connection_str, consumer_group)\n\npartition_ids = client.get_partition_ids()\n```\n- programmatically retrieve the built-in event hubs compatible endpoint.\nrefer to [iot hub connection string sample](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/eventhub/azure-eventhub/samples/async_samples/iot_hub_connection_string_receive_async.py).\n\n## troubleshooting\n\nsee the `azure-eventhubs` [troubleshooting guide](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/eventhub/azure-eventhub/troubleshooting.md) for details on how to diagnose various failure scenarios.\n\n## next steps\n\n### more sample code\n\nplease take a look at the [samples](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/eventhub/azure-eventhub/samples) directory for detailed examples of how to use this library to send and receive events to/from event hubs.\n\n### documentation\n\nreference documentation is available [here](https://azuresdkdocs.blob.core.windows.net/$web/python/azure-eventhub/latest/azure.eventhub.html).\n\n### schema registry and avro encoder\n\nthe eventhubs sdk integrates nicely with the [schema registry][schemaregistry_service] service and [avro][avro].\nfor more information, please refer to [schema registry sdk][schemaregistry_repo] and [schema registry avro encoder sdk][schemaregistry_avroencoder_repo].\n\n### pure python amqp transport and backward compatibility support\n\nthe azure event hubs client library is now based on a pure python amqp implementation. `uamqp` has been removed as required dependency.\n\nto use `uamqp` as the underlying transport:\n\n1. install `uamqp` with pip.\n\n```\n$ pip install uamqp \n```\n\n2. pass `uamqp_transport=true` during client construction.\n\n```python\nfrom azure.eventhub import eventhubproducerclient, eventhubconsumerclient\n\nconnection_str = '<< connection string for the event hubs namespace >>'\nconsumer_group = '<< consumer group >>'\neventhub_name = '<< name of the event hub >>'\n\nclient = eventhubproducerclient.from_connection_string(\n    connection_str, eventhub_name=eventhub_name, uamqp_transport=true\n)\nclient = eventhubconsumerclient.from_connection_string(\n    connection_str, consumer_group, eventhub_name=eventhub_name, uamqp_transport=true\n)\n```\n\nnote: the `message` attribute on `eventdata`/`eventdatabatch`, which previously exposed the `uamqp.message`, has been deprecated.\n the \"legacy\" objects returned by `eventdata.message`/`eventdatabatch.message` have been introduced to help facilitate the transition.\n\n### building uamqp wheel from source\n\nif [uamqp](https://pypi.org/project/uamqp/) is intended to be used as the underlying amqp protocol implementation for `azure-eventhub`,\nuamqp wheels can be found for most major operating systems.\n\nif you intend to use `uamqp` and you're running on a platform for which uamqp wheels are not provided, please follow\n the [uamqp installation](https://github.com/azure/azure-uamqp-python#installation) guidance to install from source.\n\n### provide feedback\n\nif you encounter any bugs or have suggestions, please file an issue in the [issues](https://github.com/azure/azure-sdk-for-python/issues) section of the project.\n\n## contributing\n\nthis project welcomes contributions and suggestions.  most contributions require you to agree to a\ncontributor license agreement (cla) declaring that you have the right to, and actually do, grant us the rights to use your contribution. for details, visit https://cla.microsoft.com.\n\nwhen you submit a pull request, a cla-bot will automatically determine whether you need to provide a cla and decorate the\npr appropriately (e.g., label, comment). simply follow the instructions provided by the bot. you will only need to do this once across all repos using our cla.\n\nthis project has adopted the [microsoft open source code of conduct](https://opensource.microsoft.com/codeofconduct/).\nfor more information see the [code of conduct faq](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n[avro]: https://avro.apache.org/\n[api_reference]: https://docs.microsoft.com/python/api/overview/azure/eventhub-readme\n[schemaregistry_service]: https://aka.ms/schemaregistry\n[schemaregistry_repo]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/schemaregistry/azure-schemaregistry\n[schemaregistry_avroencoder_repo]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/schemaregistry/azure-schemaregistry-avroencoder\n\n![impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python/sdk/eventhub/azure-eventhub/readme.png)\n\n\n# release history\n\n## 5.11.5 (2023-11-13)\n\n### bugs fixed\n\n- fixed a pyamqp error where events split across multiple transferframes were depleting the link credit by more than 1 credit per message. ([#32767](https://github.com/azure/azure-sdk-for-python/pull/32767))\n\n## 5.11.4 (2023-08-08)\n\n### features added\n\n- a new float keyword argument `socket_timeout` has been added to the sync and async `eventhubconsumerclient` and `eventhubproducerclient`.\n\n### bugs fixed\n\n- fixed bug [#31258](https://github.com/azure/azure-sdk-for-python/issues/31258) where async `blobcheckpointstore` was reprocessing old events after an error.\n\n## 5.11.3 (2023-07-12)\n\n### bugs fixed\n\n- fixed the error `end frame received on invalid channel` which was raised when a disconnect was sent by the service ([#30860](https://github.com/azure/azure-sdk-for-python/pull/30860))\n- fixed the error `link already closed` which was raised when the client was closing and disconnecting from the service ([#30836](https://github.com/azure/azure-sdk-for-python/pull/30836))\n\n### other changes\n\n - updated tracing ([#29934](https://github.com/azure/azure-sdk-for-python/pull/29934)):\n   - span names renamed:\n     - `azure.eventhubs.send` to `eventhubs.send`\n     - `azure.eventhubs.message` to `eventhubs.message`\n     - `azure.eventhubs.process` to `eventhubs.process`\n   - an `eventhubs.receive` span will be created upon receiving events.\n   - additional attributes added to spans:\n     - `messaging.system` - messaging system (i.e., `eventhubs`)\n     - `messaging.operation` - type of operation (i.e., `publish`, `receive`, or `process`)\n     - `messaging.batch.message_count` - number of messages sent, received, or processed (if more than one)\n   - the `component` attribute was removed from all spans.\n   - all `send` spans now contain links to `message` spans. now, `message` spans will no longer contain a link to the `send` span.\n   - message application properties will now contain values for `traceparent` (and `tracestate` if applicable)\n   - process spans will now be a direct children of message span contexts in when event handling on a per-message basis. ([#30537](https://github.com/azure/azure-sdk-for-python/pull/30537))\n\n## 5.11.2 (2023-03-20)\n\n### bugs fixed\n\n- fixed a bug that would prevent reconnect after a long idle period, network drop (issue #28996)\n\n## 5.11.1 (2023-01-25)\n\n### bugs fixed\n\n- fixed a bug where, when `websocket-client` was not installed, the error was not caught/raised properly (issue #28453).\n\n## 5.11.0 (2023-01-19)\n\nversion 5.11.0 is our first stable release of the azure event hubs client library based on a pure python implemented amqp stack.\n\n### features added\n\n- a new boolean keyword argument `uamqp_transport` has been added to sync and async `eventhubproducerclient`/`eventhubconsumerclient` constructors which indicates whether to use the `uamqp` library or the default pure python amqp library as the underlying transport.\n\n### bugs fixed\n\n- fixed a bug that caused an error when sending batches with tracing enabled (issue #27986).\n- fixed a bug where `eventhubsharedkeycredential` returned an `accesstoken.token` of type `bytes` and not `str`, now matching the documentation.\n\n### other changes\n\n- the `message` attribute on `eventdata`/`eventdatabatch`, which previously exposed the `uamqp.message`, has been deprecated.\n  - `legacymessage`/`legacybatchmessage` objects returned by the `message` attribute on `eventdata`/`eventdatabatch` have been introduced to help facilitate the transition.\n- removed uamqp from required dependencies.\n- adding `uamqp >= 1.6.3` as an optional dependency for use with the `uamqp_transport` keyword.\n  - added support for python 3.11.\n\n## 5.8.0b2 (2022-10-11)\n\n### features added\n\n- updated the optional dependency for async transport using amqp over websocket from `websocket-client` to `aiohttp` (issue #24315, thanks @hansmbakker for the suggestion).\n\n## 5.8.0b1 (2022-09-22)\n\nthis version and all future versions will require python 3.7+. python 3.6 is no longer supported.\n\n### other changes\n\n- added the `uamqp_transport` optional parameter to the clients, to allow switching to the `uamqp` library as the transport.\n\n## 5.10.1 (2022-08-22)\n\nthis version and all future versions will require python 3.7+, python 3.6 is no longer supported.\n\n### bugs fixed\n\n- fixed a bug in async `bufferedproducer` that would block when flushing the queue causing the client to freeze up (issue #23510).\n- fixed a bug in the async `eventhubproducerclient` and `eventhubconsumerclient` that set the default value of the `transport_type` parameter in the `from_connection_string` methods to `none` rather than `transporttype.amqp`.\n\n### other changes\n\n- internal refactoring to support upcoming pure python amqp-based release.\n- updated uamqp dependency to 1.6.0.\n\n## 5.8.0a5 (2022-07-19)\n\n### bugs fixed\n\n- fixed bug that prevented token refresh at regular intervals.\n- fixed bug that was improperly passing the debug keyword argument, so that network trace debug logs are output when requested.\n\n### other changes\n\n- added logging added in to track proper token refreshes & fetches, output exception reason for producer init failure.\n\n## 5.10.0 (2022-06-08)\n\n### features added\n\n- includes the following features related to buffered sending of events:\n  - a new method `send_event` to `eventhubproducerclient` which allows sending single `eventdata` or `amqpannotatedmessage`.\n  - buffered mode sending to `eventhubproducerclient` which is intended to allow for efficient publishing of events\n   without having to explicitly manage batches in the application.\n    - the constructor of `eventhubproducerclient` and `from_connection_string` method takes the following new keyword arguments\n     for configuration:\n      - `buffered_mode`: the flag to enable/disable buffered mode sending.\n      - `on_success`: the callback to be called once events have been successfully published.\n      - `on_error`: the callback to be called once events have failed to be published.\n      - `max_buffer_length`: the total number of events per partition that can be buffered before a flush will be triggered.\n      - `max_wait_time`: the amount of time to wait for a batch to be built with events in the buffer before publishing.\n    - a new method `eventhubproducerclient.flush` which flushes events in the buffer to be sent immediately.\n    - a new method `eventhubproducerclient.get_buffered_event_count` which returns the number of events that are buffered and waiting to be published for a given partition.\n    - a new property `eventhubproducerclient.total_buffered_event_count` which returns the total number of events that are currently buffered and waiting to be published, across all partitions.\n    - a new boolean keyword argument `flush` to `eventhubproducerclient.close` which indicates whether to flush the buffer or not while closing.\n\n## 5.8.0a4 (2022-06-07)\n\n### features added\n\n- added support for connection using websocket and http proxy.\n- added support for custom endpoint connection over websocket.\n\n## 5.9.0 (2022-05-10)\n\n### features added\n\n- the classmethod `from_message_content` has been added to `eventdata` for interoperability with the schema registry avro encoder library, and takes `content` and `content_type` as positional parameters.\n\n### other changes\n\n- features related to buffered sending of events are still in beta and will not be included in this release.\n\n## 5.9.0b3 (2022-04-20)\n\n### features added\n\n- introduced new method `send_event` to `eventhubproducerclient` which allows sending single `eventdata` or `amqpannotatedmessage`.\n- introduced buffered mode sending to `eventhubproducerclient` which is intended to allow for efficient publishing of events\n without having to explicitly manage batches in the application.\n  - the constructor of `eventhubproducerclient` and `from_connection_string` method now takes the following new keyword arguments\n   for configuration:\n    - `buffered_mode`: the flag to enable/disable buffered mode sending.\n    - `on_success`: the callback to be called once events have been successfully published.\n    - `on_error`: the callback to be called once events have failed to be published.\n    - `max_buffer_length`: the total number of events per partition that can be buffered before a flush will be triggered.\n    - `max_wait_time`: the amount of time to wait for a batch to be built with events in the buffer before publishing.\n  - introduced new method `eventhubproducerclient.flush` which flushes events in the buffer to be sent immediately.\n  - introduced new method `eventhubproducerclient.get_buffered_event_count` which returns the number of events that are buffered and waiting to be published for a given partition.\n  - introduced new property `eventhubproducerclient.total_buffered_event_count` which returns the total number of events that are currently buffered and waiting to be published, across all partitions.\n  - introduced new boolean keyword argument `flush` to `eventhubproducerclient.close` which indicates whether to flush the buffer or not while closing.\n\n### other changes\n\n- updated `eventdata` internals for interoperability with the schema registry avro encoder library.\n\n## 5.9.0b2 (2022-03-09)\n\n### breaking changes\n\n- `from_message_data` on `eventdata` has been renamed `from_message_content` for interoperability with the schema registry avro encoder library. the `data` parameter has been renamed to `content`.\n\n## 5.8.0a3 (2022-03-08)\n\n### other changes\n\n- improved the performance of async sending and receiving.\n\n## 5.9.0b1 (2022-02-09)\n\n- the following features have been temporarily pulled out of async `eventhubproducerclient` and `eventhubconsumerclient` which will be added back in future previews as we work towards a stable release:\n  - passing the following keyword arguments to the constructors and `from_connection_string` methods of the `eventhubproducerclient` and `eventhubconsumerclient` is not supported:  `transport_type`, `http_proxy`, `custom_endpoint_address`, and `connection_verify`.\n\n## 5.8.0a2 (2022-02-09)\n\n### features added\n\n- added support for async `eventhubproducerclient` and `eventhubconsumerclient`.\n\n## 5.8.0a1 (2022-01-13)\n\nversion 5.8.0a1 is our first efforts to build an azure event hubs client library based on pure python implemented amqp stack.\n\n### breaking changes\n\n- the following features have been temporarily pulled out which will be added back in future previews as we work towards a stable release:\n  - async is not supported.\n  - passing the following keyword arguments to the constructors and `from_connection_string` methods of the `eventhubproducerclient` and `eventhubconsumerclient` is not supported:  `transport_type`, `http_proxy`, `custom_endpoint_address`, and `connection_verify`.\n\n### other changes\n\n- uamqp dependency is removed.\n\n## 5.7.0 (2022-01-12)\n\nthis version and all future versions will require python 3.6+. python 2.7 is no longer supported.\n\n### features added\n\n- added support for fixed (linear) retry backoff:\n  - sync/async `eventhubproducerclient` and `eventhubconsumerclient` constructors and `from_connection_string` take `retry_mode` as a keyword argument.\n\n### bugs fixed\n\n- fixed a bug that `eventhubproducerclient` could be reopened for sending events instead of encountering with `keyerror` when the client is previously closed (issue #21849).\n\n### other changes\n\n- improved token refresh timing to prevent potentially blocking main flow when the token is about to get expired soon.\n- updated uamqp dependency to 1.5.1.\n\n## 5.6.1 (2021-10-06)\n\n### bugs fixed\n\n- fixed a bug for checking that `azure.eventhub.amqp.amqpmessageheader` and `azure.eventhub.amqp.amqpmessageproperties` contain specific properties using the `in` keyword.\n\n### other changes\n\n- updated uamqp dependency to 1.4.3.\n  - added support for python 3.10.\n  - fixed memory leak in win32 socketio and tlsio (issue #19777).\n  - fixed memory leak in the process of converting amqpvalue into string (issue #19777).\n\n## 5.6.0 (2021-07-07)\n\n### features added\n\n- added support for sending amqp annotated message which allows full access to the amqp message fields.\n  - introduced new namespace `azure.eventhub.amqp`.\n  - added new enum class `azure.eventhub.amqp.amqpmessagebodytype` to represent the body type of the message which includes:\n    - `data`: the body of message consists of one or more data sections and each section contains opaque binary data.\n    - `sequence`: the body of message consists of one or more sequence sections and each section contains an arbitrary number of structured data elements.\n    - `value`: the body of message consists of one amqp-value section and the section contains a single amqp value.\n  - introduced new class `azure.eventhub.amqp.amqpannotatedmessage` for accessing low-level amqp message sections which can be instantiated for sending.\n  - introduced new classes `azure.eventhub.amqp.amqpmessageheader` and `azure.eventhub.amqp.amqpmessageproperties` for accessing amqp header and properties.\n  - added new property `body_type` on `azure.eventhub.eventdata` which returns `azure.eventhub.amqp.amqpmessagebodytype`.\n  - added new read-only property `raw_amqp_message` on `azure.eventhub.eventdata` which returns `azure.eventhub.amqp.amqpannotatedmessage`.\n\n### fixed\n\n- updated uamqp dependency to 1.4.1.\n  - fixed a bug that attributes creation_time, absolute_expiry_time and group_sequence on messageproperties should be compatible with integer types on python 2.7.\n\n## 5.5.0 (2021-05-13)\n\n**new features**\n\n- added support for using `azure.core.credentials.azurenamedkeycredential` as credential for authenticating producer and consumer clients.\n\n**bug fixes**\n\n- fixed bug that custom user agent string should be put in front of the built-in user agent string instead of being appended.\n- updated uamqp dependency to 1.4.0.\n  - fixed memory leaks in the process of link attach where source and target cython objects are not properly deallocated (#15747).\n  - improved management operation callback not to parse description value of non amqp_type_string type as string (#18361).\n\n**notes**\n\n- updated azure-core dependency to 1.14.0.\n\n## 5.4.0 (2021-04-07)\n\nthis version follows from version 5.3.1, rather than 5.4.0b1 so that the preview idempotent producer feature is not included.\n\n**new features**\n\n- added support for using `azure.core.credentials.azuresascredential` as credential for authenticating producer and consumer clients.\n- updated `list_ownership`, `claim_ownership`, `update_checkpoint`, `list_checkpoints` on sync and async `checkpointstore` to support taking `**kwargs`.\n  - warning: implementing a custom checkpointstore that does not support taking `**kwargs` in the methods listed previously will result in the following pylint error: `w0221: parameters differ from overridden ________ method (arguments-differ)`.\n- updated `update_checkpoint` on sync and async `partitioncontext` to support taking `**kwargs`.\n\n**bug fixes**\n\n- updated uamqp dependency to 1.3.0.\n  - fixed bug that sending message of large size triggering segmentation fault when the underlying socket connection is lost (#13739, #14543).\n  - fixed bug in link flow control where link credit and delivery count should be calculated based on per message instead of per transfer frame (#16934).\n\n**notes**\n\n- updated azure-core dependency to 1.13.0.\n\n## 5.4.0b1 (2021-03-09)\n\nthis version and all future versions will require python 2.7 or python 3.6+, python 3.5 is no longer supported.\n\n**new features**\n\n- added support for idempotent publishing which is supported by the service to endeavor to reduce the number of duplicate\n  events that are published.\n  - `eventhubproducerclient` constructor accepts two new parameters for idempotent publishing:\n    - `enable_idempotent_partitions`: a boolean value to tell the `eventhubproducerclient` whether to enable idempotency.\n    - `partition_config`: the set of configurations that can be specified to influence publishing behavior\n     specific to the configured event hub partition.\n  - introduced a new method `get_partition_publishing_properties` on `eventhubproducerclient` to inspect the information\n    about the state of publishing for a partition.\n  - introduced a new property `published_sequence_number` on `eventdata` to get the publishing sequence number assigned\n    to the event at the time it was successfully published.\n  - introduced a new property `starting_published_sequence_number` on `eventdatabatch` to get the publishing sequence\n    number assigned to the first event in the batch at the time the batch was successfully published.\n  - introduced a new class `azure.eventhub.partitionpublishingconfiguration` which is a set of configurations that can be\n    specified to influence the behavior when publishing directly to an event hub partition.\n\n**notes**\n\n- updated uamqp dependency to 1.2.15.\n\n## 5.3.1 (2021-03-09)\n\nthis version will be the last version to officially support python 3.5, future versions will require python 2.7 or python 3.6+.\n\n**bug fixes**\n\n- sending empty `event_data_batch` will be a no-op now instead of raising error.\n\n## 5.3.0 (2021-02-08)\n\n**new features**\n\n- added a `parse_connection_string` method which parses a connection string into a properties bag, `eventhubconnectionstringproperties`, containing its component parts.\n- the constructor and `from_connection_string` method of `eventhubconsumerclient` and `eventhubproducerclient` now accept two new optional arguments:\n  - `custom_endpoint_address` which allows for specifying a custom endpoint to use when communicating with the event hubs service,\nand is useful when your network does not allow communicating to the standard event hubs endpoint.\n  - `connection_verify` which allows for specifying the path to the custom ca_bundle file of the ssl certificate which is used to authenticate\nthe identity of the connection endpoint.\n\n**notes**\n\n- updated uamqp dependency to 1.2.14.\n\n## 5.2.1 (2021-01-11)\n\n**bug fixes**\n\n- updated `azure.eventhub.extension.__init__.py` to be compatible with pkgutil-style namespace (pr #13210, thanks @pjachowi).\n- updated uamqp dependency to 1.2.13\n  - added support for python 3.9.\n  - fixed bug that macos was unable to detect network error (#15473).\n  - fixed bug that `uamqp.receiveclient` and `uamqp.receiveclientasync` receive messages during connection establishment (#15555).\n  - fixed bug where connection establishment on macos with clang 12 triggering unrecognized selector exception (#15567).\n  - fixed bug in accessing message properties triggering segmentation fault when the underlying c bytes are null (#15568).\n\n## 5.2.0 (2020-09-08)\n\n**new features**\n\n- connection strings used with `from_connection_string` methods now supports using the `sharedaccesssignature` key in leiu of `sharedaccesskey` and `sharedaccesskeyname`, taking the string of the properly constructed token as value.\n\n## 5.2.0b1 (2020-07-06)\n\n**new features**\n\n- `eventhubconsumerclient` constructor accepts two new parameters for the load balancer.\n    - `load_balancing_strategy`, which can be \"greedy\" or \"balanced\".\n     with greedy strategy, one execution of load balancing will claim as many partitions as required to balance the load\n     whereas with balanced strategy one execution of load balancing will claim at most 1 partition.\n    - `partition_ownership_expiration_interval`, which allows you to customize the partition ownership expiration for load balancing.\n     a consumer client may lose its owned partitions more often with a smaller expiration interval. but a larger interval\n     may result in idle partitions not being claimed for longer time.\n- added enum class `azure.eventhub.loadbalancingstrategy` for `load_balancing_strategy`.\n\n## 5.1.0 (2020-05-04)\n\n**new features**\n\n- `eventhubproducerclient.send_batch` accepts either an `eventdatabatch` or a finite list of `eventdata`. #9181\n- added enqueuetime to span links of distributed tracing. #9599\n\n**bug fixes**\n\n- fixed a bug that turned `azure.eventhub.eventhubconsumerclient` into an exclusive receiver when it has no checkpoint store. #11181\n- updated uamqp dependency to 1.2.7.\n  - fixed bug in setting certificate of tlsio on macos. #7201\n  - fixed bug that caused segmentation fault in network tracing on macos when setting `logging_enable` to `true` in `eventhubconsumerclient` and `eventhubproducerclient`.\n\n## 5.1.0b1 (2020-04-06)\n\n**new features**\n\n- added `eventhubconsumerclient.receive_batch()` to receive and process events in batches instead of one by one. #9184\n- `eventhubconsumercliuent.receive()` has a new param `max_wait_time`.\n`on_event` is called every `max_wait_time` when no events are received and `max_wait_time` is not `none` or 0.\n- param event of `partitioncontext.update_checkpoint` is now optional. the last received event is used when param event is not passed in.\n- `eventdata.system_properties` has added missing properties when consuming messages from iothub. #10408\n\n## 5.0.1 (2020-03-09)\n\n**bug fixes**\n\n- fixed a bug that swallowed errors when receiving events with `azure.eventhub.eventhubconsumerclient`  #9660\n- fixed a bug that caused `get_eventhub_properties`, `get_partition_ids`, and `get_partition_properties` to raise\nan error on azure stack #9920\n\n## 5.0.0 (2020-01-13)\n\n**breaking changes**\n\n- `eventdata`\n    - removed deprecated property `application_properties` and deprecated method `encode_message()`.\n- `eventhubconsumerclient`\n    - `on_error` would be called when `eventhubconsumerclient` failed to claim ownership of partitions.\n    - `on_partition_close` and `on_partition_initialize` would be called in the case of exceptions raised by `on_event` callback.\n        -  `eventhubconsumerclient` would close and re-open the internal partition receiver in this case.\n    - default starting position from where `eventhubconsumerclient` should resume receiving after recovering from an error has been re-prioritized.\n        - if there is checkpoint, it will resume from the checkpoint.\n        - if there is no checkpoint but `starting_position` is provided, it will resume from `starting_posititon`.\n        - if there is no checkpoint or `starting_position`, it will resume from the latest position.\n- `partitioncontext`\n    - `update_checkpoint` would do in-memory checkpoint instead of doing nothing when checkpoint store is not explicitly provided.\n        - the in-memory checkpoints would be used for `eventhubconsumerclient` receiving recovering.\n- `get_partition_ids`, `get_partition_properties`, `get_eventhub_properties` would raise error in the case of service returning an error status code.\n    - `authenticationerror` would be raised when service returning error code 401.\n    - `connecterror` would be raised when service returning error code 404.\n    - `eventhuberror` would be raised when service returning other error codes.\n\n## 5.0.0b6 (2019-12-03)\n\n**breaking changes**\n\n- all exceptions should now be imported from `azure.eventhub.exceptions`.\n- introduced separate `eventhubsharedkeycredential` objects for synchronous and asynchronous operations.\n  for async, import the credentials object from the `azure.eventhub.aio` namespace.\n- `eventdata`\n    - renamed property `application_properties` to `properties`.\n    - `eventdata` no longer has attribute `last_enqueued_event_properties` - use this on `partitioncontext` instead.\n- `evendatabatch`\n    - `eventdatabatch.try_add` has been renamed to `eventdatabatch.add`.\n    - renamed property `size` to `size_in_bytes`.\n    - renamed attribute `max_size` to `max_size_in_bytes`.\n- `eventhubconsumerclient` and `eventhubproducerclient`\n    - renamed method `get_properties` to `get_eventhub_properties`.\n    - renamed parameters in constructor: `host` to `fully_qualified_namespace`, `event_hub_path` to `eventhub_name`.\n    - renamed parameters in `get_partition_properties`: `partition` to `partition_id`.\n    - renamed parameter `consumer_group_name` to `consumer_group` and moved that parameter from `receive` method to the constructor of `eventhubconsumerclient`.\n    - renamed parameter `initial_event_position` to `starting_position` on the `receive` method of `eventhubconsumerclient`.\n    - renamed parameter `event_hub_path` to `eventhub_name` in constructor and `from_connection_string` method of the client object.\n    - `eventhubproducerclient.send` has been renamed to `send_batch` which will only accept `eventdatabatch` object as input.\n    - `eventhubproducerclient.create_batch` now also takes the `partition_id` and `partition_key` as optional parameters (which are no longer specified at send).\n- renamed module `partitionmanager` to `checkpointstore`.\n- receive event callback parameter has been renamed to `on_event` and now operates on a single event rather than a list of events.\n- removed class `eventpostition`.\n    - the `starting_position` parameter of the `receive` method accepts offset(`str`), sequence number(`int`), datetime (`datetime.datetime`) or `dict` of these types.\n    - the `starting_position_inclusive` parameter of the `receive` method accepts `bool` or `dict` indicating whether the given event position is inclusive or not.\n- `partitioncontext` no longer has attribute `owner_id`.\n- `partitioncontext` now has attribute `last_enqueued_event_properties` which is populated if `track_last_enqueued_event_properties` is set to `true` in the `receive` method.\n\n**new features**\n\n- added new parameter `idle_timeout` in construct and `from_connection_string` to `eventhubconsumerclient` and `eventhubproducerclient`\nafter which the underlying connection will close if there is no further activity.\n\n## 5.0.0b5 (2019-11-04)\n\n**breaking changes**\n\n- `eventhubclient`, `eventhubconsumer` and `eventhubproducer` has been removed. use `eventhubproducerclient` and `eventhubconsumerclient` instead.\n    - construction of both objects is the same as it was for the previous client.\n- introduced `eventhubproducerclient` as substitution for`eventhubproducer`.\n    - `eventhubproducerclient` supports sending events to different partitions.\n- introduced `eventhubconsumerclient` as substitution for `eventhubconsumer`.\n    - `eventhubconsumerclient` supports receiving events from single/all partitions.\n    - there are no longer methods which directly return `eventdata`, all receiving is done via callback method: `on_events`.\n- `eventhubconsumerclient` has taken on the responsibility of `eventprocessor`.\n    - `eventhubconsumerclient` now accepts `partitionmanager` to do load-balancing and checkpoint.\n- replaced `partitionprocessor`by four independent callback methods accepted by the `receive` method on `eventhubconsumerclient`.\n    - `on_events(partition_context, events)` called when events are received.\n    - `on_error(partition_context, exception` called when errors occur.\n    - `on_partition_initialize(partition_context)` called when a partition consumer is opened.\n    - `on_partition_close(partition_context, reason)` called when a partition consumer is closed.\n- some modules and classes that were importable from several different places have been removed:\n    - `azure.eventhub.common` has been removed. import from `azure.eventhub` instead.\n    - `azure.eventhub.client_abstract` has been removed. use `azure.eventhub.eventhubproducerclient` or `azure.eventhub.eventhubconsumerclient` instead.\n    - `azure.eventhub.client` has been removed. use `azure.eventhub.eventhubproducerclient` or `azure.eventhub.eventhubconsumerclient` instead.\n    - `azure.eventhub.producer` has been removed. use `azure.eventhub.eventhubproducerclient` instead.\n    - `azure.eventhub.consumer` has been removed. use `azure.eventhub.eventhubconsumerclient` instead.\n    - `azure.eventhub.aio.client_async` has been removed. use `azure.eventhub.aio.eventhubproducerclient` or `azure.eventhub.aio.eventhubconsumerclient` instead.\n    - `azure.eventhub.aio.producer_async` has been removed. use `azure.eventhub.aio.eventhubproducerclient` instead.\n    - `azure.eventhub.aio.consumer_async` has been removed. use `azure.eventhub.aio.eventhubconsumerclient` instead.\n    - `azure.eventhub.aio.event_processor.event_processor` has been removed. use `azure.eventhub.aio.eventhubconsumerclient` instead.\n    - `azure.eventhub.aio.event_processor.partition_processor` has been removed. use callback methods instead.\n    - `azure.eventhub.aio.event_processor.partition_manager` has been removed. import from `azure.eventhub.aio` instead.\n    - `azure.eventhub.aio.event_processor.partition_context` has been removed. import from `azure.eventhub.aio` instead.\n    - `azure.eventhub.aio.event_processor.sample_partition_manager` has been removed.\n\n**bug fixes**\n\n- fixed bug in user-agent string not being parsed.\n\n## 5.0.0b4 (2019-10-08)\n\n**new features**\n\n- added support for tracing (issue #7153).\n- added the capability of tracking last enqueued event properties of the partition to `eventhubconsumer` .\n    - added new boolean type parameter`track_last_enqueued_event_properties` in method `eventhubclient.create_consumer()`.\n    - added new property `last_enqueued_event_properties` of `eventhubconsumer` which contains sequence_number, offset, enqueued_time and retrieval_time information.\n    - by default the capability is disabled as it will cost extra bandwidth for transferring more information if turned on.\n\n**breaking changes**\n\n- removed support for iot hub direct connection.\n    - [eventhubs compatible connection string](https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messages-read-builtin) of an iothub can be used to create `eventhubclient` and read properties or events from an iot hub.\n- removed support for sending eventdata to iot hub.\n- removed parameter `exception` in method `close()` of `eventhubconsumer` and `eventhubprocuer`.\n- updated uamqp dependency to 1.2.3.\n\n## 5.0.0b3 (2019-09-10)\n\n**new features**\n\n- added support for automatic load balancing among multiple `eventprocessor`.\n- added `blobpartitionmanager` which implements `partitionmanager`.\n    - azure blob storage is applied for storing data used by `eventprocessor`.\n    - packaged separately as a plug-in to `eventprocessor`.\n    - for details, please refer to [azure blob storage partition manager](https://github.com/azure/azure-sdk-for-python/tree/main/sdk/eventhub/azure-eventhub-checkpointstoreblob-aio).\n- added property `system_properties` on `eventdata`.\n\n**breaking changes**\n\n- removed constructor method of `partitionprocessor`. for initialization please implement the method `initialize`.\n- replaced `checkpointmanager` by `partitioncontext`.\n    - `partitioncontext` has partition context information and method `update_checkpoint`.\n- updated all methods of `partitionprocessor` to include `partitioncontext` as part of the arguments.\n- updated accessibility of class members in `eventhub/eventhubconsumer/eventhubproducer`to be private.\n- moved `azure.eventhub.eventprocessor` under `aio` package, which now becomes `azure.eventhub.aio.eventprocessor`.\n\n## 5.0.0b2 (2019-08-06)\n\n**new features**\n\n- added method `create_batch` on the `eventhubproducer` to create an `eventdatabatch` that can then be used to add events until the maximum size is reached.\n    - this batch object can then be used in the `send()` method to send all the added events to event hubs.\n    - this allows publishers to build batches without the possibility of encountering the error around the message size exceeding the supported limit when sending events.\n    - it also allows publishers with bandwidth concerns to control the size of each batch published.\n- added new configuration parameters for exponential delay between retry operations.\n    - `retry_total`: the total number of attempts to redo the failed operation.\n    - `backoff_factor`: the delay time factor.\n    - `backoff_max`: the maximum delay time in total.\n- added support for context manager on `eventhubclient`.\n- added new error type `operationtimeouterror` for send operation.\n- introduced a new class `eventprocessor` which replaces the older concept of [event processor host](https://docs.microsoft.com/azure/event-hubs/event-hubs-event-processor-host). this early preview is intended to allow users to test the new design using a single instance of `eventprocessor`. the ability to checkpoints to a durable store will be added in future updates.\n    - `eventprocessor`: eventprocessor creates and runs consumers for all partitions of the eventhub.\n    - `partitionmanager`: partitionmanager defines the interface for getting/claiming ownerships of partitions and updating checkpoints.\n    - `partitionprocessor`: partitionprocessor defines the interface for processing events.\n    - `checkpointmanager`: checkpointmanager takes responsibility for updating checkpoints during events processing.\n\n**breaking changes**\n\n- `eventprocessorhost` was replaced by `eventprocessor`, please read the new features for details.\n- replaced `max_retries` configuration parameter of the eventhubclient with `retry_total`.\n\n\n## 5.0.0b1 (2019-06-25)\n\nversion 5.0.0b1 is a preview of our efforts to create a client library that is user friendly and idiomatic to the python ecosystem. the reasons for most of the changes in this update can be found in the [azure sdk design guidelines for python](https://azuresdkspecs.z5.web.core.windows.net/pythonspec.html). for more information, please visit https://aka.ms/azure-sdk-preview1-python.\n\n**new features**\n\n- added new configuration parameters for creating eventhubclient.\n  - `credential`: the credential object used for authentication which implements `tokencredential` interface of getting tokens.\n  - `transport_type`: the type of transport protocol that will be used for communicating with the event hubs service.\n  - `max_retries`: the max number of attempts to redo the failed operation when an error happened.\n  - for detailed information about the configuration parameters, please read the reference documentation.\n- added new methods `get_partition_properties` and `get_partition_ids` to eventhubclient.\n- added support for http proxy.\n- added support for authentication using azure-identity credential.\n- added support for transport using amqp over websocket.\n\n**breaking changes**\n\n- new error hierarchy\n  - `azure.error.eventhuberror`\n  - `azure.error.connectionlosterror`\n  - `azure.error.connecterror`\n  - `azure.error.authenticationerror`\n  - `azure.error.eventdataerror`\n  - `azure.error.eventdatasenderror`\n- renamed sender/receiver to eventhubproducer/eventhubconsumer.\n  - renamed `add_sender` to `create_producer` and `add_receiver` to `create_consumer` in eventhubclient.\n  - eventhubconsumer is now iterable.\n- rename class azure.eventhub.offset to azure.eventhub.eventposition.\n- rename method `get_eventhub_info` to `get_properties` of eventhubclient.\n- reorganized connection management, eventhubclient is no longer responsible for opening/closing eventhubproducer/eventhubconsumer.\n  - each eventhubproducer/eventhubconsumer is responsible for its own connection management.\n  - added support for context manager on eventhubproducer and eventhubconsumer.\n- reorganized async apis into \"azure.eventhub.aio\" namespace and rename to drop the \"_async\" suffix.\n- updated uamqp dependency to 1.2.\n\n## 1.3.1 (2019-02-28)\n\n**bugfixes**\n\n- fixed bug where datetime offset filter was using a local timestamp rather than utc.\n- fixed stackoverflow error in continuous connection reconnect attempts.\n\n\n## 1.3.0 (2019-01-29)\n\n**bugfixes**\n\n- added support for auto reconnect on token expiration and other auth errors (issue #89).\n\n**features**\n\n- added ability to create servicebusclient from an existing sas auth token, including\n  providing a function to auto-renew that token on expiry.\n- added support for storing a custom eph context value in checkpoint (pr #84, thanks @konstantinmiller)\n\n\n## 1.2.0 (2018-11-29)\n\n- support for python 2.7 in azure.eventhub module (azure.eventprocessorhost will not support python 2.7).\n- parse eventdata.enqueued_time as a utc timestamp (issue #72, thanks @vjrantal)\n\n\n## 1.1.1 (2018-10-03)\n\n- fixed bug in azure namespace package.\n\n\n## 1.1.0 (2018-09-21)\n\n- changes to `azurestoragecheckpointleasemanager` parameters to support other connection options (issue #61):\n  - the `storage_account_name`, `storage_account_key` and `lease_container_name` arguments are now optional keyword arguments.\n  - added a `sas_token` argument that must be specified with `storage_account_name` in place of `storage_account_key`.\n  - added an `endpoint_suffix` argument to support storage endpoints in national clouds.\n  - added a `connection_string` argument that, if specified, overrides all other endpoint arguments.\n  - the `lease_container_name` argument now defaults to `\"eph-leases\"` if not specified.\n\n- fix for clients failing to start if run called multipled times (issue #64).\n- added convenience methods `body_as_str` and `body_as_json` to eventdata object for easier processing of message data.\n\n\n## 1.0.0 (2018-08-22)\n\n- api stable.\n- renamed internal `_async` module to `async_ops` for docs generation.\n- added optional `auth_timeout` parameter to `eventhubclient` and `eventhubclientasync` to configure how long to allow for token\n  negotiation to complete. default is 60 seconds.\n- added optional `send_timeout` parameter to `eventhubclient.add_sender` and `eventhubclientasync.add_async_sender` to determine the\n  timeout for events to be successfully sent. default value is 60 seconds.\n- reformatted logging for performance.\n\n\n## 0.2.0 (2018-08-06)\n\n- stability improvements for eph.\n- updated uamqp version.\n- added new configuration options for sender and receiver; `keep_alive` and `auto_reconnect`.\n  these flags have been added to the following:\n\n  - `eventhubclient.add_receiver`\n  - `eventhubclient.add_sender`\n  - `eventhubclientasync.add_async_receiver`\n  - `eventhubclientasync.add_async_sender`\n  - `ephoptions.keey_alive_interval`\n  - `ephoptions.auto_reconnect_on_error`\n\n\n## 0.2.0rc2 (2018-07-29)\n\n- **breaking change** `eventdata.offset` will now return an object of type `~uamqp.common.offset` rather than str.\n  the original string value can be retrieved from `~uamqp.common.offset.value`.\n- each sender/receiver will now run in its own independent connection.\n- updated uamqp dependency to 0.2.0\n- fixed issue with iothub clients not being able to retrieve partition information.\n- added support for http proxy settings to both eventhubclient and eph.\n- added error handling policy to automatically reconnect on retryable error.\n- added keep-alive thread for maintaining an unused connection.\n\n\n## 0.2.0rc1 (2018-07-06)\n\n- **breaking change** restructured library to support python 3.7. submodule `async` has been renamed and all classes from\n  this module can now be imported from azure.eventhub directly.\n- **breaking change** removed optional `callback` argument from `receiver.receive` and `asyncreceiver.receive`.\n- **breaking change** `eventdata.properties` has been renamed to `eventdata.application_properties`.\n  this removes the potential for messages to be processed via callback for not yet returned\n  in the batch.\n- updated uamqp dependency to v0.1.0\n- added support for constructing iothub connections.\n- fixed memory leak in receive operations.\n- dropped python 2.7 wheel support.\n\n\n## 0.2.0b2 (2018-05-29)\n\n- added `namespace_suffix` to eventhubconfig() to support national clouds.\n- added `device_id` attribute to eventdata to support iot hub use cases.\n- added message header to workaround service bug for partitionkey support.\n- updated uamqp dependency to vrc1.\n\n\n## 0.2.0b1 (2018-04-20)\n\n- updated uamqp to latest version.\n- further testing and minor bug fixes.\n\n\n## 0.2.0a2 (2018-04-02)\n\n- updated uaqmp dependency.\n",
  "docs_url": null,
  "keywords": "azure,azure sdk",
  "license": "mit license",
  "name": "azure-eventhub",
  "package_url": "https://pypi.org/project/azure-eventhub/",
  "project_url": "https://pypi.org/project/azure-eventhub/",
  "project_urls": {
    "Homepage": "https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/eventhub/azure-eventhub"
  },
  "release_url": "https://pypi.org/project/azure-eventhub/5.11.5/",
  "requires_dist": [
    "azure-core<2.0.0,>=1.14.0",
    "typing-extensions>=4.0.1"
  ],
  "requires_python": ">=3.7",
  "summary": "microsoft azure event hubs client library for python",
  "version": "5.11.5",
  "releases": [],
  "developers": [
    "azpysdkhelp@microsoft.com",
    "microsoft_corporation"
  ],
  "kwds": "azure azuresdkdocs azuresdkspecs eventhubs eventhub",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_azure_eventhub",
  "homepage": "https://github.com/azure/azure-sdk-for-python/tree/main/sdk/eventhub/azure-eventhub",
  "release_count": 54,
  "dependency_ids": [
    "pypi_azure_core",
    "pypi_typing_extensions"
  ],
  "documentation_summary": "The provided HTML text is a detailed overview of the Azure Event Hubs client library for Python, hosted on GitHub under the Azure organization. The library facilitates publishing and consuming events from Azure Event Hubs, a highly scalable publish-subscribe service. It covers key concepts like EventHubProducerClient and EventHubConsumerClient, partitions, and consumer groups. The README.md file includes sections on getting started, prerequisites (such as Python 3.8 or later and an Azure subscription), installing the package, authenticating the client, and various examples of using the library for event publishing and consumption, both synchronously and asynchronously. It also touches on advanced topics like using EventHubConsumerClient with IoT Hub, troubleshooting, and contributing to the project. Additional files in the repository include documentation, samples, tests, and licensing information.",
  "embedding": [
    -0.017724161967635155,
    0.002035466255620122,
    -0.007167859468609095,
    -0.02753281220793724,
    0.021359534934163094,
    0.0170931164175272,
    -0.008368218317627907,
    0.006015514489263296,
    -0.0021194915752857924,
    -0.031250495463609695,
    -0.0005294441943988204,
    0.011413701809942722,
    -0.014774707145988941,
    0.037039656192064285,
    -0.027477938681840897,
    -0.012147635221481323,
    0.02263534627854824,
    -0.02712126076221466,
    -0.000547878269571811,
    -0.014349437318742275,
    0.001696793595328927,
    -0.006968942936509848,
    -0.0012981027830392122,
    -0.008066413924098015,
    -0.01901368983089924,
    0.0005727428360842168,
    0.02192199043929577,
    -0.03215590864419937,
    0.01362922228872776,
    0.012600342743098736,
    0.03182666748762131,
    -0.0033387134317308664,
    -0.008423092775046825,
    -0.017134271562099457,
    -0.01236027106642723,
    0.009465689770877361,
    0.01489817351102829,
    0.01725773699581623,
    0.0491667166352272,
    -0.0004441329219844192,
    0.018272897228598595,
    0.012991316616535187,
    0.006063528824597597,
    0.027862053364515305,
    -0.03572269156575203,
    -0.015625247731804848,
    0.008718037977814674,
    -0.020289501175284386,
    -0.01325196586549282,
    0.004856310784816742,
    0.01677759364247322,
    -0.005531941540539265,
    -0.01251803245395422,
    -0.018039684742689133,
    0.010309371165931225,
    -0.00045056341332383454,
    -0.01131767313927412,
    0.03934434801340103,
    -0.011159911751747131,
    -0.0016427773516625166,
    0.016146546229720116,
    0.008978687226772308,
    -0.014184816740453243,
    -0.011948718689382076,
    -0.019713329151272774,
    -0.004441329278051853,
    -0.04121004790067673,
    -0.01061803475022316,
    0.022964587435126305,
    0.0030626310035586357,
    0.031223058700561523,
    0.02465195022523403,
    -0.024542203173041344,
    -0.011153052560985088,
    0.014719833619892597,
    -0.024679386988282204,
    -0.02712126076221466,
    -0.0027642559725791216,
    -0.006211001891642809,
    -0.005706850904971361,
    0.004804866388440132,
    -0.0008698317687958479,
    0.0006769168539904058,
    0.020152317360043526,
    0.013361712917685509,
    0.020934265106916428,
    -0.014857018366456032,
    0.007222732994705439,
    0.008793489076197147,
    -0.011173630133271217,
    0.019589863717556,
    -0.01633860357105732,
    -0.014843299984931946,
    0.024981191381812096,
    0.007250169757753611,
    0.036490920931100845,
    -0.008429951965808868,
    0.016215138137340546,
    0.009945834055542946,
    -0.018204305320978165,
    -0.006118402350693941,
    0.021565310657024384,
    -0.025228122249245644,
    -0.004794577602297068,
    -0.03920716419816017,
    0.011928141117095947,
    0.00036225127405487,
    -0.007812623865902424,
    0.01517254114151001,
    0.018204305320978165,
    -0.009602873586118221,
    0.014102506451308727,
    -0.003009472042322159,
    -0.028890931978821754,
    -0.013039330951869488,
    0.007442227564752102,
    0.001166920643299818,
    0.01897253468632698,
    0.003950896672904491,
    0.0013649798929691315,
    -0.014760988764464855,
    0.039179727435112,
    -0.014225971885025501,
    -0.02082451805472374,
    -0.0032752659171819687,
    0.004828873556107283,
    0.007325620856136084,
    -0.03857611492276192,
    0.03810968995094299,
    -0.018025966361165047,
    0.010089877061545849,
    -0.01311478205025196,
    -0.0013418301241472363,
    -0.004701978527009487,
    -0.005696562118828297,
    0.028369633480906487,
    -0.004883747547864914,
    -0.004798007197678089,
    -0.040496692061424255,
    -0.003162089269608259,
    -0.00512724881991744,
    0.025845449417829514,
    -0.012751244939863682,
    -0.017614414915442467,
    -0.025461334735155106,
    0.03273208066821098,
    -0.002688804641366005,
    0.0022823973558843136,
    0.021071448922157288,
    0.015227414667606354,
    0.02068733423948288,
    0.01873932220041752,
    -0.01979563944041729,
    0.010350526310503483,
    0.010103595443069935,
    0.010693485848605633,
    0.0005140109569765627,
    0.006269305013120174,
    -0.011255940422415733,
    -0.018341489136219025,
    0.001210648100823164,
    0.03064688667654991,
    -0.019192028790712357,
    -0.037039656192064285,
    -0.012778681702911854,
    0.030948691070079803,
    0.007696017622947693,
    -0.007195296231657267,
    -0.005219847895205021,
    -0.007524537853896618,
    -0.01928805746138096,
    0.003477612277492881,
    -0.023444730788469315,
    -0.03446060046553612,
    0.011091319844126701,
    0.010604316368699074,
    0.02411693148314953,
    0.01447290275245905,
    -0.012812977656722069,
    -0.016352321952581406,
    0.01558409258723259,
    0.008793489076197147,
    0.010919839143753052,
    0.014212253503501415,
    -0.022525599226355553,
    -0.004650534596294165,
    0.005847464315593243,
    -0.019123436883091927,
    0.026627397164702415,
    0.010295652784407139,
    0.029028115794062614,
    0.055120497941970825,
    -0.013073626905679703,
    -0.035091646015644073,
    -0.6031702160835266,
    -0.02295086905360222,
    -0.01075521856546402,
    -0.014020196162164211,
    -0.00470883771777153,
    0.006574539002031088,
    0.02233354188501835,
    0.0251732487231493,
    -0.01989166811108589,
    0.02349960431456566,
    -0.019397806376218796,
    0.023883718997240067,
    -0.013608644716441631,
    -0.007366776000708342,
    -0.005809738766402006,
    0.01358120795339346,
    0.011530308052897453,
    -0.008704319596290588,
    -0.008395656011998653,
    -0.007565692998468876,
    -0.012833555229008198,
    0.031003564596176147,
    -0.028781184926629066,
    -0.029714036732912064,
    0.014253408648073673,
    0.02130466140806675,
    -0.005940063390880823,
    0.007126704324036837,
    0.017202863469719887,
    0.010467132553458214,
    -0.027080105617642403,
    0.014637523330748081,
    0.02952197752892971,
    -0.009692043997347355,
    0.050428807735443115,
    0.01216135360300541,
    -0.006965513341128826,
    0.03934434801340103,
    -0.023238955065608025,
    0.05147140473127365,
    0.0033661501947790384,
    -0.008196738548576832,
    0.01383499801158905,
    0.004585372284054756,
    0.03651835769414902,
    0.00234241527505219,
    0.010693485848605633,
    0.011324532330036163,
    -0.006221290677785873,
    0.002308119321241975,
    0.007771468721330166,
    -0.006855766288936138,
    0.007140422705560923,
    -0.007442227564752102,
    0.01945267990231514,
    0.02723100781440735,
    0.026668552309274673,
    -0.009047279134392738,
    0.010919839143753052,
    0.004719126503914595,
    -0.03363749757409096,
    -0.005343313328921795,
    -0.0245833583176136,
    -0.03168948367238045,
    0.0032684067264199257,
    0.00356678175739944,
    0.010954135097563267,
    -0.013485178351402283,
    -0.0012843844015151262,
    -0.023170363157987595,
    -0.001677930704317987,
    0.019507553428411484,
    0.011482293717563152,
    -0.02636674791574478,
    0.039399221539497375,
    0.029768910259008408,
    0.023746535181999207,
    0.00340730557218194,
    -0.01746351271867752,
    0.04263675957918167,
    -0.003998911008238792,
    -0.009760635904967785,
    -0.00016151262389030308,
    -0.02002885192632675,
    0.039810772985219955,
    -0.005792590789496899,
    -0.03459778428077698,
    -0.017449794337153435,
    -0.004304145462810993,
    -0.004170390777289867,
    0.00321010360494256,
    0.004269849509000778,
    -0.012236804701387882,
    -0.018204305320978165,
    -0.0013101063668727875,
    0.014911891892552376,
    -0.0018211164278909564,
    0.018108276650309563,
    -0.028781184926629066,
    0.008189879357814789,
    0.021483000367879868,
    -0.020879391580820084,
    -0.005209559109061956,
    -0.010377963073551655,
    0.028040392324328423,
    0.00895810965448618,
    -0.01784762740135193,
    -0.017449794337153435,
    0.023033179342746735,
    -0.0092804916203022,
    -0.01454149466007948,
    -0.029137862846255302,
    -0.0031192193273454905,
    -0.00499006500467658,
    -0.003421023953706026,
    -0.02815013937652111,
    0.0021109175868332386,
    0.01904112659394741,
    0.00861515011638403,
    0.006903780624270439,
    0.01426712702959776,
    -0.004036636557430029,
    -0.006893491838127375,
    0.01716170832514763,
    0.03037251904606819,
    0.02041296660900116,
    -0.004585372284054756,
    -0.039262037724256516,
    -0.03492702543735504,
    0.006375622469931841,
    0.02089310996234417,
    0.00789493415504694,
    0.036079369485378265,
    -0.005799449980258942,
    0.04093568027019501,
    -0.003978333435952663,
    0.06195225566625595,
    -0.013073626905679703,
    0.0003320279356557876,
    -0.012277960777282715,
    -0.019576145336031914,
    0.007394212763756514,
    0.016242574900388718,
    -0.015364598482847214,
    0.0049077547155320644,
    -0.02476169727742672,
    -0.024446172639727592,
    0.002817414700984955,
    -0.012943302281200886,
    -0.009115871042013168,
    -0.02647649496793747,
    -0.020975420251488686,
    -0.018711885437369347,
    0.02839707024395466,
    0.016146546229720116,
    -0.017271455377340317,
    -0.0017370913410559297,
    -0.017683006823062897,
    0.010439695790410042,
    -0.0008055267971940339,
    -0.005329594947397709,
    0.013594926334917545,
    -0.019356651231646538,
    0.0016624975251033902,
    -0.028753748163580894,
    9.667179256211966e-05,
    -0.01842379942536354,
    0.02329382859170437,
    0.0046402458101511,
    -0.0210577305406332,
    0.0038617271929979324,
    -0.01544690877199173,
    -0.0031860964372754097,
    0.007572552189230919,
    0.01406135130673647,
    0.001164348446764052,
    -0.007682299241423607,
    -0.004602520260959864,
    0.012950161471962929,
    0.004180679563432932,
    0.010796373710036278,
    0.03547576069831848,
    -0.017175426706671715,
    -0.008491684682667255,
    0.03687503561377525,
    0.016311166808009148,
    0.006176705937832594,
    0.02613353542983532,
    -0.010158468969166279,
    -0.023444730788469315,
    -0.015570374205708504,
    0.01901368983089924,
    -0.007682299241423607,
    0.036353737115859985,
    -0.018958816304802895,
    -0.005219847895205021,
    0.0007922371150925756,
    -0.004060643725097179,
    -0.0018862788565456867,
    0.024638231843709946,
    0.040908243507146835,
    0.007428509183228016,
    -0.00727074733003974,
    -0.005586815066635609,
    -0.023033179342746735,
    0.016997087746858597,
    0.008491684682667255,
    0.000639620004221797,
    0.008635727688670158,
    -0.013464600779116154,
    0.056355152279138565,
    0.007510819472372532,
    -0.03146998956799507,
    0.00496605783700943,
    -0.011447997763752937,
    0.0019617299549281597,
    -0.008327063173055649,
    0.006224720273166895,
    -0.034405726939439774,
    0.0023184081073850393,
    0.02167505770921707,
    0.0009740057867020369,
    -0.005322735756635666,
    -0.015268569812178612,
    -0.008622009307146072,
    -0.007140422705560923,
    0.04288369044661522,
    0.04041438177227974,
    0.005288439802825451,
    -0.006529954262077808,
    0.014802143909037113,
    0.05092266947031021,
    0.029878657311201096,
    -0.02540646120905876,
    0.01698336936533451,
    -0.002081765793263912,
    0.028506817296147346,
    -0.01705196127295494,
    0.027381910011172295,
    -0.02391115576028824,
    0.015872178599238396,
    0.01270323060452938,
    0.04038694500923157,
    -0.010288793593645096,
    0.016516942530870438,
    0.01753210462629795,
    0.010425977408885956,
    -0.006773455999791622,
    -0.004019488580524921,
    -0.004283567890524864,
    0.004362448584288359,
    0.02771115116775036,
    -0.004653964191675186,
    0.002361278049647808,
    0.010295652784407139,
    -0.015158822759985924,
    -0.018245460465550423,
    0.007023816462606192,
    0.03728658705949783,
    0.013018753379583359,
    -0.002877432620152831,
    0.004595661070197821,
    0.0265450868755579,
    0.01106388308107853,
    0.04894721880555153,
    -0.01938408799469471,
    -0.006121831946074963,
    -0.022594191133975983,
    -0.015131385996937752,
    -0.0343782901763916,
    -0.009033560752868652,
    -0.0219905823469162,
    -0.01578986831009388,
    -0.022553035989403725,
    0.025598518550395966,
    -0.004523639567196369,
    0.010165328159928322,
    0.014843299984931946,
    0.0007223590509966016,
    -0.0012458014534786344,
    -0.028205012902617455,
    -0.016242574900388718,
    0.03627142682671547,
    0.00720215542241931,
    -0.00033781537786126137,
    -0.002740248804911971,
    0.01027507521212101,
    0.013642940670251846,
    -0.033610060811042786,
    0.03273208066821098,
    -0.005778872407972813,
    0.014308282174170017,
    -0.01887650601565838,
    0.004732844885438681,
    -0.033719807863235474,
    0.0031192193273454905,
    0.02000141516327858,
    -0.001084610354155302,
    -0.004160101991146803,
    -0.01622885651886463,
    0.011173630133271217,
    -0.006180135533213615,
    -0.008786629885435104,
    0.02407577633857727,
    0.042691633105278015,
    0.009822368621826172,
    0.015734994783997536,
    -0.0040160589851439,
    -0.017724161967635155,
    -0.023142926394939423,
    -0.0013649798929691315,
    0.01378698367625475,
    -0.009712621569633484,
    -0.02311548963189125,
    0.00046899751760065556,
    0.0033661501947790384,
    -0.012593483552336693,
    -0.008498543873429298,
    0.013011894188821316,
    -0.00524042546749115,
    -0.009362801909446716,
    -0.02311548963189125,
    -0.024871444329619408,
    -0.00012260812218300998,
    0.024130649864673615,
    0.005164974369108677,
    0.007510819472372532,
    0.015474345535039902,
    -0.011969296261668205,
    -0.010165328159928322,
    -0.035091646015644073,
    0.006656849291175604,
    0.023609351366758347,
    0.004286997485905886,
    -0.024528484791517258,
    0.005329594947397709,
    -0.004417322110384703,
    0.01657181605696678,
    0.02373281680047512,
    0.0028894362039864063,
    -0.008690601214766502,
    0.014911891892552376,
    -0.0012766678119078279,
    -0.031387679278850555,
    0.01327254343777895,
    0.030399955809116364,
    0.0004128378350287676,
    -0.005672554951161146,
    0.019768202677369118,
    0.023280110210180283,
    0.013169655576348305,
    0.0030694901943206787,
    -0.015556655824184418,
    -0.0336923711001873,
    -0.01313535962253809,
    0.011050164699554443,
    0.010192764922976494,
    0.03295157477259636,
    -0.028616564348340034,
    0.0480966791510582,
    0.00720215542241931,
    0.01356063038110733,
    0.01853354647755623,
    -0.009499985724687576,
    0.01018590573221445,
    0.0010648901807144284,
    -0.002266964176669717,
    -0.001540746889077127,
    -0.015625247731804848,
    -0.031250495463609695,
    -0.0018536977004259825,
    0.023856282234191895,
    -0.022594191133975983,
    0.009047279134392738,
    0.006673997268080711,
    0.001973733538761735,
    -0.03874073922634125,
    -0.025598518550395966,
    0.010899261571466923,
    -0.007586270570755005,
    0.007737172767519951,
    -0.026874328032135963,
    -0.01821802370250225,
    -0.05215732380747795,
    -0.016105391085147858,
    -0.03459778428077698,
    -0.006125262007117271,
    0.0025619096122682095,
    -0.018615856766700745,
    0.00305748637765646,
    0.011845830827951431,
    0.0007935232133604586,
    -0.011790957301855087,
    0.00043041454046033323,
    0.0203718114644289,
    -0.0016127683920785785,
    -0.01265521626919508,
    0.008436811156570911,
    0.04757538065314293,
    0.00220523145981133,
    -0.0004040494968649,
    0.006842047907412052,
    0.00047285581240430474,
    0.004701978527009487,
    -0.000620328530203551,
    -0.023924874141812325,
    0.0034398867283016443,
    -0.029028115794062614,
    0.00030930686625652015,
    -0.00957543682307005,
    -0.004070932511240244,
    -0.005202699918299913,
    0.007805764675140381,
    0.03319850564002991,
    -4.89253579871729e-05,
    -0.010631753131747246,
    0.025433897972106934,
    0.001905141631141305,
    0.03616167977452278,
    0.02472054213285446,
    -0.02338985726237297,
    -0.00893753208220005,
    -0.0006473365938290954,
    -0.0035427745897322893,
    -0.0167501550167799,
    -0.027656277641654015,
    0.010494569316506386,
    -0.022484444081783295,
    0.015213696286082268,
    0.0018005388556048274,
    -0.007353057619184256,
    0.0192469023168087,
    -0.013217669911682606,
    0.004952339455485344,
    0.018272897228598595,
    -0.0074079311452806,
    -0.0025121804792433977,
    -0.004489343613386154,
    0.012456299737095833,
    0.006831759121268988,
    -0.004400174133479595,
    0.021153759211301804,
    -0.004849451594054699,
    -0.0110433055087924,
    0.005223277490586042,
    -0.039673589169979095,
    0.009884101338684559,
    0.018108276650309563,
    0.003294128691777587,
    0.02377397194504738,
    -0.0012826696038246155,
    -0.03341799974441528,
    -0.017285173758864403,
    -0.005614251829683781,
    0.02295086905360222,
    -0.0017885352717712522,
    0.0049008955247700214,
    -0.012408285401761532,
    -0.011509730480611324,
    -0.01670899987220764,
    4.766604979522526e-05,
    0.015940770506858826,
    -0.011893845163285732,
    -0.020426684990525246,
    -0.006547102238982916,
    -0.005868041887879372,
    -0.016763875260949135,
    0.008916954509913921,
    -0.020934265106916428,
    -0.027820898219943047,
    -0.03319850564002991,
    0.031524863094091415,
    0.0019085712265223265,
    0.003642232855781913,
    0.01345774158835411,
    -0.002474454930052161,
    -0.0013426875229924917,
    -0.005991507321596146,
    -0.02400718443095684,
    -0.011674351058900356,
    0.026311874389648438,
    -0.013711532577872276,
    0.015364598482847214,
    0.03424110636115074,
    0.04085336998105049,
    -0.0016264867736026645,
    0.014027055352926254,
    -0.00016322742158081383,
    0.006608834955841303,
    -0.014116224832832813,
    -0.011832112446427345,
    0.01186640840023756,
    0.0217436496168375,
    -0.030317645519971848,
    0.004506491590291262,
    0.011962437070906162,
    0.0177790354937315,
    -0.018094558268785477,
    0.009266773238778114,
    0.00702038686722517,
    0.01454149466007948,
    0.005754865240305662,
    -0.02668227069079876,
    -0.04293856397271156,
    0.01124908123165369,
    0.011674351058900356,
    -0.013437164016067982,
    0.022004300728440285,
    -0.05245912820100784,
    -0.027340754866600037,
    0.010439695790410042,
    -0.006835188716650009,
    -0.003489615861326456,
    -0.006958654150366783,
    0.008320203982293606,
    -0.014582649804651737,
    0.01332055777311325,
    0.007126704324036837,
    0.008086991496384144,
    -0.011022727936506271,
    0.01986423134803772,
    -0.02784833498299122,
    -0.019644737243652344,
    0.006409918423742056,
    0.044914014637470245,
    0.010453414171934128,
    -0.001088897348381579,
    0.00018348348385188729,
    0.006804322358220816,
    0.03105843812227249,
    0.02698407508432865,
    -0.012463158927857876,
    0.02439129911363125,
    -0.029768910259008408,
    -0.028506817296147346,
    -0.00572742847725749,
    -0.014088788069784641,
    -0.028067829087376595,
    0.00505865691229701,
    -0.0008205312769860029,
    0.02380140870809555,
    0.01202416978776455,
    -0.027354473248124123,
    0.025667110458016396,
    0.03352775052189827,
    -0.0035290562082082033,
    0.03591474890708923,
    0.008313344791531563,
    0.030317645519971848,
    0.038987670093774796,
    0.018437517806887627,
    0.003683388000354171,
    -0.01609167270362377,
    -0.03446060046553612,
    0.0020989140029996634,
    0.02078336291015148,
    0.009253054857254028,
    0.0033181358594447374,
    0.006639701314270496,
    0.005655406974256039,
    -0.019342932850122452,
    0.0006151841371320188,
    -0.00868374202400446,
    0.03934434801340103,
    0.021963145583868027,
    0.0009079860174097121,
    -0.006454503163695335,
    -0.03229309245944023,
    -0.006725441198796034,
    0.023787690326571465,
    -0.0028191294986754656,
    -0.004252701532095671,
    0.02677829936146736,
    -0.023403575643897057,
    -0.009561718441545963,
    0.020179754123091698,
    -0.004760281648486853,
    0.023280110210180283,
    -0.00171479897107929,
    -0.003518767422065139,
    -0.03382955491542816,
    -0.011091319844126701,
    -0.04699920862913132,
    -0.0177790354937315,
    -0.013155937194824219,
    0.010810092091560364,
    -0.0378078855574131,
    -0.008265330456197262,
    0.05610822141170502,
    0.0030197608284652233,
    -0.029055552557110786,
    -0.013732110150158405,
    0.0011763520305976272,
    0.031140748411417007,
    -0.03767070174217224,
    -0.018849069252610207,
    0.0004741419106721878,
    -0.018231742084026337,
    0.009081575088202953,
    -0.00998013000935316,
    -0.007071830797940493,
    -0.006584827788174152,
    -0.007654862478375435,
    -0.013464600779116154,
    -0.006722011603415012,
    -0.0021194915752857924,
    -0.010268216021358967,
    -0.011345109902322292,
    0.015625247731804848,
    -0.014980483800172806,
    -0.02428155206143856,
    0.0008196738781407475,
    -0.006680856458842754,
    -0.013889871537685394,
    -0.029192736372351646,
    -0.017079398036003113,
    -0.0153783168643713,
    0.01200359221547842,
    0.02284112200140953,
    0.02794436365365982,
    -0.002083480590954423,
    0.055532049387693405,
    7.963097596075386e-05,
    -0.01613282784819603,
    -0.007723454385995865,
    0.006094395183026791,
    -0.0160642359405756,
    0.011832112446427345,
    -0.009822368621826172,
    0.012730667367577553,
    0.023280110210180283,
    0.009102152660489082,
    -0.03934434801340103,
    -0.020947983488440514,
    0.008704319596290588,
    0.05624540522694588,
    0.014308282174170017,
    -0.012881569564342499,
    -0.0074079311452806,
    -0.003985192626714706,
    0.005192411132156849,
    0.005734287668019533,
    -0.006879773456603289,
    0.04529812932014465,
    -0.006481939926743507,
    -0.006598546169698238,
    0.036628104746341705,
    -0.017106834799051285,
    0.017820190638303757,
    -0.005449630785733461,
    0.02304689772427082,
    -0.018725603818893433,
    -0.03410392254590988,
    -0.004667682573199272,
    -0.017628133296966553,
    0.010227060876786709,
    -0.026599960401654243,
    0.017216581851243973,
    -0.026421621441841125,
    -0.03341799974441528,
    -0.03355518728494644,
    0.014308282174170017,
    0.011578322388231754,
    0.004166961181908846,
    -0.00830648560076952,
    0.017175426706671715,
    0.013800702057778835,
    -0.029137862846255302,
    0.0019068564288318157,
    -0.007003238890320063,
    -0.02880862168967724,
    0.003559922566637397,
    -0.03550319746136665,
    0.0012715234188362956,
    -0.0009748631855472922,
    0.021428126841783524,
    0.00838879682123661,
    -0.02839707024395466,
    -0.010563161224126816,
    -0.012456299737095833,
    -0.0227725300937891,
    0.0014018481597304344,
    -0.008429951965808868,
    0.03789019584655762,
    -0.004719126503914595,
    0.01691477745771408,
    0.017010806128382683,
    -0.013217669911682606,
    -0.0030471975915133953,
    0.02146928198635578,
    -0.033856991678476334,
    -0.005219847895205021,
    -0.008505403064191341,
    -0.021002857014536858,
    -0.025228122249245644,
    -0.009589155204594135,
    -0.03585987538099289,
    -0.006389340851455927,
    -1.3597819815913681e-05,
    0.03709452971816063,
    -0.019466398283839226,
    0.05920857563614845,
    -0.00014532920613419265,
    -0.004235553555190563,
    -0.014184816740453243,
    -0.0008959824335761368,
    -0.007229592185467482,
    0.007277606520801783,
    0.004132665228098631,
    -0.0008141007856465876,
    -0.016448350623250008,
    -0.005315876565873623,
    0.003553063375875354,
    -0.01982307620346546,
    0.005466778762638569,
    0.02311548963189125,
    -0.012511173263192177,
    0.014027055352926254,
    -0.027656277641654015,
    -0.009925256483256817,
    -0.014651241712272167,
    0.011214785277843475,
    0.029302483424544334,
    -0.015227414667606354,
    0.005627970211207867,
    0.04184109345078468,
    -0.0032889842987060547,
    0.003642232855781913,
    -0.02071477100253105,
    0.03989308327436447,
    -0.022168921306729317,
    -0.007490241900086403,
    0.025008628144860268,
    -0.012216227129101753,
    -0.03904254361987114,
    -0.02212776616215706,
    0.030043277889490128,
    -0.007119845133274794,
    -0.0015167396049946547,
    -0.00178339087869972,
    -0.009115871042013168,
    -0.015734994783997536,
    -0.0033164210617542267,
    -0.012188790366053581,
    -0.01688734069466591,
    -0.0034038759768009186,
    0.007284465711563826,
    0.016763875260949135,
    0.0010168757289648056,
    -0.020495276898145676,
    -0.006385911256074905,
    -0.03226565569639206,
    -0.0048803179524838924,
    0.001006586942821741,
    -0.00902670156210661,
    -0.016969650983810425,
    0.016558097675442696,
    0.002157217124477029,
    -0.0022000870667397976,
    0.01551550067961216,
    0.15979182720184326,
    0.00422869436442852,
    0.01664040796458721,
    0.007174718659371138,
    0.011701787821948528,
    0.004386455751955509,
    -0.00185198278632015,
    0.006447643972933292,
    -0.009383379481732845,
    0.014706115238368511,
    -0.021290943026542664,
    -0.009390238672494888,
    -0.0018948528449982405,
    0.004605949856340885,
    0.007792046293616295,
    0.0022841121535748243,
    -0.012970739044249058,
    -0.01356063038110733,
    -0.025090938434004784,
    -0.007634284906089306,
    0.0010717493714764714,
    -0.03319850564002991,
    -0.005381038878113031,
    -0.011029587127268314,
    0.028067829087376595,
    -0.009856664575636387,
    -0.029028115794062614,
    0.004756852053105831,
    0.024267833679914474,
    0.021729931235313416,
    -0.01883535087108612,
    0.0012663790257647634,
    -0.009287350811064243,
    -0.0002507893368601799,
    -0.03714940324425697,
    -0.02935735695064068,
    0.0008483967976644635,
    0.013896730728447437,
    0.035256266593933105,
    0.03295157477259636,
    -0.010405399836599827,
    -0.03596962243318558,
    -0.015392035245895386,
    -0.017628133296966553,
    -0.009712621569633484,
    -0.008464247919619083,
    -0.0037725577130913734,
    -0.007250169757753611,
    0.00227382336743176,
    0.0036182256881147623,
    -0.015638966113328934,
    -0.02911042608320713,
    0.013094204477965832,
    0.021976863965392113,
    -0.019699610769748688,
    -0.004516780376434326,
    0.00720215542241931,
    0.02574942074716091,
    0.0020388958510011435,
    0.014225971885025501,
    -0.010748359374701977,
    0.016654126346111298,
    -0.021345816552639008,
    0.011482293717563152,
    -0.03407648578286171,
    -0.007833201438188553,
    -0.02828732319176197,
    0.004585372284054756,
    -0.01133825071156025,
    0.020220909267663956,
    0.0022686789743602276,
    -0.010144750587642193,
    -0.027354473248124123,
    -0.007949807681143284,
    -0.009986989200115204,
    -0.021085167303681374,
    0.033033885061740875,
    0.00748338270932436,
    0.028644001111388206,
    0.03835662081837654,
    0.011125615797936916,
    0.018547264859080315,
    -0.023883718997240067,
    0.014431747607886791,
    -0.005813168361783028,
    -0.01901368983089924,
    0.020124880596995354,
    0.019123436883091927,
    0.003306132275611162,
    -0.008841503411531448,
    -0.017861345782876015,
    -0.029055552557110786,
    0.0110433055087924,
    -0.02130466140806675,
    0.024802852421998978,
    0.019123436883091927,
    0.00018680590437725186,
    -0.003042053198441863,
    -0.019548708572983742,
    0.008916954509913921,
    -0.011468575336039066,
    0.059812188148498535,
    0.012538610026240349,
    -0.0037999944761395454,
    -0.01760069653391838,
    -0.015899615362286568,
    0.002224094234406948,
    0.010878683999180794,
    0.011441138572990894,
    -0.01461008656769991,
    0.011262799613177776,
    -0.010775796137750149,
    -0.013519474305212498,
    0.002189798280596733,
    0.004794577602297068,
    -0.014911891892552376,
    -0.019370369613170624,
    -0.016791312023997307,
    -0.0038891639560461044,
    -0.010679767467081547,
    -0.007771468721330166,
    0.004396744538098574,
    0.003525626612827182,
    0.01592705212533474,
    -0.030043277889490128,
    -0.011550885625183582,
    0.009781213477253914,
    0.01004872191697359,
    -0.013293121010065079,
    -0.014884455129504204,
    0.017449794337153435,
    -0.009870382957160473,
    0.01524113304913044,
    -0.0048940363340079784,
    0.008443670347332954,
    -0.023417294025421143,
    -0.01873932220041752,
    -0.0289458055049181,
    -0.00950684491544962,
    0.0296317245811224,
    -0.023897437378764153,
    -0.03396673873066902,
    0.01440431084483862,
    -0.016873622313141823,
    -0.011098179034888744,
    -0.021208632737398148,
    0.017929937690496445,
    -0.007188437040895224,
    0.006742589175701141,
    -0.013670377433300018,
    0.0021366395521909,
    -0.00547020835801959,
    0.006022373680025339,
    -0.009102152660489082,
    0.02853425405919552,
    -0.024528484791517258,
    -0.010762077756226063,
    -0.016654126346111298,
    -0.006879773456603289,
    -0.005988077726215124,
    -0.02194942720234394,
    0.006656849291175604,
    -0.001972018741071224,
    -0.024171805009245872,
    -0.025776857510209084,
    -0.003796564880758524,
    -0.17263223230838776,
    -0.006447643972933292,
    0.03478984162211418,
    -0.03182666748762131,
    0.022799966856837273,
    -0.023101771250367165,
    0.011235362850129604,
    -0.010782655328512192,
    -0.013361712917685509,
    0.012085902504622936,
    0.03229309245944023,
    0.017340047284960747,
    -0.014184816740453243,
    -0.0328143909573555,
    0.006722011603415012,
    0.010652330704033375,
    0.0034656086936593056,
    -0.003266691928729415,
    0.019973978400230408,
    0.017340047284960747,
    0.03500933572649956,
    -0.012243663892149925,
    0.04387141764163971,
    0.017010806128382683,
    0.011646914295852184,
    -0.024501048028469086,
    -0.0178750641644001,
    0.0019085712265223265,
    0.011050164699554443,
    -0.005010642576962709,
    -0.00033717232872731984,
    0.03188154101371765,
    0.034844715148210526,
    0.013752687722444534,
    0.024363862350583076,
    0.0160642359405756,
    0.02561223693192005,
    -0.01842379942536354,
    -0.020220909267663956,
    0.03536601364612579,
    0.015392035245895386,
    0.008690601214766502,
    0.03325337916612625,
    -0.012120198458433151,
    -0.001838264404796064,
    -0.005885189864784479,
    0.013533192686736584,
    -0.0037862760946154594,
    -0.008395656011998653,
    -0.0314425528049469,
    0.0496605783700943,
    -0.021386971697211266,
    0.005957211367785931,
    -0.0026990934275090694,
    0.009945834055542946,
    0.019919104874134064,
    -0.0010494570014998317,
    -0.01113247498869896,
    -0.004595661070197821,
    -0.02968659996986389,
    0.013293121010065079,
    -0.017888782545924187,
    -0.007696017622947693,
    -0.00998013000935316,
    -0.008347640745341778,
    -0.03103100135922432,
    -0.01986423134803772,
    0.021867115050554276,
    -0.01825917884707451,
    0.00597778894007206,
    0.02636674791574478,
    -0.011290236376225948,
    0.0048940363340079784,
    -0.00880034826695919,
    0.032347965985536575,
    0.01524113304913044,
    -0.025557363405823708,
    0.035119082778692245,
    0.012867851182818413,
    -0.02295086905360222,
    -0.023787690326571465,
    0.0480966791510582,
    -0.021839678287506104,
    0.029329920187592506,
    0.017216581851243973,
    -0.014555213041603565,
    -0.031662046909332275,
    -0.0171891450881958,
    0.006313889753073454,
    0.00012550184328574687,
    0.025049783289432526,
    -0.023060616105794907,
    0.015913333743810654,
    0.0009311358444392681,
    0.005861182697117329,
    0.0013221099507063627,
    0.015968207269906998,
    -0.01011731382459402,
    0.014527776278555393,
    -0.0009371376363560557,
    -0.006917499005794525,
    -0.0006537670851685107,
    -0.011694928631186485,
    -0.0055216527543962,
    0.04845335707068443,
    0.04167647287249565,
    -0.02030321955680847,
    0.02657252363860607,
    0.02712126076221466,
    -0.010240779258310795,
    -0.027560248970985413,
    -0.0018194016302004457,
    0.03190897777676582,
    0.012188790366053581,
    -0.016722718253731728,
    0.033719807863235474,
    -0.0005551661597564816,
    -0.0148158622905612,
    0.003074634587392211,
    -0.009376520290970802,
    0.01928805746138096,
    0.004945480264723301,
    -0.01066604908555746,
    0.004972917027771473,
    -0.026188408955931664,
    -0.04411834850907326,
    -0.09904678910970688,
    -0.04749307036399841,
    0.019713329151272774,
    -0.01574871316552162,
    -0.006262445822358131,
    -0.0007690873462706804,
    -0.006619123741984367,
    0.015940770506858826,
    0.02318408153951168,
    -0.00499006500467658,
    -0.034021612256765366,
    0.029137862846255302,
    -0.007990962825715542,
    -0.019576145336031914,
    0.011790957301855087,
    -0.03048226609826088,
    -0.01780647225677967,
    -0.0007810909301042557,
    -0.02092054672539234,
    0.011187348514795303,
    -0.011125615797936916,
    -0.010590597987174988,
    0.011310813948512077,
    -0.006920928601175547,
    0.013245106674730778,
    0.004019488580524921,
    -0.025159530341625214,
    0.02613353542983532,
    0.03322594240307808,
    0.004376166965812445,
    0.01828661561012268,
    -0.03089381754398346,
    -0.0122916791588068,
    -0.00031316516106016934,
    0.011941859498620033,
    -0.008258471265435219,
    -0.019987696781754494,
    -0.029165299609303474,
    -0.002049184637144208,
    -0.020947983488440514,
    -0.008553417399525642,
    0.019438961520791054,
    0.03243027627468109,
    -0.02002885192632675,
    -0.0012003591982647777,
    0.00544620119035244,
    -0.01917831040918827,
    0.01075521856546402,
    0.018862787634134293,
    -0.013396008871495724,
    -0.026901764795184135,
    0.010199624113738537,
    -0.015844741836190224,
    -0.0009319932432845235,
    0.018862787634134293,
    0.010912979952991009,
    0.0219905823469162,
    0.016667844727635384,
    -0.020934265106916428,
    -0.032485149800777435,
    -0.007867497391998768,
    -0.024569639936089516,
    -0.028918368741869926,
    0.023691661655902863,
    0.005055227316915989,
    -0.006920928601175547,
    0.014390592463314533,
    0.0027728299610316753,
    0.018890224397182465,
    -0.029302483424544334,
    -0.0216476209461689,
    0.014459184370934963,
    -0.012065324932336807,
    0.029851220548152924,
    -0.027752306312322617,
    -0.0016933639999479055,
    0.006958654150366783,
    0.0003873302193824202,
    0.018341489136219025,
    -0.006982661318033934,
    -0.018067121505737305,
    0.006406488828361034,
    -0.011983014643192291,
    -0.01279240008443594,
    0.0007960954098962247,
    0.03618911653757095,
    0.0005405903793871403,
    0.0007862353231757879,
    0.03020789846777916,
    -0.03819200024008751,
    0.026860609650611877,
    0.010446554981172085,
    0.03196385130286217,
    0.005723998881876469,
    -0.006842047907412052,
    0.0016522087389603257,
    0.003393587190657854,
    -0.0022069462575018406,
    -0.026188408955931664,
    0.015323443338274956,
    -0.03215590864419937,
    0.001543319085612893,
    -0.07852407544851303,
    0.025214403867721558,
    0.003546204185113311,
    -0.005974359344691038,
    0.03992052003741264,
    -0.010281934402883053,
    0.01716170832514763,
    -0.02338985726237297,
    0.0022978305350989103,
    0.014116224832832813,
    -0.02853425405919552,
    -0.0031809520442038774,
    0.0020097442902624607,
    0.014088788069784641,
    -0.0015073082176968455,
    -0.023142926394939423,
    0.03794506937265396,
    -0.010816951282322407,
    0.03185410425066948,
    -0.0027522523887455463,
    -0.012346552684903145,
    -0.01592705212533474,
    0.019809357821941376,
    0.00676316674798727,
    -0.033610060811042786,
    -0.009314787574112415,
    -0.002435014583170414,
    -0.00828590802848339,
    -0.019054844975471497,
    -0.01757325977087021,
    0.021112604066729546,
    -0.007085549179464579,
    0.005161544773727655,
    0.02938479371368885,
    0.014706115238368511,
    -0.007997822016477585,
    0.015254851430654526,
    -0.00028208442381583154,
    0.016928495839238167,
    0.019466398283839226,
    -0.02465195022523403,
    -0.012394567020237446,
    0.019589863717556,
    -0.04129235818982124,
    0.0032203923910856247,
    0.0024795993231236935,
    0.007373635191470385,
    -0.0008856936474330723,
    0.03020789846777916,
    0.021222351118922234,
    0.03794506937265396,
    0.007359916809946299,
    -0.025708265602588654,
    -0.04140210524201393,
    0.010432836599647999,
    -0.007613707333803177,
    0.0240483395755291,
    0.004094939678907394,
    -0.01524113304913044,
    0.003775987308472395,
    0.014294563792645931,
    -0.004304145462810993,
    -0.0006361904088407755,
    0.023485885933041573,
    0.007085549179464579,
    -0.020632460713386536,
    -0.02524184063076973,
    -0.022511880844831467,
    -0.02137325331568718,
    -0.005144396796822548,
    -0.03832918405532837,
    -0.032210782170295715,
    0.010467132553458214,
    0.016242574900388718,
    0.046423036605119705,
    -0.03956384211778641,
    -0.0021400691475719213,
    0.005130678415298462,
    -0.017971092835068703,
    0.010912979952991009,
    0.018135713413357735,
    -0.01853354647755623,
    -0.010453414171934128,
    0.00748338270932436,
    0.025090938434004784,
    -0.0032289663795381784,
    -0.03171692043542862,
    -0.014431747607886791,
    -0.010357385501265526,
    -0.006101254373788834,
    0.005792590789496899,
    -0.007318761665374041,
    0.0167501550167799,
    0.03665554150938988,
    0.01111189741641283,
    -0.0015716132475063205,
    -0.01869816705584526,
    -0.018862787634134293,
    0.02677829936146736,
    0.02226494997739792,
    0.02007000707089901,
    0.01766928844153881,
    0.0323205292224884,
    -0.035942185670137405,
    -0.04016745090484619,
    0.005038079340010881,
    0.01236027106642723,
    -0.02397974766790867,
    -0.004386455751955509,
    -0.006643130909651518,
    -0.012223086319863796,
    -0.010604316368699074,
    0.00454764673486352,
    0.0167501550167799,
    -0.01725773699581623,
    0.022443288937211037,
    -0.008711178787052631,
    0.005202699918299913,
    -0.013663518242537975,
    0.018794195726513863,
    -0.00998013000935316,
    0.00660197576507926,
    0.028918368741869926,
    -0.010007566772401333,
    0.016009362414479256,
    0.018999971449375153,
    0.013869293965399265,
    0.0028551402501761913,
    0.00265450868755579,
    0.006639701314270496,
    -0.00381028326228261,
    -0.00563482940196991,
    -0.02034437470138073,
    -0.03333568945527077,
    -0.009205040521919727,
    -0.01574871316552162,
    -0.015776149928569794,
    0.010336807928979397,
    0.010933557525277138,
    0.08077389001846313,
    -0.0036045073065906763,
    -0.007016957271844149,
    -0.003014616435393691,
    -0.00015551083197351545,
    0.01798481121659279,
    0.01821802370250225,
    0.005456489976495504,
    -0.009788072668015957,
    -0.01825917884707451,
    -0.00374169135466218,
    0.0022566753905266523,
    -0.01620141975581646,
    -0.0362439900636673,
    -0.03709452971816063,
    1.6384368791477755e-05,
    -0.02465195022523403,
    0.016942214220762253,
    0.012264242395758629,
    0.021359534934163094,
    0.015405753627419472,
    -0.001166920643299818,
    0.018684448674321175,
    -0.02439129911363125,
    -0.0414295420050621,
    0.006313889753073454,
    0.0245833583176136,
    0.019740765914320946,
    -0.004581942688673735,
    -0.03860355168581009,
    0.005638258997350931,
    -0.003539344994351268,
    -0.02568082883954048,
    -0.014514057897031307,
    -0.003923459909856319,
    0.019260620698332787,
    -0.0021520727314054966,
    -0.040359508246183395,
    0.013107922859489918,
    0.00220523145981133,
    -0.01743607595562935,
    0.008567135781049728,
    -0.012696371413767338,
    -0.026599960401654243,
    0.013128500431776047,
    -0.01627001166343689,
    -0.004283567890524864,
    -0.004112087655812502,
    -0.04088080674409866
  ]
}
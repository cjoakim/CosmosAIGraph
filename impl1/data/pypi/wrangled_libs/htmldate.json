{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "license :: osi approved :: gnu general public license v3 or later (gplv3+)",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http",
    "topic :: scientific/engineering :: information analysis",
    "topic :: text processing :: linguistic",
    "topic :: text processing :: markup :: html"
  ],
  "description": "htmldate: find the publication date of web pages\n================================================\n\n\n.. image:: https://img.shields.io/pypi/v/htmldate.svg\n    :target: https://pypi.python.org/pypi/htmldate\n    :alt: python package\n\n.. image:: https://img.shields.io/pypi/pyversions/htmldate.svg\n    :target: https://pypi.python.org/pypi/htmldate\n    :alt: python versions\n\n.. image:: https://readthedocs.org/projects/htmldate/badge/?version=latest\n    :target: https://htmldate.readthedocs.org/en/latest/?badge=latest\n    :alt: documentation status\n\n.. image:: https://img.shields.io/codecov/c/github/adbar/htmldate.svg\n    :target: https://codecov.io/gh/adbar/htmldate\n    :alt: code coverage\n\n.. image:: https://img.shields.io/pypi/dm/htmldate?color=informational\n    :target: https://pepy.tech/project/htmldate\n    :alt: downloads\n\n.. image:: https://img.shields.io/badge/joss-10.21105%2fjoss.02439-brightgreen\n   :target: https://doi.org/10.21105/joss.02439\n   :alt: joss article reference doi: 10.21105/joss.02439\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: code style: black\n\n|\n\n\n.. image:: docs/htmldate-logo.png\n    :alt: logo as png image\n    :align: center\n    :width: 60%\n\n|\n\nfind original and updated publication dates of any web page. from the command-line or within python, all the steps needed from web page download to html parsing, scraping, and text analysis are included.\n\nin a nutshell\n-------------\n\n|\n\n.. image:: docs/htmldate-demo.gif\n    :alt: demo as gif image\n    :align: center\n    :width: 80%\n    :target: https://htmldate.readthedocs.org/\n\n|\n\nwith python:\n\n.. code-block:: python\n\n    >>> from htmldate import find_date\n    >>> find_date('http://blog.python.org/2016/12/python-360-is-now-available.html')\n    '2016-12-23'\n\non the command-line:\n\n.. code-block:: bash\n\n    $ htmldate -u http://blog.python.org/2016/12/python-360-is-now-available.html\n    '2016-12-23'\n\n\nfeatures\n--------\n\n-  multilingual, robust and efficient (used in production on millions of documents)\n-  urls, html files, or html trees are given as input (includes batch processing)\n-  output as string in any date format (defaults to `iso 8601 ymd <https://en.wikipedia.org/wiki/iso_8601>`_)\n-  detection of both original and updated dates\n-  compatible with all recent versions of python\n\n\n``htmldate`` can examine markup and text. it provides the following ways to date an html document:\n\n1. **markup in header**: common patterns are used to identify relevant elements (e.g. ``link`` and ``meta`` elements) including `open graph protocol <http://ogp.me/>`_ attributes\n2. **html code**: the whole document is searched for structural markers: ``abbr`` or ``time`` elements and a series of attributes (e.g. ``postmetadata``)\n3. **bare html content**: heuristics are run on text and markup:\n\n  - in ``fast`` mode the html page is cleaned and precise patterns are targeted\n  - in ``extensive`` mode all potential dates are collected and a disambiguation algorithm determines the best one\n\nfinally the output is validated and converted to the chosen format.\n\n\nperformance\n-----------\n\n=============================== ========= ========= ========= ========= =======\n1000 web pages containing identifiable dates (as of 2023-11-13 on python 3.10)\n-------------------------------------------------------------------------------\npython package                  precision recall    accuracy  f-score   time\n=============================== ========= ========= ========= ========= =======\narticledateextractor 0.20       0.803     0.734     0.622     0.767     5x\ndate_guesser 2.1.4              0.781     0.600     0.514     0.679     18x\ngoose3 3.1.17                   0.869     0.532     0.493     0.660     15x\nhtmldate[all] 1.6.0 (fast)      **0.883** 0.924     0.823     0.903     **1x**\nhtmldate[all] 1.6.0 (extensive) 0.870     **0.993** **0.865** **0.928** 1.7x\nnewspaper3k 0.2.8               0.769     0.667     0.556     0.715     15x\nnews-please 1.5.35              0.801     0.768     0.645     0.784     34x\n=============================== ========= ========= ========= ========= =======\n\nfor complete results and explanations see the `evaluation page <https://htmldate.readthedocs.io/en/latest/evaluation.html>`_.\n\n\ninstallation\n------------\n\nthis python package is tested on linux, macos and windows systems; it is compatible with python 3.6 upwards. it is available on the package repository `pypi <https://pypi.org/>`_ and can notably be installed with ``pip`` (``pip3`` where applicable): ``pip install htmldate`` and optionally ``pip install htmldate[speed]``.\n\n\ndocumentation\n-------------\n\nfor more details on installation, python & cli usage, **please refer to the documentation**: `htmldate.readthedocs.io <https://htmldate.readthedocs.io/>`_\n\n\nlicense\n-------\n\n*htmldate* is distributed under the `gnu general public license v3.0 <https://github.com/adbar/htmldate/blob/master/license>`_. if you wish to redistribute this library but feel bounded by the license conditions please try interacting `at arms length <https://www.gnu.org/licenses/gpl-faq.html#gplinproprietarysystem>`_, `multi-licensing <https://en.wikipedia.org/wiki/multi-licensing>`_ with `compatible licenses <https://en.wikipedia.org/wiki/gnu_general_public_license#compatibility_and_multi-licensing>`_, or `contacting me <https://github.com/adbar/htmldate#author>`_.\n\nsee also `gpl and free software licensing: what's in it for business? <https://www.techrepublic.com/blog/cio-insights/gpl-and-free-software-licensing-whats-in-it-for-business/>`_\n\n\nauthor\n------\n\nthis effort is part of methods to derive information from web documents in order to build `text databases for research <https://www.dwds.de/d/k-web>`_ (chiefly linguistic analysis and natural language processing). extracting and pre-processing web texts to the exacting standards of scientific research presents a substantial challenge for those who conduct such research. there are web pages for which neither the url nor the server response provide a reliable way to find out when a document was published or modified. for more information:\n\n.. image:: https://img.shields.io/badge/joss-10.21105%2fjoss.02439-brightgreen\n   :target: https://doi.org/10.21105/joss.02439\n   :alt: joss article reference doi: 10.21105/joss.02439\n\n.. image:: https://img.shields.io/badge/doi-10.5281%2fzenodo.3459599-blue\n   :target: https://doi.org/10.5281/zenodo.3459599\n   :alt: zenodo archive doi: 10.5281/zenodo.3459599\n\n\n.. code-block:: shell\n\n    @article{barbaresi-2020-htmldate,\n      title = {{htmldate: a python package to extract publication dates from web pages}},\n      author = \"barbaresi, adrien\",\n      journal = \"journal of open source software\",\n      volume = 5,\n      number = 51,\n      pages = 2439,\n      url = {https://doi.org/10.21105/joss.02439},\n      publisher = {the open journal},\n      year = 2020,\n    }\n\n-  barbaresi, a. \"`htmldate: a python package to extract publication dates from web pages <https://doi.org/10.21105/joss.02439>`_\", journal of open source software, 5(51), 2439, 2020. doi: 10.21105/joss.02439\n-  barbaresi, a. \"`generic web content extraction with open-source software <https://hal.archives-ouvertes.fr/hal-02447264/document>`_\", proceedings of konvens 2019, kaleidoscope abstracts, 2019.\n-  barbaresi, a. \"`efficient construction of metadata-enhanced web corpora <https://hal.archives-ouvertes.fr/hal-01371704v2/document>`_\", proceedings of the `10th web as corpus workshop (wac-x) <https://www.sigwac.org.uk/wiki/wac-x>`_, 2016.\n\nyou can contact me via my `contact page <https://adrien.barbaresi.eu/>`_ or `github <https://github.com/adbar>`_.\n\n\ncontributing\n------------\n\n`contributions <https://github.com/adbar/htmldate/blob/master/contributing.md>`_ are welcome!\n\nfeel free to file issues on the `dedicated page <https://github.com/adbar/htmldate/issues>`_. thanks to the `contributors <https://github.com/adbar/htmldate/graphs/contributors>`_ who submitted features and bugfixes!\n\nkudos to the following software libraries:\n\n-  `lxml <http://lxml.de/>`_, `dateparser <https://github.com/scrapinghub/dateparser>`_\n-  a few patterns are derived from the `python-goose <https://github.com/grangier/python-goose>`_, `metascraper <https://github.com/ianstormtaylor/metascraper>`_, `newspaper <https://github.com/codelucas/newspaper>`_ and `articledateextractor <https://github.com/webhose/article-date-extractor>`_ libraries. this module extends their coverage and robustness significantly.\n",
  "docs_url": null,
  "keywords": "datetime,date-parser,entity-extraction,html-extraction,html-parsing,metadata-extraction,webarchives,web-scraping",
  "license": "gplv3+",
  "name": "htmldate",
  "package_url": "https://pypi.org/project/htmldate/",
  "project_url": "https://pypi.org/project/htmldate/",
  "project_urls": {
    "Blog": "https://adrien.barbaresi.eu/blog/tag/htmldate.html",
    "Homepage": "https://htmldate.readthedocs.io",
    "Source": "https://github.com/adbar/htmldate",
    "Tracker": "https://github.com/adbar/htmldate/issues"
  },
  "release_url": "https://pypi.org/project/htmldate/1.6.0/",
  "requires_dist": [
    "dateparser >=1.1.2",
    "python-dateutil >=2.8.2",
    "lxml >=4.9.3 ; platform_system != \"Darwin\"",
    "lxml ==4.9.2 ; platform_system == \"Darwin\"",
    "backports-datetime-fromisoformat ; python_version < \"3.7\"",
    "charset-normalizer >=3.0.1 ; python_version < \"3.7\"",
    "urllib3 <2,>=1.26 ; python_version < \"3.7\"",
    "charset-normalizer >=3.3.2 ; python_version >= \"3.7\"",
    "urllib3 <3,>=1.26 ; python_version >= \"3.7\"",
    "faust-cchardet >=2.1.19 ; extra == 'all'",
    "urllib3[brotli] ; extra == 'all'",
    "backports-datetime-fromisoformat ; (python_version < \"3.11\") and extra == 'all'",
    "faust-cchardet >=2.1.19 ; extra == 'speed'",
    "urllib3[brotli] ; extra == 'speed'",
    "backports-datetime-fromisoformat ; (python_version < \"3.11\") and extra == 'speed'"
  ],
  "requires_python": ">=3.6",
  "summary": "fast and robust extraction of original and updated publication dates from urls and web pages.",
  "version": "1.6.0",
  "releases": [],
  "developers": [
    "adrien_barbaresi",
    "barbaresi@bbaw.de"
  ],
  "kwds": "htmldate dateparser articledateextractor dates scraping",
  "license_kwds": "gplv3+",
  "libtype": "pypi",
  "id": "pypi_htmldate",
  "homepage": "https://htmldate.readthedocs.io",
  "release_count": 50,
  "dependency_ids": [
    "pypi_backports_datetime_fromisoformat",
    "pypi_charset_normalizer",
    "pypi_dateparser",
    "pypi_faust_cchardet",
    "pypi_lxml",
    "pypi_python_dateutil",
    "pypi_urllib3"
  ]
}
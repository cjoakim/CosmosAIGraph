{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "<h1 align=\"center\">\n    drugbank_downloader\n</h1>\n\n<p align=\"center\">\n    <a href=\"https://pypi.org/project/drugbank_downloader\">\n        <img alt=\"pypi\" src=\"https://img.shields.io/pypi/v/drugbank_downloader\" />\n    </a>\n    <a href=\"https://pypi.org/project/drugbank_downloader\">\n        <img alt=\"pypi - python version\" src=\"https://img.shields.io/pypi/pyversions/drugbank_downloader\" />\n    </a>\n    <a href=\"https://github.com/cthoyt/drugbank_downloader/blob/main/license\">\n        <img alt=\"pypi - license\" src=\"https://img.shields.io/pypi/l/drugbank_downloader\" />\n    </a>\n    <a href=\"https://zenodo.org/badge/latestdoi/321374043\">\n        <img src=\"https://zenodo.org/badge/321374043.svg\" alt=\"doi\" />\n    </a>\n</p>\n\ndon't worry about drugbank licensing and distribution rules - just use ``drugbank_downloader`` to write code that knows\nhow to download it and use it automatically.\n\n## installation\n\n```bash\n$ pip install drugbank-downloader\n```\n\n## download a specific version\n\n```python\nimport os\nfrom drugbank_downloader import download_drugbank\n\nusername = ...  # suggestion: load from environment with os.getenv('drugbank_username')\npassword = ...\n\npath = download_drugbank(version='5.1.7', username=username, password=password)\n\n# this is where it gets downloaded: ~/.data/drugbank/5.1.7/full database.xml.zip\nexpected_path = os.path.join(os.path.expanduser('~'), '.data', 'drugbank', '5.1.7', 'full database.xml.zip')\nassert expected_path == path.as_posix()\n```\n\nafter it's been downloaded once, it's smart and doesn't need to download again. it gets stored\nusing [`pystow`](https://github.com/cthoyt/pystow) automatically in the `~/.data/drugbank`\ndirectory.\n\n## automating configuration of drugbank credentials\n\nthere are two ways to automatically set the username and password so you don't have to worry about getting it and\npassing it around in your python code:\n\n1. set `drugbank_username` and `drugbank_password` in the environment\n2. create `~/.config/drugbank.ini` and set in the `[drugbank]` section a `username` and `password` key.\n\n```python\nfrom drugbank_downloader import download_drugbank\n\n# same path as before\npath = download_drugbank(version='5.1.7')\n```\n\nthe `username` and `password` keyword arguments are available for all functions in this package, but will be omitted in\nthe tutorial for brevity.\n\n## download the latest version\n\nfirst, you'll have to install [`bioversions`](https://github.com/cthoyt/bioversions)\nwith `pip install bioversions`, whose job it is to look up the latest version of many databases. then, you can modify\nthe previous code slightly by omitting the `version` keyword argument:\n\n```python\nimport os\nfrom drugbank_downloader import download_drugbank\n\npath = download_drugbank()\n\n# this is where it gets downloaded: ~/.data/drugbank/5.1.7/full database.xml.zip based on the latest\n# version, as of december 14th, 2020.\nexpected_path = os.path.join(os.path.expanduser('~'), '.data', 'drugbank', '5.1.7', 'full database.xml.zip')\nassert expected_path == path.as_posix()\n```\n\nthe `version` keyword argument is available for all functions in this package, but like the username and password will\nbe omitted for brevity.\n\n## don't bother unpacking - read `full database.xml.zip` directly\n\ndrugbank is a single xml (could be json in a better future) file inside a zip archive. normally, people manually unzip\nthis folder then do something with the resulting file. don't do this, it's not reproducible!\ninstead, it can be opened as a file object in python with the following code.\n\n```python\nimport zipfile\nfrom drugbank_downloader import download_drugbank\n\npath = download_drugbank()\n\nwith zipfile.zipfile(path) as zip_file:\n    with zip_file.open('full database.xml') as file:\n        pass  # do something with the file\n```\n\nyou don't have time to remember this. just use `drugbank_downloader.open_drugbank()` instead:\n\n```python\nfrom drugbank_downloader import open_drugbank\n\nwith open_drugbank() as file:\n    pass  # do something with the file, same as above\n```\n\n## reading drugbank's xml\n\nafter you've opened the file, you probably want to read it with an xml parser like:\n\n```python\nfrom xml.etree import elementtree\nfrom drugbank_downloader import open_drugbank\n\nwith open_drugbank() as file:\n    tree = elementtree.parse(file)\n```\n\nyou don't have time to remember this either. just use `drugbank_downloader.parse_drugbank()` instead:\n\n```python\nfrom xml.etree import elementtree\nfrom drugbank_downloader import parse_drugbank\n\ntree = parse_drugbank()\nroot = tree.getroot()\n```\n\nif your first thing to do to the tree is always to get its root, just use\n`drugbank_downloader.get_drugbank_root()`:\n\n```python\nfrom drugbank_downloader import get_drugbank_root\n\nroot = get_drugbank_root()\n```\n\nyou now know everything i can teach you. please use these tools to do re-usable, reproducible \nscience!\n\n## store in a different place\n\nif you want to store the data elsewhere using `pystow` (e.g., in [`pyobo`](https://github.com/pyobo/pyobo)\ni also keep a copy of this file), you can use the `prefix` argument.\n\n```python\nimport os\nfrom drugbank_downloader import download_drugbank\n\npath = download_drugbank(prefix=['pyobo', 'raw', 'drugbank'])\n\n# this is where it gets downloaded: ~/.data/pyobo/raw/drugbank/5.1.7/full database.xml.zip\nexpected_path = os.path.join(os.path.expanduser('~'), '.data', 'pyobo', 'raw', 'drugbank', '5.1.7',\n                             'full database.xml.zip')\nassert expected_path == path.as_posix()\n```\n\nsee the `pystow` [documentation](https://github.com/cthoyt/pystow#%ef%b8%8f-configuration) on configuring the storage\nlocation further.\n\n## download via cli\n\nafter installing, run the following cli command to ensure it and send the path to stdout\n\n```bash\n$ drugbank_downloader\n```\n\nif you haven't pre-configured the username and password, you can specify them with the `--username` and `--password`\noptions.\n\n\n",
  "docs_url": null,
  "keywords": "caching,file management",
  "license": "mit",
  "name": "drugbank-downloader",
  "package_url": "https://pypi.org/project/drugbank-downloader/",
  "project_url": "https://pypi.org/project/drugbank-downloader/",
  "project_urls": {
    "Bug Tracker": "https://github.com/cthoyt/drugbank_downloader/issues",
    "Download": "https://github.com/cthoyt/drugbank_downloader/releases",
    "Homepage": "https://github.com/cthoyt/drugbank_downloader"
  },
  "release_url": "https://pypi.org/project/drugbank-downloader/0.1.1/",
  "requires_dist": [
    "pystow (>=0.1.12)",
    "click",
    "bioversions ; extra == 'bioversions'"
  ],
  "requires_python": ">=3.6",
  "summary": "write scripts that can get drugbank data without redistributing it",
  "version": "0.1.1",
  "releases": [],
  "developers": [
    "charles_tapley_hoyt",
    "cthoyt@gmail.com"
  ],
  "kwds": "drugbank_downloader download_drugbank pypi open_drugbank pyversions",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_drugbank_downloader",
  "homepage": "https://github.com/cthoyt/drugbank_downloader",
  "release_count": 5,
  "dependency_ids": [
    "pypi_bioversions",
    "pypi_click",
    "pypi_pystow"
  ]
}
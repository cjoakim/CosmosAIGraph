{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# autofaiss\n# autofaiss\n\n[![pypi](https://img.shields.io/pypi/v/autofaiss.svg)](https://pypi.python.org/pypi/autofaiss)\n[![ci](https://github.com/criteo/autofaiss/workflows/continuous%20integration/badge.svg)](https://github.com/criteo/autofaiss/actions?query=workflow%3a%22continuous+integration%22)\n[![open in colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/criteo/autofaiss/blob/master/docs/notebooks/autofaiss_getting_started.ipynb)\n\n**automatically create faiss knn indices with the most optimal similarity search parameters.**\n\nit selects the best indexing parameters to achieve the highest recalls given memory and query speed constraints.\n\n## doc and posts and notebooks\n\nusing [faiss](https://github.com/facebookresearch/faiss) efficient indices, binary search, and heuristics, autofaiss makes it possible to *automatically* build in 3 hours a large (200 million vectors, 1tb) knn index in a low amount of memory (15 gb) with latency in milliseconds (10ms).\n\nget started by running this [colab notebook](https://colab.research.google.com/github/criteo/autofaiss/blob/master/docs/notebooks/autofaiss_getting_started.ipynb), then check the [full documentation](https://criteo.github.io/autofaiss).  \nget some insights on the automatic index selection function with this [colab notebook](https://colab.research.google.com/github/criteo/autofaiss/blob/master/docs/notebooks/autofaiss_index_selection_demo.ipynb).\n\nthen you can check our [multimodal search example](https://colab.research.google.com/github/criteo/autofaiss/blob/master/docs/notebooks/autofaiss_multimodal_search.ipynb) (using openai clip model).\n\nread the [medium post](https://medium.com/criteo-engineering/introducing-autofaiss-an-automatic-k-nearest-neighbor-indexing-library-at-scale-c90842005a11) to learn more about it!\n\n## installation\n\nto install run `pip install autofaiss`\n\nit's probably best to create a virtual env:\n``` bash\npython -m venv .venv/autofaiss_env\nsource .venv/autofaiss_env/bin/activate\npip install -u pip\npip install autofaiss\n```\n\n## using autofaiss in python\n\nif you want to use autofaiss directly from python, check the [api documentation](https://criteo.github.io/autofaiss/api/api.html) and the [examples](examples)\n\nin particular you can use autofaiss with on memory or on disk embeddings collections:\n\n### using in memory numpy arrays\n\nif you have a few embeddings, you can use autofaiss with in memory numpy arrays:\n\n```python\nfrom autofaiss import build_index\nimport numpy as np\n\nembeddings = np.float32(np.random.rand(100, 512))\nindex, index_infos = build_index(embeddings, save_on_disk=false)\n\nquery = np.float32(np.random.rand(1, 512))\n_, i = index.search(query, 1)\nprint(i)\n```\n\n### using numpy arrays saved as .npy files\n\nif you have many embeddings file, it is preferred to save them on disk as .npy files then use autofaiss like this:\n\n```python\nfrom autofaiss import build_index\n\nbuild_index(embeddings=\"embeddings\", index_path=\"my_index_folder/knn.index\",\n            index_infos_path=\"my_index_folder/index_infos.json\", max_index_memory_usage=\"4g\",\n            current_memory_available=\"4g\")\n```\n\n## memory-mapped indices\n\nfaiss makes it possible to use memory-mapped indices. this is useful when you don't need a fast search time (>50ms)\nand still want to reduce the memory footprint to the minimum.\n\nwe provide the should_be_memory_mappable boolean in build_index function to generate memory-mapped indices only.\nnote: only ivf indices can be memory-mapped in faiss, so the output index will be a ivf index.\n\nto load an index in memory mapping mode, use the following code:\n```python\nimport faiss\nfaiss.read_index(\"my_index_folder/knn.index\", faiss.io_flag_mmap | faiss.io_flag_read_only)\n```\n\nyou can have a look to the [examples](examples/memory_mapped_autofaiss.py) to see how to use it.\n\ntechnical note: you can create a direct map on ivf indices with index.make_direct_map() (or directly from the\nbuild_index function by passing the make_direct_map boolean). doing this speeds up a lot\nthe .reconstruct() method, function that gives you the value of one of your vector given its rank.\nhowever, this mapping will be stored in ram... we advise you to create your own direct map in a memory-mapped\nnumpy array and then call .reconstruct_from_offset() with your custom direct_map.\n\n## using autofaiss with pyspark\n\nautofaiss allows you to build indices with spark for the following two use cases:\n- to build a big index in a distributed way\n- given a partitioned dataset of embeddings, building one index per partition in parallel and in a distributed way.\n\nprerequisities:\n\n1. install pyspark: `pip install pyspark`.\n2. prepare your embeddings files (partitioned or not).\n3. create a spark session before calling autofaiss. if no spark session exists, a default session will be creaed with a minimum configuration.\n\n### creating a big index in a distributed way\n\nsee [distributed_autofaiss.md](docs/distributed/distributed_autofaiss.md) for a complete guide.\n\nit is possible to generate an index that would require more memory than what's available. to do so, you can control the number of index splits that will compose your index with `nb_indices_to_keep`.\nfor example, if `nb_indices_to_keep` is 10 and `index_path` is `knn.index`, the final index will be decomposed into 10 smaller indexes:\n - `knn.index01`\n - `knn.index02`\n - `knn.index03`\n - ...\n - `knn.index10`\n\na [concrete example](examples/distributed_autofaiss_n_indices.py) shows how to produce n indices and how to use them.\n\n### creating partitioned indexes\n\ngiven a partitioned dataset of embeddings, it is possible to create one index per partition by calling the method `build_partitioned_indexes`.\n\nsee this [example](examples/partitioned_indexes.py) that shows how to create partitioned indexes.\n\n## using the command line\n\ncreate embeddings\n``` python\nimport os\nimport numpy as np\nembeddings = np.random.rand(1000, 100)\nos.mkdir(\"embeddings\")\nnp.save(\"embeddings/part1.npy\", embeddings)\nos.mkdir(\"my_index_folder\")\n```\n\ngenerate a knn index\n``` bash\nautofaiss build_index --embeddings=\"embeddings\" --index_path=\"my_index_folder/knn.index\" --index_infos_path=\"my_index_folder/index_infos.json\" --metric_type=\"ip\"\n```\n\ntry the index\n``` python\nimport faiss\nimport glob\nimport numpy as np\n\nmy_index = faiss.read_index(glob.glob(\"my_index_folder/*.index\")[0])\n\nquery_vector = np.float32(np.random.rand(1, 100))\nk = 5\ndistances, indices = my_index.search(query_vector, k)\n\nprint(list(zip(distances[0], indices[0])))\n```\n\n## how are indices selected ?\n\nto understand better why indices are selected and what are their characteristics, check the [index selection demo](https://colab.research.google.com/github/criteo/autofaiss/blob/master/docs/notebooks/autofaiss_index_selection_demo.ipynb)\n\n## command quick overview\nquick description of the `autofaiss build_index` command:\n\n*embeddings*        -> source path of the embeddings in numpy.  \n*index_path*                -> destination path of the created index.\n*index_infos_path*          -> destination path of the index infos.\n*save_on_disk*              -> save the index on the disk.\n*metric_type*               -> similarity distance for the queries.  \n\n*index_key*                 -> (optional) describe the index to build.  \n*index_param*               -> (optional) describe the hyperparameters of the index.  \n*current_memory_available*  -> (optional) describe the amount of memory available on the machine.  \n*use_gpu*                   -> (optional) whether to use gpu or not (not tested).  \n\n## command details\n\nthe `autofaiss build_index` command takes the following parameters:\n\n| flag available               |  default     | description                                                                                                                                                                                                                                               |\n|------------------------------|:------------:|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| --embeddings                 | required     | directory (or list of directories) containing your .npy embedding files. if there are several files, they are read in the lexicographical order. this can be a local path or a path in another filesystem e.g. `hdfs://root/...` or `s3://...`                                                                                                        |\n| --index_path                 | required     | destination path of the faiss index on local machine.                                                                                                                                                                                                     |\n| --index_infos_path           | required     | destination path of the faiss index infos on local machine.                                                                                                                                                                                                     |\n| --save_on_disk               | required     | save the index on the disk.                                                                                                                                                                                                     |\n| --file_format                | \"npy\"        | file format of the files in embeddings can be either `npy` for numpy matrix files or `parquet` for parquet serialized tables |\n| --embedding_column_name      | \"embeddings\" | only necessary when file_format=`parquet` in this case this is the name of the column containing the embeddings (one vector per row) |\n| --id_columns                 | none         | can only be used when file_format=`parquet`. in this case these are the names of the columns containing the ids of the vectors, and separate files will be generated to map these ids to indices in the knn index |\n| --ids_path                   | none         | only useful when id_columns is not none and file_format=`parquet`. this will be the path (in any filesystem) where the mapping files ids->vector index will be store in parquet format|\n| --metric_type                |   \"ip\"       | (optional) similarity function used for query: (\"ip\" for inner product, \"l2\" for euclidian distance)                                                                                                                                                                                                            |\n| --max_index_memory_usage     |  \"32gb\"      | (optional) maximum size in gb of the created index, this bound is strict.                                                                                                                        |\n| --current_memory_available   |  \"32gb\"      | (optional) memory available (in gb) on the machine creating the index, having more memory is a boost because it reduces the swipe between ram and disk.                                                                               |\n| --max_index_query_time_ms    |    10        | (optional) bound on the query time for knn search, this bound is approximative.                                                                                                                                   |\n| --min_nearest_neighbors_to_retrieve |    20        | (optional) minimum number of nearest neighbors to retrieve when querying the index. parameter used only during index hyperparameter finetuning step, it is not taken into account to select the indexing algorithm. this parameter has the priority over the max_index_query_time_ms constraint.                                                                                                                                      |\n| --index_key                  |   none       | (optional) if present, the faiss index will be build using this description string in the index_factory, more detail in the [faiss documentation](https://github.com/facebookresearch/faiss/wiki/the-index-factory)\n| --index_param                |   none       | (optional) if present, the faiss index will be set using this description string of hyperparameters, more detail in the [faiss documentation](https://github.com/facebookresearch/faiss/wiki/index-io,-cloning-and-hyper-parameter-tuning) |\n| --use_gpu                    |   false      | (optional) experimental, gpu training can be faster, but this feature is not tested so far.                                                                                                                                         |\n| --nb_cores                   |   none       | (optional) the number of cores to use, by default will use all cores                                                                                                                                         |\n| --make_direct_map            |   false      | (optional) create a direct map allowing reconstruction of embeddings. this is only needed for ivf indices. note that might increase the ram usage (approximately 8gb for 1 billion embeddings).                                                                                                                                         |\n| --should_be_memory_mappable  |   false      | (optional) boolean used to force the index to be selected among indices having an on-disk memory-mapping implementation.                                                                                                                                             |\n| --distributed                |   none       | (optional) if \"pyspark\", create the index using pyspark. otherwise, the index is created on your local machine.|\n| --temporary_indices_folder   |   \"hdfs://root/tmp/distributed_autofaiss_indices\"       | (optional) folder to save the temporary small indices, only used when distributed = \"pyspark\" |\n| --verbose                    |   20         | (optional) set verbosity of logging output: debug=10, info=20, warn=30, error=40, critical=50 |\n| --nb_indices_to_keep         |   1          | (optional) number of indices to keep at most when distributed is \"pyspark\". |\n\n## install from source\n\nfirst, create a virtual env and install dependencies:\n```\npython3 -m venv .env\nsource .env/bin/activate\nmake install\n```\n\n\n`python -m pytest -x -s -v tests -k \"test_get_optimal_hyperparameters\"` to run a specific test\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "autofaiss",
  "package_url": "https://pypi.org/project/autofaiss/",
  "project_url": "https://pypi.org/project/autofaiss/",
  "project_urls": {
    "Homepage": "https://github.com/criteo/autofaiss"
  },
  "release_url": "https://pypi.org/project/autofaiss/2.15.8/",
  "requires_dist": [
    "fire (<0.5.0,>=0.4.0)",
    "numpy (<2,>=1.19.5)",
    "pandas (<2,>=1.1.5)",
    "pyarrow (<13,>=6.0.1)",
    "tqdm (<5,>=4.62.3)",
    "fsspec (>=2022.1.0)",
    "embedding-reader (<2,>=1.5.1)",
    "dataclasses (<1.0.0,>=0.6) ; python_version < \"3.7\"",
    "faiss-cpu (<1.7.3) ; python_version < \"3.7\"",
    "faiss-cpu (<2,>=1) ; python_version >= \"3.7\""
  ],
  "requires_python": "",
  "summary": "# autofaiss",
  "version": "2.15.8",
  "releases": [],
  "developers": [
    "criteo"
  ],
  "kwds": "distributed_autofaiss_n_indices distributed_autofaiss_indices autofaiss_index_selection_demo autofaiss_multimodal_search autofaiss",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_autofaiss",
  "homepage": "https://github.com/criteo/autofaiss",
  "release_count": 66,
  "dependency_ids": [
    "pypi_dataclasses",
    "pypi_embedding_reader",
    "pypi_faiss_cpu",
    "pypi_fire",
    "pypi_fsspec",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pyarrow",
    "pypi_tqdm"
  ],
  "documentation_summary": "AutoFaiss, developed by Criteo and available on GitHub, is a tool designed to automatically create Faiss KNN indices with optimal similarity search parameters. It aims to select the best indexing parameters to achieve high recalls given memory and query speed constraints. AutoFaiss enables the automatic construction of large KNN indices (e.g., 200 million vectors, 1TB) in a low memory footprint (15 GB) with millisecond latency (10ms). It supports both in-memory numpy arrays and numpy arrays saved as .npy files for index building. Additionally, AutoFaiss offers features for memory-mapped indices, integration with pyspark for distributed index building, and command-line usage for creating and querying indices. The tool is licensed under Apache-2.0 and can be installed via pip.",
  "embedding": [
    -0.03895954415202141,
    0.017213035374879837,
    0.010837837122380733,
    -0.014464616775512695,
    -0.011411605402827263,
    0.026053311303257942,
    -0.011624111793935299,
    -0.02972259186208248,
    -0.0155413169413805,
    -0.023559900000691414,
    0.014422114938497543,
    0.0014140544226393104,
    -0.030940962955355644,
    -0.003603758057579398,
    -0.00688167242333293,
    -0.021193992346525192,
    0.02445242740213871,
    -0.007253558840602636,
    -0.0036586555652320385,
    -0.021094823256134987,
    0.00402345834299922,
    0.010681998915970325,
    -0.019083093851804733,
    -0.017510544508695602,
    -0.022214025259017944,
    0.024296589195728302,
    0.005758929066359997,
    -0.027696695178747177,
    -0.014237943105399609,
    0.002376532182097435,
    0.03181932494044304,
    -0.028192544355988503,
    -0.02483494020998478,
    -0.009881557896733284,
    -0.015810491517186165,
    0.010143648833036423,
    0.03201766312122345,
    -0.033661048859357834,
    0.05726344883441925,
    -0.000416380149545148,
    0.028447551652789116,
    0.0003406746545806527,
    -0.004809733014553785,
    0.001743439701385796,
    -0.013727927580475807,
    0.00010619796375976875,
    -0.004579517524689436,
    -0.005440169479697943,
    -0.006669166032224894,
    0.023219889029860497,
    0.0020825648680329323,
    0.016051333397626877,
    -0.013246245682239532,
    0.0242682546377182,
    0.01493213139474392,
    -0.016986362636089325,
    0.004405970219522715,
    0.02038646675646305,
    -0.026903336867690086,
    -0.008847358636558056,
    0.01466295588761568,
    -0.018544742837548256,
    -0.023446563631296158,
    0.008358593098819256,
    -0.0037755342200398445,
    -0.018204733729362488,
    -0.015328810550272465,
    0.012176629155874252,
    0.017340539023280144,
    -0.010264069773256779,
    0.012771647423505783,
    0.05547839403152466,
    -0.015626318752765656,
    -0.008585266768932343,
    0.038109518587589264,
    0.00027448771288618445,
    -0.0064354087226092815,
    0.002070168498903513,
    -0.01632050797343254,
    -0.004962029401212931,
    -0.007543984800577164,
    -0.0006401761784218252,
    0.011362019926309586,
    0.04873485118150711,
    0.011702030897140503,
    0.018573077395558357,
    -0.0028139417991042137,
    0.03085595928132534,
    -0.028589222580194473,
    -0.0002470389299560338,
    0.004792023915797472,
    0.0131116583943367,
    0.020853981375694275,
    -0.01473379135131836,
    -0.0007344759651459754,
    0.04131128638982773,
    0.005564131308346987,
    0.009754053317010403,
    0.016193004325032234,
    -0.027045007795095444,
    -0.016618017107248306,
    0.028447551652789116,
    -0.01942310482263565,
    -0.023404061794281006,
    -0.01573965698480606,
    -0.0036090705543756485,
    0.013536671176552773,
    -0.0013042592909187078,
    0.015484648756682873,
    0.025486625730991364,
    0.0150313014164567,
    0.04213297739624977,
    0.006817920599132776,
    -0.024296589195728302,
    -0.011369103565812111,
    -0.03317936509847641,
    0.02520328387618065,
    -0.022469032555818558,
    -0.015796324238181114,
    -0.019366435706615448,
    0.010653664357960224,
    0.023715738207101822,
    0.003952622879296541,
    -0.0058014304377138615,
    0.012863733805716038,
    0.0062193600460886955,
    0.007037510629743338,
    -0.016051333397626877,
    -0.01437253039330244,
    -0.033661048859357834,
    0.04057459533214569,
    0.02292237989604473,
    0.010228651575744152,
    0.006545203737914562,
    -0.028475886210799217,
    -0.010547411628067493,
    -0.021023986861109734,
    -0.004788482096046209,
    -0.02618081495165825,
    -0.012006623670458794,
    0.02540162391960621,
    0.04352135583758354,
    -0.016164669767022133,
    -0.005383500829339027,
    -0.04391803219914436,
    0.03742949664592743,
    -0.01010823156684637,
    -0.014563786797225475,
    0.021647339686751366,
    0.006740001495927572,
    0.01884225383400917,
    -0.02969425730407238,
    -0.014705457724630833,
    0.01766638271510601,
    0.014988799579441547,
    -0.009513212367892265,
    0.0025305994786322117,
    -0.0027147720102220774,
    -0.031309306621551514,
    0.003072491381317377,
    -0.001278581446968019,
    0.04133962094783783,
    -0.005826222710311413,
    -0.013309997506439686,
    0.016235504299402237,
    0.012034958228468895,
    0.01572548970580101,
    -0.0062016514129936695,
    -0.00981072150170803,
    -0.04431471228599548,
    0.01650468073785305,
    0.023404061794281006,
    -0.03275435417890549,
    -0.010306570678949356,
    0.004845150746405125,
    0.0026616454124450684,
    0.01901225745677948,
    0.005599549040198326,
    -0.026336653158068657,
    0.008833191357553005,
    0.029949264600872993,
    0.029779259115457535,
    0.017567213624715805,
    0.025132449343800545,
    0.007891078479588032,
    -0.003318644827231765,
    -0.0064247832633554935,
    -0.0031079091131687164,
    0.005078908056020737,
    -0.011999540030956268,
    0.01922476477921009,
    0.007898162119090557,
    0.0022189232986420393,
    -0.03028927557170391,
    -0.5780180096626282,
    0.007699823006987572,
    0.03972456976771355,
    -0.03261268138885498,
    -0.0028210252057760954,
    0.01783638820052147,
    -0.005691635422408581,
    0.0004914215533062816,
    0.016759688034653664,
    0.031535979360342026,
    -0.03589944913983345,
    0.0014742646599188447,
    -0.020414801314473152,
    -0.014790460467338562,
    -0.004813274834305048,
    -0.029949264600872993,
    0.020726477727293968,
    -0.03861953318119049,
    0.02717251144349575,
    0.008790690451860428,
    -0.006863963790237904,
    0.032527677714824677,
    -0.0004728272033389658,
    0.019890619441866875,
    -0.01211996003985405,
    0.0165188480168581,
    0.009159035049378872,
    -0.026648329570889473,
    0.017538879066705704,
    0.001779742888174951,
    -0.019451439380645752,
    0.01473379135131836,
    0.010504909791052341,
    -0.000532151956576854,
    0.06652873754501343,
    -0.019068926572799683,
    -0.02214318886399269,
    0.04751648008823395,
    0.008790690451860428,
    0.038307856768369675,
    -0.015980497002601624,
    -0.02306405082345009,
    0.007359812501817942,
    -0.003067178651690483,
    0.013671258464455605,
    -0.01483296137303114,
    0.00096956139896065,
    -0.0006410616333596408,
    0.010625330731272697,
    -0.039497897028923035,
    0.012013707309961319,
    0.014160024002194405,
    -0.01804889552295208,
    -0.02057063952088356,
    -1.783339939720463e-05,
    -0.00397741561755538,
    0.030742622911930084,
    0.014280444011092186,
    -0.00631144642829895,
    0.0013742094160988927,
    0.005865182261914015,
    0.003793243085965514,
    -0.015654653310775757,
    -0.035984452813863754,
    -0.04340801760554314,
    0.0022012144327163696,
    0.007820243015885353,
    -0.03196099400520325,
    0.004292633384466171,
    -0.036154456436634064,
    0.03278268501162529,
    0.0018346403958275914,
    0.0011315976735204458,
    0.004342218395322561,
    0.029212575405836105,
    0.03261268138885498,
    0.03895954415202141,
    0.01861557923257351,
    -0.025387456640601158,
    0.004877026658505201,
    -0.00015041483857203275,
    0.006095397751778364,
    -0.006970216985791922,
    -0.00989572424441576,
    0.00504703214392066,
    0.028291713446378708,
    -0.016008831560611725,
    0.0022862169425934553,
    -0.014521284960210323,
    0.004044709261506796,
    0.009761136956512928,
    0.01802056096494198,
    -0.003621466923505068,
    -0.05301331728696823,
    0.017368873581290245,
    0.007997332140803337,
    -0.012807064689695835,
    -0.006693958304822445,
    0.004129712004214525,
    -0.030430946499109268,
    0.004388261586427689,
    -0.003476253943517804,
    -0.01633467525243759,
    0.0019816241692751646,
    0.011390354484319687,
    -0.008500264026224613,
    0.006120190490037203,
    0.03363271430134773,
    -0.011022009886801243,
    -0.023347392678260803,
    -0.02116565778851509,
    -0.010887421667575836,
    0.008075251244008541,
    -0.00011709999671438709,
    0.023347392678260803,
    -0.02853255532681942,
    0.005057657137513161,
    0.008734021335840225,
    0.0023358019534498453,
    0.02234152890741825,
    0.011517858132719994,
    -0.01728387176990509,
    -0.018318070098757744,
    0.011319519020617008,
    0.027243347838521004,
    -0.0193806029856205,
    -0.0024774728808552027,
    -0.01494629867374897,
    -0.03632446378469467,
    -0.010476576164364815,
    -0.0011926933657377958,
    -0.018785584717988968,
    0.006449575535953045,
    9.773090278031304e-05,
    0.03944122791290283,
    0.010242818854749203,
    0.014903796836733818,
    -0.011893286369740963,
    0.018162231892347336,
    -0.009088199585676193,
    -0.024919942021369934,
    0.020811481401324272,
    0.027073342353105545,
    -0.035021089017391205,
    -0.03283935412764549,
    0.007101262453943491,
    -0.007820243015885353,
    0.024126583710312843,
    -0.008528598584234715,
    -0.013309997506439686,
    -0.016646351665258408,
    -0.008556933142244816,
    -0.050349898636341095,
    0.01039865706115961,
    -0.022384028881788254,
    -0.016193004325032234,
    -0.005535797215998173,
    -0.0204006340354681,
    -0.015484648756682873,
    -0.03184765577316284,
    -0.010136565193533897,
    0.020117292180657387,
    0.0006508015212602913,
    0.0015380166005343199,
    -0.03431273251771927,
    -0.010646581649780273,
    -0.0028369631618261337,
    0.02796586975455284,
    0.007543984800577164,
    -0.03408605977892876,
    0.015385478734970093,
    -0.031535979360342026,
    -0.01444336585700512,
    0.03822285681962967,
    -0.0058120558969676495,
    0.006137899123132229,
    -0.03281101956963539,
    0.022624870762228966,
    -0.015144637785851955,
    -0.01841723918914795,
    -4.8146030167117715e-05,
    0.0026032060850411654,
    -0.02269570529460907,
    -0.03207433223724365,
    0.046269774436950684,
    -0.004352843854576349,
    -0.00029795197769999504,
    0.023361559957265854,
    -0.007437731605023146,
    0.022794876247644424,
    -0.016164669767022133,
    -0.017595548182725906,
    -0.031082633882761,
    0.015073802322149277,
    0.0013405625941231847,
    0.016037166118621826,
    0.017808053642511368,
    0.015569651499390602,
    -0.004845150746405125,
    0.0017195326508954167,
    0.007288976572453976,
    0.023744072765111923,
    0.009321956895291805,
    -0.026875002309679985,
    -0.001757606747560203,
    -0.011949955485761166,
    0.02174651063978672,
    -0.012382051907479763,
    0.024296589195728302,
    -0.006633747834712267,
    0.018558910116553307,
    0.006293737329542637,
    -0.03740116208791733,
    0.0038676203694194555,
    0.017708884552121162,
    -0.0038959544617682695,
    -0.025146616622805595,
    0.0040270001627504826,
    -0.014592120423913002,
    -0.008273590356111526,
    0.005950185004621744,
    0.024140750989317894,
    0.02443826012313366,
    0.006329155061393976,
    0.030600951984524727,
    0.019267266616225243,
    0.004777857102453709,
    0.017723051831126213,
    0.03026094101369381,
    -0.01864391379058361,
    -0.013494170270860195,
    0.011284100823104382,
    0.003428440075367689,
    -0.029212575405836105,
    0.04751648008823395,
    -0.011390354484319687,
    0.02654915861785412,
    -0.012268714606761932,
    0.010752834379673004,
    -0.03196099400520325,
    0.02228485979139805,
    0.030345944687724113,
    0.005440169479697943,
    -0.012112877331674099,
    0.018289735540747643,
    0.016363009810447693,
    -0.0006654113531112671,
    0.04091460630297661,
    -0.004986821673810482,
    -0.014223775826394558,
    -0.0193806029856205,
    0.016759688034653664,
    0.00451222388073802,
    0.031904324889183044,
    -0.004498056601732969,
    -0.006120190490037203,
    0.005174535792320967,
    0.008556933142244816,
    0.024806605651974678,
    0.013437501154839993,
    0.018587244674563408,
    0.0010421678889542818,
    0.016462178900837898,
    0.03629612922668457,
    0.019451439380645752,
    -0.03255601227283478,
    0.00852151494473219,
    -0.010696166194975376,
    -0.009272371418774128,
    -0.03159264847636223,
    -0.029750926420092583,
    -0.03867620229721069,
    0.0022578828502446413,
    -0.013699593022465706,
    0.023149054497480392,
    0.009527379646897316,
    0.01379167940467596,
    0.03255601227283478,
    0.03941289335489273,
    0.0009412271901965141,
    -0.031705986708402634,
    -0.038534533232450485,
    0.04255799204111099,
    -0.017496377229690552,
    0.015116303227841854,
    0.018728915601968765,
    -0.017128033563494682,
    -0.005603090859949589,
    -0.0010341987945139408,
    0.010901588946580887,
    0.008394011296331882,
    0.012084542773663998,
    0.013735010288655758,
    -0.012204962782561779,
    -0.00347094121389091,
    -0.01007989700883627,
    0.029750926420092583,
    -0.017907224595546722,
    0.020315632224082947,
    -0.025883305817842484,
    -0.002960925456136465,
    -0.01904059201478958,
    0.01231830008327961,
    -0.016745520755648613,
    0.02796586975455284,
    0.0016115084290504456,
    0.011503690853714943,
    -0.03142264485359192,
    -0.004356385674327612,
    -0.030034268274903297,
    0.008216922171413898,
    0.004370552487671375,
    -0.001662864233367145,
    0.005525171756744385,
    -0.0016991674201563,
    0.003440836211666465,
    0.0034727121237665415,
    0.010937007144093513,
    0.02269570529460907,
    0.02329072542488575,
    0.0252457857131958,
    -0.00504703214392066,
    0.008372760377824306,
    0.01918226294219494,
    0.009527379646897316,
    0.02405574917793274,
    -0.0014636393170803785,
    -0.0013387916842475533,
    -0.038336191326379776,
    -0.005815597716718912,
    -0.0223556961864233,
    0.012743312865495682,
    0.00232871831394732,
    0.020315632224082947,
    -0.04247298836708069,
    -0.005383500829339027,
    0.0062193600460886955,
    0.014620454981923103,
    0.02486327290534973,
    0.010264069773256779,
    -0.0006888756179250777,
    -0.00978947151452303,
    0.0011510774493217468,
    0.0029573836363852024,
    -0.020145626738667488,
    -0.01028531976044178,
    0.014422114938497543,
    -0.015187139622867107,
    0.029552586376667023,
    -0.016929693520069122,
    0.018006393685936928,
    0.013834180310368538,
    -0.014294611290097237,
    -0.022412363439798355,
    0.014060853980481625,
    0.009626549668610096,
    0.02156233787536621,
    0.02367323637008667,
    -0.0184597410261631,
    0.017708884552121162,
    0.028405049815773964,
    0.024707434698939323,
    0.009676134213805199,
    0.019267266616225243,
    -0.009038614109158516,
    0.016235504299402237,
    -0.0013325934996828437,
    0.029042569920420647,
    0.027073342353105545,
    -0.019890619441866875,
    -0.007898162119090557,
    0.009676134213805199,
    -0.0058899750001728535,
    -0.0007118971552699804,
    0.02657749317586422,
    -0.029750926420092583,
    -0.02969425730407238,
    -0.004104919265955687,
    0.030430946499109268,
    0.008216922171413898,
    -0.013735010288655758,
    -0.027795864269137383,
    0.000827447627671063,
    -0.03842119500041008,
    -0.00816025398671627,
    -0.021817345172166824,
    -0.000746429490391165,
    0.005429544020444155,
    -0.013706676661968231,
    -0.003368229838088155,
    0.0008876578067429364,
    0.008443595841526985,
    -0.014216692186892033,
    -0.012785814702510834,
    0.007207516115158796,
    -0.015782156959176064,
    -0.034822750836610794,
    -0.030827626585960388,
    0.01211996003985405,
    0.02754085697233677,
    -0.005433085840195417,
    0.01486129593104124,
    -0.007834410294890404,
    0.005610174499452114,
    0.012955820187926292,
    -0.010044478811323643,
    0.0077564911916852,
    -0.029439250007271767,
    0.01010823156684637,
    0.008783606812357903,
    0.0065522873774170876,
    -0.030430946499109268,
    0.010972424410283566,
    0.010193233378231525,
    0.01806306280195713,
    0.01647634617984295,
    0.007820243015885353,
    -0.0019338101847097278,
    0.013685425743460655,
    -0.011468273587524891,
    0.03708948567509651,
    0.0013600423699244857,
    0.004827441647648811,
    -0.02228485979139805,
    0.023729905486106873,
    -0.024579931050539017,
    -0.01320374384522438,
    -0.007586486171931028,
    -0.017609715461730957,
    0.013118741102516651,
    -0.00016989461437333375,
    -0.0007721073343418539,
    -0.011043259873986244,
    -0.018374739214777946,
    -0.015640486031770706,
    0.010653664357960224,
    -0.032896023243665695,
    -0.022667372599244118,
    0.008316092193126678,
    0.0008973976946435869,
    0.003839286044239998,
    0.021675674244761467,
    0.003782617626711726,
    0.01647634617984295,
    -0.011475357227027416,
    -0.021463166922330856,
    0.01486129593104124,
    0.021123157814145088,
    0.023404061794281006,
    0.026719164103269577,
    -0.015824658796191216,
    -0.01426627766340971,
    -0.009208619594573975,
    0.03221600130200386,
    -0.013614590279757977,
    0.014124605804681778,
    0.0005047032027505338,
    -0.04048959165811539,
    0.002629769267514348,
    -0.016788022592663765,
    0.0016274465015158057,
    0.007140222005546093,
    -0.0024916399270296097,
    0.013480002991855145,
    -0.01821890100836754,
    -0.008089418523013592,
    -0.0021268369164317846,
    -0.0004161587858106941,
    0.0017009383300319314,
    -0.021859847009181976,
    -0.008769439533352852,
    0.007058761082589626,
    -0.0022809042129665613,
    0.01939477026462555,
    -0.014174191281199455,
    0.008174421265721321,
    -0.01653301529586315,
    -0.04323801025748253,
    -0.03187599033117294,
    0.007494399789720774,
    -0.0056172581389546394,
    0.019649777561426163,
    0.05309831723570824,
    0.038307856768369675,
    0.039299555122852325,
    0.007763574831187725,
    -0.0024491387885063887,
    0.022440697997808456,
    0.012828315608203411,
    0.006577079650014639,
    0.0006981727783568203,
    0.006562912371009588,
    0.012821231968700886,
    0.010122397914528847,
    0.019904786720871925,
    0.01844557374715805,
    0.028815897181630135,
    -0.043776363134384155,
    -0.007260642480105162,
    0.0310259647667408,
    -0.02290821261703968,
    -0.03380271792411804,
    -0.012778731063008308,
    -0.016660518944263458,
    0.014804627746343613,
    0.00939987599849701,
    0.004051792901009321,
    0.02989259734749794,
    -0.0407446026802063,
    -0.023715738207101822,
    0.021859847009181976,
    0.0005445482092909515,
    0.028957568109035492,
    0.020528139546513557,
    0.004452013410627842,
    -0.007157931104302406,
    0.010944090783596039,
    0.01494629867374897,
    -0.007494399789720774,
    -0.02737085148692131,
    -0.0002578856365289539,
    -0.026350820437073708,
    -0.025486625730991364,
    0.019083093851804733,
    0.0032053079921752214,
    0.025911640375852585,
    0.02405574917793274,
    -0.0011156597174704075,
    -0.009676134213805199,
    0.009959476999938488,
    -0.010065729729831219,
    -0.02637915499508381,
    0.020853981375694275,
    -0.011822450906038284,
    -0.023149054497480392,
    -0.025288287550210953,
    -0.046071432530879974,
    -0.019663944840431213,
    -0.01427336037158966,
    -0.002323405584320426,
    -0.0005786378169432282,
    0.0065133278258144855,
    0.001958602573722601,
    -0.0059183090925216675,
    -0.0030707204714417458,
    0.03536109998822212,
    0.038506198674440384,
    -0.0060245622880756855,
    0.028093373402953148,
    0.007997332140803337,
    -0.007232308387756348,
    -0.005093075335025787,
    0.009534463286399841,
    0.009166118688881397,
    0.0014060854446142912,
    0.017921390011906624,
    0.031705986708402634,
    -0.03167765215039253,
    -0.03218766674399376,
    0.017907224595546722,
    -0.009442376904189587,
    -0.010915756225585938,
    -0.03847786411643028,
    0.033887721598148346,
    0.02015979401767254,
    0.016759688034653664,
    -0.03439773619174957,
    -0.010951174423098564,
    -0.014365446753799915,
    0.027696695178747177,
    -0.024013247340917587,
    -0.01996145397424698,
    0.016490513458848,
    -0.009761136956512928,
    -0.01783638820052147,
    0.02306405082345009,
    0.005426002200692892,
    0.00392783060669899,
    0.026364987716078758,
    -0.013175410218536854,
    -7.033747533569112e-05,
    -0.020896483212709427,
    0.00952029600739479,
    0.01667468622326851,
    0.012757480144500732,
    0.023149054497480392,
    -0.007338561583310366,
    -0.0061024813912808895,
    0.021859847009181976,
    -0.0031327016185969114,
    0.004877026658505201,
    0.011057427152991295,
    0.0016779167344793677,
    0.02891506627202034,
    -0.020853981375694275,
    -0.019876452162861824,
    -0.03604112192988396,
    -0.013827096670866013,
    -0.011879120022058487,
    -0.03068595565855503,
    -0.006899381522089243,
    0.004214714281260967,
    0.016618017107248306,
    0.00852151494473219,
    0.01592382788658142,
    -0.03198932856321335,
    -0.005546422675251961,
    -0.018133897334337234,
    -0.007572318892925978,
    -0.012884983792901039,
    -0.012977070175111294,
    0.03575778007507324,
    0.028050873428583145,
    -0.014790460467338562,
    0.006470826454460621,
    -0.02500494383275509,
    -0.0058510154485702515,
    0.006800211500376463,
    0.012927485629916191,
    0.009562797844409943,
    -0.013834180310368538,
    0.036154456436634064,
    -0.002459764014929533,
    0.0034585450775921345,
    0.04363469034433365,
    -0.001412283512763679,
    -0.008124835789203644,
    0.01320374384522438,
    -0.01592382788658142,
    0.021803177893161774,
    0.02269570529460907,
    0.0015690071741119027,
    -0.03762783855199814,
    -0.000935914518777281,
    -0.0026386238168925047,
    0.035616107285022736,
    0.02195901609957218,
    -0.009598215110599995,
    -0.00989572424441576,
    0.01841723918914795,
    -0.017411375418305397,
    0.005599549040198326,
    -0.021420666947960854,
    -0.0005454336642287672,
    -0.01435836311429739,
    0.0008765897946432233,
    0.021406499668955803,
    -0.016745520755648613,
    0.020641475915908813,
    -0.020712310448288918,
    0.024353258311748505,
    0.023602401837706566,
    -0.028759228065609932,
    -0.034992754459381104,
    -0.007239392027258873,
    -0.01483296137303114,
    -0.013239162042737007,
    0.0184030719101429,
    -0.011312435381114483,
    -0.011114095337688923,
    -0.04479639232158661,
    0.015767989680171013,
    0.021689841523766518,
    -0.018927255645394325,
    0.008960695005953312,
    0.03085595928132534,
    0.004278466571122408,
    0.013458752073347569,
    0.002757273381575942,
    -0.007848577573895454,
    -0.004427221138030291,
    -0.004200547467917204,
    -0.015980497002601624,
    0.001568121719174087,
    0.008663185872137547,
    0.03825119137763977,
    0.030714288353919983,
    -0.03147931396961212,
    -0.028050873428583145,
    -0.01007989700883627,
    -0.02870255894958973,
    -0.003694073297083378,
    -0.04329467937350273,
    0.0026722706388682127,
    0.00032163760624825954,
    0.027781696990132332,
    0.0025465376675128937,
    0.00368344783782959,
    -0.018757250159978867,
    0.013720843940973282,
    0.009924058802425861,
    0.033859387040138245,
    -0.0011687863152474165,
    0.0021799637470394373,
    0.004611393436789513,
    -0.025373289361596107,
    -0.03422773256897926,
    -0.0018240150529891253,
    -0.013614590279757977,
    -0.008280673995614052,
    -0.0029290495440363884,
    0.03587111458182335,
    -0.005358708556741476,
    0.001167015521787107,
    0.030940962955355644,
    0.011411605402827263,
    -0.003557714866474271,
    0.014521284960210323,
    0.01493213139474392,
    -0.030544282868504524,
    -0.011574527248740196,
    0.013841263949871063,
    0.010653664357960224,
    0.017213035374879837,
    -0.012325383722782135,
    0.009151951409876347,
    -0.0017257307190448046,
    -0.01046949252486229,
    -0.0020577723626047373,
    -0.006871046964079142,
    0.010356155224144459,
    -0.00022257854288909584,
    0.008613601326942444,
    -0.017793886363506317,
    -0.0057518454268574715,
    0.03468107804656029,
    -0.0039597065187990665,
    -0.02559996396303177,
    -0.01746804267168045,
    0.011694947257637978,
    -0.023177387192845345,
    -0.004788482096046209,
    0.021264828741550446,
    -0.02836254984140396,
    0.006800211500376463,
    0.02000395581126213,
    0.02544412575662136,
    0.004285550210624933,
    -0.004090752452611923,
    -0.012297049164772034,
    -0.024565763771533966,
    -0.0223273616284132,
    -0.016150502488017082,
    0.011624111793935299,
    0.0003891527303494513,
    0.007572318892925978,
    0.0018541201716288924,
    -0.00022003288904670626,
    -0.003596674418076873,
    -0.01037032250314951,
    -0.00863485224545002,
    -0.024962443858385086,
    -0.012714979238808155,
    0.014875463210046291,
    -0.0002970665227621794,
    -0.01633467525243759,
    0.02542995847761631,
    -0.0028865481726825237,
    -0.019309766590595245,
    0.019635610282421112,
    0.18337903916835785,
    0.009286538697779179,
    0.023007381707429886,
    0.018190566450357437,
    0.00036701661883853376,
    0.003563027596101165,
    0.0015477564884349704,
    0.011716198176145554,
    -0.023970745503902435,
    0.02136399783194065,
    0.005514546763151884,
    -0.0213498305529356,
    -0.005943101365119219,
    -0.009392792358994484,
    0.01242455281317234,
    -0.011234516277909279,
    -0.02952425181865692,
    -0.054628364741802216,
    -0.012977070175111294,
    0.021392332389950752,
    -0.001507026026956737,
    -0.00110326346475631,
    -0.019352268427610397,
    -0.012644143775105476,
    0.025359122082591057,
    -0.01707136444747448,
    -0.00504703214392066,
    -0.007211057469248772,
    0.03221600130200386,
    0.011298268102109432,
    -0.026265816763043404,
    0.020513972267508507,
    0.004207631107419729,
    0.005422460380941629,
    -0.05119992792606354,
    0.008457763120532036,
    -0.018374739214777946,
    0.0015592672862112522,
    0.004919528029859066,
    0.04207630828022957,
    -0.008981945924460888,
    -0.027710862457752228,
    0.011099928990006447,
    -0.0057624708861112595,
    -0.018148064613342285,
    -0.00825942400842905,
    -0.020103124901652336,
    0.016363009810447693,
    -0.014648789539933205,
    0.022454865276813507,
    -0.025684965774416924,
    -0.016773855313658714,
    0.004951403941959143,
    0.013026655651628971,
    -0.011319519020617008,
    -0.020060624927282333,
    -0.0055818404071033,
    0.028022538870573044,
    0.025869138538837433,
    0.0064920769073069096,
    -0.018360571935772896,
    0.026435822248458862,
    0.0021817346569150686,
    0.004767231643199921,
    -0.03553110733628273,
    0.018303902819752693,
    -0.03745783120393753,
    0.02133566327393055,
    0.012892067432403564,
    0.024027414619922638,
    -0.01426627766340971,
    0.0009801867417991161,
    -0.034822750836610794,
    -0.012573308311402798,
    -0.004437846597284079,
    -0.05389167740941048,
    0.024919942021369934,
    0.0028599847573786974,
    0.024395758286118507,
    0.03915788605809212,
    0.021094823256134987,
    0.00989572424441576,
    -0.013713760301470757,
    0.02038646675646305,
    -0.009761136956512928,
    -0.022568201646208763,
    0.017198868095874786,
    -0.005642050411552191,
    -0.01155327633023262,
    -0.018913088366389275,
    -0.020287297666072845,
    -0.027030840516090393,
    -0.020726477727293968,
    -0.013196660205721855,
    -0.0039986660704016685,
    -0.0013139991788193583,
    0.01048365980386734,
    0.01612216793000698,
    -0.030034268274903297,
    -0.0020737103186547756,
    -0.03825119137763977,
    0.038761205971241,
    0.03088429383933544,
    -0.0005817368510179222,
    -0.029580920934677124,
    -0.01367834210395813,
    -0.03955456241965294,
    0.004069501534104347,
    0.012778731063008308,
    -0.0005565016763284802,
    0.008875693194568157,
    -0.02079731412231922,
    0.018757250159978867,
    0.003543547820299864,
    0.006757710129022598,
    0.0031433270778506994,
    -0.0014547848841175437,
    -0.010929923504590988,
    0.018714748322963715,
    0.005454336293041706,
    -0.008712771348655224,
    0.010292403399944305,
    0.03836452588438988,
    -0.005433085840195417,
    -0.00663728965446353,
    0.0004551183374132961,
    -0.05836848169565201,
    0.03397272527217865,
    -0.0026421656366437674,
    0.006771877408027649,
    0.00012683987733907998,
    0.0005290529225021601,
    0.022270692512392998,
    0.01671718619763851,
    -0.0063574896194040775,
    -0.00028821208979934454,
    -0.015413813292980194,
    0.00044250075006857514,
    -0.028036706149578094,
    0.004328051116317511,
    -0.01844557374715805,
    -0.02348906360566616,
    0.021264828741550446,
    0.006626664660871029,
    0.01466295588761568,
    -0.0021427751053124666,
    0.030317610129714012,
    0.030119270086288452,
    -0.0032956234645098448,
    -0.022242357954382896,
    -0.005011614412069321,
    -0.010929923504590988,
    0.005330373998731375,
    -0.012346633709967136,
    0.0155129823833704,
    -0.011737448163330555,
    0.020882315933704376,
    -0.02830588072538376,
    0.005709344521164894,
    -0.009860306978225708,
    -0.029609255492687225,
    -0.008677353151142597,
    0.0006972873234190047,
    0.005213495343923569,
    -0.02368740364909172,
    -0.042217981070280075,
    -0.17895890772342682,
    0.01474795863032341,
    0.018204733729362488,
    -0.03904454782605171,
    0.047233134508132935,
    -0.02154817059636116,
    0.0014884317060932517,
    -0.0006946309586055577,
    0.014216692186892033,
    -0.02347489632666111,
    0.026109978556632996,
    -0.016363009810447693,
    -0.012892067432403564,
    -0.01632050797343254,
    0.0036728226114064455,
    0.014259194023907185,
    -0.00460785161703825,
    0.008117752149701118,
    0.027597526088356972,
    0.02482077293097973,
    0.001314884633757174,
    -0.04731813818216324,
    0.006077689118683338,
    0.01096534077078104,
    -0.013331248424947262,
    -0.03377438336610794,
    8.018804510356858e-05,
    0.005613716319203377,
    -0.005100158508867025,
    -0.03768450766801834,
    -0.005170994438230991,
    -0.01804889552295208,
    0.01653301529586315,
    0.016051333397626877,
    0.034426070749759674,
    -0.006750626489520073,
    0.025911640375852585,
    -0.011007842607796192,
    -0.003499275539070368,
    0.03479441627860069,
    0.02873089350759983,
    0.027016673237085342,
    0.00922987051308155,
    -0.020641475915908813,
    -0.004320967942476273,
    0.0020542305428534746,
    0.004019916523247957,
    -0.049981556832790375,
    0.001682344009168446,
    -0.0023163221776485443,
    0.026690829545259476,
    -0.013614590279757977,
    -0.0013662404380738735,
    -0.011794117279350758,
    0.030374279245734215,
    0.00548267038539052,
    0.025514960289001465,
    0.015867160633206367,
    0.03215933218598366,
    0.0019745405297726393,
    -0.008486097678542137,
    -0.004019916523247957,
    0.02252570167183876,
    -0.02208651974797249,
    -0.022794876247644424,
    -0.03431273251771927,
    -0.017128033563494682,
    0.004204089287668467,
    -0.009265288710594177,
    0.018686415627598763,
    0.0002183726755902171,
    0.02681833505630493,
    0.004841608926653862,
    0.011581609956920147,
    0.022766541689634323,
    0.012658310122787952,
    -0.03201766312122345,
    -0.016547180712223053,
    0.021463166922330856,
    0.021420666947960854,
    -0.026081643998622894,
    0.04099960997700691,
    0.00033115613041445613,
    -0.0033753132447600365,
    0.010490743443369865,
    -0.003630321240052581,
    0.011284100823104382,
    -0.003956164699047804,
    -0.022554034367203712,
    -0.0033168739173561335,
    0.012615809217095375,
    -0.015852993354201317,
    -0.0023712196853011847,
    0.012431636452674866,
    0.004930153489112854,
    0.043209679424762726,
    -0.0057128858752548695,
    0.017213035374879837,
    0.022454865276813507,
    -0.018431406468153,
    -0.007600652985274792,
    0.023758240044116974,
    -0.029637588188052177,
    0.007055219728499651,
    0.017893057316541672,
    0.027654193341732025,
    -0.019338101148605347,
    -0.0204006340354681,
    0.020471470430493355,
    -0.01483296137303114,
    0.0018009935738518834,
    0.018785584717988968,
    0.022440697997808456,
    0.010802419856190681,
    -0.03383105248212814,
    0.02541579119861126,
    -0.014818794094026089,
    -0.008068167604506016,
    0.015328810550272465,
    -0.009654883295297623,
    0.04057459533214569,
    -0.03360437974333763,
    -0.02446659468114376,
    0.012870817445218563,
    -0.014776293188333511,
    -0.027016673237085342,
    -0.1165102943778038,
    -0.03516276180744171,
    0.030345944687724113,
    0.011036177165806293,
    -0.02463660016655922,
    -0.010327821597456932,
    -0.0015698926290497184,
    0.02525995299220085,
    -0.03150764852762222,
    0.012084542773663998,
    -0.013324164785444736,
    -0.0135933393612504,
    -0.03204599767923355,
    -0.006856880150735378,
    -0.017581380903720856,
    -0.0039313724264502525,
    -0.006523952819406986,
    -0.007037510629743338,
    -0.02874506078660488,
    0.009874474257230759,
    -0.015059635043144226,
    0.005316207185387611,
    0.00631144642829895,
    0.016986362636089325,
    -0.01960727758705616,
    0.00785566121339798,
    -0.023234056308865547,
    0.024948276579380035,
    0.015144637785851955,
    0.002211839659139514,
    -0.02170400880277157,
    -0.012304132804274559,
    -0.017694717273116112,
    -0.009584047831594944,
    0.0029503002297133207,
    -0.005450794473290443,
    -0.018927255645394325,
    -0.026506658643484116,
    0.012821231968700886,
    -0.024764103814959526,
    -0.007373979315161705,
    -0.003485108492895961,
    0.01357917208224535,
    0.01010823156684637,
    0.012927485629916191,
    0.014025436714291573,
    -0.018714748322963715,
    0.010143648833036423,
    0.0038924128748476505,
    -0.031762655824422836,
    -0.010781168937683105,
    -0.005663301330059767,
    -0.025897473096847534,
    -0.00746606569737196,
    0.019678112119436264,
    0.0016593224136158824,
    0.015583817847073078,
    -0.011376187205314636,
    -0.008691520430147648,
    0.00786982849240303,
    0.006042271386831999,
    0.014046686701476574,
    0.0027980036102235317,
    0.010405740700662136,
    0.004391803406178951,
    0.0002558933920226991,
    0.0012626434909179807,
    -0.013997102156281471,
    0.005486212205141783,
    0.006683332845568657,
    -0.03782617673277855,
    0.006885214243084192,
    -0.0013237390667200089,
    0.0135933393612504,
    -0.013508336618542671,
    -0.015017134137451649,
    -0.003481566673144698,
    -0.029580920934677124,
    0.012693728320300579,
    -0.010986591689288616,
    -0.03068595565855503,
    0.010745750740170479,
    -0.02618081495165825,
    -0.047063130885362625,
    -0.014096272177994251,
    -0.004228881560266018,
    -0.0012289965525269508,
    -0.007480232510715723,
    -0.01486129593104124,
    -0.06312862783670425,
    0.0025075781159102917,
    -0.006952507887035608,
    -0.0013671258930116892,
    -0.011192014440894127,
    -0.01330291386693716,
    0.009959476999938488,
    0.0009545088396407664,
    -0.014060853980481625,
    -0.01347291935235262,
    0.010894505307078362,
    -0.02734251692891121,
    -0.008989029563963413,
    -0.06873880326747894,
    0.0065027023665606976,
    0.02870255894958973,
    -0.011305351741611958,
    0.009782387875020504,
    -0.02833421528339386,
    0.005865182261914015,
    -0.020485637709498405,
    2.1707217456423678e-05,
    0.0193806029856205,
    -0.019323933869600296,
    -0.005128493066877127,
    0.0056066326797008514,
    0.004104919265955687,
    -0.02541579119861126,
    0.002551850164309144,
    0.029750926420092583,
    -0.009938226081430912,
    0.03918622061610222,
    0.025954140350222588,
    0.0023517399094998837,
    0.017368873581290245,
    0.015328810550272465,
    0.019522273913025856,
    -0.02482077293097973,
    -0.020060624927282333,
    -0.018884753808379173,
    0.028603389859199524,
    -0.013536671176552773,
    -0.00044471435830928385,
    0.008889859542250633,
    -0.00514265988022089,
    -0.0310259647667408,
    -0.006810836959630251,
    0.0038817874155938625,
    0.0016203628620132804,
    0.0300626028329134,
    0.012566224671900272,
    0.0002795790205709636,
    0.007926496677100658,
    -0.04561808705329895,
    -0.041821300983428955,
    0.021278996020555496,
    0.012601641938090324,
    -0.01348708663135767,
    -0.000534808321390301,
    -0.0019745405297726393,
    0.0021569421514868736,
    0.027215013280510902,
    0.0019426646176725626,
    0.02057063952088356,
    -0.003490420989692211,
    -0.03759950399398804,
    -0.04150962457060814,
    -0.004197005648165941,
    -0.01106451079249382,
    -0.0010705020977184176,
    0.0032177043613046408,
    -0.010426990687847137,
    -0.007324394769966602,
    0.05221995711326599,
    0.005096616689115763,
    0.021789010614156723,
    0.012396219186484814,
    -0.008734021335840225,
    -0.029212575405836105,
    -0.038902878761291504,
    -0.006771877408027649,
    0.01301248837262392,
    -0.008443595841526985,
    -0.006856880150735378,
    0.007827326655387878,
    0.01787889003753662,
    0.012764563784003258,
    0.0022189232986420393,
    0.002835192484781146,
    0.009144867770373821,
    0.02000395581126213,
    -0.012714979238808155,
    0.02579830214381218,
    0.014011269435286522,
    -0.03587111458182335,
    -0.032726019620895386,
    0.008202754892408848,
    0.03343437239527702,
    0.0006671822047792375,
    -0.036862812936306,
    0.0057908049784600735,
    -0.007058761082589626,
    -0.00012274470645934343,
    -0.01029948703944683,
    0.012842482887208462,
    -0.00910945050418377,
    0.0017877118661999702,
    0.0140537703409791,
    0.008316092193126678,
    -0.007543984800577164,
    0.004473264329135418,
    0.021477334201335907,
    -0.007926496677100658,
    0.0035028173588216305,
    -0.010653664357960224,
    0.013713760301470757,
    -0.008025666698813438,
    -0.0013476461172103882,
    0.014606287702918053,
    -0.020329799503087997,
    -0.003357604378834367,
    0.004320967942476273,
    0.0011076907394453883,
    0.029920930042862892,
    0.007876912131905556,
    -0.02792336791753769,
    0.010922839865088463,
    -0.008677353151142597,
    0.010278236120939255,
    0.015838826075196266,
    -0.010646581649780273,
    -0.027654193341732025,
    0.03555943816900253,
    0.013990018516778946,
    0.002760814968496561,
    0.013458752073347569,
    0.009867390617728233,
    0.03975290432572365,
    0.020712310448288918,
    -0.004158046096563339,
    -0.02078314684331417,
    0.030515950173139572,
    -0.011482440866529942,
    0.008153170347213745,
    0.014677123166620731,
    -0.003885329235345125,
    -0.012070375494658947,
    0.0003318202216178179,
    -0.017779719084501266,
    0.01327457930892706,
    -0.01957894302904606,
    -0.0003340338298585266,
    0.09231287240982056,
    0.01571132242679596,
    0.0006773648201487958,
    -0.007940663956105709,
    -0.008571100421249866,
    0.002426117192953825,
    -0.0014857753412798047,
    -0.02640748769044876,
    -0.004671603906899691,
    -0.015045467764139175,
    -0.020471470430493355,
    0.015172972343862057,
    -0.016929693520069122,
    -0.01901225745677948,
    0.00950612872838974,
    0.004257215652614832,
    -0.013812929391860962,
    0.008578183129429817,
    -0.002295071491971612,
    -0.0011315976735204458,
    0.005886433180421591,
    0.013423333875834942,
    -0.003625008510425687,
    -0.008018583059310913,
    -0.013947517611086369,
    0.01029948703944683,
    0.038336191326379776,
    0.002396011957898736,
    -0.00746606569737196,
    -0.03674947842955589,
    0.01841723918914795,
    0.006265403237193823,
    -0.02677583321928978,
    -0.015682987868785858,
    0.00426784111186862,
    0.008457763120532036,
    -0.005234746262431145,
    -0.013912099413573742,
    0.017383040860295296,
    0.028787562623620033,
    0.0021232953295111656,
    0.014705457724630833,
    -0.0029981140978634357,
    -0.04255799204111099,
    0.010313654318451881,
    0.003097283886745572,
    0.003899496281519532,
    -0.027413353323936462,
    -0.042416319251060486
  ]
}
{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: sql",
    "topic :: database"
  ],
  "description": "# bcpy\n\n<table>\n<tr>\n  <td>latest release</td>\n  <td>\n    <a href=\"https://pypi.org/project/bcpy/\">\n    <img src=\"https://img.shields.io/pypi/v/bcpy.svg\" alt=\"latest release\" />\n    </a>\n  </td>\n</tr>\n<tr>\n  <td>license</td>\n  <td>\n    <a href=\"https://github.com/titan550/bcpy/blob/master/license\">\n    <img src=\"https://img.shields.io/pypi/l/bcpy.svg\" alt=\"license\" />\n    </a>\n</td>\n</tr>\n<tr>\n  <td>build status (master)</td>\n  <td>\n    <a href=\"https://travis-ci.org/titan550/bcpy\">\n    <img src=\"https://api.travis-ci.org/titan550/bcpy.svg?branch=master\" alt=\"travis build status\" />\n    </a>\n  </td>\n</tr>\n</table>\n\n## what is it?\n\nthis package is a wrapper for microsoft's sql server bcp utility. current database drivers available in python are not fast enough for transferring millions of records (yes, i have tried [pyodbc fast_execute_many](https://github.com/mkleehammer/pyodbc/wiki/features-beyond-the-db-api#fast_executemany)). despite the io hits, the fastest option by far is saving the data to a csv file in file system (preferably /dev/shm tmpfs) and using the bcp utility to transfer the csv file to sql server.\n\n## how can i install it?\n\n1. make sure your computeer has the [requirements](#requirements).\n1. you can download and install this package from pypi repository by running the command below.\n\n```bash\npip install bcpy\n```\n\n## examples\n\nfollowing examples show you how to load (1) flat files and (2) dataframe objects to sql server using this package.\n\n### flat file\n\nfollowing example assumes that you have a comma separated file with no qualifier in path 'tests/data1.csv'. the code below sends the the file to sql server.\n\n```python\nimport bcpy\n\n\nsql_config = {\n    'server': 'sql_server_hostname',\n    'database': 'database_name',\n    'username': 'test_user',\n    'password': 'test_user_password1234'\n}\nsql_table_name = 'test_data1'\ncsv_file_path = 'tests/data1.csv'\nflat_file = bcpy.flatfile(qualifier='', path=csv_file_path)\nsql_table = bcpy.sqltable(sql_config, table=sql_table_name)\nflat_file.to_sql(sql_table)\n```\n\n### dataframe\n\nthe following example creates a dataframe with 100 rows and 4 columns populated with random data and then it sends it to sql server.\n\n```python\nimport bcpy\nimport numpy as np\nimport pandas as pd\n\n\nsql_config = {\n    'server': 'sql_server_hostname',\n    'database': 'database_name',\n    'username': 'test_user',\n    'password': 'test_user_password1234'\n}\ntable_name = 'test_dataframe'\ndf = pd.dataframe(np.random.randint(-100, 100, size=(100, 4)),\n                  columns=list('abcd'))\nbdf = bcpy.dataframe(df)\nsql_table = bcpy.sqltable(sql_config, table=table_name)\nbdf.to_sql(sql_table)\n```\n\n## requirements\n\nyou need a working version of microsoft bcp installed in your system. your path environment variable should contain the directory of the bcp utility. following are the installation tutorials for different operating systems.\n\n- [dockerfile (ubuntu 18.04)](./bcp.dockerfile)\n- [linux](https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-setup-tools)\n- [mac](https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-setup-tools?view=sql-server-2017#macos)\n- [windows](https://docs.microsoft.com/en-us/sql/tools/bcp-utility)",
  "docs_url": null,
  "keywords": "bcp mssql",
  "license": "",
  "name": "bcpy",
  "package_url": "https://pypi.org/project/bcpy/",
  "project_url": "https://pypi.org/project/bcpy/",
  "project_urls": {
    "Homepage": "https://github.com/titan550/bcpy"
  },
  "release_url": "https://pypi.org/project/bcpy/0.1.8/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "microsoft sql server bcp (bulk copy) wrapper",
  "version": "0.1.8",
  "releases": [],
  "developers": [
    "john_shojaei",
    "titan550@gmail.com"
  ],
  "kwds": "bcpy python bcp pip file",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_bcpy",
  "homepage": "https://github.com/titan550/bcpy",
  "release_count": 11,
  "dependency_ids": []
}
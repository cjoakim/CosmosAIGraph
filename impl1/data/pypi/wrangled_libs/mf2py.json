{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: text processing :: markup :: html"
  ],
  "description": "![mf2py banner](https://microformats.github.io/mf2py/banner.png)\n\n[![version](https://badge.fury.io/py/mf2py.svg?)](https://badge.fury.io/py/mf2py)\n[![downloads](https://img.shields.io/pypi/dm/mf2py)](https://pypistats.org/packages/mf2py)\n[![license](https://img.shields.io/pypi/l/mf2py?)](https://github.com/microformats/mf2py/blob/main/license)\n[![python-version](https://img.shields.io/pypi/pyversions/mf2py)](https://badge.fury.io/py/mf2py)\n\n## welcome \ud83d\udc4b\n\n`mf2py` is a python [microformats](https://microformats.org/wiki/microformats) parser with full support for `microformats2`, backwards-compatible support for `microformats1` and experimental support for `metaformats`.\n\n## installation \ud83d\udcbb\n\nto install `mf2py` run the following command:\n\n```bash\n$ pip install mf2py\n\n```\n\n## quickstart \ud83d\ude80\n\nimport the library:\n\n```pycon\n>>> import mf2py\n\n```\n\n### parse an html document from a file or string\n\n```pycon\n>>> with open(\"test/examples/eras.html\") as fp:\n...     mf2json = mf2py.parse(doc=fp)\n>>> mf2json\n{'items': [{'type': ['h-entry'],\n            'properties': {'name': ['excited for the taylor swift eras tour'],\n                           'author': [{'type': ['h-card'],\n                                       'properties': {'name': ['james'],\n                                                      'url': ['https://example.com/']},\n                                       'value': 'james',\n                                       'lang': 'en-us'}],\n                           'published': ['2023-11-30t19:08:09'],\n                           'featured': [{'value': 'https://example.com/eras.jpg',\n                                         'alt': 'eras tour poster'}],\n                           'content': [{'value': \"i can't decide which era is my favorite.\",\n                                        'lang': 'en-us',\n                                        'html': \"<p>i can't decide which era is my favorite.</p>\"}],\n                           'category': ['music', 'taylor swift']},\n            'lang': 'en-us'}],\n 'rels': {'webmention': ['https://example.com/mentions']},\n 'rel-urls': {'https://example.com/mentions': {'text': '',\n                                               'rels': ['webmention']}},\n 'debug': {'description': 'mf2py - microformats2 parser for python',\n           'source': 'https://github.com/microformats/mf2py',\n           'version': '2.0.0',\n           'markup parser': 'html5lib'}}\n\n```\n\n```pycon\n>>> mf2json = mf2py.parse(doc=\"<a class=h-card href=https://example.com>james</a>\")\n>>> mf2json[\"items\"]\n[{'type': ['h-card'],\n  'properties': {'name': ['james'],\n                 'url': ['https://example.com']}}]\n\n```\n\n### parse an html document from a url\n\n```pycon\n>>> mf2json = mf2py.parse(url=\"https://events.indieweb.org\")\n>>> mf2json[\"items\"][0][\"type\"]\n['h-feed']\n>>> mf2json[\"items\"][0][\"children\"][0][\"type\"]\n['h-event']\n\n```\n\n## experimental options\n\nthe following options can be invoked via keyword arguments to `parse()` and `parser()`.\n\n### `expose_dom`\n\nuse `expose_dom=true` to expose the dom of embedded properties.\n\n### `metaformats`\n\nuse `metaformats=true` to include any [metaformats](https://microformats.org/wiki/metaformats)\nfound.\n\n### `filter_roots`\n\nuse `filter_roots=true` to filter known conflicting user names (e.g. tailwind).\notherwise provide a custom list to filter instead.\n\n## advanced usage\n\n`parse` is a convenience function for `parser`. more sophisticated behaviors are\navailable by invoking the parser object directly.\n\n```pycon\n>>> with open(\"test/examples/festivus.html\") as fp:\n...     mf2parser = mf2py.parser(doc=fp)\n\n```\n\n#### filter by microformat type\n\n```pycon\n>>> mf2json = mf2parser.to_dict()\n>>> len(mf2json[\"items\"])\n7\n>>> len(mf2parser.to_dict(filter_by_type=\"h-card\"))\n3\n>>> len(mf2parser.to_dict(filter_by_type=\"h-entry\"))\n4\n\n```\n\n#### json output\n\n```pycon\n>>> json = mf2parser.to_json()\n>>> json_cards = mf2parser.to_json(filter_by_type=\"h-card\")\n\n```\n\n## breaking changes in `mf2py` 2.0\n\n- image `alt` support is now on by default.\n\n## notes \ud83d\udcdd\n\n- if you pass a beautifulsoup document it may be modified.\n- a hosted version of `mf2py` is available at [python.microformats.io](https://python.microformats.io).\n\n## contributing \ud83d\udee0\ufe0f\n\nwe welcome contributions and bug reports via github.\n\nthis project follows the [indieweb code of conduct](https://indieweb.org/code-of-conduct). please be respectful of other contributors and forge a spirit of positive co-operation without discrimination or disrespect.\n\n## license \ud83e\uddd1\u200d\u2696\ufe0f\n\n`mf2py` is licensed under an mit license.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "mf2py",
  "package_url": "https://pypi.org/project/mf2py/",
  "project_url": "https://pypi.org/project/mf2py/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/mf2py/2.0.1/",
  "requires_dist": [
    "html5lib (>=1.1,<2.0)",
    "requests (>=2.28.2,<3.0.0)",
    "beautifulsoup4 (>=4.11.1,<5.0.0)"
  ],
  "requires_python": ">=3.8",
  "summary": "microformats parser",
  "version": "2.0.1",
  "releases": [],
  "developers": [
    "tom@tommorris.org",
    "tom_morris"
  ],
  "kwds": "mf2py python mf2parser pycon mf2json",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_mf2py",
  "homepage": "",
  "release_count": 25,
  "dependency_ids": [
    "pypi_beautifulsoup4",
    "pypi_html5lib",
    "pypi_requests"
  ]
}
{
  "classifiers": [],
  "description": "gluonnlp: your choice of deep learning for nlp\n\ngluonnlp is a toolkit that enables easy text preprocessing, datasets\nloading and neural models building to help you speed up your natural\nlanguage processing (nlp) research.\n\n- `quick start guide <https://github.com/dmlc/gluon-nlp#quick-start-guide>`__\n- `resources <https://github.com/dmlc/gluon-nlp#resources>`__\n\nnews\n====\n\n- tutorial proposal for gluonnlp is accepted at `emnlp 2019 <https://www.emnlp-ijcnlp2019.org>`__, hong kong.\n\n- gluonnlp was featured in:\n\n  - **kdd 2019 alaska**! check out our tutorial: `from shallow to deep language representations: pre-training, fine-tuning, and beyond <http://kdd19.mxnet.io>`__.\n  - **jsalt 2019 in montreal, 2019-6-14**! checkout **https://jsalt19.mxnet.io**.\n  - **aws re:invent 2018 in las vegas, 2018-11-28**! checkout `details <https://www.portal.reinvent.awsevents.com/connect/sessiondetail.ww?session_id=88736>`_.\n  - **pydata 2018 nyc, 2018-10-18**! checkout the `awesome talk <https://pydata.org/nyc2018/schedule/presentation/76/>`__ by sneha jha.\n  - **kdd 2018 london, 2018-08-21, apache mxnet gluon tutorial**! check out **https://kdd18.mxnet.io**.\n\ninstallation\n============\n\nmake sure you have python 3.5 or newer and a recent version of mxnet (our ci\nserver runs the testsuite with python 3.5).\n\nyou can install ``mxnet`` and ``gluonnlp`` using pip.\n\n``gluonnlp`` is based on the most recent version of ``mxnet``.\n\n\nin particular, if you want to install the most recent ``mxnet`` release:\n\n::\n\n    pip install --upgrade mxnet>=1.6.0\n\nelse, if you want to install the most recent ``mxnet`` nightly build:\n\n::\n\n    pip install --pre --upgrade mxnet\n\nthen, you can install ``gluonnlp``:\n\n::\n\n    pip install gluonnlp\n\nplease check more `installation details <https://github.com/dmlc/gluon-nlp/blob/master/docs/install.rst>`_.\n\ndocs \ud83d\udcd6\n=======\n\ngluonnlp documentation is available at `our\nwebsite <http://gluon-nlp.mxnet.io/master/index.html>`__.\n\ncommunity\n=========\n\ngluonnlp is a community that believes in sharing.\n\nfor questions, comments, and bug reports, `github issues <https://github.com/dmlc/gluon-nlp/issues>`__ is the best way to reach us.\n\nwe now have a new slack channel `here <https://apache-mxnet.slack.com/messages/cccdm10v9>`__.\n(`register <https://join.slack.com/t/apache-mxnet/shared_invite/enqtndqymjaxmjqzmti3ltkzmzy3zmrlnznjngqxodg0n2y5nmexmjewotzlymiwytu2zty4zjnlmmezowy5mgq5n2qxyjhlztfhztvmytc>`__).\n\nhow to contribute\n=================\n\ngluonnlp community welcomes contributions from anyone!\n\nthere are lots of opportunities for you to become our `contributors <https://github.com/dmlc/gluon-nlp/graphs/contributors>`__:\n\n- ask or answer questions on `github issues <https://github.com/dmlc/gluon-nlp/issues>`__.\n- propose ideas, or review proposed design ideas on `github issues <https://github.com/dmlc/gluon-nlp/issues>`__.\n- improve the `documentation <http://gluon-nlp.mxnet.io/master/index.html>`__.\n- contribute bug reports `github issues <https://github.com/dmlc/gluon-nlp/issues>`__.\n- write new `scripts <https://github.com/dmlc/gluon-nlp/tree/master/scripts>`__ to reproduce\n  state-of-the-art results.\n- write new `examples <https://github.com/dmlc/gluon-nlp/tree/master/docs/examples>`__ to explain\n  key ideas in nlp methods and models.\n- write new `public datasets <https://github.com/dmlc/gluon-nlp/tree/master/gluonnlp/data>`__\n  (license permitting).\n- most importantly, if you have an idea of how to contribute, then do it!\n\nfor a list of open starter tasks, check `good first issues <https://github.com/dmlc/gluon-nlp/labels/good%20first%20issue>`__.\n\nalso see our `contributing\nguide <http://gluon-nlp.mxnet.io/master/how_to/contribute.html>`__ on simple how-tos,\ncontribution guidelines and more.\n\nresources\n=========\n\ncheck out how to use gluonnlp for your own research or projects.\n\nif you are new to gluon, please check out our `60-minute crash course\n<http://gluon-crash-course.mxnet.io/>`__.\n\nfor getting started quickly, refer to notebook runnable examples at\n`examples. <http://gluon-nlp.mxnet.io/master/examples/index.html>`__\n\nfor advanced examples, check out our\n`scripts. <http://gluon-nlp.mxnet.io/master/scripts/index.html>`__\n\nfor experienced users, check out our\n`api notes <http://gluon-nlp.mxnet.io/master/api/index.html>`__.\n\nquick start guide\n=================\n\n`dataset loading <http://gluon-nlp.mxnet.io/master/api/notes/data_api.html>`__\n-------------------------------------------------------------------------------\n\nload the wikitext-2 dataset, for example:\n\n.. code:: python\n\n    >>> import gluonnlp as nlp\n    >>> train = nlp.data.wikitext2(segment='train')\n    >>> train[0:5]\n    ['=', 'valkyria', 'chronicles', 'iii', '=']\n\n`vocabulary construction <http://gluon-nlp.mxnet.io/master/api/modules/vocab.html>`__\n-------------------------------------------------------------------------------------\n\nbuild vocabulary based on the above dataset, for example:\n\n.. code:: python\n\n    >>> vocab = nlp.vocab(counter=nlp.data.counter(train))\n    >>> vocab\n    vocab(size=33280, unk=\"<unk>\", reserved=\"['<pad>', '<bos>', '<eos>']\")\n\n`neural models building <http://gluon-nlp.mxnet.io/master/api/modules/model.html>`__\n------------------------------------------------------------------------------------\n\nfrom the models package, apply a standard rnn language model to the\nabove dataset:\n\n.. code:: python\n\n    >>> model = nlp.model.language_model.standardrnn('lstm', len(vocab),\n    ...                                              200, 200, 2, 0.5, true)\n    >>> model\n    standardrnn(\n      (embedding): hybridsequential(\n        (0): embedding(33280 -> 200, float32)\n        (1): dropout(p = 0.5, axes=())\n      )\n      (encoder): lstm(200 -> 200.0, tnc, num_layers=2, dropout=0.5)\n      (decoder): hybridsequential(\n        (0): dense(200 -> 33280, linear)\n      )\n    )\n\n`word embeddings loading <http://gluon-nlp.mxnet.io/master/api/modules/embedding.html>`__\n-----------------------------------------------------------------------------------------\n\nfor example, load a glove word embedding, one of the state-of-the-art\nenglish word embeddings:\n\n.. code:: python\n\n    >>> glove = nlp.embedding.create('glove', source='glove.6b.50d')\n    # obtain vectors for 'baby' in the glove word embedding\n    >>> type(glove['baby'])\n    <class 'mxnet.ndarray.ndarray.ndarray'>\n    >>> glove['baby'].shape\n    (50,)\n\n\nreference paper\n===============\n\nthe bibtex entry for the `reference paper <https://arxiv.org/abs/1907.04433>`__ of gluonnlp is:\n\n.. code::\n   \n   @article{gluoncvnlp2020,\n     author  = {jian guo and he he and tong he and leonard lausen and mu li and haibin lin and xingjian shi and chenguang wang and junyuan xie and sheng zha and aston zhang and hang zhang and zhi zhang and zhongyue zhang and shuai zheng and yi zhu},\n     title   = {gluoncv and gluonnlp: deep learning in computer vision and natural language processing},\n     journal = {journal of machine learning research},\n     year    = {2020},\n     volume  = {21},\n     number  = {23},\n     pages   = {1-7},\n     url     = {http://jmlr.org/papers/v21/19-429.html}\n   }\n\n\nnew to deep learning or nlp?\n============================\n\nfor background knowledge of deep learning or nlp, please refer to the open source book `dive into deep learning <http://en.diveintodeeplearning.org/>`__.",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "gluonnlp",
  "package_url": "https://pypi.org/project/gluonnlp/",
  "project_url": "https://pypi.org/project/gluonnlp/",
  "project_urls": {
    "Homepage": "https://github.com/dmlc/gluon-nlp"
  },
  "release_url": "https://pypi.org/project/gluonnlp/0.10.0/",
  "requires_dist": [],
  "requires_python": ">=3.5",
  "summary": "mxnet gluon nlp toolkit",
  "version": "0.10.0",
  "releases": [],
  "developers": [
    "gluon_nlp_toolkit_contributors",
    "mxnet-gluon@amazon.com"
  ],
  "kwds": "gluonnlp nlp gluoncvnlp2020 language_model lstm",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_gluonnlp",
  "homepage": "https://github.com/dmlc/gluon-nlp",
  "release_count": 25,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development",
    "typing :: typed"
  ],
  "description": "[![lint](https://github.com/facebook/pyre-check/workflows/lint/badge.svg)](https://github.com/facebook/pyre-check/actions/workflows/lint.yml)\n[![tests](https://github.com/facebook/pyre-check/workflows/tests/badge.svg)](https://github.com/facebook/pyre-check/actions/workflows/tests.yml)\n[![pyre](https://github.com/facebook/pyre-check/workflows/pyre/badge.svg)](https://github.com/facebook/pyre-check/actions/workflows/pyre.yml)\n[![license: mit](https://img.shields.io/badge/license-mit-yellow.svg)](https://opensource.org/licenses/mit)\n[![gitter](https://badges.gitter.im/pyre-check/community.svg)](https://gitter.im/pyre-check/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/facebook/pyre-check/main/logo.png\">\n</p>\n\npyre is a performant type checker for python compliant with [pep 484](https://www.python.org/dev/peps/pep-0484/). pyre can analyze codebases with millions of lines of code incrementally \u2013 providing instantaneous feedback to developers as they write code. you can try it out on examples in [the pyre playground](https://pyre-check.org/play).\n\npyre ships with **pysa**, a security focused static analysis tool we've built on top of pyre that reasons about data flows in python applications. please refer to our [documentation](https://pyre-check.org/docs/pysa-quickstart) to get started with our security analysis.\n\npysa is also available on the [github marketplace as a github action](https://github.com/marketplace/actions/pysa-action)\n\n## requirements\nto get started, you need [python 3.8 or later](https://www.python.org/getit/) and [watchman](https://facebook.github.io/watchman/) working on your system. on *macos* you can get everything with [homebrew](https://brew.sh/):\n```bash\n$ brew install python3 watchman\n```\non *ubuntu*, *mint*, or *debian*; use `apt-get` and [homebrew](https://brew.sh/):\n```bash\n$ sudo apt-get install python3 python3-pip python3-venv\n$ brew install watchman\n```\nwe tested pyre on *ubuntu 18.04.5 lts*, *centos 7*, as well as *osx 10.11* and later.\n\n## setting up a project\nwe start by creating an empty project directory and setting up a virtual environment:\n\n```bash\n$ mkdir my_project && cd my_project\n$ python3 -m venv ~/.venvs/venv\n$ source ~/.venvs/venv/bin/activate\n(venv) $ pip install pyre-check\n```\n\nnext, we teach pyre about our new project:\n```bash\n(venv) $ pyre init\n```\nthis command will set up a configuration for pyre (`.pyre_configuration`) as well as watchman (`.watchmanconfig`) in your project's directory. accept the defaults for now \u2013 you can change them later if necessary.\n\n## running pyre\nwe are now ready to run pyre:\n```bash\n(venv) $ echo \"i: int = 'string'\" > test.py\n(venv) $ pyre\n \u019b found 1 type error!\ntest.py:1:0 incompatible variable type [9]: i is declared to have type `int` but is used as type `str`.\n```\nthis first invocation will start a daemon listening for filesystem changes \u2013\u00a0type checking your project incrementally as you make edits to the code. you will notice that subsequent invocations of `pyre` will be faster than the first one.\n\nfor more detailed documentation, see https://pyre-check.org.\n\n## join the pyre community\n\nsee [contributing.md](contributing.md) for how to help out.\n\n## license\n\npyre is licensed under the mit license.\n\n\n",
  "docs_url": null,
  "keywords": "typechecker development",
  "license": "mit",
  "name": "pyre-check",
  "package_url": "https://pypi.org/project/pyre-check/",
  "project_url": "https://pypi.org/project/pyre-check/",
  "project_urls": {
    "Download": "https://github.com/facebook/pyre-check",
    "Homepage": "https://pyre-check.org/"
  },
  "release_url": "https://pypi.org/project/pyre-check/0.9.19/",
  "requires_dist": [
    "click (>=8.0)",
    "dataclasses-json",
    "intervaltree",
    "libcst",
    "psutil",
    "pyre-extensions (>=0.0.29)",
    "tabulate",
    "testslide (>=2.7.0)",
    "typing-extensions",
    "typing-inspect"
  ],
  "requires_python": ">=3.8",
  "summary": "a performant type checker for python",
  "version": "0.9.19",
  "releases": [],
  "developers": [
    "facebook",
    "pyre@fb.com"
  ],
  "kwds": "typechecker workflows badge badges yml",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pyre_check",
  "homepage": "https://pyre-check.org/",
  "release_count": 70,
  "dependency_ids": [
    "pypi_click",
    "pypi_dataclasses_json",
    "pypi_intervaltree",
    "pypi_libcst",
    "pypi_psutil",
    "pypi_pyre_extensions",
    "pypi_tabulate",
    "pypi_testslide",
    "pypi_typing_extensions",
    "pypi_typing_inspect"
  ]
}
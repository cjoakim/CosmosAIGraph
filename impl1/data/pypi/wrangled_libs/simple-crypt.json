{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: public domain",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "topic :: security",
    "topic :: security :: cryptography",
    "topic :: software development"
  ],
  "description": "what does simple crypt do?\n--------------------------\n\nsimple crypt encrypts and decrypts data.  it has two functions, ``encrypt``\nand ``decrypt``::\n\n    from simplecrypt import encrypt, decrypt\n    ciphertext = encrypt('password', plaintext)\n    plaintext = decrypt('password', ciphertext)\n\nthat's it.  you can see the implementation on\n`github <https://github.com/andrewcooke/simple-crypt/blob/master/src/simplecrypt/__init__.py>`_.\n\nwhy should i use simple crypt?\n------------------------------\n\n* it uses standard, well-known algorithms, closely following the\n  recommendations `here\n  <http://www.daemonology.net/blog/2009-06-11-cryptographic-right-answers.html>`_.\n\n* the established, efficient `pycrypto <https://www.dlitz.net/software/pycrypto>`_\n  library provides the algorithm implementations (the cipher used is aes256).\n\n* it includes a check (an hmac with sha256) to warn when ciphertext\n  data are modified.\n\n* it tries to make things as secure as possible when poor quality\n  passwords are used (pbkdf2 with sha256, a 256 bit random salt\n  (increased from 128 bits in release 3.0.0), and 100,000 rounds\n  (increased from 10,000 in release 4.0.0)).  but that doesn't mean\n  you should use a poor password!\n\n* using a library, rather than writing your own code, means that we\n  have less solutions to the same problem.  that means more chance of\n  finding bugs, which means more reliable, more secure code.\n\n* if simple-crypt does have a bug, the use of a header in the\n  ciphertext data will help support an upgrade path (i can't promise\n  full backwards support, because any solution will depend on the\n  attack, but at least the needed information is present).\n\nwhat else should i know?\n------------------------\n\n* you must also install ``pycrypto``.  **note** that pycrypto has\n  parts written in c so requires a full python install.  on some unix\n  systems that may mean adding a package like ``python-dev`` from your\n  package manager.\n\n* in python 3 the outputs from ``encrypt`` and ``decrypt`` are\n  ``bytes``.  if you started with string input then you can convert\n  the output from ``decrypt`` using ``.decode('utf8')``::\n\n    mystring = decrypt('password', ciphertext).decode('utf8')\n\n\n* more `documentation and examples <https://github.com/andrewcooke/simple-crypt>`_.\n\n* later versions *can* decrypt data from previous versions, but data\n  encrypted by later (major) versions *cannot* be decrypted by earlier\n  code (instead, an error is raised asking the user to update to the\n  latest version).\n\n* (c) 2012-2015 andrew cooke, andrew@acooke.org;\n  2013 `d10n <https://github.com/d10n>`_, david@bitinvert.com.\n  released into the public domain for any use, but with absolutely no warranty.",
  "docs_url": null,
  "keywords": "aes,encrypt,decrypt,encryption,decryption,pbkdf2,hmac,secure,crypto,cryptography",
  "license": "unknown",
  "name": "simple-crypt",
  "package_url": "https://pypi.org/project/simple-crypt/",
  "project_url": "https://pypi.org/project/simple-crypt/",
  "project_urls": {
    "Download": "UNKNOWN",
    "Homepage": "https://github.com/andrewcooke/simple-crypt"
  },
  "release_url": "https://pypi.org/project/simple-crypt/4.1.7/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "simple, secure encryption and decryption for python 2.7 and 3",
  "version": "4.1.7",
  "releases": [],
  "developers": [
    "andrew@acooke.org",
    "andrew_cooke"
  ],
  "kwds": "simplecrypt pycrypto encryption cryptography crypt",
  "license_kwds": "unknown",
  "libtype": "pypi",
  "id": "pypi_simple_crypt",
  "homepage": "https://github.com/andrewcooke/simple-crypt",
  "release_count": 24,
  "dependency_ids": []
}
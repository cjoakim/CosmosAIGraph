{
  "classifiers": [
    "development status :: 4 - beta",
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "topic :: communications :: email",
    "topic :: multimedia :: graphics",
    "topic :: office/business",
    "topic :: security :: cryptography",
    "topic :: software development :: libraries :: python modules",
    "topic :: text processing"
  ],
  "description": ".. image:: https://img.shields.io/pypi/v/endesive.svg\n        :target: https://pypi.python.org/pypi/endesive\n\ndescription\n===========\n\npython library for digital signing and verification of digital signatures in mail,\npdf and xml documents.\n\nthe asn.1 implementation depends on `asn1crypto`_.\ncryptographic routines depends on `cryptography`_ library.\n\nfor certificate verification `certvalidator`_ is used.\n\nthis library implements s/mime handler which can encrypt and decrypt s/mime messages\nusing a public rsa key, in aes-128/192/256 cbc/ofb modes.\nit can also sign and verify s/mime messages.\n\nthis library implements cades-b handler for signing and verifying pdf documents in\nadobe.ppklite/adbe.pkcs7.detached form.\nit can sign documents during generation using a modified version of `pyfpdf`_ which is\nincluded in this library. it can also sign documents generated by external programms.\n\nthis library implements xades bes/t  with enveloped and enveloping format for creating\nsigned xml files.\n\nthis library implements cms handler for signing and verifying plain text files with\ndetached signature files.\n\n\nlicense\n=======\n\nthis software is licensed under the mit license. see the license file in\nthe top distribution directory for the full license text.\n\n\n## requirements\n\n* python 3.*\n* `cryptography`_\n* `asn1crypto`_\n* `certvalidator`_\n* `lxml`_\n* `pykcs11`_\n* `pillow`_\n\n\nexamples\n========\n\ncert-make.py\n    create required certificates (password is 1234)\ncert-make-hsm.py\n    create required certificates for softhsm (password is secret1)\n\npdf-make.py\n    create simple two paged pdf document which is used in pdf-sign-cms.py.\npdf-sign-cms.py\n    create signature in externally created pdf.\npdf-sign-cms-hsm.py\n    create signature in externally created pdf but signed with key stored in softhsm.\npdf-sign-fpdf.py\n    create signature while creating pdf.\npdf-verify.py\n    verify prevously generated files (cms/pdf).\n\nplain-make.py\n    create simple utf-8 text file.\nplain-openssl.sh\n    sign, encrypt and decrypt text file with help of openssl executable.\nplain-sign-attr.py\n    sign text file with 'extended' cms attributes.\nplain-sign-noattr.py\n    sign text file without 'extended' cms attributes.\nplain-verify.py\n    verify all generated signatures for text file.\n\nsmime-make.py\n    create simple utf-8 text file for use in following examples.\nsmime-openssl.sh\n    create signed s/mime file, encrypted s/mime file and decrypt generated s/mime file\n    with help of openssl executable.\nsmime-encrypt.py\n    create encrypted s/mime file.\nsmime-decrypt.py\n    decrypt encrypted s/mime file.\nsmime-sign-attr.py\n    create signed s/mime file with 'extended' cms attributes.\nsmime-sign-noattr.py\n    create signed s/mime file without 'extended' cms attributes.\nsmime-verify.py\n    verify all generated s/mime files.\n\nxml-make.py\n    create simple xml file for use in following examples.\nxml-hsm-certum-enveloped.py\n    xades enveloped mode with real certificate (bes/t).\nxml-hsm-certum-enveloping.py\n    xades enveloping mode with real certificate (bes/t).\nxml-hsm-softhsm2-enveloped.py\n    xades enveloped mode with softhsm certificate (bes).\nxml-hsm-softhsm2-enveloping.py\n    xades enveloping mode with softhsm certificate (bes).\n\ntools\n=====\n\nonline pdf validator `pdfvalidator`_ or `verapdf`_.\noffline apache `pdfbox`_ java based validator.\n\nvalidate electronic signatures: `ec_europa`_.\n\n.. _cryptography: https://github.com/pyca/cryptography\n.. _asn1crypto: https://github.com/wbond/asn1crypto\n.. _certvalidator: https://github.com/wbond/certvalidator\n.. _pyfpdf: https://github.com/reingart/pyfpdf\n.. _lxml: https://pypi.org/project/lxml/\n.. _pykcs11: https://pypi.org/project/pykcs11/\n.. _pillow: https://pypi.org/project/pillow/\n.. _pdfvalidator: https://www.pdf-online.com/osa/validate.aspx\n.. _verapdf: https://demo.verapdf.org/\n.. _pdfbox: https://pdfbox.apache.org/\n.. _ec_europa: https://ec.europa.eu/cefdigital/dss/webapp-demo/validation\n",
  "docs_url": null,
  "keywords": "cryptography pki x509 smime email pdf pkcs11 asn1 xades",
  "license": "mit",
  "name": "endesive",
  "package_url": "https://pypi.org/project/endesive/",
  "project_url": "https://pypi.org/project/endesive/",
  "project_urls": {
    "Homepage": "https://github.com/m32/endesive"
  },
  "release_url": "https://pypi.org/project/endesive/2.17.0/",
  "requires_dist": [
    "certvalidator",
    "cryptography",
    "asn1crypto",
    "oscrypto",
    "lxml",
    "pykcs11",
    "Pillow",
    "pytz",
    "requests",
    "paramiko",
    "attrs"
  ],
  "requires_python": "",
  "summary": "library for digital signing and verification of digital signatures in mail, pdf and xml documents.",
  "version": "2.17.0",
  "releases": [],
  "developers": [
    "grzegorz_makarewicz",
    "mak@trisoft.com.pl"
  ],
  "kwds": "_certvalidator certificate _cryptography certificates _pdfvalidator",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_endesive",
  "homepage": "https://github.com/m32/endesive",
  "release_count": 53,
  "dependency_ids": [
    "pypi_asn1crypto",
    "pypi_attrs",
    "pypi_certvalidator",
    "pypi_cryptography",
    "pypi_lxml",
    "pypi_oscrypto",
    "pypi_paramiko",
    "pypi_pillow",
    "pypi_pykcs11",
    "pypi_pytz",
    "pypi_requests"
  ]
}
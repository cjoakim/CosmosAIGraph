{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.9"
  ],
  "description": "[![build status](https://travis-ci.org/dswah/pygam.svg?branch=master)](https://travis-ci.org/dswah/pygam)\n[![documentation status](https://readthedocs.org/projects/pygam/badge/?version=latest)](https://pygam.readthedocs.io/en/latest/?badge=latest)\n[![pypi version](https://badge.fury.io/py/pygam.svg)](https://badge.fury.io/py/pygam)\n[![codecov](https://codecov.io/gh/dswah/pygam/branch/master/graph/badge.svg)](https://codecov.io/gh/dswah/pygam)\n[![python27](https://img.shields.io/badge/python-2.7-blue.svg)](https://badge.fury.io/py/pygam)\n[![python36](https://img.shields.io/badge/python-3.6-blue.svg)](https://badge.fury.io/py/pygam)\n[![doi](https://zenodo.org/badge/doi/10.5281/zenodo.1208723.svg)](https://doi.org/10.5281/zenodo.1208723)\n\n\n# pygam\ngeneralized additive models in python.\n\n<img src=imgs/pygam_tensor.png>\n\n## documentation\n- [official pygam documentation: read the docs](https://pygam.readthedocs.io/en/latest/?badge=latest)  \n- [building interpretable models with generalized additive models in python](https://medium.com/just-another-data-scientist/building-interpretable-models-with-generalized-additive-models-in-python-c4404eaf5515)  \n<!-----\n[pygam: getting started with generalized additive models in python](https://medium.com/@jpoberhauser/pygam-getting-started-with-generalized-additive-models-in-python-457df5b4705f)\n----->\n\n## installation\n```pip install pygam```\n\n### scikit-sparse\nto speed up optimization on large models with constraints, it helps to have `scikit-sparse` installed because it contains a slightly faster, sparse version of cholesky factorization. the import from `scikit-sparse` references `nose`, so you'll need that too.\n\nthe easiest way is to use conda:  \n```conda install -c conda-forge scikit-sparse nose```\n\n[scikit-sparse docs](http://pythonhosted.org/scikit-sparse/overview.html#download)\n\n## contributing - help requested\ncontributions are most welcome!\n\nyou can help pygam in many ways including:\n\n- working on a [known bug](https://github.com/dswah/pygam/labels/bug).\n- trying it out and reporting bugs or what was difficult.\n- helping improve the documentation.\n- writing new [distributions](https://github.com/dswah/pygam/blob/master/pygam/distributions.py), and [link functions](https://github.com/dswah/pygam/blob/master/pygam/links.py).\n- if you need some ideas, please take a look at the [issues](https://github.com/dswah/pygam/issues).\n\n\nto start:\n- **fork the project** and cut a new branch\n- now **install** the testing **dependencies**\n\n```\nconda install pytest numpy pandas scipy pytest-cov cython\npip install --upgrade pip\npip install -r requirements.txt\n```\n\nit helps to add a **sym-link** of the forked project to your **python path**. to do this, you should **install [flit](http://flit.readthedocs.io/en/latest/index.html)**:\n- ```pip install flit```\n- then from main project folder (ie `.../pygam`) do:\n```flit install -s```\n\nmake some changes and write a test...\n- **test** your contribution (eg from the `.../pygam`):\n```py.test -s```\n- when you are happy with your changes, make a **pull request** into the `master` branch of the main project.\n\n\n## about\ngeneralized additive models (gams) are smooth semi-parametric models of the form:\n\n![alt tag](http://latex.codecogs.com/svg.latex?g\\(\\mathbb{e}\\[y|x\\]\\)=\\beta_0+f_1(x_1)+f_2(x_2)+\\dots+f_p(x_p))\n\nwhere `x.t = [x_1, x_2, ..., x_p]` are independent variables, `y` is the dependent variable, and `g()` is the link function that relates our predictor variables to the expected value of the dependent variable.\n\nthe feature functions `f_i()` are built using **penalized b splines**, which allow us to **automatically model non-linear relationships** without having to manually try out many different transformations on each variable.\n\n<img src=imgs/pygam_basis.png>\n\ngams extend generalized linear models by allowing non-linear functions of features while maintaining additivity. since the model is additive, it is easy to examine the effect of each `x_i` on `y` individually while holding all other predictors constant.\n\nthe result is a very flexible model, where it is easy to incorporate prior knowledge and control overfitting.\n\n## citing pygam\nplease consider citing pygam if it has helped you in your research or work:\n\ndaniel serv\u00e9n, & charlie brummitt. (2018, march 27). pygam: generalized additive models in python. zenodo. [doi: 10.5281/zenodo.1208723](http://doi.org/10.5281/zenodo.1208723)\n\nbibtex:\n```\n@misc{daniel\\_serven\\_2018_1208723,\n  author       = {daniel serv\u00e9n and\n                  charlie brummitt},\n  title        = {pygam: generalized additive models in python},\n  month        = mar,\n  year         = 2018,\n  doi          = {10.5281/zenodo.1208723},\n  url          = {https://doi.org/10.5281/zenodo.1208723}\n}\n```\n\n## references\n1. simon n. wood, 2006  \ngeneralized additive models: an introduction with r\n\n0. hastie, tibshirani, friedman  \nthe elements of statistical learning  \nhttp://statweb.stanford.edu/~tibs/elemstatlearn/printings/eslii_print10.pdf  \n\n0. james, witten, hastie and tibshirani  \nan introduction to statistical learning  \nhttp://www-bcf.usc.edu/~gareth/isl/islr%20sixth%20printing.pdf  \n\n0. paul eilers & brian marx, 1996\nflexible smoothing with b-splines and penalties\nhttp://www.stat.washington.edu/courses/stat527/s13/readings/eilersmarx_statsci_1996.pdf\n\n0. kim larsen, 2015  \ngam: the predictive modeling silver bullet  \nhttp://multithreaded.stitchfix.com/assets/files/gam.pdf  \n\n0. deva ramanan, 2008  \nuci machine learning: notes on irls  \nhttp://www.ics.uci.edu/~dramanan/teaching/ics273a_winter08/homework/irls_notes.pdf  \n\n0. paul eilers & brian marx, 2015  \ninternational biometric society: a crash course on p-splines  \nhttp://www.ibschannel2015.nl/project/userfiles/crash_course_handout.pdf\n\n0. keiding, niels, 1991  \nage-specific incidence and prevalence: a statistical perspective\n\n\n<!---http://www.cs.princeton.edu/courses/archive/fall11/cos323/notes/cos323_f11_lecture09_svd.pdf--->\n\n<!---http://www.stats.uwo.ca/faculty/braun/ss3859/notes/chapter4/ch4.pdf--->\n\n<!---http://www.stat.berkeley.edu/~census/mlesan.pdf--->\n\n<!---http://web.mit.edu/hyperbook/patrikalakis-maekawa-cho/node17.html---> <!--- this helped me get spline gradients--->\n\n<!---https://scikit-sparse.readthedocs.io/en/latest/overview.html#developers--->\n\n<!---https://vincentarelbundock.github.io/rdatasets/datasets.html---> <!--- r datasets!--->\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "pygam",
  "package_url": "https://pypi.org/project/pygam/",
  "project_url": "https://pypi.org/project/pygam/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/pygam/0.9.0/",
  "requires_dist": [
    "numpy (>=1.24.2,<2.0.0)",
    "progressbar2 (>=4.2.0,<5.0.0)",
    "scipy (>=1.10.1,<2.0.0)"
  ],
  "requires_python": ">=3.8.1,<3.12",
  "summary": "",
  "version": "0.9.0",
  "releases": [],
  "developers": [],
  "kwds": "badge pygam pytest py pygam_tensor",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_pygam",
  "homepage": "",
  "release_count": 27,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_progressbar2",
    "pypi_scipy"
  ]
}
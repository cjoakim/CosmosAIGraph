{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development"
  ],
  "description": "# deepdiff v 6.7.1\n\n![downloads](https://img.shields.io/pypi/dm/deepdiff.svg?style=flat)\n![python versions](https://img.shields.io/pypi/pyversions/deepdiff.svg?style=flat)\n![license](https://img.shields.io/pypi/l/deepdiff.svg?version=latest)\n[![build status](https://github.com/seperman/deepdiff/workflows/unit%20tests/badge.svg)](https://github.com/seperman/deepdiff/actions)\n[![codecov](https://codecov.io/gh/seperman/deepdiff/branch/master/graph/badge.svg?token=kkhz3sia3m)](https://codecov.io/gh/seperman/deepdiff)\n\n## modules\n\n- [deepdiff](https://zepworks.com/deepdiff/current/diff.html): deep difference of dictionaries, iterables, strings, and any other object.\n- [deepsearch](https://zepworks.com/deepdiff/current/dsearch.html): search for objects within other objects.\n- [deephash](https://zepworks.com/deepdiff/current/deephash.html): hash any object based on their content.\n- [delta](https://zepworks.com/deepdiff/current/delta.html): store the difference of objects and apply them to other objects.\n- [extract](https://zepworks.com/deepdiff/current/extract.html): extract an item from a nested python object using its path.\n- [commandline](https://zepworks.com/deepdiff/current/commandline.html): use deepdiff from commandline.\n\ntested on python 3.7+ and pypy3.\n\n- **[documentation](https://zepworks.com/deepdiff/6.7.1/)**\n\n## what is new?\n\nplease check the [changelog](changelog.md) file for the detailed information.\n\ndeepdiff 6-7-1\n\n- support for subtracting delta objects when iterable_compare_func is used.\n- better handling of force adding a delta to an object. \n- fix for [`can't compare dicts with both single and double quotes in keys`](https://github.com/seperman/deepdiff/issues/430)\n- updated docs for inconsistent behavior with math_epsilon and ignore_order = true\n\ndeepdiff 6-7-0\n\n- delta can be subtracted from other objects now.\n- verify_symmetry is deprecated. use bidirectional instead.\n- always_include_values flag in delta can be enabled to include values in the delta for every change.\n- fix for delta.__add__ breaks with esoteric dict keys.\n- you can load a delta from the list of flat dictionaries.\n\ndeepdiff 6-6-1\n\n- fix for [deepdiff raises decimal exception when using significant digits](https://github.com/seperman/deepdiff/issues/426)\n- introducing group_by_sort_key\n- adding group_by 2d. for example `group_by=['last_name', 'zip_code']`\n\n\n## installation\n\n### install from pypi:\n\n`pip install deepdiff`\n\nif you want to use deepdiff from commandline:\n\n`pip install \"deepdiff[cli]\"`\n\nif you want to improve the performance of deepdiff with certain functionalities such as improved json serialization:\n\n`pip install \"deepdiff[optimize]\"`\n\ninstall optional packages:\n- [yaml](https://pypi.org/project/pyyaml/)\n- [tomli](https://pypi.org/project/tomli/) (python 3.10 and older) and [tomli-w](https://pypi.org/project/tomli-w/) for writing\n- [clevercsv](https://pypi.org/project/clevercsv/) for more rubust csv parsing\n- [orjson](https://pypi.org/project/orjson/) for speed and memory optimized parsing\n- [pydantic](https://pypi.org/project/pydantic/)\n\n\n# documentation\n\n<https://zepworks.com/deepdiff/current/>\n\n### a message from sep, the creator of deepdiff\n\n> \ud83d\udc4b hi there,\n>\n> thank you for using deepdiff!\n> as an engineer, i understand the frustration of wrestling with **unruly data** in pipelines.\n> that's why i developed a new tool - [qluster](https://qluster.ai/solution) to empower non-engineers to control and resolve data issues at scale autonomously and **stop bugging the engineers**! \ud83d\udee0\ufe0f\n>\n> if you are going through this pain now, i would love to give you [early access](https://www.qluster.ai/try-qluster) to qluster and get your feedback.\n\n\n# changelog\n\nplease take a look at the [changelog](changelog.md) file.\n\n# survey\n\n:mega: **please fill out our [fast 5-question survey](https://forms.gle/e6qxexcgjoknszjb8)** so that we can learn how & why you use deepdiff, and what improvements we should make. thank you! :dancers:\n\n# contribute\n\n1. please make your pr against the dev branch\n2. please make sure that your pr has tests. since deepdiff is used in many sensitive data driven projects, we strive to maintain around 100% test coverage on the code.\n\nplease run `pytest --cov=deepdiff --runslow` to see the coverage report. note that the `--runslow` flag will run some slow tests too. in most cases you only want to run the fast tests which so you wont add the `--runslow` flag.\n\nor to see a more user friendly version, please run: `pytest --cov=deepdiff --cov-report term-missing --runslow`.\n\nthank you!\n\n# citing\n\nhow to cite this library (apa style):\n\n    dehpour, s. (2023). deepdiff (version 6.7.1) [software]. available from https://github.com/seperman/deepdiff.\n\nhow to cite this library (chicago style):\n\n    dehpour, sep. 2023. deepdiff (version 6.7.1).\n\n# authors\n\nplease take a look at the [authors](authors.md) file.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "deepdiff",
  "package_url": "https://pypi.org/project/deepdiff/",
  "project_url": "https://pypi.org/project/deepdiff/",
  "project_urls": {
    "Download": "https://github.com/seperman/deepdiff/tarball/master",
    "Homepage": "https://github.com/seperman/deepdiff"
  },
  "release_url": "https://pypi.org/project/deepdiff/6.7.1/",
  "requires_dist": [
    "ordered-set <4.2.0,>=4.0.2",
    "click ==8.1.3 ; extra == 'cli'",
    "pyyaml ==6.0.1 ; extra == 'cli'",
    "orjson ; extra == 'optimize'"
  ],
  "requires_python": ">=3.7",
  "summary": "deep difference and search of any python object/data. recreate objects by adding adding deltas to each other.",
  "version": "6.7.1",
  "releases": [],
  "developers": [
    "sep@zepworks.com",
    "seperman"
  ],
  "kwds": "deepdiff badge deephash deepsearch qluster",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_deepdiff",
  "homepage": "https://github.com/seperman/deepdiff",
  "release_count": 74,
  "dependency_ids": [
    "pypi_click",
    "pypi_ordered_set",
    "pypi_orjson",
    "pypi_pyyaml"
  ]
}
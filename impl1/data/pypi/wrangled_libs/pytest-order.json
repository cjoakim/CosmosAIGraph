{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing",
    "topic :: utilities"
  ],
  "description": "_pytest-order_ - a pytest plugin to order test execution\n========================================================\n\n[![pypi version](https://badge.fury.io/py/pytest-order.svg)](https://pypi.org/project/pytest-order) [![testsuite](https://github.com/pytest-dev/pytest-order/workflows/testsuite/badge.svg)](https://github.com/pytest-dev/pytest-order/actions?query=workflow%3atestsuite) [![docbuild](https://readthedocs.org/projects/pytest-order/badge/?version=latest)](https://pytest-order.readthedocs.io/en/latest/?badge=latest) [![codecov](https://codecov.io/gh/pytest-dev/pytest-order/branch/main/graph/badge.svg?token=m9phwzshuu)](https://codecov.io/gh/pytest-dev/pytest-order) [![python version](https://img.shields.io/pypi/pyversions/pytest-order.svg)](https://pypi.org/project/pytest-order)\n\n`pytest-order` is a pytest plugin that allows you to customize the order in which\nyour tests are run. it uses the marker `order` that defines when a specific\ntest shall run, either by using an ordinal number, or by specifying the\nrelationship to other tests.\n\n`pytest-order` is a fork of\n[pytest-ordering](https://github.com/ftobia/pytest-ordering) that provides\nadditional features like ordering relative to other tests.\n\n`pytest-order` works with python 3.7 - 3.12, with pytest\nversions >= 5.0.0 for all versions up to python 3.9, and for pytest >=\n6.2.4 for python >= 3.10. `pytest-order` runs on linux, macos and windows.\n\ndocumentation\n-------------\napart from this overview, the following information is available:\n- usage documentation for the [latest release](https://pytest-order.readthedocs.io/en/stable/)\n- usage documentation for the [current main branch](https://pytest-order.readthedocs.io/en/latest/)\n- most examples shown in the documentation can also be found in the\n  [repository](https://github.com/pytest-dev/pytest-order/tree/main/example)\n- the [release notes](https://github.com/pytest-dev/pytest-order/blob/main/changelog.md)\n  with a list of changes in the latest versions\n- a [list of open issues](https://github.com/pytest-dev/pytest-order/blob/main/old_issues.md)\n  in the original project and their handling in `pytest-order`\n\nfeatures\n--------\n`pytest-order` provides the following features:\n- ordering of tests [by index](https://pytest-order.readthedocs.io/en/stable/usage.html#ordering-by-numbers)\n- ordering of tests both from the start and from the end (via negative\n  index)\n- ordering of tests [relative to each other](https://pytest-order.readthedocs.io/en/stable/usage.html#order-relative-to-other-tests)\n  (via the `before` and `after` marker attributes)\n- session-, module- and class-scope ordering via the\n  [order-scope](https://pytest-order.readthedocs.io/en/stable/configuration.html#order-scope) option\n- directory scope ordering via the\n  [order-scope-level](https://pytest-order.readthedocs.io/en/stable/configuration.html#order-scope-level) option\n- hierarchical module and class-level ordering via the\n  [order-group-scope](https://pytest-order.readthedocs.io/en/stable/configuration.html#order-group-scope) option\n- ordering tests with `pytest-dependency` markers if using the\n  [order-dependencies](https://pytest-order.readthedocs.io/en/stable/configuration.html#order-dependencies) option,\n  more information about `pytest-dependency` compatibility\n  [here](https://pytest-order.readthedocs.io/en/stable/other_plugins.html#relationship-with-pytest-dependency)\n- sparse ordering of tests via the\n  [sparse-ordering](https://pytest-order.readthedocs.io/en/stable/configuration.html#sparse-ordering) option\n- usage of custom markers for ordering using the\n  [sparse-ordering](https://pytest-order.readthedocs.io/en/stable/configuration.html#order-marker-prefix) option\n\noverview\n--------\n_(adapted from the original project)_\n\nhave you ever wanted to easily run one of your tests before any others run?\nor run some tests last? or run this one test before that other test? or\nmake sure that this group of tests runs after this other group of tests?\n\nnow you can.\n\ninstall with:\n\n    pip install pytest-order\n\nthis defines the ``order`` marker that you can use in your code with\ndifferent attributes.\n\nfor example, this code:\n\n    import pytest\n\n    @pytest.mark.order(2)\n    def test_foo():\n        assert true\n\n    @pytest.mark.order(1)\n    def test_bar():\n        assert true\n\nyields the output:\n\n    $ pytest test_foo.py -vv\n    ============================= test session starts ==============================\n    platform darwin -- python 3.7.1, pytest-5.4.3, py-1.8.1, pluggy-0.13.1 -- env/bin/python\n    plugins: order\n    collected 2 items\n\n    test_foo.py:7: test_bar passed\n    test_foo.py:3: test_foo passed\n\n    =========================== 2 passed in 0.01 seconds ===========================\n\ncontributing\n------------\ncontributions are very welcome. tests can be run with\n[tox](https://tox.readthedocs.io/en/latest/), please ensure\nthe coverage at least stays the same before you submit a pull request.\n\nlicense\n-------\ndistributed under the terms of the [mit](http://opensource.org/licenses/mit)\nlicense, `pytest-order` is free and open source software.\n\nhistory\n-------\nthis is a fork of [pytest-ordering](https://github.com/ftobia/pytest-ordering).\nthat project is not maintained anymore, and there are several helpful prs\nthat are now integrated into `pytest-order`. the idea and most of the\ninitial code has been created by frank tobia, the author of that plugin, and\n[contributors](https://github.com/pytest-dev/pytest-order/blob/main/authors).\n\nwhile derived from `pytest_ordering`, `pytest-order` is **not** compatible\nwith `pytest-ordering` due to the changed marker name (`order` instead of\n`run`). additional markers defined `pytest_ordering` are all integrated\ninto the `order` marker (for a rationale see also\n[this issue](https://github.com/ftobia/pytest-ordering/issues/38)).\n\nordering relative to other tests and all the configuration options are not\navailable in the released version of `pytest-ordering`.\nhowever, most of these features are derived from or inspired by\n[issues](https://github.com/pytest-dev/pytest-order/blob/main/old_issues.md)\nand pull requests already existing in `pytest-ordering`.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pytest-order",
  "package_url": "https://pypi.org/project/pytest-order/",
  "project_url": "https://pypi.org/project/pytest-order/",
  "project_urls": {
    "Homepage": "https://github.com/pytest-dev/pytest-order"
  },
  "release_url": "https://pypi.org/project/pytest-order/1.2.0/",
  "requires_dist": [
    "pytest >=5.0 ; python_version < \"3.10\"",
    "pytest >=6.2.4 ; python_version >= \"3.10\""
  ],
  "requires_python": ">=3.6",
  "summary": "pytest plugin to run your tests in a specific order",
  "version": "1.2.0",
  "releases": [],
  "developers": [
    "hansemrbean@googlemail.com",
    "mrbean"
  ],
  "kwds": "pytest_ordering pytest _pytest testsuite order_",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytest_order",
  "homepage": "https://github.com/pytest-dev/pytest-order",
  "release_count": 15,
  "dependency_ids": [
    "pypi_pytest"
  ]
}
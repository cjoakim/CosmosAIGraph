{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "## extras\n\n[![pypi](https://img.shields.io/pypi/v/package-extras)](https://pypi.org/project/package-extras/)\n![pypi - python version](https://img.shields.io/pypi/pyversions/package-extras)\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![editorconfig](https://img.shields.io/badge/-editorconfig-grey?logo=editorconfig)](https://editorconfig.org/)\n\npackage that allows to make assertions about [extras](https://packaging.python.org/en/latest/tutorials/installing-packages/#installing-extras) being installed or not.\n\nfor the detailed explanation read [this blog post](https://bmwlog.pp.ua/deprecation-of-package-extras/).\n\n### usage\n\nfor the `pyproject.toml` users\n\n```toml\n[tool.poetry.dependencies]\npackage-extras = { version = \"^0.2.0\", optional = true }\n# your actual extras below\npsycopg2 = { version = \"^2.9\", optional = true }\nmysqlclient = { version = \"^1.3\", optional = true }\n\n[tool.poetry.extras]\ndatabases = [\"package-extras\", \"mysqlclient\", \"psycopg2\"]\n```\n\n`setup.py` equivalent\n\n```python\nextras_require = \\\n{'databases': ['package-extras>=0.2.0',\n               'psycopg2>=2.9,<3.0',\n               'mysqlclient>=1.3,<2.0']}\n\nsetup_kwargs = {\n    # ... rest of the arguments\n    'extras_require': extras_require,\n}\nsetup(**setup_kwargs)\n```\n\nadd this or similar block to your code (likely top-level `__init__.py` file)\n\n```python\nimport warnings\n\ntry:\n    import package_extras\nexcept modulenotfounderror:\n    pass\nelse:\n    warnings.warn(\n        \"'test_package[databases]' extra is deprecated \"\n        \"and will be removed in a future release.\",\n        category=deprecationwarning,\n        stacklevel=2,\n    )\n```\n\nor in case you want to assert the opposite (make sure that extras have been installed)\n\n```python\nimport warnings\n\ntry:\n    import package_extras\nexcept modulenotfounderror:\n    warnings.warn(\n        \"you are going to use functionality that depends on 'databases' extras. \"\n        \"please install 'test_package[databases]' to proceed.\",\n        category=importwarning,\n        stacklevel=2,\n    )\n```\n\n> note: `importwarning` is ignored by default, so you either need to run `python -w all` or use `runtimewarning` instead.\n\nafter installation via `pip install test_package[databases]` your package users will get this warning.\n\n```console\n>>> import test_package\ndeprecationwarning: 'test_package[databases]' extra is deprecated and will be removed in a future release.\n```\n\n### development\n\n```bash\n$ poetry install\n$ poetry build\n\n$ poetry config pypi-token.pypi my-token\n$ poetry publish\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "package-extras",
  "package_url": "https://pypi.org/project/package-extras/",
  "project_url": "https://pypi.org/project/package-extras/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/package-extras/0.3.0/",
  "requires_dist": [],
  "requires_python": ">=3.7,<4.0",
  "summary": "dummy package to mark extras installation",
  "version": "0.3.0",
  "releases": [],
  "developers": [
    "bmwant@gmail.com",
    "misha_behersky"
  ],
  "kwds": "package_extras extras_require pyversions pypi extras",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_package_extras",
  "homepage": "",
  "release_count": 3,
  "dependency_ids": []
}
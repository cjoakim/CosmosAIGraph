{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: posix",
    "programming language :: python :: 3"
  ],
  "description": "![tests](https://github.com/magicstack/httptools/workflows/tests/badge.svg)\n\nhttptools is a python binding for the nodejs http parser.\n\nthe package is available on pypi: `pip install httptools`.\n\n\n# apis\n\nhttptools contains two classes `httptools.httprequestparser`,\n`httptools.httpresponseparser` (fulfilled through\n[llhttp](https://github.com/nodejs/llhttp)) and a function for\nparsing urls `httptools.parse_url` (through\n[http-parse](https://github.com/nodejs/http-parser) for now).\nsee unittests for examples.\n\n\n```python\n\nclass httprequestparser:\n\n    def __init__(self, protocol):\n        \"\"\"httprequestparser\n\n        protocol -- a python object with the following methods\n        (all optional):\n\n          - on_message_begin()\n          - on_url(url: bytes)\n          - on_header(name: bytes, value: bytes)\n          - on_headers_complete()\n          - on_body(body: bytes)\n          - on_message_complete()\n          - on_chunk_header()\n          - on_chunk_complete()\n          - on_status(status: bytes)\n        \"\"\"\n\n    def get_http_version(self) -> str:\n        \"\"\"return an http protocol version.\"\"\"\n\n    def should_keep_alive(self) -> bool:\n        \"\"\"return ``true`` if keep-alive mode is preferred.\"\"\"\n\n    def should_upgrade(self) -> bool:\n        \"\"\"return ``true`` if the parsed request is a valid upgrade request.\n\tthe method exposes a flag set just before on_headers_complete.\n\tcalling this method earlier will only yield `false`.\n\t\"\"\"\n\n    def feed_data(self, data: bytes):\n        \"\"\"feed data to the parser.\n\n        will eventually trigger callbacks on the ``protocol``\n        object.\n\n        on http upgrade, this method will raise an\n        ``httpparserupgrade`` exception, with its sole argument\n        set to the offset of the non-http data in ``data``.\n        \"\"\"\n\n    def get_method(self) -> bytes:\n        \"\"\"return http request method (get, head, etc)\"\"\"\n\n\nclass httpresponseparser:\n\n    \"\"\"has all methods except ``get_method()`` that\n    httprequestparser has.\"\"\"\n\n    def get_status_code(self) -> int:\n        \"\"\"return the status code of the http response\"\"\"\n\n\ndef parse_url(url: bytes):\n    \"\"\"parse url strings into a structured python object.\n\n    returns an instance of ``httptools.url`` class with the\n    following attributes:\n\n      - schema: bytes\n      - host: bytes\n      - port: int\n      - path: bytes\n      - query: bytes\n      - fragment: bytes\n      - userinfo: bytes\n    \"\"\"\n```\n\n\n# development\n\n1. clone this repository with\n   `git clone --recursive git@github.com:magicstack/httptools.git`\n\n2. create a virtual environment with python 3:\n   `python3 -m venv envname`\n\n3. activate the environment with `source envname/bin/activate`\n\n4. install development requirements with `pip install -e .[test]`\n\n5. run `make` and `make test`.\n\n\n# license\n\nmit.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "httptools",
  "package_url": "https://pypi.org/project/httptools/",
  "project_url": "https://pypi.org/project/httptools/",
  "project_urls": {
    "Homepage": "https://github.com/MagicStack/httptools"
  },
  "release_url": "https://pypi.org/project/httptools/0.6.1/",
  "requires_dist": [
    "Cython <0.30.0,>=0.29.24 ; extra == 'test'"
  ],
  "requires_python": ">=3.8.0",
  "summary": "a collection of framework independent http protocol utils.",
  "version": "0.6.1",
  "releases": [],
  "developers": [
    "yury@magic.io",
    "yury_selivanov"
  ],
  "kwds": "httptools httprequestparser httpparserupgrade httpresponseparser parse_url",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_httptools",
  "homepage": "https://github.com/magicstack/httptools",
  "release_count": 22,
  "dependency_ids": [
    "pypi_cython"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: other environment",
    "framework :: ipython",
    "intended audience :: developers",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: version control"
  ],
  "description": ".. image:: https://github.com/kynan/nbstripout/actions/workflows/tests.yml/badge.svg\n    :target: https://github.com/kynan/nbstripout/actions/workflows/tests.yml\n.. image:: https://img.shields.io/pypi/dm/nbstripout\n    :target: https://pypi.org/project/nbstripout\n.. image:: https://img.shields.io/pypi/v/nbstripout\n    :target: https://pypi.org/project/nbstripout\n.. image:: https://img.shields.io/conda/vn/conda-forge/nbstripout\n    :target: https://anaconda.org/conda-forge/nbstripout\n.. image:: https://img.shields.io/pypi/pyversions/nbstripout\n    :target: https://pypi.org/project/nbstripout\n.. image:: https://img.shields.io/pypi/format/nbstripout\n    :target: https://pypi.org/project/nbstripout\n.. image:: https://img.shields.io/pypi/l/nbstripout\n    :target: https://raw.githubusercontent.com/kynan/nbstripout/master/license.txt\n.. image:: https://img.shields.io/github/stars/kynan/nbstripout?style=social\n    :target: https://github.com/kynan/nbstripout/stargazers\n.. image:: https://img.shields.io/github/forks/kynan/nbstripout?style=social\n    :target: https://github.com/kynan/nbstripout/network/members\n\nnbstripout: strip output from jupyter and ipython notebooks\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nopens a notebook, strips its output, and writes the outputless version to the\noriginal file.\n\nuseful mainly as a git filter or pre-commit hook for users who don't want to\ntrack output in vcs.\n\nthis does mostly the same thing as the `clear all output` command in the\nnotebook ui.\n\nbased on https://gist.github.com/minrk/6176788.\n\npython 3 only\n=============\n\nas of version 0.6.1, nbstripout supports python 3 *only*. if you need to use\npython 2.7, install nbstripout 0.3.10 ::\n\n    pip install nbstripout==0.3.10\n\nscreencast\n==========\n\nthis screencast demonstrates the use and working principles behind the\nnbstripout utility and how to use it as a git filter:\n\n.. image:: https://i.imgur.com/7oqhuj5.png\n    :target: https://www.youtube.com/watch?v=bemp4xacrvc\n\ninstallation\n============\n\nyou can download and install the latest version of ``nbstripout`` from pypi_,\nthe python package index, as follows: ::\n\n    pip install --upgrade nbstripout\n\nwhen using the anaconda_ python distribution, install ``nbstripout`` via the\nconda_ package manager from conda-forge_: ::\n\n    conda install -c conda-forge nbstripout\n\nusage\n=====\n\nstrip output from ipython / jupyter / zeppelin notebook (modifies the file in-place): ::\n\n    nbstripout file.ipynb [file2.ipynb ...]\n    nbstripout file.zpln\n\nforce processing of non ``.ipynb`` files: ::\n\n    nbstripout -f file.ipynb.bak\n\nfor using zeppelin mode while processing files with other extensions use: ::\n\n    nbstripout -m zeppelin -f <file.ext>\n\nwrite to stdout e.g. to use as part of a shell pipeline: ::\n\n    cat file.ipynb | nbstripout > out.ipynb\n    cat file.zpln | nbstripout -m zeppelin > out.zpln\n\nor ::\n\n    nbstripout -t file.ipynb | other-command\n\nset up the git filter and attributes as described in the manual installation\ninstructions below: ::\n\n    nbstripout --install\n\nset up the git filter using ``.gitattributes`` ::\n\n    nbstripout --install --attributes .gitattributes\n\nset up the git filter in your global ``~/.gitconfig`` ::\n\n    nbstripout --install --global\n\nset up the git filter in your system-wide ``$(prefix)/etc/gitconfig`` (most installations will require you to ``sudo``) ::\n\n    [sudo] nbstripout --install --system\n\nremove the git filter and attributes: ::\n\n    nbstripout --uninstall\n\nremove the git filter from your global ``~/.gitconfig`` and attributes ::\n\n    nbstripout --uninstall --global\n\nremove the git filter from your system-wide ``$(prefix)/etc/gitconfig`` and attributes ::\n\n    [sudo] nbstripout --uninstall --system\n\nremove the git filter and attributes from ``.gitattributes``: ::\n\n    nbstripout --uninstall --attributes .gitattributes\n\ncheck if ``nbstripout`` is installed in the current repository\n(exits with code 0 if installed, 1 otherwise): ::\n\n    nbstripout --is-installed\n\nprint status of ``nbstripout`` installation in the current repository and\nconfiguration summary of filter and attributes if installed\n(exits with code 0 if installed, 1 otherwise): ::\n\n    nbstripout --status\n\ndo a dry run and only list which files would have been stripped: ::\n\n    nbstripout --dry-run file.ipynb [file2.ipynb ...]\n\nprint the version: ::\n\n    nbstripout --version\n\nshow this help page: ::\n\n    nbstripout --help\n\nconfiguration files\n+++++++++++++++++++\n\nthe following table shows in which files the ``nbstripout`` filter and\nattribute configuration is written to for given extra flags to ``--install``\nand ``--uninstall``:\n\n======================================== =========================== ===============================\nflags                                    filters                     attributes\n======================================== =========================== ===============================\nnone                                     ``.git/config``             ``.git/info/attributes``\n``--global``                             ``~/.gitconfig``            ``~/.config/git/attributes``\n``--system``                             ``$(prefix)/etc/gitconfig`` ``$(prefix)/etc/gitattributes``\n``--attributes=.gitattributes``          ``.git/config``             ``.gitattributes``\n``--global --attributes=.gitattributes`` ``~/.gitconfig``            ``.gitattributes``\n======================================== =========================== ===============================\n\ninstall globally\n++++++++++++++++\n\nusually, ``nbstripout`` is installed per repository so you can choose where to\nuse it or not. you can choose to set the attributes in ``.gitattributes`` and\ncommit this file to your repository, however there is no way to have git set up\nthe filters automatically when someone clones a repository. this is by design,\nto prevent you from executing arbitrary and potentially malicious code when\ncloning a repository.\n\nto install ``nbstripout`` for all your repositories such that you no longer\nneed to run the installation once per repository, install as follows: ::\n\n    mkdir -p ~/.config/git  # this folder may not exist\n    nbstripout --install --global --attributes=~/.config/git/attributes\n\nthis will set up the filters and diff driver in your ``~/.gitconfig`` and\ninstruct git to apply them to any ``.ipynb`` file in any repository.\n\nnote that you need to uninstall with the same flags: ::\n\n    nbstripout --uninstall --global --attributes=~/.config/git/attributes\n\ninstall system-wide\n+++++++++++++++++++\n\nto install ``nbstripout`` system-wide so that it applies to all repositories\nfor all users, install as follows (most installations will require you to ``sudo``): ::\n\n    [sudo] nbstripout --install --system\n\nthis will set up the filters and diff driver in ``$(prefix)/etc/gitconfig`` and\ninstruct git to apply them to any ``.ipynb`` file in any repository for any user.\n\nnote that you need to uninstall with the same flags: ::\n\n    [sudo] nbstripout --uninstall --system\n\napply retroactively\n+++++++++++++++++++\n\n``nbstripout`` can be used to rewrite an existing git repository using\n``git filter-branch`` to strip output from existing notebooks. this invocation\nuses ``--index-filter`` and operates on all ipynb-files in the repo: ::\n\n    git filter-branch -f --index-filter '\n        git checkout -- :*.ipynb\n        find . -name \"*.ipynb\" -exec nbstripout \"{}\" +\n        git add . --ignore-removal\n    '\n\nif the repository is large and the notebooks are in a subdirectory it will run\nfaster with ``git checkout -- :<subdir>/*.ipynb``. you will get a warning for\ncommits that do not contain any notebooks, which can be suppressed by piping\nstderr to ``/dev/null``.\n\nthis is a potentially slower but simpler invocation using ``--tree-filter``: ::\n\n    git filter-branch -f --tree-filter 'find . -name \"*.ipynb\" -exec nbstripout \"{}\" +'\n\nremoving empty cells\n++++++++++++++++++++\n\ndrop empty cells i.e. cells where ``source`` is either empty or only contains\nwhitespace ::\n\n    nbstripout --drop-empty-cells\n\nremoving `init` cells\n+++++++++++++++++++++\n\nby default ``nbstripout`` will keep cells with `init_cell: true` metadata. to disable\nthis behavior use ::\n\n    nbstripout --strip-init-cells\n\nremoving entire cells\n+++++++++++++++++++++\n\nin certain conditions it might be handy to remove not only the output, but the entire cell, e.g. when developing exercises.\n\nto drop all cells tagged with \"solution\" run:\n\n    nbstripout --drop-tagged-cells=\"solution\"\n\nthe option accepts a list of tags separated by whitespace.\n\nkeeping some output\n+++++++++++++++++++\n\ndo not strip the execution count/prompt number ::\n\n    nbstripout --keep-count\n\ndo not strip outputs that are smaller that a given max size (useful for removing large outputs like images) ::\n\n    nbstripout --max-size 1k\n\ndo not strip the output ::\n\n    nbstripout --keep-output\n\nto mark special cells so that the output is not stripped, you can either:\n\n1.  set the ``keep_output`` tag on the cell. to do this, enable the tags\n    toolbar (view > cell toolbar > tags) and then add the ``keep_output`` tag\n    for each cell you would like to keep the output for.\n\n2.  set the ``\"keep_output\": true`` metadata on the cell.  to do this, select\n    the \"edit metadata\" cell toolbar, and then use the \"edit metadata\" button\n    on the desired cell to enter something like::\n\n        {\n          \"keep_output\": true,\n        }\n\nyou can also keep output for an entire notebook. this is useful if you want to\nstrip output by default in an automated environment (e.g. ci pipeline), but want\nto be able to keep outputs for some notebooks. to do so, add the option above to\nthe *notebook* metadata instead. (you can also explicitly remove outputs from\na particular cell in these notebooks by adding a cell-level metadata entry.)\n\nanother use-case is to preserve initialization cells that might load\ncustomized css etc. critical for the display of the notebook.  to\nsupport this, we also keep output for cells with::\n\n    {\n      \"init_cell\": true,\n    }\n\nthis is the same metadata used by the `init_cell nbextension`__.\n\n__ https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tree/master/src/jupyter_contrib_nbextensions/nbextensions/init_cell\n\nstripping metadata\n++++++++++++++++++\n\nthe following metadata is stripped by default:\n\n* notebook metadata: ``signature``, ``widgets``\n* cell metadata: ``executetime``, ``collapsed``, ``execution``, ``scrolled``\n\nadditional metadata to be stripped can be configured via either\n\n*   ``git config (--global/--system) filter.nbstripout.extrakeys``, e.g. ::\n\n        git config --global filter.nbstripout.extrakeys '\n          metadata.celltoolbar\n          metadata.kernelspec\n          metadata.language_info.codemirror_mode.version\n          metadata.language_info.pygments_lexer\n          metadata.language_info.version\n          metadata.toc\n          metadata.notify_time\n          metadata.varinspector\n          cell.metadata.heading_collapsed\n          cell.metadata.hidden\n          cell.metadata.code_folding\n          cell.metadata.tags\n          cell.metadata.init_cell'\n\n*   the ``--extra-keys`` flag, which takes a string as an argument, e.g. ::\n\n        --extra-keys \"metadata.celltoolbar cell.metadata.heading_collapsed\"\n\nnote: previous versions of jupyter used ``metadata.kernel_spec`` for kernel\nmetadata. prefer stripping ``kernelspec`` entirely: only stripping some\nattributes inside ``kernelspec`` may lead to errors  when opening the notebook\nin jupyter (see `#141 <https://github.com/kynan/nbstripout/issues/141>`_).\n\nexcluding files and folders\n+++++++++++++++++++++++++++\n\nto exclude specific files or folders from being processed by the ``nbstripout``\nfilters, add the path and exception to your filter specifications\ndefined in ``.git/info/attributes`` or ``.gitattributes``: ::\n\n    docs/** filter= diff=\n\nthis will disable ``nbstripout`` for any file in the ``docs`` directory.: ::\n\n    notebooks/analysis.ipynb filter= diff=\n\nthis will disable ``nbstripout`` for the file ``analysis.ipynb`` located in\nthe ``notebooks`` directory.\n\nto check which attributes a given file has with the current config, run ::\n\n    git check-attr -a -- path/to/file\n\nfor a file to which the filter applies you will see the following: ::\n\n    $ git check-attr -a -- foo.ipynb\n    foo.ipynb: diff: ipynb\n    foo.ipynb: filter: nbstripout\n\nfor a file in your excluded folder you will see the following: ::\n\n    $ git check-attr -a -- docs/foo.ipynb\n    foo.ipynb: diff:\n    foo.ipynb: filter:\n\nmanual filter installation\n==========================\n\nset up a git filter and diff driver using nbstripout as follows: ::\n\n    git config filter.nbstripout.clean '/path/to/nbstripout'\n    git config filter.nbstripout.smudge cat\n    git config filter.nbstripout.required true\n    git config diff.ipynb.textconv '/path/to/nbstripout -t'\n\nthis will add a section to the ``.git/config`` file of the current repository.\n\nif you want the filter to be installed globally for your user, add the\n``--global`` flag to the ``git config`` invocations above to have the\nconfiguration written to your ``~/.gitconfig`` and apply to all repositories.\n\nif you want the filter to be installed system-wide, add the ``--system`` flag\nto the ``git config`` invocations above to have the configuration written to\n``$(prefix)/etc/gitconfig`` and apply to all repositories for all users.\n\ncreate a file ``.gitattributes`` (if you want it versioned with the repository)\nor ``.git/info/attributes`` (to apply it only to the current repository) with\nthe following content: ::\n\n    *.ipynb filter=nbstripout\n    *.ipynb diff=ipynb\n\nthis instructs git to use the filter named _nbstripout_ and the diff driver\nnamed _ipynb_ set up in the git config above for every ``.ipynb`` file in the\nrepository.\n\nif you want the attributes be set for ``.ipynb`` files in any of your git\nrepositories, add those two lines to ``~/.config/git/attributes``. note that\nthis file and the ``~/.config/git`` directory may not exist.\n\nif you want the attributes be set for ``.ipynb`` files in any git\nrepository on your system, add those two lines to ``$(prefix)/etc/gitattributes``.\nnote that this file may not exist.\n\nusing ``nbstripout`` as a pre-commit hook\n=========================================\n\n`pre-commit`_ is a framework for managing git `pre-commit hooks`_.\n\nonce you have `pre-commit`_ installed, add the follwong to the\n``.pre-commit-config.yaml`` in your repository: ::\n\n    repos:\n    - repo: https://github.com/kynan/nbstripout\n      rev: 0.6.1\n      hooks:\n        - id: nbstripout\n\nthen run ``pre-commit install`` to activate the hook.\n\n.. warning::\n  in this mode, ``nbstripout`` is used as a git hook to strip any ``.ipynb``\n  files before committing. this also modifies your working copy!\n\n  in its regular mode, ``nbstripout`` acts as a filter and only modifies what\n  git gets to see for committing or diffing. the working copy stays intact.\n\n.. _pre-commit: https://pre-commit.com\n.. _pre-commit hooks: https://git-scm.com/docs/githooks\n\ntroubleshooting\n===============\n\nknown issues\n++++++++++++\n\ncertain git workflows are not well supported by `nbstripout`:\n\n* local changes to notebook files that are made invisible to git due to the\n  `nbstripout` filter do still cause conflicts when attempting to sync upstream\n  changes (`git pull`, `git merge` etc.). this is because git has no way of\n  resolving a conflict caused by a non-stripped local file being merged with a\n  stripped upstream file. adressing this issue is out of scope for `nbstripout`.\n  read more and find workarounds in `#108`_.\n\n.. _#108: https://github.com/kynan/nbstripout/issues/108\n\nshow files processed by nbstripout filter\n+++++++++++++++++++++++++++++++++++++++++\n\ngit has `no builtin support <https://stackoverflow.com/a/52065333/396967>`_\nfor listing files a clean or smudge filter operates on. as a workaround,\nchange the setup of your filter in ``.git/config``, ``~/.gitconfig`` or\n``$(prefix)/etc/gitconfig`` as follows to see the filenames either filter operates on: ::\n\n    [filter \"nbstripout\"]\n        clean  = \"f() { echo >&2 \\\"clean: nbstripout $1\\\"; nbstripout; }; f %f\"\n        smudge = \"f() { echo >&2 \\\"smudge: cat $1\\\"; cat; }; f %f\"\n        required = true\n\nmercurial usage\n===============\n\nmercurial does not have the equivalent of smudge filters.  one can use\nan encode/decode hook but this has some issues.  an alternative\nsolution is to provide a set of commands that first run ``nbstripout``,\nthen perform these operations. this is the approach of the `mmf-setup`_\npackage.\n\n.. _mmf-setup: http://bitbucket.org/mforbes/mmf_setup\n.. _anaconda: https://www.continuum.io/anaconda-overview\n.. _conda: http://conda.pydata.org\n.. _conda-forge: http://conda-forge.github.io\n.. _pypi: https://pypi.io\n",
  "docs_url": null,
  "keywords": "",
  "license": "license :: osi approved :: mit license",
  "name": "nbstripout",
  "package_url": "https://pypi.org/project/nbstripout/",
  "project_url": "https://pypi.org/project/nbstripout/",
  "project_urls": {
    "Homepage": "https://github.com/kynan/nbstripout"
  },
  "release_url": "https://pypi.org/project/nbstripout/0.6.1/",
  "requires_dist": [
    "nbformat"
  ],
  "requires_python": ">=3.6",
  "summary": "strips outputs from jupyter and ipython notebooks",
  "version": "0.6.1",
  "releases": [],
  "developers": [
    "florian.rathgeber@gmail.com",
    "florian_rathgeber"
  ],
  "kwds": "nbstripout _nbstripout_ shields yml yaml",
  "license_kwds": "license :: osi approved :: mit license",
  "libtype": "pypi",
  "id": "pypi_nbstripout",
  "homepage": "https://github.com/kynan/nbstripout",
  "release_count": 25,
  "dependency_ids": [
    "pypi_nbformat"
  ]
}
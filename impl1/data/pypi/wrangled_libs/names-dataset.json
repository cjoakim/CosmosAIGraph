{
  "classifiers": [],
  "description": "# first and last names database\n\n[![downloads](https://pepy.tech/badge/names-dataset)](https://pepy.tech/project/names-dataset)\n[![downloads](https://pepy.tech/badge/names-dataset/month)](https://pepy.tech/project/names-dataset/month)\n\nthis python library provides information about names: \n- popularity (rank)\n- country (105 countries are supported)\n- gender\n\n**composition:** 730k first names, 983k last names - extracted from\nthe [facebook massive dump (533m users)](https://www.theguardian.com/technology/2021/apr/03/500-million-facebook-users-website-hackers).\n\n## installation\n\navailable on *[pypi](https://pypi.org/project/names-dataset/)*:\n\n```bash\npip install names-dataset\n```\n\n## usage\n\nonce it's installed, run those commands to familiarize yourself with the library:\n\n```python\nfrom names_dataset import namedataset\n\n# the v3 lib takes time to init (the database is massive). tip: put it into the init of your app.\nnd = namedataset()\n\nprint(nd.search('walter'))\n# {'first_name': {'country': {'argentina': 0.062, 'austria': 0.037, 'bolivia, plurinational state of': 0.042, 'colombia': 0.096, 'germany': 0.044, 'italy': 0.295, 'peru': 0.185, 'united states': 0.159, 'uruguay': 0.036, 'south africa': 0.043}, 'gender': {'female': 0.007, 'male': 0.993}, 'rank': {'argentina': 37, 'austria': 34, 'bolivia, plurinational state of': 67, 'colombia': 250, 'germany': 214, 'italy': 193, 'peru': 27, 'united states': 317, 'uruguay': 44, 'south africa': 388}}, 'last_name': {'country': {'austria': 0.036, 'brazil': 0.039, 'switzerland': 0.032, 'germany': 0.299, 'france': 0.121, 'united kingdom': 0.048, 'italy': 0.09, 'nigeria': 0.078, 'united states': 0.172, 'south africa': 0.085}, 'gender': {}, 'rank': {'austria': 106, 'brazil': 805, 'switzerland': 140, 'germany': 39, 'france': 625, 'united kingdom': 1823, 'italy': 3564, 'nigeria': 926, 'united states': 1210, 'south africa': 1169}}}\n\nprint(nd.search('white'))\n# {'first_name': {'country': {'united arab emirates': 0.044, 'egypt': 0.294, 'france': 0.061, 'hong kong': 0.05, 'iraq': 0.094, 'italy': 0.117, 'malaysia': 0.133, 'saudi arabia': 0.089, 'taiwan, province of china': 0.044, 'united states': 0.072}, 'gender': {'female': 0.519, 'male': 0.481}, 'rank': {'taiwan, province of china': 6940, 'united arab emirates': none, 'egypt': none, 'france': none, 'hong kong': none, 'iraq': none, 'italy': none, 'malaysia': none, 'saudi arabia': none, 'united states': none}}, 'last_name': {'country': {'canada': 0.035, 'france': 0.016, 'united kingdom': 0.296, 'ireland': 0.028, 'iraq': 0.016, 'italy': 0.02, 'jamaica': 0.017, 'nigeria': 0.031, 'united states': 0.5, 'south africa': 0.04}, 'gender': {}, 'rank': {'canada': 46, 'france': 1041, 'united kingdom': 18, 'ireland': 66, 'iraq': 1307, 'italy': 2778, 'jamaica': 35, 'nigeria': 425, 'united states': 47, 'south africa': 416}}}\n\nprint(nd.search('\u0645\u062d\u0645\u062f'))\n# {'first_name': {'country': {'algeria': 0.018, 'egypt': 0.441, 'iraq': 0.12, 'jordan': 0.027, 'libya': 0.035, 'saudi arabia': 0.154, 'sudan': 0.07, 'syrian arab republic': 0.062, 'turkey': 0.022, 'yemen': 0.051}, 'gender': {'female': 0.035, 'male': 0.965}, 'rank': {'algeria': 4, 'egypt': 1, 'iraq': 2, 'jordan': 1, 'libya': 1, 'saudi arabia': 1, 'sudan': 1, 'syrian arab republic': 1, 'turkey': 18, 'yemen': 1}}, 'last_name': {'country': {'egypt': 0.453, 'iraq': 0.096, 'jordan': 0.015, 'libya': 0.043, 'palestine, state of': 0.016, 'saudi arabia': 0.118, 'sudan': 0.146, 'syrian arab republic': 0.058, 'turkey': 0.017, 'yemen': 0.037}, 'gender': {}, 'rank': {'egypt': 2, 'iraq': 3, 'jordan': 1, 'libya': 1, 'palestine, state of': 1, 'saudi arabia': 3, 'sudan': 1, 'syrian arab republic': 2, 'turkey': 44, 'yemen': 1}}}\n\nprint(nd.get_top_names(n=10, gender='male', country_alpha2='us'))\n# {'us': {'m': ['jose', 'david', 'michael', 'john', 'juan', 'carlos', 'luis', 'chris', 'alex', 'daniel']}}\n\nprint(nd.get_top_names(n=5, country_alpha2='es'))\n# {'es': {'m': ['jose', 'antonio', 'juan', 'manuel', 'david'], 'f': ['maria', 'ana', 'carmen', 'laura', 'isabel']}}\n\nprint(nd.get_country_codes(alpha_2=true))\n# ['ae', 'af', 'al', 'ao', 'ar', 'at', 'az', 'bd', 'be', 'bf', 'bg', 'bh', 'bi', 'bn', 'bo', 'br', 'bw', 'ca', 'ch', 'cl', 'cm', 'cn', 'co', 'cr', 'cy', 'cz', 'de', 'dj', 'dk', 'dz', 'ec', 'ee', 'eg', 'es', 'et', 'fi', 'fj', 'fr', 'gb', 'ge', 'gh', 'gr', 'gt', 'hk', 'hn', 'hr', 'ht', 'hu', 'id', 'ie', 'il', 'in', 'iq', 'ir', 'is', 'it', 'jm', 'jo', 'jp', 'kh', 'kr', 'kw', 'kz', 'lb', 'lt', 'lu', 'ly', 'ma', 'md', 'mo', 'mt', 'mu', 'mv', 'mx', 'my', 'na', 'ng', 'nl', 'no', 'om', 'pa', 'pe', 'ph', 'pl', 'pr', 'ps', 'pt', 'qa', 'rs', 'ru', 'sa', 'sd', 'se', 'sg', 'si', 'sv', 'sy', 'tm', 'tn', 'tr', 'tw', 'us', 'uy', 'ye', 'za']\n```\n## api\n\nthe `search` call provides information about:\n- `country`: the probability of the name belonging to a country. only the top 10 countries matching the name are returned.\n- `gender`: the probability of the person to be a `male` or `female`.\n- `rank`: the rank of the name in his country. `1` means the most popular name.\n\n- **note**: `first_name/last_name`: the `gender` does not apply to `last_name`.\n\nthe `get_top_names` call gives the most popular names:\n\n- `n`: the number of names to return matching some criteria. default is 100.\n- `gender`: filters on `male` or `female`. default is none.\n- `use_first_names`: filters on the first names or last names. default is true.\n- `country_alpha2`: filters on the country (e.g. gb is the united kingdom). default is none.\n\nthe `get_country_codes` returns the supported country codes (or full `pycountry` objects).\n\n- `alpha_2`: only returns the country codes: 2-char code. default is false.\n\n## full dataset\n\n- the full (curated) dataset containing first, last names along with gender and countries has been uploaded here: [\nfull.tar.bz2 (2.3g)](https://drive.google.com/file/d/1wrqfw5eypzulvrfhcgiuwb2am5juyvgk/view?usp=sharing).\n\n## license\n\n- this version was generated from the massive facebook leak (533m accounts).\n- lists of names are [not copyrightable](https://www.justia.com/intellectual-property/copyright/lists-directories-and-databases/), generally speaking, but if you want to be completely sure you should talk to a lawyer.\n\n## countries\n\n\ud83c\uddf2\ud83c\uddf9\ud83c\uddea\ud83c\uddec\ud83c\udde7\ud83c\uddf4\ud83c\uddf3\ud83c\udde6\ud83c\uddf9\ud83c\uddf3\ud83c\uddf7\ud83c\uddf8\ud83c\uddef\ud83c\uddf2\ud83c\udde6\ud83c\uddf7\ud83c\uddef\ud83c\uddf5\ud83c\uddf0\ud83c\uddff\ud83c\uddf8\ud83c\udde6\ud83c\uddfa\ud83c\uddf8\ud83c\udde6\ud83c\uddea\ud83c\udded\ud83c\uddfa\ud83c\udded\ud83c\uddf0\ud83c\uddf6\ud83c\udde6\ud83c\uddf8\ud83c\uddec\ud83c\udde9\ud83c\uddea\ud83c\uddfe\ud83c\uddea\ud83c\uddf2\ud83c\uddfe\ud83c\udded\ud83c\uddf9\ud83c\uddf5\ud83c\uddf7\ud83c\udde8\ud83c\uddf3\ud83c\udde6\ud83c\uddf4\ud83c\uddf9\ud83c\uddfc\ud83c\uddf8\ud83c\udde9\ud83c\udde7\ud83c\udded\ud83c\udde7\ud83c\uddea\ud83c\uddea\ud83c\uddf9\ud83c\uddea\ud83c\uddea\ud83c\udde8\ud83c\uddf4\ud83c\uddec\ud83c\uddf7\ud83c\udde7\ud83c\uddf7\ud83c\uddf7\ud83c\uddfa\ud83c\uddf1\ud83c\uddfe\ud83c\uddf8\ud83c\uddfb\ud83c\uddf0\ud83c\uddfc\ud83c\uddf0\ud83c\uddf7\ud83c\udde6\ud83c\uddf1\ud83c\uddf8\ud83c\uddfe\ud83c\udde7\ud83c\uddeb\ud83c\udde8\ud83c\uddff\ud83c\udde8\ud83c\udde6\ud83c\uddf4\ud83c\uddf2\ud83c\udde9\ud83c\uddf0\ud83c\udde8\ud83c\uddf1\ud83c\udde7\ud83c\udde9\ud83c\udde7\ud83c\uddfc\ud83c\uddeb\ud83c\uddef\ud83c\uddee\ud83c\uddf6\ud83c\uddee\ud83c\uddea\ud83c\uddff\ud83c\udde6\ud83c\udde8\ud83c\uddf7\ud83c\uddef\ud83c\uddf4\ud83c\uddf0\ud83c\udded\ud83c\uddf5\ud83c\uddea\ud83c\uddfa\ud83c\uddfe\ud83c\uddee\ud83c\uddf7\ud83c\uddf2\ud83c\udde9\ud83c\uddeb\ud83c\uddf7\ud83c\uddf2\ud83c\uddf4\ud83c\uddf3\ud83c\uddf1\ud83c\uddec\ud83c\udded\ud83c\udde8\ud83c\uddfe\ud83c\udde9\ud83c\uddff\ud83c\uddee\ud83c\uddf9\ud83c\uddec\ud83c\udde7\ud83c\udde7\ud83c\uddee\ud83c\uddee\ud83c\uddf3\ud83c\uddeb\ud83c\uddee\ud83c\udde6\ud83c\uddeb\ud83c\uddf5\ud83c\udded\ud83c\udde6\ud83c\uddff\ud83c\uddec\ud83c\uddea\ud83c\udde8\ud83c\uddf2\ud83c\uddee\ud83c\uddf1\ud83c\uddea\ud83c\uddf8\ud83c\uddf1\ud83c\uddf9\ud83c\udde9\ud83c\uddef\ud83c\uddec\ud83c\uddf9\ud83c\uddf1\ud83c\uddfa\ud83c\uddf5\ud83c\uddf8\ud83c\uddf9\ud83c\uddf7\ud83c\uddf5\ud83c\uddf1\ud83c\uddee\ud83c\uddf8\ud83c\uddf3\ud83c\uddec\ud83c\uddf5\ud83c\udde6\ud83c\udded\ud83c\uddf7\ud83c\uddf8\ud83c\uddee\ud83c\udded\ud83c\uddf3\ud83c\udde6\ud83c\uddf9\ud83c\uddf2\ud83c\uddfa\ud83c\uddf8\ud83c\uddea\ud83c\uddf2\ud83c\udde6\ud83c\udde8\ud83c\udded\ud83c\udde7\ud83c\uddf3\ud83c\uddf2\ud83c\uddfb\ud83c\uddf3\ud83c\uddf4\ud83c\uddea\ud83c\udde8\ud83c\uddee\ud83c\udde9\ud83c\udde7\ud83c\uddec\ud83c\uddf5\ud83c\uddf9\ud83c\uddf2\ud83c\uddfd\ud83c\uddf1\ud83c\udde7\ud83c\uddf9\ud83c\uddf2\n\n\n## citation\n\n```\n@misc{namedataset2021,\n  author = {philippe remy},\n  title = {name dataset},\n  year = {2021},\n  publisher = {github},\n  journal = {github repository},\n  howpublished = {\\url{https://github.com/philipperemy/name-dataset}},\n}\n```\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "names-dataset",
  "package_url": "https://pypi.org/project/names-dataset/",
  "project_url": "https://pypi.org/project/names-dataset/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/names-dataset/3.1.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "the python library to handle names",
  "version": "3.1.0",
  "releases": [],
  "developers": [
    "philippe_remy"
  ],
  "kwds": "names_dataset get_top_names names use_first_names facebook",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_names_dataset",
  "homepage": "",
  "release_count": 18,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "intended audience :: developers",
    "license :: osi approved :: mozilla public license 2.0 (mpl 2.0)",
    "natural language :: english",
    "operating system :: macos",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "===================\nmozilla-django-oidc\n===================\n\n.. image:: https://badge.fury.io/py/mozilla-django-oidc.svg\n   :target: https://badge.fury.io/py/mozilla-django-oidc\n\n.. image:: https://travis-ci.org/mozilla/mozilla-django-oidc.svg?branch=master\n   :target: https://travis-ci.org/mozilla/mozilla-django-oidc\n\n.. image:: https://codecov.io/gh/mozilla/mozilla-django-oidc/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/mozilla/mozilla-django-oidc\n\n.. image:: https://circleci.com/gh/mozilla/mozilla-django-oidc/tree/master.svg?style=svg\n   :target: https://circleci.com/gh/mozilla/mozilla-django-oidc/tree/master\n\na lightweight authentication and access management library for integration with openid connect enabled authentication services.\n\n\ndocumentation\n-------------\n\nthe full documentation is at `<https://mozilla-django-oidc.readthedocs.io>`_.\n\n\ndesign principles\n-----------------\n\n* keep it as minimal/lightweight as possible\n* store as few authn/authz artifacts as possible\n* allow custom functionality by overriding the authentication backend\n* mainly support oidc authorization code flow\n* allow shipping mozilla-centric authn/authz features\n* test against all supported python/django version\n* e2e tested and audited by `mozilla infosec <https://infosec.mozilla.org/>`_\n\n\nrunning unit tests\n-------------------\n\nuse ``tox`` to run as many different versions of python you have. if you\ndon't have ``tox`` installed (and executable) already you can either\ninstall it in your system python or `<https://pypi.python.org/pypi/pipsi>`_.\nonce installed, simply execute in the project root directory.\n\n.. code-block:: shell\n\n    $ tox\n\n``tox`` will do the equivalent of installing virtual environments for every\ncombination mentioned in the ``tox.ini`` file. if your system, for example,\ndoesn't have ``python3.4`` those ``tox`` tests will be skipped.\n\nfor a faster test-rinse-repeat cycle you can run tests in a specific\nenvironment with a specific version of python and specific version of\ndjango of your choice. here is such an example:\n\n\n.. code-block:: shell\n\n    $ virtualenv -p /path/to/bin/python3.7 venv\n    $ source venv\n    (venv) $ pip install -r requirements/requirements_dev.txt\n    (venv) $ django_settings_module=tests.settings django-admin test\n\nmeasuring code coverage, continuing the steps above:\n\n.. code-block:: shell\n\n    (venv) $ pip install coverage\n    (venv) $ django_settings_module=tests.settings coverage run --source mozilla_django_oidc `which django-admin` test\n    (venv) $ coverage report\n    (venv) $ coverage html\n    (venv) $ open htmlcov/index.html\n\nlocal development\n-----------------\n\nthe local development setup is based on docker so you need the following installed in your system:\n\n* `docker`\n* `docker-compose`\n\nyou will also need to edit your ``hosts`` file to resolve ``testrp`` and ``testprovider`` hostnames to ``127.0.0.1``.\n\nrunning test services\n=====================\n\nto run the `testrp` and `testprovider` instances run the following:\n\n.. code-block:: shell\n\n   (venv) $ docker-compose up -d testprovider testrp\n\nthen visit the testing django app on: ``http://testrp:8081``.\n\nthe library source code is mounted as a docker volume and source code changes are reflected directly in.\nin order to test a change you need to restart the ``testrp`` service.\n\n.. code-block:: shell\n\n   (venv) $ docker-compose stop testrp\n   (venv) $ docker-compose up -d testrp\n\nrunning integration tests\n=========================\n\nintegration tests are mounted as a volume to the docker containers. tests can be run using the following command:\n\n.. code-block:: shell\n\n   (venv) $ docker-compose run --service-ports testrunner\n\nlinting\n-------\n\nall code is checked with `<https://pypi.python.org/pypi/flake8>`_ in\ncontinuous integration. to make sure your code still passes all style guides\ninstall ``flake8`` and check:\n\n.. code-block:: shell\n\n    $ flake8 mozilla_django_oidc tests\n\n.. note::\n\n    when you run ``tox`` it also does a ``flake8`` run on the main package\n    files and the tests.\n\nyou can also run linting with ``tox``:\n\n.. code-block:: shell\n\n    $ tox -e lint\n\n\nreleasing a new version\n------------------------\n\n``mozilla-django-oidc`` releases are hosted in `pypi <https://pypi.python.org/pypi/mozilla-django-oidc>`_.\nhere are the steps you need to follow in order to push a new release:\n\n* make sure that ``history.rst`` is up-to-date focusing mostly on backwards incompatible changes.\n\n  security vulnerabilities should be clearly marked in a \"security issues\" section along with\n  a level indicator of:\n\n  * high: vulnerability facilitates data loss, data access, impersonation of admin, or allows access\n    to other sites or components\n\n    users should upgrade immediately.\n\n  * medium: vulnerability endangers users by sending them to malicious sites or stealing browser\n    data.\n\n    users should upgrade immediately.\n\n  * low: vulnerability is a nuissance to site staff and/or users\n\n    users should upgrade.\n\n* bump the project version and create a commit for the new version.\n\n  * you can use ``bumpversion`` for that. it is a tool to automate this procedure following the `semantic versioning scheme <http://semver.org/>`_.\n\n    * for a patch version update (eg 0.1.1 to 0.1.2) you can run ``bumpversion patch``.\n    * for a minor version update (eg 0.1.0 to 0.2.0) you can run ``bumpversion minor``.\n    * for a major version update (eg 0.1.0 to 1.0.0) you can run ``bumpversion major``.\n\n* create a `signed tag <https://git-scm.com/book/tr/v2/git-tools-signing-your-work>`_ for that version\n\n  example::\n\n      git tag -s 0.1.1 -m \"bump version: 0.1.0 to 0.1.1\"\n\n* push the signed tag to github\n\n  example::\n\n      git push origin 0.1.1\n\nthe release is pushed automatically to pypi using a travis deployment hook on every new tag.\n\n\nlicense\n-------\n\nthis software is licensed under the mpl 2.0 license. for more info check the license file.\n\n\ncredits\n-------\n\ntools used in rendering this package:\n\n*  cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nhistory\n-------\n\n3.0.0 (2022-11-14)\n==================\n* gracefully handle ``www-authenticate`` header with missing ``error_description``.\n  thanks `@vinitsharswat <https://github.com/vinitsharswat>`_ and `@adamj9431 <https://github.com/adamj9431>`_\n* lint project with ``black``.\n* add support for django 4\n* document oidc_op_jwks_endpoint.\n  thanks `@yoctozepto <https://github.com/yoctozepto>`_\n* update typo in comments.\n  thanks `@rabbit-aaron <https://github.com/rabbit-aaron>`_\n* login_redirect_url now accepts a named url pattern.\n  thanks `@dispiste <https://github.com/dispiste>`_\n* pass `oidc_auth_request_extra_params` to sessionrefresh\n  thanks `@melanger <https://github.com/melanger>`_\n* remove state from from session after failed authentication attempts\n  thanks `@cfra <https://github.com/cfra>`_\n* do not call auth.login() on session refresh.\n  thanks `crgwbr <https://github.com/crgwbr>`_\n\nbackwards-incompatible changes:\n\n* drop python 3.6 support\n* drop django 2.x support\n* drop django 3.1 support\n\n\n2.0.0 (2021-07-27)\n==================\n\n* make `get_or_create_user` compatible with custom scope configuration\n  by moving scope specific code to `describe_user_by_claims`\n  thanks `@cfra <https://github.com/cfra>`_\n* add support for django 3.2\n  thanks `@jannh <https://github.com/jannh>`_\n* add configuration to opt in logout using get\n* fix url encoding using escaped space characters\n* pass email as named argument in create_user\n* do not fail if jwk does not have a key id\n  thanks `@cfra <https://github.com/cfra>`_\n* update middleware init to configure settings \n  thanks `@dreynolds <https://github.com/dreynolds>`_\n* add sessionauthentication to drf auth class\n  thanks `@spytec <https://github.com/spytec>`_\n  \nbackwards-incompatible changes:\n\n* drop django 1.x support\n* drop python2 support\n\n\n1.2.4 (2020-08-19)\n==================\n\n* fix error in readme.rst\n  thanks `@der-gabe <https://github.com/der-gabe>`_\n* fix jwks handling when the same `kid` value is used across jwks with\n  different `alg` specified\n  thanks `@davidjb <https://github.com/davidjb>`_\n* support regex patterns in ``oidc_exempt_urls``, to allow exempting session refreshes in\n  ``sessionmiddleware`` for urls matching the pattern\n  thanks `@jwhitlock <https://github.com/jwhitlock>`_\n* move nonce outside of add_state_and_noce_to_session method.\n* change log level to info for the add_state_and_nonce_to_session.\n* session save/load management\n  thanks `@flor1an-dev <https://github.com/flor1an-dev>`_\n* allow multiple parallel login sessions\n  thanks `@istreeter <https://github.com/istreeter>`_\n\n.. _`@jwhitlock`: https://github.com/jwhitlock\n\n1.2.3 (2020-01-02)\n===================\n\n* add support for django 3.x\n  thanks `@jaap3 <https://github.com/jaap3>`_\n* use new e2e testing images from mozilla namespace\n* remove support for eol'ed django versions\n\n1.2.2 (2019-04-18)\n===================\n\n* add mozilla code of conduct\n* allow overriding oidc settings per class\n\n1.2.1 (2019-01-22)\n===================\n\n* make `verify_claims` compatible with custom scope configuration.\n\n1.2.0 (2019-01-09)\n==================\n\n* improve travis automation for pypi releases\n* allow basic auth for oidc token endpoint requests\n  thanks `@anttipalola <https://github.com/anttipalola>`_\n* replace phantomjs with firefox headless for e2e testing\n* add default email verification claim check\n  thanks `@kerrermanisnl <https://github.com/kerrermanisnl>`_\n* remove compatibility code for unsupported django versions\n* add settings to control redirect behavior\n  thanks `@chrisbrantley <https://github.com/chrisbrantley>`_\n\n1.1.2 (2018-08-24)\n===================\n\n* fix jwks handling when op returns multiple keys\n  thanks `@justinazoff <https://github.com/justinazoff>`_\n\n\n1.1.1 (2018-08-09)\n===================\n\n* fix `is_safe_url` on django 2.1\n* fix signature in `authenticate` method to be compatible with django 2.1\n* remove legacy code for unsupported django < 1.11\n  thanks `@sirtyson <https://github.com/sirtyson>`_\n\n\n1.1.0 (2018-08-02)\n===================\n\n* installation doc fixes\n  thanks `@mklan <https://github.com/mklan>`_\n* drop support for unsupported django 1.8 and python 3.3.\n* refactor authentication backend to make it easier to extend\n  required by drf support feature.\n* add drf support\n  thanks `@anlutro <https://github.com/anlutro>`_\n* improve local docker environment setup\n* add flag to allow using unsecured tokens\n* allow using jwk with optional ``alg``\n  thanks `@algogator <https://github.com/algogator>`_\n\n\n1.0.0 (2018-05-09)\n===================\n\n* add oidc_authentication_callback_url as a new configuration parameter\n* fail earlier when jws algorithm does not oidc_rp_sign_algo.\n  thanks `@anlutro <https://github.com/anlutro>`_\n* rs256 verification through ``settings.oidc_op_jwks_endpoint``\n  thanks `@germanoguerrini <https://github.com/germanoguerrini>`_\n* refactor oidcauthenticationbackend so that token retrieval methods can be overridden in a subclass when you need to.\n\nbackwards-incompatible changes:\n\n* ``oidc_op_logout_url_method`` takes a ``request`` parameter now.\n* changed name of ``refreshidtoken`` middleware to ``sessionrefresh``.\n\n\n.. _`@anlutro`: https://github.com/anlutro\n\n0.6.0 (2018-03-27)\n===================\n\n* add e2e tests and automation\n* add caching for exempt urls\n* fix logout when session refresh fails\n\n0.5.0 (2018-01-10)\n===================\n\n* add django 2.0 support\n* fix tox configuration\n\nbackwards-incompatible changes:\n\n* drop django 1.10 support\n\n0.4.2 (2017-11-29)\n===================\n\n* fix oidc_username_algo to actually load dotted import path of callback.\n* add verify_claims method for advanced authentication checks\n\n0.4.1 (2017-10-25)\n===================\n\n* send bytes to josepy. fixes python3 support.\n\n0.4.0 (2017-10-24)\n===================\n\nsecurity issues:\n\n* **high**: replace python-jose with josepy and use pyca/cryptography instead of pycrypto (cve-2013-7459).\n\nbackwards-incompatible changes:\n\n* ``oidc_rp_idp_sign_key`` no longer uses the jwk json as ``dict`` but pem or der keys instead.\n\n\n0.3.2 (2017-10-03)\n===================\n\nfeatures:\n\n* implement rs256 verification\n  thanks `@puiterwijk <https://github.com/puiterwijk>`_\n\nbugs:\n\n* use ``settings.oidc_verify_ssl`` also when validating the token.\n  thanks `@germanoguerrini <https://github.com/germanoguerrini>`_\n* make openid connect scope configurable.\n  thanks `@puiterwijk <https://github.com/puiterwijk>`_\n* add path host injection unit-test (#171)\n* revisit oidc_store_{access,id}_token config entries\n* allow configuration of additional auth parameters\n\n\n.. _`@germanoguerrini`: https://github.com/germanoguerrini\n.. _`@puiterwijk`: https://github.com/puiterwijk\n\n0.3.1 (2017-06-15)\n===================\n\nsecurity issues:\n\n* **medium**: sanitize next url for authentication view\n\n0.3.0 (2017-06-13)\n===================\n\nsecurity issues:\n\n* **low**: logout using post not get (#126)\n\nbackwards-incompatible changes:\n\n* the ``settings.site_url`` is no longer used. instead the absolute url is\n  derived from the request's ``get_host()``.\n* only log out by http post allowed.\n\nbugs:\n\n* test suite maintenance (#108, #109, #142)\n\n0.2.0 (2017-06-07)\n===================\n\nbackwards-incompatible changes:\n\n* drop support for django 1.9 (#130)\n\n  if you're using django 1.9, you should update django first.\n\n* move middleware to ``mozilla_django_oidc.middleware`` and\n  change it to use authentication endpoint with ``prompt=none`` (#94)\n\n  you'll need to update your ``middleware_classes``/``middleware``\n  setting accordingly.\n\n* remove legacy ``base64`` handling of oidc secret. now rp secret\n  should be plaintext.\n\nfeatures:\n\n* add support for django 1.11 and python 3.6 (#85)\n* update middleware to work with django 1.10+ (#90)\n* documentation updates\n* rework test infrastructure so it's tox-based (#100)\n\nbugs:\n\n* always decode verified token before ``json.load()`` (#116)\n* always redirect to logout_url even when logged out (#121)\n* change email matching to be case-insensitive (#102)\n* allow combining oidcauthenticationbackend with other backends (#87)\n* fix is_authenticated usage for django 1.10+ (#125)\n\n0.1.0 (2016-10-12)\n===================\n\n* first release on pypi.\n",
  "docs_url": null,
  "keywords": "mozilla-django-oidc",
  "license": "mpl 2.0",
  "name": "mozilla-django-oidc",
  "package_url": "https://pypi.org/project/mozilla-django-oidc/",
  "project_url": "https://pypi.org/project/mozilla-django-oidc/",
  "project_urls": {
    "Homepage": "https://github.com/mozilla/mozilla-django-oidc"
  },
  "release_url": "https://pypi.org/project/mozilla-django-oidc/3.0.0/",
  "requires_dist": [
    "Django (>=3.2)",
    "josepy",
    "requests",
    "cryptography"
  ],
  "requires_python": "",
  "summary": "a lightweight authentication and access management library for integration with openid connect enabled authentication services.",
  "version": "3.0.0",
  "releases": [],
  "developers": [
    "akatsoulas@mozilla.com",
    "jgiannelos@mozilla.com",
    "tasos_katsoulas"
  ],
  "kwds": "mozilla_django_oidc badge django mozilla djangopackage",
  "license_kwds": "mpl 2.0",
  "libtype": "pypi",
  "id": "pypi_mozilla_django_oidc",
  "homepage": "https://github.com/mozilla/mozilla-django-oidc",
  "release_count": 26,
  "dependency_ids": [
    "pypi_cryptography",
    "pypi_django",
    "pypi_josepy",
    "pypi_requests"
  ]
}
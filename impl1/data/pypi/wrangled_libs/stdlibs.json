{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "topic :: utilities",
    "typing :: typed"
  ],
  "description": "# stdlibs\n\nsimple list of top-level packages in python's stdlib\n\n[![license](https://img.shields.io/pypi/l/stdlibs.svg)](https://github.com/omnilib/stdlibs/blob/master/license)\n[![version](https://img.shields.io/pypi/v/stdlibs.svg)](https://pypi.org/project/stdlibs)\n[![changelog](https://img.shields.io/badge/change-log-blue)](https://stdlibs.omnilib.dev/en/latest/changelog.html)\n[![documentation](https://readthedocs.org/projects/stdlibs/badge/?version=latest)](https://stdlibs.omnilib.dev)\n\nthis package provides a static listing of all known modules in the python standard\nlibrary, with separate lists available for each major release dating back to python 2.3.\nit also includes combined lists of all module names that were ever available in any\n3.x release, any 2.x release, or both.\n\nnote: on python versions 3.10 or newer, a list of module names for the active runtime\nis available `sys.stdlib_module_names`. this package exists to provide an historical\nrecord for use with static analysis and other tooling.\n\nthis package only includes listings for cpython releases. if other runtimes would be\nuseful, open an issue\u00a0and start a discussion on how best that can be accomodated.\n\n\ninstall\n-------\n\nyou can install it from pypi:\n\n```shell-session\n$ pip install stdlibs\n```\n\n\nusage\n-----\n\nthe recommended usage is to reference `stdlibs.module_names` \u2014 the top-level\nnames that are valid in some version of python 3.x on some platform.  this is a\nsuperset of top-level names you may have, and a superset of those in\n`sys.stdlib_module_names`.\n\n```pycon\n>>> from stdlibs import module_names\n>>> print(\"os\" in module_names)\ntrue\n>>> print(\"peg_parser\" in module_names)  # 3.9+\ntrue\n\n```\n\nif you need a specific version, those are available as other modules:\n\n```pycon\n>>> from stdlibs.py36 import module_names as module_names_py36\n>>> print(\"os\" in module_names_py36)\ntrue\n>>> print(\"peg_parser\" in module_names_py36)\nfalse\n\n```\n\nif you intend to process more than one version, you may find the string api\neasier:\n\n```pycon\n>>> from stdlibs import stdlib_module_names, known_versions\n>>> [v for v in known_versions if \"dataclasses\" in stdlib_module_names(v)]\n['3.7', '3.8', '3.9', '3.10', '3.11', '3.12', '3.13']\n>>>\n>>> sorted(stdlib_module_names(\"3.7\") - stdlib_module_names(\"3.6\"))\n['_abc', '_contextvars', '_py_abc', '_queue', '_uuid', '_xxtestfuzz', 'contextvars', 'dataclasses']\n>>>\n>>> from moreorless.click import unified_diff\n>>> prev = none\n>>> buf = []\n>>> for v in known_versions:\n...     cur = ''.join([f\"{name}\\n\" for name in sorted(stdlib_module_names(v))])\n...     if prev:\n...         buf.append(unified_diff(prev, cur, f\"new-in-{v}\"))\n...     prev = cur\n>>> print(''.join(''.join(buf).splitlines(true)[:10]), end='')\n--- a/new-in-2.4\n+++ b/new-in-2.4\n@@ -19,7 +19,6 @@\n docxmlrpcserver\n errno\n easydialogs\n-fcntl\n file\n fl\n filedialog\n\n```\n\nregenerating\n------------\n\nadd or update the list of releases and download urls in `stdlibs/fetch.py`, then\nexecute the `stdlibs.fetch` module:\n\n```shell-session\n$ make distclean virtualenv\n$ source .venv/bin/activate\n(.venv) $ python -m stdlibs.fetch\n```\n\n\nlicense\n-------\n\nstdlibs is copyright [amethyst reese](https://noswap.com), and licensed under\nthe mit license.  i am providing code in this repository to you under an open\nsource license.  this is my personal repository; the license you receive to\nmy code is from me and not from my employer. see the `license` file for details.\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "stdlibs",
  "package_url": "https://pypi.org/project/stdlibs/",
  "project_url": "https://pypi.org/project/stdlibs/",
  "project_urls": {
    "Documentation": "https://stdlibs.omnilib.dev/en/latest/",
    "Github": "https://github.com/omnilib/stdlibs",
    "Homepage": "https://stdlibs.omnilib.dev"
  },
  "release_url": "https://pypi.org/project/stdlibs/2023.12.15/",
  "requires_dist": [
    "attribution==1.6.2 ; extra == \"dev\"",
    "black==23.12.0 ; extra == \"dev\"",
    "coverage==7.3.3 ; extra == \"dev\"",
    "flake8==6.1.0 ; extra == \"dev\"",
    "flit==3.9.0 ; extra == \"dev\"",
    "mypy==1.7.1 ; extra == \"dev\"",
    "packaging==23.2 ; extra == \"dev\"",
    "ufmt==2.3.0 ; extra == \"dev\"",
    "usort==1.0.7 ; extra == \"dev\"",
    "sphinx==6.2.1 ; extra == \"docs\"",
    "sphinx-mdinclude==0.5.3 ; extra == \"docs\""
  ],
  "requires_python": ">=3.8",
  "summary": "list of packages in the stdlib",
  "version": "2023.12.15",
  "releases": [],
  "developers": [
    "amy@n7.gg"
  ],
  "kwds": "stdlib_module_names stdlibs stdlib module_names_py36 pycon",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_stdlibs",
  "homepage": "",
  "release_count": 10,
  "dependency_ids": [
    "pypi_attribution",
    "pypi_black",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_flit",
    "pypi_mypy",
    "pypi_packaging",
    "pypi_sphinx",
    "pypi_sphinx_mdinclude",
    "pypi_ufmt",
    "pypi_usort"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "framework :: pytest",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: system administrators",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing",
    "topic :: system :: systems administration",
    "topic :: utilities"
  ],
  "description": "# pytest-github-actions-annotate-failures\n[pytest](https://pypi.org/project/pytest/) plugin to annotate failed tests with a [workflow command for github actions](https://help.github.com/en/actions/reference/workflow-commands-for-github-actions)\n\n## usage\njust install and run pytest with this plugin in your workflow. for example,\n\n```yaml\nname: test\n\non:\n  push:\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v3\n\n    - uses: actions/setup-python@v4\n      with:\n        python-version: 3.7\n\n    - name: install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        pip install -r requirements.txt\n\n    - name: install plugin\n      run: pip install pytest-github-actions-annotate-failures\n\n    - run: pytest\n```\n\nif your test is running in a docker container, you have to install this plugin and manually set `github_actions` environment variable to `true` inside of docker container. (for example, `docker-compose run --rm -e github_actions=true app -- pytest`)\n\nif your tests are run from a subdirectory of the git repository, you have to set the `pytest_run_path` environment variable to the path of that directory relative to the repository root in order for github to identify the files with errors correctly.\n\n## screenshot\n[![image from gyazo](https://i.gyazo.com/b578304465dd1b755ceb0e04692a57d9.png)](https://gyazo.com/b578304465dd1b755ceb0e04692a57d9)\n",
  "docs_url": null,
  "keywords": "ansible,testing,molecule,plugin",
  "license": "mit",
  "name": "pytest-github-actions-annotate-failures",
  "package_url": "https://pypi.org/project/pytest-github-actions-annotate-failures/",
  "project_url": "https://pypi.org/project/pytest-github-actions-annotate-failures/",
  "project_urls": {
    "changelog": "https://github.com/pytest-dev/pytest-github-actions-annotate-failures/releases",
    "homepage": "https://github.com/pytest-dev/pytest-github-actions-annotate-failures",
    "repository": "https://github.com/pytest-dev/pytest-github-actions-annotate-failures"
  },
  "release_url": "https://pypi.org/project/pytest-github-actions-annotate-failures/0.2.0/",
  "requires_dist": [
    "pytest (>=4.0.0)"
  ],
  "requires_python": ">=3.7",
  "summary": "pytest plugin to annotate failed tests with a workflow command for github actions",
  "version": "0.2.0",
  "releases": [],
  "developers": [
    "utagawakiki@gmail.com"
  ],
  "kwds": "pytest_run_path ansible pytest github_actions github",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytest_github_actions_annotate_failures",
  "homepage": "",
  "release_count": 18,
  "dependency_ids": [
    "pypi_pytest"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "typing :: typed"
  ],
  "description": "# psygnal\n\n[![license](https://img.shields.io/pypi/l/psygnal.svg?color=green)](https://github.com/pyapp-kit/psygnal/raw/master/license)\n[![pypi](https://img.shields.io/pypi/v/psygnal.svg?color=green)](https://pypi.org/project/psygnal)\n[![conda](https://img.shields.io/conda/v/conda-forge/psygnal)](https://github.com/conda-forge/psygnal-feedstock)\n[![python version](https://img.shields.io/pypi/pyversions/psygnal.svg?color=green)](https://python.org)\n[![ci](https://github.com/pyapp-kit/psygnal/actions/workflows/test.yml/badge.svg)](https://github.com/pyapp-kit/psygnal/actions/workflows/test.yml)\n[![codecov](https://codecov.io/gh/pyapp-kit/psygnal/branch/main/graph/badge.svg?token=qgnz9gxpeb)](https://codecov.io/gh/pyapp-kit/psygnal)\n[![documentation status](https://readthedocs.org/projects/psygnal/badge/?version=latest)](https://psygnal.readthedocs.io/en/latest/?badge=latest)\n[![benchmarks](https://img.shields.io/badge/\u23f1-codspeed-%23ff7b53)](https://codspeed.io/pyapp-kit/psygnal)\n\npsygnal (pronounced \"signal\") is a pure python implementation of the [observer\npattern](https://en.wikipedia.org/wiki/observer_pattern), with the api of\n[qt-style signals](https://doc.qt.io/qt-5/signalsandslots.html) with (optional)\nsignature and type checking, and support for threading.\n\n> this library does ***not*** require or use qt in any way, it simply implements\n> a similar observer pattern api.\n\n## documentation\n\nhttps://psygnal.readthedocs.io/\n\n### install\n\n```sh\npip install psygnal\n```\n\n```sh\nconda install -c conda-forge psygnal\n```\n\n## usage\n\nthe [observer pattern](https://en.wikipedia.org/wiki/observer_pattern) is a software design pattern in which an object maintains a list of its dependents (\"**observers**\"), and notifies them of any state changes \u2013 usually by calling a **callback function** provided by the observer.\n\nhere is a simple example of using psygnal:\n\n```python\nfrom psygnal import signal\n\nclass myobject:\n    # define one or more signals as class attributes\n    value_changed = signal(str)\n\n# create an instance\nmy_obj = myobject()\n\n# you (or others) can connect callbacks to your signals\n@my_obj.value_changed.connect\ndef on_change(new_value: str):\n    print(f\"the value changed to {new_value}!\")\n\n# the object may now emit signals when appropriate,\n# (for example in a setter method)\nmy_obj.value_changed.emit('hi')  # prints \"the value changed to hi!\"\n```\n\nmuch more detail available in the [documentation](https://psygnal.readthedocs.io/)!\n\n### evented dataclasses\n\na particularly nice usage of the signal pattern is to emit signals whenever a\nfield of a dataclass changes. psygnal provides an `@evented` decorator that will\nemit a signal whenever a field changes.  it is compatible with `dataclasses`\nfrom [the standard library](https://docs.python.org/3/library/dataclasses.html),\nas well as [attrs](https://www.attrs.org/en/stable/), and\n[pydantic](https://pydantic-docs.helpmanual.io):\n\n```python\nfrom psygnal import evented\nfrom dataclasses import dataclass\n\n@evented\n@dataclass\nclass person:\n    name: str\n    age: int = 0\n\nperson = person('john', age=30)\n\n# connect callbacks\n@person.events.age.connect\ndef _on_age_change(new_age: str):\n    print(f\"age changed to {new_age}\")\n\nperson.age = 31  # prints: age changed to 31\n```\n\nsee the [dataclass documentation](https://psygnal.readthedocs.io/en/latest/dataclasses/) for more details.\n\n\n## benchmark history\n\nhttps://pyapp-kit.github.io/psygnal/\n\nand\n\nhttps://codspeed.io/pyapp-kit/psygnal\n\n## developers\n\n### debugging\n\nwhile `psygnal` is a pure python module, it is compiled with mypyc to increase\nperformance.  to disable all compiled files and run the pure python version,\nyou may run:\n\n```bash\npython -c \"import psygnal.utils; psygnal.utils.decompile()\"\n```\n\nto return the compiled version, run:\n\n```bash\npython -c \"import psygnal.utils; psygnal.utils.recompile()\"\n```\n\nthe `psygnal._compiled` variable will tell you if you're using the compiled\nversion or not.\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd 3-clause license",
  "name": "psygnal",
  "package_url": "https://pypi.org/project/psygnal/",
  "project_url": "https://pypi.org/project/psygnal/",
  "project_urls": {
    "documentation": "https://psygnal.readthedocs.io",
    "homepage": "https://github.com/pyapp-kit/psygnal",
    "repository": "https://github.com/pyapp-kit/psygnal"
  },
  "release_url": "https://pypi.org/project/psygnal/0.9.5/",
  "requires_dist": [
    "importlib-metadata; python_version < '3.8'",
    "mypy-extensions",
    "typing-extensions>=3.7.4.2",
    "black; extra == 'dev'",
    "cruft; extra == 'dev'",
    "dask; extra == 'dev'",
    "ipython; extra == 'dev'",
    "mypy; extra == 'dev'",
    "numpy; extra == 'dev'",
    "pre-commit; extra == 'dev'",
    "pydantic; extra == 'dev'",
    "pyqt5; extra == 'dev'",
    "pytest; extra == 'dev'",
    "pytest-cov; extra == 'dev'",
    "pytest-mypy-plugins; extra == 'dev'",
    "pytest-qt; extra == 'dev'",
    "qtpy; extra == 'dev'",
    "rich; extra == 'dev'",
    "ruff; extra == 'dev'",
    "wrapt; extra == 'dev'",
    "griffe==0.25.5; extra == 'docs'",
    "mkdocs-material==8.5.10; extra == 'docs'",
    "mkdocs-minify-plugin; extra == 'docs'",
    "mkdocs-spellcheck[all]; extra == 'docs'",
    "mkdocs==1.4.2; extra == 'docs'",
    "mkdocstrings-python==0.8.3; extra == 'docs'",
    "mkdocstrings==0.20.0; extra == 'docs'",
    "wrapt; extra == 'proxy'",
    "pydantic; extra == 'pydantic'",
    "attrs; extra == 'test'",
    "dask; extra == 'test'",
    "msgspec; python_version >= '3.8' and extra == 'test'",
    "numpy; extra == 'test'",
    "pydantic; extra == 'test'",
    "pyinstaller>=4.0; extra == 'test'",
    "pytest-codspeed; extra == 'test'",
    "pytest-cov; extra == 'test'",
    "pytest>=6.0; extra == 'test'",
    "toolz; extra == 'test'",
    "wrapt; extra == 'test'",
    "pytest-qt; extra == 'testqt'",
    "qtpy; extra == 'testqt'"
  ],
  "requires_python": ">=3.7",
  "summary": "fast python callback/event system modeled after qt signals",
  "version": "0.9.5",
  "releases": [],
  "developers": [
    "talley.lambert@gmail.com"
  ],
  "kwds": "psygnal pyversions conda pypi pip",
  "license_kwds": "bsd 3-clause license",
  "libtype": "pypi",
  "id": "pypi_psygnal",
  "homepage": "",
  "release_count": 33,
  "dependency_ids": [
    "pypi_attrs",
    "pypi_black",
    "pypi_cruft",
    "pypi_dask",
    "pypi_griffe",
    "pypi_importlib_metadata",
    "pypi_ipython",
    "pypi_mkdocs",
    "pypi_mkdocs_material",
    "pypi_mkdocs_minify_plugin",
    "pypi_mkdocs_spellcheck",
    "pypi_mkdocstrings",
    "pypi_mkdocstrings_python",
    "pypi_msgspec",
    "pypi_mypy",
    "pypi_mypy_extensions",
    "pypi_numpy",
    "pypi_pre_commit",
    "pypi_pydantic",
    "pypi_pyinstaller",
    "pypi_pyqt5",
    "pypi_pytest",
    "pypi_pytest_codspeed",
    "pypi_pytest_cov",
    "pypi_pytest_mypy_plugins",
    "pypi_pytest_qt",
    "pypi_qtpy",
    "pypi_rich",
    "pypi_ruff",
    "pypi_toolz",
    "pypi_typing_extensions",
    "pypi_wrapt"
  ]
}
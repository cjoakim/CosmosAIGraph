{
  "classifiers": [
    "framework :: odoo",
    "intended audience :: developers",
    "license :: osi approved :: gnu library or lesser general public license (lgpl)",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "=======\nodoorpc\n=======\n\n.. image:: https://img.shields.io/pypi/v/odoorpc.svg\n    :target: https://pypi.python.org/pypi/odoorpc/\n    :alt: latest version\n\n.. image:: https://travis-ci.org/oca/odoorpc.svg?branch=master\n    :target: https://travis-ci.org/oca/odoorpc\n    :alt: build status\n\n.. image:: https://img.shields.io/pypi/pyversions/odoorpc.svg\n    :target: https://pypi.python.org/pypi/odoorpc/\n    :alt: supported python versions\n\n.. image:: https://img.shields.io/pypi/l/odoorpc.svg\n    :target: https://pypi.python.org/pypi/odoorpc/\n    :alt: license\n\n**odoorpc** is a python package providing an easy way to\npilot your **odoo** servers through `rpc`.\n\nfeatures supported:\n    - access to all data model methods (even ``browse``) with an api similar\n      to the server-side api,\n    - use named parameters with model methods,\n    - user context automatically sent providing support for\n      internationalization,\n    - browse records,\n    - execute workflows,\n    - manage databases,\n    - reports downloading,\n    - json-rpc protocol (ssl supported),\n\nhow does it work? see below:\n\n.. code-block:: python\n\n    import odoorpc\n\n    # prepare the connection to the server\n    odoo = odoorpc.odoo('localhost', port=8069)\n\n    # check available databases\n    print(odoo.db.list())\n\n    # login\n    odoo.login('db_name', 'user', 'passwd')\n\n    # current user\n    user = odoo.env.user\n    print(user.name)            # name of the user connected\n    print(user.company_id.name) # the name of its company\n\n    # simple 'raw' query\n    user_data = odoo.execute('res.users', 'read', [user.id])\n    print(user_data)\n\n    # use all methods of a model\n    if 'sale.order' in odoo.env:\n        order = odoo.env['sale.order']\n        order_ids = order.search([])\n        for order in order.browse(order_ids):\n            print(order.name)\n            products = [line.product_id.name for line in order.order_line]\n            print(products)\n\n    # update data through a record\n    user.name = \"brian jones\"\n\nsee the documentation for more details and features.\n\nsupported odoo server versions\n==============================\n\n`odoorpc` is tested on all major releases of `odoo` (starting from  8.0).\n\nsupported python versions\n=========================\n\n`odoorpc` support python 2.7, 3.7+.\n\nlicense\n=======\n\nthis software is made available under the `lgpl v3` license.\n\ngenerate the documentation\n==========================\n\nto generate the documentation, you have to install `sphinx` documentation\ngenerator::\n\n    pip install sphinx\n\nthen, you can use the ``build_doc`` option of the ``setup.py``::\n\n    python setup.py build_doc\n\nthe generated documentation will be in the ``./doc/build/html`` directory.\n\nchanges in this version\n=======================\n\nconsult the ``changelog`` file.\n\nbug tracker\n===========\n\nbugs are tracked on `github issues\n<https://github.com/oca/odoorpc/issues>`_. in case of trouble, please\ncheck there if your issue has already been reported. if you spotted it first,\nhelp us smash it by providing detailed and welcomed feedback.\n\ncredits\n=======\n\ncontributors\n------------\n\n* s\u00e9bastien alix <sebastien.alix@osiell.com>\n\ndo not contact contributors directly about support or help with technical issues.\n\nmaintainer\n----------\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: odoo community association\n   :target: https://odoo-community.org\n\nthis package is maintained by the oca.\n\noca, or the odoo community association, is a nonprofit organization whose\nmission is to support the collaborative development of odoo features and\npromote its widespread use.\n",
  "docs_url": "https://pythonhosted.org/OdooRPC/",
  "keywords": "openerp odoo server rpc client xml-rpc xmlrpc jsonrpc json-rpc odoorpc oerplib communication lib library python service web webservice",
  "license": "lgpl v3",
  "name": "odoorpc",
  "package_url": "https://pypi.org/project/OdooRPC/",
  "project_url": "https://pypi.org/project/OdooRPC/",
  "project_urls": {
    "Homepage": "https://github.com/OCA/odoorpc"
  },
  "release_url": "https://pypi.org/project/OdooRPC/0.10.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "odoorpc is a python package providing an easy way to pilot your odoo servers through rpc.",
  "version": "0.10.1",
  "releases": [],
  "developers": [
    "seb@usr-src.org",
    "sebastien_alix"
  ],
  "kwds": "odoorpc openerp xmlrpc rpc pip",
  "license_kwds": "lgpl v3",
  "libtype": "pypi",
  "id": "pypi_odoorpc",
  "homepage": "https://github.com/oca/odoorpc",
  "release_count": 16,
  "dependency_ids": []
}
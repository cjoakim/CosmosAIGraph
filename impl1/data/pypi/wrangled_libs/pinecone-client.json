{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "environment :: other environment",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "intended audience :: system administrators",
    "license :: other/proprietary license",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: database",
    "topic :: software development",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: application frameworks",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# pinecone-client\nthe pinecone python client\n\nfor more information, see the docs at https://www.pinecone.io/docs/\n\n## installation\n\ninstall a released version from pip:\n```shell\npip3 install pinecone-client\n```\n\nor the grpc version of the client for [tuning performance](https://docs.pinecone.io/docs/performance-tuning)\n\n```shell\npip3 install \"pinecone-client[grpc]\"\n```\n\nor the latest development version:\n```shell\npip3 install git+https://git@github.com/pinecone-io/pinecone-python-client.git\n```\n\nor a specific development version:\n```shell\npip3 install git+https://git@github.com/pinecone-io/pinecone-python-client.git\npip3 install git+https://git@github.com/pinecone-io/pinecone-python-client.git@example-branch-name\npip3 install git+https://git@github.com/pinecone-io/pinecone-python-client.git@259deff\n```\n\n## creating an index\n\nthe following example creates an index without a metadata\nconfiguration. by default, pinecone indexes all metadata.\n\n```python\n\nimport pinecone\n\n\npinecone.init(api_key=\"your_api_key\",\n              environment=\"us-west1-gcp\")\n\npinecone.create_index(\"example-index\", dimension=1024)\n```\n\nthe following example creates an index that only indexes\nthe \"color\" metadata field. queries against this index\ncannot filter based on any other metadata field.\n\n```python\nmetadata_config = {\n    \"indexed\": [\"color\"]\n}\n\npinecone.create_index(\"example-index-2\", dimension=1024,\n                      metadata_config=metadata_config)\n```\n\n## list indexes\n\nthe following example returns all indexes in your project.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\", environment=\"us-west1-gcp\")\n\nactive_indexes = pinecone.list_indexes()\n```\n\n## describe index\n\nthe following example returns information about the index `example-index`.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\", environment=\"us-west1-gcp\")\n\nindex_description = pinecone.describe_index(\"example-index\")\n\n```\n\n## delete an index\n\nthe following example deletes `example-index`.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\", environment=\"us-west1-gcp\")\n\npinecone.delete_index(\"example-index\")\n```\n\n## scale replicas\n\nthe following example changes the number of replicas for `example-index`.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\", environment=\"us-west1-gcp\")\n\nnew_number_of_replicas = 4\npinecone.configure_index(\"example-index\", replicas=new_number_of_replicas)\n```\n\n## describe index statistics\n\nthe following example returns statistics about the index `example-index`.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\", environment=\"us-west1-gcp\")\nindex = pinecone.index(\"example-index\")\n\nindex_stats_response = index.describe_index_stats()\n```\n\n\n## upsert vectors\n\nthe following example upserts vectors to `example-index`.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\", environment=\"us-west1-gcp\")\nindex = pinecone.index(\"example-index\")\n\nupsert_response = index.upsert(\n    vectors=[\n        (\"vec1\", [0.1, 0.2, 0.3, 0.4], {\"genre\": \"drama\"}),\n        (\"vec2\", [0.2, 0.3, 0.4, 0.5], {\"genre\": \"action\"}),\n    ],\n    namespace=\"example-namespace\"\n)\n```\n\n## query an index\n\nthe following example queries the index `example-index` with metadata\nfiltering.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\", environment=\"us-west1-gcp\")\nindex = pinecone.index(\"example-index\")\n\nquery_response = index.query(\n    namespace=\"example-namespace\",\n    top_k=10,\n    include_values=true,\n    include_metadata=true,\n    vector=[0.1, 0.2, 0.3, 0.4],\n    filter={\n        \"genre\": {\"$in\": [\"comedy\", \"documentary\", \"drama\"]}\n    }\n)\n```\n\n## delete vectors\n\nthe following example deletes vectors by id.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\", environment=\"us-west1-gcp\")\nindex = pinecone.index(\"example-index\")\n\ndelete_response = index.delete(ids=[\"vec1\", \"vec2\"], namespace=\"example-namespace\")\n```\n\n## fetch vectors\n\nthe following example fetches vectors by id.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\", environment=\"us-west1-gcp\")\nindex = pinecone.index(\"example-index\")\n\nfetch_response = index.fetch(ids=[\"vec1\", \"vec2\"], namespace=\"example-namespace\")\n```\n\n\n## update vectors\n\nthe following example updates vectors by id.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\", environment=\"us-west1-gcp\")\nindex = pinecone.index(\"example-index\")\n\nupdate_response = index.update(\n    id=\"vec1\",\n    values=[0.1, 0.2, 0.3, 0.4],\n    set_metadata={\"genre\": \"drama\"},\n    namespace=\"example-namespace\"\n)\n```\n\n## create collection\n\nthe following example creates the collection `example-collection` from\n`example-index`.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\",\n              environment=\"us-west1-gcp\")\n\npinecone.create_collection(\"example-collection\", \"example-index\")\n```\n\n## list collections\n\nthe following example returns a list of the collections in the current project.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\", environment=\"us-west1-gcp\")\n\nactive_collections = pinecone.list_collections()\n```\n\n## describe a collection\n\nthe following example returns a description of the collection\n`example-collection`.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\", environment=\"us-west1-gcp\")\n\ncollection_description = pinecone.describe_collection(\"example-collection\")\n```\n\n## delete a collection\n\nthe following example deletes the collection `example-collection`.\n\n```python\nimport pinecone\n\npinecone.init(api_key=\"your_api_key\", environment=\"us-west1-gcp\")\n\npinecone.delete_collection(\"example-collection\")\n```\n\n\n",
  "docs_url": null,
  "keywords": "pinecone vector database cloud",
  "license": "proprietary license",
  "name": "pinecone-client",
  "package_url": "https://pypi.org/project/pinecone-client/",
  "project_url": "https://pypi.org/project/pinecone-client/",
  "project_urls": {
    "Contact": "https://www.pinecone.io/contact/",
    "Documentation": "https://pinecone.io/docs",
    "End-User License Agreement": "https://www.pinecone.io/thin-client-user-agreement/",
    "Homepage": "https://www.pinecone.io"
  },
  "release_url": "https://pypi.org/project/pinecone-client/2.2.4/",
  "requires_dist": [
    "requests >=2.19.0",
    "pyyaml >=5.4",
    "loguru >=0.5.0",
    "typing-extensions >=3.7.4",
    "dnspython >=2.0.0",
    "python-dateutil >=2.5.3",
    "urllib3 >=1.21.1",
    "tqdm >=4.64.1",
    "numpy >=1.22.0",
    "grpcio >=1.44.0 ; extra == 'grpc'",
    "grpc-gateway-protoc-gen-openapiv2 ==0.1.0 ; extra == 'grpc'",
    "googleapis-common-protos >=1.53.0 ; extra == 'grpc'",
    "lz4 >=3.1.3 ; extra == 'grpc'",
    "protobuf ~=3.20.0 ; extra == 'grpc'"
  ],
  "requires_python": ">=3.8",
  "summary": "pinecone client and sdk",
  "version": "2.2.4",
  "releases": [],
  "developers": [
    "pinecone_systems",
    "support@pinecone.io"
  ],
  "kwds": "pinecone git pip3 github pip",
  "license_kwds": "proprietary license",
  "libtype": "pypi",
  "id": "pypi_pinecone_client",
  "homepage": "https://www.pinecone.io/",
  "release_count": 62,
  "dependency_ids": [
    "pypi_dnspython",
    "pypi_googleapis_common_protos",
    "pypi_grpc_gateway_protoc_gen_openapiv2",
    "pypi_grpcio",
    "pypi_loguru",
    "pypi_lz4",
    "pypi_numpy",
    "pypi_protobuf",
    "pypi_python_dateutil",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_tqdm",
    "pypi_typing_extensions",
    "pypi_urllib3"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "# lob-python\n\n[![build status](https://travis-ci.org/lob/lob-python.svg?branch=master)](https://travis-ci.org/lob/lob-python)\n[![pypi version](https://badge.fury.io/py/lob.svg)](http://badge.fury.io/py/lob)\n[![coverage status](https://coveralls.io/repos/lob/lob-python/badge.svg?branch=master)](https://coveralls.io/r/lob/lob-python?branch=master)\n\nthis is the python wrapper for the lob.com api. see full lob.com documentation [here](https://lob.com/docs/python). for best results, be sure that you're using [the latest version](https://lob.com/docs/python#version) of the lob api and the latest version of the python wrapper.\n\nthis library supports active python releases (i.e., versions which have not reached their end of life), as well as pypy 3.\nthe currently supported versions include:\n\n* python 3.6\n* python 3.7\n* python 3.8\n* python 3.9\n* pypy 3\n\n## table of contents\n\n- [table of contents](#table-of-contents)\n- [getting started](#getting-started)\n  - [registration](#registration)\n  - [installation](#installation)\n  - [usage](#usage)\n- [examples](#examples)\n- [api documentation](#api-documentation)\n- [testing](#testing)\n- [making releases](#making-releases)\n\n## getting started\n\nlob python wrapper works in the object oriented style. that is, to make calls you have to call the method on a class and the return types are python objects. to get a `dict` on any object, you can call the `to_dict()` method of the object.\n\nhere's a general overview of the lob services available, click through to read more.\n\n- [postcards api](https://lob.com/products/print-mail/postcards)\n- [letters api](https://lob.com/products/print-mail/letters)\n- [checks api](https://lob.com/products/print-mail/checks)\n- [address verification api](https://lob.com/products/address-verification)\n\nplease read through the official [api documentation](#api-documentation) to get a complete sense of what to expect from each endpoint.\n\n### registration\n\nfirst, you will need to first create an account at [lob.com](https://dashboard.lob.com/#/register) and obtain your test and live api keys.\n\nonce you have created an account, you can access your api keys from the [settings panel](https://dashboard.lob.com/#/settings).\n\n### installation\n\nyou can use `pip` to install the package.\n\n```\npip install lob\n```\n\nto initialize the wrapper, import `lob` and set the `api_key`\n\n```python\nimport lob\nlob.api_key = 'your-api-key'\n\n// set an api version (optional)\nlob.api_version = 'api-version'\n```\n\n### usage\n\nwe've provided an example script you can run in examples/ that has examples of how to use the lob-python wrapper with some of our core endpoints.\n\n## examples\n\nwe've provided various examples for you to try out [here](https://github.com/lob/lob-python/tree/master/examples).\n\nthere are simple scripts to demonstrate how to create all the core lob objects (checks, letters, postcards. etc.) as well as more complex examples that utilize other libraries and external files.\n\n## api documentation\n\nthe full and comprehensive documentation of lob's apis is available [here](https://docs.lob.com/).\n\n## testing\n\nlob-python uses [pipenv](https://docs.pipenv.org/) to manage development environments and dependencies.\n\nyou install all the development requirements by running\n\n```shell\n$ pipenv install --dev\n$ pipenv shell\n```\n\nyou can run all tests with the command `lob_api_key=your_test_api_key pytest` in the main directory.\n\n```shell\n$ lob_api_key=your_test_api_key pytest\n```\n\nalternatively you can add the `lob_api_key` to a `.env` file in the project root directory and use the `pipenv run tests` script.\n\n```shell\npipenv run tests\n```\n\n## making releases\n\nlob-python includes [bumpversion](https://pypi.org/project/bumpversion/) as a development dependency. this\ntool should be used when changing the version number, as it will ensure that it's updated correctly and\nconsistently.\n\nrunning bumpversion will increment the specified version part (`major`, `minor`, `patch`), commit the change,\nand tag it.\n\n```shell\n$ bumpversion <part>\n```\n\nafter the version has been bumped, you can push the change and tag.\n\n```shell\n$ git push origin head\n$ git push origin --tags\n```\n\nfinally, create the distribution and push it to pypi using [twine](https://pypi.org/project/twine/).\n\n```shell\n$ python setup.py sdist\n...\nwriting lob-4.0.0/setup.cfg\ncreating tar archive\nremoving 'lob-4.0.0' (and everything under it)\n$ twine upload dist/lob-4.0.0.tar.gz\n```\n\n---\n\ncopyright &copy; 2013-2019 lob.com\n\nreleased under the mit license, which can be found in the repository in `license.txt`.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "lob",
  "package_url": "https://pypi.org/project/lob/",
  "project_url": "https://pypi.org/project/lob/",
  "project_urls": {
    "Homepage": "https://github.com/lob/lob-python"
  },
  "release_url": "https://pypi.org/project/lob/4.5.4/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "lob python bindings",
  "version": "4.5.4",
  "releases": [],
  "developers": [
    "lob",
    "support@lob.com"
  ],
  "kwds": "lob lob_api_key pip python travis",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_lob",
  "homepage": "https://github.com/lob/lob-python",
  "release_count": 51,
  "dependency_ids": []
}
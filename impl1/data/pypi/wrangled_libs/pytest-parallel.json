{
  "classifiers": [
    "development status :: 3 - alpha",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing",
    "topic :: utilities"
  ],
  "description": "# pytest-parallel\na pytest plugin for parallel and concurrent testing\n\n## what?\n\nthis plugin makes it possible to run tests quickly using multiprocessing (parallelism) and multithreading (concurrency).\n\n## why?\n\n`pytest-xdist` is great to run tests that:\n  1. aren't threadsafe\n  2. perform poorly when multithreaded\n  3. need state isolation\n\n`pytest-parallel` is better for some use cases (like selenium tests) that:\n  1. can be threadsafe\n  2. can use non-blocking io for http requests to make it performant\n  3. manage little or no state in the python environment\n\nput simply, `pytest-xdist` does parallelism while `pytest-parallel` does parallelism and concurrency.\n\n## requirements\n\n* python3 version [3.6+]\n* unix or mac for `--workers`\n* unix, mac, or windows for `--tests-per-worker`\n\n## installation\n\n`pip install pytest-parallel`\n\n## options\n\n* `workers` (optional) - max workers (aka processes) to start. can be a **positive integer or `auto`** which uses one worker per core. **defaults to 1**.\n* `tests-per-worker` (optional) - max concurrent tests per worker. can be a **positive integer or `auto`** which evenly divides tests among the workers up to 50 concurrent tests. **defaults to 1**.\n\n## examples\n\n```bash\n# runs 2 workers with 1 test per worker at a time\npytest --workers 2\n\n# runs 4 workers (assuming a quad-core machine) with 1 test per worker\npytest --workers auto\n\n# runs 1 worker with 4 tests at a time\npytest --tests-per-worker 4\n\n# runs 1 worker with up to 50 tests at a time\npytest --tests-per-worker auto\n\n# runs 2 workers with up to 50 tests per worker\npytest --workers 2 --tests-per-worker auto\n```\n\n## notice\n\nbeginning with python 3.8, forking behavior is forced on macos at the expense of safety.\n\n    changed in version 3.8: on macos, the spawn start method is now the default. the fork start method should be considered unsafe as it can lead to crashes of the subprocess. see bpo-33725.\n\n[source](https://docs.python.org/3/library/multiprocessing.html#contexts-and-start-methods)\n\n## license\n\nmit\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pytest-parallel",
  "package_url": "https://pypi.org/project/pytest-parallel/",
  "project_url": "https://pypi.org/project/pytest-parallel/",
  "project_urls": {
    "Homepage": "https://github.com/browsertron/pytest-parallel"
  },
  "release_url": "https://pypi.org/project/pytest-parallel/0.1.1/",
  "requires_dist": [
    "pytest (>=3.0.0)",
    "tblib"
  ],
  "requires_python": "",
  "summary": "a pytest plugin for parallel and concurrent testing",
  "version": "0.1.1",
  "releases": [],
  "developers": [
    "browsertron",
    "team@browsertron.com"
  ],
  "kwds": "pytest multithreading multiprocessing multithreaded parallelism",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytest_parallel",
  "homepage": "https://github.com/browsertron/pytest-parallel",
  "release_count": 12,
  "dependency_ids": [
    "pypi_pytest",
    "pypi_tblib"
  ]
}
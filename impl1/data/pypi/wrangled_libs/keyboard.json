{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: unix",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "topic :: software development :: libraries :: python modules",
    "topic :: utilities"
  ],
  "description": "\nkeyboard\n========\n\ntake full control of your keyboard with this small python library. hook global events, register hotkeys, simulate key presses and much more.\n\n## features\n\n- **global event hook** on all keyboards (captures keys regardless of focus).\n- **listen** and **send** keyboard events.\n- works with **windows** and **linux** (requires sudo), with experimental **os x** support (thanks @glitchassassin!).\n- **pure python**, no c modules to be compiled.\n- **zero dependencies**. trivial to install and deploy, just copy the files.\n- **python 2 and 3**.\n- complex hotkey support (e.g. `ctrl+shift+m, ctrl+space`) with controllable timeout.\n- includes **high level api** (e.g. [record](#keyboard.record) and [play](#keyboard.play), [add_abbreviation](#keyboard.add_abbreviation)).\n- maps keys as they actually are in your layout, with **full internationalization support** (e.g. `ctrl+\u00e7`).\n- events automatically captured in separate thread, doesn't block main program.\n- tested and documented.\n- doesn't break accented dead keys (i'm looking at you, pyhook).\n- mouse support available via project [mouse](https://github.com/boppreh/mouse) (`pip install mouse`).\n\n## usage\n\ninstall the [pypi package](https://pypi.python.org/pypi/keyboard/):\n\n    pip install keyboard\n\nor clone the repository (no installation required, source files are sufficient):\n\n    git clone https://github.com/boppreh/keyboard\n\nor [download and extract the zip](https://github.com/boppreh/keyboard/archive/master.zip) into your project folder.\n\nthen check the [api docs below](https://github.com/boppreh/keyboard#api) to see what features are available.\n\n\n## example\n\n\n```py\nimport keyboard\n\nkeyboard.press_and_release('shift+s, space')\n\nkeyboard.write('the quick brown fox jumps over the lazy dog.')\n\nkeyboard.add_hotkey('ctrl+shift+a', print, args=('triggered', 'hotkey'))\n\n# press page up then page down to type \"foobar\".\nkeyboard.add_hotkey('page up, page down', lambda: keyboard.write('foobar'))\n\n# blocks until you press esc.\nkeyboard.wait('esc')\n\n# record events until 'esc' is pressed.\nrecorded = keyboard.record(until='esc')\n# then replay back at three times the speed.\nkeyboard.play(recorded, speed_factor=3)\n\n# type @@ then press space to replace with abbreviation.\nkeyboard.add_abbreviation('@@', 'my.long.email@example.com')\n\n# block forever, like `while true`.\nkeyboard.wait()\n```\n\n## known limitations:\n\n- events generated under windows don't report device id (`event.device == none`). [#21](https://github.com/boppreh/keyboard/issues/21)\n- media keys on linux may appear nameless (scan-code only) or not at all. [#20](https://github.com/boppreh/keyboard/issues/20)\n- key suppression/blocking only available on windows. [#22](https://github.com/boppreh/keyboard/issues/22)\n- to avoid depending on x, the linux parts reads raw device files (`/dev/input/input*`)\nbut this requires root.\n- other applications, such as some games, may register hooks that swallow all \nkey events. in this case `keyboard` will be unable to report events.\n- this program makes no attempt to hide itself, so don't use it for keyloggers or online gaming bots. be responsible.\n\n\n",
  "docs_url": null,
  "keywords": "keyboard hook simulate hotkey",
  "license": "mit",
  "name": "keyboard",
  "package_url": "https://pypi.org/project/keyboard/",
  "project_url": "https://pypi.org/project/keyboard/",
  "project_urls": {
    "Homepage": "https://github.com/boppreh/keyboard"
  },
  "release_url": "https://pypi.org/project/keyboard/0.13.5/",
  "requires_dist": [
    "pyobjc ; sys_platform == \"darwin\""
  ],
  "requires_python": "",
  "summary": "hook and simulate keyboard events on windows and linux",
  "version": "0.13.5",
  "releases": [],
  "developers": [
    "boppreh",
    "boppreh@gmail.com"
  ],
  "kwds": "hotkeys add_hotkey hotkey keyboard keyboards",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_keyboard",
  "homepage": "https://github.com/boppreh/keyboard",
  "release_count": 34,
  "dependency_ids": [
    "pypi_pyobjc"
  ]
}
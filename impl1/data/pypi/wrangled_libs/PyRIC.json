{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: gnu general public license v3 (gplv3)",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.0",
    "programming language :: python :: 3.5",
    "topic :: security",
    "topic :: software development",
    "topic :: software development :: libraries",
    "topic :: system :: networking",
    "topic :: utilities"
  ],
  "description": "# pyric 0.1.6.3: python radio interface controller\n## linux wireless library for the python wireless developer and pentester\n\n## description:\npyric (is a linux only) library providing wireless developers and pentesters the\nability to identify, enumerate and manipulate their system's wireless cards\nprogrammatically in python. pentesting applications and scripts written in python\nhave increased dramatically in recent years. however, these tools still rely on\nlinux command lines tools for setup/preparation and restoration of the system for\nuse. until now. why use subprocess.popen, regular expressions and str.find to\ninteract with your wireless cards? pyric is:\n\n1. pythonic: no ctypes, swig etc. pyric redefines c header files as python and\nuses sockets to communicate with the kernel.\n2. self-sufficient: no third-party files used. pyric is completely self-contained.\n3. fast: (relatively speaking) pyric is faster than using command line tools\nthrough subprocess.popen\n4. parseless: get the output you want without parsing output from command line\ntools. never worry about newer iw versions and having to rewrite your parsers.\n5. easy: if you can use iw, you can use pyric.\n\n## current state\natt, pyric pyw provides the following:\n* enumerate interfaces and wireless interfaces\n* identify a cards chipset and driver\n* get/set hardware address\n* get/set ip4 address, netmask and or broadcast\n* turn card on/off\n* get supported standards\n* get supported commands\n* get supported modes\n* get dev info\n* get phy info\n* get link info\n* get/set regulatory domain\n* get/set mode\n* get/set coverage class, rts threshold, fragmentation threshold & retry limits\n* add/delete interfaces\n* enumerate ism and unii channels\n* block/unblock rfkill devices\n* check 'connectivity', disconnect from ap\n\nin utils, several helpers can be found that can be used to:\n* enumerate channels and frequencies and convert between the two\n* manipulate mac addresses and generate random ones\n* fetch and parse the ieee oui text file\n* further rfkill operations to include listing all rfkill devices\n\nat it's heart, pyric is a python port of (a subset of) iw and by extension, a\npython port of netlink w.r.t nl80211 functionality. the original goal of pyric\nwas to provide a simple interface to the underlying nl80211 kernel support,\nhandling the complex operations of netlink seamlessy while maintaining a minimum\nof \"code walking\" to understand, modify and extend. but, why stop there? since\nit's initial inception, pyric has grown. pyric puts iw, ifconfig, rfkill, udevadm,\nairmon-ng and macchanger in your hands (or your program).",
  "docs_url": null,
  "keywords": "linux python nl80211 iw iwconfig ifconfig wireless wlan wifi pentest",
  "license": "gplv3",
  "name": "pyric",
  "package_url": "https://pypi.org/project/PyRIC/",
  "project_url": "https://pypi.org/project/PyRIC/",
  "project_urls": {
    "Download": "https://github.com/wraith-wireless/pyric/archive/0.1.6.3.tar.gz",
    "Homepage": "http://wraith-wireless.github.io/PyRIC/"
  },
  "release_url": "https://pypi.org/project/PyRIC/0.1.6.3/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "python wireless library",
  "version": "0.1.6.3",
  "releases": [],
  "developers": [
    "dale_patterson",
    "wraith.wireless@yandex.com"
  ],
  "kwds": "wlan iwconfig python subprocess pythonic",
  "license_kwds": "gplv3",
  "libtype": "pypi",
  "id": "pypi_pyric",
  "homepage": "http://wraith-wireless.github.io/pyric/",
  "release_count": 14,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: pypy",
    "programming language :: sql",
    "topic :: database",
    "topic :: database :: database engines/servers",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "view manipulation for sqlalchemy\n================================\n\nadds ``createview`` and ``dropview`` constructs to sqlalchemy.\n\nstatus\n------\n\ncurrent version is 0.3.2; releases are infrequent as the code here is small and based on stable pieces of the sqlalchemy api, so there has been minimal maintenance required so far to keep compatibility with new sqlalchemy or python versions.\n\nthis package is working with latest python and sqlalchemy (1.0+ and 2.0) as of early 2023.\n\nusage\n-----\n\nexamples:\n\n    >>> from sqlalchemy import table, metadata\n    >>> from sqlalchemy.sql import text\n    >>> from sqlalchemy_views import createview, dropview\n\n    >>> view = table('my_view', metadata())\n    >>> definition = text(\"select * from my_table\")\n    >>> create_view = createview(view, definition)\n    >>> print(str(create_view.compile()).strip())\n    create view my_view as select * from my_table\n\n    >>> create_view = createview(view, definition, or_replace=true)\n    >>> print(str(create_view.compile()).strip())\n    create or replace view my_view as select * from my_table\n\n    >>> create_view = createview(view, definition, options={'check_option': 'local'})\n    >>> print(str(create_view.compile()).strip())\n    create view my_view with (check_option=local) as select * from my_table\n\n    >>> drop_view = dropview(view)\n    >>> print(str(drop_view.compile()).strip())\n    drop view my_view\n\n    >>> drop_view = dropview(view, if_exists=true, cascade=true)\n    >>> print(str(drop_view.compile()).strip())\n    drop view if exists my_view cascade\n\nnote that the sqlalchemy ``table`` object is used to represent\nboth tables and views. to introspect a view, create a ``table``\nwith ``autoload=true``, and then use sqlalchemy's\n``get_view_definition`` method to generate the second\nargument to ``createview``.\n\n\ninstallation\n------------\n\n``sqlalchemy-views`` is available on pypi and can be installed via ``pip`` ::\n\n    pip install sqlalchemy-views\n\n\nlimitations\n-----------\n\nvarious sql dialects have developed custom\n``create view`` and ``drop view`` syntax.\nthis project aims to provide the core set of functionality\nshared by most database engines.\n\n\nacknowledgements\n----------------\n\nsome design ideas taken from the\n`sqlalchemy usage recipe for views <https://bitbucket.org/zzzeek/sqlalchemy/wiki/usagerecipes/views>`_.\n\npackage structure is based on\n`python-project-template <https://github.com/seanfisk/python-project-template>`_.\n\nand thank you to the various\n`contributors <https://github.com/jklukas/sqlalchemy-views/graphs/contributors>`_!\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "sqlalchemy-views",
  "package_url": "https://pypi.org/project/sqlalchemy-views/",
  "project_url": "https://pypi.org/project/sqlalchemy-views/",
  "project_urls": {
    "Homepage": "https://github.com/jklukas/sqlalchemy-views"
  },
  "release_url": "https://pypi.org/project/sqlalchemy-views/0.3.2/",
  "requires_dist": [
    "sqlalchemy (>=1.0.0)"
  ],
  "requires_python": "",
  "summary": "adds createview and dropview constructs to sqlalchemy",
  "version": "0.3.2",
  "releases": [],
  "developers": [
    "jeff@klukas.net",
    "jeff_klukas"
  ],
  "kwds": "sqlalchemy_views sqlalchemy create_view get_view_definition drop_view",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_sqlalchemy_views",
  "homepage": "https://github.com/jklukas/sqlalchemy-views",
  "release_count": 8,
  "dependency_ids": [
    "pypi_sqlalchemy"
  ]
}
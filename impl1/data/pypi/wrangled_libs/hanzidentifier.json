{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "topic :: text processing :: linguistic"
  ],
  "description": "================\nhanzi identifier\n================\n\n.. image:: https://badge.fury.io/py/hanzidentifier.svg\n    :target: https://pypi.org/project/hanzidentifier\n\n.. image:: https://github.com/tsroten/hanzidentifier/actions/workflows/ci.yml/badge.svg\n    :target: https://github.com/tsroten/hanzidentifier/actions/workflows/ci.yml\n\nhanzi identifier is a simple python module that identifies a string of text as \nhaving simplified or traditional characters.\n\n* github: https://github.com/tsroten/hanzidentifier\n* free software: mit license\n\nabout\n-----\n\neasy-to-use helper functions for identifying strings:\n\n.. code:: python\n\n    >>> import hanzidentifier\n    >>> hanzidentifier.has_chinese('hello my name is john.')\n    false\n    >>> hanzidentifier.is_simplified('john\u8bf4\uff1a\u4f60\u597d\uff01')\n    true\n    >>> hanzidentifier.is_traditional('john\u8aaa\uff1a\u4f60\u597d\uff01')\n    true\n    >>> hanzidentifier.has_chinese('country in simplified: \u56fd\u5bb6. country in traditional: \u570b\u5bb6.')\n    true\n\nhere it is without the helper functions:\n\n.. code:: python\n\n    >>> hanzidentifier.identify('hello my name is thomas.') is hanzidentifier.unknown\n    true\n    >>> hanzidentifier.identify('thomas \u8bf4\uff1a\u4f60\u597d\uff01') is hanzidentifier.simplified\n    true\n    >>> hanzidentifier.identify('thomas \u8aaa\uff1a\u4f60\u597d\uff01') is hanzidentifier.traditional\n    true\n    >>> hanzidentifier.identify('\u4f60\u597d\uff01') is hanzidentifier.both\n    true\n    >>> hanzidentifier.identify('country in simplified: \u56fd\u5bb6. country in traditional: \u570b\u5bb6.' ) is hanzidentifier.mixed\n    true\n\n``hanzidentifier.identify`` has five possible return values:\n\n* ``hanzidentifier.unknown``: there are no recognized chinese characters in the string.\n* ``hanzidentifier.both``: the string is compatible with both simplified and traditional character systems.\n* ``hanzidentifier.traditional``: the string consists of traditional characters.\n* ``hanzidentifier.simplified``: the string consists of simplified characters.\n* ``hanzidentifier.mixed``: the string consists of characters recognized solely as traditional characters and also consists of characters recognized solely as simplified characters.\n\ncharacters that aren't found in cc-cedict are ignored when determining a string's identity.\nhanzi identifier uses the cc-cedict data provided by `zhon <https://github.com/tsroten/zhon>`_ to identify chinese characters.\n\nbecause the traditional and simplified chinese character systems overlap, a\nstring containing simplified characters could identify as\n``hanzidentifier.simplified`` or ``hanzidentifier.both`` depending on if the\ncharacters are also traditional characters.\n\ngetting started\n---------------\n\n* install hanzi identifier: ``$ pip install hanzidentifier``\n* report bugs and ask questions via `github issues <https://github.com/tsroten/hanzidentifier/issues>`_\n* `contribute features or bug fixes <https://github.com/tsroten/hanzidentifier/pulls>`_",
  "docs_url": null,
  "keywords": "characters,chinese,cjk,hanzi,mandarin,simplified,traditional",
  "license": "",
  "name": "hanzidentifier",
  "package_url": "https://pypi.org/project/hanzidentifier/",
  "project_url": "https://pypi.org/project/hanzidentifier/",
  "project_urls": {
    "Changes": "https://github.com/tsroten/hanzidentifier/blob/main/CHANGES.rst",
    "Issue Tracker": "https://github.com/tsroten/hanzidentifier/issues",
    "Source Code": "https://github.com/tsroten/hanzidentifier"
  },
  "release_url": "https://pypi.org/project/hanzidentifier/1.2.0/",
  "requires_dist": [
    "zhon~=2.0"
  ],
  "requires_python": ">=3.7",
  "summary": "python module that identifies chinese text as simplified or traditional.",
  "version": "1.2.0",
  "releases": [],
  "developers": [
    "thomas@roten.us"
  ],
  "kwds": "hanzidentifier python characters hanzi chinese",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_hanzidentifier",
  "homepage": "",
  "release_count": 4,
  "dependency_ids": [
    "pypi_zhon"
  ]
}
{
  "classifiers": [
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "topic :: scientific/engineering"
  ],
  "description": "pyhacrf\r\n=======\r\n.. image:: https://travis-ci.org/dedupeio/pyhacrf.svg?branch=master\r\n    :target: https://travis-ci.org/dedupeio/pyhacrf\r\n    \r\n.. image:: https://ci.appveyor.com/api/projects/status/kibqrd7wnsk2ilpf/branch/master?svg=true\r\n    :target: https://ci.appveyor.com/project/fgregg/pyhacrf\r\n\r\nhidden alignment conditional random field for classifying string pairs -\r\na learnable edit distance.\r\n\r\npart of the dedupe.io cloud service and open source toolset for de-duplicating and finding fuzzy matches in your data: https://dedupe.io\r\n\r\nthis package aims to implement the hacrf machine learning model with a\r\n``sklearn``-like interface. it includes ways to fit a model to training\r\nexamples and score new example.\r\n\r\nthe model takes string pairs as input and classify them into any number\r\nof classes. in mccallum's original paper the model was applied to the\r\ndatabase deduplication problem. each database entry was paired with\r\nevery other entry and the model then classified whether the pair was a\r\n'match' or a 'mismatch' based on training examples of matches and\r\nmismatches.\r\n\r\ni also tried to use it as learnable string edit distance for normalizing\r\nnoisy text. see *a conditional random field for discriminatively-trained\r\nfinite-state string edit distance* by mccallum, bellare, and pereira,\r\nand the report *conditional random fields for noisy text normalisation*\r\nby dirko coetsee.\r\n\r\nexample\r\n-------\r\n\r\n.. code:: python\r\n\r\n    from pyhacrf import stringpairfeatureextractor, hacrf\r\n\r\n    training_x = [('helloooo', 'hello'), # matching examples\r\n                  ('h0me', 'home'),\r\n                  ('krazii', 'crazy'),\r\n                  ('non matching string example', 'no really'), # non-matching examples\r\n                  ('and another one', 'yep')]\r\n    training_y = ['match',\r\n                  'match',\r\n                  'match',\r\n                  'non-match',\r\n                  'non-match']\r\n\r\n    # extract features\r\n    feature_extractor = stringpairfeatureextractor(match=true, numeric=true)\r\n    training_x_extracted = feature_extractor.fit_transform(training_x)\r\n\r\n    # train model\r\n    model = hacrf(l2_regularization=1.0)\r\n    model.fit(training_x_extracted, training_y)\r\n\r\n    # evaluate\r\n    from sklearn.metrics import confusion_matrix\r\n    predictions = model.predict(training_x_extracted)\r\n\r\n    print(confusion_matrix(training_y, predictions))\r\n    > [[0 3]\r\n    >  [2 0]]\r\n\r\n    print(model.predict_proba(training_x_extracted))\r\n    > [[ 0.94914812  0.05085188]\r\n    >  [ 0.92397711  0.07602289]\r\n    >  [ 0.86756034  0.13243966]\r\n    >  [ 0.05438812  0.94561188]\r\n    >  [ 0.02641275  0.97358725]]\r\n\r\ndependencies\r\n------------\r\n\r\nthis package depends on ``numpy``. the lbfgs optimizer in ``pylbfgs`` is\r\nused, but alternative optimizers can be passed.\r\n\r\ninstall\r\n-------\r\n\r\ninstall by running:\r\n\r\n::\r\n\r\n    python setup.py install\r\n\r\nor from pypi:\r\n\r\n::\r\n\r\n    pip install pyhacrf\r\n\r\ndeveloping\r\n----------\r\nclone from repository, then\r\n\r\n::\r\n\r\n    pip install -r requirements.txt\r\n    cython pyhacrf/*.pyx\r\n    python setup.py install\r\n\r\nto deploy to pypi, make sure you have compiled the \\*.pyx files to \\*.c\r\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "pyhacrf-datamade",
  "package_url": "https://pypi.org/project/pyhacrf-datamade/",
  "project_url": "https://pypi.org/project/pyhacrf-datamade/",
  "project_urls": {
    "Homepage": "https://github.com/datamade/pyhacrf"
  },
  "release_url": "https://pypi.org/project/pyhacrf-datamade/0.2.7/",
  "requires_dist": [
    "PyLBFGS >=0.1.3",
    "numpy >=1.14.1 ; python_version < \"3.6\"",
    "numpy >=1.15.0 ; python_version == \"3.7\"",
    "numpy >=1.17.3 ; python_version == \"3.8\"",
    "numpy ; python_version > \"3.8\""
  ],
  "requires_python": "",
  "summary": "hidden alignment conditional random field, a discriminative string edit distance",
  "version": "0.2.7",
  "releases": [],
  "developers": [
    "dirko_coetsee",
    "dpcoetsee@gmail.com",
    "fgregg@gmail.com",
    "forest_gregg"
  ],
  "kwds": "classify classifying pyhacrf sklearn training_x_extracted",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pyhacrf_datamade",
  "homepage": "https://github.com/datamade/pyhacrf",
  "release_count": 9,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_pylbfgs"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: robot framework",
    "framework :: robot framework :: library",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing"
  ],
  "description": "appium library for robotframework\n==================================================\n\nintroduction\n------------\n\nappiumlibrary_ is an appium testing library for `robot framework`_. library can be downloaded from pypi_.\n\nit uses `appium <http://appium.io/>`_ to communicate with android and ios application\nsimilar to how *selenium webdriver* talks to web browser.\n\nit is supporting python 3.7+ (since appium python client doesn't support python 2.7 anymore)\n\n.. image:: https://img.shields.io/pypi/v/robotframework-appiumlibrary.svg\n    :target: https://pypi.python.org/pypi/robotframework-appiumlibrary/\n    :alt: latest pypi version\n\n.. image:: https://img.shields.io/pypi/dm/robotframework-appiumlibrary.svg\n    :target: https://pypi.python.org/pypi/robotframework-appiumlibrary/\n    :alt: number of pypi downloads\n\n\n.. contents::\n\n\nkeyword documentation\n---------------------\n\nsee `keyword documentation`_ for available keywords and more information about the library in general.\n\n\ninstallation\n------------\n\nthe recommended installation method is using\n`pip <http://pip-installer.org>`__::\n\n    pip install --upgrade robotframework-appiumlibrary\n\n\nsee `robot framework installation instructions`_ for detailed information\nabout installing python and robot framework itself.\n\ndevice setup\n------------\nafter installing the library, you still need to setup an simulator/emulator or real device to use in tests.\nios and android have separate paths to follow, and those steps better explained in `appium driver setup guide`_.\nplease follow the **driver-specific setup** according to platform.\n\n\nusage\n-----\n\nto write tests with robot framework and appiumlibrary, \nappiumlibrary must be imported into your rf test suite.\nsee `robot framework user guide <https://robotframework.org/robotframework/latest/robotframeworkuserguide.html>`_\nfor more information.\n\nas it uses appium make sure your appium server is up and running.\nfor how to use appium please refer to `appium documentation <http://appium.io/docs/en/about-appium/getting-started/>`_\n\nwhen using robot framework, it is generally recommended to write tests easy to read/modify.\nthe keywords provided in appiumlibrary are pretty low level. it is thus typically a good idea to write tests using\nrobot framework's higher level keywords that utilize appiumlibrary\nkeywords internally. this is illustrated by the following example\nwhere appiumlibrary keywords like ``input text`` are primarily\nused by higher level keywords like ``input search query``.\n\n.. code:: robotframework\n\n    *** settings ***\n    documentation  simple example using appiumlibrary\n    library  appiumlibrary\n\n    *** variables ***\n    ${android_automation_name}    uiautomator2\n    ${android_app}                ${curdir}/demoapp/apidemos-debug.apk\n    ${android_platform_name}      android\n    ${android_platform_version}   %{android_platform_version=11}\n\n    *** test cases ***\n    should send keys to search box and then check the value\n      open test application\n      input search query  hello world!\n      submit search\n      search query should be matching  hello world!\n\n\n    *** keywords ***\n    open test application\n      open application  http://127.0.0.1:4723/wd/hub  automationname=${android_automation_name}\n      ...  platformname=${android_platform_name}  platformversion=${android_platform_version}\n      ...  app=${android_app}  apppackage=io.appium.android.apis  appactivity=.app.searchinvoke\n\n    input search query\n      [arguments]  ${query}\n      input text  txt_query_prefill  ${query}\n\n    submit search\n      click element  btn_start_search\n\n    search query should be matching\n      [arguments]  ${text}\n      wait until page contains element  android:id/search_src_text\n      element text should be  android:id/search_src_text  ${text}\n\ncreate a file with the content above (name it: ``test_file.robot``) and execute::\n\n    robot test_file.robot\n\nthe above example is single file test case, more examples can be found in a `sample project`_ that illustrates using\nrobot framework and appiumlibrary. check the sample project that you can find examples of mobile web & ios & android.\n\ncontributing\n-------------\nfork the project, make a change, and send a pull request!\n\nproject contributors\n--------------------\n* `serhat bolsu <https://github.com/serhatbolsu>`_\n* `william zhang <https://github.com/jollychang>`_\n* `xie lieping <https://github.com/frankbp>`_\n* `jari nurminen <https://github.com/yahman72>`_\n\nappiumlibrary is modeled after (and forked from)  `appiumandroidlibrary <https://github.com/frankbp/robotframework-appiumandroidlibrary>`_,  but re-implemented to use appium 1.x technologies.\n\n\n.. _appiumlibrary: https://github.com/serhatbolsu/robotframework-appiumlibrary\n.. _robot framework: https://robotframework.org\n.. _keyword documentation: http://serhatbolsu.github.io/robotframework-appiumlibrary/appiumlibrary.html\n.. _pypi: https://pypi.org/project/robotframework-appiumlibrary/\n.. _robot framework installation instructions: https://github.com/robotframework/robotframework/blob/master/install.rst\n.. _appium driver setup guide: http://appium.io/docs/en/about-appium/getting-started/?lang=en\n.. _sample project: https://github.com/serhatbolsu/robotframework-appium-sample\n\n",
  "docs_url": null,
  "keywords": "robotframework testing testautomation mobile appium webdriver app android ios",
  "license": "apache license 2.0",
  "name": "robotframework-appiumlibrary",
  "package_url": "https://pypi.org/project/robotframework-appiumlibrary/",
  "project_url": "https://pypi.org/project/robotframework-appiumlibrary/",
  "project_urls": {
    "Homepage": "https://github.com/serhatbolsu/robotframework-appiumlibrary"
  },
  "release_url": "https://pypi.org/project/robotframework-appiumlibrary/2.0.0/",
  "requires_dist": [
    "decorator (>=3.3.2)",
    "robotframework (>=2.6.0)",
    "docutils (>=0.8.1)",
    "Appium-Python-Client (>=2.7.1)",
    "selenium (>=4.0.0)",
    "kitchen (>=1.2.4)",
    "six (>=1.10.0)"
  ],
  "requires_python": "",
  "summary": "robot framework mobile app testing library for appium client android & ios & web",
  "version": "2.0.0",
  "releases": [],
  "developers": [
    "frankbp@gmail.com",
    "jollychang@gmail.com",
    "serhat_bolsu",
    "serhatbolsu@gmail.com"
  ],
  "kwds": "_appium _appiumlibrary appiumlibrary appium appiumlibrary_",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_robotframework_appiumlibrary",
  "homepage": "https://github.com/serhatbolsu/robotframework-appiumlibrary",
  "release_count": 73,
  "dependency_ids": [
    "pypi_appium_python_client",
    "pypi_decorator",
    "pypi_docutils",
    "pypi_kitchen",
    "pypi_robotframework",
    "pypi_selenium",
    "pypi_six"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: other environment",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "cachetools\n========================================================================\n\n.. image:: https://img.shields.io/pypi/v/cachetools\n   :target: https://pypi.org/project/cachetools/\n   :alt: latest pypi version\n\n.. image:: https://img.shields.io/github/actions/workflow/status/tkem/cachetools/ci.yml\n   :target: https://github.com/tkem/cachetools/actions/workflows/ci.yml\n   :alt: ci build status\n\n.. image:: https://img.shields.io/readthedocs/cachetools\n   :target: https://cachetools.readthedocs.io/\n   :alt: documentation build status\n\n.. image:: https://img.shields.io/codecov/c/github/tkem/cachetools/master.svg\n   :target: https://codecov.io/gh/tkem/cachetools\n   :alt: test coverage\n\n.. image:: https://img.shields.io/librariesio/sourcerank/pypi/cachetools\n   :target: https://libraries.io/pypi/cachetools\n   :alt: libraries.io sourcerank\n\n.. image:: https://img.shields.io/github/license/tkem/cachetools\n   :target: https://raw.github.com/tkem/cachetools/master/license\n   :alt: license\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: code style: black\n\n\nthis module provides various memoizing collections and decorators,\nincluding variants of the python standard library's `@lru_cache`_\nfunction decorator.\n\n.. code-block:: python\n\n   from cachetools import cached, lrucache, ttlcache\n\n   # speed up calculating fibonacci numbers with dynamic programming\n   @cached(cache={})\n   def fib(n):\n       return n if n < 2 else fib(n - 1) + fib(n - 2)\n\n   # cache least recently used python enhancement proposals\n   @cached(cache=lrucache(maxsize=32))\n   def get_pep(num):\n       url = 'http://www.python.org/dev/peps/pep-%04d/' % num\n       with urllib.request.urlopen(url) as s:\n           return s.read()\n\n   # cache weather data for no longer than ten minutes\n   @cached(cache=ttlcache(maxsize=1024, ttl=600))\n   def get_weather(place):\n       return owm.weather_at_place(place).get_weather()\n\nfor the purpose of this module, a *cache* is a mutable_ mapping_ of a\nfixed maximum size.  when the cache is full, i.e. by adding another\nitem the cache would exceed its maximum size, the cache must choose\nwhich item(s) to discard based on a suitable `cache algorithm`_.\n\nthis module provides multiple cache classes based on different cache\nalgorithms, as well as decorators for easily memoizing function and\nmethod calls.\n\n\ninstallation\n------------------------------------------------------------------------\n\ncachetools is available from pypi_ and can be installed by running::\n\n  pip install cachetools\n\ntyping stubs for this package are provided by typeshed_ and can be\ninstalled by running::\n\n  pip install types-cachetools\n\n\nproject resources\n------------------------------------------------------------------------\n\n- `documentation`_\n- `issue tracker`_\n- `source code`_\n- `change log`_\n\n\nrelated projects\n------------------------------------------------------------------------\n\n- asyncache_: helpers to use cachetools with async functions\n- cachetoolsutils_: cachetools utilities\n- `kids.cache`_: kids caching library\n- shelved-cache_: persistent cache for python cachetools\n\n\nlicense\n------------------------------------------------------------------------\n\ncopyright (c) 2014-2023 thomas kemmer.\n\nlicensed under the `mit license`_.\n\n\n.. _@lru_cache: https://docs.python.org/3/library/functools.html#functools.lru_cache\n.. _mutable: https://docs.python.org/dev/glossary.html#term-mutable\n.. _mapping: https://docs.python.org/dev/glossary.html#term-mapping\n.. _cache algorithm: https://en.wikipedia.org/wiki/cache_algorithms\n\n.. _pypi: https://pypi.org/project/cachetools/\n.. _typeshed: https://github.com/python/typeshed/\n.. _documentation: https://cachetools.readthedocs.io/\n.. _issue tracker: https://github.com/tkem/cachetools/issues/\n.. _source code: https://github.com/tkem/cachetools/\n.. _change log: https://github.com/tkem/cachetools/blob/master/changelog.rst\n.. _mit license: https://raw.github.com/tkem/cachetools/master/license\n\n.. _asyncache: https://pypi.org/project/asyncache/\n.. _cachetoolsutils: https://pypi.org/project/cachetoolsutils/\n.. _kids.cache: https://pypi.org/project/kids.cache/\n.. _shelved-cache: https://pypi.org/project/shelved-cache/\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "cachetools",
  "package_url": "https://pypi.org/project/cachetools/",
  "project_url": "https://pypi.org/project/cachetools/",
  "project_urls": {
    "Homepage": "https://github.com/tkem/cachetools/"
  },
  "release_url": "https://pypi.org/project/cachetools/5.3.2/",
  "requires_dist": [],
  "requires_python": ">=3.7",
  "summary": "extensible memoizing collections and decorators",
  "version": "5.3.2",
  "releases": [],
  "developers": [
    "thomas_kemmer",
    "tkemmer@computer.org"
  ],
  "kwds": "_cachetoolsutils cachetoolsutils_ cachetoolsutils cachetools cache_",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_cachetools",
  "homepage": "https://github.com/tkem/cachetools/",
  "release_count": 46,
  "dependency_ids": []
}
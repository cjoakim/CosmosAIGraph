{
  "classifiers": [
    "development status :: 3 - alpha",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "framework :: django :: 4.1",
    "framework :: django :: 4.2",
    "intended audience :: developers",
    "license :: osi approved :: gnu affero general public license v3 or later (agplv3+)",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.8"
  ],
  "description": "edx-bulk-grades\n=============================\n\n|pypi-badge| |travis-badge| |codecov-badge| |doc-badge| |pyversions-badge|\n|license-badge|\n\nsupport for bulk scoring and grading. this adds models and an api for reading and modifying\nscores and grades in bulk.\n\noverview\n---------\n\nthe ``readme.rst`` file should then provide an overview of the code in this\nrepository, including the main components and useful entry points for starting\nto understand the code in more detail.\nedx-bulk-grades is a library that runs under lms. it uses the configuration settings defined in lms as well.\nin order to use, the library must be installed into edx-platform.\n\nusing with docker devstack\n--------------------------\nprerequisite: have your open edx https://github.com/openedx/devstack properly installed.\nnote: when you see \"from inside the lms\" below, it means that you've run ``make lms-shell`` from your devstack directory\nand are on a command prompt inside the lms container.\n\n1. | clone this repo into ``../src/`` directory (relative to your \"devstack\" repo location). this will mount the directory\n   | in a way that is accessible to the lms container.\n\n2. from inside the lms, uninstall bulk-grades and reinstall your local copy. you can just copy the following line::\n\n    pip uninstall edx-bulk-grades -y; pip install -e /edx/src/edx-bulk-grades\n\n   or, you can run the following make command::\n\n    make install-local\n\n3. now, get your bulk-grades development environment set up::\n\n    cd /edx/src/edx-bulk-grades\n    virtualenv edx-bulk-grades-env\n    source edx-bulk-grades-env/bin/activate\n    make requirements\n\nmaking code changes\n-------------------\n\n1. | after checking out a new branch, increment ``__version__`` by the smallest possible value located in ``bulk_grades/__init__.py``.\n   | this will allow edx-platform to pick up the new version.\n\n2. | once a branch has been merged, it is necessary to make a release on github, specifying the new version from\n   | ``__version__`` set above.\n\n3. in order for platform to use the newest version of bulk-grades, it is necessary to run the::\n\n    $ make upgrade\n\nfrom docker shell of edx-platform. this will increment the version of edx-bulk-grades to the correct one.\n\n4. once the code from step 3 is merged, this will trigger deployment of the correct versions of edx platform and bulk-grades.\n\nunit testing\n------------\nmock_apps folder: since bulk_grades depends on platform during actual runtime, for unit tests, we need to mock various\nendpoints and calls. to this end, they are mocked in the mock_apps folder.\n\nsince edx-bulk grades runs under platform, it is necessary to connect to platform docker::\n\n    $ make lms-shell\n\nfollowed by::\n\n    $ cd /edx/src/edx-bulk-grades\n    make test\n\nthis will run the unit tests and code coverage numbers\n\nlicense\n-------\n\nthe code in this repository is licensed under the agpl 3.0 unless\notherwise noted.\n\nplease see ``license.txt`` for details.\n\nhow to contribute\n-----------------\n\ncontributions are very welcome.\n\nplease read `how to contribute <https://github.com/openedx/.github/blob/master/contributing.md>`_ for details.\n\nthe pull request description template should be automatically applied if you are creating a pull request from github. otherwise you\ncan find it at `pull_request_template.md <https://github.com/openedx/edx-bulk-grades/blob/master/.github/pull_request_template.md>`_.\n\nthe issue report template should be automatically applied if you are creating an issue on github as well. otherwise you\ncan find it at `issue_template.md <https://github.com/openedx/edx-bulk-grades/blob/master/.github/issue_template.md>`_.\n\nreporting security issues\n-------------------------\n\nplease do not report security issues in public. please email security@edx.org.\n\ngetting help\n------------\n\nhave a question about this repository, or about open edx in general?  please\nrefer to this `list of resources`_ if you need any assistance.\n\n.. _list of resources: https://open.edx.org/getting-help\n\n\n.. |pypi-badge| image:: https://img.shields.io/pypi/v/edx-bulk-grades.svg\n    :target: https://pypi.python.org/pypi/edx-bulk-grades/\n    :alt: pypi\n\n.. |travis-badge| image:: https://travis-ci.com/edx/edx-bulk-grades.svg?branch=master\n    :target: https://travis-ci.com/edx/edx-bulk-grades\n    :alt: travis\n\n.. |codecov-badge| image:: http://codecov.io/github/edx/edx-bulk-grades/coverage.svg?branch=master\n    :target: http://codecov.io/github/edx/edx-bulk-grades?branch=master\n    :alt: codecov\n\n.. |doc-badge| image:: https://readthedocs.org/projects/edx-bulk-grades/badge/?version=latest\n    :target: http://edx-bulk-grades.readthedocs.io/en/latest/\n    :alt: documentation\n\n.. |pyversions-badge| image:: https://img.shields.io/pypi/pyversions/edx-bulk-grades.svg\n    :target: https://pypi.python.org/pypi/edx-bulk-grades/\n    :alt: supported python versions\n\n.. |license-badge| image:: https://img.shields.io/github/license/edx/edx-bulk-grades.svg\n    :target: https://github.com/openedx/edx-bulk-grades/blob/master/license.txt\n    :alt: license\n\n\nchange log\n----------\n\n..\n   all enhancements and patches to bulk_grades will be documented\n   in this file.  it adheres to the structure of http://keepachangelog.com/ ,\n   but in restructuredtext instead of markdown (for ease of incorporation into\n   sphinx documentation and the pypi description).\n\n   this project adheres to semantic versioning (http://semver.org/).\n\n.. there should always be an \"unreleased\" section for changes pending release.\n\nunreleased\n\n\n\n[1.0.2] - 2023-06-14\n~~~~~~~~~~~~~~~~~~~~\n* support added for django 4.2.\n* switch from ``edx-sphinx-theme`` to ``sphinx-book-theme`` since the former is\n  deprecated\n\n\n[1.0.1] - 2022-12-21\n* fix a bug in building error response messaging.\n\n[1.0.0] - 2022-02-16\n* dropped support for django22, 30 and 31\n* added support for django40\n~~~~~~~~~~\n\n[0.9.12 - 2021-09-02\n* fix grade history not rendering on error\n~~~~~~~~~~\n\n[0.9.1] - 2021-08-02\n* feat repeat user error should also show the first occurence\n~~~~~~~~~~\n\n[0.9.0] - 2021-07-20\n~~~~~~~~~~~~~~~~~~~~\n* added support for django 3.2\n\n[0.8.14] - 2021-07-12\n* update csv import error message\n=======\n\n[0.8.13] - 2021-07-12\n~~~~~~~~~~~~~~~~~~~~~\n* fix bug where we ignore repeat user in the csv import\n\n[0.8.12] - 2021-06-21\n~~~~~~~~~~~~~~~~~~~~~\n* fixed import csv to not working with multiple sections per-user override\n\n[0.8.11] - 2021-07-09\n~~~~~~~~~~~~~~~~~~~~~\n* fixed a bug causing bulk management import history to break when import had pre-filtered columns\n\n[0.8.10] - 2021-05-14\n~~~~~~~~~~~~~~~~~~~~~\n* updated dependencies\n\n[0.8.9] - 2021-04-09\n~~~~~~~~~~~~~~~~~~~~~\n* updated dependencies\n\n[0.8.8] - 2021-04-08\n~~~~~~~~~~~~~~~~~~~~~\n* added excludedcourseroles to grade export endpoint\n\n[0.8.7] - 2021-03-15\n~~~~~~~~~~~~~~~~~~~~~\n* upgrade super-csv to 2.0.1\n* only show modified subsections in the bulk grade override report.\n\n[0.8.6] - 2021-01-22\n~~~~~~~~~~~~~~~~~~~~~\n* added a management command ``install-local`` that will install your local code into devstack lms\n* gradecsvprocessor export now includes an additional column per subsection, ``grade-{subsection_id}``. \n  this column is equal to the ``original_grade`` column for that subsection if there is no override, or equal to ``previous_override`` if there is an override.\n\n[0.8.5] - 2020-12-24\n~~~~~~~~~~~~~~~~~~~~~\n* upgrading celery to 5.0\n* removed python 3.5 classifier as its support is dropped earlier\n\n[0.8.4] - 2020-12-24\n~~~~~~~~~~~~~~~~~~~~~\n* adding celery5.0 testing using tox.\n\n[0.8.3] - 2020-11-19\n~~~~~~~~~~~~~~~~~~~~~\n* updated the build status badge in readme.rst to point to travis-ci.com instead of travis-ci.org\n\n[0.8.2] - 2020-11-02\n~~~~~~~~~~~~~~~~~~~~~\n* added ``active_only`` field to ``gradecsvprocessor``\n* for grade csv bulk download, only include active enrollments\n\n[0.8.0] - 2020-09-03\n~~~~~~~~~~~~~~~~~~~~~\n* upgraded to celery 4.2.2\n* removed django-celery\n\n[0.6.6] - 2019-12-13\n~~~~~~~~~~~~~~~~~~~~~\n* added support for django22.\n\n[0.6.5] - 2019-12-05\n~~~~~~~~~~~~~~~~~~~~~\n* in ``get_scores()``, account for case where no ``scoreoverrider`` exists.\n\n[0.6.4] - 2019-09-24\n~~~~~~~~~~~~~~~~~~~~~\n* ``gradecsvprocessor.save()`` should return something.\n\n[0.6.3] - 2019-09-24\n~~~~~~~~~~~~~~~~~~~~~\n* upgrade super-csv to 0.9.4, make sure to pass ``user_id`` to gradecsvprocessor.__init__().\n\n[0.6.2] - 2019-09-23\n~~~~~~~~~~~~~~~~~~~~~\n* upgrade super-csv to 0.9.3\n\n[0.6.1] - 2019-09-17\n~~~~~~~~~~~~~~~~~~~~~\n* call grades api with `comment` when doing bulk upload\n* add `user_id` field to gradecsvprocessor to fix bulk_upload history entries\n\n[0.6.0] - 2019-09-10\n~~~~~~~~~~~~~~~~~~~~~\n* prevent grade and intervention csv processors from producing duplicate columns.\n\n[0.5.10] - 2019-09-06\n~~~~~~~~~~~~~~~~~~~~~\n* prevent user from setting negative grades\n\n[0.5.9] - 2019-08-28\n~~~~~~~~~~~~~~~~~~~~\n* make intervention report display either grade override if exists or original grade.\n\n[0.5.8] - 2019-08-26\n~~~~~~~~~~~~~~~~~~~~\n* make intervention masters track nly. some clan up.\n\n[0.5.3] - 2019-08-16\n~~~~~~~~~~~~~~~~~~~~\n* add support for filters to interventions csv report endpoint, mirroring bulk management filters\n\n[0.5.2] - 2019-08-15\n~~~~~~~~~~~~~~~~~~~~\n* bring datasource for grade information inline with what the rest of gradebook uses\n\n[0.4.4] - 2019-08-13\n~~~~~~~~~~~~~~~~~~~~\nadd ability to filter by course grade, provided as a percentage to the endpoint.\n\n[0.4.3] - 2019-08-12\n~~~~~~~~~~~~~~~~~~~~\nadd ability to filter by subsection grade, provided as a percentage to the endpoint\n\n[0.4.1] - 2019-08-01\n~~~~~~~~~~~~~~~~~~~~\nadded ability to filter by subsection & assignment grading type for bulk management csv downloads.\n\n[0.1.4] - 2019-07-02\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nadded an endpoint for this history of bulk management operations on grade overrides.\n\n[0.1.0] - 2019-05-24\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nadded\n_____\n\n* first release on pypi.\n\n\n",
  "docs_url": null,
  "keywords": "django edx",
  "license": "agpl 3.0",
  "name": "edx-bulk-grades",
  "package_url": "https://pypi.org/project/edx-bulk-grades/",
  "project_url": "https://pypi.org/project/edx-bulk-grades/",
  "project_urls": {
    "Homepage": "https://github.com/openedx/edx-bulk-grades"
  },
  "release_url": "https://pypi.org/project/edx-bulk-grades/1.0.2/",
  "requires_dist": [
    "Django",
    "slumber",
    "requests",
    "super-csv",
    "django-model-utils",
    "edx-opaque-keys"
  ],
  "requires_python": "",
  "summary": "support for bulk scoring and grading",
  "version": "1.0.2",
  "releases": [],
  "developers": [
    "edx",
    "oscm@edx.org"
  ],
  "kwds": "bulk_grades django22 django grades django40",
  "license_kwds": "agpl 3.0",
  "libtype": "pypi",
  "id": "pypi_edx_bulk_grades",
  "homepage": "https://github.com/openedx/edx-bulk-grades",
  "release_count": 50,
  "dependency_ids": [
    "pypi_django",
    "pypi_django_model_utils",
    "pypi_edx_opaque_keys",
    "pypi_requests",
    "pypi_slumber",
    "pypi_super_csv"
  ]
}
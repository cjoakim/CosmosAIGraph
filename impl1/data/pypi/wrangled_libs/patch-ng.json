{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "topic :: software development :: build tools"
  ],
  "description": "[![build status travis ci](https://travis-ci.org/conan-io/python-patch-ng.svg?branch=master)](https://travis-ci.org/conan-io/python-patch-ng)\n[![build status appveyor](https://ci.appveyor.com/api/projects/status/i4r6lf62slvx82db?svg=true)](https://ci.appveyor.com/project/conanciintegration/python-patch-ng)\n[![pypi](https://img.shields.io/pypi/v/patch-ng)](https://pypi.python.org/pypi/patch-ng)\n\n## patch ng (new generation)\n\n#### library to parse and apply unified diffs.\n\n#### why did we fork this project?\n\nthis project is a fork from the original [python-patch](https://github.com/techtonik/python-patch) project.\n\nas any other project, bugs are common during the development process, the combination of issues + pull requests are\nable to keep the constant improvement of a project. however, both community and author need to be aligned. when users,\ndevelopers, the community, needs a fix which are important for their projects, but there is no answer from the author,\nor the time for response is not enough, then the most plausible way is forking and continuing a parallel development.\n\nthat's way we forked the original and accepted most of prs waiting for review since jun/2019 (5 months from now).\n\n### features\n\n * python 2 and 3 compatible\n * automatic correction of\n   * linefeeds according to patched file\n   * diffs broken by stripping trailing whitespace\n   * a/ and b/ prefixes\n * single file, which is a command line tool and a library\n * no dependencies outside python stdlib\n * patch format detection (svn, hg, git)\n * nice diffstat histogram\n * linux / windows / os x\n * test coverage\n\nthings that don't work out of the box:\n\n * file renaming, creation and removal\n * directory tree operations\n * version control specific properties\n * non-unified diff formats\n\n\n### usage\n\ndownload **patch_ng.py** and run it with python. it is a self-contained\nmodule without external dependencies.\n\n    patch_ng.py diff.patch\n\nyou can also run the .zip file.\n\n    python patch-ng-1.17.zip diff.patch\n\n### installation\n\n**patch_ng.py** is self sufficient. you can copy it into your repository\nand use it from here. this setup will always be repeatable. but if\nyou need to add `patch` module as a dependency, make sure to use strict\nspecifiers to avoid hitting an api break when version 2 is released:\n\n    pip install \"patch-ng\"\n\n\n### other stuff\n\n* [changes](doc/changes.md)\n* [license: mit](license)\n* [credits](doc/credits)",
  "docs_url": null,
  "keywords": "patch,parse,diff,strip,diffstat",
  "license": "mit",
  "name": "patch-ng",
  "package_url": "https://pypi.org/project/patch-ng/",
  "project_url": "https://pypi.org/project/patch-ng/",
  "project_urls": {
    "Homepage": "https://github.com/conan-io/python-patch"
  },
  "release_url": "https://pypi.org/project/patch-ng/1.17.4/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "library to parse and apply unified diffs.",
  "version": "1.17.4",
  "releases": [],
  "developers": [
    "conan",
    "info@conan.io"
  ],
  "kwds": "forking diffstat fork patch diffs",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_patch_ng",
  "homepage": "https://github.com/conan-io/python-patch",
  "release_count": 5,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: gnu lesser general public license v3 or later (lgplv3+)",
    "natural language :: english",
    "programming language :: python :: 3.6",
    "topic :: scientific/engineering :: mathematics"
  ],
  "description": "# spgl1: spectral projected gradient for l1 minimization\n[![build status](https://travis-ci.org/drrelyea/spgl1.svg?branch=master)](https://travis-ci.org/drrelyea/spgl1)\n[![pypi version](https://badge.fury.io/py/spgl1.svg)](https://badge.fury.io/py/spgl1)\n[![documentation status](https://readthedocs.org/projects/spgl1/badge/?version=latest)](https://spgl1.readthedocs.io/en/latest/?badge=latest)\n\noriginal home page: http://www.cs.ubc.ca/labs/scl/spgl1/\n\n## introduction\nspgl1 is a solver for large-scale one-norm\nregularized least squares.\n\nit is designed to solve any of the following three problems:\n\n1. basis pursuit denoise (bpdn):\n   ``minimize  ||x||_1  subject to  ||ax - b||_2 <= sigma``,\n\n2. basis pursuit (bp):\n   ``minimize   ||x||_1  subject to  ax = b``\n\n3. lasso:\n   ``minimize  ||ax - b||_2  subject to  ||x||_1 <= tau``,\n\nthe matrix ``a`` can be defined explicitly, or as an operator\nthat returns both both ``ax`` and ``a'b``.\n\nspgl1 can solve these three problems in both the real and complex domains.\n\n## installation\n\n#### from pypi\n\nif you want to use ``spgl1`` within your codes, install it in your\npython environment by typing the following command in your terminal:\n\n```\npip install spgl1\n```\n\n#### from source\n\nfirst of all clone the repo. to install ``spgl1`` within your current\nenvironment, simply type:\n```\nmake install\n```\nor as a developer:\n```\nmake dev-install\n```\n\nto install ``spgl1`` in a new conda environment, type:\n```\nmake install_conda\n```\nor as a developer:\n```\nmake dev-install_conda\n```\n\n\n## getting started\nexamples can be found in the ``examples`` folder in the form of\njupyter notebooks.\n\n## documentation\nthe official documentation is built with sphinx and hosted on\n[readthedocs](https://spgl1.readthedocs.io/en/latest/).\n\n\n## references\n\nthe algorithm implemented by spgl1 is described in these two papers\n\n- e. van den berg and m. p. friedlander, \"probing the pareto frontier\n  for basis pursuit solutions\", siam j. on scientific computing,\n  31(2):890-912, november 2008\n\n- e. van den berg and m. p. friedlander, \"sparse optimization with\n  least-squares constraints\", tech. rep. tr-2010-02, dept of computer\n  science, univ of british columbia, january 2010\n\n\n",
  "docs_url": null,
  "keywords": "algebra,inverse problems,large-scale optimization",
  "license": "",
  "name": "spgl1",
  "package_url": "https://pypi.org/project/spgl1/",
  "project_url": "https://pypi.org/project/spgl1/",
  "project_urls": {
    "Homepage": "https://github.com/drrelyea/SPGL1_python_port"
  },
  "release_url": "https://pypi.org/project/spgl1/0.0.2/",
  "requires_dist": [
    "numpy (>=1.15.0)",
    "scipy"
  ],
  "requires_python": "",
  "summary": " spgl1: a solver for large-scale sparse reconstruction.",
  "version": "0.0.2",
  "releases": [],
  "developers": [
    "drrelyea@gmail.com"
  ],
  "kwds": "spgl1 minimization optimization minimize lasso",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_spgl1",
  "homepage": "https://github.com/drrelyea/spgl1_python_port",
  "release_count": 3,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_scipy"
  ]
}
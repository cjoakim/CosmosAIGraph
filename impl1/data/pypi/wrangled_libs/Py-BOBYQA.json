{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "framework :: ipython",
    "framework :: jupyter",
    "intended audience :: financial and insurance industry",
    "intended audience :: science/research",
    "license :: osi approved :: gnu general public license (gpl)",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: mathematics"
  ],
  "description": "====================================================================\npy-bobyqa: derivative-free solver for bound-constrained minimization\n====================================================================\n\n.. image::  https://github.com/numericalalgorithmsgroup/pybobyqa/actions/workflows/python_testing.yml/badge.svg\n   :target: https://github.com/numericalalgorithmsgroup/pybobyqa/actions\n   :alt: build status\n\n.. image::  https://img.shields.io/badge/license-gpl%20v3-blue.svg\n   :target: https://www.gnu.org/licenses/gpl-3.0\n   :alt: gnu gpl v3 license\n\n.. image:: https://img.shields.io/pypi/v/py-bobyqa.svg\n   :target: https://pypi.python.org/pypi/py-bobyqa\n   :alt: latest pypi version\n\n.. image:: https://zenodo.org/badge/doi/10.5281/zenodo.2630437.svg\n   :target: https://doi.org/10.5281/zenodo.2630437\n   :alt: doi:10.5281/zenodo.2630437\n\n.. image:: https://static.pepy.tech/personalized-badge/py-bobyqa?period=total&units=international_system&left_color=black&right_color=green&left_text=downloads\n :target: https://pepy.tech/project/py-bobyqa\n   :alt: total downloads\n\npy-bobyqa is a flexible package for solving bound-constrained general objective minimization, without requiring derivatives of the objective. at its core, it is a python implementation of the bobyqa algorithm by powell, but py-bobyqa has extra features improving its performance on some problems (see the papers below for details). py-bobyqa is particularly useful when evaluations of the objective function are expensive and/or noisy.\n\nmore details about py-bobyqa and its enhancements over bobyqa can be found in our papers:\n\n1. coralia cartis, jan fiala, benjamin marteau and lindon roberts, `improving the flexibility and robustness of model-based derivative-free optimization solvers <https://doi.org/10.1145/3338517>`_, *acm transactions on mathematical software*, 45:3 (2019), pp. 32:1-32:41 [`arxiv preprint: 1804.00154 <https://arxiv.org/abs/1804.00154>`_] \n2. coralia cartis, lindon roberts and oliver sheridan-methven, `escaping local minima with derivative-free methods: a numerical investigation <https://doi.org/10.1080/02331934.2021.1883015>`_, *optimization* (2021). [`arxiv preprint: 1812.11343 <https://arxiv.org/abs/1812.11343>`_] \n\nplease cite [1] when using py-bobyqa for local optimization, and [1,2] when using py-bobyqa's global optimization heuristic functionality. for reproducibility of all figures, please feel free to contact the authors.\n\nthe original paper by powell is: m. j. d. powell, the bobyqa algorithm for bound constrained optimization without derivatives, technical report damtp 2009/na06, university of cambridge (2009), and the original fortran implementation is available `here <http://mat.uc.pt/~zhang/software.html>`_.\n\nif you are interested in solving least-squares minimization problems, you may wish to try `dfo-ls <https://github.com/numericalalgorithmsgroup/dfols>`_, which has the same features as py-bobyqa (plus some more), and exploits the least-squares problem structure, so performs better on such problems.\n\ndocumentation\n-------------\nsee manual.pdf or the `online manual <https://numericalalgorithmsgroup.github.io/pybobyqa/>`_.\n\ncitation\n--------\nif you use py-bobyqa in a paper, please cite:\n\ncartis, c., fiala, j., marteau, b. and roberts, l., improving the flexibility and robustness of model-based derivative-free optimization solvers, *acm transactions on mathematical software*, 45:3 (2019), pp. 32:1-32:41.\n\nif you use py-bobyqa's global optimization heuristic, please cite the above and also\n\ncartis, c., roberts, l. and sheridan-methven, o., escaping local minima with derivative-free methods: a numerical investigation, optimization, (2021). \n\nrequirements\n------------\npy-bobyqa requires the following software to be installed:\n\n* python 2.7 or python 3 (http://www.python.org/)\n\nadditionally, the following python packages should be installed (these will be installed automatically if using *pip*, see `installation using pip`_):\n\n* numpy 1.11 or higher (http://www.numpy.org/)\n* scipy 0.18 or higher (http://www.scipy.org/)\n* pandas 0.17 or higher (http://pandas.pydata.org/)\n\n**optional package:** py-bobyqa versions 1.2 and higher also support the `trustregion <https://github.com/lindonroberts/trust-region>`_ package for fast trust-region subproblem solutions. to install this, make sure you have a fortran compiler (e.g. `gfortran <https://gcc.gnu.org/wiki/gfortran>`_) and numpy installed, then run :code:`pip install trustregion`. you do not have to have trustregion installed for py-bobyqa to work, and it is not installed by default.\n\ninstallation using pip\n----------------------\nfor easy installation, use `pip <http://www.pip-installer.org/>`_ as root:\n\n .. code-block:: bash\n\n    $ [sudo] pip install py-bobyqa\n\nor alternatively *easy_install*:\n\n .. code-block:: bash\n\n    $ [sudo] easy_install py-bobyqa\n\nif you do not have root privileges or you want to install py-bobyqa for your private use, you can use:\n\n .. code-block:: bash\n\n    $ pip install --user py-bobyqa\n\nwhich will install py-bobyqa in your home directory.\n\nnote that if an older install of py-bobyqa is present on your system you can use:\n\n .. code-block:: bash\n\n    $ [sudo] pip install --upgrade py-bobyqa\n\nto upgrade py-bobyqa to the latest version.\n\nmanual installation\n-------------------\nalternatively, you can download the source code from `github <https://github.com/numericalalgorithmsgroup/pybobyqa>`_ and unpack as follows:\n\n .. code-block:: bash\n\n    $ git clone https://github.com/numericalalgorithmsgroup/pybobyqa\n    $ cd pybobyqa\n\npy-bobyqa is written in pure python and requires no compilation. it can be installed using:\n\n .. code-block:: bash\n\n    $ [sudo] pip install .\n\nif you do not have root privileges or you want to install py-bobyqa for your private use, you can use:\n\n .. code-block:: bash\n\n    $ pip install --user .\n\ninstead.\n\nto upgrade py-bobyqa to the latest version, navigate to the top-level directory (i.e. the one containing :code:`setup.py`) and rerun the installation using :code:`pip`, as above:\n\n .. code-block:: bash\n\n    $ git pull\n    $ [sudo] pip install .  # with admin privileges\n\ntesting\n-------\nif you installed py-bobyqa manually, you can test your installation by running:\n\n .. code-block:: bash\n\n    $ python setup.py test\n\nalternatively, the html documentation provides some simple examples of how to run py-bobyqa.\n\nexamples\n--------\nexamples of how to run py-bobyqa are given in the `online documentation <https://numericalalgorithmsgroup.github.io/pybobyqa/>`_, and the `examples directory <https://github.com/numericalalgorithmsgroup/pybobyqa/tree/master/examples>`_ in github.\n\nuninstallation\n--------------\nif py-bobyqa was installed using *pip* you can uninstall as follows:\n\n .. code-block:: bash\n\n    $ [sudo] pip uninstall py-bobyqa\n\nif py-bobyqa was installed manually you have to remove the installed files by hand (located in your python site-packages directory).\n\nbugs\n----\nplease report any bugs using github's issue tracker.\n\nlicense\n-------\nthis algorithm is released under the gnu gpl license. please `contact nag <http://www.nag.com/content/worldwide-contact-information>`_ for alternative licensing.",
  "docs_url": null,
  "keywords": "mathematics derivative free optimization",
  "license": "gnu gpl",
  "name": "py-bobyqa",
  "package_url": "https://pypi.org/project/Py-BOBYQA/",
  "project_url": "https://pypi.org/project/Py-BOBYQA/",
  "project_urls": {
    "Download": "https://github.com/numericalalgorithmsgroup/pybobyqa/archive/v1.4.tar.gz",
    "Homepage": "https://github.com/numericalalgorithmsgroup/pybobyqa/"
  },
  "release_url": "https://pypi.org/project/Py-BOBYQA/1.4/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a flexible derivative-free solver for (bound constrained) general objective minimization",
  "version": "1.4",
  "releases": [],
  "developers": [
    "lindon.roberts@sydney.edu.au",
    "lindon_roberts"
  ],
  "kwds": "optimization minimization constrained solver solvers",
  "license_kwds": "gnu gpl",
  "libtype": "pypi",
  "id": "pypi_py_bobyqa",
  "homepage": "https://github.com/numericalalgorithmsgroup/pybobyqa/",
  "release_count": 8,
  "dependency_ids": []
}
{
  "classifiers": [
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python :: 3.6"
  ],
  "description": "a library for working with ontap's rest apis simply in python\n\n\n# netapp ontap\nthe python client library is a package you can use when writing scripts to access the\nontap rest api. it provides support for several underlying services, including connection\nmanagement, asynchronous request processing, and exception handling. by using the python\nclient library, you can quickly develop robust code to support the automation of your ontap\ndeployments.\n\n# getting started\nthe python client library is available as the package **netapp_ontap** at the python package\nindex (pypi) web site at https://pypi.org/project/netapp-ontap\n\n## software requirements\nbefore installing the python client library, you must make sure the following packages are\ninstalled on your system:  \n\n* python 3.6 or later    \n* requests 2.26.0 or later   \n* requests-toolbelt 0.9.1 or later\n* marshmallow 3.2.1 or later  \n\nthe library requires version 1.26.7 or later of urllib3 due to outstanding cves against\nolder versions. it also requires version 2022.12.7 of certifi due to a cve that removed\nroot certificates from trustcor from the root store. however, it will still work with older\nversions of urllib3 and certifi as long as the versions of urllib3 and certifi are compatible\nwith the requests package.\n\n\n## installing and importing the package\nyou must install the package using the pip utility:\n\n```\npip install netapp-ontap\n```\n\nafter installing the package, you can import the objects you need into your application:\n\n```python\nfrom netapp_ontap.resources import volume, snapshot\n```\n\n## creating an object\n\nyou can create an object in several different ways. here are three examples of\ncreating an equivalent `volume` object.\n\n```python\nfrom netapp_ontap.resources import volume\n\n# example 1 - keyword arguments\nvolume = volume(name='vol1', svm={'name': 'vs1'}, aggregates=[{'name': 'aggr1'}])\n\n# example 2 - dict as keyword arguments\ndata = {\n    'name': 'vol1',\n    'svm': {'name': 'vs1'},\n    'aggregates': [{'name': 'aggr1'}],\n}\nvolume = volume(**data)\n\n# example 3 - using the from_dict() method\nvolume = volume.from_dict({\n    'name': 'vol1',\n    'svm': {'name': 'vs1'},\n    'aggregates': [{'name': 'aggr1'}],\n})\n```\n\n## performing actions on an object\n\nafter you create an object, you can perform actions on the object based\non the purpose and design of your application. the example below illustrates\nhow to create a new volume and then take a snapshot.\n\nnote that when using the library, in all cases you must first establish a\nconnection to the management lif of the ontap system using the\n`netapp_ontap.host_connection.hostconnection` object. in the example below,\nthe connection is created and then set as the global default.\nthis means that all objects and the associated actions reuse\nthis same connection. see *host connections* for more information.\n\n```python\nfrom netapp_ontap import config, hostconnection\nfrom netapp_ontap.resources import volume, snapshot\n\nconfig.connection = hostconnection('myhost.mycompany.com', 'username', 'password')\n\nvolume = volume(name='vol1', svm={'name': 'vs1'}, aggregates=[{'name': 'aggr1'}])\nvolume.post()\nsnapshot = snapshot.from_dict({\n    'name': '%s_snapshot' % volume.name,\n    'comment': 'a snapshot of %s' % volume.name,\n    'volume': volume.to_dict(),\n})\nsnapshot.post()\n```\n\n# host connections\n\nthe `netapp_ontap.host_connection.hostconnection` object allows a client application\nto store credentials once and reuse them for each subsequent operation.\nyou can do this in any of the following ways:\n\n* call the function `set_connection()` on a specific resource so the connection is used for\nall actions on the resource.\n\n* set the `netapp_ontap.config.connection` variable to establish a single connection instance for all\noperations within the scope of that block. this allows you to connect to ontap once\nand use the same connection everywhere, instead of providing credentials every time you make a\nrequest.\n\n* use the connection object as a context manager with the **with** keyword. note: this method\nis not recommended if you are using mutiple threads connecting to different hosts. this [issue](https://community.netapp.com/t5/ontap-rest-api-discussions/python-with-context-manager-and-rest-apis-multi-threading/m-p/442026/highlight/true#m468)\nis currently being worked on and should be fixed in future releases.\n\nnote that you can call `get_connection()` to get the connection used by an object and use it for\nsubsequent operations.\n\nby default, every operation attempts to verify the ssl certificate for the connection. if a\ncertificate cannot be verified, the **sslerror** exception is thrown. you can disable this\nverification by setting `netapp_ontap.host_connection.hostconnection.verify` to false when creating the\n`netapp_ontap.host_connection.hostconnection` instance.\n\n## custom headers\n\nin some cases, you might want to set and send custom headers with the rest request.\nthis can be done at the connection level. for a specific connection, you can pass in\nthe headers you would like to send for each request within the scope of that connection object.\nthe library provides full access to the request headers so that you can update, add, or delete\nheaders from the same connection object at any point. if a header is not recognized by ontap,\nit is ignored.\n\n```python\nfrom netapp_ontap import config, hostconnection\nheaders = {'my-header1':'my-header-value1', 'my-header2':'my-header-value2'}\n\n# initialize a connection object with custom headers\nconfig.connection = hostconnection('myhost.mycompany.com', 'username', 'password', headers=headers)\n\n# delete a header from a connection object\nconn = hostconnection('myhost.mycompany.com', 'username', 'password', headers=headers)\ndel conn.request_headers['my-header1']\n\n# add a header to a connection object using the assignment operator\nconn = hostconnection('myhost.mycompany.com', 'username', 'password', headers=headers)\nconn.request_headers['mynew-header'] = 'mynew-header-value'\n\n# add headers to a connection object\nconfig.connection = hostconnection('myhost.mycompany.com', 'username' 'password')\nconfig.connection.request_headers = headers\n\n# update an existing header using the assignment operator\nconfig.connection = hostconnection('myhost.mycompany.com','username','password', headers=headers)\nconfig.connection.request_headers['my-header1'] = 'my-new-header'\n```\n\n# asynchronous processing and jobs\n\nall post, patch, and delete requests that can take more than two seconds to complete are\ndesigned to run asynchronously as non-blocking operations. these operations are executed\nas background jobs at the ontap cluster. the http response generated by an\nasynchronous request always contains a link to the associated job object. by default, an\nasynchronous request automatically polls the job using the unique job identifier in the link.\ncontrol is returned to your script when a terminal state is reached (success or failure) or\nthe configured timeout value expires. however, you can override this behavior by setting the\n**poll** value to false when calling the function, causing control to return before the job\ncompletes. forcing an immediate return can be useful when a job might take a long time to\ncomplete and you want to continute execution of the script.\n\n# responses\n\na request always returns a `netapp_ontap.response.netappresponse` object which contains the details\nof the http response. it contains information such as whether the response is an error\nor a job. refer to `netapp_ontap.response.netappresponse` for further information on how\nto check the details of the response.\n\n# exception handling\n\nby default, an exception is returned if a request returns an http status code of 400 or greater.\nthe exception object, which is of type `netapp_ontap.error.netappresterror`,\nholds the http response object so that the exception can be handled in the client code.\nif you wish not to raise exceptions, you can set `netapp_ontap.config.raise_api_errors` to false. in this case,\nit is up to the client to check the http response from the `netapp_ontap.response.netappresponse`\nobject and handle any errors. refer to `netapp_ontap.error.netappresterror` for further information.\n\n```python\n# set raise_api_errors to false and check the http response.\nconfig.raise_api_errors = false\nresponse = svm.find(name=\"nonexistent_vs\")\nassert \"entry doesn't exist\" in response.http_response.text\n```\n\n# debugging\n\nwhile writing your application, it can often be useful to see the raw http request and response\ntext that the library is sending to and from the server. there are two flags that can be set\nto help with this.\n\n## debug flag\n\nthe first is the debug flag. this can be set either by setting debug=1 in the environment prior\nto executing your application or by setting `netapp_ontap.utils.debug` to 1 inside of your application.\nthis flag, when set, will cause the library to log the request and response for any failed\napi call. this will be logged at debug level (see the section on logging for setting up your\napplication). here's an example of setting this value inside of your application:\n\n```python\nimport logging\n\nfrom netapp_ontap import hostconnection, netappresterror, config, utils\nfrom netapp_ontap.resources import volume\n\nlogging.basicconfig(level=logging.debug)\nconfig.connection = hostconnection('10.100.200.50', username='admin', password='password', verify=false)\n\n# set the debug flag to 1\nutils.debug = 1\n\n# this api call will fail with a 404\ntry:\n    volume = volume(uuid=\"1\", name='does_not_exist')\n    volume.get()\nexcept netappresterror:\n    print('we got an expected exception')\n```\n\nhere is what the output would look like:\n\n```\n$ python test_debug.py\ndebug:urllib3.util.retry:converted retries value: 5 -> retry(total=5, connect=none, read=none, redirect=none, status=none)\ndebug:urllib3.connectionpool:starting new https connection (1): 10.100.200.50:443\ndebug:urllib3.connectionpool:https://10.100.200.50:443 \"get /api/storage/volumes/1 http/1.1\" 404 130\ndebug:netapp_ontap.utils:\n-----------request-----------\nget https://10.100.200.50:443/api/storage/volumes/1\naccept: */*\nuser-agent: python-requests/2.21.0\nconnection: keep-alive\naccept-encoding: gzip, deflate\nx-dot-client-app: netapp-ontap-python-9.8.0\nauthorization: basic ywrtaw46cgfzc3dvcmqk\nnone\n-----------------------------\n\n-----------response-----------\n404 not found\ndate:tue, 12 nov 2019 13:00:24 gmt\nserver:libzapid-httpd\nx-content-type-options: nosniff\ncache-control: no-cache,no-store,must-revalidate\ncontent-length: 130\ncontent-type: application/hal+json\nkeep-alive: timeout=5, max=100\nconnection:keep-alive\n{\n  \"error\": {\n    \"message\": \"\"1\" is an invalid value for field \"uuid\" (<uuid>)\",\n    \"code\": \"2\",\n    \"target\": \"uuid\"\n  }\n}\n------------------------------\nwe got an expected exception\n$\n```\n\n## log_all_api_calls flag\n\nthere is also a log_all_api_calls flag which can be set in the same ways. you can\nset it in the environment or during script execution by setting `netapp_ontap.utils.log_all_api_calls`\nto 1. this flag will produce the same output as above, but it will log the call no\nmatter if there was a failure or not. here's an example of what that would look\nlike if we got an existing volume:\n\n```python\nimport logging\n\nfrom netapp_ontap import hostconnection, config, utils\nfrom netapp_ontap.resources import volume\n\nlogging.basicconfig(level=logging.debug)\nconfig.connection = hostconnection('10.100.200.50', username='admin', password='password', verify=false)\n\n# set the log_all_api_calls flag to 1\nutils.log_all_api_calls = 1\n\n# this api call will succeed and be logged\nvolume = list(volume.get_collection())[0]\n```\n\nhere is what the output would look like:\n\n```\n$ python test_debug.py\ndebug:urllib3.util.retry:converted retries value: 5 -> retry(total=5, connect=none, read=none, redirect=none, status=none)\ndebug:urllib3.connectionpool:starting new https connection (1): 10.100.200.50:443\ndebug:urllib3.connectionpool:https://10.100.200.50:443 \"get /api/storage/volumes http/1.1\" 200 567\ndebug:netapp_ontap.utils:\n-----------request-----------\nget https://10.100.200.50:443/api/storage/volumes\nuser-agent: python-requests/2.21.0\nconnection: keep-alive\naccept: */*\naccept-encoding: gzip, deflate\nx-dot-client-app: netapp-ontap-python-9.8.0\nauthorization: basic ywrtaw46cgfzc3dvcmqk\nnone\n-----------------------------\n\n-----------response-----------\n200 ok\ndate:tue, 12 nov 2019 13:14:01 gmt\nserver:libzapid-httpd\nx-content-type-options: nosniff\ncache-control: no-cache,no-store,must-revalidate\ncontent-length: 567\ncontent-type: application/hal+json\nkeep-alive: timeout=5, max=100\nconnection:keep-alive\n{\n  \"records\": [\n    {\n      \"uuid\": \"c68bdca8-d090-11e9-bb29-005056bb7f42\",\n      \"name\": \"vs0_root\",\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/api/storage/volumes/c68bdca8-d090-11e9-bb29-005056bb7f42\"\n        }\n      }\n    },\n    {\n      \"uuid\": \"ed3b6ebf-d48e-11e9-bb29-005056bb7f42\",\n      \"name\": \"vs1_root\",\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/api/storage/volumes/ed3b6ebf-d48e-11e9-bb29-005056bb7f42\"\n        }\n      }\n    }\n  ],\n  \"num_records\": 2,\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/storage/volumes\"\n    }\n  }\n}\n------------------------------\n$\n```\n\n# additional considerations\n\nin most cases, the objects and actions in the library can be mapped directly\nto equivalent curl commands run against the ontap rest interface. however, there are a few\nexceptions you should be aware of.\n\n## property names\n\nif a property of a resource is named the same as one of the python reserved names,\nthe name is transposed when accessing the member of the resource. for example,\nif there is a resource named \"foo\" that has a property defined in the api named \"class\",\nthe property name would instead be \"class_\" when using the library. for example:\n\n```python\nfrom netapp_ontap.resources import foo\n\nfoo = foo()\nfoo.class_ = \"high\"\n```\n\n## action methods\n\nsome resources may have additional methods aside from the generic get(), post(),\npatch(), etc. these are known as \"action methods\" and will send requests to an\nendpoint matching the same name. for example, the `netapp_ontap.resources.security_certificate.securitycertificate`\nresource has the `netapp_ontap.resources.security_certificate.securitycertificate.sign()` method.\nusing this method will make a post call to /api/security/certitficates/{uuid}/sign.\n\nif a resource has a field with the same name as an action method, then the name of\nthe action method will be changed so as to not conflict. in the above example, if\nthe securitycertificate object had a field called `sign`, then the name of the action\nmethod would be `sign_action()` instead.\n\n# documentation\n\nto view the latest documentation, visit https://devnet.netapp.com/restapi.php , click on the\n\"python client library\" tab, and then choose the latest version of the docs. you can also view\nthe ontap rest api docs linked from the same page under the \"overview\" tab.\n\nif you want to view this library's docs offline, then you can locate the copy installed in\n`<python_environment>/lib/<python_version>/site_packages/netapp_ontap/docs`.\n\n# compatibility\n\nthe version assigned to the library consists of the major ontap release it is generated\nfrom and a minor version for the library within that release. for example: within the\nontap 9.7 product family, the library may ship several fix releases by incrementing the\nminor index: 9.7.0, 9.7.1, 9.7.2. the minor version\nallows the library to be updated at a cadence separate from ontap.\n\nclient libraries that have the same major version as ontap are completely compatible.\nfor example, the libraries netapp-ontap-9.6.1 and netapp-ontap-9.6.4 are fully\ncompatible with both ontap 9.6 and ontap 9.6p1.\n\na client library will support n-1 major versions of ontap with full backwards compatiblity\nof all apis and fields. for example, a program written using client library 9.6.1 and\ntalking to ontap 9.6 will continue to function consistently when the client library is\nupdated to 9.7.0.\n\na client library with a major version less than the ontap release can still be\nused, however it will not be able to access any of the new rest apis. for example, the library\nnetapp-ontap-9.6.4 is only partially compatible with ontap 9.7. in this case, the library will\nnot have access to the newer apis or fields offered by ontap, but scripts can continue to\naccess any of the same 9.6 fields they were before without issue.\n\nfor example a new property **volume.is_svm_root** was added with ontap 9.7.\nthe following behaviors would be seen with different libraries and ontap combinations:\n\n* library 9.6.0 would ignore the value coming from an ontap 9.7 response\n\n* library 9.7.0 would fully support the property coming from an ontap 9.7+ response\n\n* library 9.7.0 would not produce any errors for that property coming from an ontap 9.6 response\n\n# changelog\n\nthere are several changes to the python client library and the ontap rest api, which are organized by release below.\n\n## 9.14.1 library updates\n\n**new `netapp_ontap` release cycle**\n\nstarting with 9.14.1, the python client library (`netapp_ontap`) will have one release for each ontap release cycle\n(aligned with the ontap rc release). we will no longer have an rc and ga release for the library.\n\n**resource properties can now be set to `none`**\n\nsome ontap rest endpoints accept null values in the request body, however, the python library did not support this.\nstarting in 9.14.1 the python client library will allow users to set resource properties to `none` and will include\nthese values as null in the request body. here is an example:\n\n```python\n# get an existing rule\nrule = s3bucketlifecyclerule(\"53714b3a-cd85-11ed-8980-005056aca578\",\"b51ed46b-cff7-11ed-8980-005056aca578\")\nrule.name = \"my_rule\"\nrule.get()\n# set the expiration to none\nrule.expiration = none\n# patch the rule\nrule.patch(hydrate=true)\n```\n\nhere is the resulting body of the request:\n\n```json\n{\"expiration\" : null}\n```\n\n**resources can be more quickly retrieved using `fast_get_collection()`**\n\n`fast_get_collection()` is the quicker version of `get_collection()` that will fetch all records\nin the form of a rawresource type. it returns a generator that yields `netapp_ontap.raw_resource.rawresource` objects containing\ninformation about the resource as a dictionary. `netapp_ontap.raw_resource.rawresource` objects do not support, `get()`, `post()`,\n`patch()`, or `delete()`, but they can be converted to the appropriate resource type using\n`netapp_ontap.raw_resource.rawresource.promote`. `netapp_ontap.raw_resource.rawresource` objects should be treated as read-only.\n`fast_get_collection()` is significantly more efficient when there are many records in the response\nbecause it skips deserializing and validating the resource until the user explicitly\nasks by using `promote()`.\n\nhere is an example:\n\n```python\n# get all the volumes quickly\nmy_volumes = list(volume.fast_get_collection())\ndeleted_volumes = []\nfor record in my_volumes:\n  # get the current volume name and state\n  volume_name = record.name\n  volume_state = record.state\n  # delete the volume if the name starts with \"test_\" or if the volume is offline\n  if volume_name.startswith(\"test_\") or volume_state == \"offline\":\n    # generate the resource object from this rawresource\n    volume = record.promote()\n    volume.delete()\n    deleted_volumes.append(volume_name)\nprint(f\"the following {len(deleted_volumes)} volumes were deleted:\")\nprint(\"\\n\".join(deleted_volumes))\n\n```\n\n**new endpoints**\n\n* endpoint: /name-services/cache/host/settings/{uuid}  \n  http methods: get, patch  \n  this api retrieves and updates a host cache setting for a given svm.\n\n* endpoint: /network/fc/interfaces/{fc_interface.uuid}/metrics  \n  http methods: get  \n  this api retrieves historical performance metrics for a fibre channel interface.\n\n* endpoint: /network/fc/interfaces/{fc_interface.uuid}/metrics/{timestamp}  \n  http methods: get  \n  this api retrieves historical performance metrics for a fibre channel interface for a specific time.\n\n* endpoint: /network/fc/ports/{fc_port.uuid}/metrics  \n  http methods: get  \n  this api retrieves historical performance metrics for a fibre channel port.\n\n* endpoint: /network/fc/ports/{fc_port.uuid}/metrics/{timestamp}  \n  http methods: get  \n  this api retrieves historical performance metrics for a fibre channel port for a specific time.\n\n* endpoint: /network/fc/ports/{fc_port.uuid}/metrics/{timestamp}  \n  http methods: get  \n  this api retrieves historical performance metrics for a fibre channel port for a specific time.\n\n* endpoint: /protocols/fpolicy/{svm.uuid}/persistent-stores  \n  http methods: get, post  \n  this api retrieves, and creates fpolicy persistent store configurations.\n\n* endpoint: /protocols/fpolicy/{svm.uuid}/persistent-stores/{name}  \n  http methods: get, patch, delete  \n  this api retrieves, updates, and deletes a fpolicy persistent store configurations with the specified name.\n\n* endpoint: /protocols/nvme/services/{svm.uuid}/metrics/{timestamp}  \n  http methods: get  \n  this api retrieves historical performance metrics for the nvme protocol service of an svm for a specific time.\n\n* endpoint: /protocols/san/fcp/services/{svm.uuid}/metrics/{timestamp}  \n  http methods: get  \n  this api retrieves historical performance metrics for the fc protocol service of an svm for a specific time.\n\n* endpoint: /protocols/san/initiators  \n  http methods: get  \n  this api retrieves san initiators.\n\n* endpoint: /protocols/san/initiators/{svm.uuid}/{name}  \n  http methods: get  \n  this api retrieves a san initiator using it's name and svm uuid.\n\n* endpoint: /protocols/san/initiators/{svm.uuid}/{name}  \n  http methods: get  \n  this api retrieves a san initiator using it's name and svm uuid.\n\n* endpoint: /protocols/san/iscsi/services/{svm.uuid}/metrics/{timestamp}  \n  http methods: get  \n  this api retrieves historical performance metrics for the iscsi protocol service of an svm for a specific time.\n\n* endpoint: /storage/luns/{lun.uuid}/metrics  \n  http methods: get  \n  this api retrieves historical performance metrics for a lun.\n\n* endpoint: /storage/luns/{lun.uuid}/metrics/{timestamp}  \n  http methods: get  \n  this api retrieves historical performance metrics for a lun for a specific time.\n\n* endpoint: /storage/namespaces/{nvme_namespace.uuid}/metrics  \n  http methods: get  \n  this api retrieves historical performance metrics for an nvme namespace.\n\n* endpoint: /storage/namespaces/{nvme_namespace.uuid}/metrics/{timestamp}  \n  http methods: get  \n  this api retrieves historical performance metrics for a nvme namespace for a specific time.\n\n* endpoint: /security/authentication/cluster/oauth2  \n  http methods: get, patch  \n  this api retrieves and updates the oauth 2.0 status.\n\n* endpoint: /security/authentication/cluster/oauth2/clients  \n  http methods: get, post  \n  this api retrieves and creates oauth 2.0 configurations.\n\n* endpoint: /security/authentication/cluster/oauth2/clients/{name}  \n  http methods: get, delete  \n  this api retrieves and deletes oauth 2.0 configurations with the specified name.\n\n* endpoint: /security/authentication/duo/groups  \n  http methods: get, post  \n  this api retrieves and creates duo groups.\n\n* endpoint: /security/authentication/duo/groups/{owner.uuid}/{name}  \n  http methods: get, patch, delete  \n  this api retrieves, updates, and deletes a duo group based on the owner id and group name.\n\n* endpoint: /security/authentication/duo/profiles  \n  http methods: get, post  \n  this api retrieves and creates duo profile.\n\n* endpoint: /security/authentication/duo/profiles/{owner.uuid}  \n  http methods: get, patch, delete  \n  this api retrieves, updates, and deletes a duo profule based on the owner id.\n\n* endpoint: /security/key-stores/{uuid}  \n  http methods: get, patch, delete  \n  this api retrieves, updates, and deletes the keystore configuration with the specified uuid.\n\n* endpoint: /storage/qos/qos-options  \n  http methods: get, patch  \n  this api retrieves, and updates qos options.\n\n* endpoint: /support/autosupport/messages/{node.uuid}/{index}/{destination}  \n  http methods: get  \n  this api retrieves information about a single autosupport message.\n\n## 9.13.1 library updates\n\n**new endpoints**\n\n* endpoint: /resource-tags  \n  http methods: get  \n  this api retrieves the tags currently being used for resources in the api.\n\n* endpoint: /resource-tags/{value}  \n  http methods: get  \n  this api retrieves a specific resource tag.  \n\n* endpoint: /resource-tags/{resource_tag.value}/resources  \n  http methods: get, post  \n  these apis can be used to retrieve the resources for a specific tag or create a new tag on a specific resource.  \n\n* endpoint: /resource-tags/{resource_tag.value}/resources/{href}  \n  http methods: get, delete  \n  these apis can be used to retrieve or delete a specific resource for a specific tag.  \n\n* endpoint: /application/consistency-groups/{consistency_group.uuid}/metrics  \n  http methods: get  \n  this api retrieves historical performance and capacity metrics for a consistency group.  \n\n* endpoint: /support/ems/role-configs  \n  http methods: get, post  \n  these apis can be used to retrieve a collection of the ems role-based configurations or create an ems role-based configuration for an access control role.  \n\n* endpoint: /support/ems/role-configs/{access_control_reol.name}  \n  http methods: get, patch, delete  \n  these apis can be used to retrieve, update, or delete the ems role-based configuration of the access control role.  \n\n* endpoint: /security/key-managers/{security_key_manager.uuid}/restore  \n  http methods: post  \n  this api retrieves and restores any current unrestored keys (associated with the storage controller) from the specified key management server.  \n\n* endpoint: /security/login/totps  \n  http methods: get, post  \n  these apis can be used to retrieve and create the totp profiles configured for user accounts.  \n\n* endpoint: /security/login/totps/{owner.uuid}/{account.name}  \n  http methods: get, patch, delete  \n  these apis can be used to retrieve, update, or delete the totp profile configured for a user account.  \n\n* endpoint: /protocols/s3/services/{svm.uuid}/buckets/{s3_bucket.uuid}/rules  \n  http methods: get, post  \n  these apis can be used to retrieve all s3 lifecycle rules associated with a bucket or create the s3 bucket lifecycle rule configuration.  \n\n* endpoint: /protocols/s3/services/{svm.uuid}/buckets/{s3_bucket.uuid}/rules/{name}  \n  http methods: get, patch, delete  \n  these apis can be used to retrieve, update, or delete the s3 bucket lifecycle rule configuration.  \n\n## 9.12.1 library updates\n\n**new endpoints**\n\n* endpoint: /application/consistency-groups/{consistency_group.uuid}/snapshots/{uuid}  \n  http methods: patch  \n  this api completes a snapshot copy operation of a consistency group.  \n\n* endpoint: /security/aws-kms  \n  http methods: get, post, patch, delete  \n  these apis allow ontap to securely store its encryption keys using aws kms. they allow for configuring, updating, and deleting aws kms configurations.  \n\n* endpoint: /security/aws-kms/{aws_kms.uuid}/rekey-external  \n  http methods: post  \n  this api rekeys or re-versions the aws kms key encryption key (kek) for the given aws kms.  \n\n* endpoint: /security/aws-kms/{aws_kms.uuid}/rekey-internal  \n  http methods: post  \n  this api rekeys svm kek for the given aws kms.  \n\n* endpoint: /security/aws-kms/{aws_kms.uuid}/restore  \n  http methods: post  \n  this api restores the keys for an svm from a configured aws kms.  \n\n* endpoint: /security/key-managers/{security_key_manager.uuid}/auth-keys  \n  http methods: get, post, delete  \n  these apis allow for managing authentication keys.  \n\n* endpoint: /storage/file/moves/{node.uuid}/{uuid}/{index}  \n  http methods: get  \n  this api retrieves the status of an on-going file move operation.  \n\n* endpoint: /protocols/active-directory  \n  http methods: get, post  \n  these apis can be used to display active directory account-related information of all svms or create a new active directory account.  \n\n* endpoint: /protocols/active-directory/{svm.uuid}  \n  http methods: get, patch, delete  \n  this api displays, modified, or deletes an active directory account for the specified svm.  \n\n* endpoint: /protocols/active-directory/{svm.uuid}/preferred-domain-controllers  \n  http methods: get, post, delete  \n  these apis can be used to display or create the preferred domain controller configuration of an svm.  \n\n* endpoint: /protocols/active-directory/{svm.uuid}/preferred-domain-controllers/{fqdn}/{server_ip}  \n  http methods: get, delete  \n  these apis retrieve and delete the active directory preferred dc configuration of the specified svm and domain.  \n\n* endpoint: /protocols/cifs/group-policies  \n  http methods: get, patch  \n  these apis retrieve group policy objects that are yet to be applied. you can also use it to create a background task to update the gpo settings for a specific svm.  \n\n* endpoint: /protocols/cifs/group-policies/{svm.uuid}/central-access-policies  \n  http methods: get  \n  this api retrieves applied central access policies for the specified svm.  \n\n* endpoint: /protocols/cifs/group-policies/{svm.uuid}/central-access-policies/{name}  \n  http methods: get  \n  this api retrieves an applied central access policy for the specified svm.  \n\n* endpoint: /protocols/cifs/group-policies/{svm.uuid}/central-access-rules  \n  http methods: get  \n  this api retrieves applied central access rules for specified svm.  \n\n* endpoint: /protocols/cifs/group-policies/{svm.uuid}/central-access-rules/{name}  \n  http methods: get  \n  this api retrieves an applied central access rule for specified svm.  \n\n* endpoint: /protocols/cifs/group-policies/{svm.uuid}/objects  \n  http methods: get  \n  this api retrieves applied group policy objects for specified svm.  \n\n* endpoint: /protocols/cifs/group-policies/{svm.uuid}/restricted-groups  \n  http methods: get  \n  this api retrieves applied policies of restricted groups for specified svm.  \n\n* endpoint: /protocols/cifs/group-policies/{svm.uuid}/restricted-groups/{policy_index}/{group_name}  \n  http methods: get  \n  this api retrieves an applied policy of a restricted group for specified svm.  \n\n* endpoint: /protocols/nfs/connected-client-settings  \n  http methods: get, patch  \n  these apis allow for retrieving and modifying properties of the nfs connected-client cache settings.  \n\n**fixed issues**\n\n* [bug id 1506171](https://mysupport.netapp.com/site/bugs-online/product/ontap/burt/1506171)   \n  when calling post_collection on a resource, the library was not resetting the connection resulting in a no connection error.\n\n* [bug id 1504927](https://mysupport.netapp.com/site/bugs-online/product/ontap/burt/1504927)  \n  the library was not polling on a job when a next link was returned in the response.\n\n## 9.11.1 library updates\n\n**new endpoints**\n\n* endpoint: /cluster/counter/tables  \n  http methods: get  \n  this api returns a collection of counter tables and their schema definitions.  \n\n* endpoint: /cluster/counter/tables/{name}  \n  http methods: get  \n  this api returns the information about a single counter table.  \n\n* endpoint: /cluster/counter/tables/{counter_table.name}/rows  \n  http methods: get  \n  this api returns a collection of counter rows.  \n\n* endpoint: /cluster/counter/tables/{counter_table.name}/rows/{id}  \n  http methods: get\n  this api returns a single counter rows.  \n\n* endpoint: /cluster/metrocluster/svms  \n  http methods: get  \n  this api retrieves configuration information for all pairs of svms in metrocluster.  \n\n* endpoint: /cluster/metrocluster/svms/{cluster.uuid}/{svm.uuid}  \n  http methods: get  \n  this api retrieves configuration information for an svm in a metrocluster relationship.  \n\n* endpoint: /cluster/sensors  \n  http methods: get  \n  this api retrieves environment sensors  \n\n* endpoint: /cluster/sensors/{node.uuid}/{index}  \n  http methods: get  \n  this api retrieves environment sensors.  \n\n* endpoint: /network/ethernet/switches  \n  http methods: post, delete  \n  this api can be used to get information about the ethernet switches used for cluster and/or storage networks. \n\n* endpoint: /network/fc/fabrics  \n  http methods: get  \n  the fibre channel (fc) fabric rest apis provide read-only access to fc network information. this includes connections between the ontap cluster and the fc fabric, the switches that comprise the fabric, and the zones of the active zoneset of the fabric.  \n\n* endpoint: /network/ip/subnets  \n  http methods: get, post, patch, delete  \n  this api manages ip subnets in the cluster.  \n\n* endpoint: /svm/svms/{svm.uuid}/top-metrics/clients  \n  http methods: get  \n  this api retrieves a list of clients with the most io activity for flexvol and flexgroup volumes belonging to a specified svm.  \n\n* endpoint: /svm/svms/{svm.uuid}/top-metrics/files  \n  http methods: get  \n  this api retrieves a list of files with the most io activity for flexvol and flexgroup volumes belonging to a specified svm.  \n\n* endpoint: /svm/svms/{svm.uuid}/top-metrics/users  \n  http methods: get  \n  this api retrieves a list of users with the most io activity for flexvol and flexgroup volumes belonging to a specified svm.  \n\n* endpoint: /name-services/cache/group-membership/settings  \n  http methods: get, patch  \n  this api is used to retrieve and manage group-membership cache settings.  \n\n* endpoint: /name-services/cache/host/settings  \n  http methods: get, patch  \n  this api is used to retrieve and manage hosts cache settings.  \n\n* endpoint: /name-services/cache/netgroup/settings  \n  http methods: get, patch  \n  this api is used to retrieve and manage netgroups cache settings.  \n\n* endpoint: /name-services/cache/setting  \n  http methods: get, patch  \n  this api is used to retrieve and manage global nameservice cache settings.  \n\n* endpoint: /name-services/cache/unix-group/settings  \n  http methods: get, patch  \n  this api is used to retrieve and manage unix-group settings.  \n\n* endpoint: /name-services/cache/unix-user/settings  \n  http methods: get, patch  \n  this api is used to retrieve and manage unix-user settings.  \n\n* endpoint: /name-services/ldap-schemas  \n  http methods: get, post, patch, delete  \n  this api manages ldap schemas.  \n\n* endpoint: /name-services/netgroup-files/{svm.uuid}  \n  http methods: get, patch  \n  this api displays the netgroup file details or raw netgroup file of an svm.  \n\n* endpoint: /support/ems/application-logs  \n  http methods: post  \n  this api generates creates an app.log.* event.  \n\n* endpoint: /security/azure-key-vaults/{azure_key_value.uuid}/rekey-external  \n  http methods: post  \n  this api rekeys the external key in the key hierarchy for an svm with an akv configuration.  \n\n* endpoint: /security/gcp-kms/{gcp_kms.uuid}/rekey-external  \n  http methods: post  \n  this api rekeys the external key in the key hierarchy for an svm with a google cloud kms configuration.  \n\n* endpoint: /security/key-managers/{security_key_manager.uuid}/keys/{node.uuid}/key-ids  \n  http methods: get  \n  this api retrieves the key manager keys on the give node.  \n\n* endpoint: /security/multi-admin-verify  \n  http methdos: get, patch  \n  these apis provide information on the multi-admin verification global setting.  \n\n* endpoint: /security/multi-admin-verify/approval-groups  \n  http methods: get, post  \n  this api maanges multi-admin-verify approval groups.  \n\n* endpoint: /security/multi-admin-verify/approval-groups/{owner.uuid}/{name}  \n  http methods: get, patch, delete  \n  these apis provide information about a specific multi-admin verification approval-group.  \n\n* endpoint: /security/multi-admin-verify/requests  \n  http methods: get, post  \n  these apis provide information about multi-admin verification requests.  \n\n* endpoint: /security/multi-admin-verify/requests/{index}  \n  http methods: get, patch, delete  \n  these apis provide information about a specific multi-admin verification request.  \n\n* endpoint: /security/multi-admin-verify/rules  \n  http methods: get, post  \n  this api manages multi-adming-verify rules.  \n\n* endpoint: /security/multi-admin-verify/rules/{owner.uuid}/{operation}  \n  http methods: get, patch, delete  \n  these apis provide information about a specific multi-admin verification rule.  \n\n* endpoint: /storage/file/moves  \n  http methods: get, post  \n  this api starts a file move operation between two flexvol volumes or within a flexgroup volume, and shows the status of all on-going file move operations in the cluster.  \n\n* endpoint: /storage/pools  \n  http methods: get, post, patch, delete  \n  these apis manage storage pools in a cluster.  \n\n* endpoint: /storage/ports/{node.uuid}/{name}  \n  http methods: patch  \n  this api updates a storage port.  \n\n* endpoint: /storage/tape-devices/{node.uuid}/{device_id}  \n  http methods: patch  \n  this api updates a specific tape device.  \n\n* endpoint: /protocols/cifs/domains  \n  http methods: get  \n  this api retrieves the cifs connection information for all svms.  \n\n* endpoint: /protocols/cifs/netbios  \n  http methods: get  \n  this api retrieves netbios information.  \n\n* endpoint: /protocols/cifs/session/files  \n  http methods: get, delete  \n  these apis manage files opened in a current session.  \n\n* endpoint: /protocols/cifs/shadow-copies  \n  http methods: get, patch  \n  these apis retrieve and modify shadowcopies.  \n\n* endpoint: /protocols/cifs/shadowcopy-sets  \n  http methods: get, patch  \n  these apis retrieve and modify shadowcopy sets.  \n\n* endpoint: /protocols/cifs/users-and-groups/build-import/{svm.uuid}  \n  http methods: get, post, patch  \n  this api is used to bulk import from the specified uri, get the status of the last import and to upload the import status to the specified uri.  \n\n* endpoint: /protocols/nfs/connected-client-maps  \n  http methods: get  \n  this api retrieves nfs clients information.  \n\n* endpoint: /protocols/vscan/{svm.uuid}/events  \n  http methods: get  \n  this api retrieves vscan events, which are generated by the cluster to capture important events.  \n\n## 9.10.1  library updates\n\n**new endpoints**\n\n* endpoint: /cluster/metrocluster/interconnects/{node.uuid}/{partner_type}/{adapter}  \n  http methods: patch  \n  this api updates a metrocluster interconnect interface.  \n\n* endpoint: /cluster/web  \n  http methods: get, patch  \n  these apis are for web services configuration.  \n\n* endpoint: /svm/migrations  \n  http methods: get, post  \n  these apis allow creation and observation of the svm migrations.  \n\n* endpoint: /svm/migrations/{uuid}  \n  http methods: get, patch, delete  \n  these apis allow management of a single svm migration.  \n\n* endpoint: /svm/migrations/{svm_migration.uuid}/volumes  \n  http methods: get  \n  this api retrieves the transfer status of the volumes in the svm.  \n\n* endpoint: /svm/migrations/{svm_migration.uuid}/volumes/{volume.uuid}  \n  http methods: get  \n  this api retrieves the transfer status for the specified volume.  \n\n* endpoint: /svm/svms/{svm.uuid}/web  \n  http methods: get, patch  \n  these apis manage the web services security configuration.  \n\n* endpoint: /name-services/host-record/{svm.uuid}/host  \n  http methods: get  \n  this api retrieves the ip address of the specified hostname.  \n\n* endpoint: /name-services/local-hosts  \n  http methods: get, post  \n  these apis are for managing ip to hostname mappings.  \n\n* endpoint: /name-services/local-hosts/{owner.uuid}/{address}  \n  http methods: get, patch, delete  \n  these apis manage a specified svm and ip address.  \n\n* endpoint: /name-services/unix-groups/{svm.uuid}/{unix_group.name}/users  \n  http methods: get  \n  this api retrieves users to the specified unix group and svm.  \n\n* endpoint: /name-services/unix-groups/{svm.uuid}/{unix_group.name}/users/{name}  \n  http methods: get  \n  this api retrieves a user from the specified unix group.  \n\n* endpoint: /protocols/san/lun-maps/{lun.uuid}/{igroup.uuid}/reporting-nodes  \n  http methods: get, post  \n  these apis are for managing lun map reporting nodes.  \n\n* endpoint: /protocols/san/lun-maps/{lun.uuid}/{igroup.uuid}/reporting-nodes/{uuid}  \n  http methods: get, delete  \n  these apis manage lun map reports for the specified node.  \n\n* endpoint: /protocols/san/vvol-bindings  \n  http methods: get, post  \n  these apis are for vvol bindings.  \n\n* endpoint: /protocols/san/vvol-bindings/{protocol_endpoint.uuid}/{vvol.uuid}  \n  http methods: get, delete  \n  these apis manage vvol bindings per vvol uuid.  \n\n* endpoint: /storage/luns/{lun.uuid}/attributes  \n  http methods: get, post  \n  these apis are for lun attributes.  \n\n* endpoint: /storage/luns/{lun.uuid}/attributes/{name}  \n  http methods: get, patch, delete  \n  these apis manage lun attributes for the specific lun and name.  \n\n* endpoint: /application/consistency-groups  \n  http methods: get, post  \n  these apis manage details of a collection or a specific consistency group.  \n\n* endpoint: /application/consistency-groups/{uuid}  \n  http methods: get, patch, delete  \n  these apis manage consistency groups.  \n\n* endpoint: /application/consistency-groups/{uuid}/{consistency_group.uuid}/snapshots  \n  http methods: get, post  \n  these apis manage snapshot copies of a collection or a specific consistency group.  \n\n* endpoint: /application/consistency-groups/{uuid}/{consistency_group.uuid}/snapshots/{uuid}  \n  http methods: get, delete  \n  these apis manage details of a specific snapshot for a consistency group.  \n\n* endpoint: /support/auto-update  \n  http methods: get, patch  \n  these apis manage the current status of the automatic update feature and the end user license agreement (eula).  \n\n* endpoint: /support/auto-update/configurations  \n  http methods: get  \n  this api retrieves the configuration for automatic updates.  \n\n* endpoint: /support/auto-update/configurations/{uuid}  \n  http methods: get, patch  \n  these apis manage the configuration for a specified automatic update.  \n\n* endpoint: /support/auto-update/updates  \n  http methods: get  \n  this api retrieves the status of all updates.  \n\n* endpoint: /support/auto-update/updates/{uuid}  \n  http methods: get, patch  \n  these apis manage the status of an update.  \n\n* endpoint: /support/coredump/coredumps  \n  http methods: get  \n  this api retrieves a collection of coredumps.  \n\n* endpoint: /support/coredump/coredumps/{node.uuid}/{name}  \n  http methods: get, delete  \n  these apis manage a specific core dump.  \n\n* endpoint: /security/anti-ransomware/suspects  \n  http methods: get  \n  this api retrieves information on the suspects generated by the anti-ransomware analytics.  \n\n* endpoint: /security/anti-ransomware/suspects/{volume.uuid}  \n  http methods: delete  \n  this api clears either all the suspect files of a volume or suspect files of a volume based on file format or suspect time provided.  \n\n* endpoint: /security/azure-key-vaults/{uuid}/rekey-internal  \n  http methods: post  \n  this api rekeys the internal key in the key hierarchy for an svm with an akv configuration.  \n\n* endpoint: /security/azure-key-vaults/{uuid}/restore  \n  http methods: post  \n  this api restores the keys for an svm from a configured akv.  \n\n* endpoint: /security/gcp-kms/{uuid}/rekey-internal  \n  http methods: post  \n  this api rekeys the internal key in the key hierarchy for an svm with a google cloud kms configuration.  \n\n* endpoint: /security/gcp-kms/{uuid}/restore  \n  http methods: post  \n  this api restores the keys for an svm from a configured google cloud kms.  \n\n* endpoint: /security/ipsec/ca-certificates  \n  http methods: get, post  \n  these apis are for the collection of ipsec ca certificates configured for all svms.  \n\n* endpoint: /security/ipsec/ca-certificates/{svm.uuid}  \n  http methods: get, patch, delete  \n  these apis manage the ipsec ca certificates configured for the specified svm.  \n\n* endpoint: /security/key-manager-configs  \n  http methods: get, patch  \n  these apis are used for key manager configurations.  \n\n* endpoint: /security/key-stores  \n  http methods: get  \n  this api retrieves keystores.  \n\n* endpoint: /security/ssh/svms  \n  http methods: get  \n  this api retrieves the ssh server configuration for all the svms.  \n\n* endpoint: /security/ssh/svms/{svm.uuid}  \n  http methods: get, patch  \n  these apis manage the ssh server configuration for the specified svm.  \n\n* endpoint: /storage/file/clone/split-loads  \n  http methods: get  \n  this api retrieves the clone split load of a node.  \n\n* endpoint: /storage/file/clone/split-loads/{node.uuid}  \n  http methods: get, patch  \n  these apis manage volume file clone split load.  \n\n* endpoint: /storage/file/clone/split-status  \n  http methods: get  \n  this api retrieves file clone split status of all volumes in the node.  \n\n* endpoint: /storage/file/clone/split-status/{volume.uuid}  \n  http methods: get  \n  this api retrieves file clone split status of provided volume in the node.  \n\n* endpoint: /storage/file/clone/tokens  \n  http methods: get, post  \n  these apis manage tokens to reserve the split load.  \n\n* endpoint: /storage/file/clone/tokens/{node.uuid}/{uuid}  \n  http methods: get, patch, delete  \n  these apis manage file clone tokens for the specified node.  \n\n* endpoint: /storage/ports/{node.uuid}/{name}  \n  http methods: patch  \n  this api updates a storage port.  \n\n* endpoint: /storage/qos/workloads  \n  http methods: get  \n  this api retrieves a collection of qos workloads.  \n\n* endpoint: /storage/qos/workloads/{uuid}  \n  http methods: get  \n  this api retrieves a specific qos workload.  \n\n* endpoint: /storage/shelves/{uid}  \n  http methods: patch  \n  this api updates a shelf location led.  \n\n* endpoint: /storage/volumes/{volume.uuid}/top-metrics/clients  \n  http methods: get  \n  this api retrieves a list of clients with the most io activity.  \n\n* endpoint: /storage/volumes/{volume.uuid}/top-metrics/directories  \n  http methods: get  \n  this api retrieves a list of directories with the most io activity.  \n\n* endpoint: /storage/volumes/{volume.uuid}/top-metrics/files  \n  http methods: get  \n  this api retrieves a list of files with the most io activity.  \n\n* endpoint: /storage/volumes/{volume.uuid}/top-metrics/users  \n  http methods: get  \n  this api retrieves a list of users with the most io activity.  \n\n* endpoint: /storage/snaplock/compliance-clocks  \n  http methods: post  \n  this api initializes the snaplock complianceclock.  \n\n* endpoint: /protocols/cifs/domains  \n  http methods: get  \n  this api retrieves the cifs domain-related information of all svms.  \n\n* endpoint: /protocols/cifs/domains/{svm.uuid}  \n  http methods: get  \n  this api retrieves the cifs domain-related information for the specified svm.  \n\n* endpoint: /protocols/cifs/domains/{svm.uuid}/preferred-domain-controllers  \n  http methods: get, post  \n  these apis are for the cifs domain preferred dc configuration of an svm.  \n\n* endpoint: /protocols/cifs/domains/{svm.uuid}/preferred-domain-controllers/{fqdn}/{server_ip}  \n  http methods: get, delete  \n  these apis manage the cifs domain preferred dc configuration for the specified svm and domain.  \n\n* endpoint: /protocols/cifs/local-groups/{svm.uuid}/{sid}  \n  http methods: get, patch, delete  \n  these apis manage local group information for the specified group and svm.  \n\n* endpoint: /protocols/cifs/local-groups/{svm.uuid}/{local_cifs_group.sid}/members  \n  http methods: get, post, delete  \n  these apis manage local users, active directory users and active directory groups which are members of the specified local group and svm.  \n\n* endpoint: /protocols/cifs/local-groups/{svm.uuid}/{local_cifs_group.sid}/members/{name}  \n  http methods: get, delete  \n  these apis manage the local user, active directory user and/or active directory group from the specified local group and svm.  \n\n* endpoint: /protocols/cifs/local-users/{svm.uuid}/{sid}  \n  http methods: get, patch, delete  \n  these apis manage local user information for the specified user and svm.  \n\n* endpoint: /protocols/cifs/users-and-groups/bulk-import/{svm.uuid}  \n  http methods: get, post, patch  \n  these apis manage cifs local users,groups and group memberships file from the specified url.  \n\n* endpoint: /protocols/event-selectors  \n  http methods: get, post  \n  these apis manage s3 audit event-selector configurations for all svms.  \n\n* endpoint: /protocols/event-selectors/{svm.uuid}/{bucket}  \n  http methods: get, patch, delete  \n  these apis manage an s3 audit event selector configuration for an svm.  \n\n* endpoint: /protocols/file-security/permissions/{svm.uuid}/{path}  \n  http methods: delete  \n  this api removes all slag acls for specified path. bulk deletion is supported only for slag.  \n\n* endpoint: /protocols/fpolicy/{svm.uuid}/connections  \n  http methods: get  \n  this api retrieves the statuses of fpolicy servers.  \n\n* endpoint: /protocols/fpolicy/{svm.uuid}/connections/{node.uuid}/{policy.name}/{server}  \n  http methods: get, patch  \n  these apis manage the status of an fpolicy server.  \n\n* endpoint: /protocols/locks  \n  http methods: get  \n  this api retrieves locks details.  \n\n* endpoint: /protocols/locks/{uuid}  \n  http methods: get, delete  \n  these apis manage locks for the specified lock id.  \n\n* endpoint: /protocols/s3audits  \n  http methods: get, post  \n  these apis manage s3 audit configuration.  \n\n* endpoint: /protocols/s3audits/{svm.uuid}  \n  http methods: get, patch, delete  \n  these apis manage an s3 audit configuration for an svm.  \n\n\n## 9.9.1 library updates\n\n**new endpoints**\n\n* endpoint: /name-services/unix-groups  \n  http methods: get, post  \n  these apis allow management of the unix groups for all of the svms.  \n\n* endpoint: /name-services/unix-groups/{svm.uuid}/{name}  \n  http methods: get, patch, delete  \n  these apis manage unix group information for the specified group and svm.  \n\n* endpoint: /name-services/unix-groups/{svm.uuid}/{unix_group.name}/users  \n  http methods: post  \n  this api adds users to the specified unix group and svm.  \n\n* endpoint: /name-services/unix-groups/{svm.uuid}/{unix_group.name}/users/{name}  \n  http methods: delete  \n  this api deletes a user from the specified unix group.  \n\n* endpoint: /name-services/unix-users  \n  http methods: get, post  \n  these apis manage all local unix users and configuration for svms.  \n\n* endpoint: /name-services/unix-users/{svm.uuid}/{name}  \n  http methods: get, patch, delete  \n  these apis manage unix user information for the specified user and svm.  \n\n* endpoint: /protocols/san/igroups/{igroup.uuid}/igroups  \n  http methods: get,post  \n  these apis manage nested initiator groups of an initiator group.  \n\n* endpoint: /protocols/san/igroups/{igroup.uuid}/igroups/{uuid}  \n  http methods: get, delete  \n  these apis manage a nested initiator group of an initiator group.  \n\n* endpoint: /protocols/san/igroups/{igroup.uuid}/initiators/{name}  \n  http methods: patch  \n  updates an initiator of an initiator group. this api only supports modification of initiators owned directly by the initiator group. initiators of nested initiator groups must be modified on the initiator group that directly owns the initiator.  \n\n* endpoint: /protocols/san/portsets  \n  http methods: get, post  \n  these apis are for portsets.  \n\n* endpoint: /protocols/san/portsets/{uuid}  \n  http methods: get, delete  \n  these apis used for a portset.  \n\n* endpoint: /protocols/san/portsets/{portset.uuid}/interfaces  \n  http methods: get, post  \n  these apis are for interfaces of a portset.  \n\n* endpoint: /protocols/san/portsets/{portset.uuid}/interfaces/{uuid}  \n  http methods: get, delete  \n  these apis are for a network interface of a portset.  \n\n* endpoint: /security/gcp-kms  \n  http methods: get, post  \n  these apis manage google cloud kms configurations for all clusters and svms.  \n\n* endpoint: /security/gcp-kms/{uuid}  \n  http methods: get, patch, delete  \n  these apis are for managing the google cloud kms configuration for the svm specified by the uuid.  \n\n* endpoint: /security/gcp-kms/{gcp_kms.uuid}/rekey-internal  \n  http methods: post  \n  this api rekeys the internal key in the key hierarchy for an svm with a google cloud kms configuration.  \n\n* endpoint: /security/gcp-kms/{gcp_kms.uuid}/restore  \n  http methods: post  \n  this api restores the keys for an svm from a configured google cloud kms.  \n\n* endpoint: /storage/bridges  \n  http methods: get  \n  this api retrieves a collection of bridges.  \n\n* endpoint: /storage/bridges/{wwn}  \n  http methods: get  \n  this api retrieves a specific bridge  \n\n* endpoint: /storage/flexcache/origins/{uuid}  \n  http methods: patch  \n  this api modifies origin options for a origin volume in the cluster.  \n\n* endpoint: /storage/switches  \n  http methods: get  \n  this api retrieves a collection of storage switches.  \n\n* endpoint: /storage/switches/{name}  \n  http methods: get  \n  this api retrieves a specific storage switch.  \n\n* endpoint: /storage/tape-devices  \n  http methods: get  \n  this api retrieves a collection of tape devices.  \n\n* endpoint: /storage/tape-devices/{node.uuid}/{device_id}  \n  http methods: get  \n  this api retrieves a specific tape.  \n\n* endpoint: /protocols/ndmp/svms/{svm.uuid}/passwords/{user}  \n  http methods: get  \n  this api generates and retrieves the password for the specified ndmp user.  \n\n* endpoint: /protocols/cifs/local-groups  \n  http methods: get, post  \n  these apis are for the local groups for all of the svms.  \n\n* endpoint: /protocols/cifs/local-groups/{svm.uuid}/{group_sid}  \n  http methods: get, patch, delete  \n  these apis are for local group information of the specified group and svm.  \n\n* endpoint: /protocols/cifs/local-groups/{svm.uuid}/{local_group.group_sid}/members  \n  http methods: get, post, delete  \n  these apis manage local users, active directory users and active directory groups which are members of the specified local group and svm.  \n\n* endpoint: /protocols/cifs/local-groups/{svm.uuid}/{local_group.group_sid}/members/{name}  \n  http methods: get, delete  \n  these apis are for the local user, active directory user and/or active directory group from the specified local group and svm.  \n\n* endpoint: /protocols/cifs/local-users  \n  http methods: get, post  \n  these apis are for local users of all of the svms.  \n\n* endpoint: /protocols/cifs/local-users/{svm.uuid}/{user_sid}  \n  http methods: get, patch, delete  \n  these apis manage local user information for the specified user and svm.  \n\n* endpoint: /protocols/cifs/sessions/{node.uuid}/{svm.uuid}/{identifier}/{connection_id}  \n  http methods: delete  \n  this api deletes smb session information on a node for an svm.  \n\n* endpoint: /protocols/cifs/users-and-groups/privileges  \n  http methods: get, post  \n  these apis manage privileges of the specified local or active directory user or group and svm.  \n\n* endpoint: /protocols/cifs/users-and-groups/privileges/{svm.uuid}/{name}  \n  http methods: get, patch  \n  these apis are for privileges of the specified local or active directory user or group and svm.  \n\n* endpoint: /protocols/file-security/permissions/{svm.uuid}/{path}  \n  http methods: get, post, patch  \n  these apis manage file permissions  \n\n* endpoint: /protocols/file-security/permissions/{svm.uuid}/{path}/acl  \n  http methods: post, patch, delete  \n  these apis manage the new sacl/dacl acl.  \n\n\n## 9.8.0 library updates\n\n**fixed issues**\n\n* [bug id 1349122](https://mysupport.netapp.com/site/bugs-online/product/ontap/burt/1349122)\n\ndue to a type mismatch between documentation and implementation, some endpoints were failing because of a validation error.\n\n## ontap 9.8 rest api updates ##\nall new ontap apis have corresponding library resource objects which can be used\nto perform the operations. see the `netapp_ontap.resources` package for details\nabout each of the objects and their fields.\n\nfor a summary of the changes in the ontap rest api between versions of ontap 9, see the [ontap 9 release notes](https://library.netapp.com/ecm/ecm_download_file/ecmlp2492508).\n\n**new endpoints**\n\n* endpoint: /cluster/firmware/history  \n  http methods: get  \n  this api retrieves the details history of firmware update requests for the cluster.  \n\n* endpoint: /cluster/licensing/capacity-pools  \n  http methods: get  \n  this api retrieves information about associations between ontap nodes in the cluster and capacity pool licenses. it can also report how much capacity each node is consuming from the pool.  \n\n* endpoint: /cluster/licensing/license-managers  \n  http methods: get, patch  \n  these apis allow for managing information about the license manager associated with the cluster.  \n\n* endpoint: /cluster/mediators  \n  http methods: get, post, delete  \n  these apis allow for adding or removing a mediator to metrocluster over ip configuration as well as retrieving the status of the existing mediator.  \n\n* endpoint: /cluster/metrocluster  \n  http methods: get, post, patch  \n  these apis allows for creating, performing operations, and retrieving relevant information pertaining to metrocluster.  \n\n* endpoint: /cluster/metrocluster/diagnostics  \n  http methods: get, post\n  this api can be used to initiate a metrocluster diagnostics operation and fetch the results of a completed diagnostic operation.  \n\n* endpoint: /cluster/metrocluster/dr-groups  \n  http methods: get, post, delete  \n  these apis allow for creating, performing operations, and retrieving relevant information about metrocluster dr groups.  \n\n* endpoint: /cluster/metrocluster/interconnects  \n  http methods: get  \n  this api retrieves information pertaining to metrocluster interconnect status.  \n\n* endpoint: /cluster/metrocluster/nodes  \n  http methods: get  \n  this api retrieves details about metrocluster nodes.  \n\n* endpoint: /cluster/metrocluster/operations  \n  http methods: get  \n  this api retrieves the list of metrocluster operations on the local cluster.  \n\n* endpoint: /cluster/nodes/{uuid}/metrics  \n  http methods: get  \n  this api retrieves historical performance metrics for a node.  \n\n* endpoint: /cluster/software/upload  \n  http methods: post  \n  this api uploads a software or firmware package located on the local filesystem.  \n\n* endpoint: /network/ethernet/ports/{uuid}/metrics  \n  http methdos: get  \n  this api retrieves historical performance metrics for a port.  \n\n* endpoint: /network/ethernet/switch/ports  \n  http methods: get  \n  this api can be used to get the port information for an ethernet switch used in a cluster or storage networks. \n\n* endpoint: /network/ethernet/switches  \n  http methods: get, patch  \n  these apis can be used to retrieve and modify ethernet switches used for the cluster and/or storage networks.  \n\n* endpoint: /network/fc/interfaces/{uuid}/metrics  \n  http methods: get  \n  this api retrieves historical performance metrics for an fc interface.  \n\n* endpoint: /network/fc/ports/{uuid}/metrics  \n  http methods: get  \n  this api retrieves historical performance metrics for an fc port.  \n\n* endpoint: /network/ip/interfaces/{uuid}/metrics  \n  http methods: get  \n  this api retrieves historical performance metrics for an interface.  \n\n* endpoint: /network/ip/service-policies  \n  http methods: post, patch, delete  \n  these apis allow for creating, modifying, and deleting a servicy policy for network interfaces.  \n\n* endpoint: /storage/namespaces/{uuid}/metrics  \n  http methods: get  \n  this api retrieves historical performance metrics for an nvme namespace.  \n\n* endpoint: /security  \n  http methods: patch  \n  this api updates the software fips mode or enables conversion of non-encrypted metadata volumes to encrypted metadata volumes and non-nae aggregates to nae aggregates.  \n\n* endpoint: /security/azure-key-vaults  \n  http methods: get, post, patch, delete  \n  these apis allow for managing azure key vaults on a cluster.  \n\n* endpoint: /security/azure-key-vaults/{azure_key_vault.uuid}/rekey-internal  \n  http methods: post  \n  this api rekeys the internal key in the key hierarchy for an svm with and akv configuration.  \n\n* endpoint: /security/azure-key-vaults/{azure_key_vault.uuid}/restore  \n  http methods: post  \n  this api restores the keys for an svm from a configures akv.  \n\n* endpoint: /security/certificate-signing-request  \n  http methods: post  \n  this api generates a certificate signing request and a private key pair.  \n\n* endpoint: /security/gcp-kms  \n  http methods: get, post, patch, delete  \n  these apis allow ontap to store encryption keys using google cloud key management services.  \n\n* endpoint: /security/gcp-kms/{gcp_kms.uuid}/restore  \n  http methods: post  \n  this api restores the keys for an svm from a configure google cloud key management service.  \n\n* endpoint: /security/ipsec  \n  http methods: get, patch  \n  these apis allow for retrieving and updating ipsec status.  \n\n* endpoint: /security/ipsec/policies  \n  http methods: get, post, patch, delete  \n  these apis allow for creating, retrieving information about, and updating ipsec policies.  \n\n* endpoint: /security/ipsec/security-associations  \n  http methods: get  \n  this api retrieves the ipsec and ike(internet key exchange) security associations.  \n\n* endpoint: /storage/file/copy  \n  http methods: post  \n  this api starts a file copy operations which is only supported on flexible volumes.  \n\n* endpoint: /storage/file/move  \n  http methods: post  \n  this api starts a file move operation which is only supported on flexible volumes.  \n\n* endpoint: /storage/flexcache/flexcaches/{uuid}  \n  http methods: patch  \n  this api prepopulates a flexcache volume in the cluster.  \n\n* endpoint: /storage/monitored-files  \n  http methods: get, post, delete  \n  these apis allow for creating, deleting, and retrieving information about monitored files.  \n\n* endpoint: /storage/monitored-files/{monitored_file.uuid}/metrics  \n  http methods: get  \n  this api retrieves historical performance metrics for the monitored file.  \n\n* endpoint: /storage/snapshot-policies/{snapshot_policy.uuid}/schedules  \n  http methods: get, post, patch, delete  \n  these apis perform operations related to snapshot copy policy schedules.  \n\n* endpoint: /storage/volume-efficiency-policies  \n  http methods: get, post, patch, delete  \n  these apis allow for configuring volume efficiency policies on a cluster.  \n\n* endpoint: /storage/volumes/{volume.uuid}/files/{path}  \n  http methods: post, patch, delete  \n  these apis allow for creating files, modifying files, and deleting files on a volume.  \n\n* endpoint: /private/protocols/audit/audit-log-redirect  \n  http methods: get, post, patch, delete  \n  these apis can be used to specify a dedicated svm for all nas auditing event log to reside in.  \n\n* endpoint: /protocols/cifs/sessions  \n  http methods: get  \n  this api retrieves the cifs sessions information for all svms.  \n\n* endpoint: /protocols/cifs/sessions/{node.uuid}/{svm.uuid}/{identifier}/{connection_id}  \n  http methods: get  \n  this api retrieves smb session information for a specific smf connection of a svm in a node.  \n* endpoint: /protocols/file-access-tracing/events  \n  http methods: get, delete  \n  these apis retrieves or delete trace results for access allowed or denied events.  \n\n* endpoint: /protocols/file-access-tracing/filters  \n  http methods: get, post, patch, delete  \n  these apis manage security trace filter entries.  \n\n* endpoint: /protocols/file-security/effective-permissions/{svm.uuid}/{path}  \n  http methods: get  \n  this api displays the effective permissions granted to a windows or unix user on the specified file or folder path.  \n\n* endpoint: /private/manage/event-remediations  \n  http methods: get, patch  \n  these apis allow for retrieving about and performing event management actions.  \n\n* endpoint: /protocols/s3/buckets  \n  http methods: post    \n  this api creates the s3 bucket configuration for an svm.  \n\n* endpoint: /protocols/s3/buckets/{svm.uuid}/{uuid}  \n  http methods: get, patch, delete  \n  these apis manage s3 bucket configurations for the specified svm.  \n\n* endpoint: /protocols/s3/services/{svm.uuid}/groups  \n  http methods: get, post, patch, delete  \n  these apis manage s3 group configurations for the specified svm.  \n\n* endpoint: /protocols/s3/services/{svm.uuid}/metrics  \n  http methods: get  \n  this api retrieves historical performance metrics for the s3 protocol of an svm.  \n\n* endpoint: /protocols/s4/services/{svm.uuid}/policies  \n  http methods: get, post, patch, delete  \n  these apis allow for configuring s3 policies for the specified svm.  \n\n\n## 9.7.0 library updates  \n\n**new**\n\n* a `count_collection()` method is now available on all resources which have a `get_collection()`. this method is a shortcut for getting only the number of items matching a query. for example: `volume.count_collection(name=\"backup_vol*\")` is roughly equivalent to `len(list(volume.get_collection(name=\"backup_vol*\")))`.\n\n* the application can now add its own custom headers for each request as part of the `netapp_ontap.host_connection.hostconnection` object.\n\n* when passing verify=false to the hostconnection, the library will now disable urllib3's insecurerequestwarning from logging messages.\n\n**fixed issues**\n\n* [bug id 1322090](https://mysupport.netapp.com/site/bugs-online/product/ontap/burt/1322090)  \n  when polling jobs, the certificate verification setting was hard-coded to false, so it would behave the same regardless of how the user set it.\n\n* [bug id 1322095](https://mysupport.netapp.com/site/bugs-online/product/ontap/burt/1322095) \n  the get_collection() call using the connection parameter was not correctly setting the connection on the returned resource objects.\n\n* [bug id 1279507](ihttps://mysupport.netapp.com/site/bugs-online/product/ontap/burt/1279507)  \n  when doing a find() with the fields query parameter, the library was not returning the specified fields, instead, all fields were being returned.\n\n* [bug id 1291333](https://mysupport.netapp.com/site/bugs-online/product/ontap/burt/1291333)  \n  when 0 records are found in a resource.find() call and log_all_api_calls is set to true, then an uncaught exception is raised.\n\n* [bug id 1271450](https://mysupport.netapp.com/site/bugs-online/product/ontap/burt/1271450)  \n  the library doesn't allow sending a body in a delete request.\n\n* [bug id 1263312](https://mysupport.netapp.com/site/bugs-online/product/ontap/burt/1263312)  \n  when posting or patching some objects with embedded objects, fields might incorrectly be dropped from the request.\n\n* [bug id 1275238](https://mysupport.netapp.com/site/bugs-online/product/ontap/burt/1275238)  \n  retrieving and setting the \"from\" field of autosupport object fails.\n\n**incompatibilities**\n\n* in prior versions, resource.find() would raise an exception if no results were found as well as when more than one was found. in this version, when no results are found, none is returned instead of raising an exception. an exception is still raised when more than one result is found.\n\n\n\n##ontap 9.7 rest api updates\n\nall new ontap apis have corresponding library resource objects which can be used\nto perform the operations. see the `netapp_ontap.resources` package for details\nabout each of the objects and their fields.\n\nfor a summary of the changes in the ontap rest api between versions of ontap 9, see the [ontap 9 release notes](https://library.netapp.com/ecm/ecm_download_file/ecmlp2492508).\n\n**new endpoints**\n\n* endpoint: /cluster/nodes/{uuid}  \n    http methods: delete  \n    this api will remove a node from the cluster. \n\n* endpoint: /cluster/ntp/keys/{id}  \n    http methods: get, post, patch, delete  \n    these apis allow for management of ntp server shared keys.\n\n* endpoint: /cluster/ntp/servers/{server}  \n    http methods: get, post, patch, delete  \n    these apis allow for management of keyed ntp servers.\n\n* endpoint: /cluster/software/download    \n    http methods: get  \n    this api allows monitoring the status of the image package download progress.\n\n* endpoint: /network/http-proxy/{uuid}  \n    http methods: get, post, patch, delete  \n    this api allow configuration of an http proxy for the cluster of svm ip spaces.\n\n* endpoint: /network/ip/bgp/peer-groups/{uuid}  \n    http methods: get, post, patch, delete  \n    these apis manage information pertaining to the bgp peer-groups configured in the cluster.\n\n* endpoint: /protocols/san/fcp/services/{svm.uuid}/metrics  \n    http methods: get  \n    this api retrieves historical performance metrics for the fc protocols service of an svm.\n\n* endpoint: /protocos/san/iscsi/services/{svm.uuid}/metrics  \n    http methods: get   \n    this api retrieves history performance metrics for the iscsi protocol of an svm.\n\n* endpoint: /storage/luns/{uuid}/metrics  \n    http methods: get  \n    this api retrieves history performance metrics for a lun.\n\n* endpoint: /protocls/nvme/services/{svm.uuid}/metrics \n    http methods: get  \n    this api retrieve historical performance metrics for nvme protocol of an svm.\n\n* endpoint: /support/configuration-backup/{node.uuid}/name  \n    http methods: get, post, delete  \n    these apis create, retrieve, and delete backup configuraiton for the cluster.\n\n* endpoint: /support/snmp/traphosts/{host}  \n    http methods: get, post, delete  \n    these apis configure snmp traphosts which will receive snmp traps from ontap.\n\n* endpoint: /support/snmp/users/{engine_id}/{name}  \n    http methods: get, post, patch, delete  \n    these apis configure snmp users that are able to query for the ontap snmp server.\n\n* endpoint: /security  \n    http methods: get  \n    this api retrieves information about the security configured on the cluster.\n\n* endpoint: /security/authentication/cluster/ad-proxy  \n    http methods: get, post, patch, delete  \n    these apis configure which data svm will be use to proxy cluster management ad authentication.\n\n* endpoint: /security/authentiation/publickeys/{owner.uuid}/{account.name}/{index}  \n    http methods: get, post, patch, delete  \n    these apis configure the public keys for user accounts.\n\n* endpoint: /security/key-managers/{source.uuid}/migrate  \n    http methods: post  \n    this api migrates the keys belonging to an svm between the cluster's key manager and the svm's key manager.\n\n* endpoint: /security/ssh  \n    http methods: get, patch  \n    this api manages the ssh server running in ontap.\n\n* endpoint: /storage/aggregates/{uuid}/metrics  \n    http methods: get  \n    this api provide historical performance metrics for the specified aggregate.\n\n* endpoint: /storage/disks  \n    http methods: patch  \n    this api updates the encryption controls of self-encrypting disks.\n\n* endpoint: /storage/snapshot-policies/{snapshot-policy.uuid}/schedules/{uuid}  \n    http methods: get, post, patch, delete  \n    these apis manage the policies reqarding when snapshots are taken.\n\n* endpoint: /protocols/ndmp  \n    http methods: get, patch  \n    this api manages ndmp mode at either svm-scope or node-scope.\n\n* endpoint: /protocols/ndmp/{node.uuid}  \n    http methods: get, patch  \n    this api manages node-scoped ndmp settings.\n\n* endpoint: /protocols/ndmp/sessions/{owner.uuid}/{session.id}  \n    http methods: get, delete  \n    these apis manage diagnostics information on ndmp settings belonging to a specific svm in the case of svm-scope or to a specific node in the case of node-scope.\n\n* endpoint: /protocols/ndmp/svms/{svm.uuid}  \n    http methods: get, patch  \n    these apis manage svm-scoped ndmp settings.\n\n* endpoint: /storage/snaplock/audit-logs/{svm.uuid}  \n    http methods: get, post, patch, delete  \n    these apis manage the loggin policies for a snaplock volume.\n\n* endpoint: /storage/snaplock/compliance-clocks/{node.uuid}  \n    http methods: get  \n    this api manages the compliance clock of the system which determines the expiry time of the snaplock objects in the system.\n\n* endpoint: /storage/snaplock/event-retention/operations/{id}  \n    http methods: get, post  \n    these apis display all event based retentions (ebr) operations and allow for applying an ebr policy on a specified volume.\n\n* endpoint: /storage/snaplock/event-retention/policies/{policy.name}  \n    http methods: get, post, patch, delete  \n    these apis manage retention policies for snaplock files and directories.\n\n* endpoint: /storage/snaplock/files/{volume.uuid}/{path}  \n    http methods: get, patch, delete  \n    these apis manage the snaplock retention time of a file.\n\n* endpoint: /storage/snaplock/file-fingerprints/{id}  \n    http methods: get, post, delete  \n    these apis manage key information about snaplock files and volumes.\n\n* endpoint: /storage/snaplock/litigations/{id}  \n    http methods: get, post, delete  \n    these apis retain compliance-mode worm files for the duration of a litigation.\n\n* endpoint: /storage/snaplock/litigations/{litigation.id/files  \n    http methods: get  \n    this api displays the list of files under the specified litigation id.\n\n* endpoint: /storage/snaplock/litigations/{litigation.id}/operations/{id}  \n    http methods: get, post, delete  \n    this api manages the legal-hold operations for the specified litigation id.\n\n* endpoint: /protocols/cifs/services/{svm.uuid}/metrics  \n    http methods: get  \n    this api retrieves history performance metrics for the cifs protocol of an svm.\n\n* endpoint: /protocols/nfs/connected-clients  \n    http methods: get  \n    this api provides a list of currently connected nfs clients or clients that can be connected but are currently idle.\n\n* endpoint: /protocols/nfs/services/{svm.uuid}/metrics  \n    http methods: get  \n    this api retrieves historical performance metrics for the nfs protocol of an svm.\n\n* endpoint: /protocols/s3/buckets  \n    http methods: get  \n    this api retrieves all s3 buckets for all svms.\n\n* endpoint: /protocols/s3/services/{svm.uuid}  \n    http methods: get, post, patch, delete  \n    these apis manage s3 servers which will allow you to store objects in ontap using amazon s3 protocol.\n\n* endpoint: /protocols/s3/services/{svm.uuid}/buckets/{uuid}  \n    http methods: get, post, patch, delete  \n    these apis manage s3 buckets which are a container of objects.\n\n* endpoint: /protocols/s3/services/{svm.uuid}/users/{name}  \n    http methods: get, post, patch, delete  \n    these apis manage s3 user accounts on the server. buckets that are created are associate with a user.\n\n## 9.6.0  \n(2019-07-16)\n\ninitial release of the library\n\n# copyright, trademarks, and feedback\n## copyright information\ncopyright &copy; 2023 netapp, inc. all rights reserved. printed in the u.s.\n\nno part of this document covered by copyright may be reproduced in any form or by any means\u2014graphic,\nelectronic, or mechanical, including photocopying, recording, taping, or storage in an electronic\nretrieval system\u2014without prior written permission of the copyright owner.\n\nsoftware derived from copyrighted netapp material is subject to the following license\nand disclaimer:\n\nthis software is provided by netapp \"as is\" and without any express or implied warranties,\nincluding, but not limited to, the implied warranties of merchantability and fitness for a\nparticular purpose, which are hereby disclaimed. in no event shall netapp be liable for any\ndirect, indirect, incidental, special, exemplary, or consequential damages (including,\nbut not limited to, procurement of substitute goods or services; loss of use, data, or\nprofits; or business interruption) however caused and on any theory of liability,\nwhether in contract, strict liability, or tort (including negligence or otherwise)arising in\nany way out of the use of this software, even if advised of the possibility of such damage.\n\nnetapp reserves the right to change any products described herein at any time, and without notice.\nnetapp assumes no responsibility or liability arising from the use of products described herein,\nexcept as expressly agreed to in writing by netapp. the use or purchase of this product does not\nconvey a license under any patent rights, trademark rights, or any other intellectual property\nrights of netapp. the product described in this manual may be protected by one or more u.s.\npatents, foreign patents, or pending applications.\n\nrestricted rights legend: use, duplication,or disclosure by the government is subject to\nrestrictions as set forth in subparagraph (c)(1)(ii) of the rights in technical data and\ncomputer software clause at dfars 252.277-7103 (october 1988) and far 52-227-19 (june 1987).\n\n## trademark information\nnetapp, the netapp logo, and the marks listed on the netapp trademarks page are trademarks of\nnetapp, inc. other company and product names may be trademarks of their respective owners.\nhttp://www.netapp.com/us/legal/netapptmlist.aspx\n\n## feedback\nif you have questions about the library, suggestions, or find a bug, you may contact\nby email.\n\n<ng-ontap-rest-python-lib@netapp.com>\n\nyou can help us to improve the quality of our documentation by sending us your feedback.\nif you have suggestions for improving this document, send us your comments by email.\n\n<doccomments@netapp.com>\n\nto help us direct your comments to the correct division, include in the subject line\nthe product name, version, and operating system.\n\nif you want to be notified automatically when production-level documentation is released\nor important changes are made to existing production-level documents,\nfollow twitter account @netappdoc.\n\nyou can also contact us in the following ways:\n\nnetapp, inc., 3060 olsen drive, san jose, ca 95128 u.s.\n\ntelephone: +1 (408) 822-6000\n\nfax: +1 (408) 822-4501\n\nsupport telephone: +1 (888) 463-8277\n\n\n",
  "docs_url": null,
  "keywords": "netapp ontap rest api development",
  "license": "",
  "name": "netapp-ontap",
  "package_url": "https://pypi.org/project/netapp-ontap/",
  "project_url": "https://pypi.org/project/netapp-ontap/",
  "project_urls": {
    "Documentation": "https://library.netapp.com/ecmdocs/ECMLP2886776/html/index.html",
    "Homepage": "https://devnet.netapp.com/restapi.php"
  },
  "release_url": "https://pypi.org/project/netapp-ontap/9.14.1.0/",
  "requires_dist": [
    "marshmallow (>=3.2.1)",
    "requests (>=2.26.0)",
    "requests-toolbelt (>=0.9.1)",
    "urllib3 (>=1.26.7)",
    "certifi (>=2022.12.7)",
    "recline (>=2020.5) ; extra == 'cli'"
  ],
  "requires_python": ">=3.6",
  "summary": "a library for working with ontap's rest apis simply in python",
  "version": "9.14.1.0",
  "releases": [],
  "developers": [
    "netapp",
    "ng-ontap-rest-python-lib@netapp.com"
  ],
  "kwds": "netapp_ontap netappresterror ontap netappdoc netapp",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_netapp_ontap",
  "homepage": "https://devnet.netapp.com/restapi.php",
  "release_count": 20,
  "dependency_ids": [
    "pypi_certifi",
    "pypi_marshmallow",
    "pypi_recline",
    "pypi_requests",
    "pypi_requests_toolbelt",
    "pypi_urllib3"
  ],
  "documentation_summary": "The HTML content outlines various resources and tools provided by NetApp for developers, focusing on the ONTAP REST API. It includes information on transitioning from ONTAPI to REST, a Python Client Library, the ONTAP PowerShell Toolkit, technical documentation, community discussions, and hands-on experiences. Additionally, it mentions the end of availability for ONTAPI in January 2024, with ONTAP 9.13.1 being the final version to offer normal support for ONTAPI. The page also highlights training resources, software and tools for development, and support resources available to developers. NetApp's commitment to providing comprehensive support and resources for developers working with ONTAP REST API is evident throughout the content.",
  "embedding": [
    -0.002106454223394394,
    -0.0186440609395504,
    0.023823751136660576,
    -0.028650600463151932,
    0.025051632896065712,
    0.013090359978377819,
    -0.0014113596407696605,
    -0.0003323310811538249,
    -0.00561015447601676,
    -0.019617898389697075,
    0.017077451571822166,
    0.003521342296153307,
    -0.010027710348367691,
    0.033166952431201935,
    -0.010733390226960182,
    -0.016371771693229675,
    0.018982786685228348,
    -0.03819139301776886,
    -0.016710497438907623,
    0.0037259894888848066,
    0.004812736064195633,
    0.015355592593550682,
    -0.021763164550065994,
    -0.011177968233823776,
    -0.00030189863173291087,
    0.002004130743443966,
    -0.0006633390439674258,
    -0.031078139320015907,
    0.01246936246752739,
    -0.013718415051698685,
    0.015129774808883667,
    -0.007416694890707731,
    -0.0020253011025488377,
    -0.021706711500883102,
    0.0023146297316998243,
    -0.008164715021848679,
    0.014170050621032715,
    -0.015778999775648117,
    0.03404199331998825,
    -0.01599070429801941,
    0.004219965077936649,
    0.00726144528016448,
    0.009703096933662891,
    -0.0010152967879548669,
    -0.0194485355168581,
    -0.0015957184368744493,
    0.00423760712146759,
    -0.01870051398873329,
    -0.013238552957773209,
    0.030711185187101364,
    0.005652495194226503,
    0.008171772584319115,
    -0.022426504641771317,
    -0.011022718623280525,
    0.01569431833922863,
    -0.014014801010489464,
    -5.76672719034832e-05,
    0.0251363143324852,
    0.0032267209608107805,
    0.0003063091426156461,
    0.023809636011719704,
    0.006534595042467117,
    -0.02344268374145031,
    0.004869190510362387,
    -0.003641307819634676,
    0.011728398501873016,
    -0.006809810176491737,
    0.006721599958837032,
    0.014720480889081955,
    0.018531151115894318,
    0.03878416121006012,
    0.05549465864896774,
    0.0016671685734763741,
    -0.00824939738959074,
    0.023358002305030823,
    -0.01744440570473671,
    -0.021071599796414375,
    0.000579980609472841,
    0.013908948749303818,
    0.014579344540834427,
    -0.0004776570131070912,
    -0.014537003822624683,
    -0.013351461850106716,
    0.015270911157131195,
    0.03748571127653122,
    0.004932702053338289,
    -0.01848881132900715,
    0.01269517932087183,
    0.019307399168610573,
    0.0010955679463222623,
    0.027069877833127975,
    -0.00424819253385067,
    0.007642512209713459,
    0.01201772689819336,
    -0.003200257895514369,
    0.034267812967300415,
    -0.027817897498607635,
    0.01549672894179821,
    -0.014988639391958714,
    -0.031049910932779312,
    -0.021706711500883102,
    0.029017554596066475,
    -0.014678140170872211,
    -0.015030980110168457,
    -0.01434647012501955,
    -0.007021514233201742,
    0.018517037853598595,
    0.004103527870029211,
    0.025573836639523506,
    0.02678760513663292,
    -0.017769018188118935,
    0.02389431744813919,
    -0.007303785998374224,
    -0.015228570438921452,
    -0.010888639837503433,
    -0.005102064926177263,
    0.001305507612414658,
    0.0009350257460027933,
    0.01675283908843994,
    0.006206453777849674,
    0.012180033139884472,
    0.032715316861867905,
    0.017627881839871407,
    -0.004361101426184177,
    0.011686057783663273,
    0.004428140819072723,
    0.00847521424293518,
    -0.04324406012892723,
    0.013788983225822449,
    -0.01728915609419346,
    0.018855763599276543,
    0.004092942923307419,
    0.016160067170858383,
    -0.00902564451098442,
    -0.010077107697725296,
    0.004565748386085033,
    -0.004929173272103071,
    -0.010182959958910942,
    -0.019773148000240326,
    -0.016357658430933952,
    0.023583820089697838,
    0.009265575557947159,
    -0.018333561718463898,
    -0.01491807121783495,
    -0.010839241556823254,
    0.026956968009471893,
    0.005627796519547701,
    -0.003983562346547842,
    0.013280893675982952,
    0.019279172644019127,
    0.0028262475971132517,
    0.013203268870711327,
    -0.019871942698955536,
    -0.010683991946280003,
    -0.011008605360984802,
    0.004897417966276407,
    0.017529087141156197,
    -0.004579862114042044,
    -0.020563509315252304,
    0.004519879352301359,
    0.0005036789807491004,
    0.03471944481134415,
    -0.032122544944286346,
    -0.03999793156981468,
    -0.01372547261416912,
    0.02904578112065792,
    0.01269517932087183,
    -0.038417208939790726,
    -0.01517211552709341,
    -0.015510842204093933,
    -0.0017641994636505842,
    -0.004279947839677334,
    -0.012356453575193882,
    -0.0008684272179380059,
    0.010585197247564793,
    0.004138811957091093,
    0.015906022861599922,
    -0.010225300677120686,
    -0.02124096266925335,
    -0.010952150449156761,
    0.030203096568584442,
    -0.0020905763376504183,
    0.0018506452906876802,
    0.03785266354680061,
    -0.024275384843349457,
    -0.012053010985255241,
    0.006612219847738743,
    -0.007818932645022869,
    -0.004745696671307087,
    0.019674353301525116,
    0.02718278579413891,
    0.028410669416189194,
    -0.0033114023972302675,
    -0.014776934869587421,
    -0.6029328107833862,
    -0.004710412584245205,
    -0.00293739209882915,
    -0.025079859420657158,
    0.026900514960289,
    0.002656884491443634,
    0.02688639983534813,
    0.009561961516737938,
    -0.021170394495129585,
    0.018460582941770554,
    -0.016781065613031387,
    0.037570394575595856,
    -0.02419070340692997,
    -0.022624094039201736,
    -0.018178312107920647,
    -0.008757486008107662,
    -0.01769845001399517,
    -0.01412065327167511,
    0.006806281860917807,
    0.0025492683053016663,
    -0.011001547798514366,
    0.03234836086630821,
    -0.022158345207571983,
    -0.005825386848300695,
    -0.0015419103438034654,
    -0.010437004268169403,
    0.01805128902196884,
    0.025079859420657158,
    -0.0076707396656274796,
    0.008792770095169544,
    -0.019504990428686142,
    0.032969359308481216,
    0.022553525865077972,
    -0.03079586662352085,
    0.04903063178062439,
    0.007931840606033802,
    -0.02379552274942398,
    0.03452185541391373,
    -0.005906539969146252,
    0.04194560647010803,
    -0.017557313665747643,
    0.01630120351910591,
    -0.0006060025189071894,
    -0.020168328657746315,
    -0.013767813332378864,
    0.0015295610064640641,
    0.011876591481268406,
    0.0024628224782645702,
    -0.009935971349477768,
    -0.015666091814637184,
    0.040054384618997574,
    -0.013090359978377819,
    -0.012857486493885517,
    -0.02629362978041172,
    0.005994750186800957,
    0.0051338206976652145,
    0.007621341850608587,
    -0.039518069475889206,
    0.052502576261758804,
    0.016964541748166084,
    -1.5822664863662794e-05,
    0.014127709902822971,
    -0.003934164997190237,
    -0.019081581383943558,
    -0.013429086655378342,
    0.010070051066577435,
    0.00671101501211524,
    -0.01949087716639042,
    -0.002425774233415723,
    -0.03559448942542076,
    -0.006689844653010368,
    0.015397933311760426,
    -0.022172460332512856,
    -0.021876074373722076,
    0.021466780453920364,
    0.03234836086630821,
    0.00709561025723815,
    0.002175258006900549,
    -0.015736659988760948,
    0.010966264642775059,
    0.008517554961144924,
    0.003533691633492708,
    0.016978656873106956,
    -0.03553803637623787,
    0.049256451427936554,
    0.015129774808883667,
    -0.016272976994514465,
    -0.002485757227987051,
    0.02635008469223976,
    -0.006125300657004118,
    0.021311530843377113,
    0.012772804126143456,
    0.008531669154763222,
    -0.024501202628016472,
    -0.017260927706956863,
    0.02649121917784214,
    -0.021960755810141563,
    -0.014360584318637848,
    -0.04403442144393921,
    -0.017627881839871407,
    0.004283476620912552,
    -0.009978312067687511,
    0.003796557430177927,
    -0.010288811288774014,
    0.02283579856157303,
    0.01317504234611988,
    -0.006054732948541641,
    -0.0006726010469719768,
    0.024275384843349457,
    -0.0048233214765787125,
    -0.0037753870710730553,
    -0.03169913589954376,
    -0.027380377054214478,
    0.0004948579589836299,
    0.013048019260168076,
    -0.015877796337008476,
    0.01990017108619213,
    0.01604715920984745,
    0.00930085964500904,
    0.004117641597986221,
    0.010705162771046162,
    0.01217297650873661,
    -0.00697211641818285,
    0.006806281860917807,
    -0.006605163216590881,
    0.01366901770234108,
    0.013492598198354244,
    -0.047703955322504044,
    -0.03333631530404091,
    -0.011834250763058662,
    0.006509896367788315,
    -0.008439930155873299,
    0.020605850964784622,
    -0.020902235060930252,
    0.04586918652057648,
    0.03099345788359642,
    0.030626503750681877,
    -2.093608600262087e-05,
    0.024120135232806206,
    -0.03460653871297836,
    -0.007833045907318592,
    0.0009570782422088087,
    0.0191380362957716,
    -0.019377967342734337,
    -0.012539929710328579,
    -0.02503751963376999,
    -0.005444319918751717,
    -0.0003576914605218917,
    -0.013788983225822449,
    0.024981064721941948,
    -0.016682270914316177,
    0.007183820474892855,
    -0.028565919026732445,
    -0.000555722857825458,
    0.02924337051808834,
    -0.02579965442419052,
    -0.010429947637021542,
    -0.032122544944286346,
    -0.010754560120403767,
    -0.004611617419868708,
    -0.014551118016242981,
    0.016583476215600967,
    -0.007494319695979357,
    -0.009307916276156902,
    -0.011559035629034042,
    -0.0036377795040607452,
    -0.007430808153003454,
    0.038953524082899094,
    0.001631884602829814,
    -0.03189672902226448,
    -0.021579688414931297,
    -0.013316177763044834,
    0.0065134246833622456,
    -0.0011458476074039936,
    0.0014678139705210924,
    0.01110034342855215,
    0.00997125543653965,
    -0.0047703953459858894,
    0.022581754252314568,
    -0.006453441921621561,
    -0.01274457760155201,
    0.006901548709720373,
    -0.017825471237301826,
    -0.023329773917794228,
    0.03613080456852913,
    0.019208604469895363,
    0.03079586662352085,
    0.039772115647792816,
    -0.03144509345293045,
    -0.007995352149009705,
    -0.020535282790660858,
    0.008616350591182709,
    0.0046363165602087975,
    0.03937693312764168,
    -0.015002752654254436,
    0.017458518967032433,
    -0.00011092404747614637,
    0.01107211597263813,
    0.0150733208283782,
    0.03878416121006012,
    -0.0041811526753008366,
    0.009540790691971779,
    0.022412391379475594,
    -0.017218587920069695,
    -0.016654042527079582,
    0.02155146189033985,
    0.02800137549638748,
    -0.013626676984131336,
    0.013930119574069977,
    -0.024966951459646225,
    0.024374181404709816,
    -0.002203485229983926,
    -0.00852461252361536,
    -0.00781187554821372,
    -0.0002683788479771465,
    0.0007118544890545309,
    0.004315231926739216,
    0.009576074779033661,
    -0.025658518075942993,
    0.009985369630157948,
    0.043018240481615067,
    0.00889862235635519,
    0.010324095375835896,
    -0.009928914718329906,
    -0.003069707192480564,
    -0.005532529670745134,
    0.018121857196092606,
    0.03672357648611069,
    -0.01462168525904417,
    -0.028227191418409348,
    0.005105593241751194,
    0.015934249386191368,
    0.022327709943056107,
    -0.01759965531527996,
    0.017980720847845078,
    -0.013534938916563988,
    0.026801718398928642,
    -0.023753182962536812,
    0.042369015514850616,
    -0.007039156276732683,
    0.012215317226946354,
    0.008940963074564934,
    0.02639242447912693,
    -0.01274457760155201,
    0.0027221599593758583,
    0.022807572036981583,
    0.012977452017366886,
    0.022609980776906013,
    -0.012427021749317646,
    -0.012109465897083282,
    0.022722890600562096,
    0.023456797003746033,
    -0.029949050396680832,
    0.006396987475454807,
    0.006075903307646513,
    -0.00889862235635519,
    -0.022172460332512856,
    0.012878656387329102,
    0.033562131226062775,
    0.0051514627411961555,
    0.0030485368333756924,
    -0.011460239998996258,
    0.012928053736686707,
    0.01517211552709341,
    0.03694939613342285,
    -0.03327985852956772,
    0.01421944797039032,
    -0.03892529755830765,
    -0.004855077248066664,
    -0.039913248270750046,
    0.011234422214329243,
    -0.012427021749317646,
    0.029525643214583397,
    -0.01685163378715515,
    0.00879982765763998,
    0.004025903530418873,
    -0.0034895867574959993,
    0.018771082162857056,
    0.02454354427754879,
    0.0033572716638445854,
    -0.005401978734880686,
    -0.038812387734651566,
    0.03864302486181259,
    0.0034384247846901417,
    0.0038177277892827988,
    -0.011304990388453007,
    -0.00614647101610899,
    0.00136460829526186,
    -0.0424819253385067,
    0.027267467230558395,
    -0.002168201142922044,
    0.0023163938894867897,
    -2.4919318093452603e-05,
    0.015002752654254436,
    -0.03404199331998825,
    0.009498449973762035,
    0.023851977661252022,
    -0.01354905217885971,
    -0.005465490277856588,
    0.014847503043711185,
    0.023809636011719704,
    0.01009827759116888,
    0.007099139038473368,
    0.018220651894807816,
    0.03864302486181259,
    0.008065920323133469,
    -0.007579001132398844,
    -0.01738795079290867,
    -0.035368673503398895,
    -0.0421714261174202,
    0.002027065260335803,
    0.003648364683613181,
    -0.0022123062517493963,
    -0.018121857196092606,
    0.0072896722704172134,
    0.005507830996066332,
    -0.013160928152501583,
    0.015397933311760426,
    0.01357022300362587,
    -0.02133975736796856,
    -0.009498449973762035,
    -0.033562131226062775,
    -0.0036977622658014297,
    0.023668501526117325,
    0.029582098126411438,
    0.02023889683187008,
    0.02749328501522541,
    0.008439930155873299,
    -0.039772115647792816,
    0.009491393342614174,
    -0.00781187554821372,
    0.016004817560315132,
    0.008602236397564411,
    -0.03034423105418682,
    0.0014192984672263265,
    0.010133561678230762,
    0.015906022861599922,
    0.00892684981226921,
    0.0013681367272511125,
    -0.0015480851288884878,
    0.007931840606033802,
    -0.009738381020724773,
    -0.003733046120032668,
    -0.03819139301776886,
    0.00904681533575058,
    -0.013690188527107239,
    -0.01730326935648918,
    0.025305677205324173,
    0.03392908349633217,
    0.007053269539028406,
    0.005147934425622225,
    0.010380550287663937,
    -0.007917727343738079,
    -0.02944096177816391,
    -0.031473319977521896,
    -0.01958967186510563,
    0.01164371706545353,
    0.04304646700620651,
    -0.03748571127653122,
    0.01978726126253605,
    0.024670565500855446,
    0.038755934685468674,
    0.012885713018476963,
    0.013781926594674587,
    0.007197934202849865,
    0.0009782486595213413,
    -0.0010241178097203374,
    -0.011029775254428387,
    0.006640446837991476,
    -0.020267123356461525,
    0.004851548466831446,
    0.031670909374952316,
    -0.002593373181298375,
    -0.007049741223454475,
    -0.008397589437663555,
    0.011968329548835754,
    -0.04366746544837952,
    -0.0023904903791844845,
    0.015539069660007954,
    0.00037246663123369217,
    0.012666952796280384,
    -0.028170738369226456,
    0.007571944501250982,
    -0.05363166704773903,
    -0.021579688414931297,
    -0.02354147844016552,
    -0.004869190510362387,
    -0.013958347029983997,
    0.005751290358603001,
    -0.01659758947789669,
    0.0023146297316998243,
    -0.007180292159318924,
    -0.006379345431923866,
    -0.002307572867721319,
    0.01559552364051342,
    -0.032320134341716766,
    -0.03658244013786316,
    0.01628709025681019,
    0.04553046077489853,
    -0.003990619443356991,
    -0.007698966655880213,
    0.006227624136954546,
    -0.012836315669119358,
    0.028551805764436722,
    -0.004294061567634344,
    -0.012377623468637466,
    0.003983562346547842,
    -0.03720343858003616,
    0.024176590144634247,
    -0.018107743933796883,
    -0.013471427373588085,
    0.0006474612164311111,
    0.016470566391944885,
    0.028410669416189194,
    0.013661961071193218,
    -0.026025472208857536,
    0.015115661546587944,
    0.007367297075688839,
    0.02373906783759594,
    0.031924955546855927,
    -0.0011890705209225416,
    -0.013633733615279198,
    0.016371771693229675,
    0.0031120479106903076,
    0.00015458797861356288,
    -0.01546850148588419,
    -0.006672202609479427,
    -0.023781409487128258,
    0.021664369851350784,
    0.026731150224804878,
    -0.004057658836245537,
    0.01287159975618124,
    0.005754818674176931,
    0.00032747953082434833,
    0.025573836639523506,
    -0.005306712351739407,
    -0.00892684981226921,
    0.00684862257912755,
    -0.0018876935355365276,
    0.012758690863847733,
    -0.0002685993677005172,
    0.03782443702220917,
    -0.004322289023548365,
    -0.009590188972651958,
    0.009759551845490932,
    -0.01934974081814289,
    -0.002849182114005089,
    0.011933045461773872,
    0.008813940919935703,
    0.03678003326058388,
    -0.0018400601111352444,
    -0.01799483597278595,
    -0.004481066949665546,
    -0.007466092240065336,
    0.02009776048362255,
    0.0030379516538232565,
    -0.009096212685108185,
    -0.0155672961845994,
    0.007776591461151838,
    0.012539929710328579,
    -0.01634354516863823,
    -0.011121513321995735,
    -0.00532435392960906,
    -0.026420652866363525,
    0.008891565725207329,
    0.002289931057021022,
    -0.018375901505351067,
    0.0061676413752138615,
    -0.0024028397165238857,
    -0.01663992926478386,
    -0.023414455354213715,
    -0.007092081941664219,
    0.01452289056032896,
    0.006139414384961128,
    0.004121169913560152,
    0.001509272726252675,
    -0.01860171929001808,
    0.017204472795128822,
    -0.02468467876315117,
    0.01409242581576109,
    0.01644233986735344,
    -0.0006214393069967628,
    0.032658860087394714,
    0.011262649670243263,
    0.0178395863622427,
    -0.0030926417093724012,
    0.007317899726331234,
    0.003194965422153473,
    -0.003565447172150016,
    -0.004131755325943232,
    -0.028255419805645943,
    -0.019702579826116562,
    -0.0017174482345581055,
    -0.029610324651002884,
    0.0025580893270671368,
    0.014537003822624683,
    0.011841307394206524,
    -0.0025033990386873484,
    0.00014190780348144472,
    0.03714698553085327,
    0.012123579159379005,
    -0.014974525198340416,
    -0.03198140859603882,
    -0.02509397454559803,
    -0.004975042771548033,
    8.010568126337603e-05,
    0.003330808598548174,
    0.016385884955525398,
    -0.0541679821908474,
    -0.0010320567525923252,
    0.023866090923547745,
    0.01675283908843994,
    0.00398709112778306,
    -0.012942167930305004,
    0.019815489649772644,
    0.001010004198178649,
    0.0037365746684372425,
    0.019123923033475876,
    0.025757312774658203,
    -0.003307874081656337,
    0.017020996659994125,
    -0.029666779562830925,
    -0.039320480078458786,
    -0.0008494620560668409,
    -0.0003312284534331411,
    0.0020941048860549927,
    0.014791049063205719,
    0.020323578268289566,
    -0.011142684146761894,
    0.038501888513565063,
    0.014889843761920929,
    -0.01740206405520439,
    0.011700171045958996,
    -0.009477280080318451,
    -0.015270911157131195,
    0.002794492058455944,
    -0.03618726134300232,
    -0.021974869072437286,
    0.016315316781401634,
    -0.022271255031228065,
    0.00657340744510293,
    0.011227365583181381,
    -0.004117641597986221,
    0.0041635106317698956,
    0.03624371439218521,
    0.002060584956780076,
    0.039969705045223236,
    0.025164542719721794,
    0.036808259785175323,
    0.019504990428686142,
    0.002977968892082572,
    -0.035961441695690155,
    -0.014417038299143314,
    -0.01400068774819374,
    -0.0004961811355315149,
    0.022525299340486526,
    0.01795249432325363,
    0.00810120441019535,
    -0.011587262153625488,
    -0.030908776447176933,
    -0.01738795079290867,
    0.0011917167576029897,
    -0.019321512430906296,
    0.03762684762477875,
    0.00657340744510293,
    0.023922545835375786,
    -0.03678003326058388,
    -0.01714801974594593,
    -0.021452665328979492,
    0.03607435151934624,
    -3.33819625666365e-05,
    -0.014014801010489464,
    0.010366436094045639,
    -0.010782787576317787,
    -0.006111186929047108,
    0.02119862101972103,
    0.005920653697103262,
    0.01685163378715515,
    0.020083647221326828,
    -0.023612046614289284,
    -0.018629947677254677,
    -0.04369569197297096,
    0.004541049711406231,
    -0.024924611672759056,
    -0.015821341425180435,
    0.028862304985523224,
    -3.531155743985437e-05,
    -0.011403786018490791,
    0.033816177397966385,
    0.014551118016242981,
    -0.012222373858094215,
    -0.005292598623782396,
    0.005991221405565739,
    0.03683648630976677,
    -0.02004130743443966,
    -0.0020394145976752043,
    -0.005006798077374697,
    -0.014607571996748447,
    0.010578140616416931,
    -0.005687779281288385,
    0.007473149336874485,
    0.009985369630157948,
    -0.03373149409890175,
    0.0017200945876538754,
    0.00545843318104744,
    -0.017811357975006104,
    -0.030824093148112297,
    -0.018728742375969887,
    -0.0010629302123561502,
    -0.009053871966898441,
    -0.02774732932448387,
    -0.023118071258068085,
    0.0034737088717520237,
    -0.022511186078190804,
    -0.05493011698126793,
    -0.03418312966823578,
    -0.02228536829352379,
    0.01740206405520439,
    0.017077451571822166,
    0.005313768982887268,
    -0.005952409002929926,
    0.056454382836818695,
    -0.006266436539590359,
    0.013901892118155956,
    0.0002152323431801051,
    -0.004230550490319729,
    -0.01709156483411789,
    0.018418243154883385,
    -0.010218244045972824,
    0.0019600256346166134,
    0.031670909374952316,
    0.0008044749847613275,
    -0.02969500608742237,
    -0.02963855117559433,
    0.01122030895203352,
    0.05049844831228256,
    0.009710154496133327,
    -0.01379603985697031,
    0.027860239148139954,
    -0.009667813777923584,
    -0.006534595042467117,
    -0.0022317124530673027,
    -0.03573562577366829,
    0.012638725340366364,
    -0.011382615193724632,
    0.015510842204093933,
    0.004692770540714264,
    0.005511359311640263,
    0.009138553403317928,
    -0.020930463448166847,
    0.013760756701231003,
    -0.0012296470813453197,
    -0.03497349098324776,
    -0.018404129892587662,
    -0.015920136123895645,
    0.004653958138078451,
    -0.012257657945156097,
    -0.0061006019823253155,
    -0.005214973818510771,
    -0.011382615193724632,
    -0.033110495656728745,
    0.019956624135375023,
    0.02348502352833748,
    -0.025023406371474266,
    -0.017430290579795837,
    0.03215077146887779,
    0.014960411936044693,
    -0.02743683010339737,
    0.012342339381575584,
    0.00013672545901499689,
    -0.019109809771180153,
    0.005828915163874626,
    -0.020704645663499832,
    -0.013309121131896973,
    -0.009943028911948204,
    0.01517211552709341,
    0.019123923033475876,
    -0.0343807190656662,
    -0.029017554596066475,
    -0.026618242263793945,
    -0.03618726134300232,
    -0.007706023287028074,
    -0.006950946059077978,
    0.03390085697174072,
    0.016710497438907623,
    0.004406970459967852,
    0.03418312966823578,
    -0.013224439695477486,
    0.0024063680320978165,
    0.011354387737810612,
    -0.029299825429916382,
    0.019519103690981865,
    -0.003000903408974409,
    -0.015129774808883667,
    0.0032425986137241125,
    -0.027761444449424744,
    -0.04482478275895119,
    -0.014078312553465366,
    0.0095690181478858,
    0.008552839048206806,
    0.0012120050378143787,
    0.01565197855234146,
    -0.0036271943245083094,
    -0.018968673422932625,
    -0.014889843761920929,
    0.013372632674872875,
    -0.005377280060201883,
    -0.00030322177917696536,
    0.019533216953277588,
    -0.027253353968262672,
    -0.012836315669119358,
    0.016922201961278915,
    0.011693114414811134,
    -0.015708431601524353,
    0.009526677429676056,
    -0.0030591220129281282,
    0.011121513321995735,
    0.04197383671998978,
    -0.03223545476794243,
    -0.03302581608295441,
    0.0015039801364764571,
    0.023866090923547745,
    0.00601239176467061,
    0.019674353301525116,
    0.0013954818714410067,
    0.028368327766656876,
    0.012116522528231144,
    -0.007085025310516357,
    0.010627537965774536,
    0.001348730525933206,
    -0.024063682183623314,
    0.01704922504723072,
    0.016682270914316177,
    0.0008807766134850681,
    -0.022779343649744987,
    -0.007487262599170208,
    0.0283824410289526,
    0.0009553140262141824,
    0.0024310669396072626,
    0.030570048838853836,
    -0.01858760602772236,
    -0.014607571996748447,
    -0.03432426601648331,
    0.01813597045838833,
    -4.768851795233786e-05,
    0.0012755162315443158,
    0.00942082516849041,
    0.016216522082686424,
    0.010888639837503433,
    -0.01774078980088234,
    -0.011304990388453007,
    -0.03929224982857704,
    -0.010331152006983757,
    -0.006746299099177122,
    -0.02348502352833748,
    -0.03582030534744263,
    -0.008482270874083042,
    -0.016174180433154106,
    -0.01834767498075962,
    0.019730808213353157,
    0.15479792654514313,
    0.004022374749183655,
    0.02413424849510193,
    0.01301979273557663,
    -0.019702579826116562,
    0.023174524307250977,
    0.001190834678709507,
    0.0006368760368786752,
    0.0050632525235414505,
    0.016964541748166084,
    -0.003359035821631551,
    -0.00695800269022584,
    0.004498708993196487,
    -0.008150601759552956,
    -0.014148879796266556,
    -0.010182959958910942,
    -0.025263337418437004,
    0.0006761294789612293,
    -0.028453009203076363,
    0.022059550508856773,
    -0.021128052845597267,
    -0.02129741571843624,
    0.005670137237757444,
    -0.002416953444480896,
    0.034917037934064865,
    0.005123235285282135,
    -0.01923683099448681,
    0.007212047465145588,
    0.028622372075915337,
    0.008489328436553478,
    -0.019886057823896408,
    0.006753355730324984,
    -0.004325817339122295,
    -0.0037259894888848066,
    -0.0009923622710630298,
    -0.03263063356280327,
    0.007099139038473368,
    0.02694285474717617,
    -0.006139414384961128,
    0.023612046614289284,
    -0.00301854545250535,
    -0.012857486493885517,
    0.005038553848862648,
    -0.028664713725447655,
    -2.600815969344694e-05,
    0.0037471598479896784,
    -0.015200342983007431,
    -0.029582098126411438,
    0.01262461207807064,
    0.026251288130879402,
    -0.01854526624083519,
    -0.007571944501250982,
    0.028269533067941666,
    0.00090768066002056,
    -0.013210326433181763,
    -0.02179139293730259,
    -0.004696299321949482,
    0.026928741484880447,
    0.005204388406127691,
    0.025573836639523506,
    0.008715145289897919,
    0.04567159712314606,
    -0.03384440392255783,
    0.007861273363232613,
    -0.03672357648611069,
    0.007134422659873962,
    -0.0037048188969492912,
    0.01774078980088234,
    -0.008820997551083565,
    0.022059550508856773,
    0.009900687262415886,
    -0.020676419138908386,
    -0.011354387737810612,
    0.009463165886700153,
    -0.010084164328873158,
    -0.011008605360984802,
    0.01599070429801941,
    0.003366092685610056,
    0.02409190870821476,
    0.03268709033727646,
    0.009618415497243404,
    0.010331152006983757,
    -0.01699277013540268,
    0.017684336751699448,
    -0.018573492765426636,
    -0.010535799898207188,
    0.023781409487128258,
    -0.02728158049285412,
    -0.0002895492361858487,
    -0.011043889448046684,
    -0.003115576459094882,
    -0.021861961111426353,
    -0.002291695214807987,
    -0.010874525643885136,
    0.012659896165132523,
    0.044457826763391495,
    -0.01079690083861351,
    0.010662822052836418,
    0.0074802059680223465,
    -0.004904474597424269,
    -0.02879173681139946,
    0.0567648820579052,
    0.024670565500855446,
    0.006248794496059418,
    -0.01769845001399517,
    -0.014776934869587421,
    0.010380550287663937,
    0.037118759006261826,
    0.009985369630157948,
    -0.014678140170872211,
    0.008185885846614838,
    -0.03184027224779129,
    -0.00837641954421997,
    -0.011544921435415745,
    0.0009711918537504971,
    0.004675128497183323,
    -0.004837435204535723,
    -0.008672804571688175,
    0.019208604469895363,
    0.004735111724585295,
    0.0011387907434254885,
    -0.034860581159591675,
    -0.014960411936044693,
    -0.019335627555847168,
    -0.0301466416567564,
    -0.002302280394360423,
    -0.001986488699913025,
    0.0028932872228324413,
    -0.01366901770234108,
    -0.019603785127401352,
    0.0424819253385067,
    -0.011601376347243786,
    0.006432271562516689,
    0.018629947677254677,
    -0.03175559267401695,
    -0.020662304013967514,
    -0.018474698066711426,
    -0.02334388718008995,
    0.004752753302454948,
    0.0020111873745918274,
    -0.022073663771152496,
    0.010691049508750439,
    0.01805128902196884,
    -0.004167039413005114,
    -0.00629819231107831,
    -0.0125681571662426,
    0.02629362978041172,
    -0.02029535174369812,
    0.0111920814961195,
    0.003022073768079281,
    -0.007346126716583967,
    -0.010980377905070782,
    0.008884509094059467,
    -0.008009465411305428,
    0.016216522082686424,
    -0.017684336751699448,
    -0.022370049729943275,
    -0.01246936246752739,
    -0.0017650816589593887,
    0.0006165877566672862,
    -0.03999793156981468,
    -0.011834250763058662,
    0.0286929402500391,
    -0.006830980535596609,
    -0.028650600463151932,
    6.0809750721091405e-05,
    -0.17997658252716064,
    0.025009293109178543,
    0.010712219402194023,
    -0.03288467973470688,
    0.039856795221567154,
    -0.010846298187971115,
    0.007691910024732351,
    -0.0026427707634866238,
    0.006591049488633871,
    0.002725688274949789,
    0.002175258006900549,
    0.023583820089697838,
    -0.01860171929001808,
    -0.028128396719694138,
    0.006929775699973106,
    -0.008729259483516216,
    -0.014162993989884853,
    0.027507398277521133,
    0.032969359308481216,
    -0.002288166666403413,
    0.026731150224804878,
    -0.008065920323133469,
    0.006591049488633871,
    0.01091686636209488,
    0.0001039775088429451,
    0.009830120019614697,
    -0.027902578935027122,
    -0.014078312553465366,
    0.0005376397748477757,
    0.006206453777849674,
    0.016527021303772926,
    0.004569276701658964,
    0.025602063164114952,
    0.0369776226580143,
    0.030005505308508873,
    0.011276762932538986,
    0.01039466354995966,
    -3.1204279366647825e-05,
    -0.01744440570473671,
    0.032715316861867905,
    0.025023406371474266,
    0.024501202628016472,
    0.0502726286649704,
    -0.0205917377024889,
    -0.0005786574329249561,
    0.009237349033355713,
    0.024501202628016472,
    -0.016865747049450874,
    -0.004364629741758108,
    -0.02633596956729889,
    0.03274354338645935,
    -0.019011013209819794,
    0.003898880910128355,
    -0.0016477623721584678,
    -0.003085584845393896,
    0.015835454687476158,
    -0.0006315834471024573,
    0.00752254668623209,
    0.00726144528016448,
    -0.014480549842119217,
    -0.010853355750441551,
    -0.016555247828364372,
    0.011142684146761894,
    -0.00859517976641655,
    -0.01137555856257677,
    -0.03999793156981468,
    -0.03353390470147133,
    0.019476762041449547,
    -0.007226161193102598,
    0.011848364025354385,
    0.0012102408800274134,
    -0.01452289056032896,
    0.0050456104800105095,
    0.0036624781787395477,
    0.013661961071193218,
    0.010006539523601532,
    -0.024656452238559723,
    0.023230979219079018,
    0.03474767506122589,
    0.002312865573912859,
    -0.012264715507626534,
    0.037909120321273804,
    -0.005521944724023342,
    0.01097332127392292,
    0.02198898233473301,
    -0.006538123358041048,
    0.007106195669621229,
    -0.0005548407207243145,
    0.01618829555809498,
    0.011481410823762417,
    0.0031737948302179575,
    -0.030965229496359825,
    0.013040962629020214,
    0.005543115083128214,
    0.008679861202836037,
    0.013104474171996117,
    0.01954733021557331,
    -0.0062029254622757435,
    0.011227365583181381,
    -0.0259407889097929,
    0.004071772564202547,
    0.023979000747203827,
    -0.0029903182294219732,
    0.006940361112356186,
    0.02834010124206543,
    0.03723166510462761,
    -0.014875730499625206,
    -0.000981776975095272,
    0.030767640098929405,
    -0.0012931582750752568,
    -0.02773321606218815,
    -0.014290016144514084,
    0.016583476215600967,
    -0.0047880373895168304,
    -0.018531151115894318,
    0.020817553624510765,
    0.0019953097216784954,
    -0.02629362978041172,
    -0.00204999977722764,
    -0.006224095821380615,
    0.03279999643564224,
    0.022228913381695747,
    -0.011361445300281048,
    0.00974543858319521,
    -0.04694182053208351,
    -0.06667263060808182,
    -0.07858449965715408,
    -0.03359035775065422,
    0.021269189193844795,
    0.016216522082686424,
    -0.025714972987771034,
    -0.02348502352833748,
    0.010225300677120686,
    0.03172736242413521,
    0.0019018070306628942,
    -0.00411058496683836,
    -0.013774869963526726,
    0.008940963074564934,
    -0.01889810524880886,
    -0.011135627515614033,
    -0.003544276813045144,
    0.0003100580652244389,
    -0.004505765624344349,
    -0.001688338932581246,
    -0.001359315705485642,
    0.03093700297176838,
    0.0038318412844091654,
    -0.009427881799638271,
    -0.0002088371111312881,
    0.007212047465145588,
    -0.001789780450053513,
    0.003291996195912361,
    -0.036215487867593765,
    0.01452289056032896,
    0.02364027313888073,
    0.012942167930305004,
    -0.006919190287590027,
    -0.047308772802352905,
    0.00012106819485779852,
    0.015426160767674446,
    0.002291695214807987,
    -0.0222006868571043,
    -0.05591806769371033,
    -0.004315231926739216,
    0.03497349098324776,
    -0.03152977302670479,
    -0.013379689306020737,
    -0.007296729367226362,
    0.005966522730886936,
    -0.029328051954507828,
    -0.015510842204093933,
    -0.010564026422798634,
    -0.013012736104428768,
    -0.0025492683053016663,
    0.00831996463239193,
    -0.00892684981226921,
    -0.013302064500749111,
    0.02114216610789299,
    -0.049002405256032944,
    -0.014007744379341602,
    0.007268501911312342,
    0.0017447933787479997,
    0.014212391339242458,
    0.009357314556837082,
    0.004474009852856398,
    -0.009561961516737938,
    -0.019053354859352112,
    -0.006894491612911224,
    -0.004075300879776478,
    0.007155593018978834,
    0.011784852482378483,
    -0.0008221169700846076,
    0.017726676538586617,
    -0.010641651228070259,
    0.0254468135535717,
    0.002623364794999361,
    -0.01858760602772236,
    0.019886057823896408,
    -0.017783131450414658,
    -0.0015401461860165,
    -0.01630120351910591,
    0.000863134628161788,
    -0.009089156053960323,
    0.005056195892393589,
    -0.004339930601418018,
    0.010027710348367691,
    0.0066827875562012196,
    -0.006996815092861652,
    -0.022680548951029778,
    -0.009392598643898964,
    0.012201203964650631,
    0.0037224609404802322,
    0.008256454020738602,
    -0.005006798077374697,
    0.013612563721835613,
    -0.02769087627530098,
    0.020746985450387,
    0.0009297331562265754,
    0.009907744824886322,
    -0.013739585876464844,
    -0.003600731259211898,
    -0.0016706968890503049,
    0.007021514233201742,
    0.0009826591704040766,
    -0.027168672531843185,
    0.03723166510462761,
    -0.030316004529595375,
    0.0006245266413316131,
    -0.08163303881883621,
    0.004682185593992472,
    -0.0111920814961195,
    -0.006453441921621561,
    -0.009075041860342026,
    -0.007268501911312342,
    1.813817652873695e-05,
    -0.027027536183595657,
    -0.005207917187362909,
    0.021918414160609245,
    -0.052502576261758804,
    -0.006344061344861984,
    0.0009200300555676222,
    0.013556108810007572,
    0.0010064758826047182,
    -0.01785369962453842,
    0.03782443702220917,
    -0.013153871521353722,
    0.04863545298576355,
    -0.018474698066711426,
    -0.013584336265921593,
    -0.00589948333799839,
    0.03158622980117798,
    -0.028777621686458588,
    -0.01549672894179821,
    -0.013739585876464844,
    -0.020013079047203064,
    -0.0035125212743878365,
    -0.016809292137622833,
    -0.02194664254784584,
    0.010034766979515553,
    -0.015158002264797688,
    -0.0026692338287830353,
    0.02818485163152218,
    -0.003807142609730363,
    0.004230550490319729,
    0.007014457136392593,
    -0.007473149336874485,
    0.004604560788720846,
    0.018206538632512093,
    -0.031275730580091476,
    -0.020732872188091278,
    0.021960755810141563,
    -0.027380377054214478,
    -0.01714801974594593,
    -0.014085369184613228,
    0.015426160767674446,
    -0.010747503489255905,
    0.020859895274043083,
    0.0026039585936814547,
    0.030174868181347847,
    0.011149740777909756,
    -0.008157658390700817,
    0.0023111014161258936,
    0.0005676312139257789,
    -0.003807142609730363,
    0.02603958547115326,
    0.009731324389576912,
    -0.005648966878652573,
    0.01764199510216713,
    0.01654113456606865,
    0.0002599988947622478,
    0.014762821607291698,
    0.00601239176467061,
    -0.0007678678375668824,
    -0.0011140919523313642,
    -0.021410325542092323,
    -0.014388810843229294,
    -0.008835110813379288,
    -0.009004474617540836,
    -0.03613080456852913,
    -0.027408603578805923,
    0.02198898233473301,
    0.03215077146887779,
    0.04550223425030708,
    -0.012758690863847733,
    -0.008425816893577576,
    -0.018079517409205437,
    -0.010839241556823254,
    0.018262993544340134,
    0.012765747494995594,
    -0.012314112856984138,
    -0.03669534996151924,
    0.028721168637275696,
    0.021255075931549072,
    -0.024628225713968277,
    -0.032066091895103455,
    0.021480893716216087,
    0.0006501075113192201,
    -0.006068846210837364,
    -0.003853011643514037,
    0.009103269316256046,
    0.009378484450280666,
    0.006245266180485487,
    -0.02208777889609337,
    0.0026092510670423508,
    -0.006446384824812412,
    -0.004361101426184177,
    0.004481066949665546,
    0.019801374524831772,
    0.008129430934786797,
    0.006315834354609251,
    0.022680548951029778,
    -0.02014010213315487,
    -0.041663337498903275,
    5.0996393838431686e-05,
    -0.0016592296306043863,
    -0.02304750308394432,
    -0.02210189215838909,
    -0.010429947637021542,
    0.03028777800500393,
    -0.011968329548835754,
    0.0025863165501505136,
    0.013986573554575443,
    -0.04188915342092514,
    -0.0016459980979561806,
    -0.0226946622133255,
    0.010853355750441551,
    -0.02468467876315117,
    0.0013637262163683772,
    0.005543115083128214,
    0.025376245379447937,
    0.0350017175078392,
    0.0059629944153130054,
    0.018178312107920647,
    0.021156281232833862,
    0.023174524307250977,
    -0.0035248706117272377,
    -0.0023657914716750383,
    0.0036377795040607452,
    -0.006379345431923866,
    0.008581066504120827,
    -0.05512770637869835,
    -0.013704301789402962,
    -0.026364197954535484,
    -0.0175008587539196,
    -0.0155672961845994,
    0.009618415497243404,
    -0.005391393788158894,
    0.0732777938246727,
    -0.011820136569440365,
    -0.030908776447176933,
    -0.014388810843229294,
    -0.0015542597975581884,
    0.0077554211020469666,
    0.01274457760155201,
    -0.00859517976641655,
    -0.01352082472294569,
    -0.013923062942922115,
    0.014275902882218361,
    -0.018305333331227303,
    -0.017684336751699448,
    -0.017416177317500114,
    -0.019053354859352112,
    0.008884509094059467,
    -0.026618242263793945,
    0.031416863203048706,
    0.0052185021340847015,
    0.01734560914337635,
    0.021876074373722076,
    0.019265059381723404,
    -0.030457140877842903,
    -0.017684336751699448,
    -0.03034423105418682,
    0.0034384247846901417,
    -0.00781187554821372,
    0.009032701142132282,
    0.005804216489195824,
    -0.059559375047683716,
    0.009392598643898964,
    0.0006659853388555348,
    -0.020958689972758293,
    -0.020619964227080345,
    0.021367983892560005,
    0.002935627941042185,
    -0.002776850014925003,
    -0.039969705045223236,
    0.003327280282974243,
    -0.00559604074805975,
    0.0050138551741838455,
    0.015821341425180435,
    -0.03819139301776886,
    -0.02774732932448387,
    0.0035301633179187775,
    -0.006199397146701813,
    0.025178655982017517,
    -0.01769845001399517,
    -0.03299758955836296
  ]
}
{
  "classifiers": [
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8"
  ],
  "description": "# protoc-gen-validate (pgv)\nwhile protocol buffers effectively guarantee the types of structured data, \nthey cannot enforce semantic rules for values. this package is a python implementation\nof [protoc-gen-validate][pgv-home], which allows for runtime validation of various \nsemantic assertions expressed as annotations on the protobuf schema. the syntax for all available annotations is\nin `validate.proto`. implemented python annotations are listed in the [rules comparison][rules-comparison].\n\n### example\n```python3\nfrom entities_pb2 import person\nfrom protoc_gen_validate.validator import validate, validationfailed, validate_all\n\np = person(name=\"foo\")\ntry:\n    validate(p)\nexcept validationfailed as err:\n    print(err)  # p.id is not greater than 999\n    \ntry:\n    validate_all(p)\nexcept validationfailed as err:\n    print(err)  \n    # p.id is not greater than 999\n    # p.email is not a valid email\n    # p.name pattern does not match ^[^[0-9]a-za-z]+( [^[0-9]a-za-z]+)*$\n    # home is required.\n```\n\n[pgv-home]: https://github.com/envoyproxy/protoc-gen-validate\n[rules-comparison]: https://github.com/envoyproxy/protoc-gen-validate/blob/main/rule_comparison.md\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "protoc-gen-validate",
  "package_url": "https://pypi.org/project/protoc-gen-validate/",
  "project_url": "https://pypi.org/project/protoc-gen-validate/",
  "project_urls": {
    "Homepage": "https://github.com/bufbuild/protoc-gen-validate"
  },
  "release_url": "https://pypi.org/project/protoc-gen-validate/1.0.2/",
  "requires_dist": [
    "validate-email (>=1.3)",
    "Jinja2 (>=2.11.1)",
    "protobuf (>=3.6.1)",
    "astunparse (>=1.6.3)"
  ],
  "requires_python": ">=3.6",
  "summary": "pgv for python via just-in-time code generation",
  "version": "1.0.2",
  "releases": [],
  "developers": [
    "buf",
    "dev@buf.build"
  ],
  "kwds": "protoc_gen_validate validate validate_all protobuf validation",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_protoc_gen_validate",
  "homepage": "https://github.com/bufbuild/protoc-gen-validate",
  "release_count": 9,
  "dependency_ids": [
    "pypi_astunparse",
    "pypi_jinja2",
    "pypi_protobuf",
    "pypi_validate_email"
  ]
}
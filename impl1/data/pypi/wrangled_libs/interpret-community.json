{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: artificial intelligence"
  ],
  "description": "# microsoft interpret community sdk for python\n\n### this package has been tested with python 3.7, 3.8 and 3.9\n\nthe interpret community sdk builds on interpret, an open source python package from microsoft research for training interpretable models, and helps to explain blackbox systems by adding additional extensions from the community to interpret ml models.\n\ninterpret-community is an experimental repository that hosts a wide range of community developed machine learning interpretability techniques. this repository makes it easy for anyone involved in the development of a machine learning system to improve transparency around their machine learning models. data scientists, machine learning engineers, and researchers can easily add their own interpretability techniques via the set of extension hooks built into the peer repository, interpret, and expand this repository to include their custom-made interpretability techniques.\n\nhighlights of the package include:\n\n- the tabularexplainer can be used to give local and global feature importances\n- the best explainer is automatically chosen for the user based on the model\n- local feature importances are for each evaluation row\n- global feature importances summarize the most importance features at the model-level\n- the api supports both dense (numpy or pandas) and sparse (scipy) datasets\n- there are utilities provided to convert engineered explanations, based on preprocessed data before training a model, to raw explanations on the original dataset\n- for more advanced users, individual explainers can be used\n- the kernelexplainer, gpukernelexplainer, pfiexplainer and mimicexplainer are for blackbox models\n- the mimicexplainer is faster but less accurate than the kernelexplainer, and supports various surrogate model types\n- the treeexplainer is for tree-based models\n- the linearexplainer is for linear models\n- the deepexplainer is for dnn tensorflow or pytorch models\n- the pfiexplainer can quickly compute global importance values\n- limeexplainer builds local linear approximations of the model's behavior by perturbing each instance\n- gpukernelexplainer is gpu-accelerated implementation of shap's kernelexplainer as a part of rapids's cuml library, and is optimized for gpu models, like those in cuml. it can be used with cpu-based estimators too.\n- an adapter to convert any feature importance values to an interpret-community style explanation\n\nplease see the github website for the documentation and sample notebooks:\nhttps://github.com/interpretml/interpret-community\n\nauto-generated sphinx api documentation can be found here:\nhttps://interpret-community.readthedocs.io/en/latest/index.html\n\nmore information on the explanationdashboard can be found here:\nhttps://github.com/microsoft/responsible-ai-toolbox\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "interpret-community",
  "package_url": "https://pypi.org/project/interpret-community/",
  "project_url": "https://pypi.org/project/interpret-community/",
  "project_urls": {
    "Homepage": "https://github.com/interpretml/interpret-community"
  },
  "release_url": "https://pypi.org/project/interpret-community/0.30.0/",
  "requires_dist": [
    "numpy",
    "pandas <2.0.0",
    "scipy",
    "ml-wrappers ~=0.5.0",
    "scikit-learn",
    "packaging",
    "interpret-core[required] <=0.4.3,>=0.1.20",
    "shap <=0.41.0,>=0.20.0",
    "raiutils ~=0.4.0",
    "tensorflow ; extra == 'deep'",
    "pyyaml ; extra == 'deep'",
    "keras ; extra == 'deep'",
    "lime >=0.2.0.0 ; extra == 'lime'",
    "lightgbm ; extra == 'mimic'",
    "hdbscan ; extra == 'sample'"
  ],
  "requires_python": "",
  "summary": "microsoft interpret extensions sdk for python",
  "version": "0.30.0",
  "releases": [],
  "developers": [
    "ilmat@microsoft.com",
    "microsoft_corp"
  ],
  "kwds": "interpretability interpretable python interpret features",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_interpret_community",
  "homepage": "https://github.com/interpretml/interpret-community",
  "release_count": 68,
  "dependency_ids": [
    "pypi_hdbscan",
    "pypi_interpret_core",
    "pypi_keras",
    "pypi_lightgbm",
    "pypi_lime",
    "pypi_ml_wrappers",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_pyyaml",
    "pypi_raiutils",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_shap",
    "pypi_tensorflow"
  ]
}
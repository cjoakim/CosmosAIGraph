{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# klaviyo python sdk (legacy)\n\n## legacy notice\n\nthis sdk is set to be deprecated + retired on 2024-01-01.\n\nwe have a new python sdk to go along with our [new api](https://developers.klaviyo.com/en/reference/api_overview).\n\nwe recommend migrating over to our [newest sdk](https://github.com/klaviyo/klaviyo-api-python).\n\nyou can read more about our sdk release history and support [here](https://developers.klaviyo.com/en/docs/sdk_overview)\n\nfor a comparison between our old and new apis, check out [this guide](https://developers.klaviyo.com/en/docs/apis_comparison_chart).\n\n# klaviyo python sdk\n\n- sdk version: 1.0.9.20220329\n\n## helpful resources\n\n- [api reference](https://developers.klaviyo.com/en/reference/api-overview)\n- [api guides](https://developers.klaviyo.com/en/docs)\n- [postman workspace](https://www.postman.com/klaviyo/workspace/klaviyo-developers)\n\n## design & approach\n\nthis sdk is a thin wrapper around our api. see our api reference for full documentation on api behavior.\n\nthis sdk exactly mirrors the organization and naming convention of the above language-agnostic resources, with a few namespace changes to make it pythonic (details in appendix).\n\n## organization\n\nthis sdk is organized into the following resources:\n\n- campaigns\n- dataprivacy\n- listssegments\n- metrics\n- profiles\n- templates\n- trackidentify\n\n# installation\n\n## pip\n\nyou can install this library using [`pip`](https://pypi.org/project/klaviyo-sdk/).\n\ndepending on your system configuration, you will need to run *one* of the following shell commands:\n\n`pip install klaviyo-sdk`\n\nor \n\n`pip3 install klaviyo-sdk`\n\n## source code\n\n*alternatively*, you can also run this using this repo as source code, by running *one* of the following shell commands within the cloned repo:\n\n`pip install -r requirements.txt`\n\nor\n\n`pip3 install -r requirements.txt`\n\n\nand then running python from the cloned repo.\n\n# usage example\n\n### to instantiate the client\n\n```python\nfrom klaviyo_sdk import client\n\nclient = client( \"your api key here\", max_delay=60, max_retries=3)\n```\n\nnote: \n* the sdk retries on resolvable errors, namely: rate limits (common) and server errors on klaviyo (rare).\n* the keyword arguments define retry behavior; the example is populated with the default values.\n* `max_delay` denotes total delay (in seconds) across all attempts.\n\n### to call the `metric-export` operation:\n\n```python\nmetric_id = \"metric_id\"\ncount = 100\n\nclient.metrics.metric_export(metric_id, count=count) \n```\n\n# error handling\n\nthis sdk throws an `apiexception` error when the server returns a non-`2xx` response. \n\nan `apiexception` consists of the following attributes:\n\n* `status` : `int`\n* `reason` : `str`\n* `body` : `bytes`\n    * this can be decoded into a native python dictionary as follows:\n        ```python\n        # to decode to a dictionary\n        import json\n        body_dict = json.loads(your_exception.body)\n\n        # to decode to a string\n        body_string = your_exception.body.decode('utf-8')\n        ```\n* `headers` : [class 'urllib3._collections.httpheaderdict'](https://urllib3.readthedocs.io/en/stable/user-guide.html?highlight=httpheaderdict#response-content)\n    * this can be interacted with as a normal dictionary:\n        * ex:\n            ```\n            date = your_exception.headers['date']\n            keys = your_exception.headers.keys()\n            values = your_exception.headers.values()\n            ```\n\n# comprehensive list of operations & parameters\n\n_**note:**_\n- organization: resource groups and operation_ids are listed in alphabetical order, first by resource name, then by **openapi summary**. operation summaries are those listed in the right side bar of the [api reference](https://developers.klaviyo.com/en/reference/track-post).\n- for example values / data types, as well as whether parameters are required/optional, please reference the corresponding api reference link.\n- some keyword args are required for the api call to succeed, the api docs above are the source of truth regarding which keyword params are required.\n- json payloads should be passed in as native python dictionaries.\n\n\n\n## campaigns\n\n\n#### [cancel a campaign](https://developers.klaviyo.com/en/reference/cancel-campaign)\n\n```python\nclient.campaigns.cancel_campaign(campaign_id)\n```\n\n\n\n\n#### [clone a campaign](https://developers.klaviyo.com/en/reference/clone-campaign)\n\n```python\nclient.campaigns.clone_campaign(campaign_id, name=name, list_id=list_id)\n```\n\n\n\n\n#### [create new campaign](https://developers.klaviyo.com/en/reference/create-campaign)\n\n```python\nclient.campaigns.create_campaign(list_id=list_id, template_id=template_id, from_email=from_email, from_name=from_name, subject=subject, name=name, use_smart_sending=use_smart_sending, add_google_analytics=add_google_analytics)\n```\n\n\n\n\n#### [get campaign info](https://developers.klaviyo.com/en/reference/get-campaign-info)\n\n```python\nclient.campaigns.get_campaign_info(campaign_id)\n```\n\n\n\n\n#### [get campaign recipients](https://developers.klaviyo.com/en/reference/get-campaign-recipients)\n\n```python\nclient.campaigns.get_campaign_recipients(campaign_id, count=count, sort=sort, offset=offset)\n```\n\n\n\n\n#### [get campaigns](https://developers.klaviyo.com/en/reference/get-campaigns)\n\n```python\nclient.campaigns.get_campaigns(page=page, count=count)\n```\n\n\n\n\n#### [schedule a campaign](https://developers.klaviyo.com/en/reference/schedule-campaign)\n\n```python\nclient.campaigns.schedule_campaign(campaign_id, send_time=send_time)\n```\n\n\n\n\n#### [send a campaign immediately](https://developers.klaviyo.com/en/reference/send-campaign)\n\n```python\nclient.campaigns.send_campaign(campaign_id)\n```\n\n\n\n\n#### [update campaign](https://developers.klaviyo.com/en/reference/update-campaign)\n\n```python\nclient.campaigns.update_campaign(campaign_id, list_id=list_id, template_id=template_id, from_email=from_email, from_name=from_name, subject=subject, name=name, use_smart_sending=use_smart_sending, add_google_analytics=add_google_analytics)\n```\n\n\n\n## dataprivacy\n\n\n#### [request a deletion](https://developers.klaviyo.com/en/reference/request-deletion)\n\n```python\nclient.dataprivacy.request_deletion(body=body)\n```\n\n\n\n## listssegments\n\n\n#### [add members to a list](https://developers.klaviyo.com/en/reference/add-members)\n\n```python\nclient.listssegments.add_members(list_id, body=body)\n```\n\n\n\n\n#### [create list](https://developers.klaviyo.com/en/reference/create-list)\n\n```python\nclient.listssegments.create_list(list_name=list_name)\n```\n\n\n\n\n#### [delete list](https://developers.klaviyo.com/en/reference/delete-list)\n\n```python\nclient.listssegments.delete_list(list_id)\n```\n\n\n\n\n#### [exclude profile from all email](https://developers.klaviyo.com/en/reference/exclude-globally)\n\n```python\nclient.listssegments.exclude_globally(email=email)\n```\n\n\n\n\n#### [get global exclusions & unsubscribes](https://developers.klaviyo.com/en/reference/get-global-exclusions)\n\n```python\nclient.listssegments.get_global_exclusions(reason=reason, sort=sort, count=count, page=page)\n```\n\n\n\n\n#### [get all exclusions for a list](https://developers.klaviyo.com/en/reference/get-list-exclusions)\n\n```python\nclient.listssegments.get_list_exclusions(list_id, marker=marker)\n```\n\n\n\n\n#### [get list info](https://developers.klaviyo.com/en/reference/get-list-info)\n\n```python\nclient.listssegments.get_list_info(list_id)\n```\n\n\n\n\n#### [check if profiles are in a list](https://developers.klaviyo.com/en/reference/get-list-members)\n\n```python\nclient.listssegments.get_list_members(list_id, body=body)\n```\n\n\n\n\n#### [check if profiles are in a list and not suppressed](https://developers.klaviyo.com/en/reference/get-list-subscriptions)\n\n```python\nclient.listssegments.get_list_subscriptions(list_id, body=body)\n```\n\n\n\n\n#### [get lists](https://developers.klaviyo.com/en/reference/get-lists)\n\n```python\nclient.listssegments.get_lists()\n```\n\n\n\n\n#### [get list and segment members](https://developers.klaviyo.com/en/reference/get-members)\n\n```python\nclient.listssegments.get_members(list_or_segment_id, marker=marker)\n```\n\n\n\n\n#### [check if profiles are in a segment](https://developers.klaviyo.com/en/reference/get-segment-members)\n\n```python\nclient.listssegments.get_segment_members(segment_id, body=body)\n```\n\n\n\n\n#### [remove profiles from list](https://developers.klaviyo.com/en/reference/remove-members)\n\n```python\nclient.listssegments.remove_members(list_id, body=body)\n```\n\n\n\n\n#### [subscribe profiles to list](https://developers.klaviyo.com/en/reference/subscribe)\n\n```python\nclient.listssegments.subscribe(list_id, body=body)\n```\n\n\n\n\n#### [unsubscribe profiles from list](https://developers.klaviyo.com/en/reference/unsubscribe)\n\n```python\nclient.listssegments.unsubscribe(list_id, body=body)\n```\n\n\n\n\n#### [update list name](https://developers.klaviyo.com/en/reference/update-list-name)\n\n```python\nclient.listssegments.update_list_name(list_id, list_name=list_name)\n```\n\n\n\n## metrics\n\n\n#### [get metrics info](https://developers.klaviyo.com/en/reference/get-metrics)\n\n```python\nclient.metrics.get_metrics(page=page, count=count)\n```\n\n\n\n\n#### [query event data](https://developers.klaviyo.com/en/reference/metric-export)\n\n```python\nclient.metrics.metric_export(metric_id, start_date=start_date, end_date=end_date, unit=unit, measurement=measurement, where=where, by=by, count=count)\n```\n\n\n\n\n#### [get events for a specific metric](https://developers.klaviyo.com/en/reference/metric-timeline)\n\n```python\nclient.metrics.metric_timeline(metric_id, since=since, count=count, sort=sort)\n```\n\n\n\n\n#### [get events for all metrics](https://developers.klaviyo.com/en/reference/metrics-timeline)\n\n```python\nclient.metrics.metrics_timeline(since=since, count=count, sort=sort)\n```\n\n\n\n## profiles\n\n\n#### [exchange id for profile id](https://developers.klaviyo.com/en/reference/exchange)\n\n```python\nclient.profiles.exchange(body=body)\n```\n\n\n\n\n#### [get profile](https://developers.klaviyo.com/en/reference/get-profile)\n\n```python\nclient.profiles.get_profile(person_id)\n```\n\n\n\n\n#### [get profile id](https://developers.klaviyo.com/en/reference/get-profile-id)\n\n```python\nclient.profiles.get_profile_id(email=email, phone_number=phone_number, external_id=external_id)\n```\n\n\n\n\n#### [get profile's events for a specific metric](https://developers.klaviyo.com/en/reference/profile-metric-timeline)\n\n```python\nclient.profiles.profile_metric_timeline(person_id, metric_id, since=since, count=count, sort=sort)\n```\n\n\n\n\n#### [get profile's events for all metrics](https://developers.klaviyo.com/en/reference/profile-metrics-timeline)\n\n```python\nclient.profiles.profile_metrics_timeline(person_id, since=since, count=count, sort=sort)\n```\n\n\n\n\n#### [update profile](https://developers.klaviyo.com/en/reference/update-profile)\n\n```python\nclient.profiles.update_profile(person_id, params=params)\n```\n\n\n\n## templates\n\n\n#### [clone template](https://developers.klaviyo.com/en/reference/clone-template)\n\n```python\nclient.templates.clone_template(template_id, name=name)\n```\n\n\n\n\n#### [create new template](https://developers.klaviyo.com/en/reference/create-template)\n\n```python\nclient.templates.create_template(name=name, html=html)\n```\n\n\n\n\n#### [delete template](https://developers.klaviyo.com/en/reference/delete-template)\n\n```python\nclient.templates.delete_template(template_id)\n```\n\n\n\n\n#### [get all templates](https://developers.klaviyo.com/en/reference/get-templates)\n\n```python\nclient.templates.get_templates(page=page, count=count)\n```\n\n\n\n\n#### [render template](https://developers.klaviyo.com/en/reference/render-template)\n\n```python\nclient.templates.render_template(template_id, context=context)\n```\n\n\n\n\n#### [render and send template](https://developers.klaviyo.com/en/reference/send-template)\n\n```python\nclient.templates.send_template(template_id, from_email=from_email, from_name=from_name, subject=subject, to=to, context=context)\n```\n\n\n\n\n#### [update template](https://developers.klaviyo.com/en/reference/update-template)\n\n```python\nclient.templates.update_template(template_id, name=name, html=html)\n```\n\n\n\n## trackidentify\n\n\n#### [identify profile (legacy)](https://developers.klaviyo.com/en/reference/identify-get)\n\n```python\nclient.trackidentify.identify_get(data)\n```\n\n\n\n\n#### [identify profile](https://developers.klaviyo.com/en/reference/identify-post)\n\n```python\nclient.trackidentify.identify_post(data=data)\n```\n\n\n\n\n#### [track profile activity (legacy)](https://developers.klaviyo.com/en/reference/track-get)\n\n```python\nclient.trackidentify.track_get(data)\n```\n\n\n\n\n#### [track profile activity](https://developers.klaviyo.com/en/reference/track-post)\n\n```python\nclient.trackidentify.track_post(data=data)\n```\n\n\n\n# appendix\n\n## limitations\n\n- the `api_key` is set at the global level: this means that if you manage multiple stores, you will need to run the code for each store in a different environment \n\n## refresher on catching exceptions:\n\n```python\ntry:\n    your_call\nexcept exception as e:\n    print(e.status)\n    print(e.reason)\n    print(e.body)\n    print(e.headers)\n```\n\n## namespace\n\nin the interest of making the sdk pythonic, we made the following namespace changes *relative* to the language agnostic resources up top.\n\n1. dashes `-` become underscores `_`\n2. all other non-alphanumeric symbols, including spaces, are removed.\n\nfor example:\n* `get-campaigns` becomes `get_campaigns`\n* `track & identify` becomes `trackidentify`\n\n## parameters & arguments\n\nthe parameters follow the same naming conventions as the resource groups and operations.\n\nwe stick to the following convention for parameters/arguments\n\n1. all parameters are passed as function args.\n2. all optional params, as well as all body and form data params (including required ones), are passed as keyword args.\n3. all query and path params that are tagged as `required` in the docs are passed as positional args.\n4. there is no need to pass in your private `api_key` for any operations, as it is defined upon client instantiation; public key is still required where.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "klaviyo-sdk",
  "package_url": "https://pypi.org/project/klaviyo-sdk/",
  "project_url": "https://pypi.org/project/klaviyo-sdk/",
  "project_urls": {
    "API Docs": "https://developers.klaviyo.com/",
    "Homepage": "https://github.com/klaviyo/klaviyo-python-sdk"
  },
  "release_url": "https://pypi.org/project/klaviyo-sdk/1.0.9.20220329/",
  "requires_dist": [
    "certifi (>=14.05.14)",
    "six (>=1.10)",
    "python-dateutil (>=2.5.3)",
    "setuptools (>=21.0.0)",
    "urllib3 (>=1.15.1)",
    "tenacity (>=8.0.0)",
    "requests (>=2.26.0)"
  ],
  "requires_python": ">=3.6",
  "summary": "klaviyo python sdk (legacy)",
  "version": "1.0.9.20220329",
  "releases": [],
  "developers": [
    "developers@klaviyo.com",
    "klaviyo_developers"
  ],
  "kwds": "sdk_overview klaviyo_sdk apis sdk api_overview",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_klaviyo_sdk",
  "homepage": "https://github.com/klaviyo/klaviyo-python-sdk",
  "release_count": 10,
  "dependency_ids": [
    "pypi_certifi",
    "pypi_python_dateutil",
    "pypi_requests",
    "pypi_setuptools",
    "pypi_six",
    "pypi_tenacity",
    "pypi_urllib3"
  ]
}
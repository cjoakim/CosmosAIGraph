{
  "classifiers": [],
  "description": "[![build status](https://www.travis-ci.org/awslabs/aws-cfn-template-flip.svg?branch=master)](https://www.travis-ci.org/awslabs/aws-cfn-template-flip)\n[![pypi version](https://badge.fury.io/py/cfn-flip.svg)](https://badge.fury.io/py/cfn-flip)\n[![codecov test coverage](https://codecov.io/gh/awslabs/aws-cfn-template-flip/branch/master/graphs/badge.svg?style=flat)](https://codecov.io/gh/awslabs/aws-cfn-template-flip)\n[![snap status](https://build.snapcraft.io/badge/awslabs/aws-cfn-template-flip.svg)](https://build.snapcraft.io/user/awslabs/aws-cfn-template-flip)\n\n[![get it from the snap store](https://snapcraft.io/static/images/badges/en/snap-store-white.svg)](https://snapcraft.io/cfn-flip)\n\n# aws cloudformation template flip\n\n## about\n\naws cloudformation template flip is a tool that converts [aws cloudformation](https://aws.amazon.com/cloudformation/) templates between [json](http://json.org/) and [yaml](http://yaml.org) formats, making use of the yaml format's short function syntax where possible.\n\nthe term \"flip\" is inspired by the well-known unix command-line tool [flip](https://ccrma.stanford.edu/~craig/utility/flip/) which converts text files between unix, mac, and ms-dos formats.\n\n## installation\n\naws cloudformation template flip can be installed using [pip](https://pip.pypa.io/en/stable/):\n\n```bash\npip install cfn-flip\n```\n\n## usage\n\naws cloudformation template flip is both a command line tool and a python library.\n\nnote that the command line tool is spelled `cfn-flip` with a hyphen, while the python package is `cfn_flip` with an underscore.\n\n### command line tool\n\n```\nusage: cfn-flip [options] [input] [output]\n\n  aws cloudformation template flip is a tool that converts aws\n  cloudformation templates between json and yaml formats, making use of the\n  yaml format's short function syntax where possible.\"\n\noptions:\n  -i, --input [json|yaml]   specify the input format. overrides -j and -y\n                            flags.\n  -o, --output [json|yaml]  specify the output format. overrides -j, -y, and\n                            -n flags.\n  -j, --json                convert to json. assume the input is yaml.\n  -y, --yaml                convert to yaml. assume the input is json.\n  -c, --clean               performs some opinionated cleanup on your\n                            template.\n  -l, --long                use long-form syntax for functions when converting\n                            to yaml.\n  -n, --no-flip             perform other operations but do not flip the\n                            output format.\n  --version                 show the version and exit.\n  --help                    show this message and exit.\n```\n\n\ncfn-flip will detect the format of the input template and convert json to yaml and yaml to json, respectively.\n\nexamples:\n\n* reading from `stdin` and outputting to `stdout`:\n\n    ```bash\n    cat examples/test.json | cfn-flip\n    ```\n\n* reading from a file and outputting to `stdout`:\n\n    ```bash\n    cfn-flip examples/test.yaml\n    ```\n\n* reading from a file and outputting to another file:\n\n    ```bash\n    cfn-flip examples/test.json output.yaml\n    ```\n\n* reading from a file and cleaning up the output\n\n    ```bash\n    cfn-flip -c examples/test.json\n    ```\n\n### python package\n\nto use aws cloudformation template flip from your own python projects, import one of the functions `flip`, `to_yaml`, or `to_json` as needed.\n\n```python\nfrom cfn_flip import flip, to_yaml, to_json\n\n\"\"\"\nall functions expect a string containing serialised data\nand return a string containing serialised data\nor raise an exception if there is a problem parsing the input\n\"\"\"\n\n# flip takes a best guess at the serialisation format\n# and returns the opposite, converting json into yaml and vice versa\nsome_yaml_or_json = flip(some_json_or_yaml)\n\n# to_json expects serialised yaml as input, and returns serialised json\nsome_json = to_json(some_yaml)\n\n# to_yaml expects serialised json as input, and returns serialised yaml\nsome_yaml = to_yaml(some_json)\n\n# the clean_up flag performs some opinionated, cloudformation-specific sanitation of the input\n# for example, converting uses of fn::join to fn::sub\n# flip, to_yaml, and to_json all support the clean_up flag\nclean_yaml = to_yaml(some_json, clean_up=true)\n```\n\n### configuration paramters\n\nyou can configure some parameters like:\n\n`max_col_width`: maximum columns before breakline. default value is 200\nto change the configuration you can use:\n\n**environment variable**\n\nlinux/unix:\n`export cfn_max_col_width=120`\n\nwindows: `set cfn_max_col_width=120`\n\n**python**\n\n```python\n\nfrom cfn_tools._config import config\nfrom cfn_flip import flip, to_yaml, to_json\n\n\"\"\"\nall functions expect a string containing serialised data\nand return a string containing serialised data\nor raise an exception if there is a problem parsing the input\n\"\"\"\n\n# change the default number of columns to break line to 120\nconfig['max_col_width'] = \"120\"\n\n# flip takes a best guess at the serialisation format\n# and returns the opposite, converting json into yaml and vice versa\nsome_yaml_or_json = flip(some_json_or_yaml)\n\n# to_json expects serialised yaml as input, and returns serialised json\nsome_json = to_json(some_yaml)\n\n# to_yaml expects serialised json as input, and returns serialised yaml\nsome_yaml = to_yaml(some_json)\n\n# the clean_up flag performs some opinionated, cloudformation-specific sanitation of the input\n# for example, converting uses of fn::join to fn::sub\n# flip, to_yaml, and to_json all support the clean_up flag\nclean_yaml = to_yaml(some_json, clean_up=true)\n\n```\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache2",
  "name": "cfn-flip",
  "package_url": "https://pypi.org/project/cfn-flip/",
  "project_url": "https://pypi.org/project/cfn-flip/",
  "project_urls": {
    "Homepage": "https://github.com/awslabs/aws-cfn-template-flip"
  },
  "release_url": "https://pypi.org/project/cfn-flip/1.3.0/",
  "requires_dist": [
    "Click",
    "PyYAML (>=4.1)",
    "six"
  ],
  "requires_python": "",
  "summary": "convert aws cloudformation templates between json and yaml formats",
  "version": "1.3.0",
  "releases": [],
  "developers": [
    "sengledo@amazon.co.uk",
    "steve_engledow"
  ],
  "kwds": "awslabs cfn_flip badge aws cfn_tools",
  "license_kwds": "apache2",
  "libtype": "pypi",
  "id": "pypi_cfn_flip",
  "homepage": "https://github.com/awslabs/aws-cfn-template-flip",
  "release_count": 23,
  "dependency_ids": [
    "pypi_click",
    "pypi_pyyaml",
    "pypi_six"
  ]
}
{
  "classifiers": [
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11"
  ],
  "description": "# kweb 1.2.1\n\nklayout web viewer ![demo](docs/_static/kweb.png)\n\nbased on https://github.com/klayoutmatthias/canvas2canvas\n\n## install & run\n\n### through pypi\n\nfrom a python virtual environment run:\n\n```bash\npython -m pip install kweb\nexport kweb_fileslocation=\"/path/to/gds/folder\" # or the windows equivalent with set\nuvicorn --reload kweb.default:app\n````\n\n#### advanced usage\n\nkweb offers two basic apps:\n\n- browser:\n\n  a version that provides a version with a file browser for a folder and the kweb viewer for viewing the gds file in that folder.\n  this can be used by importing the funciton `kweb.browser.get_app` and settings the `kweb_fileslocation` env variable of passing\n  `fileslocation=<path object for target folder>` to the function. alternatively there is a default one in `kweb.default.app` that\n  will only look for the env variable.\n\n- viewer:\n\n  only enables the `/gds/<filename>` endpoints, no root path, i.e. no file browser. available at `kweb.viewer.get_app`. this version\n  doesn't provide a listener for the env variable. use the `fileslocation` parameter in the function instead.\n\n### development\n\n#### clone & installl\n\n\n```bash\n# clone the repository to your local\ngit clone https://github.com/gdsfactory/kweb.git\n# install the necessary dependecies\ncd /kweb\npython -m pip install -e .[dev]\n```\n\n#### set a folder for kweb to use when looking for gds files\n\n```bash\nexport kweb_fileslocation=/path/to/folder/with/gdsfiles\n```\n\n#### run\n\n```bash\ncd src/kweb\nuvicorn --reload default:app\n```\n\ncopy the link http://127.0.0.1:8000/gds/file.gds (or http://localhost:8000/gds/file.gds also works) to your browser to open the waveguide example\n\n\n#### contributing\n\npleas make sure you have also installed pre-commit before committing:\n\n```bash\npython -m pip install pre-commit\npre-commit install\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "kweb",
  "package_url": "https://pypi.org/project/kweb/",
  "project_url": "https://pypi.org/project/kweb/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/kweb/1.2.1/",
  "requires_dist": [
    "klayout >=0.28.11",
    "fastapi",
    "uvicorn[standard]",
    "jinja2",
    "mypy ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "gitpython ; extra == 'dev'",
    "pylsp-mypy ; extra == 'dev'",
    "types-cachetools ; extra == 'dev'",
    "towncrier ; extra == 'dev'",
    "tbump ; extra == 'dev'",
    "sphinx ; extra == 'docs'",
    "docutils ==0.17.1 ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "sphinxcontrib-video ; extra == 'docs'",
    "sphinx-autodoc-typehints ; extra == 'docs'",
    "sphinx-book-theme ==0.3.3 ; extra == 'docs'",
    "sphinx-click ; extra == 'docs'",
    "sphinx-copybutton ; extra == 'docs'",
    "sphinx-markdown-tables ==0.0.17 ; extra == 'docs'",
    "myst-parser ; extra == 'docs'",
    "matplotlib ; extra == 'docs'",
    "nbsphinx ; extra == 'docs'",
    "autodoc-pydantic ; extra == 'docs'",
    "ipython ; extra == 'ipy'",
    "ipywidgets ; extra == 'ipy'",
    "ipyevents ; extra == 'ipy'",
    "pytest ; extra == 'tests'",
    "pytest-cov ; extra == 'tests'"
  ],
  "requires_python": ">=3.10",
  "summary": "klayout api implementation of gdsfactory",
  "version": "1.2.1",
  "releases": [],
  "developers": [
    "contact@gdsfactory.com"
  ],
  "kwds": "kweb_fileslocation kweb canvas2canvas klayout viewer",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_kweb",
  "homepage": "",
  "release_count": 21,
  "dependency_ids": [
    "pypi_autodoc_pydantic",
    "pypi_docutils",
    "pypi_fastapi",
    "pypi_gitpython",
    "pypi_ipyevents",
    "pypi_ipython",
    "pypi_ipywidgets",
    "pypi_jinja2",
    "pypi_klayout",
    "pypi_matplotlib",
    "pypi_mypy",
    "pypi_myst_parser",
    "pypi_nbsphinx",
    "pypi_pre_commit",
    "pypi_pylsp_mypy",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_sphinx",
    "pypi_sphinx_autodoc_typehints",
    "pypi_sphinx_book_theme",
    "pypi_sphinx_click",
    "pypi_sphinx_copybutton",
    "pypi_sphinx_markdown_tables",
    "pypi_sphinx_rtd_theme",
    "pypi_sphinxcontrib_video",
    "pypi_tbump",
    "pypi_towncrier",
    "pypi_types_cachetools",
    "pypi_uvicorn"
  ]
}
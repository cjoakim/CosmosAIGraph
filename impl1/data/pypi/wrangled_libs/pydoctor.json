{
  "classifiers": [
    "development status :: 6 - mature",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: documentation",
    "topic :: software development :: documentation"
  ],
  "description": "pydoctor\n--------\n\n.. image:: https://img.shields.io/pypi/pyversions/pydoctor.svg\n  :target: https://pypi.python.org/pypi/pydoctor\n\n.. image:: https://github.com/twisted/pydoctor/actions/workflows/unit.yaml/badge.svg\n  :target: https://github.com/twisted/pydoctor/actions/workflows/unit.yaml\n\n.. image:: https://codecov.io/gh/twisted/pydoctor/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/twisted/pydoctor\n\n.. image:: https://img.shields.io/badge/-documentation-blue\n  :target: https://pydoctor.readthedocs.io/\n\nthis is *pydoctor*, an api documentation generator that works by\nstatic analysis.\n\nit was written primarily to replace ``epydoc`` for the purposes of the\ntwisted project as ``epydoc`` has difficulties with ``zope.interface``.\nif you are looking for a successor to ``epydoc`` after moving to python 3,\n``pydoctor`` might be the right tool for your project as well.\n\n``pydoctor`` puts a fair bit of effort into resolving imports and\ncomputing inheritance hierarchies and, as it aims at documenting\ntwisted, knows about ``zope.interface``'s declaration api and can present\ninformation about which classes implement which interface, and vice\nversa.\n\n.. contents:: contents:\n\n\nsimple usage\n~~~~~~~~~~~~\n\nyou can run pydoctor on your project like this::\n\n    $ pydoctor --make-html --html-output=docs/api src/mylib\n\nfor more info, `read the docs <https://pydoctor.readthedocs.io/>`_.\n\nmarkup\n~~~~~~\n\npydoctor currently supports the following markup languages in docstrings:\n\n`epytext`__ (default)\n    the markup language of epydoc.\n    simple and compact.\n\n`restructuredtext`__\n    the markup language used by sphinx.\n    more expressive than epytext, but also slightly more complex and verbose.\n\n`google`__\n    docstrings formatted as specified by the google python style guide. \n    (compatible with restructuredtext markup)\n\n`numpy`__\n    docstrings formatted as specified by the numpy docstring standard. \n    (compatible with restructuredtext markup)\n\n``plaintext``\n    text without any markup.\n\n__ http://epydoc.sourceforge.net/manual-epytext.html\n__ https://docutils.sourceforge.io/rst.html\n__ https://google.github.io/styleguide/pyguide.html#s3.8-comments-and-docstrings\n__ https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard\n\nyou can select a different format using the ``--docformat`` option or the ``__docformat__`` module variable. \n\nwhat's new?\n~~~~~~~~~~~\n\npydoctor 23.9.1\n^^^^^^^^^^^^^^^\n\n* fix regression in link not found warnings' line numbers.\n\npydoctor 23.9.0\n^^^^^^^^^^^^^^^\n\nthis is the last major release to support python 3.6.\n\n* do not show `**kwargs` when keywords are specifically documented with the `keyword` field\n  and no specific documentation is given for the `**kwargs` entry.\n* fix annotation resolution edge cases: names are resolved in the context of the module \n  scope when possible, when impossible, the theoretical runtime scopes are used. a warning can\n  be reported when an annotation name is ambiguous (can be resolved to different names \n  depending on the scope context) with option ``-v``.\n* ensure that explicit annotation are honored when there are multiple declarations of the same name.\n* use stricter verification before marking an attribute as constant: \n   - instance variables are never marked as constant\n   - a variable that has several definitions will not be marked as constant\n   - a variable declaration under any kind of control flow block will not be marked as constant\n* do not trigger warnings when pydoctor cannot make sense of a potential constant attribute \n  (pydoctor is not a static checker).\n* fix presentation of type aliases in string form.\n* improve the ast colorizer to output less parenthesis when it's not required.\n* fix colorization of dictionary unpacking.\n* improve the class hierarchy such that it links top level names with intersphinx when possible.\n* add highlighting when clicking on \"view in hierarchy\" link from class page.\n* recognize variadic generics type variables (pep 646).\n* fix support for introspection of cython3 generated modules.\n* instance variables are marked as such across subclasses.\n\npydoctor 23.4.1\n^^^^^^^^^^^^^^^\n\n* pin ``urllib3`` version to keep compatibility with ``cachecontrol`` and python3.6.\n\npydoctor 23.4.0\n^^^^^^^^^^^^^^^\n\n* add support for python 3.11\n* add support for the ``@overload`` decorator.\n* show type annotations in function's signatures.\n* if none of a function's parameters have documentation, do not render the parameter table.\n* themes have been adjusted to render annotations more concisely.\n* fix a rare crash in the type inference. \n  invalid python code like a set of lists would raise a uncaught typeerror in the evaluation.\n* support when source path lies outside base directory (``--project-base-dir``).\n  since pydoctor support generating docs for multiple packages, \n  it is not certain that all of the source is even viewable below a single url. \n  we now allow to add arbitrary paths to the system, \n  but only the objects inside a module wich path is relative to\n  the base directory can have a source control link generated.\n* cache the default docutils settings on docutils>=0.19 to improve performance.\n* improve the search bar user experience by automatically appending wildcard to each query terms\n  when no terms already contain a wildcard. \n* link recognized constructors in class page.\n* an invalid epytext docstring will be rederered as plaintext, just like invalid restructuredtext docstrings (finally).\n\npydoctor 22.9.1\n^^^^^^^^^^^^^^^\n* ``pydoctor --help`` works again.\n\npydoctor 22.9.0\n^^^^^^^^^^^^^^^\n\n* add a special kind for exceptions (before, they were treated just like any other class).\n* the zopeinterface features now renders again. a regression was introduced in pydoctor 22.7.0.\n* python syntax errors are now logged as violations.\n* fixed rare crash in the rendering of parsed elements (i.e. docstrings and asts). \n  this is because xhtml entities like non-breaking spaces are not supported by twisted's ``xmlstring`` at the moment.\n* show the value of type aliases and type variables.\n* the ``--prepend-package`` now work as documented. \n  a regression was introduced in pydoctor 22.7.0 and it was not nesting new packages under the \"fake\" package.\n* `self` parameter is now removed only when the target is a method. in the previous version, it was always removed in any context.\n* `cls` parameter is now removed only when the target is a class method. in the previous version, it was always removed in any context.\n* add anchors aside attributes and functions to ease \n  the process of sharing links to these api docs.\n* fix a bug in the return clause of google-style docstrings \n  where the return type would be treated as the description \n  when there is no explicit description.\n* trigger warnings for unknown config options.\n* fix minor ux issues in the search bar.\n* fix deprecation in docutils 0.19 frontend\n\npydoctor 22.7.0\n^^^^^^^^^^^^^^^\n* add support for generics in class hierarchies.\n* fix long standing bugs in ``class`` method resolution order.\n* improve the extensibility of pydoctor (`more infos on extensions <https://pydoctor.readthedocs.io/en/latest/customize.html#use-a-custom-system-class>`_)\n* fix line numbers in restructuredtext xref warnings.\n* add support for `twisted.python.deprecated` (this was originally part of twisted's customizations).\n* add support for re-exporting it names imported from a wildcard import.\n\npydoctor 22.5.1\n^^^^^^^^^^^^^^^\n* ``docutils>=0.17`` is now the minimum supported version. this was done to fix crashing with ``attributeerror`` when processing type fields.\n\npydoctor 22.5.0\n^^^^^^^^^^^^^^^\n* add read the docs theme, enable it with option ``--theme=readthedocs``.\n* add a sidebar. configure it with options ``--sidebar-expand-depth`` and ``--sidebar-toc-depth``. disable with ``--no-sidebar``. \n* highlight the active function or attribute.\n* packages and modules are now listed together.\n* docstring summaries are now generated from docutils nodes:\n\n  - fixes a bug in restructuredtext references in summary.\n  - still display summary when the first paragraph is long instead of \"no summary\".\n\n* the module index now uses a more compact presentation for modules with more than 50 submodules and no subsubmodules.\n* fix source links for code hosted on bitbucket or sourceforge.\n* the ``--html-viewsource-template`` option was added to allow for custom url scheme when linking to the source code pages and lines. \n\npydoctor 22.4.0\n^^^^^^^^^^^^^^^\n* add option ``--privacy`` to set the privacy of specific objects when default rules doesn't fit the use case.\n* option ``--docformat=plaintext`` overrides any assignments to ``__docformat__`` \n  module variable in order to focus on potential python code parsing errors.\n* switch to ``configargparse`` to handle argument and configuration file parsing (`more infos <https://pydoctor.readthedocs.io/en/latest/help.html>`_).\n* improved performances with caching of docstring summaries.\n\npydoctor 22.3.0\n^^^^^^^^^^^^^^^\n* add client side search system based on lunr.js.\n* fix broken links in docstring summaries.\n* add cache for the xref linker, reduces the number of identical warnings.\n* fix crash when reparenting objects with duplicate names.\n\npydoctor 22.2.2\n^^^^^^^^^^^^^^^\n* fix resolving names re-exported in ``__all__`` variable.\n\npydoctor 22.2.1\n^^^^^^^^^^^^^^^\n* fix crash of pydoctor when processing a reparented module.\n\npydoctor 22.2.0\n^^^^^^^^^^^^^^^\n* improve the name resolving algo such that it checks in super classes for inherited attributes.\n* c-modules wins over regular modules when there is a name clash.\n* packages wins over modules when there is a name clash.\n* fixed that modules were processed in a random order leading to several hard to reproduce bugs.\n* intersphinx links have now dedicated markup.\n  with the default theme,\n  this allows to have the external intershinx links blue while the internal links are red.\n* smarter line wrapping in summary and parameters tables.\n* any code inside of ``if __name__ == '__main__'`` is now excluded from the documentation.\n* fix variables named like the current module not being documented.\n* the module index now only shows module names instead of their full name. you can hover over a module link to see the full name.\n* if there is only a single root module, `index.html` now documents that module (previously it only linked the module page).\n* fix introspection of functions comming from c-extensions.\n* fix that the colorizer might make twisted's flatten function crash with surrogates unicode strings.\n\npydoctor 21.12.1\n^^^^^^^^^^^^^^^^\n* include module ``sre_parse36.py`` within ``pydoctor.epydoc`` to avoid an extra pypi dependency.\n\npydoctor 21.12.0\n^^^^^^^^^^^^^^^^\n\n* add support for restructuredtext directives ``.. deprecated::``, ``.. versionchanged::`` and ``.. versionadded::``.\n* add syntax highlight for constant values, decorators and parameter defaults.\n* embedded documentation links inside the value of constants, decorators and parameter defaults.\n* provide option ``--pyval-repr-maxlines`` and ``--pyval-repr-linelen`` to control the size of a constant value representation. \n* provide option ``--process-types`` to automatically link types in docstring fields (`more info <https://pydoctor.readthedocs.io/en/latest/codedoc.html#type-fields>`_).\n* forked napoleon sphinx extension to provide google-style and numpy-style docstring parsing. \n* introduced fields ``warns``,  ``yields`` and ``yieldtype``. \n* following google style guide, ``*args`` and ``**kwargs`` are now rendered with asterisks in the parameters table.\n* mark variables as constants when their names is all caps or if using `final` annotation.\n\npydoctor 21.9.2\n^^^^^^^^^^^^^^^\n\n* fix ``attributeerror`` raised when parsing restructuredtext consolidated fields, caused by a change in ``docutils`` 0.18.\n* fix ``deprecationwarning``, use newer apis of ``importlib_resources`` module.\n\npydoctor 21.9.1\n^^^^^^^^^^^^^^^\n\n* fix deprecation warning and officially support python 3.10.\n* fix the literals style (use same style as before).\n\npydoctor 21.9.0\n^^^^^^^^^^^^^^^\n\n* add support for multiple themes, selectable with ``--theme`` option.\n* support selecting a different docstring format for a module using the ``__docformat__`` variable.\n* html templates are now customizable with ``--template-dir`` option.\n* change the fields layout to display the arguments type right after their name. same goes for variables.\n\npydoctor 21.2.2\n^^^^^^^^^^^^^^^\n\n* fix positioning of anchors, such that following a link to a member of a module or class will scroll its documentation to a visible spot at the top of the page.\n\npydoctor 21.2.1\n^^^^^^^^^^^^^^^\n\n* fix presentation of the project name and url in the navigation bars, such that it works as expected on all generated html pages.\n\npydoctor 21.2.0\n^^^^^^^^^^^^^^^\n\n* removed the ``--html-write-function-pages`` option. as a replacement, you can use the generated intersphinx inventory (``objects.inv``) for deep-linking your documentation.\n* fixed project version in the generated intersphinx inventory. this used to be hardcoded to 2.0 (we mistook it for a format version), now it is unversioned by default and a version can be specified using the new ``--project-version`` option.\n* fixed multiple bugs in python name resolution, which could lead to for example missing \"implemented by\" links.\n* fixed bug where class docstring fields such as ``cvar`` and ``ivar`` are ignored when they override inherited attribute docstrings.\n* property decorators containing one or more dots (such as ``@abc.abstractproperty``) are now recognized by the custom properties support.\n* improvements to `attrs`__ support:\n\n  - attributes are now marked as instance variables.\n  - type comments are given precedence over types inferred from ``attr.ib``.\n  - support positional arguments in ``attr.ib`` definitions. please use keyword arguments instead though, both for clarity and to be compatible with future ``attrs`` releases.\n\n* improvements in the treatment of the ``__all__`` module variable:\n\n  - assigning an empty sequence is interpreted as exporting nothing instead of being ignored.\n  - better error reporting when the value assigned is either invalid or pydoctor cannot make sense of it.\n\n* added ``except`` field as a synonym of ``raises``, to be compatible with epydoc and to fix handling of the ``:exceptions:`` consolidated field in restructuredtext.\n* exception types and external base classes are hyperlinked to their class documentation.\n* formatting of ``def func():`` and ``class class:`` lines was made consistent with code blocks.\n* changes to the \"show/hide private api\" button:\n\n  - the button was moved to the right hand side of the navigation bar, to avoid overlapping the content on narrow displays.\n  - the show/hide state is now synced with a query argument in the location bar. this way, if you bookmark the page or send a link to someone else, the show/hide state will be preserved.\n  - a deep link to a private api item will now automatically enable \"show private api\" mode.\n\n* improvements to the ``build_apidocs`` sphinx extension:\n\n  - api docs are now built before sphinx docs, such that the rest of the documentation can link to it via intersphinx.\n  - new configuration variable ``pydoctor_url_path`` that will automatically update the ``intersphinx_mapping`` variable so that it uses the latest api inventory.\n  - the extension can be configured to build api docs for more than one package.\n\n* ``pydoctor.__version__`` is now a plain ``str`` instead of an ``incremental.version`` object.\n\n__ https://www.attrs.org/\n\npydoctor 20.12.1\n^^^^^^^^^^^^^^^^\n\n* reject source directories outside the project base directory (if given), instead of crashing.\n* fixed bug where source directories containing symbolic links could appear to be outside of the project base directory, leading to a crash.\n* bring back source link on package pages.\n\npydoctor 20.12.0\n^^^^^^^^^^^^^^^^\n\n* python 3.6 or higher is required.\n\n* there is now a user manual that can be built with sphinx or read online on `read the docs`__. this is a work in progress and the online version will be updated between releases.\n\n* added support for python language features:\n\n  - type annotations of function parameters and return value are used when the docstring does not document a type.\n  - functions decorated with ``@property`` or any other decorator with a name ending in \"property\" are now formatted similar to variables.\n  - coroutine functions (``async def``) are included in the output.\n  - keyword-only and position-only parameters are included in the output.\n\n* output improvements:\n\n  - type names in annotations are hyperlinked to the corresponding documentation.\n  - styling changes to make the generated documentation easier to read and navigate.\n  - private api is now hidden by default on the module index, class hierarchy and index of names pages.\n  - the pydoctor version is included in the \"generated by\" line in the footer.\n\n* all parents of the html output directory are now created by pydoctor; previously it would create only the deepest directory.\n\n* the ``--add-package`` and ``--add-module`` options have been deprecated; pass the source paths as positional arguments instead.\n\n* new option ``-w``/``--warnings-as-errors`` to fail your build on documentation errors.\n\n* linking to the standard library documentation is more accurate now, but does require the use of an intersphinx inventory (``--intersphinx=https://docs.python.org/3/objects.inv``).\n\n* caching of intersphinx inventories is now enabled by default.\n\n* added a `sphinx extension`__ for embedding pydoctor's output in a project's sphinx documentation.\n\n* added an extra named ``rst`` for the dependencies needed to process restructuredtext (``pip install -u pydoctor[rst]``).\n\n* improved error reporting:\n\n  - more accurate source locations (file + line number) in error messages.\n  - warnings were added for common mistakes when documenting parameters.\n  - clearer error message when a link target is not found.\n\n* increased reliability:\n\n  - fixed crash when analyzing ``from package import *``.\n  - fixed crash when the line number for a docstring error is unknown.\n  - better unit test coverage, more system tests, started adding type annotations to the code.\n  - unit tests are also run on windows.\n\n__ https://pydoctor.readthedocs.io/\n__ https://pydoctor.readthedocs.io/en/latest/usage.html#building-pydoctor-together-with-sphinx-html-build\n\npydoctor 20.7.2\n^^^^^^^^^^^^^^^\n\n* fix handling of external links in restructuredtext under python 3.\n* fix reporting of errors in restructuredtext under python 3.\n* restore syntax highlighting of python code blocks.\n\npydoctor 20.7.1\n^^^^^^^^^^^^^^^\n\n* fix cross-reference links to builtin types in standard library.\n* fix and improve error message printed for unknown fields.\n\npydoctor 20.7.0\n^^^^^^^^^^^^^^^\n\n* python 3 support.\n* type annotations on attributes are supported when running on python 3.\n* type comments on attributes are supported when running on python 3.8+.\n* type annotations on function definitions are not supported yet.\n* undocumented attributes are now included in the output.\n* attribute docstrings: a module, class or instance variable can be documented by a following it up with a docstring.\n* improved error reporting: more errors are reported, error messages include file name and line number.\n* dropped support for implicit relative imports.\n* explicit relative imports (using ``from``) no longer cause warnings.\n* dropped support for index terms in epytext (``x{}``). this was never supported in any meaningful capacity, but now the tag is gone.\n\nthis was the last major release to support python 2.7 and 3.5.\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit/x11",
  "name": "pydoctor",
  "package_url": "https://pypi.org/project/pydoctor/",
  "project_url": "https://pypi.org/project/pydoctor/",
  "project_urls": {
    "Documentation": "https://pydoctor.readthedocs.io/",
    "Homepage": "https://github.com/twisted/pydoctor",
    "Issue Tracker": "https://github.com/twisted/pydoctor/issues",
    "Repository": "https://github.com/twisted/pydoctor"
  },
  "release_url": "https://pypi.org/project/pydoctor/23.9.1/",
  "requires_dist": [
    "appdirs",
    "CacheControl[filecache]",
    "Twisted",
    "urllib3 <2",
    "requests",
    "astor",
    "attrs",
    "docutils >=0.17",
    "lunr ==0.6.2",
    "configargparse",
    "toml",
    "importlib-metadata ; python_version < \"3.8\"",
    "importlib-resources ; python_version < \"3.9\"",
    "Sphinx ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "sphinxcontrib-spelling ; extra == 'docs'",
    "sphinx-argparse ; extra == 'docs'",
    "docutils ; extra == 'rst'",
    "docutils >=0.18.1 ; extra == 'test'",
    "coverage ; extra == 'test'",
    "pytest ; extra == 'test'",
    "hypothesis ; extra == 'test'",
    "cython-test-exception-raiser ; extra == 'test'",
    "bs4 ; extra == 'test'",
    "Sphinx <7.0.0 ; extra == 'test'",
    "pytest-subtests ; extra == 'test'"
  ],
  "requires_python": ">=3.6",
  "summary": "api doc generator.",
  "version": "23.9.1",
  "releases": [],
  "developers": [
    "maarten@boxingbeetle.com",
    "maarten_ter_huurne",
    "micahel@gmail.com",
    "michael_hudson"
  ],
  "kwds": "pydoctor pydoctor_url_path pyguide pyval yaml",
  "license_kwds": "mit/x11",
  "libtype": "pypi",
  "id": "pypi_pydoctor",
  "homepage": "https://github.com/twisted/pydoctor",
  "release_count": 44,
  "dependency_ids": [
    "pypi_appdirs",
    "pypi_astor",
    "pypi_attrs",
    "pypi_bs4",
    "pypi_cachecontrol",
    "pypi_configargparse",
    "pypi_coverage",
    "pypi_cython_test_exception_raiser",
    "pypi_docutils",
    "pypi_hypothesis",
    "pypi_importlib_metadata",
    "pypi_importlib_resources",
    "pypi_lunr",
    "pypi_pytest",
    "pypi_pytest_subtests",
    "pypi_requests",
    "pypi_sphinx",
    "pypi_sphinx_argparse",
    "pypi_sphinx_rtd_theme",
    "pypi_sphinxcontrib_spelling",
    "pypi_toml",
    "pypi_twisted",
    "pypi_urllib3"
  ]
}
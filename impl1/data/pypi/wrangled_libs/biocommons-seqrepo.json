{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.9"
  ],
  "description": "# biocommons.seqrepo\n\nseqrepo is a python package for storing and reading a local collection of biological sequences. the\nrepository is non-redundant, compressed, and journalled, making it efficient to store and transfer\nmultiple snapshots.\n\n## introduction\n\nspecific, named biological sequences provide the reference and coordinate sysstem for communicating\nvariation and consequential phenotypic changes. several databases of sequences exist, with\nsignificant overlap, all using distinct names. furthermore, these systems are often difficult to\ninstall locally.\n\nseqrepo provides an efficient, non-redundant and indexed storage system for biological sequences.\nclients refer to sequences and metadata using familiar identifiers, such as nm_000551.3 or grch38:1,\nor any of several hash-based identifiers. the interface supports fast slicing of arbitrary regions\nof large sequences.\n\na \"fully-qualified\" identifier includes a namespace to disambiguate accessions from different\norigins or sequence sets (e.g., \"1\" in grch37 and grch38). if the namespace is provided, seqrepo\nuses it as-is; if the namespace is not provided and the unqualified identifier refers to a unique\nsequence, it is returned; otherwise, the use of ambiguous identifiers raise an error.\n\nseqrepo favors namespaces from [identifiers.org](https://identifiers.org) whenever available.\nexamples include [refseq](<https://registry.identifiers.org/registry/refseq>) and\n[ensembl](<https://registry.identifiers.org/registry/ensembl>).\n\n[seqrepo-rest-service](https://github.com/biocommons/seqrepo-rest-service) provides a rest interface\nand docker image.\n\nreleased under the apache license, 2.0.\n\n[![ci_rel](https://travis-ci.org/biocommons/biocommons.seqrepo.svg?branch=master)](https://travis-ci.org/biocommons/biocommons.seqrepo)\n\\|\n[![cov](https://coveralls.io/repos/github/biocommons/biocommons.seqrepo/badge.svg?branch=)](https://coveralls.io/github/biocommons/biocommons.seqrepo?branch=)\n\\|\n[![pypi_rel](https://badge.fury.io/py/biocommons.seqrepo.png)](https://pypi.org/pypi?name=biocommons.seqrepo)\n\\| [changelog](https://github.com/biocommons/biocommons.seqrepo/tree/master/docs/changelog/0.5)\n\n## citation\n\nhart rk, prli\u0107 a (2020). **seqrepo: a system for managing local collections of biological\nsequences.** plos one 15(12): e0239883. <https://doi.org/10.1371/journal.pone.0239883>\n\n## features\n\n-   timestamped, read-only snapshots.\n-   space-efficient storage of sequences within a single snapshot and across snapshots.\n-   bandwidth-efficient transfer incremental updates.\n-   fast fetching of sequence slices on chromosome-scale sequences.\n-   precomputed digests that may be used as sequence aliases.\n-   mappings of external aliases (i.e., accessions or identifiers like nm_013305.4) to sequences.\n\n## deployments scenarios\n\n-   local read-only archive, mirrored from public site, accessed via python api (see [mirroring\n    documentation](docs/mirror.rst))\n-   local read-write archive, maintained with command line utility\n    and/or api (see [command line interface\n    documentation](docs/cli.rst)).\n-   docker data-only container that may be linked to application container.\n-   seqrepo and refget rest api for local or remote access (see\n    [seqrepo-rest-service](https://github.com/biocommons/seqrepo-rest-service))\n\n## technical quick peek\n\nwithin a single snapshot, sequences are stored *non-redundantly* and *compressed* in an add-only\njournalled filesystem structure. a truncated sha-512 hash is used to assess uniquness and as an\ninternal id. (the digest is truncated for space efficiency.)\n\nsequences are compressed using the block gzipped format\n([bgzf](https://samtools.github.io/hts-specs/samv1.pdf))), which enables pysam to provide fast\nrandom access to compressed sequences. (variable compression typically makes random access\nimpossible.)\n\nsequence files are immutable, thereby enabling the use of hardlinks across snapshots and eliminating\nredundant transfers (e.g., with rsync).\n\neach sequence id is associated with a namespaced alias in a sqlite database. such as\n`<seguid,rvvuhy0fxflnwf10fxfirsq7avq>`, `<ncbi,np_004009.1>`, `<gi,5032303>`,\n`<ensembl-75ensp00000354464>`, `<ensembl-85,ensp00000354464.4>`. the sqlite database is mutable\nacross releases.\n\nfor calibration, recent releases that include 3 human genome assemblies (including patches), and\nfull refseq sets (nm, nr, np, nt, xm, and xp) consumes approximately 8gb. the minimum marginal size\nfor additional snapshots is approximately 2gb (for the sqlite database, which is not hardlinked).\n\nfor more information, see [docs/design.rst](docs/design.rst).\n\n## requirements\n\nreading a sequence repository requires several python packages, all of which are available from\npypi. installation should be as simple as [pip install biocommons.seqrepo]{.title-ref}.\n\n*writing* sequence files also requires `bgzip`, which provided in the\n[htslib](https://github.com/samtools/htslib) repo. ubuntu users should install the `tabix` package\nwith `sudo apt install tabix`.\n\ndevelopment and deployments are on ubuntu. other systems may work but are not tested. patches to get\nother systems working would be welcomed.\n\n**mac developers** if you get \"xcrun: error: invalid active developer path\", you need to install\nxcode. see this [stackoverflow\nanswer](https://apple.stackexchange.com/questions/254380/why-am-i-getting-an-invalid-active-developer-path-when-attempting-to-use-git-a).\n\n## quick start\n\non ubuntu 16.04:\n\n    $ sudo apt install -y python3-dev gcc zlib1g-dev tabix\n    (osx: $ brew install python libpq)\n    $ pip install seqrepo\n    $ sudo mkdir -p /usr/local/share/seqrepo\n    $ sudo chown $user /usr/local/share/seqrepo\n    $ seqrepo pull -i 2018-11-26 \n    $ seqrepo show-status -i 2018-11-26 \n    seqrepo 0.2.3.post3.dev8+nb8298bd62283\n    root directory: /usr/local/share/seqrepo/2018-11-26, 7.9 gb\n    backends: fastadir (schema 1), seqaliasdb (schema 1) \n    sequences: 773587 sequences, 93051609959 residues, 192 files\n    aliases: 5579572 aliases, 5480085 current, 26 namespaces, 773587 sequences\n\n    # simple pythonic interface to sequences\n    >> from biocommons.seqrepo import seqrepo\n    >> sr = seqrepo(\"/usr/local/share/seqrepo/latest\")\n    >> sr[\"nc_000001.11\"][780000:780020]\n    'tggtggcacgcgcttgtagt'\n\n    # or, use the seqrepo shell for even easier access\n    $ seqrepo start-shell -i 2018-11-26\n    in [1]: sr[\"nc_000001.11\"][780000:780020]\n    out[1]: 'tggtggcacgcgcttgtagt'\n\n    # n.b. the following output is edited for simplicity\n    $ seqrepo export -i 2018-11-26 | head -n100\n    >sha1:9a2acba3dd7603f... seguid:mirlo912a/mpplus1cuyfmduluq ensembl-85:genscan00000003538 ...\n    mdsplreddsqtcarlweaevkrhslegltvfgtavqihnvqrrairakgtqeaqaellcrgprlldrfledacilkegrgtdtgqhcrgdarisshlea\n    sgthiqllalflvsssdtppsllrfchalehdirynssfdsyyplsphsrhnddlqtpsshlgyiitvpdptlpltfaslylgmapctsmgsssmgifqs\n    qrihafmkgknkwdeyegrkeswkirsnsqtgeptf\n    >sha1:ca996b263102b1... seguid:yplrjjecsvqqufeyy0hkdd16z58 ncbi:xr_001733142.1 gi:1034683989\n    tttacgtctttctgggaatttatactggaagtatacttacctctgtgcaaaattgcaaatatataaggtaattcattccagcattgcttatattaggttg\n    aactatgtaacattgacattgatgtgaatcaaaaatggttgaaggctggcagtttcatatgattcagcctataatagcaaaagattgaaaaaatccatta\n    atacagtgtggttcaaaaaaatttgttgtatcaaggtaaaataatagcctgaatataattaagatagtctgtgtatacatcgatgaaaacattgccaata\n\nsee [installation](docs/installation.rst) and\n[mirroring](docs/mirror.rst) for more information.\n\n## environment variables\n\nseqrepo_lru_cache_maxsize sets the lru_cache maxsize for the sqlite\nquery response caching. it defaults to 1 million but can also be set to\n\"none\" to be unlimited.\n\n## developing\n\nhere's how to get started developing:\n\n    make devready\n    source venv/bin/activate\n    seqrepo --version\n\n## building a docker image\n\ndocker images are available at https://hub.docker.com/r/biocommons/seqrepo.  tags correspond to the\nversion of data, not the version of seqrepo, because the intent is to make it easy to depend on a\nlocal version of seqrepo *files*.  each docker image is an installation of seqrepo that downloads\nthe corresponding version of seqrepo data.  when used in conjunction with docker volumes for\npersistence, this provides an easy way to incorporate seqrepo data into a docker stack.\n\n### building\n\n    cd misc/docker\n    make 2021-01-29.log  # builds and pushes to hub.docker.com (i.e., you need creds)\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "biocommons.seqrepo",
  "package_url": "https://pypi.org/project/biocommons.seqrepo/",
  "project_url": "https://pypi.org/project/biocommons.seqrepo/",
  "project_urls": {
    "Bug Tracker": "https://github.com/biocommons/biocommons.seqrepo/issues",
    "Homepage": "https://github.com/biocommons/biocommons.seqrepo"
  },
  "release_url": "https://pypi.org/project/biocommons.seqrepo/0.6.6/",
  "requires_dist": [
    "bioutils >0.4",
    "coloredlogs",
    "ipython",
    "pysam",
    "requests",
    "requests-html",
    "six",
    "tqdm",
    "yoyo-migrations",
    "bandit ; extra == 'dev'",
    "black ; extra == 'dev'",
    "cython ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "isort ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "pytest-runner ; extra == 'dev'",
    "setuptools-scm ; extra == 'dev'",
    "vcrpy ; extra == 'dev'",
    "wheel ; extra == 'dev'",
    "mkdocs ; extra == 'docs'"
  ],
  "requires_python": ">=3.9",
  "summary": "non-redundant, compressed, journalled, file-based storage for biological sequences",
  "version": "0.6.6",
  "releases": [],
  "developers": [
    "biocommons-dev@googlegroups.com"
  ],
  "kwds": "genome seqrepo identifiers identifier metadata",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_biocommons.seqrepo",
  "homepage": "",
  "release_count": 42,
  "dependency_ids": [
    "pypi_bandit",
    "pypi_bioutils",
    "pypi_black",
    "pypi_coloredlogs",
    "pypi_cython",
    "pypi_flake8",
    "pypi_ipython",
    "pypi_isort",
    "pypi_mkdocs",
    "pypi_pysam",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_runner",
    "pypi_requests",
    "pypi_requests_html",
    "pypi_setuptools_scm",
    "pypi_six",
    "pypi_tqdm",
    "pypi_vcrpy",
    "pypi_wheel",
    "pypi_yoyo_migrations"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "introduction to bmemcached\n==========================\n\na pure python module (thread safe) to access memcached via it's binary with sasl auth support.\n\nthe main purpose of this module it to be able to communicate with memcached using binary protocol and support authentication, so it can work with heroku for example.\n\nlatest compiled docs on read the docs `here <https://python-binary-memcached.readthedocs.org>`_.\n\ninstalling\n----------\nuse pip or easy_install.\n\n.. code-block:: bash\n\n    pip install python-binary-memcached\n\nusing\n-----\n\n.. code-block:: python\n\n    import bmemcached\n    client = bmemcached.client(('127.0.0.1:11211', ), 'user',\n                                'password')\n    client.set('key', 'value')\n    print(client.get('key'))\n\n\nusing it with distributed keys\n\n.. code-block:: python\n\n    import bmemcached\n    client = bmemcached.distributedclient(\n        ('127.0.0.1:11211', ), 'user', 'password'\n    )\n    client.set('key', 'value')\n    print(client.get('key'))\n\ntesting\n-------\n\n``python-binary-memcached`` unit tests are found in the ``test/`` directory\nand are designed to be run using `pytest`_. `pytest`_ will discover the tests\nautomatically, so all you have to do is:\n\n.. code-block:: console\n\n    $ pytest\n    ...\n    170 passed in 4.43 seconds\n\nthis runs the tests with the default python interpreter.\n\nyou can also verify that the tests pass on other supported python interpreters.\nfor this we use ``tox``, which will automatically create a ``virtualenv`` for\neach supported python version and run the tests. for example:\n\n.. code-block:: console\n\n    $ tox\n    ...\n    py27: commands succeeded\n    error:  py34: interpreternotfound: python3.4\n    py35: commands succeeded\n    py36: commands succeeded\n    py37: commands succeeded\n    py38: commands succeeded\n\nyou may not have all the required python versions installed, in which case you\nwill see one or more ``interpreternotfound`` errors.\n\nusing with django\n-----------------\nif you want to use it with django, go to `django-bmemcached <https://github.com/jaysonsantos/django-bmemcached>`_ to get a django backend.\n\ntests status\n------------\n.. image:: https://travis-ci.org/jaysonsantos/python-binary-memcached.png?branch=master\n    :target: https://travis-ci.org/jaysonsantos/python-binary-memcached\n\n.. _`pytest`: https://pypi.org/project/pytest/\n.. _`tox`: https://pypi.org/project/tox/\n\nv0.31.2 (2022-12-14)\n====================\n\nfix\n---\n\n-  remove setup\u2019s.py dependency on m2r\n\nv0.31.1 (2021-12-29)\n====================\n\nv0.31.0 (2021-12-28)\n====================\n\nrefactor\n--------\n\n-  use bytearrays for building up bytes for i/o. (#245)\n\nfeat\n----\n\n-  expose incr/decr ``default`` and ``time`` protocol arguments in\n   client class (#243)\n\nv0.30.1 (2020-10-11)\n====================\n\nv0.30.0 (2020-08-18)\n====================\n\n-  add ability to return default value on get but breaking get\u2019s api\n-  support an arbitrary collection of keys, not just a list\n\nv0.30 (2020-06-10)\n==================\n\nv0.29.0 (2020-01-29)\n====================\n\n-  added tls support on #211 thanks to @moisesguimaraes!\n\nv0.28.0 (2018-10-02)\n====================\n\n-  moved bmemcached.client to bmemcached.replicantclient *but keeps\n   backward compatibility*\n-  added distributedclient to distribute keys over servers using\n   consistent hashing\n\nv0.27.0 (2018-08-10)\n====================\n\n0.26.1 (2017-07-18)\n===================\n\n.. _section-1:\n\n0.26.0 (2017-01-13)\n===================\n\n.. _section-2:\n\n0.25.0 (2016-12-15)\n===================\n\n.. _section-3:\n\n0.24.7 (2016-11-08)\n===================\n\n.. _section-4:\n\n0.24.2 (2014-05-27)\n===================\n\n.. _section-5:\n\n0.24.1 (2014-05-20)\n===================\n\n.. _section-6:\n\n0.24 (2014-04-28)\n=================\n\n.. _section-7:\n\n0.23 (2014-04-18)\n=================\n\nv0.18 (2013-05-06)\n==================\n\nv0.17 (2013-04-15)\n==================\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "python-binary-memcached",
  "package_url": "https://pypi.org/project/python-binary-memcached/",
  "project_url": "https://pypi.org/project/python-binary-memcached/",
  "project_urls": {
    "Homepage": "https://github.com/jaysonsantos/python-binary-memcached"
  },
  "release_url": "https://pypi.org/project/python-binary-memcached/0.31.2/",
  "requires_dist": [
    "six",
    "uhashring"
  ],
  "requires_python": "",
  "summary": "a pure python module to access memcached via its binary protocol with sasl auth support",
  "version": "0.31.2",
  "releases": [],
  "developers": [
    "jayson_reis",
    "santosdosreis@gmail.com"
  ],
  "kwds": "bmemcached memcached heroku pip python3",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_python_binary_memcached",
  "homepage": "https://github.com/jaysonsantos/python-binary-memcached",
  "release_count": 40,
  "dependency_ids": [
    "pypi_six",
    "pypi_uhashring"
  ]
}
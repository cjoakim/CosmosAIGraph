{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: gnu general public license v3 or later (gplv3+)",
    "programming language :: python :: 3",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: internet :: www/http :: http servers",
    "topic :: software development",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: application frameworks"
  ],
  "description": "# starlette prometheus\n[![build status](https://github.com/perdy/starlette-prometheus/workflows/continuous%20integration/badge.svg)](https://github.com/perdy/starlette-prometheus/actions)\n[![codecov](https://codecov.io/gh/perdy/starlette-prometheus/branch/master/graph/badge.svg)](https://codecov.io/gh/perdy/starlette-prometheus)\n[![package version](https://img.shields.io/pypi/v/starlette-prometheus?logo=pypi&logocolor=white)](https://pypi.org/project/starlette-prometheus/)\n[![pypi version](https://img.shields.io/pypi/pyversions/starlette-prometheus?logo=python&logocolor=white)](https://pypi.org/project/starlette-prometheus/)\n\n## introduction\n\nprometheus integration for starlette.\n\n## requirements\n\n* python 3.6+\n* starlette 0.9+\n\n## installation\n\n```console\n$ pip install starlette-prometheus\n```\n\n## usage\n\na complete example that exposes prometheus metrics endpoint under `/metrics/` path.\n\n```python\nfrom starlette.applications import starlette\nfrom starlette_prometheus import metrics, prometheusmiddleware\n\napp = starlette()\n\napp.add_middleware(prometheusmiddleware)\napp.add_route(\"/metrics/\", metrics)\n```\n\nmetrics for paths that do not match any starlette route can be filtered by passing\n`filter_unhandled_paths=true` argument to `add_middleware` method.  note that not\nturning on this filtering can lead to unbounded memory use when lots of different\nroutes are called.\n\n## contributing\n\nthis project is absolutely open to contributions so if you have a nice idea, create an issue to let the community \ndiscuss it.\n",
  "docs_url": null,
  "keywords": "starlette,prometheus,metrics",
  "license": "gpl-3.0+",
  "name": "starlette-prometheus",
  "package_url": "https://pypi.org/project/starlette-prometheus/",
  "project_url": "https://pypi.org/project/starlette-prometheus/",
  "project_urls": {
    "Homepage": "https://github.com/PeRDy/starlette-prometheus",
    "Repository": "https://github.com/PeRDy/starlette-prometheus"
  },
  "release_url": "https://pypi.org/project/starlette-prometheus/0.9.0/",
  "requires_dist": [
    "starlette (>=0.12.2)",
    "prometheus_client (>=0.12,<0.13)"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "prometheus integration for starlette",
  "version": "0.9.0",
  "releases": [],
  "developers": [
    "perdy@perdy.io"
  ],
  "kwds": "starlette_prometheus prometheusmiddleware prometheus metrics starlette",
  "license_kwds": "gpl-3.0+",
  "libtype": "pypi",
  "id": "pypi_starlette_prometheus",
  "homepage": "https://github.com/perdy/starlette-prometheus",
  "release_count": 10,
  "dependency_ids": [
    "pypi_prometheus_client",
    "pypi_starlette"
  ]
}
{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "![diagrams logo](assets/img/diagrams.png)\n\n# diagrams\n\n[![license](https://img.shields.io/badge/license-mit-blue.svg)](/license)\n[![pypi version](https://badge.fury.io/py/diagrams.svg)](https://badge.fury.io/py/diagrams)\n![python version](https://img.shields.io/badge/python-%3e%3d%203.6-blue?logo=python)\n![run tests](https://github.com/mingrammer/diagrams/workflows/run%20tests/badge.svg?branch=master)\n[![todos](https://badgen.net/https/api.tickgit.com/badgen/github.com/mingrammer/diagrams?label=todos)](https://www.tickgit.com/browse?repo=github.com/mingrammer/diagrams)\n![contributors](https://img.shields.io/github/contributors/mingrammer/diagrams)\n\n<a href=\"https://www.buymeacoffee.com/mingrammer\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\" alt=\"buy me a coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ></a>\n\n**diagram as code**.\n\ndiagrams lets you draw the cloud system architecture **in python code**. it was born for **prototyping** a new system architecture design without any design tools. you can also describe or visualize the existing system architecture as well. diagrams currently supports main major providers including: `aws`, `azure`, `gcp`, `kubernetes`, `alibaba cloud`, `oracle cloud` etc... it also supports `on-premise` nodes, `saas` and major `programming` frameworks and languages.\n\n**diagram as code** also allows you to **track** the architecture diagram changes in any **version control** system.\n\n>  note: it does not control any actual cloud resources nor does it generate cloud formation or terraform code. it is just for drawing the cloud system architecture diagrams.\n\n## providers\n\n![aws provider](https://img.shields.io/badge/aws-orange?logo=amazon-aws&color=ff9900)\n![azure provider](https://img.shields.io/badge/azure-orange?logo=microsoft-azure&color=0089d6)\n![gcp provider](https://img.shields.io/badge/gcp-orange?logo=google-cloud&color=4285f4)\n![ibm provider](https://img.shields.io/badge/ibm-orange?logo=ibm&color=052fad)\n![kubernetes provider](https://img.shields.io/badge/kubernetes-orange?logo=kubernetes&color=326ce5)\n![alibaba cloud provider](https://img.shields.io/badge/alibabacloud-orange?logo=alibaba-cloud&color=ff6a00)\n![oracle cloud provider](https://img.shields.io/badge/oraclecloud-orange?logo=oracle&color=f80000)\n![openstack provider](https://img.shields.io/badge/openstack-orange?logo=openstack&color=da1a32)\n![firebase provider](https://img.shields.io/badge/firebase-orange?logo=firebase&color=ffca28)\n![digital ocean provider](https://img.shields.io/badge/digitalocean-0080ff?logo=digitalocean&color=0080ff)\n![elastic provider](https://img.shields.io/badge/elastic-orange?logo=elastic&color=005571)\n![outscale provider](https://img.shields.io/badge/outscale-orange?color=5f87bf)\n![on premise provider](https://img.shields.io/badge/onpremise-orange?color=5f87bf)\n![generic provider](https://img.shields.io/badge/generic-orange?color=5f87bf)\n![programming provider](https://img.shields.io/badge/programming-orange?color=5f87bf)\n![saas provider](https://img.shields.io/badge/saas-orange?color=5f87bf)\n![c4 provider](https://img.shields.io/badge/c4-orange?color=5f87bf)\n\n## getting started\n\nit requires **python 3.7** or higher, check your python version first.\n\nit uses [graphviz](https://www.graphviz.org/) to render the diagram, so you need to [install graphviz](https://graphviz.gitlab.io/download/) to use **diagrams**. after installing graphviz (or already have it), install the **diagrams**.\n\n> macos users can download the graphviz via `brew install graphviz` if you're using [homebrew](https://brew.sh).\n\n```shell\n# using pip (pip3)\n$ pip install diagrams\n\n# using pipenv\n$ pipenv install diagrams\n\n# using poetry\n$ poetry add diagrams\n```\n\nyou can start with [quick start](https://diagrams.mingrammer.com/docs/getting-started/installation#quick-start). check out [guides](https://diagrams.mingrammer.com/docs/guides/diagram) for more details, and you can find all available nodes list in [here](https://diagrams.mingrammer.com/docs/nodes/aws).\n\n## examples\n\n| event processing                                             | stateful architecture                                        | advanced web service                                         |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| ![event processing](https://diagrams.mingrammer.com/img/event_processing_diagram.png) | ![stateful architecture](https://diagrams.mingrammer.com/img/stateful_architecture_diagram.png) | ![advanced web service with on-premise](https://diagrams.mingrammer.com/img/advanced_web_service_with_on-premise.png) |\n\nyou can find all the examples on the [examples](https://diagrams.mingrammer.com/docs/getting-started/examples) page.\n\n## contributing\n\nto contribute to diagram, check out [contribution guidelines](contributing.md).\n\n> let me know if you are using diagrams! i'll add you in showcase page. (i'm working on it!) :)\n\n## who uses it?\n\n[gitpitch](https://gitpitch.github.io/gitpitch) is the perfect slide deck solution for tech conferences, training, developer advocates, and educators. diagrams is now available as a dedicated [cloud diagram markdown widget](https://gitpitch.github.io/gitpitch/#/diagrams/cloud-architecture) so you can use diagrams directly on any slide for conferences, meetups, and training.\n\n[cloudiscovery](https://github.com/cloud-architects/cloudiscovery) helps you to analyze resources in your cloud (aws/gcp/azure/alibaba/ibm) account. it allows you to create a diagram of analyzed cloud resource map based on this diagrams library, so you can draw your existing cloud infrastructure with cloudiscovery.\n\n[airflow diagrams](https://github.com/feluelle/airflow-diagrams) is an airflow plugin that aims to easily visualise your airflow dags on service level from providers like aws, gcp, azure, etc. via diagrams.\n\n## other languages\n\n- if you are familiar with go, you can use [go-diagrams](https://github.com/blushft/go-diagrams) as well.\n\n## license\n\n[mit](license)\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "diagrams",
  "package_url": "https://pypi.org/project/diagrams/",
  "project_url": "https://pypi.org/project/diagrams/",
  "project_urls": {
    "Homepage": "https://diagrams.mingrammer.com",
    "Repository": "https://github.com/mingrammer/diagrams"
  },
  "release_url": "https://pypi.org/project/diagrams/0.23.4/",
  "requires_dist": [
    "graphviz (>=0.13.2,<0.21.0)",
    "jinja2 (>=2.10,<4.0)",
    "typed-ast (>=1.5.4,<2.0.0)"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "diagram as code",
  "version": "0.23.4",
  "releases": [],
  "developers": [
    "mingrammer",
    "mingrammer@gmail.com"
  ],
  "kwds": "diagrams badge badgen diagram stateful_architecture_diagram",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_diagrams",
  "homepage": "https://diagrams.mingrammer.com",
  "release_count": 44,
  "dependency_ids": [
    "pypi_graphviz",
    "pypi_jinja2",
    "pypi_typed_ast"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "django-scim2\n============\n\n|tests| |coverage| |docs|\n\nthis is a provider-side implementation of the scim 2.0 [1]_\nspecification for use in django.\n\nnote that currently the only supported database is postgres.\n\n\ninstallation\n------------\n\ninstall with pip::\n\n$ pip install django-scim2\n\nthen add the ``django_scim`` app to ``installed_apps`` in your django's settings::\n\n    installed_apps = (\n        ...\n        'django_scim',\n    )\n\nby default, ``request.user.is_anonymous()`` is checked to determine if the scim\nrequest should be allowed or denied.\n\nif you have specific authentication needs, look into overriding the default \"is\nauthenticated predicate\" (i.e. see ``get_is_authenticated_predicate`` for\ndetails) or subclassing the middleware that performs the check\n(``auth_check_middleware``).\n\nadd the necessary url patterns to your root urls.py file. please note that the\nnamespace is mandatory and must be named `scim`::\n\n    urlpatterns = [\n        ...\n        path('scim/v2/', include('django_scim.urls')),\n    ]\n\nfinally, add settings appropriate for you app to your settings.py file::\n\n    scim_service_provider = {\n        'netloc': 'localhost',\n        'authentication_schemes': [\n            {\n                'type': 'oauth2',\n                'name': 'oauth 2',\n                'description': 'oauth 2 implemented with bearer token',\n            },\n        ],\n    }\n\nother scim settings can be provided but those listed above are required.\n\npypi\n----\n\nhttps://pypi.python.org/pypi/django-scim2\n\nsource\n------\n\nhttps://github.com/15five/django-scim2\n\ndocumentation\n-------------\n\n.. |docs| image:: https://readthedocs.org/projects/django-scim2/badge/\n  :target: https://django-scim2.readthedocs.io/\n  :alt: documentation status\n\nhttps://django-scim2.readthedocs.io/\n\ndevelopment\n-----------\n\nthis project uses poetry to manage dependencies, etc. thus to install the\nnecessary tools when developing, run:\n\n```\npoetry install\n```\n\ntests\n-----\n\n.. |tests| image:: https://github.com/15five/django-scim2/workflows/ci%2fcd/badge.svg\n    :target: https://github.com/15five/django-scim2/actions\n\nhttps://github.com/15five/django-scim2/actions\n\ntests are typically run locally with `tox` (https://tox.wiki/). tox will test\nall supported versions of python and django.\n\n```\ntox\n```\n\nto run the test suite with a single version of python (the version you created\nthe virtualenv with), run:\n\n\n```\npoetry run pytest tests/\n```\n\n\ncoverage\n--------\n\n.. |coverage| image:: https://codecov.io/gh/15five/django-scim2/graph/badge.svg\n    :target: https://codecov.io/gh/15five/django-scim2\n\nhttps://codecov.io/gh/15five/django-scim2/\n\n```\ntox -e coverage\n```\n\nlicense\n-------\n\nthis library is released under the terms of the **mit license**. full details in ``license.txt`` file.\n\n\nextensibility\n-------------\n\nthis library was forked and developed to be highly extensible. a number of\nadapters can be defined to control what different endpoints do to your resources.\nplease see the documentation for more details.\n\nplease note: this app does not implement authorization and authentication.\nsuch tasks are left for other apps such as `django oauth toolkit`_ to implement.\n\n.. _`django oauth toolkit`: https://github.com/evonove/django-oauth-toolkit\n\ndevelopment speed\n-----------------\n\nsince this project is relatively stable, time is only dedicated to it on\nfridays. thus if you issue a pr, bug, etc, please note that it may take a week\nbefore we get back to you. thanks you for your patience.\n\ncredits\n-------\n\nthis project was forked from https://bitbucket.org/atlassian/django_scim\n\n\n.. [1] http://www.simplecloud.info/, https://tools.ietf.org/html/rfc7644\n",
  "docs_url": null,
  "keywords": "django,scim,scim2,2.0",
  "license": "mit",
  "name": "django-scim2",
  "package_url": "https://pypi.org/project/django-scim2/",
  "project_url": "https://pypi.org/project/django-scim2/",
  "project_urls": {
    "Documentation": "https://django-scim2.readthedocs.io/en/stable/",
    "Homepage": "https://pypi.org/project/django-scim2/",
    "Repository": "https://github.com/15five/django-scim2"
  },
  "release_url": "https://pypi.org/project/django-scim2/0.19.1/",
  "requires_dist": [
    "scim2-filter-parser (>=0.5.0)",
    "django (>=3.2)"
  ],
  "requires_python": ">=3.8",
  "summary": "a partial implementation of the scim 2.0 provider specification for use with django.",
  "version": "0.19.1",
  "releases": [],
  "developers": [
    "devs",
    "devs@15five.com",
    "paul@15five.com",
    "paul_logston"
  ],
  "kwds": "django_scim django scim_service_provider auth_check_middleware scim",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_django_scim2",
  "homepage": "https://pypi.org/project/django-scim2/",
  "release_count": 74,
  "dependency_ids": [
    "pypi_django",
    "pypi_scim2_filter_parser"
  ]
}
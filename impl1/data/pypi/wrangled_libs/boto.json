{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "topic :: internet"
  ],
  "description": "####\nboto\n####\nboto 2.49.0\n\nreleased: 11-july-2018\n\n.. image:: https://travis-ci.org/boto/boto.svg?branch=develop\n        :target: https://travis-ci.org/boto/boto\n\n.. image:: https://pypip.in/d/boto/badge.svg\n        :target: https://pypi.python.org/pypi/boto/\n\n******\nboto 3\n******\n\n`boto3 <https://github.com/boto/boto3>`__, the next version of boto, is now\nstable and recommended for general use.  it can be used side-by-side with boto\nin the same project, so it is easy to start using boto3 in your existing\nprojects as well as new projects. going forward, api updates and all new\nfeature work will be focused on boto3.\n\nto assist users who still depend on boto and cannot immediately switch over, we\nwill be triaging and addressing critical issues and prs in boto in the short\nterm. as more users make the switch to boto3, we expect to reduce our\nmaintenance involvement over time. if we decide on a cutoff date or any\nsignificant changes to our maintenance plan, we will make pre-announcements\nwell ahead of schedule to allow ample time for our users to adapt/migrate.\n\n\n************\nintroduction\n************\n\nboto is a python package that provides interfaces to amazon web services.\ncurrently, all features work with python 2.6 and 2.7. work is under way to\nsupport python 3.3+ in the same codebase. modules are being ported one at\na time with the help of the open source community, so please check below\nfor compatibility with python 3.3+.\n\nto port a module to python 3.3+, please view our `contributing guidelines`_\nand the `porting guide`_. if you would like, you can open an issue to let\nothers know about your work in progress. tests **must** pass on python\n2.6, 2.7, 3.3, and 3.4 for pull requests to be accepted.\n\n\n********\nservices\n********\n\nat the moment, boto supports:\n\n* compute\n\n  * amazon elastic compute cloud (ec2) (python 3)\n  * amazon elastic map reduce (emr) (python 3)\n  * autoscaling (python 3)\n  * amazon kinesis (python 3)\n  * aws lambda (python 3)\n  * amazon ec2 container service (python 3)\n\n* content delivery\n\n  * amazon cloudfront (python 3)\n\n* database\n\n  * amazon relational data service (rds)\n  * amazon dynamodb (python 3)\n  * amazon simpledb (python 3)\n  * amazon elasticache (python 3)\n  * amazon redshift (python 3)\n\n* deployment and management\n\n  * aws elastic beanstalk (python 3)\n  * aws cloudformation (python 3)\n  * aws data pipeline (python 3)\n  * aws opsworks (python 3)\n  * aws cloudtrail (python 3)\n  * aws codedeploy (python 3)\n\n* administration & security\n\n  * aws identity and access management (iam) (python 3)\n  * aws key management service (kms) (python 3)\n  * aws config (python 3)\n  * aws cloudhsm (python 3)\n\n* application services\n\n  * amazon cloudsearch (python 3)\n  * amazon cloudsearch domain (python 3)\n  * amazon elastic transcoder (python 3)\n  * amazon simple workflow service (swf) (python 3)\n  * amazon simple queue service (sqs) (python 3)\n  * amazon simple notification server (sns) (python 3)\n  * amazon simple email service (ses) (python 3)\n  * amazon cognito identity (python 3)\n  * amazon cognito sync (python 3)\n  * amazon machine learning (python 3)\n\n* monitoring\n\n  * amazon cloudwatch (ec2 only) (python 3)\n  * amazon cloudwatch logs (python 3)\n\n* networking\n\n  * amazon route53 (python 3)\n  * amazon route 53 domains (python 3)\n  * amazon virtual private cloud (vpc) (python 3)\n  * elastic load balancing (elb) (python 3)\n  * aws direct connect (python 3)\n\n* payments and billing\n\n  * amazon flexible payment service (fps)\n\n* storage\n\n  * amazon simple storage service (s3) (python 3)\n  * amazon glacier (python 3)\n  * amazon elastic block store (ebs)\n  * google cloud storage\n\n* workforce\n\n  * amazon mechanical turk\n\n* other\n\n  * marketplace web services (python 3)\n  * aws support (python 3)\n\nthe goal of boto is to support the full breadth and depth of amazon\nweb services.  in addition, boto provides support for other public\nservices such as google storage in addition to private cloud systems\nlike eucalyptus, openstack and open nebula.\n\nboto is developed mainly using python 2.6.6 and python 2.7.3 on mac osx\nand ubuntu maverick.  it is known to work on other linux distributions\nand on windows.  most of boto requires no additional libraries or packages\nother than those that are distributed with python.  efforts are made\nto keep boto compatible with python 2.5.x but no guarantees are made.\n\n************\ninstallation\n************\n\ninstall via `pip`_:\n\n::\n\n    $ pip install boto\n\ninstall from source:\n\n::\n\n    $ git clone git://github.com/boto/boto.git\n    $ cd boto\n    $ python setup.py install\n\n**********\nchangelogs\n**********\n\nto see what has changed over time in boto, you can check out the\nrelease notes at `http://docs.pythonboto.org/en/latest/#release-notes`\n\n***************************\nfinding out more about boto\n***************************\n\nthe main source code repository for boto can be found on `github.com`_.\nthe boto project uses the `gitflow`_ model for branching.\n\n`online documentation`_ is also available. the online documentation includes\nfull api documentation as well as getting started guides for many of the boto\nmodules.\n\nboto releases can be found on the `python cheese shop`_.\n\njoin our irc channel `#boto` on freenode.\nwebchat irc channel: http://webchat.freenode.net/?channels=boto\n\njoin the `boto-users google group`_.\n\n*************************\ngetting started with boto\n*************************\n\nyour credentials can be passed into the methods that create\nconnections.  alternatively, boto will check for the existence of the\nfollowing environment variables to ascertain your credentials:\n\n**aws_access_key_id** - your aws access key id\n\n**aws_secret_access_key** - your aws secret access key\n\ncredentials and other boto-related settings can also be stored in a\nboto config file.  see `this`_ for details.\n\n.. _contributing guidelines: https://github.com/boto/boto/blob/develop/contributing\n.. _porting guide: http://boto.readthedocs.org/en/latest/porting_guide.html\n.. _pip: http://www.pip-installer.org/\n.. _release notes: https://github.com/boto/boto/wiki\n.. _github.com: http://github.com/boto/boto\n.. _online documentation: http://docs.pythonboto.org\n.. _python cheese shop: http://pypi.python.org/pypi/boto\n.. _this: http://docs.pythonboto.org/en/latest/boto_config_tut.html\n.. _gitflow: http://nvie.com/posts/a-successful-git-branching-model/\n.. _neo: https://github.com/boto/boto/tree/neo\n.. _boto-users google group: https://groups.google.com/forum/?fromgroups#!forum/boto-users\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "boto",
  "package_url": "https://pypi.org/project/boto/",
  "project_url": "https://pypi.org/project/boto/",
  "project_urls": {
    "Homepage": "https://github.com/boto/boto/"
  },
  "release_url": "https://pypi.org/project/boto/2.49.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "amazon web services library",
  "version": "2.49.0",
  "releases": [],
  "developers": [
    "mitch@garnaat.com",
    "mitch_garnaat"
  ],
  "kwds": "boto3 boto pythonboto boto_config_tut _boto",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_boto",
  "homepage": "https://github.com/boto/boto/",
  "release_count": 121,
  "dependency_ids": []
}
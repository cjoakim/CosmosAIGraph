{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "framework :: flake8",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development"
  ],
  "description": "flake8 plugin which checks for code that can be simplified\n[![pypi version](https://badge.fury.io/py/flake8-simplify.svg)](https://badge.fury.io/py/flake8-simplify)\n[![code on github](https://img.shields.io/badge/code-github-brightgreen)](https://github.com/martinthoma/flake8-simplify)\n[![actions status](https://github.com/martinthoma/flake8-simplify/workflows/unit%20tests/badge.svg)](https://github.com/martinthoma/flake8-simplify/actions)\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n# flake8-simplify\n\na [flake8](https://flake8.pycqa.org/en/latest/index.html) plugin that helps you simplify your code.\n\n## installation\n\ninstall with `pip`:\n\n```bash\npip install flake8-simplify\n```\n\npython 3.8 to 3.11 are supported.\n\n\n## usage\n\njust call `flake8 .` in your package or `flake your.py`:\n\n```\n$ flake8 .\n./foo/__init__.py:690:12: sim101 multiple isinstance-calls which can be merged into a single call for variable 'other'\n```\n\n\n## rules\n\npython-specific rules:\n\n* `sim101`: multiple isinstance-calls which can be merged into a single call by\n  using a tuple as a second argument ([example](#sim101))\n* [`sim104`](https://github.com/martinthoma/flake8-simplify/issues/4) ![](https://shields.io/badge/-legacyfix-inactive): use 'yield from iterable' (introduced in python 3.3, see [pep 380](https://docs.python.org/3/whatsnew/3.3.html#pep-380)) ([example](#sim104))\n* [`sim105`](https://github.com/martinthoma/flake8-simplify/issues/5): use ['contextlib.suppress(...)'](https://docs.python.org/3/library/contextlib.html#contextlib.suppress) instead of try-except-pass ([example](#sim105))\n* [`sim107`](https://github.com/martinthoma/flake8-simplify/issues/9): don't use `return` in try/except and finally  ([example](#sim107))\n* [`sim108`](https://github.com/martinthoma/flake8-simplify/issues/12): use the ternary operator if it's reasonable  ([example](#sim108))\n* [`sim109`](https://github.com/martinthoma/flake8-simplify/issues/11): use a tuple to compare a value against multiple values ([example](#sim109))\n* [`sim110`](https://github.com/martinthoma/flake8-simplify/issues/15): use [any(...)](https://docs.python.org/3/library/functions.html#any)  ([example](#sim110))\n* [`sim111`](https://github.com/martinthoma/flake8-simplify/issues/15): use [all(...)](https://docs.python.org/3/library/functions.html#all) ([example](#sim111))\n* [`sim113`](https://github.com/martinthoma/flake8-simplify/issues/18): use enumerate instead of manually incrementing a counter ([example](#sim113))\n* [`sim114`](https://github.com/martinthoma/flake8-simplify/issues/10): combine conditions via a logical or to prevent duplicating code ([example](#sim114))\n* [`sim115`](https://github.com/martinthoma/flake8-simplify/issues/17): use context handler for opening files ([example](#sim115))\n* [`sim116`](https://github.com/martinthoma/flake8-simplify/issues/31): use a dictionary instead of many if/else equality checks ([example](#sim116))\n* [`sim117`](https://github.com/martinthoma/flake8-simplify/issues/35): merge with-statements that use the same scope ([example](#sim117))\n* `sim119`: ![](https://img.shields.io/badge/-removed-lightgrey) moved to [flake8-scream](https://github.com/martinthoma/flake8-scream) due to [issue 63](https://github.com/martinthoma/flake8-simplify/issues/63)\n* `sim120` ![](https://shields.io/badge/-legacyfix-inactive): use 'class foobar:' instead of 'class foobar(object):' ([example](#sim120))\n* `sim121`: reserved for [sim908](#sim908) once it's stable\n* `sim125`: reserved for [sim905](#sim905) once it's stable\n* `sim126`: reserved for [sim906](#sim906) once it's stable\n* `sim127`: reserved for [sim907](#sim907) once it's stable\n\nsimplifying comparisons:\n\n* `sim201`: use 'a != b' instead of 'not a == b' ([example](#sim201))\n* `sim202`: use 'a == b' instead of 'not a != b' ([example](#sim202))\n* `sim203`: use 'a not in b' instead of 'not (a in b)' ([example](#sim203))\n* `sim204`: ![](https://img.shields.io/badge/-removed-lightgrey) moved to [flake8-scream](https://github.com/martinthoma/flake8-scream) due to [issue 116](https://github.com/martinthoma/flake8-simplify/issues/116)\n* `sim205`: ![](https://img.shields.io/badge/-removed-lightgrey) moved to [flake8-scream](https://github.com/martinthoma/flake8-scream) due to [issue 116](https://github.com/martinthoma/flake8-simplify/issues/116)\n* `sim206`: ![](https://img.shields.io/badge/-removed-lightgrey) moved to [flake8-scream](https://github.com/martinthoma/flake8-scream) due to [issue 116](https://github.com/martinthoma/flake8-simplify/issues/116)\n* `sim207`: ![](https://img.shields.io/badge/-removed-lightgrey) moved to [flake8-scream](https://github.com/martinthoma/flake8-scream) due to [issue 116](https://github.com/martinthoma/flake8-simplify/issues/116)\n* `sim208`: use 'a' instead of 'not (not a)' ([example](#sim208))\n* `sim210`: use 'bool(a)' instead of 'true if a else false' ([example](#sim210))\n* `sim211`: use 'not a' instead of 'false if a else true' ([example](#sim211))\n* [`sim212`](https://github.com/martinthoma/flake8-simplify/issues/6): use 'a if a else b' instead of 'b if not a else a' ([example](#sim212))\n* [`sim220`](https://github.com/martinthoma/flake8-simplify/issues/6): use 'false' instead of 'a and not a' ([example](#sim220))\n* [`sim221`](https://github.com/martinthoma/flake8-simplify/issues/6): use 'true' instead of 'a or not a' ([example](#sim221))\n* [`sim222`](https://github.com/martinthoma/flake8-simplify/issues/6): use 'true' instead of '... or true' ([example](#sim222))\n* [`sim223`](https://github.com/martinthoma/flake8-simplify/issues/6): use 'false' instead of '... and false' ([example](#sim223))\n* [`sim224`](https://github.com/martinthoma/flake8-simplify/issues/88): reserved for [sim901](#sim901) once it's stable\n* [`sim300`](https://github.com/martinthoma/flake8-simplify/issues/16): use 'age == 42' instead of '42 == age' ([example](#sim300))\n\nsimplifying usage of dictionaries:\n\n* [`sim401`](https://github.com/martinthoma/flake8-simplify/issues/72): use 'a_dict.get(key, \"default_value\")' instead of an if-block ([example](#sim401))\n* [`sim118`](https://github.com/martinthoma/flake8-simplify/issues/40): use 'key in dict' instead of 'key in dict.keys()' ([example](#sim118))\n* `sim119` reserved for [sim911](#sim911) once it's stable\n\ngeneral code style:\n\n* `sim102`: use a single if-statement instead of nested if-statements ([example](#sim102))\n* [`sim103`](https://github.com/martinthoma/flake8-simplify/issues/3): return the boolean condition directly ([example](#sim103))\n* [`sim106`](https://github.com/martinthoma/flake8-simplify/issues/8): handle error-cases first ([example](#sim106)). this rule was removed due to too many false-positives.\n* [`sim112`](https://github.com/martinthoma/flake8-simplify/issues/19): use capital environment variables ([example](#sim112))\n* `sim122` / sim902: ![](https://img.shields.io/badge/-removed-lightgrey) moved to [flake8-scream](https://github.com/martinthoma/flake8-scream) due to [issue 125](https://github.com/martinthoma/flake8-simplify/issues/125)\n* `sim123` / sim902: ![](https://img.shields.io/badge/-removed-lightgrey) moved to [flake8-scream](https://github.com/martinthoma/flake8-scream) due to [issue 130](https://github.com/martinthoma/flake8-simplify/issues/130)\n* `sim124`: reserved for sim909 once it's stable\n\n**experimental rules:**\n\ngetting rules right for every possible case is hard. i don't want to disturb\npeoples workflows. for this reason, flake8-simplify introduces new rules with\nthe `sim9` prefix. every new rule will start with sim9 and stay there for at\nleast 6 months. in this time people can give feedback. once the rule is stable,\nthe code will change to another number.\n\ncurrent experimental rules:\n\n* `sim901`: use comparisons directly instead of wrapping them in a `bool(...)` call ([example](#sim901))\n* `sim904`: assign values to dictionary directly at initialization ([example](#sim904))\n* [`sim905`](https://github.com/martinthoma/flake8-simplify/issues/86): split string directly if only constants are used ([example](#sim905))\n* [`sim906`](https://github.com/martinthoma/flake8-simplify/issues/101): merge nested os.path.join calls ([example](#sim906))\n* [`sim907`](https://github.com/martinthoma/flake8-simplify/issues/64): use optional[type] instead of union[type, none] ([example](#sim907))\n* [`sim908`](https://github.com/martinthoma/flake8-simplify/issues/50): use dict.get(key) ([example](#sim908))\n* [`sim909`](https://github.com/martinthoma/flake8-simplify/issues/114): avoid reflexive assignments ([example](#sim909))\n* [`sim910`](https://github.com/martinthoma/flake8-simplify/issues/171): avoid to use `dict.get(key, none)` ([example](#sim910))\n* [`sim911`](https://github.com/martinthoma/flake8-simplify/issues/161): avoid using `zip(dict.keys(), dict.values())` ([example](#sim911))\n\n## disabling rules\n\nyou might have good reasons to\n[ignore some flake8 rules](https://flake8.pycqa.org/en/3.1.1/user/ignoring-errors.html).\nto do that, use the standard flake8 configuration. for example, within the `setup.cfg` file:\n\n```python\n[flake8]\nignore = sim106, sim113, sim119, sim9\n```\n\n\n## examples\n\n### sim101\n\n```python\n# bad\nisinstance(a, int) or isinstance(a, float)\n\n# good\nisinstance(a, (int, float))\n```\n\n### sim102\n\n```python\n# bad\nif a:\n    if b:\n        c\n\n# good\nif a and b:\n    c\n```\n\n### sim105\n\n```python\n# bad\ntry:\n    foo()\nexcept valueerror:\n    pass\n\n# good\nfrom contextlib import suppress\n\nwith suppress(valueerror):\n    foo()\n```\n\nplease note that `contextlib.suppress` is roughly 3x slower than `try/except`\n([source](https://github.com/martinthoma/flake8-simplify/issues/91)).\n\n### sim107\n\n```python\n# bad: this example returns 3!\ndef foo():\n    try:\n        1 / 0\n        return \"1\"\n    except:\n        return \"2\"\n    finally:\n        return \"3\"\n\n\n# good\ndef foo():\n    return_value = none\n    try:\n        1 / 0\n        return_value = \"1\"\n    except:\n        return_value = \"2\"\n    finally:\n        return_value = \"3\"  # you might also want to check if \"except\" happened\n    return return_value\n```\n\n### sim108\n\n```python\n# bad\nif a:\n    b = c\nelse:\n    b = d\n\n# good\nb = c if a else d\n```\n\n### sim109\n\n```python\n# bad\nif a == b or a == c:\n    d\n\n# good\nif a in (b, c):\n    d\n```\n\n### sim110\n\n```python\n# bad\nfor x in iterable:\n    if check(x):\n        return true\nreturn false\n\n# good\nreturn any(check(x) for x in iterable)\n```\n\n### sim111\n\n```python\n# bad\nfor x in iterable:\n    if check(x):\n        return false\nreturn true\n\n# good\nreturn all(not check(x) for x in iterable)\n```\n\n### sim112\n\n```python\n# bad\nos.environ[\"foo\"]\nos.environ.get(\"bar\")\n\n# good\nos.environ[\"foo\"]\nos.environ.get(\"bar\")\n```\n\n### sim113\n\nusing [`enumerate`](https://docs.python.org/3/library/functions.html#enumerate) in simple cases like the loops below is a tiny bit easier to read as the reader does not have to figure out where / when the loop variable is incremented (or if it is incremented in multiple places).\n\n```python\n# bad\nidx = 0\nfor el in iterable:\n    ...\n    idx += 1\n\n# good\nfor idx, el in enumerate(iterable):\n    ...\n```\n\n### sim114\n\n```python\n# bad\nif a:\n    b\nelif c:\n    b\n\n# good\nif a or c:\n    b\n```\n\n### sim115\n\n```python\n# bad\nf = open(...)\n...  # (do something with f)\nf.close()\n\n# good\nwith open(...) as f:\n    ...  # (do something with f)\n```\n\n### sim116\n\n```python\n# bad\nif a == \"foo\":\n    return \"bar\"\nelif a == \"bar\":\n    return \"baz\"\nelif a == \"boo\":\n    return \"ooh\"\nelse:\n    return 42\n\n# good\nmapping = {\"foo\": \"bar\", \"bar\": \"baz\", \"boo\": \"ooh\"}\nreturn mapping.get(a, 42)\n```\n\n### sim117\n\n```python\n# bad\nwith a() as a:\n    with b() as b:\n        print(\"hello\")\n\n# good\nwith a() as a, b() as b:\n    print(\"hello\")\n```\n\nthank you for pointing this one out, [aaron gokaslan](https://github.com/skylion007)!\n\n### sim118\n\n```python\n# bad\nkey in a_dict.keys()\n\n# good\nkey in a_dict\n```\n\nthank you for pointing this one out, [aaron gokaslan](https://github.com/skylion007)!\n\n\n### sim120\n\n```python\n# bad\nclass foobar(object):\n    ...\n\n\n# good\nclass foobar:\n    ...\n```\n\nboth notations are equivalent in python 3, but the second one is shorter.\n\n\n### sim201\n\n```python\n# bad\nnot a == b\n\n# good\na != b\n```\n\n### sim202\n\n```python\n# bad\nnot a != b\n\n# good\na == b\n```\n\n### sim203\n\n```python\n# bad\nnot a in b\n\n# good\na not in b\n```\n\n\n### sim208\n\n```python\n# bad\nnot (not a)\n\n# good\na\n```\n\n### sim210\n\n```python\n# bad\ntrue if a else false\n\n# good\nbool(a)\n```\n\n### sim211\n\n```python\n# bad\nfalse if a else true\n\n# good\nnot a\n```\n\n### sim212\n\n```python\n# bad\nb if not a else a\n\n# good\na if a else b\n```\n\n### sim220\n\n```python\n# bad\na and not a\n\n# good\nfalse\n```\n\n### sim221\n\n```python\n# bad\na or not a\n\n# good\ntrue\n```\n\n### sim222\n\n```python\n# bad\n... or true\n\n# good\ntrue\n```\n\n### sim223\n\n```python\n# bad\n... and false\n\n# good\nfalse\n```\n\n### sim300\n\n```python\n# bad; this is called a \"yoda-condition\"\n42 == age\n\n# good\nage == 42\n```\n\n### sim401\n\n```python\n# bad\nif key in a_dict:\n    value = a_dict[key]\nelse:\n    value = \"default_value\"\n\n# good\nthing = a_dict.get(key, \"default_value\")\n```\n\n### sim901\n\nthis rule will be renamed to `sim224` after its 6-month trial period is over.\nplease report any issues you encounter with this rule!\n\nthe trial period starts on 23rd of january and will end on 23rd of august 2022.\n\n```python\n# bad\nbool(a == b)\n\n# good\na == b\n```\n\n\n### sim904\n\nthis rule will be renamed to `sim224` after its 6-month trial period is over.\nplease report any issues you encounter with this rule!\n\nthe trial period starts on 12th of february and will end on 12th of september 2022.\n\n\n```python\n# bad\na = {}\na[\"b\"] = \"c\"\n\n# good\na = {\"b\": \"c\"}\n```\n\n### sim905\n\nthis rule will be renamed to `sim225` after its 6-month trial period is over.\nplease report any issues you encounter with this rule!\n\nthe trial period starts on 13th of february and will end on 13th of september 2022.\n\n```python\n# bad\ndomains = \"de com net org\".split()\n\n# good\ndomains = [\"de\", \"com\", \"net\", \"org\"]\n```\n\n### sim906\n\nthis rule will be renamed to `sim126` after its 6-month trial period is over.\nplease report any issues you encounter with this rule!\n\nthe trial period starts on 20th of february and will end on 20th of september 2022.\n\n```python\n# bad\nos.path.join(a, os.path.join(b, c))\n\n# good\nos.path.join(a, b, c)\n```\n\n### sim907\n\nthis rule will be renamed to `sim127` after its 6-month trial period is over.\nplease report any issues you encounter with this rule!\n\nthe trial period starts on 28th of march and will end on 28th of september 2022.\n\n```python\n# bad\ndef foo(a: union[int, none]) -> union[int, none]:\n    return a\n\n\n# good\ndef foo(a: optional[int]) -> optional[int]:\n    return a\n```\n\n### sim908\n\nthis rule will be renamed to `sim121` after its 6-month trial period is over.\nplease report any issues you encounter with this rule!\n\nthe trial period starts on 28th of march and will end on 28th of september 2022.\n\n```python\n# bad\nname = \"some_default\"\nif \"some_key\" in some_dict:\n    name = some_dict[\"some_key\"]\n\n# good\nname = some_dict.get(\"some_key\", \"some_default\")\n```\n\n### sim909\n\nthank you ryan delaney for the idea!\n\nthis rule will be renamed to `sim124` after its 6-month trial period is over.\nplease report any issues you encounter with this rule!\n\nthe trial period starts on 28th of march and will end on 28th of september 2022.\n\n```python\n# bad\nfoo = foo\n\n# good: nothing. reflexive assignments have no purpose.\n```\n\nor\n\n```python\n# bad\nfoo = foo = 42\n\n# good\nfoo = 42\n```\n\n### sim910\n\n```python\n# bad\ndict.get(key, none)\n\n# good\ndict.get(key)\n```\n",
  "docs_url": null,
  "keywords": "flake8",
  "license": "",
  "name": "flake8_simplify",
  "package_url": "https://pypi.org/project/flake8_simplify/",
  "project_url": "https://pypi.org/project/flake8_simplify/",
  "project_urls": {
    "Homepage": "https://github.com/MartinThoma/flake8-simplify"
  },
  "release_url": "https://pypi.org/project/flake8_simplify/0.21.0/",
  "requires_dist": [
    "astor>=0.1",
    "flake8>=3.7",
    "importlib-metadata>=0.9; python_version < \"3.8\""
  ],
  "requires_python": ">=3.6.1",
  "summary": "flake8 plugin which checks for code that can be simplified",
  "version": "0.21.0",
  "releases": [],
  "developers": [
    "info@martin-thoma.de"
  ],
  "kwds": "flake8 flake badge code svg",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_flake8_simplify",
  "homepage": "",
  "release_count": 38,
  "dependency_ids": [
    "pypi_astor",
    "pypi_flake8",
    "pypi_importlib_metadata"
  ],
  "documentation_summary": "The HTML text describes the `flake8_simplify` package available on PyPI, which is a flake8 plugin designed to help simplify code. The latest version, 0.21.0, was released on September 23, 2023. It requires Python version 3.6.1 or higher and is licensed under the MIT License. The package is maintained by Martin Thoma and offers a variety of rules for simplifying code, including simplifications for comparisons, dictionary usage, and general code style. It supports Python versions 3.8 to 3.11 and introduces experimental rules under the SIM9 prefix for a trial period before they are finalized. Installation is done via pip, and usage involves running flake8 with the package to identify and suggest simplifications in Python code.",
  "embedding": [
    0.0018202441278845072,
    0.0032201611902564764,
    -0.013541912660002708,
    -0.023875974118709564,
    -0.009954185225069523,
    0.0421522818505764,
    -0.00705938134342432,
    -0.026478836312890053,
    -0.031206194311380386,
    -0.026225583627820015,
    0.018065262585878372,
    -0.004291203338652849,
    -0.013323835097253323,
    0.021526364609599113,
    0.007351323962211609,
    0.005539873149245977,
    0.025972332805395126,
    -0.03182525187730789,
    0.01980988308787346,
    -0.017826080322265625,
    0.017586899921298027,
    0.0018941090675070882,
    -0.018642112612724304,
    -0.031206194311380386,
    -0.013527843169867992,
    0.0014095900114625692,
    -0.005107235629111528,
    -0.01668645069003105,
    -0.008160321041941643,
    0.0027347628492861986,
    0.027013476938009262,
    -0.02024603821337223,
    -0.016179947182536125,
    0.000510459765791893,
    -0.028012413531541824,
    -0.0054519386030733585,
    0.028420429676771164,
    0.00564891193062067,
    0.03418893367052078,
    -0.009785350412130356,
    0.014646369963884354,
    0.005564494989812374,
    0.006686538923531771,
    -0.01398510206490755,
    -0.012894714251160622,
    0.014020276255905628,
    -0.00650011794641614,
    -0.03508938103914261,
    -0.03953535109758377,
    0.00657046539708972,
    0.025029676035046577,
    0.01205054298043251,
    -0.003132226876914501,
    -0.004259547218680382,
    -0.0035631058271974325,
    0.009595411829650402,
    0.01610960066318512,
    0.01157217938452959,
    -0.010685799643397331,
    0.027027547359466553,
    0.021413808688521385,
    -0.028293803334236145,
    -0.022328326478600502,
    0.0024375442881137133,
    -0.0026468283031135798,
    0.014350909739732742,
    -0.023861905559897423,
    0.002982738194987178,
    -0.019458144903182983,
    -0.005691120401024818,
    0.03911326453089714,
    0.03728422522544861,
    0.015673445537686348,
    -0.024607589468359947,
    0.048793092370033264,
    -0.026886852458119392,
    -0.042883895337581635,
    0.024016669020056725,
    -0.006099136546254158,
    0.005075579043477774,
    0.02104800194501877,
    -0.016433198004961014,
    -0.008258807472884655,
    0.014547883532941341,
    0.014146901667118073,
    0.014604161493480206,
    -0.019247103482484818,
    0.033823125064373016,
    -0.03523007780313492,
    -0.005835333373397589,
    -0.010720973834395409,
    0.03672144562005997,
    0.016320642083883286,
    0.017699455842375755,
    -0.0105380704626441,
    0.04367178678512573,
    -0.01404841523617506,
    0.036552611738443375,
    0.008075904101133347,
    -0.024030739441514015,
    0.006180036347359419,
    0.00880751945078373,
    -0.006120240781456232,
    -0.008730136789381504,
    -0.024298060685396194,
    -0.014913690276443958,
    -0.01020040176808834,
    -0.017432134598493576,
    0.005420282483100891,
    0.013373077847063541,
    -0.031346891075372696,
    0.03784700855612755,
    0.012409316375851631,
    -0.011811361648142338,
    0.02906762808561325,
    0.012149030342698097,
    -0.004073125775903463,
    -0.0055539426393806934,
    -0.03762189671397209,
    -0.009729072451591492,
    0.02479049377143383,
    0.009947150014340878,
    0.015898557379841805,
    0.009440647438168526,
    0.02563466504216194,
    -0.019176755100488663,
    -0.015420193783938885,
    -0.015997042879462242,
    -0.004776601679623127,
    -0.009074839763343334,
    0.03649633377790451,
    -0.020457081496715546,
    0.016194017603993416,
    0.007935209199786186,
    -0.016756797209382057,
    0.00819549523293972,
    -0.0221735630184412,
    -0.004664045758545399,
    -0.03320406749844551,
    -0.022905178368091583,
    0.00568408565595746,
    0.028040552511811256,
    -0.018628044053912163,
    0.006704126019030809,
    -0.003248300403356552,
    0.015659375116229057,
    -0.016039252281188965,
    -0.014632300473749638,
    0.009461752139031887,
    0.012901749461889267,
    0.004154025577008724,
    -0.01459009200334549,
    0.0030196707230061293,
    0.009201466105878353,
    0.004358033649623394,
    0.020077204331755638,
    -0.019992787390947342,
    -0.009510994888842106,
    -0.0055820816196501255,
    -0.0014570746570825577,
    -0.0021948451176285744,
    0.022497162222862244,
    -0.038212813436985016,
    -0.025311065837740898,
    0.0008846210548654199,
    0.019598839804530144,
    0.03953535109758377,
    -0.0023918182123452425,
    -0.02711196430027485,
    0.011994265019893646,
    0.017375856637954712,
    0.016911562532186508,
    -0.008772345259785652,
    0.021779615432024002,
    0.006865925621241331,
    -0.004794188775122166,
    -0.0016883423086255789,
    -0.0027840060647577047,
    -0.010151158086955547,
    0.005940854549407959,
    0.00581774627789855,
    0.02770288474857807,
    0.006123758386820555,
    0.0349486880004406,
    0.004857501480728388,
    -0.012282690964639187,
    -0.0047379108145833015,
    -0.0031955395825207233,
    -0.0095602385699749,
    0.007414636667817831,
    0.011347067542374134,
    0.023074012249708176,
    -0.004808258265256882,
    -0.022665996104478836,
    -0.5569278597831726,
    -0.01520915050059557,
    -0.010791321285068989,
    -0.026253722608089447,
    0.012950992211699486,
    0.0181778185069561,
    -0.005603186320513487,
    0.008230668492615223,
    -0.018642112612724304,
    0.025930125266313553,
    -0.0021244974341243505,
    0.02410108596086502,
    -0.005237378645688295,
    -0.01831851527094841,
    0.006985516287386417,
    -0.03871931880712509,
    0.013049479573965073,
    -0.014041380025446415,
    -0.001452677883207798,
    0.0034751712810248137,
    -0.04738614335656166,
    0.026267793029546738,
    -0.00547304330393672,
    0.010868703946471214,
    0.00040471850661560893,
    0.01954256184399128,
    0.012986166402697563,
    -0.014372014440596104,
    0.04091416299343109,
    -0.006865925621241331,
    -0.019444076344370842,
    0.040689051151275635,
    0.012535941787064075,
    -0.010664695873856544,
    0.048680536448955536,
    -0.004182164557278156,
    -0.007548297289758921,
    0.02863147296011448,
    0.018613973632454872,
    0.042602505534887314,
    -0.0180230550467968,
    -0.0005715742008760571,
    0.01033406239002943,
    -0.02010534331202507,
    0.009539133869111538,
    0.0011835983023047447,
    0.01679900661110878,
    0.017840150743722916,
    -0.0038058049976825714,
    -0.00908187497407198,
    0.013591155409812927,
    0.0008903367561288178,
    -0.0004546213604044169,
    -0.007470914628356695,
    0.0054449038580060005,
    -0.007178972475230694,
    0.00901856180280447,
    0.002045356435701251,
    -0.012950992211699486,
    -0.003269404638558626,
    -0.001775397453457117,
    0.017136674374341965,
    0.00036229012766852975,
    -0.0032219199929386377,
    9.172667341772467e-05,
    0.023214707151055336,
    -0.006493083201348782,
    -0.01425242330878973,
    0.01596890389919281,
    -0.02080881968140602,
    0.012578150257468224,
    -0.008364329114556313,
    -0.01654575578868389,
    -0.021441947668790817,
    0.029686685651540756,
    0.022539369761943817,
    0.03044643998146057,
    -0.001202943967655301,
    -0.006795577704906464,
    0.027027547359466553,
    0.029011348262429237,
    0.02728079818189144,
    -0.023214707151055336,
    -0.02228611893951893,
    0.037368644028902054,
    -0.0077593401074409485,
    -0.027168242260813713,
    -0.003155089681968093,
    0.019753605127334595,
    -0.003243024228140712,
    0.007344289217144251,
    0.03154386207461357,
    -0.005624290555715561,
    -0.0272667296230793,
    0.010763182304799557,
    -0.004766049794852734,
    -0.021427877247333527,
    -0.003141020191833377,
    -0.011178233660757542,
    -0.012514838017523289,
    -0.016616102308034897,
    -0.012022404000163078,
    -0.010284818708896637,
    -0.0052795871160924435,
    -0.005043922923505306,
    0.015166942030191422,
    -0.03252872824668884,
    -0.0033362347166985273,
    0.003596520982682705,
    -0.004555006977170706,
    0.0028860101010650396,
    -0.056278079748153687,
    -0.022342396900057793,
    -0.024157365784049034,
    -0.012402281165122986,
    -0.03728422522544861,
    0.020049065351486206,
    -0.004090712871402502,
    0.018388861790299416,
    -0.010151158086955547,
    0.008188460022211075,
    0.006690056528896093,
    -0.01342935673892498,
    0.00839950330555439,
    0.015223219990730286,
    0.00013113231398165226,
    0.023594584316015244,
    0.009475821629166603,
    -0.02490304969251156,
    0.012141995131969452,
    0.033513594418764114,
    0.0187265295535326,
    0.031459446996450424,
    0.0029176666866987944,
    0.00894821435213089,
    0.004361551254987717,
    -0.010587313212454319,
    -0.003021429292857647,
    0.007456845138221979,
    0.007150833494961262,
    -0.024706076830625534,
    0.005110752768814564,
    0.002671449910849333,
    -0.008490955457091331,
    -0.0038128397427499294,
    -0.013591155409812927,
    0.00935623049736023,
    0.014083589427173138,
    -0.014062484726309776,
    -0.012887679971754551,
    0.007808583322912455,
    0.0036017969250679016,
    -0.04392503947019577,
    -0.0034118585754185915,
    -0.024720145389437675,
    -0.004583145957440138,
    0.009187396615743637,
    -0.031178055331110954,
    -0.02010534331202507,
    -0.013858476653695107,
    0.024016669020056725,
    0.03480799123644829,
    -0.00244282023049891,
    0.006514187436550856,
    -0.03900070860981941,
    0.009623551741242409,
    -0.017446205019950867,
    0.027449632063508034,
    0.012156064622104168,
    -0.04049207642674446,
    -0.01136817131191492,
    -0.007238767575472593,
    0.0004607767623383552,
    0.02283482998609543,
    -0.0018395896768197417,
    0.020344525575637817,
    -0.005356969311833382,
    0.03483613207936287,
    -0.022004729136824608,
    -0.00629610987380147,
    -0.014632300473749638,
    0.004892675206065178,
    -0.04597919061779976,
    0.010903877206146717,
    0.029630407691001892,
    0.02026010863482952,
    0.019725466147065163,
    0.01245855912566185,
    -0.002528996206820011,
    0.012170134112238884,
    0.010165227577090263,
    0.0019081785576418042,
    0.009933080524206161,
    -0.010692834854125977,
    -0.011480728164315224,
    0.03576472029089928,
    0.010664695873856544,
    -0.011128989979624748,
    -0.014421257190406322,
    0.017024118453264236,
    0.0035947621800005436,
    0.01259221974760294,
    0.010917946696281433,
    -0.04642941430211067,
    -0.013337904587388039,
    -0.017418066039681435,
    0.026478836312890053,
    -0.025100022554397583,
    0.006377009674906731,
    0.035736579447984695,
    0.01610960066318512,
    -0.019106406718492508,
    0.010298888199031353,
    -0.00595140689983964,
    -0.005061509553343058,
    -0.004766049794852734,
    -0.028392290696501732,
    0.03900070860981941,
    -4.0120114135788754e-05,
    0.027308937162160873,
    0.006239831913262606,
    -0.0004506642872001976,
    0.01830444484949112,
    -0.004555006977170706,
    -0.0003979036118835211,
    0.005905680824071169,
    0.0013049478875473142,
    0.019317450001835823,
    0.014027310535311699,
    -0.02618337608873844,
    -0.022243909537792206,
    0.01527949795126915,
    0.010305923409759998,
    -0.024312129244208336,
    0.028547054156661034,
    -0.000978710944764316,
    0.033119648694992065,
    -0.011318928562104702,
    0.04558524489402771,
    -0.051438163965940475,
    -0.006844821386039257,
    0.008645719848573208,
    0.02766067534685135,
    -0.0018202441278845072,
    0.011466658674180508,
    -0.0006111447582952678,
    0.017530621960759163,
    0.018276305869221687,
    -0.009074839763343334,
    0.017966777086257935,
    -0.002400611760094762,
    0.013668538071215153,
    -0.009750177152454853,
    0.0019363176543265581,
    0.023749349638819695,
    -0.00942657794803381,
    -0.006120240781456232,
    0.007108624558895826,
    0.02754811942577362,
    0.0187265295535326,
    0.00820252951234579,
    -0.006633778568357229,
    0.02258157916367054,
    0.004526867996901274,
    0.020991723984479904,
    -0.012191238813102245,
    -0.026352209970355034,
    -0.057910140603780746,
    0.009250708855688572,
    -0.009447682648897171,
    -0.013014305382966995,
    -0.025986403226852417,
    -0.013302730396389961,
    -0.02545176073908806,
    0.03691842034459114,
    -0.0025712046772241592,
    0.0077874790877103806,
    0.036017969250679016,
    -0.0037565617822110653,
    -0.004333411809056997,
    -0.038466066122055054,
    -0.027843579649925232,
    0.02616930566728115,
    -0.02725265920162201,
    -0.0013427598169073462,
    -0.0022792620584368706,
    -0.029911797493696213,
    0.011600318364799023,
    -0.02118869684636593,
    0.01245855912566185,
    0.012557046487927437,
    0.007126211654394865,
    -0.017699455842375755,
    0.02508595399558544,
    -0.02642255835235119,
    -0.004811775870621204,
    0.03058713488280773,
    -0.009187396615743637,
    -0.008687928318977356,
    0.012697741389274597,
    -0.009405474178493023,
    0.021019862964749336,
    -0.0048539843410253525,
    -0.017854219302535057,
    0.05717852711677551,
    -0.010868703946471214,
    -0.001052575884386897,
    -0.010903877206146717,
    -0.03359801322221756,
    -0.010298888199031353,
    0.007513123564422131,
    -0.001340121729299426,
    -0.024340268224477768,
    -0.005789607297629118,
    0.022089146077632904,
    0.03205036371946335,
    0.002034804318100214,
    0.004941918887197971,
    0.024213643744587898,
    -0.01411876268684864,
    -0.00860351137816906,
    -0.026914991438388824,
    -0.0027593844570219517,
    -0.011762117967009544,
    0.03708725422620773,
    0.009982324205338955,
    0.020738471299409866,
    0.011136024259030819,
    -0.018754668533802032,
    -0.026535114273428917,
    -0.018515488132834435,
    -0.007041794713586569,
    0.01983802206814289,
    -0.005487112794071436,
    -0.020175691694021225,
    0.013752955012023449,
    0.02215949259698391,
    0.007534227799624205,
    0.02878623642027378,
    0.0036369708832353354,
    -0.00533938268199563,
    -0.0017349476693198085,
    0.014477535150945187,
    0.005627807695418596,
    0.009314022026956081,
    0.016306573525071144,
    -0.0037882181350141764,
    0.007724166382104158,
    0.03345731645822525,
    -0.0036721446085721254,
    0.02809683047235012,
    0.025930125266313553,
    0.0014500397955998778,
    -0.04420642927289009,
    -0.01613773964345455,
    0.013253487646579742,
    0.01816374994814396,
    0.0035384842194616795,
    -0.007295046001672745,
    0.028589263558387756,
    0.01720702275633812,
    0.028955070301890373,
    0.008075904101133347,
    -0.015237289480865002,
    0.006493083201348782,
    0.007801548577845097,
    -7.16666181688197e-05,
    -0.017136674374341965,
    -0.00908890925347805,
    -0.011832465417683125,
    -0.02256750874221325,
    0.021835893392562866,
    -0.009250708855688572,
    -0.017657246440649033,
    0.01955663226544857,
    0.011276720091700554,
    -0.03677772358059883,
    -0.017108535394072533,
    0.02493118867278099,
    0.01595483534038067,
    0.007681957446038723,
    -0.013823302462697029,
    0.00550821702927351,
    -0.03140316903591156,
    -0.01568751409649849,
    -0.031346891075372696,
    0.0022265014704316854,
    -0.013169069774448872,
    -0.012367107905447483,
    0.007442775648087263,
    0.0007008379325270653,
    0.008209564723074436,
    -0.029771102592349052,
    -0.008146251551806927,
    0.002845560200512409,
    -0.039844878017902374,
    -0.03247245028614998,
    -0.03264128416776657,
    -0.017812011763453484,
    0.018656183034181595,
    -0.002674967283383012,
    -0.0029844967648386955,
    0.025719081982970238,
    0.005399178247898817,
    0.014688578434288502,
    -0.04887751117348671,
    -0.006415701005607843,
    -0.05948592722415924,
    0.020414872094988823,
    0.001165132038295269,
    0.007632714230567217,
    0.007210628595203161,
    -0.002648587105795741,
    0.04350295290350914,
    0.022651925683021545,
    0.014927759766578674,
    0.0013172588078305125,
    -0.030221328139305115,
    0.011726944707334042,
    0.020724402740597725,
    0.005916232708841562,
    0.01613773964345455,
    0.006239831913262606,
    -0.0063066622242331505,
    0.01487148180603981,
    -0.01833258382976055,
    -0.020020926371216774,
    0.0060323067009449005,
    0.0093632647767663,
    -0.010087845847010612,
    0.006278523243963718,
    0.017403995618224144,
    -0.030812246724963188,
    -0.00426658196374774,
    0.014294631779193878,
    -0.01664424128830433,
    -0.004913779906928539,
    0.023918183520436287,
    0.00502985343337059,
    -0.0011712874984368682,
    -0.013745920732617378,
    0.04001371189951897,
    -0.009693899191915989,
    -0.03278198093175888,
    -0.0036299361381679773,
    -0.037790730595588684,
    0.018402932211756706,
    0.0426306426525116,
    0.0014087106101214886,
    -0.005167031195014715,
    -0.01885315589606762,
    -0.01309168804436922,
    -0.02588791586458683,
    0.01844513975083828,
    0.016911562532186508,
    0.0010367477079853415,
    -0.010193366557359695,
    -0.041645776480436325,
    -0.007548297289758921,
    0.012620358727872372,
    -0.021146487444639206,
    0.0036791793536394835,
    -0.0154342632740736,
    0.010995329357683659,
    -0.002796316985040903,
    0.017038188874721527,
    -0.0023671966046094894,
    -0.009166291914880276,
    -0.019767675548791885,
    -0.0316564179956913,
    -0.011466658674180508,
    0.0012583426432684064,
    -0.008350259624421597,
    0.014604161493480206,
    0.000444728706497699,
    -0.013119827024638653,
    -0.03112177737057209,
    -0.029911797493696213,
    -0.014062484726309776,
    0.005047440063208342,
    -0.025705011561512947,
    0.029658546671271324,
    0.005866989493370056,
    0.035736579447984695,
    0.012775124050676823,
    0.005571529734879732,
    0.004899709951132536,
    0.015729723498225212,
    0.014076554216444492,
    -0.013612260110676289,
    -0.03069969080388546,
    0.030952943488955498,
    4.924331733491272e-05,
    -0.007245802320539951,
    -0.008174390532076359,
    0.023580513894557953,
    -0.010847599245607853,
    -0.02628186158835888,
    0.012880644761025906,
    0.0218640323728323,
    0.006538809277117252,
    0.007302080746740103,
    -0.017797941341996193,
    -0.032838258892297745,
    -0.010446618311107159,
    0.019936509430408478,
    0.01302134059369564,
    0.006232797168195248,
    -0.030952943488955498,
    -0.015096594579517841,
    -0.004857501480728388,
    -0.010411444120109081,
    0.006440322380512953,
    0.01613773964345455,
    0.026478836312890053,
    0.017403995618224144,
    0.02535327337682247,
    0.004315825179219246,
    0.03058713488280773,
    -0.013893650844693184,
    -0.0024234747979789972,
    -0.026675809174776077,
    -0.0330633707344532,
    0.009074839763343334,
    0.0014825756661593914,
    0.004023882560431957,
    0.022947385907173157,
    0.018895365297794342,
    -0.014533814042806625,
    0.04333411902189255,
    0.011192303150892258,
    -0.00508964853361249,
    0.02546583116054535,
    -0.02600047178566456,
    0.005237378645688295,
    -0.021596712991595268,
    -0.02300366386771202,
    -0.020006855949759483,
    0.008413572795689106,
    0.004259547218680382,
    0.01045365259051323,
    0.007295046001672745,
    0.01004563644528389,
    -0.020724402740597725,
    0.015096594579517841,
    -0.0055750468745827675,
    0.0023777487222105265,
    0.011262650601565838,
    0.04696405678987503,
    0.01678493618965149,
    0.009546169079840183,
    -0.012965062633156776,
    -0.02011941373348236,
    -0.011136024259030819,
    -0.032162923365831375,
    0.012324899435043335,
    -0.0036229011602699757,
    -0.02974296361207962,
    -0.013795163482427597,
    -0.007365393452346325,
    -0.01722109131515026,
    -0.04305272921919823,
    -0.014913690276443958,
    0.019655119627714157,
    0.024030739441514015,
    0.01776980236172676,
    -0.029658546671271324,
    -0.009736107662320137,
    0.009377334266901016,
    0.024129226803779602,
    0.01397806778550148,
    -0.0048610190860927105,
    0.01307058334350586,
    -0.021399738267064095,
    -0.015335775911808014,
    0.021399738267064095,
    0.01750248298048973,
    0.0003959250752814114,
    0.02065405435860157,
    -0.018923504278063774,
    0.02918018400669098,
    -0.030784107744693756,
    -0.005152961704879999,
    0.0032236785627901554,
    0.0010868703247979283,
    0.03402009978890419,
    -0.007653818465769291,
    -0.01705225743353367,
    0.030193189159035683,
    -0.006644330453127623,
    -0.014505674131214619,
    -0.00284204282797873,
    -0.009271813556551933,
    0.0396479070186615,
    -0.010566209442913532,
    -0.014561953023076057,
    -0.020161621272563934,
    -0.027998343110084534,
    -0.020457081496715546,
    0.0054097301326692104,
    -0.00023962149862200022,
    -0.00017400037904735655,
    -0.008301016874611378,
    0.021427877247333527,
    0.024058878421783447,
    -0.0041153342463076115,
    -0.03911326453089714,
    0.009525064378976822,
    -0.0027330040466040373,
    0.038072120398283005,
    -0.0017877083737403154,
    0.0021385669242590666,
    0.03368242830038071,
    0.0020400802604854107,
    -0.013098722323775291,
    0.009532099589705467,
    -0.015659375116229057,
    -0.001768362708389759,
    0.019218964502215385,
    0.00550821702927351,
    0.012156064622104168,
    0.04122369363903999,
    -0.004259547218680382,
    0.007731201127171516,
    -0.021709268912672997,
    0.019218964502215385,
    -0.022412745282053947,
    -0.009729072451591492,
    -0.021976590156555176,
    -0.0024305095430463552,
    0.009243674576282501,
    0.019373727962374687,
    -0.013956963084638119,
    -0.01709446683526039,
    0.0030231880955398083,
    0.019317450001835823,
    0.033654291182756424,
    -0.019894300028681755,
    -0.002558893756940961,
    0.01888129487633705,
    0.014449396170675755,
    -0.019908370450139046,
    -0.022623786702752113,
    0.010362201370298862,
    -0.009954185225069523,
    0.013155000284314156,
    0.0055609773844480515,
    -0.0017595692770555615,
    0.01640505902469158,
    0.008645719848573208,
    0.0063136969693005085,
    0.006180036347359419,
    -0.014899620786309242,
    -0.030193189159035683,
    -0.0007061139913275838,
    -0.0036580751184374094,
    0.005976028274744749,
    9.496925486018881e-05,
    -0.0018817982636392117,
    -0.007217663340270519,
    -0.012472628615796566,
    0.02121683582663536,
    0.015181011520326138,
    -0.014266492798924446,
    -0.012261586263775826,
    0.018276305869221687,
    0.00447059003636241,
    -0.013422321528196335,
    -0.0064508747309446335,
    -0.020161621272563934,
    -0.02258157916367054,
    0.02850484661757946,
    -0.006454391870647669,
    -0.01996464841067791,
    -0.01506845559924841,
    0.03278198093175888,
    -0.00502985343337059,
    -0.013007271103560925,
    0.007098072674125433,
    -0.03548332676291466,
    -0.01833258382976055,
    -0.021934380754828453,
    -0.0388600118458271,
    -0.007442775648087263,
    0.009117048233747482,
    -0.007143798284232616,
    -0.019725466147065163,
    0.029152045026421547,
    0.0005438748630695045,
    0.014343875460326672,
    -0.04085788503289223,
    0.013014305382966995,
    -0.006007684860378504,
    0.021835893392562866,
    0.001119406195357442,
    -0.005381591152399778,
    -0.013211279176175594,
    0.0030020836275070906,
    0.02918018400669098,
    0.01803712360560894,
    -0.00044121133396402,
    0.02438247762620449,
    -0.019781744107604027,
    0.0009101220639422536,
    0.0020822889637202024,
    -0.014421257190406322,
    -0.005138892214745283,
    -0.009532099589705467,
    -0.01300023589283228,
    -0.02380562759935856,
    -0.003473412711173296,
    0.012416350655257702,
    -0.003939465619623661,
    0.0036862140987068415,
    0.007681957446038723,
    -0.00626093614846468,
    -0.014716717414557934,
    0.0003218402562197298,
    -0.006151897367089987,
    -0.018796877935528755,
    -0.016770867630839348,
    -0.024424685165286064,
    0.015321706421673298,
    -0.019866161048412323,
    0.03759375587105751,
    0.022089146077632904,
    -0.014273527078330517,
    -0.004741427954286337,
    -0.027013476938009262,
    0.022061007097363472,
    -0.0344703234732151,
    -0.0024709594435989857,
    0.031600140035152435,
    -0.004657011013478041,
    0.026253722608089447,
    0.008279912173748016,
    0.03430148959159851,
    -0.023313194513320923,
    -0.01005970686674118,
    -0.030727829784154892,
    0.002277503488585353,
    -0.027618465945124626,
    0.02563466504216194,
    0.028955070301890373,
    -0.025972332805395126,
    0.015110664069652557,
    0.0037249051965773106,
    0.010650626383721828,
    0.026929059997200966,
    -0.03205036371946335,
    -0.012198273092508316,
    -0.011199337430298328,
    0.026521043851971626,
    0.016855284571647644,
    0.016756797209382057,
    -0.014139867387712002,
    -0.01281733252108097,
    0.010327027179300785,
    0.012134960852563381,
    0.03205036371946335,
    0.1853799819946289,
    0.04389690235257149,
    0.022933317348361015,
    0.02562059462070465,
    0.027505910024046898,
    0.020034994930028915,
    0.011881709098815918,
    -0.012599254958331585,
    -0.04142066463828087,
    0.03705911338329315,
    0.0050263358280062675,
    -0.003547277534380555,
    -0.0066232262179255486,
    -0.0012196514289826155,
    0.008800484240055084,
    -0.012437455356121063,
    -0.019866161048412323,
    -0.030784107744693756,
    -0.06021754443645477,
    0.006352387834340334,
    0.02823752537369728,
    -0.0051705483347177505,
    -0.036158666014671326,
    -0.015335775911808014,
    0.0035138623788952827,
    0.01411876268684864,
    0.007143798284232616,
    -0.025395482778549194,
    0.015870418399572372,
    0.0016092013102024794,
    -0.005406212992966175,
    -0.005919750314205885,
    0.004899709951132536,
    -0.0010587313445284963,
    -0.037537477910518646,
    -0.015997042879462242,
    -0.009862733073532581,
    0.0014860930386930704,
    0.022215770557522774,
    0.0410548560321331,
    -0.0010429031681269407,
    -0.045106880366802216,
    -0.004424863960593939,
    -0.018796877935528755,
    -0.01286657527089119,
    -0.02078068070113659,
    -0.012486698105931282,
    0.013309765607118607,
    0.008068869821727276,
    0.0355677455663681,
    -0.033513594418764114,
    -0.01245855912566185,
    0.020597776398062706,
    0.002295090351253748,
    0.016165878623723984,
    -0.03568030148744583,
    0.007885965518653393,
    0.016306573525071144,
    0.010256679728627205,
    0.029489712789654732,
    -0.03387940302491188,
    0.017826080322265625,
    -0.016714589670300484,
    -0.0018677286570891738,
    -0.056221798062324524,
    0.013830337673425674,
    -0.05613738298416138,
    0.005356969311833382,
    -0.00485046673566103,
    0.023214707151055336,
    -0.003914843779057264,
    -0.0338512621819973,
    -0.011860605329275131,
    -0.02313029021024704,
    -0.007182489614933729,
    -0.028715889900922775,
    0.04384062439203262,
    0.006014719605445862,
    0.04718916863203049,
    0.020077204331755638,
    -0.031740836799144745,
    -0.0037776660174131393,
    0.016194017603993416,
    0.021427877247333527,
    -0.0009356230730190873,
    4.270318822818808e-05,
    0.03883187472820282,
    -0.0031814700923860073,
    -0.009897907264530659,
    0.0159829743206501,
    -0.032697562128305435,
    -0.023242846131324768,
    0.016967840492725372,
    -0.019486283883452415,
    0.02218763157725334,
    -0.010573243722319603,
    0.011389276012778282,
    0.025676872581243515,
    -0.026816504076123238,
    -0.002863147296011448,
    -0.026675809174776077,
    0.04651383310556412,
    0.018093401566147804,
    -0.019725466147065163,
    0.002750591142103076,
    0.005796642042696476,
    0.025311065837740898,
    -0.005075579043477774,
    0.0027031064964830875,
    -0.029011348262429237,
    -0.01329569611698389,
    -0.025690943002700806,
    -0.005504699423909187,
    -0.0014570746570825577,
    0.008856762200593948,
    0.003855048445984721,
    0.007625679485499859,
    0.008568337187170982,
    -0.01088277343660593,
    0.008012590929865837,
    -0.01778387278318405,
    -0.021934380754828453,
    -0.006387562025338411,
    -0.018079333007335663,
    -0.0227222740650177,
    -0.035173799842596054,
    -0.038888152688741684,
    0.044825490564107895,
    -0.028744028881192207,
    -0.007101589813828468,
    0.008497989736497402,
    -0.030108772218227386,
    0.0045866635628044605,
    0.012739949859678745,
    -0.010636556893587112,
    -0.0218640323728323,
    -0.005772020202130079,
    -0.01252187229692936,
    0.004002778325229883,
    -0.02505781501531601,
    -0.0035068276338279247,
    0.007625679485499859,
    -0.00011228136281715706,
    -0.02024603821337223,
    -0.00325005897320807,
    -0.02574722096323967,
    0.018515488132834435,
    0.015560888685286045,
    0.003487482201308012,
    -0.0210761409252882,
    0.0021139453165233135,
    0.0036686272360384464,
    0.004945436026901007,
    -0.0191204771399498,
    0.02301773428916931,
    -0.03205036371946335,
    -0.006795577704906464,
    -0.03235989436507225,
    0.01487148180603981,
    0.007590505760163069,
    -0.05121305212378502,
    0.005800159182399511,
    -0.014097658917307854,
    -0.01885315589606762,
    -0.040548354387283325,
    -0.02806869149208069,
    -0.176150381565094,
    -0.008505024947226048,
    0.030952943488955498,
    -0.04493804648518562,
    -0.006081549916416407,
    -0.009299952536821365,
    0.020583707839250565,
    -0.00313046807423234,
    -0.00853316392749548,
    -0.009968254715204239,
    0.017038188874721527,
    0.014857412315905094,
    0.0029563577845692635,
    -0.014969969168305397,
    -0.024720145389437675,
    0.003469895338639617,
    -0.013731851242482662,
    0.006384044419974089,
    0.009820524603128433,
    0.014927759766578674,
    0.014885551296174526,
    -0.024537241086363792,
    0.02298959530889988,
    0.02711196430027485,
    0.010629521682858467,
    0.00622576242312789,
    -0.03309151157736778,
    -0.002919425256550312,
    0.008976353332400322,
    -0.011515901423990726,
    -0.01404841523617506,
    0.01129078958183527,
    -0.004811775870621204,
    -0.009440647438168526,
    0.0024234747979789972,
    0.016756797209382057,
    0.010411444120109081,
    -0.02038673311471939,
    -0.008293981663882732,
    0.04189902916550636,
    0.023735279217362404,
    0.01625029556453228,
    0.01734771765768528,
    -0.034217070788145065,
    -0.025845706462860107,
    0.004913779906928539,
    0.013781093992292881,
    -0.02135753072798252,
    0.01954256184399128,
    -0.02080881968140602,
    0.02422771230340004,
    -0.018065262585878372,
    0.0050263358280062675,
    -0.005764985457062721,
    0.024129226803779602,
    -0.0003739414387382567,
    0.003596520982682705,
    -0.018839087337255478,
    0.010636556893587112,
    -0.00010969828144880012,
    -0.0012961544562131166,
    -0.02709789387881756,
    0.005318278446793556,
    0.0037495270371437073,
    -0.010524000972509384,
    -0.014969969168305397,
    -0.007435740903019905,
    0.030671551823616028,
    -0.03480799123644829,
    0.0009540892788209021,
    0.020682193338871002,
    0.029630407691001892,
    -0.0014975244412198663,
    0.006823717150837183,
    0.018107471987605095,
    0.0010323509341105819,
    -0.03030574508011341,
    0.006180036347359419,
    0.010531035251915455,
    -0.02052742801606655,
    -0.03458287939429283,
    0.03596169129014015,
    0.025170370936393738,
    0.011340032331645489,
    0.034357767552137375,
    0.0055539426393806934,
    0.016841214150190353,
    -0.02808276005089283,
    -0.021160557866096497,
    -0.00014893905608914793,
    0.0305589959025383,
    0.00921553559601307,
    -0.026619531214237213,
    -0.004277133848518133,
    -0.013795163482427597,
    0.017122605815529823,
    -0.015054386109113693,
    -0.0016962564550340176,
    -0.030221328139305115,
    -0.010594348423182964,
    0.003063637763261795,
    0.013759990222752094,
    -0.022243909537792206,
    -0.012599254958331585,
    0.03252872824668884,
    0.010052671656012535,
    -0.030249467119574547,
    0.013133896514773369,
    0.03413265570998192,
    -0.010137088596820831,
    0.009468786418437958,
    -0.0077382358722388744,
    0.012310829944908619,
    0.018220027908682823,
    0.009398438967764378,
    0.033654291182756424,
    0.026506975293159485,
    -0.007604575250297785,
    0.022623786702752113,
    0.0004502246156334877,
    0.0038163571152836084,
    -0.015800070017576218,
    -0.023988530039787292,
    0.021456018090248108,
    -0.01534984540194273,
    -0.01940186694264412,
    -0.11739607155323029,
    -0.026535114273428917,
    0.013963998295366764,
    0.005381591152399778,
    -0.00019521458307281137,
    -0.013359008356928825,
    -0.008188460022211075,
    0.020471150055527687,
    -0.0028297321405261755,
    0.015856347978115082,
    0.0009277089266106486,
    -0.019528493285179138,
    -0.040942300111055374,
    0.01102346833795309,
    -0.032556869089603424,
    -0.020752541720867157,
    -0.027843579649925232,
    -0.012163099832832813,
    0.0063207317143678665,
    0.0030126357451081276,
    -0.014238353818655014,
    0.0020189760252833366,
    0.01900792121887207,
    0.028040552511811256,
    -0.004987644497305155,
    0.010889807716012001,
    -0.023763418197631836,
    0.009862733073532581,
    0.007365393452346325,
    0.05439276248216629,
    -0.007569401524960995,
    -0.03016505017876625,
    0.0013920030323788524,
    -0.009707968682050705,
    0.023228777572512627,
    -0.002386542269960046,
    0.012528907507658005,
    -0.015800070017576218,
    0.02106207050383091,
    -0.013218313455581665,
    0.008097008801996708,
    -0.01859990507364273,
    0.0010903878137469292,
    -0.0033837193623185158,
    -0.0068624080158770084,
    -0.002330264076590538,
    0.011241545900702477,
    0.03967604413628578,
    0.0034452734980732203,
    -0.029377156868577003,
    -0.01568751409649849,
    -0.006683021783828735,
    -0.004161060322076082,
    -0.016278434544801712,
    0.012943957932293415,
    -0.008927109651267529,
    0.010052671656012535,
    -0.0018413483630865812,
    -0.021793685853481293,
    -0.0032148852478712797,
    -0.03179711475968361,
    -0.0038867047987878323,
    0.004671080503612757,
    0.021118348464369774,
    0.001330448896624148,
    0.005040405318140984,
    0.007710096891969442,
    0.009475821629166603,
    0.04240553081035614,
    -0.030474578961730003,
    -0.010481791570782661,
    0.023721210658550262,
    -0.02121683582663536,
    0.008842692710459232,
    0.001624150201678276,
    -0.007998521439731121,
    -0.0005254085990600288,
    -0.021962519735097885,
    0.007463879883289337,
    -0.008462815545499325,
    -0.017558760941028595,
    0.006063962820917368,
    -0.02286296896636486,
    -0.03348545730113983,
    -0.00019015834550373256,
    0.016039252281188965,
    0.03787514567375183,
    0.008005556650459766,
    0.03542704880237579,
    -0.049215178936719894,
    0.028842514380812645,
    0.0016127186827361584,
    0.031459446996450424,
    0.0009365024161525071,
    -0.007604575250297785,
    0.00654584402218461,
    -0.00846985075622797,
    -0.009862733073532581,
    -0.011466658674180508,
    0.0023918182123452425,
    -0.060667768120765686,
    -0.014069519937038422,
    -0.057910140603780746,
    0.031093638390302658,
    0.014421257190406322,
    -0.004410794470459223,
    -0.00012970338866580278,
    -0.04929959774017334,
    -0.004864536225795746,
    -0.00016476726159453392,
    0.0040062954649329185,
    0.012367107905447483,
    -0.015195081010460854,
    0.008315086364746094,
    -0.009841629303991795,
    -0.015757862478494644,
    -0.00598658062517643,
    -0.02258157916367054,
    0.04859612137079239,
    0.005740364082157612,
    0.046204302459955215,
    -0.0011695288121700287,
    0.0025131679140031338,
    -0.020161621272563934,
    0.042208559811115265,
    -4.495651228353381e-05,
    0.008237703703343868,
    0.01177618745714426,
    -0.0017797942273318768,
    0.028139039874076843,
    -0.02448096312582493,
    -0.004562041722238064,
    -0.008969319052994251,
    0.004055539146065712,
    -0.009370299987494946,
    0.007252837065607309,
    0.024171434342861176,
    -0.0014359703054651618,
    0.03759375587105751,
    -0.0308685265481472,
    0.02697126939892769,
    -0.0027699365746229887,
    0.014153936877846718,
    -0.014477535150945187,
    0.025930125266313553,
    -0.009468786418437958,
    -0.022328326478600502,
    0.008364329114556313,
    -0.009799419902265072,
    0.024987466633319855,
    0.025311065837740898,
    0.032162923365831375,
    0.033401038497686386,
    -0.007900035008788109,
    -0.02629593200981617,
    -0.03911326453089714,
    0.029827380552887917,
    -0.0007237009122036397,
    0.00011981074931100011,
    0.005057992413640022,
    -0.0017129640327766538,
    -0.025029676035046577,
    0.0196691881865263,
    0.008645719848573208,
    0.012078682892024517,
    0.019641049206256866,
    0.011860605329275131,
    -0.025845706462860107,
    -0.026647670194506645,
    0.00482584536075592,
    -0.019655119627714157,
    -0.005983063019812107,
    -0.02808276005089283,
    -0.014041380025446415,
    0.004519833251833916,
    0.029095767065882683,
    0.02712603285908699,
    -0.0027048650663346052,
    -0.007365393452346325,
    -0.02024603821337223,
    -0.014139867387712002,
    0.036552611738443375,
    0.04240553081035614,
    -0.0106576606631279,
    -0.01150183193385601,
    -0.00035547520383261144,
    0.03030574508011341,
    0.013781093992292881,
    -0.04389690235257149,
    0.005191652569919825,
    -0.0137107465416193,
    0.010277784429490566,
    -0.009110013954341412,
    -0.0053006913512945175,
    0.0053077260963618755,
    -0.006204658187925816,
    0.03607424721121788,
    0.014772995375096798,
    -0.013865511864423752,
    0.012120891362428665,
    0.007309115491807461,
    -0.00839950330555439,
    0.015631236135959625,
    -0.008427642285823822,
    -0.001020919531583786,
    -0.005902163218706846,
    -0.012374142184853554,
    0.026886852458119392,
    -0.004565558861941099,
    -0.05090352147817612,
    -0.004449485335499048,
    0.02135753072798252,
    0.017713524401187897,
    -0.005511734168976545,
    -0.009968254715204239,
    0.0068905469961464405,
    -0.02699940837919712,
    0.0227222740650177,
    0.008308051154017448,
    -0.03686214238405228,
    -0.011121954768896103,
    0.025930125266313553,
    -0.004720323719084263,
    0.0025887915398925543,
    0.0564187727868557,
    0.00457611121237278,
    0.03539891168475151,
    -9.899500582832843e-06,
    0.02407294698059559,
    -0.018782809376716614,
    -0.008448746055364609,
    -0.024607589468359947,
    -0.013626329600811005,
    -0.007066416088491678,
    -0.03801584243774414,
    -0.0014016758650541306,
    -0.0068624080158770084,
    -0.01791049912571907,
    0.018951643258333206,
    -0.023031802847981453,
    -0.02518443949520588,
    0.09904941916465759,
    0.0187265295535326,
    -0.02215949259698391,
    0.016573894768953323,
    0.014449396170675755,
    0.039732322096824646,
    0.015321706421673298,
    -0.012986166402697563,
    0.0030337402131408453,
    -0.03286639600992203,
    -0.012430420145392418,
    -0.015166942030191422,
    -0.028181247413158417,
    -0.029827380552887917,
    -0.020597776398062706,
    -0.000357893412001431,
    -0.029968077316880226,
    0.02192031219601631,
    -0.01927524246275425,
    -0.012627393938601017,
    0.01814967952668667,
    0.030812246724963188,
    -0.0014693854609504342,
    0.009342161007225513,
    -0.012599254958331585,
    0.008821588940918446,
    0.020049065351486206,
    0.0008648357470519841,
    -0.015462402254343033,
    -0.04364364966750145,
    -0.0047379108145833015,
    0.004256029613316059,
    -0.002425233367830515,
    -0.031459446996450424,
    0.0008024022681638598,
    0.010692834854125977,
    0.010531035251915455,
    0.0021913277450948954,
    0.025423621758818626,
    0.02642255835235119,
    0.0002448975865263492,
    -0.012571115978062153,
    -0.012493733316659927,
    -0.03911326453089714,
    0.026605460792779922,
    0.01788236014544964,
    0.026464765891432762,
    -0.009067805483937263,
    -0.06967226415872574
  ]
}
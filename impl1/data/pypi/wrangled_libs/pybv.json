{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": ".. image:: https://github.com/bids-standard/pybv/workflows/python%20build/badge.svg\n   :target: https://github.com/bids-standard/pybv/actions?query=workflow%3a%22python+build%22\n   :alt: github actions python build\n\n.. image:: https://github.com/bids-standard/pybv/workflows/python%20tests/badge.svg\n   :target: https://github.com/bids-standard/pybv/actions?query=workflow%3a%22python+tests%22\n   :alt: github actions python tests\n\n.. image:: https://codecov.io/gh/bids-standard/pybv/branch/main/graph/badge.svg\n   :target: https://codecov.io/gh/bids-standard/pybv\n   :alt: codecov\n\n.. image:: https://badge.fury.io/py/pybv.svg\n   :target: https://badge.fury.io/py/pybv\n   :alt: pypi version\n\n.. image:: https://img.shields.io/conda/vn/conda-forge/pybv.svg\n   :target: https://anaconda.org/conda-forge/pybv\n   :alt: conda version\n\n.. image:: https://readthedocs.org/projects/pybv/badge/?version=stable\n   :target: https://pybv.readthedocs.io/en/stable/?badge=stable\n   :alt: documentation status\n\n.. image:: https://zenodo.org/badge/157434681.svg\n   :target: https://zenodo.org/badge/latestdoi/157434681\n   :alt: zenodo archive\n\n====\npybv\n====\n\n``pybv`` is a lightweight i/o utility for the brainvision data format.\n\nthe brainvision data format is a recommended data format for use in the\n`brain imaging data structure <https://bids.neuroimaging.io>`_.\n\n\nthe documentation can be found under the following links:\n\n- for the `stable release <https://pybv.rtfd.io/en/stable/>`_\n- for the `latest (development) version <https://pybv.rtfd.io/en/latest/>`_\n\nabout the brainvision data format\n=================================\n\nbrainvision is the name of a file format commonly used for storing electrophysiology data.\noriginally, it was put forward by the company `brain products <https://www.brainproducts.com>`_,\nhowever the simplicity of the format has allowed for a diversity of tools reading from and\nwriting to the format.\n\nthe format consists of three separate files:\n\n1. a text header file (``.vhdr``) containing meta data\n2. a text marker file (``.vmrk``) containing information about events in the\n   data\n3. a binary data file (``.eeg``) containing the voltage values of the eeg\n\nboth text files are based on the\n`microsoft windows ini format <https://en.wikipedia.org/wiki/ini_file>`_\nconsisting of:\n\n- sections marked as ``[square brackets]``\n- comments marked as ``; comment``\n- key-value pairs marked as ``key=value``\n\nthe binary ``.eeg`` data file is written in little-endian format without a byte order\nmark (bom), in accordance with the specification by brain products.\nthis ensures that the data file is uniformly written irrespective of the\nnative system architecture.\n\na documentation for the brainvision file format is provided by brain products.\nyou can `view the specification <https://www.brainproducts.com/support-resources/brainvision-core-data-format-1-0/>`_\nas hosted by brain products.\n\n\ninstallation\n============\n\n``pybv`` runs on python version 3.7 or higher.\n\n``pybv``'s only dependency is ``numpy``.\nhowever, we currently recommend that you install mne-python for reading brainvision data.\nsee their `installation instructions <https://mne.tools/stable/install/index.html>`_.\n\nafter you have a working installation of mne-python (or only ``numpy`` if you\ndo not want to read data and only write it), you can install ``pybv`` through\nthe following:\n\n- ``pip install --upgrade pybv``\n\nor if you use `conda <https://docs.conda.io/en/latest/miniconda.html>`_:\n\n- ``conda install --channel conda-forge pybv``\n\ncontributing\n============\n\nthe development of ``pybv`` is taking place on\n`github <https://github.com/bids-standard/pybv>`_.\n\nfor more information, please see\n`contributing.md <https://github.com/bids-standard/pybv/blob/main/.github/contributing.md>`_\n\nusage\n=====\n\nwriting brainvision files\n-------------------------\n\nthe primary functionality provided by ``pybv`` is the ``write_brainvision``\nfunction. this writes a numpy array of data and provided metadata into a\ncollection of brainvision files on disk.\n\n.. code-block:: python\n\n    from pybv import write_brainvision\n\n    # for further parameters see our api documentation\n    write_brainvision(data=data, sfreq=sfreq, ch_names=ch_names,\n                      fname_base=fname, folder_out=tmpdir,\n                      events=events)\n\nreading brainvision files\n-------------------------\n\ncurrently, ``pybv`` recommends using `mne-python <https://mne.tools>`_\nfor reading brainvision files.\n\nhere is an example of the mne-python code required to read brainvision data:\n\n.. code-block:: python\n\n    import mne\n\n    # import the brainvision data into an mne raw object\n    raw = mne.io.read_raw_brainvision('tmp/test.vhdr', preload=true)\n\n    # reconstruct the original events from our raw object\n    events, event_ids = mne.events_from_annotations(raw)\n\nalternatives\n============\n\nthe brainvision data format is very popular and accordingly there are many\nsoftware packages to read this format, or write to it.\nthe following table is intended as a quick overview of packages similar to\n`pybv <https://github.com/bids-standard/pybv>`_.\nplease let us know if you know of additional packages that should be listed here.\n\n+-----------------------------------------------------------------------------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------+\n| name of software                                                            | language             | notes                                                                                                                                       |\n+=============================================================================+======================+=============================================================================================================================================+\n| `biosig project <http://biosig.sourceforge.net/index.html>`_                | miscellaneous        | reading and writing capabilities depend on bindings used, see their `overview <https://pub.ist.ac.at/~schloegl/biosig/tested>`_             |\n+-----------------------------------------------------------------------------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------+\n| `brainstorm <https://neuroimage.usc.edu/brainstorm/>`_                      | matlab               | read and write, search for ``brainamp`` in their `io functions <https://github.com/brainstorm-tools/brainstorm3/tree/master/toolbox/io>`_   |\n+-----------------------------------------------------------------------------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------+\n| `brainvision analyzer <https://www.brainproducts.com/downloads.php?kid=9>`_ | n/a, gui for windows | read and write, by brain products, requires commercial license                                                                              |\n+-----------------------------------------------------------------------------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------+\n| `brainvisionloader.jl <https://github.com/agricolab/brainvisionloader.jl>`_ | julia                | read                                                                                                                                        |\n+-----------------------------------------------------------------------------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------+\n| `eeglab <https://sccn.ucsd.edu/eeglab/index.php>`_                          | matlab / octave      | read and write via `bva-io <https://github.com/arnodelorme/bva-io>`_                                                                        |\n+-----------------------------------------------------------------------------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------+\n| `fieldtrip <https://www.fieldtriptoolbox.org>`_                             | matlab               | read and write, search for ``brainvision`` in their `fileio functions <https://github.com/fieldtrip/fieldtrip/tree/master/fileio/private>`_ |\n+-----------------------------------------------------------------------------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------+\n| `mne-python <https://mne.tools>`_                                           | python               | read (writing via ``pybv``)                                                                                                                 |\n+-----------------------------------------------------------------------------+----------------------+---------------------------------------------------------------------------------------------------------------------------------------------+\n\nacknowledgements\n================\n\nthis package was originally adapted from the\n`philistine package <https://gitlab.com/palday/philistine>`_ by\n`palday <https://phillipalday.com/>`_.\nit copies much of the brainvision exporting code, but removes the dependence on mne.\nseveral features have been added, such as support for individual units for each channel.\n",
  "docs_url": null,
  "keywords": "brain products,brainvision,vhdr,vmrk,eeg",
  "license": "bsd-3-clause",
  "name": "pybv",
  "package_url": "https://pypi.org/project/pybv/",
  "project_url": "https://pypi.org/project/pybv/",
  "project_urls": {
    "Bug Reports": "https://github.com/bids-standard/pybv/issues",
    "Documentation": "https://pybv.readthedocs.io",
    "Download": "https://github.com/bids-standard/pybv",
    "Homepage": "https://github.com/bids-standard/pybv",
    "Source": "https://github.com/bids-standard/pybv"
  },
  "release_url": "https://pypi.org/project/pybv/0.7.5/",
  "requires_dist": [
    "numpy (>=1.18.1)",
    "mne (>=0.20) ; extra == 'export'"
  ],
  "requires_python": "~=3.7",
  "summary": "pybv -- a lightweight i/o utility for the brainvision data format.",
  "version": "0.7.5",
  "releases": [],
  "developers": [
    "pybv_developers",
    "stefan.appelhoff@mailbox.org",
    "stefan_appelhoff"
  ],
  "kwds": "write_brainvision pybv workflows brainstorm3 py",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_pybv",
  "homepage": "https://github.com/bids-standard/pybv",
  "release_count": 15,
  "dependency_ids": [
    "pypi_mne",
    "pypi_numpy"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "typing :: typed"
  ],
  "description": "travel through time in your tests.\n============\ntime-machine\n============\n\n.. image:: https://img.shields.io/github/actions/workflow/status/adamchainz/time-machine/main.yml?branch=main&style=for-the-badge\n   :target: https://github.com/adamchainz/time-machine/actions?workflow=ci\n\n.. image:: https://img.shields.io/badge/coverage-100%25-success?style=for-the-badge\n   :target: https://github.com/adamchainz/time-machine/actions?workflow=ci\n\n.. image:: https://img.shields.io/pypi/v/time-machine.svg?style=for-the-badge\n   :target: https://pypi.org/project/time-machine/\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg?style=for-the-badge\n   :target: https://github.com/psf/black\n\n.. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logocolor=white&style=for-the-badge\n   :target: https://github.com/pre-commit/pre-commit\n   :alt: pre-commit\n\ntravel through time in your tests.\n\na quick example:\n\n.. code-block:: python\n\n    import datetime as dt\n    from zoneinfo import zoneinfo\n    import time_machine\n\n    hill_valley_tz = zoneinfo(\"america/los_angeles\")\n\n\n    @time_machine.travel(dt.datetime(1985, 10, 26, 1, 24, tzinfo=hill_valley_tz))\n    def test_delorean():\n        assert dt.date.today().isoformat() == \"1985-10-26\"\n\nfor a bit of background, see `the introductory blog post <https://adamj.eu/tech/2020/06/03/introducing-time-machine/>`__ and `the benchmark blog post <https://adamj.eu/tech/2021/02/19/freezegun-versus-time-machine/>`__.\n\ninstallation\n============\n\nuse **pip**:\n\n.. code-block:: sh\n\n    python -m pip install time-machine\n\npython 3.8 to 3.12 supported.\nonly cpython is supported at this time because time-machine directly hooks into the c-level api.\n\n----\n\n**testing a django project?**\ncheck out my book `speed up your django tests <https://adamchainz.gumroad.com/l/suydt>`__ which covers loads of ways to write faster, more accurate tests.\ni created time-machine whilst writing the book.\n\n----\n\nusage\n=====\n\nif you\u2019re coming from freezegun or libfaketime, see also the below section on migrating.\n\n``travel(destination, *, tick=true)``\n-------------------------------------\n\n``travel()`` is a class that allows time travel, to the datetime specified by ``destination``.\nit does so by mocking all functions from python's standard library that return the current date or datetime.\nit can be used independently, as a function decorator, or as a context manager.\n\n``destination`` specifies the datetime to move to.\nit may be:\n\n* a ``datetime.datetime``.\n  if it is naive, it will be assumed to have the utc timezone.\n  if it has ``tzinfo`` set to a |zoneinfo-instance|_, the current timezone will also be mocked.\n* a ``datetime.date``.\n  this will be converted to a utc datetime with the time 00:00:00.\n* a ``datetime.timedelta``.\n  this will be interpreted relative to the current time.\n  if already within a ``travel()`` block, the ``shift()`` method is easier to use (documented below).\n* a ``float`` or ``int`` specifying a `unix timestamp <https://en.m.wikipedia.org/wiki/unix_time>`__\n* a string, which will be parsed with `dateutil.parse <https://dateutil.readthedocs.io/en/stable/parser.html>`__ and converted to a timestamp.\n  if the result is naive, it will be assumed to be local time.\n\n.. |zoneinfo-instance| replace:: ``zoneinfo.zoneinfo`` instance\n.. _zoneinfo-instance: https://docs.python.org/3/library/zoneinfo.html#zoneinfo.zoneinfo\n\nadditionally, you can provide some more complex types:\n\n* a generator, in which case ``next()`` will be called on it, with the result treated as above.\n* a callable, in which case it will be called with no parameters, with the result treated as above.\n\n``tick`` defines whether time continues to \"tick\" after travelling, or is frozen.\nif ``true``, the default, successive calls to mocked functions return values increasing by the elapsed real time *since the first call.*\nso after starting travel to ``0.0`` (the unix epoch), the first call to any datetime function will return its representation of ``1970-01-01 00:00:00.000000`` exactly.\nthe following calls \"tick,\" so if a call was made exactly half a second later, it would return ``1970-01-01 00:00:00.500000``.\n\nmocked functions\n^^^^^^^^^^^^^^^^\n\nall datetime functions in the standard library are mocked to move to the destination current datetime:\n\n* ``datetime.datetime.now()``\n* ``datetime.datetime.utcnow()``\n* ``time.clock_gettime()`` (only for ``clock_realtime``)\n* ``time.clock_gettime_ns()`` (only for ``clock_realtime``)\n* ``time.gmtime()``\n* ``time.localtime()``\n* ``time.monotonic()`` (not a real monotonic clock, returns ``time.time()``)\n* ``time.monotonic_ns()`` (not a real monotonic clock, returns ``time.time_ns()``)\n* ``time.strftime()``\n* ``time.time()``\n* ``time.time_ns()``\n\nthe mocking is done at the c layer, replacing the function pointers for these built-ins.\ntherefore, it automatically affects everywhere those functions have been imported, unlike use of ``unittest.mock.patch()``.\n\nusage with ``start()`` / ``stop()``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nto use independently, create an instance, use ``start()`` to move to the destination time, and ``stop()`` to move back.\nfor example:\n\n.. code-block:: python\n\n    import datetime as dt\n    import time_machine\n\n    traveller = time_machine.travel(dt.datetime(1985, 10, 26))\n    traveller.start()\n    # it's the past!\n    assert dt.date.today() == dt.date(1985, 10, 26)\n    traveller.stop()\n    # we've gone back to the future!\n    assert dt.date.today() > dt.date(2020, 4, 29)\n\n``travel()`` instances are nestable, but you'll need to be careful when manually managing to call their ``stop()`` methods in the correct order, even when exceptions occur.\nit's recommended to use the decorator or context manager forms instead, to take advantage of python features to do this.\n\nfunction decorator\n^^^^^^^^^^^^^^^^^^\n\nwhen used as a function decorator, time is mocked during the wrapped function's duration:\n\n.. code-block:: python\n\n    import time\n    import time_machine\n\n\n    @time_machine.travel(\"1970-01-01 00:00 +0000\")\n    def test_in_the_deep_past():\n        assert 0.0 < time.time() < 1.0\n\nyou can also decorate asynchronous functions (coroutines):\n\n.. code-block:: python\n\n    import time\n    import time_machine\n\n\n    @time_machine.travel(\"1970-01-01 00:00 +0000\")\n    async def test_in_the_deep_past():\n        assert 0.0 < time.time() < 1.0\n\nbeware: time is a *global* state - `see below <#caveats>`__.\n\ncontext manager\n^^^^^^^^^^^^^^^\n\nwhen used as a context manager, time is mocked during the ``with`` block:\n\n.. code-block:: python\n\n    import time\n    import time_machine\n\n\n    def test_in_the_deep_past():\n        with time_machine.travel(0.0):\n            assert 0.0 < time.time() < 1.0\n\nclass decorator\n^^^^^^^^^^^^^^^\n\nonly ``unittest.testcase`` subclasses are supported.\nwhen applied as a class decorator to such classes, time is mocked from the start of ``setupclass()`` to the end of ``teardownclass()``:\n\n.. code-block:: python\n\n    import time\n    import time_machine\n    import unittest\n\n\n    @time_machine.travel(0.0)\n    class deeppasttests(testcase):\n        def test_in_the_deep_past(self):\n            assert 0.0 < time.time() < 1.0\n\nnote this is different to ``unittest.mock.patch()``\\'s behaviour, which is to mock only during the test methods.\nfor pytest-style test classes, see the pattern `documented below <#pytest-plugin>`__.\n\ntimezone mocking\n^^^^^^^^^^^^^^^^\n\nif the ``destination`` passed to ``time_machine.travel()`` or ``coordinates.move_to()`` has its ``tzinfo`` set to a |zoneinfo-instance2|_, the current timezone will be mocked.\nthis will be done by calling |time-tzset|_, so it is only available on unix.\nthe ``zoneinfo`` module is new in python 3.8 - on older python versions use the |backports-zoneinfo-package|_, by the original ``zoneinfo`` author.\n\n.. |zoneinfo-instance2| replace:: ``zoneinfo.zoneinfo`` instance\n.. _zoneinfo-instance2: https://docs.python.org/3/library/zoneinfo.html#zoneinfo.zoneinfo\n\n.. |time-tzset| replace:: ``time.tzset()``\n.. _time-tzset: https://docs.python.org/3/library/time.html#time.tzset\n\n.. |backports-zoneinfo-package| replace:: ``backports.zoneinfo`` package\n.. _backports-zoneinfo-package: https://pypi.org/project/backports.zoneinfo/\n\n``time.tzset()`` changes the ``time`` module\u2019s `timezone constants <https://docs.python.org/3/library/time.html#timezone-constants>`__ and features that rely on those, such as ``time.localtime()``.\nit won\u2019t affect other concepts of \u201cthe current timezone\u201d, such as django\u2019s (which can be changed with its |timezone-override|_).\n\n.. |timezone-override| replace:: ``timezone.override()``\n.. _timezone-override: https://docs.djangoproject.com/en/stable/ref/utils/#django.utils.timezone.override\n\nhere\u2019s a worked example changing the current timezone:\n\n.. code-block:: python\n\n    import datetime as dt\n    import time\n    from zoneinfo import zoneinfo\n    import time_machine\n\n    hill_valley_tz = zoneinfo(\"america/los_angeles\")\n\n\n    @time_machine.travel(dt.datetime(2015, 10, 21, 16, 29, tzinfo=hill_valley_tz))\n    def test_hoverboard_era():\n        assert time.tzname == (\"pst\", \"pdt\")\n        now = dt.datetime.now()\n        assert (now.hour, now.minute) == (16, 29)\n\n``coordinates``\n---------------\n\nthe ``start()`` method and entry of the context manager both return a ``coordinates`` object that corresponds to the given \"trip\" in time.\nthis has a couple methods that can be used to travel to other times.\n\n``move_to(destination, tick=none)``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n``move_to()`` moves the current time to a new destination.\n``destination`` may be any of the types supported by ``travel``.\n\n``tick`` may be set to a boolean, to change the ``tick`` flag of ``travel``.\n\nfor example:\n\n.. code-block:: python\n\n    import datetime as dt\n    import time\n    import time_machine\n\n    with time_machine.travel(0, tick=false) as traveller:\n        assert time.time() == 0\n\n        traveller.move_to(234)\n        assert time.time() == 234\n\n``shift(delta)``\n^^^^^^^^^^^^^^^^\n\n``shift()`` takes one argument, ``delta``, which moves the current time by the given offset.\n``delta`` may be a ``timedelta`` or a number of seconds, which will be added to destination.\nit may be negative, in which case time will move to an earlier point.\n\nfor example:\n\n.. code-block:: python\n\n    import datetime as dt\n    import time\n    import time_machine\n\n    with time_machine.travel(0, tick=false) as traveller:\n        assert time.time() == 0\n\n        traveller.shift(dt.timedelta(seconds=100))\n        assert time.time() == 100\n\n        traveller.shift(-dt.timedelta(seconds=10))\n        assert time.time() == 90\n\npytest plugin\n-------------\n\ntime-machine also works as a pytest plugin.\nit provides a function-scoped fixture called ``time_machine`` with methods ``move_to()`` and ``shift()``, which have the same signature as their equivalents in ``coordinates``.\nthis can be used to mock your test at different points in time and will automatically be un-mock when the test is torn down.\n\nfor example:\n\n.. code-block:: python\n\n    import datetime as dt\n\n\n    def test_delorean(time_machine):\n        time_machine.move_to(dt.datetime(1985, 10, 26))\n\n        assert dt.date.today().isoformat() == \"1985-10-26\"\n\n        time_machine.move_to(dt.datetime(2015, 10, 21))\n\n        assert dt.date.today().isoformat() == \"2015-10-21\"\n\n        time_machine.shift(dt.timedelta(days=1))\n\n        assert dt.date.today().isoformat() == \"2015-10-22\"\n\nif you are using pytest test classes, you can apply the fixture to all test methods in a class by adding an autouse fixture:\n\n.. code-block:: python\n\n    import time\n\n    import pytest\n\n\n    class testsomething:\n        @pytest.fixture(autouse=true)\n        def set_time(self, time_machine):\n            time_machine.move_to(1000.0)\n\n        def test_one(self):\n            assert int(time.time()) == 1000.0\n\n        def test_two(self, time_machine):\n            assert int(time.time()) == 1000.0\n            time_machine.move_to(2000.0)\n            assert int(time.time()) == 2000.0\n\n``escape_hatch``\n----------------\n\nthe ``escape_hatch`` object provides functions to bypass time-machine.\nthese allow you to call the real datetime functions, without any mocking.\nit also provides a way to check if time-machine is currently time travelling.\n\nthese capabilities are useful in rare circumstances.\nfor example, if you need to authenticate with an external service during time travel, you may need the real value of ``datetime.now()``.\n\nthe functions are:\n\n* ``escape_hatch.is_travelling() -> bool`` - returns ``true`` if ``time_machine.travel()`` is active, ``false`` otherwise.\n\n* ``escape_hatch.datetime.datetime.now()`` - wraps the real ``datetime.datetime.now()``.\n\n* ``escape_hatch.datetime.datetime.utcnow()`` - wraps the real ``datetime.datetime.utcnow()``.\n\n* ``escape_hatch.time.clock_gettime()`` - wraps the real ``time.clock_gettime()``.\n\n* ``escape_hatch.time.clock_gettime_ns()`` - wraps the real ``time.clock_gettime_ns()``.\n\n* ``escape_hatch.time.gmtime()`` - wraps the real ``time.gmtime()``.\n\n* ``escape_hatch.time.localtime()`` - wraps the real ``time.localtime()``.\n\n* ``escape_hatch.time.strftime()`` - wraps the real ``time.strftime()``.\n\n* ``escape_hatch.time.time()`` - wraps the real ``time.time()``.\n\n* ``escape_hatch.time.time_ns()`` - wraps the real ``time.time_ns()``.\n\nfor example:\n\n.. code-block:: python\n\n    import time_machine\n\n\n    with time_machine.travel(...):\n        if time_machine.escape_hatch.is_travelling():\n            print(\"we need to go back to the future!\")\n\n        real_now = time_machine.escape_hatch.datetime.datetime.now()\n        external_authenticate(now=real_now)\n\ncaveats\n=======\n\ntime is a global state.\nany concurrent threads or asynchronous functions are also be affected.\nsome aren't ready for time to move so rapidly or backwards, and may crash or produce unexpected results.\n\nalso beware that other processes are not affected.\nfor example, if you use sql datetime functions on a database server, they will return the real time.\n\ncomparison\n==========\n\nthere are some prior libraries that try to achieve the same thing.\nthey have their own strengths and weaknesses.\nhere's a quick comparison.\n\nunittest.mock\n-------------\n\nthe standard library's `unittest.mock <https://docs.python.org/3/library/unittest.mock.html>`__ can be used to target imports of ``datetime`` and ``time`` to change the returned value for current time.\nunfortunately, this is fragile as it only affects the import location the mock targets.\ntherefore, if you have several modules in a call tree requesting the date/time, you need several mocks.\nthis is a general problem with unittest.mock - see `why your mock doesn't work <https://nedbatchelder.com//blog/201908/why_your_mock_doesnt_work.html>`__.\n\nit's also impossible to mock certain references, such as function default arguments:\n\n.. code-block:: python\n\n    def update_books(_now=time.time):  # set as default argument so faster lookup\n        for book in books:\n            ...\n\nalthough such references are rare, they are occasionally used to optimize highly repeated loops.\n\nfreezegun\n---------\n\nsteve pulec's `freezegun <https://github.com/spulec/freezegun>`__ library is a popular solution.\nit provides a clear api which was much of the inspiration for time-machine.\n\nthe main drawback is its slow implementation.\nit essentially does a find-and-replace mock of all the places that the ``datetime`` and ``time`` modules have been imported.\nthis gets around the problems with using unittest.mock, but it means the time it takes to do the mocking is proportional to the number of loaded modules.\nin large projects, this can take several seconds, an impractical overhead for an individual test.\n\nit's also not a perfect search, since it searches only module-level imports.\nsuch imports are definitely the most common way projects use date and time functions, but they're not the only way.\nfreezegun won\u2019t find functions that have been \u201chidden\u201d inside arbitrary objects, such as class-level attributes.\n\nit also can't affect c extensions that call the standard library functions, including (i believe) cython-ized python code.\n\npython-libfaketime\n------------------\n\nsimon weber's `python-libfaketime <https://github.com/simon-weber/python-libfaketime/>`__ wraps the `libfaketime <https://github.com/wolfcw/libfaketime>`__ library.\nlibfaketime replaces all the c-level system calls for the current time with its own wrappers.\nit's therefore a \"perfect\" mock for the current process, affecting every single point the current time might be fetched, and performs much faster than freezegun.\n\nunfortunately python-libfaketime comes with the limitations of ``ld_preload``.\nthis is a mechanism to replace system libraries for a program as it loads (`explanation <http://www.goldsborough.me/c/low-level/kernel/2016/08/29/16-48-53-the_-ld_preload-_trick/>`__).\nthis causes two issues in particular when you use python-libfaketime.\n\nfirst, ``ld_preload`` is only available on unix platforms, which prevents you from using it on windows.\n\nsecond, you have to help manage ``ld_preload``.\nyou either use python-libfaketime's ``reexec_if_needed()`` function, which restarts (*re-execs*) your test process while loading, or manually manage the ``ld_preload`` environment variable.\nneither is ideal.\nre-execing breaks anything that might wrap your test process, such as profilers, debuggers, and ide test runners.\nmanually managing the environment variable is a bit of overhead, and must be done for each environment you run your tests in, including each developer's machine.\n\ntime-machine\n------------\n\ntime-machine is intended to combine the advantages of freezegun and libfaketime.\nit works without ``ld_preload`` but still mocks the standard library functions everywhere they may be referenced.\nits weak point is that other libraries using date/time system calls won't be mocked.\nthankfully this is rare.\nit's also possible such python libraries can be added to the set mocked by time-machine.\n\none drawback is that it only works with cpython, so can't be used with other python interpreters like pypy.\nhowever it may possible to extend it to support other interpreters through different mocking mechanisms.\n\nmigrating from libfaketime or freezegun\n=======================================\n\nfreezegun has a useful api, and python-libfaketime copies some of it, with a different function name.\ntime-machine also copies some of freezegun's api, in ``travel()``\\'s ``destination``, and ``tick`` arguments, and the ``shift()`` method.\nthere are a few differences:\n\n* time-machine's ``tick`` argument defaults to ``true``, because code tends to make the (reasonable) assumption that time progresses whilst running, and should normally be tested as such.\n  testing with time frozen can make it easy to write complete assertions, but it's quite artificial.\n  write assertions against time ranges, rather than against exact values.\n\n* freezegun interprets dates and naive datetimes in the local time zone (including those parsed from strings with ``dateutil``).\n  this means tests can pass when run in one time zone and fail in another.\n  time-machine instead interprets dates and naive datetimes in utc so they are fixed points in time.\n  provide time zones where required.\n\n* freezegun's ``tick()`` method has been implemented as ``shift()``, to avoid confusion with the ``tick`` argument.\n  it also requires an explicit delta rather than defaulting to 1 second.\n\n* freezegun's ``tz_offset`` argument is not supported, since it only partially mocks the current time zone.\n  time zones are more complicated than a single offset from utc, and freezegun only uses the offset in ``time.localtime()``.\n  instead, time-machine will mock the current time zone if you give it a ``datetime`` with a ``zoneinfo`` timezone.\n\nsome features aren't supported like the ``auto_tick_seconds`` argument.\nthese may be added in a future release.\n\nif you are only fairly simple function calls, you should be able to migrate by replacing calls to ``freezegun.freeze_time()`` and ``libfaketime.fake_time()`` with ``time_machine.travel()``.\n",
  "docs_url": null,
  "keywords": "time,warp,date,datetime,mock,test,tests,testing",
  "license": "mit",
  "name": "time-machine",
  "package_url": "https://pypi.org/project/time-machine/",
  "project_url": "https://pypi.org/project/time-machine/",
  "project_urls": {
    "Changelog": "https://github.com/adamchainz/time-machine/blob/main/CHANGELOG.rst",
    "Homepage": "https://github.com/adamchainz/time-machine",
    "Mastodon": "https://fosstodon.org/@adamchainz",
    "Twitter": "https://twitter.com/adamchainz"
  },
  "release_url": "https://pypi.org/project/time-machine/2.13.0/",
  "requires_dist": [
    "python-dateutil"
  ],
  "requires_python": ">=3.8",
  "summary": "travel through time in your tests.",
  "version": "2.13.0",
  "releases": [],
  "developers": [
    "adam_johnson",
    "me@adamj.eu"
  ],
  "kwds": "time_machine badge fake_time _time timestamp",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_time_machine",
  "homepage": "https://github.com/adamchainz/time-machine",
  "release_count": 28,
  "dependency_ids": [
    "pypi_python_dateutil"
  ],
  "documentation_summary": "The GitHub repository \"adamchainz/time-machine\" provides a Python library for manipulating time in tests, allowing developers to \"travel\" to specific dates or times. This is particularly useful for testing time-dependent code. The library supports Python versions 3.8 to 3.13 and is limited to CPython due to its direct interaction with the C-level API. It offers various functionalities, including mocking all standard library functions that return the current date or datetime, and can be used as a function decorator, context manager, or class decorator. It also includes a pytest plugin for ease of use in testing frameworks. The library is licensed under the MIT license and has garnered 584 stars and 30 forks on GitHub.",
  "embedding": [
    0.0027931244112551212,
    -0.028831789270043373,
    -0.008417045697569847,
    -0.0028523236978799105,
    -0.004165468737483025,
    0.017566008493304253,
    -0.009270948357880116,
    -0.028473006561398506,
    -0.03817449510097504,
    -0.00954362377524376,
    0.0040578339248895645,
    0.020206650719046593,
    -0.0008225096971727908,
    0.018484491854906082,
    0.020737648010253906,
    -0.012751142494380474,
    0.021110782399773598,
    -0.03788746893405914,
    0.006002436857670546,
    0.004219286143779755,
    0.021842699497938156,
    0.004685704130679369,
    -0.006006024777889252,
    -0.024483341723680496,
    -0.0002628084330353886,
    0.03223305195569992,
    0.013805964030325413,
    -0.01709241420030594,
    0.02403845079243183,
    0.019632596522569656,
    0.03352466970682144,
    -0.009730190970003605,
    -0.025100447237491608,
    -0.026047633960843086,
    -0.02268942818045616,
    -0.040499407798051834,
    0.0018477316480129957,
    0.00035497077624313533,
    0.026908714324235916,
    0.005970146507024765,
    0.008151546120643616,
    0.01722157746553421,
    -0.013935125432908535,
    -0.013088398613035679,
    -0.00623205816373229,
    0.023464398458600044,
    0.022574616596102715,
    -0.03920779004693031,
    -0.0177095215767622,
    0.010584093630313873,
    0.01574339158833027,
    0.016432253643870354,
    -0.008417045697569847,
    -0.005051662679761648,
    0.011595861986279488,
    -0.02937714010477066,
    0.006529847625643015,
    0.0030119819566607475,
    -0.009773245081305504,
    -0.01140211895108223,
    -0.007548790890723467,
    -0.014480475336313248,
    -0.028171628713607788,
    -0.002498922636732459,
    -0.0016952489968389273,
    -0.008883463218808174,
    -0.026650389656424522,
    0.007143366616219282,
    0.03005165047943592,
    0.007584669161587954,
    0.02571755461394787,
    0.018800221383571625,
    0.010261189192533493,
    -0.005302810575813055,
    0.045751988887786865,
    -0.03639493137598038,
    -4.68660109618213e-05,
    0.03263488784432411,
    0.00907003041356802,
    0.004165468737483025,
    0.015829499810934067,
    -0.008718423545360565,
    -0.010440580546855927,
    0.03464407101273537,
    0.006569313816726208,
    0.009471867233514786,
    0.002052237978205085,
    0.020278407260775566,
    -0.03191732242703438,
    -0.01605912111699581,
    0.009199191816151142,
    -0.004954791162163019,
    0.007972154766321182,
    0.04305393993854523,
    -0.008481626398861408,
    0.028846140950918198,
    -0.0058948020450770855,
    0.027769792824983597,
    -0.01103616040199995,
    -0.023536155000329018,
    0.004983493592590094,
    0.020192299038171768,
    -0.0030137759167701006,
    -0.012313427403569221,
    -0.03048219159245491,
    -0.0575774721801281,
    0.010942877270281315,
    -0.023679668083786964,
    0.018613653257489204,
    -0.010914173908531666,
    -0.02301950752735138,
    0.05344429239630699,
    -0.010354473255574703,
    -0.04632604122161865,
    0.011976171284914017,
    -0.0007673468207940459,
    0.015212392434477806,
    -0.0017876354977488518,
    0.0018567012157291174,
    -0.0199483260512352,
    0.00982347410172224,
    -0.0022047206293791533,
    0.04213545843958855,
    -0.010375999845564365,
    0.03582087904214859,
    -0.007692304439842701,
    -0.006619543302804232,
    -0.005026547703891993,
    0.003568095387890935,
    -0.026449471712112427,
    -0.010641499422490597,
    -0.0015867170877754688,
    -0.005234641954302788,
    0.00657648965716362,
    -0.012256021611392498,
    -0.020235352218151093,
    -0.014250854961574078,
    -0.007197184022516012,
    -0.03831800818443298,
    -0.011595861986279488,
    0.012055103667080402,
    0.009263773448765278,
    -0.0051736487075686455,
    -0.006038315128535032,
    -0.006400686223059893,
    0.03682547062635422,
    0.00530998595058918,
    -0.001072760671377182,
    0.008768652565777302,
    -0.003139349864795804,
    0.026291606947779655,
    -0.018527546897530556,
    -0.027755441144108772,
    0.007369399536401033,
    -0.008022384718060493,
    0.029764624312520027,
    -0.015255446545779705,
    -0.004018367733806372,
    0.00891934148967266,
    0.0025348009075969458,
    -0.011646091006696224,
    0.04130307957530022,
    -0.01013202778995037,
    -0.007096724584698677,
    -0.0013983561657369137,
    0.02514350228011608,
    0.02698047086596489,
    -0.004438143689185381,
    -0.0166331734508276,
    0.01617393083870411,
    -0.011552807874977589,
    0.011122268624603748,
    -0.03811708837747574,
    0.004979906138032675,
    0.022416751831769943,
    0.028846140950918198,
    0.015298500657081604,
    -0.007053670939058065,
    -0.016676226630806923,
    -0.0031626708805561066,
    -0.00119295297190547,
    0.006971150636672974,
    0.014458948746323586,
    0.03013775870203972,
    -0.018613653257489204,
    -0.0177095215767622,
    0.00518082408234477,
    0.008115667849779129,
    -0.009199191816151142,
    -0.0018961672903969884,
    0.0019069308182224631,
    0.004811278078705072,
    0.001975099556148052,
    -0.007878871634602547,
    -0.5781857371330261,
    -0.0035752709954977036,
    -0.04718711972236633,
    -0.012112508527934551,
    0.002671138383448124,
    0.012363657355308533,
    -0.0008965086308307946,
    0.0019697179086506367,
    -0.03200342878699303,
    0.025731906294822693,
    -0.014824907295405865,
    0.05091845989227295,
    -0.002043268410488963,
    -0.014458948746323586,
    -0.01071325596421957,
    -0.035648662596940994,
    0.018240520730614662,
    -0.016432253643870354,
    -0.0018037807894870639,
    0.01479620486497879,
    -0.023076912388205528,
    0.034787584096193314,
    -0.008352464996278286,
    0.026851307600736618,
    -0.004287455230951309,
    0.024856476113200188,
    -0.006745117716491222,
    -0.002615527017042041,
    0.008201776072382927,
    -0.0034120248164981604,
    -0.02581801451742649,
    0.023335237056016922,
    0.01061997190117836,
    -0.024239368736743927,
    0.06245691701769829,
    -0.005503728985786438,
    -0.011208375915884972,
    0.034672774374485016,
    -0.006856339983642101,
    0.04167621582746506,
    0.0005274107679724693,
    -0.021871402859687805,
    0.004233637824654579,
    0.040958650410175323,
    0.030855324119329453,
    -0.02185705117881298,
    0.013956652954220772,
    0.017020657658576965,
    -0.003677524160593748,
    -0.033811695873737335,
    0.017637765035033226,
    0.005223878193646669,
    0.013942301273345947,
    -0.010411878116428852,
    0.011158146895468235,
    -0.009873704053461552,
    0.01730768382549286,
    0.011516929604113102,
    0.016719279810786247,
    -0.01611652597784996,
    -0.004230049904435873,
    0.034328341484069824,
    0.02563144639134407,
    0.009629731997847557,
    -0.02571755461394787,
    0.022574616596102715,
    0.025774959474802017,
    -0.003528629196807742,
    -0.010368824005126953,
    -0.04744544252753258,
    0.02409585565328598,
    0.01776692643761635,
    -0.003828213084489107,
    -0.014997122809290886,
    0.03260618448257446,
    0.05582661181688309,
    0.018771518021821976,
    -0.014516353607177734,
    -0.008237654343247414,
    0.03005165047943592,
    0.015628580003976822,
    0.00686710374429822,
    -0.011229903437197208,
    -0.026191147044301033,
    0.07146954536437988,
    -0.0015947897918522358,
    -0.018010899424552917,
    -0.006780995987355709,
    0.03142937645316124,
    0.02363661304116249,
    0.004649825859814882,
    0.032032132148742676,
    -0.023349586874246597,
    -0.027698036283254623,
    -0.008216126821935177,
    -0.0026406417600810528,
    0.002321325009688735,
    0.0011848803842440248,
    -0.0016387406503781676,
    -0.011818306520581245,
    0.012055103667080402,
    -0.017781278118491173,
    0.020364513620734215,
    0.014997122809290886,
    0.007742533925920725,
    -0.007032143883407116,
    0.012234495021402836,
    0.016202634200453758,
    0.017537305131554604,
    -0.035160720348358154,
    -0.01814006082713604,
    -0.05045922100543976,
    -0.010950052179396152,
    -0.001343641779385507,
    -0.0011857773642987013,
    -0.037342119961977005,
    0.01851319521665573,
    0.008524680510163307,
    0.04468999058008194,
    -0.010741958394646645,
    -0.0032290455419570208,
    -0.0008951632189564407,
    0.009077206254005432,
    0.0003812067734543234,
    0.018154412508010864,
    0.012923358008265495,
    0.04124567657709122,
    -0.02870262786746025,
    -0.01687714457511902,
    -0.0049260882660746574,
    0.004226461984217167,
    0.006081369239836931,
    0.006795347202569246,
    -0.018470140174031258,
    0.010591269470751286,
    0.015786444768309593,
    0.03094143234193325,
    -0.0177095215767622,
    -0.01006744708865881,
    -0.005772816017270088,
    -0.02234499529004097,
    0.009708663448691368,
    -0.010828066617250443,
    -0.010167906060814857,
    -0.017967844381928444,
    -0.0465843640267849,
    0.005223878193646669,
    0.005941444076597691,
    -0.00027760822558775544,
    -0.007914749905467033,
    -0.01028271671384573,
    -0.016030417755246162,
    -0.020981620997190475,
    0.010706080123782158,
    -0.009306826628744602,
    -0.01125143002718687,
    -0.015556824393570423,
    -0.036079201847314835,
    -0.02525831200182438,
    -0.007921924814581871,
    0.023191723972558975,
    0.019345570355653763,
    0.0017051154281944036,
    0.005794343072921038,
    -0.013411303050816059,
    0.001517651486210525,
    -0.025502284988760948,
    0.03702639043331146,
    -0.013569166883826256,
    -0.03849022462964058,
    -0.0033904979936778545,
    -0.012191440910100937,
    -0.004423792473971844,
    -0.008079789578914642,
    0.00995981227606535,
    0.01951778680086136,
    -0.014925366267561913,
    0.008998273871839046,
    -0.027597576379776,
    -0.005916329100728035,
    -0.0058948020450770855,
    0.012593277730047703,
    -0.019173355773091316,
    -0.006562138441950083,
    0.024727314710617065,
    0.023765776306390762,
    0.012995114549994469,
    -0.001756242010742426,
    -0.02482777275145054,
    0.04202064871788025,
    0.001107742078602314,
    -0.028157277032732964,
    -0.028960950672626495,
    -0.0221871305257082,
    -0.0034568726550787687,
    0.025100447237491608,
    0.014100166037678719,
    -0.021469565108418465,
    0.011430821381509304,
    0.009335529990494251,
    -0.0007852859562262893,
    -0.021383456885814667,
    -0.0016970428405329585,
    -0.022330643609166145,
    -0.004635474178940058,
    -0.031687699258327484,
    0.03005165047943592,
    -0.004287455230951309,
    0.02913316711783409,
    -0.0021957510616630316,
    0.01161738857626915,
    -0.03180251270532608,
    -0.012858777306973934,
    -0.01183265820145607,
    0.01483925897628069,
    0.018498843535780907,
    -0.02603328414261341,
    0.02458379976451397,
    -0.012995114549994469,
    0.004628298804163933,
    0.02250286005437374,
    0.013813139870762825,
    0.010340121574699879,
    0.012995114549994469,
    -0.019388625398278236,
    0.011983347125351429,
    0.006899394094944,
    -9.008812776301056e-05,
    0.02182834781706333,
    -0.024971285834908485,
    0.004578069318085909,
    0.03800227865576744,
    -0.007656426168978214,
    0.000462829862954095,
    0.04064292088150978,
    0.011072038672864437,
    0.010426229797303677,
    0.005941444076597691,
    0.02878873609006405,
    -0.019374273717403412,
    0.004233637824654579,
    0.004283867310732603,
    0.04239378124475479,
    -0.030625704675912857,
    -0.002859499305486679,
    0.012119684368371964,
    0.005471438635140657,
    -0.0024738076608628035,
    -0.006784583441913128,
    -0.0005229259841144085,
    -0.003971726167947054,
    -0.0015203423099592328,
    -0.007706655655056238,
    -0.016102174296975136,
    0.015829499810934067,
    -0.013361073099076748,
    -0.019661299884319305,
    -0.011667618528008461,
    0.013576342724263668,
    0.014092990197241306,
    0.01528414897620678,
    0.016432253643870354,
    0.013454357162117958,
    -0.019661299884319305,
    0.020608486607670784,
    -0.03274969756603241,
    0.006504733115434647,
    -0.033811695873737335,
    0.009184841066598892,
    0.015614229254424572,
    -0.0019786874763667583,
    -0.014631164260208607,
    -0.006181828677654266,
    -0.018915031105279922,
    0.05703212320804596,
    -0.013569166883826256,
    0.026564281433820724,
    0.024540746584534645,
    0.0022316293325275183,
    -0.010892647318542004,
    -0.013490235432982445,
    -0.048392631113529205,
    0.020221000537276268,
    0.0006260760710574687,
    -0.008008033037185669,
    -0.03495980054140091,
    -0.014911015518009663,
    -0.006691300310194492,
    -0.0023661728482693434,
    0.009601028636097908,
    -0.0048148659989237785,
    0.008904989808797836,
    0.00565441744402051,
    -0.018642356619238853,
    -0.003028127131983638,
    0.011100741103291512,
    0.03926519304513931,
    0.002412814646959305,
    -0.013217560015618801,
    -0.006673361174762249,
    -0.02477036789059639,
    0.01002439297735691,
    -0.028745681047439575,
    -0.00397531408816576,
    0.019847868010401726,
    -0.00959385372698307,
    -0.01930251717567444,
    -0.020063137635588646,
    0.00496555445715785,
    0.002721367869526148,
    0.03716990351676941,
    0.0052812835201621056,
    -0.0011498989770188928,
    -0.006874279119074345,
    0.006074193399399519,
    0.014329787343740463,
    0.010196608491241932,
    -0.008904989808797836,
    0.022273238748311996,
    -0.004448907449841499,
    -0.029448896646499634,
    -0.007563142571598291,
    -0.041733622550964355,
    0.002545564202591777,
    0.04477610066533089,
    0.004531427286565304,
    0.0018477316480129957,
    -0.007179244887083769,
    -0.050660137087106705,
    -0.02065153978765011,
    -0.0012467703782022,
    -0.010375999845564365,
    0.02799941413104534,
    0.01915900409221649,
    0.004061421845108271,
    0.028071170672774315,
    0.011437997221946716,
    -7.528833521064371e-05,
    -0.0004300909349694848,
    0.01150975376367569,
    -0.003029921092092991,
    0.010612796992063522,
    0.00820895191282034,
    -0.001321217860095203,
    0.01006744708865881,
    -0.013389775529503822,
    0.006946036126464605,
    0.013440005481243134,
    0.03048219159245491,
    -0.00048659922322258353,
    0.010806539095938206,
    0.008603612892329693,
    0.0033779405057430267,
    -0.03458666801452637,
    -0.014214976690709591,
    -0.0014207800850272179,
    0.006612367928028107,
    0.013978179544210434,
    -0.02667909301817417,
    0.02053673006594181,
    -0.004678528290241957,
    0.027942007407546043,
    0.00445967074483633,
    -0.03628012165427208,
    0.008912165649235249,
    0.01638920046389103,
    0.003311565611511469,
    -0.011681969277560711,
    0.017365090548992157,
    -0.017422495409846306,
    0.023249128833413124,
    0.01374855823814869,
    -0.009278124198317528,
    -0.008797354996204376,
    0.014631164260208607,
    0.005144945811480284,
    -0.05043051764369011,
    -0.03272099420428276,
    0.04428815469145775,
    0.027324901893734932,
    -0.0001584250567248091,
    -0.026722146198153496,
    -0.01951778680086136,
    -0.0068096984177827835,
    -0.027884602546691895,
    -0.043197453022003174,
    0.018857626244425774,
    0.006486793980002403,
    0.01679103635251522,
    -0.003083738498389721,
    -0.01485360972583294,
    0.023837532848119736,
    -0.0287600327283144,
    -0.00458883261308074,
    -0.0034461093600839376,
    -0.021225593984127045,
    -0.008495978079736233,
    -0.019331220537424088,
    0.037313416600227356,
    -0.005457086954265833,
    0.0002300695050507784,
    -0.0006529847742058337,
    0.004341272637248039,
    -0.008043911308050156,
    0.018929382786154747,
    -0.02970721945166588,
    -0.01859930343925953,
    -0.017824331298470497,
    -0.0021006735041737556,
    -0.007799939252436161,
    0.016460957005620003,
    0.0010323976166546345,
    0.0006659906357526779,
    0.020206650719046593,
    0.007412453647702932,
    0.016231335699558258,
    0.01902984268963337,
    -0.010074621997773647,
    -0.00740527780726552,
    0.022603319957852364,
    0.008302235044538975,
    0.01082089077681303,
    -0.005884038750082254,
    0.01293770968914032,
    0.01203357707709074,
    -0.01029706746339798,
    0.006077781319618225,
    0.0017813568701967597,
    -0.027210090309381485,
    0.00865384191274643,
    -0.003770807757973671,
    0.01651836186647415,
    -0.01378443744033575,
    0.004775399807840586,
    0.030281271785497665,
    -0.00565441744402051,
    0.006820461712777615,
    0.008266356773674488,
    -0.003058623755350709,
    -0.008036735467612743,
    -0.010641499422490597,
    0.020737648010253906,
    -0.016489660367369652,
    0.0026262905448675156,
    -0.0015086819184944034,
    -0.019532138481736183,
    0.02624855376780033,
    0.016073470935225487,
    0.007075197529047728,
    -0.003028127131983638,
    -0.010964403860270977,
    0.004832805134356022,
    -0.02040756866335869,
    0.02525831200182438,
    0.0308840274810791,
    0.0033779405057430267,
    -0.010770660825073719,
    -0.02010619081556797,
    -0.016202634200453758,
    -0.02870262786746025,
    -0.0026657565031200647,
    0.010010041296482086,
    0.016719279810786247,
    0.01273679081350565,
    -0.02194315940141678,
    0.01049798633903265,
    -0.0082735326141119,
    -0.02080940455198288,
    0.006120835430920124,
    -0.026506876572966576,
    -0.018929382786154747,
    -0.01636049710214138,
    0.011488227173686028,
    0.019359922036528587,
    0.013935125432908535,
    -0.016618821769952774,
    -0.021082080900669098,
    -0.02139780856668949,
    -0.014997122809290886,
    -0.026851307600736618,
    -0.013963828794658184,
    -0.00876147672533989,
    0.0007893222500570118,
    0.03981054574251175,
    0.03191732242703438,
    -0.010483634658157825,
    0.014530705288052559,
    0.01746554858982563,
    0.010684553533792496,
    0.005137770436704159,
    -0.013777261599898338,
    0.029420193284749985,
    -0.019991381093859673,
    -0.015973012894392014,
    0.003058623755350709,
    0.011897238902747631,
    -0.005223878193646669,
    -0.0221871305257082,
    -0.022861642763018608,
    0.021555673331022263,
    0.01107921451330185,
    0.01389207225292921,
    -0.028071170672774315,
    -0.029391489923000336,
    -0.010031568817794323,
    0.016231335699558258,
    -0.017881738021969795,
    0.0031016776338219643,
    -0.021196890622377396,
    -0.007121839560568333,
    0.042164161801338196,
    0.008998273871839046,
    0.027353603392839432,
    0.026664741337299347,
    -0.0007673468207940459,
    -0.0008014311897568405,
    0.026750849559903145,
    -0.0006278699729591608,
    0.02894660085439682,
    -0.020464973524212837,
    -0.003706226823851466,
    -0.055510882288217545,
    0.0007691407226957381,
    0.012930533848702908,
    -0.03369688615202904,
    -0.014136044308543205,
    -0.013361073099076748,
    0.00948621891438961,
    0.0018889916827902198,
    0.01651836186647415,
    -0.00012557399168144912,
    -0.009443164803087711,
    0.008754301816225052,
    -0.011179673485457897,
    -0.013526113703846931,
    -0.030654406175017357,
    0.008158721961081028,
    -0.012313427403569221,
    0.021354755386710167,
    0.010921349748969078,
    -0.0034963388461619616,
    0.020680243149399757,
    -0.02237369865179062,
    0.005564721766859293,
    -0.007448331918567419,
    -0.013985355384647846,
    0.03849022462964058,
    0.03361077606678009,
    0.05970146507024765,
    0.04549366608262062,
    -0.0071684811264276505,
    0.001957160420715809,
    -0.020608486607670784,
    -0.0035088963340967894,
    0.012909007258713245,
    0.015370257198810577,
    0.02479907125234604,
    0.01237083226442337,
    -0.008876287378370762,
    0.0038569155149161816,
    -0.012815723195672035,
    -0.02078070305287838,
    -0.009766069240868092,
    0.021110782399773598,
    0.009579502046108246,
    0.01098593045026064,
    -0.046670474112033844,
    -0.014925366267561913,
    0.008517504669725895,
    0.01008179783821106,
    -0.01816876418888569,
    -0.005471438635140657,
    0.004628298804163933,
    -0.025861067697405815,
    -0.011552807874977589,
    0.02142651192843914,
    0.015040176920592785,
    0.0015221362700685859,
    0.006325341761112213,
    0.009658434428274632,
    0.02256026491522789,
    -0.02093856781721115,
    0.003114235121756792,
    0.003537598764523864,
    0.003116029081866145,
    0.015255446545779705,
    -0.006454503629356623,
    -0.0029707220382988453,
    0.011789604090154171,
    -0.017580360174179077,
    -0.03053959645330906,
    -0.02372272126376629,
    -0.02560274489223957,
    0.04253729432821274,
    -0.04612512141466141,
    -0.01295206043869257,
    -0.03131456673145294,
    -0.004423792473971844,
    -0.005475026089698076,
    -0.00596297113224864,
    -0.0330941304564476,
    -0.006648246198892593,
    0.010878295637667179,
    0.009206367656588554,
    0.010828066617250443,
    -0.007599020842462778,
    -0.01795349456369877,
    -0.035591259598731995,
    0.007333521265536547,
    0.0031285863369703293,
    -0.005012196488678455,
    -0.0027339253574609756,
    -0.006981914397329092,
    -0.018312277272343636,
    0.003609355539083481,
    -0.02953500486910343,
    0.0038712669629603624,
    0.0034927509259432554,
    -0.00982347410172224,
    -0.01725027896463871,
    -0.013877720572054386,
    0.03716990351676941,
    -0.024885177612304688,
    0.03803098201751709,
    -0.026535579934716225,
    0.011638915166258812,
    0.004452494904398918,
    -0.015599878504872322,
    -0.00028097181348130107,
    0.007699479814618826,
    0.0221584290266037,
    -0.0013328782515600324,
    -0.026018932461738586,
    -0.02725314535200596,
    -0.015198041684925556,
    0.039064276963472366,
    0.005008608568459749,
    -0.025789311155676842,
    -0.015384608879685402,
    0.009687136858701706,
    0.008259180933237076,
    -0.02035016380250454,
    -0.02581801451742649,
    0.01930251717567444,
    -0.021928807720541954,
    0.002750070532783866,
    0.003435345832258463,
    -0.01765211671590805,
    0.004237225279211998,
    0.012435413897037506,
    -0.00337973446585238,
    0.013719855807721615,
    -0.020235352218151093,
    -0.009098732843995094,
    0.0025545337703078985,
    0.0031052655540406704,
    0.0014548643957823515,
    0.01973305642604828,
    -0.010433405637741089,
    -0.0031052655540406704,
    -0.02557404153048992,
    0.020551081746816635,
    -0.009766069240868092,
    -0.001259327749721706,
    -0.0005709131946787238,
    0.02010619081556797,
    0.01002439297735691,
    0.04070032760500908,
    0.02581801451742649,
    0.02317737229168415,
    0.008775828406214714,
    -0.007692304439842701,
    -0.017078064382076263,
    -0.020436270162463188,
    -0.002210102276876569,
    0.03254878148436546,
    0.02026405557990074,
    -0.005866099614650011,
    -0.010426229797303677,
    -0.016805388033390045,
    -0.026836957782506943,
    -0.03137197345495224,
    -0.0018800221150740981,
    0.02007748745381832,
    0.045407555997371674,
    -0.00015080091543495655,
    -0.011531280353665352,
    0.012334953993558884,
    -0.0013391569955274463,
    0.03628012165427208,
    -0.020579783245921135,
    0.0070106168277561665,
    0.039064276963472366,
    0.019316868856549263,
    -0.005489377770572901,
    0.024052802473306656,
    -0.020235352218151093,
    -0.01776692643761635,
    0.007089549209922552,
    -0.010763484984636307,
    0.010397527366876602,
    0.030396083369851112,
    0.009945460595190525,
    -0.02347875013947487,
    0.02004878595471382,
    -0.02824338525533676,
    -0.0165757667273283,
    0.027425359934568405,
    -0.0046103596687316895,
    -0.03005165047943592,
    -0.029262328520417213,
    -0.0004139457014389336,
    0.0006431182264350355,
    0.009816298261284828,
    -0.010627147741615772,
    -0.003422788344323635,
    -0.012177090160548687,
    0.005209526978433132,
    0.008510328829288483,
    -0.01918770745396614,
    0.028185980394482613,
    -0.0143800163641572,
    0.021440863609313965,
    0.014006881974637508,
    0.03539033979177475,
    0.02563144639134407,
    0.024052802473306656,
    -0.005266932304948568,
    -0.023794477805495262,
    0.00014934336650185287,
    -0.021010324358940125,
    -0.017853034660220146,
    -0.012995114549994469,
    -0.020680243149399757,
    0.02614809386432171,
    -0.023033859208226204,
    0.03840411454439163,
    0.013217560015618801,
    0.002520449459552765,
    -0.02277553454041481,
    -0.013770085759460926,
    -0.01390642300248146,
    0.00692092115059495,
    0.03048219159245491,
    -0.022086672484874725,
    0.01247846707701683,
    0.0017185697797685862,
    -0.007814290001988411,
    0.004359211772680283,
    -0.02212972566485405,
    -0.013361073099076748,
    -0.01722157746553421,
    0.006171064916998148,
    0.006023963913321495,
    -0.0016620615497231483,
    -0.01989092119038105,
    0.007563142571598291,
    0.0028218270745128393,
    -0.00859643705189228,
    -0.012980763800442219,
    0.20241093635559082,
    0.007943452335894108,
    -0.0001871276763267815,
    -0.007050083018839359,
    0.006544199306517839,
    0.03395520895719528,
    0.01237083226442337,
    0.018427086994051933,
    0.002669344423338771,
    0.0398966521024704,
    0.0034550789278000593,
    -0.01252152118831873,
    0.009801947511732578,
    0.0008615273400209844,
    -0.032405268400907516,
    0.007455507759004831,
    -0.01900113932788372,
    -0.04830652102828026,
    -0.018642356619238853,
    0.015083231031894684,
    0.01679103635251522,
    -0.024598151445388794,
    0.00030496541876345873,
    -0.017609061673283577,
    0.006698475684970617,
    -0.009687136858701706,
    0.0006745117716491222,
    -0.006694887764751911,
    0.021039025858044624,
    0.0022997979540377855,
    -0.02317737229168415,
    0.0031877856235951185,
    -0.015642931684851646,
    0.0020199473947286606,
    -0.03969573602080345,
    0.0035842405632138252,
    0.026994820684194565,
    -0.019661299884319305,
    0.021742241457104683,
    0.011567158624529839,
    -0.011732199229300022,
    -0.025975877419114113,
    -0.008840409107506275,
    -0.015413311310112476,
    0.005342276766896248,
    0.008739950135350227,
    -0.007634899113327265,
    0.00917766522616148,
    -0.007398102432489395,
    0.029047058895230293,
    -0.026664741337299347,
    -0.046211231499910355,
    0.0028505297377705574,
    -0.016130877658724785,
    -0.007398102432489395,
    -0.020952917635440826,
    0.02072329632937908,
    0.0166331734508276,
    0.015786444768309593,
    -0.003688287688419223,
    -0.0031824037432670593,
    0.01676233485341072,
    -0.03582087904214859,
    0.00833093747496605,
    -0.041791025549173355,
    0.016747983172535896,
    -0.03662455454468727,
    0.005970146507024765,
    0.03883465379476547,
    0.013978179544210434,
    -0.008194600231945515,
    -0.024856476113200188,
    -0.021010324358940125,
    -0.012019225396215916,
    0.007200771942734718,
    -0.02517220377922058,
    0.04913889989256859,
    0.01003874372690916,
    0.042278971523046494,
    0.01884327456355095,
    -0.0009929315419867635,
    -0.010813714936375618,
    0.016776686534285545,
    -0.007792763411998749,
    0.013074046932160854,
    -0.013927950523793697,
    0.022215833887457848,
    -0.008933693170547485,
    -0.007907574065029621,
    -0.018441438674926758,
    -0.01125143002718687,
    -0.020364513620734215,
    0.009988514706492424,
    -0.009034152142703533,
    -0.008015208877623081,
    0.0046713524498045444,
    0.011050512082874775,
    0.017020657658576965,
    0.02350745163857937,
    -0.020464973524212837,
    -0.01483925897628069,
    0.005625715013593435,
    0.0018746403511613607,
    -0.015671635046601295,
    0.012751142494380474,
    0.014265205711126328,
    -0.0198335163295269,
    0.010957228019833565,
    0.018915031105279922,
    -0.027023524045944214,
    -0.002454074565321207,
    -0.02393799088895321,
    0.012471292167901993,
    -0.021311700344085693,
    0.0030388906598091125,
    0.022474156692624092,
    -0.001476391451433301,
    -0.022603319957852364,
    0.0043663871474564075,
    -0.0034837813582271338,
    0.02210102416574955,
    -0.019991381093859673,
    0.022632021456956863,
    -0.0031447317451238632,
    0.0029294618871062994,
    -0.04460388422012329,
    -0.04738803952932358,
    0.01776692643761635,
    -0.012119684368371964,
    -0.010232486762106419,
    0.01028271671384573,
    0.0021670483984053135,
    0.01719287410378456,
    0.006041903048753738,
    -0.007179244887083769,
    -0.020450621843338013,
    0.0011768077965825796,
    -0.036107905209064484,
    0.007835817523300648,
    0.002184987533837557,
    -0.01908724755048752,
    0.024870827794075012,
    -0.009457515552639961,
    0.0004785266355611384,
    0.00991675816476345,
    -0.042250268161296844,
    0.014738799072802067,
    -0.0045134881511330605,
    -0.006999853532761335,
    -0.02633466012775898,
    -0.004197759088128805,
    -0.017178522422909737,
    0.018671059980988503,
    -0.026865659281611443,
    0.015040176920592785,
    -0.02123994380235672,
    -0.043599292635917664,
    -0.021656133234500885,
    0.03091273084282875,
    0.006092132534831762,
    -0.024225017055869102,
    0.014609637670218945,
    -0.007706655655056238,
    0.007294055074453354,
    -0.02013489417731762,
    0.002574266865849495,
    -0.18277832865715027,
    0.008495978079736233,
    0.030424784868955612,
    -0.03280710428953171,
    0.034328341484069824,
    0.0008848481811583042,
    0.025530986487865448,
    -0.0037098147440701723,
    -0.006831225473433733,
    -0.0032505725976079702,
    0.0009651258587837219,
    -0.005338688846677542,
    -0.0041116513311862946,
    0.007634899113327265,
    -0.009507745504379272,
    0.002574266865849495,
    -0.019144652411341667,
    -0.012485642917454243,
    0.027210090309381485,
    -0.004380738362669945,
    0.03013775870203972,
    -0.02964981459081173,
    -0.0002883717243093997,
    0.007835817523300648,
    0.005033723544329405,
    -0.0067128269001841545,
    0.013447181321680546,
    -0.004710818640887737,
    -0.0022728892508894205,
    -0.02654993161559105,
    -0.021871402859687805,
    0.009048503823578358,
    0.01501147449016571,
    0.005241817329078913,
    0.013267789967358112,
    0.02811422385275364,
    0.025961527600884438,
    -0.020464973524212837,
    -0.012385183945298195,
    0.00843857228755951,
    0.009292475879192352,
    0.000670923909638077,
    0.01082089077681303,
    -0.027726737782359123,
    -0.031601592898368835,
    0.00865384191274643,
    0.01638920046389103,
    -0.02471296302974224,
    0.012392359785735607,
    -0.02581801451742649,
    0.03699768707156181,
    -0.022359346970915794,
    -0.009816298261284828,
    0.016231335699558258,
    0.02474166452884674,
    0.009034152142703533,
    0.016216984018683434,
    -0.006271524354815483,
    0.01611652597784996,
    -0.016647523269057274,
    -0.0022872406989336014,
    -0.033438559621572495,
    0.011100741103291512,
    0.013303668238222599,
    -0.011703496798872948,
    -0.023952342569828033,
    -0.022761184722185135,
    0.04058551415801048,
    0.01544201374053955,
    0.005048074759542942,
    -0.010210960172116756,
    0.0032146943267434835,
    0.011409294791519642,
    -0.004524251911789179,
    0.022861642763018608,
    0.015140635892748833,
    0.00016537646297365427,
    0.013217560015618801,
    0.029506301507353783,
    -0.0019176943460479379,
    -0.03883465379476547,
    0.04905278980731964,
    -0.0030370966996997595,
    -0.0038318007718771696,
    0.007085961289703846,
    -0.015671635046601295,
    -0.006938860286027193,
    0.01364092342555523,
    -0.022732481360435486,
    -0.00975889340043068,
    0.003917908761650324,
    0.004983493592590094,
    -0.024813421070575714,
    -0.017781278118491173,
    0.013791612349450588,
    0.005797930993139744,
    -0.0018692585872486234,
    -0.0154994186013937,
    -0.004007604438811541,
    -0.03409872204065323,
    -0.007103900425136089,
    0.015800796449184418,
    -0.009536447934806347,
    0.006493969354778528,
    0.018340978771448135,
    0.03447185456752777,
    -0.03151548653841019,
    0.01905854418873787,
    0.02296210266649723,
    0.011961820535361767,
    -0.003544774604961276,
    -0.026105040684342384,
    0.028716979548335075,
    0.039092980325222015,
    -0.03435704484581947,
    0.037428226321935654,
    0.0308840274810791,
    0.0018961672903969884,
    0.004323333501815796,
    -0.004674940370023251,
    0.014128868468105793,
    -0.020149243995547295,
    -0.008725598454475403,
    0.0005305501399561763,
    -0.021570025011897087,
    -0.020364513620734215,
    -0.10556826740503311,
    -0.046670474112033844,
    -0.01459528598934412,
    0.0027285434771329165,
    0.007828641682863235,
    -0.010074621997773647,
    -0.003257748205214739,
    0.004402265418320894,
    -0.010828066617250443,
    0.002376936376094818,
    0.0034676361829042435,
    0.00896239560097456,
    -0.027855901047587395,
    -0.0007189111202023923,
    0.0046103596687316895,
    -0.02059413492679596,
    -0.0017930172616615891,
    -0.007003440987318754,
    -0.008460099808871746,
    0.02953500486910343,
    0.0021401396952569485,
    0.00012288312427699566,
    -0.005593424662947655,
    0.0008902299450710416,
    -0.03243396803736687,
    0.0006592634599655867,
    -0.04247988760471344,
    0.026808254420757294,
    -0.004230049904435873,
    0.008582085371017456,
    -0.02713833376765251,
    -0.008402694016695023,
    -0.014882312156260014,
    -0.007649250328540802,
    -0.008539032191038132,
    0.01679103635251522,
    -0.021627429872751236,
    -0.03151548653841019,
    0.043484482914209366,
    -0.04012627527117729,
    -0.0033205351792275906,
    0.022043617442250252,
    -0.0034801936708390713,
    0.007347872480750084,
    0.004445319529622793,
    -0.015183690004050732,
    -0.006533435545861721,
    0.040040165185928345,
    0.0042085228487849236,
    -0.011373416520655155,
    -0.017235927283763885,
    0.012435413897037506,
    -0.008890639059245586,
    0.0035250415094196796,
    0.020278407260775566,
    -0.025947175920009613,
    -0.0022621259558945894,
    -0.005762052722275257,
    -0.002925874199718237,
    -0.021900104358792305,
    -0.02581801451742649,
    -0.0008539031841792166,
    0.005754876881837845,
    0.030826622620224953,
    -0.005170060787349939,
    0.01679103635251522,
    -0.013662450946867466,
    0.028200332075357437,
    0.010419053956866264,
    -0.0013535083271563053,
    -0.016891496255993843,
    0.023550506681203842,
    -0.023923641070723534,
    0.005866099614650011,
    -0.04601031169295311,
    0.00016122804663609713,
    0.02258896827697754,
    -0.0035322171170264482,
    0.008553382940590382,
    0.001786738634109497,
    0.0020558256655931473,
    -0.000898751022759825,
    -0.029391489923000336,
    -0.011653266847133636,
    0.004269516095519066,
    0.017207225784659386,
    0.00774970930069685,
    0.01633179560303688,
    0.027741089463233948,
    -0.03237656503915787,
    0.0019374273251742125,
    0.00706084631383419,
    0.01989092119038105,
    -0.002882820088416338,
    -0.024210667237639427,
    0.015829499810934067,
    -0.0014728035312145948,
    0.016446605324745178,
    0.00410447595641017,
    0.01900113932788372,
    -0.04371410235762596,
    -0.028874844312667847,
    -0.0665326938033104,
    0.022230185568332672,
    0.01915900409221649,
    -0.011897238902747631,
    -0.006260760594159365,
    -0.012270373292267323,
    0.012708088383078575,
    -0.017781278118491173,
    0.010469283908605576,
    -0.0010341915767639875,
    -0.0330941304564476,
    -0.01765211671590805,
    -0.031199757009744644,
    -0.010763484984636307,
    0.013698329217731953,
    -0.0166331734508276,
    0.03010905720293522,
    -0.029204923659563065,
    0.03843281790614128,
    -0.0031590829603374004,
    -0.01700630784034729,
    0.00843857228755951,
    0.020091839134693146,
    0.005360215902328491,
    -0.030683109536767006,
    0.007301230914890766,
    0.0015607053646817803,
    0.02436853013932705,
    0.014372840523719788,
    -0.030281271785497665,
    0.03447185456752777,
    0.009055678732693195,
    -0.004423792473971844,
    0.0015786445001140237,
    0.016834091395139694,
    0.015370257198810577,
    0.009249421767890453,
    0.021412160247564316,
    0.012708088383078575,
    0.013727031648159027,
    0.003770807757973671,
    -0.01362657267600298,
    0.024913880974054337,
    -0.019819164648652077,
    -0.01120120007544756,
    -0.004021955654025078,
    0.0008512123022228479,
    0.010411878116428852,
    0.012779844924807549,
    0.012442588806152344,
    0.010096149519085884,
    0.0032990083564072847,
    -0.043570589274168015,
    -0.0036846997682005167,
    0.010663026012480259,
    -0.015040176920592785,
    0.017049361020326614,
    0.0028469418175518513,
    -0.01679103635251522,
    0.01008179783821106,
    0.044948313385248184,
    0.04448907449841499,
    0.013239086605608463,
    0.011581510305404663,
    0.015212392434477806,
    -0.03415612876415253,
    -0.055195152759552,
    -0.012421062216162682,
    -0.010117676109075546,
    0.029477598145604134,
    -0.005234641954302788,
    -0.03280710428953171,
    0.036107905209064484,
    0.025186555460095406,
    0.00025204496341757476,
    -0.017149820923805237,
    -0.0025312129873782396,
    -0.003501720493659377,
    -0.03949481621384621,
    0.02811422385275364,
    0.03527553007006645,
    -0.02415326051414013,
    -0.045838095247745514,
    0.002238804940134287,
    0.025100447237491608,
    0.014351313933730125,
    -0.012026401236653328,
    0.001772387302480638,
    -0.0012656064936891198,
    0.001201025559566915,
    0.0025078922044485807,
    -0.016475308686494827,
    0.003008394269272685,
    -0.008036735467612743,
    -0.012169914320111275,
    0.005446323659271002,
    0.012808547355234623,
    -0.01730768382549286,
    0.008029560558497906,
    0.016016066074371338,
    0.014358489774167538,
    -0.007756885141134262,
    0.01374855823814869,
    -0.02520090714097023,
    -0.012177090160548687,
    0.013102749362587929,
    -0.015700336545705795,
    -0.029391489923000336,
    -0.006558550521731377,
    0.025947175920009613,
    0.017996547743678093,
    0.00025092376745305955,
    0.007563142571598291,
    0.00646885484457016,
    -0.03596439212560654,
    0.015154987573623657,
    -0.0007390926475636661,
    -0.01743684709072113,
    -0.016446605324745178,
    0.015614229254424572,
    -0.007251001428812742,
    0.0023051798343658447,
    0.04293913021683693,
    -0.025502284988760948,
    0.004775399807840586,
    -0.0037779833655804396,
    0.03771525248885155,
    -0.03719860687851906,
    -0.011430821381509304,
    0.004829217214137316,
    0.003090914338827133,
    0.015384608879685402,
    -0.01894373446702957,
    -0.01614522747695446,
    -0.010397527366876602,
    -0.019819164648652077,
    -0.005241817329078913,
    0.008101317100226879,
    -0.022675076499581337,
    0.06567161530256271,
    0.017422495409846306,
    -0.03094143234193325,
    0.010490810498595238,
    -0.00805826298892498,
    0.015470716170966625,
    0.013404127210378647,
    -0.01006744708865881,
    -0.0039071450009942055,
    -0.025330068543553352,
    -0.007433980703353882,
    0.0034263762645423412,
    -0.012492818757891655,
    -0.009471867233514786,
    -0.010698904283344746,
    0.0032182822469621897,
    0.00021291519806254655,
    -0.0021903691813349724,
    0.001575953676365316,
    0.01039035152643919,
    0.04417334496974945,
    0.0028397662099450827,
    -0.0010431611444801092,
    0.00017187940829899162,
    -0.03008035384118557,
    -0.002158078830689192,
    0.02169918641448021,
    0.012944885529577732,
    -0.0018477316480129957,
    -0.04331226646900177,
    0.04603901505470276,
    -0.011825482361018658,
    -0.0020827343687415123,
    0.0019015490543097258,
    0.0046103596687316895,
    -0.0032380151096731424,
    -0.020981620997190475,
    -0.0166618749499321,
    0.01811135746538639,
    0.012543048709630966,
    -0.00751291261985898,
    0.0210246741771698,
    -0.010447756387293339,
    -0.014968420378863811,
    -0.013145803473889828,
    -0.012421062216162682,
    0.021168187260627747,
    0.0021419336553663015,
    -0.03636622801423073
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.7",
    "topic :: software development :: libraries :: python modules",
    "topic :: text processing"
  ],
  "description": "parsedatetime\n=============\n\nparse human-readable date/time strings.\n\npython 2.6 or greater is required for parsedatetime version 1.0 or greater.\n\nwhile we still test with python 2.6 we cannot guarantee that future changes will not break under 2.6\n\n.. image:: https://img.shields.io/pypi/v/parsedatetime.svg\n    :target: https://pypi.python.org/pypi/parsedatetime/\n    :alt: downloads\n\n.. image:: https://travis-ci.org/bear/parsedatetime.svg?branch=master\n    :target: https://travis-ci.org/bear/parsedatetime\n    :alt: travis ci\n\n.. image:: http://codecov.io/github/bear/parsedatetime/coverage.svg?branch=master\n    :target: http://codecov.io/github/bear/parsedatetime\n    :alt: codecov\n\n.. image:: https://requires.io/github/bear/parsedatetime/requirements.svg?branch=master\n     :target: https://requires.io/github/bear/parsedatetime/requirements/?branch=master\n     :alt: requirements status\n\n.. image:: https://dependencyci.com/github/bear/parsedatetime/badge\n     :target: https://dependencyci.com/github/bear/parsedatetime\n     :alt: dependency status\n\n==========\ninstalling\n==========\n\nyou can install parsedatetime using::\n\n    pip install parsedatetime\n\n=============\nrunning tests\n=============\n\nfrom the source directory::\n\n    make test\n\nto run tests on several python versions, type ``make tox``::\n\n  $ make tox\n  [... tox creates a virtualenv for every python version and runs tests inside of each]\n  py27: commands succeeded\n  py35: commands succeeded\n\nthis assumes that you have the versions you want to test under installed as part of your\npyenv environment::\n\n    pyenv install -s 2.6.9\n    pyenv install -s 2.7.11\n    pyenv install -s 3.5.2\n    pyenv install -s pypy-5.3\n    pyenv global 2.7.11 3.5.2 2.6.9 pypy-5.3\n\nthe tests depend on pyicu being installed using the `pyicu-binary` package which removes the source build step. pyicu depends on icu4c which on macos requires homebrew::\n\n    brew install icu4c\n\nthe makefile contains the macos default values for them so you may need to tweak them.\n\n===================\nusing parsedatetime\n===================\n\nan example of how to use parsedatetime:\n\n\n.. code:: python\n\n    import parsedatetime\n\n    cal = parsedatetime.calendar()\n\n    cal.parse(\"tomorrow\")\n\nto get it to a python ``datetime`` object:\n\n\n.. code:: python\n\n    from datetime import datetime\n\n    time_struct, parse_status = cal.parse(\"tomorrow\")\n\n    datetime(*time_struct[:6])\n\nparse datetime with timezone support (using pytz package):\n\n.. code:: python\n\n    import parsedatetime\n    import pytz\n    from pytz import timezone\n\n    cal = parsedatetime.calendar()\n\n    datetime_obj, _ = cal.parsedt(datetimestring=\"tomorrow\", tzinfo=timezone(\"us/pacific\"))\n\nmore detailed examples can be found in the examples directory.\n\n=============\ndocumentation\n=============\n\nthe generated documentation is included by default in the docs directory and can also be viewed online at https://bear.im/code/parsedatetime/docs/index.html\n\nthe docs can be generated by running::\n\n    make docs\n\n=====\nnotes\n=====\n\nthe ``calendar`` class has a member property named ``ptc`` which is created during the class init method to be an instance\nof ``parsedatetime_consts.calendarconstants()``.\n\n=======\nhistory\n=======\n\nthe code in parsedatetime has been implemented over the years in many different languages (c, clipper, delphi) as part of different custom/proprietary systems i've worked on.  sadly the previous code is not \"open\" in any sense of that word.\n\nwhen i went to work for open source applications foundation and realized that the chandler project could benefit from my experience with parsing of date/time text i decided to start from scratch and implement the code using python and make it truly open.\n\nafter working on the initial concept and creating something that could be shown to the chandler folks, the code has now evolved to its current state with the help of the chandler folks, most especially darshana.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "parsedatetime",
  "package_url": "https://pypi.org/project/parsedatetime/",
  "project_url": "https://pypi.org/project/parsedatetime/",
  "project_urls": {
    "Download": "https://pypi.python.org/pypi/parsedatetime",
    "Homepage": "https://github.com/bear/parsedatetime"
  },
  "release_url": "https://pypi.org/project/parsedatetime/2.6/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "parse human-readable date/time text.",
  "version": "2.6",
  "releases": [],
  "developers": [
    "bear@bear.im",
    "mike_taylor"
  ],
  "kwds": "parsedatetime_consts parsedatetime time_struct datetime datetimestring",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_parsedatetime",
  "homepage": "https://github.com/bear/parsedatetime",
  "release_count": 17,
  "dependency_ids": []
}
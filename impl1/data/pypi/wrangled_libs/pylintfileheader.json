{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# pylint-file-header\n\n[![pypi](https://img.shields.io/pypi/v/pylintfileheader.svg?style=flat-square)](https://pypi.python.org/pypi/pylintfileheader) [![pypi - python version](https://img.shields.io/pypi/pyversions/pylintfileheader.svg?style=flat-square)](https://pypi.python.org/pypi/pylintfileheader) [![pypi - downloads](https://img.shields.io/pypi/dm/pylintfileheader.svg?style=flat-square)](https://pypistats.org/packages/pylintfileheader) [![stars](https://img.shields.io/github/stars/haaleo/pylint-file-header.svg?label=stars&logo=github&style=flat-square)](https://github.com/haaleo/pylint-file-header/stargazers)  \n[![pypi - license](https://img.shields.io/pypi/l/pylintfileheader.svg?style=flat-square)](https://raw.githubusercontent.com/haaleo/pylint-file-header/master/license.txt) [![build status](https://img.shields.io/travis/haaleo/pylint-file-header/master.svg?style=flat-square)](https://travis-ci.org/haaleo/pylint-file-header) [![codecov](https://img.shields.io/codecov/c/github/haaleo/pylint-file-header.svg?style=flat-square)](https://codecov.io/gh/haaleo/pylint-file-header) [![prs welcome](https://img.shields.io/badge/prs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)  \n[![donate](https://img.shields.io/badge/-donate-blue.svg?logo=paypal&style=flat-square)](https://www.paypal.me/leohanisch)\n\npylint plugin to enforce consistent file/module header.\n\n## installation\n\nyou can install the package with `pip` from [pypi](https://pypi.org/project/pylintfileheader):\n\n```\npip install pylintfileheader\n```\n\n## configuration\n\ngenerate a `.pylintrc` file by executing `pylint --generate-rcfile`.\nthen add `pylintfileheader` to the plugins to load and set the `file-header` option to the [regular expression](https://docs.python.org/3/library/re.html#regular-expression-syntax) that the file header should match.  \nwhen the `file-header` setting is omitted, pylint will pass.\n\n### options\n\n* `file-header` is a regexp representing the file header that should be on top of a file.\n* `file-header-path` is the path to the file that contains the header. this is useful in case of long, multi-line headers, such as copyrights.\n* `file-header-ignore-empty-files` turns on the mode of ignoring the empty files, like `__init__.py`. the default value is `false`.\n\nif both options `file-header` and `file-header-path` are set, then `file-header` will be used and the `file-header-path` is ignored.\n\n## example\n\n### setup\n\n* **.pylintrc**:  \n\n  ```pylintrc\n  [master]\n  load-plugins=pylintfileheader\n\n  file-header=# -----------\\n#[ \\w]*\\n# -----------\n  ```\n\n* **valid_example.py**:  \n\n  ```python\n  # -----------\n  # lorem ipsum\n  # -----------\n\n  print('i am a valid example')\n  ```\n\n* **invalid_example.py**:  \n\n  ```python\n  # lorem ipsum\n\n  print('i am an invalid example')\n  ```\n\n### evaluation\n\n* `pylint valid_example.py` evaluates to:  \n  ```\n  using config file /path/to/your/.pylintrc\n\n  ------------------------------------\n  your code has been rated at 10.00/10\n  ```\n\n* `pylint invalid_example.py` evaluates to:  \n  ```\n  using config file /path/to/your/.pylintrc\n  ************* module invalid_example\n  c:  1, 0: file header should match regex \"# -----------\\n#[ \\w]*\\n# -----------\" (invalid-file-header)\n\n  -----------------------------------\n  your code has been rated at 8.57/10\n  ```\n\n## contribution\n\nif you found a bug or are missing a feature do not hesitate to [file an issue](https://github.com/haaleo/pylint-file-header/issues/new/choose).  \npull requests are welcome!\n\n## support\n\nwhen you like this package make sure to [star the repository](https://github.com/haaleo/pylint-file-header/stargazers). i am always looking for new ideas and feedback.  \nin addition, it is possible to [donate via paypal](https://www.paypal.me/leohanisch).\n",
  "docs_url": null,
  "keywords": "pylintfileheader,pylint,file,module,header",
  "license": "mit",
  "name": "pylintfileheader",
  "package_url": "https://pypi.org/project/pylintfileheader/",
  "project_url": "https://pypi.org/project/pylintfileheader/",
  "project_urls": {
    "Changelog": "https://github.com/HaaLeo/pylint-file-header/blob/master/CHANGELOG.md#changelog",
    "Funding": "https://github.com/sponsors/HaaLeo",
    "Issue Tracker": "https://github.com/HaaLeo/pylint-file-header/issues",
    "Source": "https://github.com/HaaLeo/pylint-file-header"
  },
  "release_url": "https://pypi.org/project/pylintfileheader/1.0.0/",
  "requires_dist": [
    "pylint <4.0,>=3.0"
  ],
  "requires_python": ">=3.8",
  "summary": "enables pylint to force a consistent file header.",
  "version": "1.0.0",
  "releases": [],
  "developers": [
    "leo_hanisch"
  ],
  "kwds": "pylintfileheader pylint pylintrc pypi pypistats",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pylintfileheader",
  "homepage": "",
  "release_count": 8,
  "dependency_ids": [
    "pypi_pylint"
  ]
}
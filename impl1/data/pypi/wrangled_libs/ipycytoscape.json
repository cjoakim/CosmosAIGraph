{
  "classifiers": [
    "framework :: jupyter",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# ipycytoscape\n\n[![tests](https://github.com/cytoscape/ipycytoscape/actions/workflows/test.yml/badge.svg)](https://github.com/cytoscape/ipycytoscape/actions/workflows/test.yml) [![documentation status](https://readthedocs.org/projects/ipycytoscape/badge/?version=master)](https://ipycytoscape.readthedocs.io/en/latest/?badge=master) [![stackoverflow](https://img.shields.io/badge/stackoverflow--orange.svg)](https://stackoverflow.com/questions/tagged/ipycytoscape) [![join the chat at https://gitter.im/quantstack/lobby](https://badges.gitter.im/join%20chat.svg)](https://gitter.im/quantstack/lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\na widget enabling interactive graph visualization with [cytoscape.js](https://js.cytoscape.org/) in jupyterlab and the jupyter notebook.\n\ntry it out using binder: [![binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/cytoscape/ipycytoscape/head?filepath=examples) or install and try out the [examples](examples).\n\n![cytoscape screencast](https://user-images.githubusercontent.com/17600982/76328068-bbbbcf00-62e2-11ea-93ed-01ba392ac50c.gif)\n\n#### supports:\n\n* conversion from networkx see [example1](https://github.com/cytoscape/ipycytoscape/blob/master/examples/test%20networkx%20methods.ipynb), [example2](https://github.com/cytoscape/ipycytoscape/blob/master/examples/networkx%20example.ipynb)\n* conversion from pandas dataframe see [example](https://github.com/cytoscape/ipycytoscape/blob/master/examples/pandas.ipynb)\n* conversion from neo4j see [example](https://github.com/cytoscape/ipycytoscape/blob/master/examples/neo4j_example.ipynb)\n\n## installation\n\nwith `mamba`:\n\n```\nmamba install -c conda-forge ipycytoscape\n```\n\nwith `conda`:\n\n```\nconda install -c conda-forge ipycytoscape\n```\n\nwith `pip`:\n\n```bash\npip install ipycytoscape\n```\n\n### pandas installation\n\nyou can install the pandas dependencies for `ipycytoscape` with pip:\n\n```\npip install pandas\n```\n\nor conda-forge:\n\n```\nmamba install pandas\n```\n\n### neo4j installation\n\nyou can install the neo4j dependencies for `ipycytoscape` with pip:\n\n```\npip install -e \".[neo4j]\"\n```\n\nor conda-forge:\n```\nmamba install py2neo neotime\n```\n\n#### for jupyterlab 1.x or 2.x:\n\nif you are using jupyterlab 1.x or 2.x then you will also need to install `nodejs` and the `jupyterlab-manager` extension. you can do this like so:\n\n```bash\n# installing nodejs\nconda install -c conda-forge nodejs\n\n\n# install jupyterlab-manager extension\njupyter labextension install @jupyter-widgets/jupyterlab-manager@2.0 --no-build\n\n# if you have previously installed the manager you still to run jupyter lab build\njupyter lab build\n```\n\n### for jupyter notebook 5.2 and earlier\n\nyou may also need to manually enable the nbextension:\n```bash\njupyter nbextension enable --py [--sys-prefix|--user|--system] ipycytoscape\n```\n\n## for a development installation:\n**(requires npm)**\n\nwhile not required, we recommend creating a conda environment to work in:\n```bash\nconda create -n ipycytoscape -c conda-forge jupyterlab nodejs\nconda activate ipycytoscape\n\n# clone repo\ngit clone https://github.com/cytoscape/ipycytoscape.git\ncd ipycytoscape\n```\n\n### install python package for development\n\nthis will `run npm install` and `npm run build`. \nthis command will also install the test suite and the [docs](https://ipycytoscape.readthedocs.io/en/latest/) locally:\n\n```\npip install jupyter_packaging==0.7.9\npip install -e \".[test, docs]\"\n\njupyter labextension develop . --overwrite\n```\n\noptionally install the pre-commit hooks with:\n\n```bash\npre-commit install\n```\n\n\nor for classic notebook, you can run:\n\n```\njupyter nbextension install --sys-prefix --symlink --overwrite --py ipycytoscape\njupyter nbextension enable --sys-prefix --py ipycytoscape\n```\n\nnote that the `--symlink` flag doesn't work on windows, so you will here have to run\nthe `install` command every time that you rebuild your extension. for certain installations\nyou might also need another flag instead of `--sys-prefix`, but we won't cover the meaning\nof those flags here.\n\n### how to see your changes\n\n#### typescript: \nto continuously monitor the project for changes and automatically trigger a rebuild, start watching the ipycytoscape code:\n```bash\nnpm run watch\n```\nand in a separate terminal start jupyterlab normally:\n```bash\njupyter lab\n```\nonce the webpack rebuild finishes refresh the jupyterlab page to have your changes take effect.\n\n#### python:\nif you make a change to the python code then you need to restart the notebook kernel to have it take effect.\n\n### how to run tests locally\n\ninstall necessary dependencies with pip:\n\n```\npip install -e \".[test]\"\n```\n\nor with conda/mamba:\n\n```\nmamba -c conda-forge install networkx pandas nbval pytest\n```\n\n#### and to run it:\n\n```\npytest\n```\n\n### how to build the docs\n\n`cd docs`\n\ninstall dependencies:\n\n`conda env update --file doc_environment.yml`\n\nand build them: \n\n`make html`\n\n## acknowledgements\n\nthe ipycytoscape project was started by [mariana meireles](https://github.com/marimeireles) at [quantstack](https://quantstack.net). this initial development was funded as part of the [plasma](https://plasmabio.org) project, which is led by claire vandiedonck, pierre poulain, and sandrine caburet.\n\n## license\n\nwe use a shared copyright model that enables all contributors to maintain the\ncopyright on their contributions.\n\nthis software is licensed under the bsd-3-clause license. see the\n[license](license) file for details.\n\n\n",
  "docs_url": null,
  "keywords": "jupyter,widgets,ipython",
  "license": "bsd",
  "name": "ipycytoscape",
  "package_url": "https://pypi.org/project/ipycytoscape/",
  "project_url": "https://pypi.org/project/ipycytoscape/",
  "project_urls": {
    "Homepage": "https://github.com/cytoscape/ipycytoscape"
  },
  "release_url": "https://pypi.org/project/ipycytoscape/1.3.3/",
  "requires_dist": [
    "ipywidgets (>=7.6.0)",
    "spectate (>=1.0.0)",
    "sphinx ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "sphinx-autobuild (>=2020.9.1) ; extra == 'docs'",
    "jupyter-sphinx (>=0.3.1) ; extra == 'docs'",
    "sphinx-copybutton ; extra == 'docs'",
    "nbsphinx ; extra == 'docs'",
    "nbsphinx-link ; extra == 'docs'",
    "networkx ; extra == 'docs'",
    "pandas ; extra == 'docs'",
    "pandas ; extra == 'examples'",
    "py2neo ; extra == 'examples'",
    "monotonic ; extra == 'examples'",
    "py2neo ; extra == 'neo4j'",
    "monotonic ; extra == 'neo4j'",
    "pytest (>4.6) ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "nbval ; extra == 'test'",
    "pandas ; extra == 'test'",
    "nbclassic (>=0.2.8) ; extra == 'test'",
    "networkx ; extra == 'test'",
    "pre-commit ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "a cytoscape widget for jupyter",
  "version": "1.3.3",
  "releases": [],
  "developers": [
    "mariana.meireles@quantstack.net",
    "mariana_meireles"
  ],
  "kwds": "ipycytoscape ipython widget badge ipynb",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_ipycytoscape",
  "homepage": "https://github.com/cytoscape/ipycytoscape",
  "release_count": 22,
  "dependency_ids": [
    "pypi_ipywidgets",
    "pypi_jupyter_sphinx",
    "pypi_monotonic",
    "pypi_nbclassic",
    "pypi_nbsphinx",
    "pypi_nbsphinx_link",
    "pypi_nbval",
    "pypi_networkx",
    "pypi_pandas",
    "pypi_pre_commit",
    "pypi_py2neo",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_spectate",
    "pypi_sphinx",
    "pypi_sphinx_autobuild",
    "pypi_sphinx_copybutton",
    "pypi_sphinx_rtd_theme"
  ]
}
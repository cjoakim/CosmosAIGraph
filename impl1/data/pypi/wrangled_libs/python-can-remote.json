{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "topic :: scientific/engineering"
  ],
  "description": "can over network bridge for python\n==================================\n\ncreates a can over tcp/ip bridge for use with python-can_.\n\n\ninstallation\n------------\n\ninstall using pip::\n\n    $ pip install python-can-remote\n\n\nusage\n-----\n\nstart server from command line::\n\n    $ python -m can_remote --interface=virtual --channel=0 --bitrate=500000\n\n\ncreate python-can bus:\n\n.. code-block:: python\n\n    import can\n\n    # create a connection to server. any config is passed to server.\n    bus = can.bus('ws://localhost:54701/',\n                  bustype='remote',\n                  bitrate=500000,\n                  receive_own_messages=true)\n\n    # send messages\n    msg = can.message(arbitration_id=0x12345, data=[1,2,3,4,5,6,7,8])\n    bus.send(msg)\n\n    # receive messages\n    msg2 = bus.recv(1)\n    print(msg2)\n\n    # disconnect\n    bus.shutdown()\n\n\nweb interface\n-------------\n\nthere is also a basic web interface for inspecting the can traffic\nusing a browser.\nit is available on the same address using http, e.g. http://localhost:54701/.\n\n\n.. _python-can: https://python-can.readthedocs.org/en/stable/",
  "docs_url": null,
  "keywords": "can tcp websocket",
  "license": "mit",
  "name": "python-can-remote",
  "package_url": "https://pypi.org/project/python-can-remote/",
  "project_url": "https://pypi.org/project/python-can-remote/",
  "project_urls": {
    "Homepage": "https://github.com/christiansandberg/python-can-remote"
  },
  "release_url": "https://pypi.org/project/python-can-remote/0.2.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "can over network bridge for python",
  "version": "0.2.1",
  "releases": [],
  "developers": [
    "christian_sandberg",
    "christiansandberg@me.com"
  ],
  "kwds": "can_remote websocket tcp receive_own_messages pip",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_python_can_remote",
  "homepage": "https://github.com/christiansandberg/python-can-remote",
  "release_count": 7,
  "dependency_ids": []
}
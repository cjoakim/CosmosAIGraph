{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": ".. image:: https://github.com/aws/sagemaker-python-sdk/raw/master/branding/icon/sagemaker-banner.png\n    :height: 100px\n    :alt: sagemaker\n\n====================\nsagemaker python sdk\n====================\n\n.. image:: https://img.shields.io/pypi/v/sagemaker.svg\n   :target: https://pypi.python.org/pypi/sagemaker\n   :alt: latest version\n\n.. image:: https://img.shields.io/pypi/pyversions/sagemaker.svg\n   :target: https://pypi.python.org/pypi/sagemaker\n   :alt: supported python versions\n\n.. image:: https://img.shields.io/badge/code_style-black-000000.svg\n   :target: https://github.com/python/black\n   :alt: code style: black\n\n.. image:: https://readthedocs.org/projects/sagemaker/badge/?version=stable\n   :target: https://sagemaker.readthedocs.io/en/stable/\n   :alt: documentation status\n\nsagemaker python sdk is an open source library for training and deploying machine learning models on amazon sagemaker.\n\nwith the sdk, you can train and deploy models using popular deep learning frameworks **apache mxnet** and **tensorflow**.\nyou can also train and deploy models with **amazon algorithms**,\nwhich are scalable implementations of core machine learning algorithms that are optimized for sagemaker and gpu training.\nif you have **your own algorithms** built into sagemaker compatible docker containers, you can train and host models using these as well.\n\nfor detailed documentation, including the api reference, see `read the docs <https://sagemaker.readthedocs.io>`_.\n\ntable of contents\n-----------------\n\n#. `installing sagemaker python sdk <#installing-the-sagemaker-python-sdk>`__\n#. `using the sagemaker python sdk <https://sagemaker.readthedocs.io/en/stable/overview.html>`__\n#. `using mxnet <https://sagemaker.readthedocs.io/en/stable/using_mxnet.html>`__\n#. `using tensorflow <https://sagemaker.readthedocs.io/en/stable/using_tf.html>`__\n#. `using chainer <https://sagemaker.readthedocs.io/en/stable/using_chainer.html>`__\n#. `using pytorch <https://sagemaker.readthedocs.io/en/stable/using_pytorch.html>`__\n#. `using scikit-learn <https://sagemaker.readthedocs.io/en/stable/using_sklearn.html>`__\n#. `using xgboost <https://sagemaker.readthedocs.io/en/stable/using_xgboost.html>`__\n#. `sagemaker reinforcement learning estimators <https://sagemaker.readthedocs.io/en/stable/using_rl.html>`__\n#. `sagemaker sparkml serving <#sagemaker-sparkml-serving>`__\n#. `amazon sagemaker built-in algorithm estimators <src/sagemaker/amazon/readme.rst>`__\n#. `using sagemaker algorithmestimators <https://sagemaker.readthedocs.io/en/stable/overview.html#using-sagemaker-algorithmestimators>`__\n#. `consuming sagemaker model packages <https://sagemaker.readthedocs.io/en/stable/overview.html#consuming-sagemaker-model-packages>`__\n#. `byo docker containers with sagemaker estimators <https://sagemaker.readthedocs.io/en/stable/overview.html#byo-docker-containers-with-sagemaker-estimators>`__\n#. `sagemaker automatic model tuning <https://sagemaker.readthedocs.io/en/stable/overview.html#sagemaker-automatic-model-tuning>`__\n#. `sagemaker batch transform <https://sagemaker.readthedocs.io/en/stable/overview.html#sagemaker-batch-transform>`__\n#. `secure training and inference with vpc <https://sagemaker.readthedocs.io/en/stable/overview.html#secure-training-and-inference-with-vpc>`__\n#. `byo model <https://sagemaker.readthedocs.io/en/stable/overview.html#byo-model>`__\n#. `inference pipelines <https://sagemaker.readthedocs.io/en/stable/overview.html#inference-pipelines>`__\n#. `amazon sagemaker operators in apache airflow <https://sagemaker.readthedocs.io/en/stable/using_workflow.html>`__\n#. `sagemaker autopilot <src/sagemaker/automl/readme.rst>`__\n#. `model monitoring <https://sagemaker.readthedocs.io/en/stable/amazon_sagemaker_model_monitoring.html>`__\n#. `sagemaker debugger <https://sagemaker.readthedocs.io/en/stable/amazon_sagemaker_debugger.html>`__\n#. `sagemaker processing <https://sagemaker.readthedocs.io/en/stable/amazon_sagemaker_processing.html>`__\n\n\ninstalling the sagemaker python sdk\n-----------------------------------\n\nthe sagemaker python sdk is built to pypi and can be installed with pip as follows:\n\n::\n\n    pip install sagemaker\n\nyou can install from source by cloning this repository and running a pip install command in the root directory of the repository:\n\n::\n\n    git clone https://github.com/aws/sagemaker-python-sdk.git\n    cd sagemaker-python-sdk\n    pip install .\n\nsupported operating systems\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nsagemaker python sdk supports unix/linux and mac.\n\nsupported python versions\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nsagemaker python sdk is tested on:\n\n- python 3.8\n- python 3.9\n- python 3.10\n\naws permissions\n~~~~~~~~~~~~~~~\n\nas a managed service, amazon sagemaker performs operations on your behalf on the aws hardware that is managed by amazon sagemaker.\namazon sagemaker can perform only operations that the user permits.\nyou can read more about which permissions are necessary in the `aws documentation <https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html>`__.\n\nthe sagemaker python sdk should not require any additional permissions aside from what is required for using sagemaker.\nhowever, if you are using an iam role with a path in it, you should grant permission for ``iam:getrole``.\n\nlicensing\n~~~~~~~~~\nsagemaker python sdk is licensed under the apache 2.0 license. it is copyright amazon.com, inc. or its affiliates. all rights reserved. the license is available at:\nhttp://aws.amazon.com/apache2.0/\n\nrunning tests\n~~~~~~~~~~~~~\n\nsagemaker python sdk has unit tests and integration tests.\n\nyou can install the libraries needed to run the tests by running :code:`pip install --upgrade .[test]` or, for zsh users: :code:`pip install --upgrade .\\[test\\]`\n\n**unit tests**\n\nwe run unit tests with tox, which is a program that lets you run unit tests for multiple python versions, and also make sure the\ncode fits our style guidelines. we run tox with `all of our supported python versions <#supported-python-versions>`_, so to run unit tests\nwith the same configuration we do, you need to have interpreters for those python versions installed.\n\nto run the unit tests with tox, run:\n\n::\n\n    tox tests/unit\n\n**integration tests**\n\nto run the integration tests, the following prerequisites must be met\n\n1. aws account credentials are available in the environment for the boto3 client to use.\n2. the aws account has an iam role named :code:`sagemakerrole`.\n   it should have the amazonsagemakerfullaccess policy attached as well as a policy with `the necessary permissions to use elastic inference <https://docs.aws.amazon.com/sagemaker/latest/dg/ei-setup.html>`__.\n3. to run remote_function tests, dummy ecr repo should be created. it can be created by running -\n    :code:`aws ecr create-repository --repository-name remote-function-dummy-container`\n\nwe recommend selectively running just those integration tests you'd like to run. you can filter by individual test function names with:\n\n::\n\n    tox -- -k 'test_i_care_about'\n\n\nyou can also run all of the integration tests by running the following command, which runs them in sequence, which may take a while:\n\n::\n\n    tox -- tests/integ\n\n\nyou can also run them in parallel:\n\n::\n\n    tox -- -n auto tests/integ\n\n\ngit hooks\n~~~~~~~~~\n\nto enable all git hooks in the .githooks directory, run these commands in the repository directory:\n\n::\n\n    find .git/hooks -type l -exec rm {} \\;\n    find .githooks -type f -exec ln -sf ../../{} .git/hooks/ \\;\n\nto enable an individual git hook, simply move it from the .githooks/ directory to the .git/hooks/ directory.\n\nbuilding sphinx docs\n~~~~~~~~~~~~~~~~~~~~\n\nsetup a python environment, and install the dependencies listed in ``doc/requirements.txt``:\n\n::\n\n    # conda\n    conda create -n sagemaker python=3.7\n    conda activate sagemaker\n    conda install sphinx=3.1.1 sphinx_rtd_theme=0.5.0\n\n    # pip\n    pip install -r doc/requirements.txt\n\n\nclone/fork the repo, and install your local version:\n\n::\n\n    pip install --upgrade .\n\nthen ``cd`` into the ``sagemaker-python-sdk/doc`` directory and run:\n\n::\n\n    make html\n\nyou can edit the templates for any of the pages in the docs by editing the .rst files in the ``doc`` directory and then running ``make html`` again.\n\npreview the site with a python web server:\n\n::\n\n    cd _build/html\n    python -m http.server 8000\n\nview the website by visiting http://localhost:8000\n\nsagemaker sparkml serving\n-------------------------\n\nwith sagemaker sparkml serving, you can now perform predictions against a sparkml model in sagemaker.\nin order to host a sparkml model in sagemaker, it should be serialized with ``mleap`` library.\n\nfor more information on mleap, see https://github.com/combust/mleap .\n\nsupported major version of spark: 3.3 (mleap version - 0.20.0)\n\nhere is an example on how to create an instance of  ``sparkmlmodel`` class and use ``deploy()`` method to create an\nendpoint which can be used to perform prediction against your trained sparkml model.\n\n.. code:: python\n\n    sparkml_model = sparkmlmodel(model_data='s3://path/to/model.tar.gz', env={'sagemaker_sparkml_schema': schema})\n    model_name = 'sparkml-model'\n    endpoint_name = 'sparkml-endpoint'\n    predictor = sparkml_model.deploy(initial_instance_count=1, instance_type='ml.c4.xlarge', endpoint_name=endpoint_name)\n\nonce the model is deployed, we can invoke the endpoint with a ``csv`` payload like this:\n\n.. code:: python\n\n    payload = 'field_1,field_2,field_3,field_4,field_5'\n    predictor.predict(payload)\n\n\nfor more information about the different ``content-type`` and ``accept`` formats as well as the structure of the\n``schema`` that sagemaker sparkml serving recognizes, please see `sagemaker sparkml serving container`_.\n\n.. _sagemaker sparkml serving container: https://github.com/aws/sagemaker-sparkml-serving-container\n\n\n",
  "docs_url": null,
  "keywords": "ml amazon aws ai tensorflow mxnet",
  "license": "apache license 2.0",
  "name": "sagemaker",
  "package_url": "https://pypi.org/project/sagemaker/",
  "project_url": "https://pypi.org/project/sagemaker/",
  "project_urls": {
    "Homepage": "https://github.com/aws/sagemaker-python-sdk/"
  },
  "release_url": "https://pypi.org/project/sagemaker/2.202.1/",
  "requires_dist": [
    "attrs <24,>=23.1.0",
    "boto3 <2.0,>=1.33.3",
    "cloudpickle ==2.2.1",
    "google-pasta",
    "numpy <2.0,>=1.9.0",
    "protobuf <5.0,>=3.12",
    "smdebug-rulesconfig ==1.0.1",
    "importlib-metadata <7.0,>=1.4.0",
    "packaging >=20.0",
    "pandas",
    "pathos",
    "schema",
    "PyYAML ~=6.0",
    "jsonschema",
    "platformdirs",
    "tblib <3,>=1.7.0",
    "urllib3 <1.27",
    "uvicorn ==0.22.0",
    "fastapi ==0.95.2",
    "requests",
    "docker",
    "tqdm",
    "psutil",
    "urllib3 <3.0.0,>=1.26.8 ; extra == 'all'",
    "docker <7.0.0,>=5.0.2 ; extra == 'all'",
    "PyYAML <7,>=5.4.1 ; extra == 'all'",
    "scipy ==1.10.1 ; extra == 'all'",
    "pyspark ==3.3.1 ; extra == 'all'",
    "sagemaker-feature-store-pyspark-3.3 ; extra == 'all'",
    "pyspark ==3.3.1 ; extra == 'feature-processor'",
    "sagemaker-feature-store-pyspark-3.3 ; extra == 'feature-processor'",
    "urllib3 <3.0.0,>=1.26.8 ; extra == 'local'",
    "docker <7.0.0,>=5.0.2 ; extra == 'local'",
    "PyYAML <7,>=5.4.1 ; extra == 'local'",
    "scipy ==1.10.1 ; extra == 'scipy'",
    "tox ==3.24.5 ; extra == 'test'",
    "flake8 ==4.0.1 ; extra == 'test'",
    "pytest ==6.2.5 ; extra == 'test'",
    "pytest-cov ==3.0.0 ; extra == 'test'",
    "pytest-rerunfailures ==10.2 ; extra == 'test'",
    "pytest-timeout ==2.1.0 ; extra == 'test'",
    "pytest-xdist ==2.4.0 ; extra == 'test'",
    "coverage <6.2,>=5.2 ; extra == 'test'",
    "mock ==4.0.3 ; extra == 'test'",
    "contextlib2 ==21.6.0 ; extra == 'test'",
    "awslogs ==0.14.0 ; extra == 'test'",
    "black ==22.3.0 ; extra == 'test'",
    "stopit ==1.1.2 ; extra == 'test'",
    "apache-airflow ==2.7.3 ; extra == 'test'",
    "apache-airflow-providers-amazon ==7.2.1 ; extra == 'test'",
    "attrs <24,>=23.1.0 ; extra == 'test'",
    "fabric ==2.6.0 ; extra == 'test'",
    "requests ==2.31.0 ; extra == 'test'",
    "sagemaker-experiments ==0.1.35 ; extra == 'test'",
    "Jinja2 ==3.0.3 ; extra == 'test'",
    "pyvis ==0.2.1 ; extra == 'test'",
    "pandas <1.5,>=1.3.5 ; extra == 'test'",
    "scikit-learn ==1.3.0 ; extra == 'test'",
    "cloudpickle ==2.2.1 ; extra == 'test'",
    "scipy ==1.10.1 ; extra == 'test'",
    "urllib3 <3.0.0,>=1.26.8 ; extra == 'test'",
    "docker <7.0.0,>=5.0.2 ; extra == 'test'",
    "PyYAML ==6.0 ; extra == 'test'",
    "pyspark ==3.3.1 ; extra == 'test'",
    "sagemaker-feature-store-pyspark-3.3 ; extra == 'test'",
    "xgboost <=1.7.6,>=1.6.2 ; extra == 'test'",
    "pillow <=11,>=10.0.1 ; extra == 'test'",
    "tritonclient[http] <2.37.0 ; extra == 'test'",
    "onnx ==1.14.1 ; extra == 'test'",
    "nbformat <6,>=5.9 ; extra == 'test'"
  ],
  "requires_python": ">= 3.8",
  "summary": "open source library for training and deploying models on amazon sagemaker.",
  "version": "2.202.1",
  "releases": [],
  "developers": [
    "amazon_web_services"
  ],
  "kwds": "sagemaker amazon_sagemaker_model_monitoring amazon_sagemaker_debugger amazon_sagemaker_processing _sagemaker",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_sagemaker",
  "homepage": "https://github.com/aws/sagemaker-python-sdk/",
  "release_count": 557,
  "dependency_ids": [
    "pypi_apache_airflow",
    "pypi_apache_airflow_providers_amazon",
    "pypi_attrs",
    "pypi_awslogs",
    "pypi_black",
    "pypi_boto3",
    "pypi_cloudpickle",
    "pypi_contextlib2",
    "pypi_coverage",
    "pypi_docker",
    "pypi_fabric",
    "pypi_fastapi",
    "pypi_flake8",
    "pypi_google_pasta",
    "pypi_importlib_metadata",
    "pypi_jinja2",
    "pypi_jsonschema",
    "pypi_mock",
    "pypi_nbformat",
    "pypi_numpy",
    "pypi_onnx",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_pathos",
    "pypi_pillow",
    "pypi_platformdirs",
    "pypi_protobuf",
    "pypi_psutil",
    "pypi_pyspark",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_rerunfailures",
    "pypi_pytest_timeout",
    "pypi_pytest_xdist",
    "pypi_pyvis",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_sagemaker_experiments",
    "pypi_sagemaker_feature_store_pyspark_3.3",
    "pypi_schema",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_smdebug_rulesconfig",
    "pypi_stopit",
    "pypi_tblib",
    "pypi_tox",
    "pypi_tqdm",
    "pypi_tritonclient",
    "pypi_urllib3",
    "pypi_uvicorn",
    "pypi_xgboost"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: gnu general public license v2 (gplv2)",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "topic :: system :: monitoring",
    "topic :: system :: networking :: monitoring",
    "topic :: system :: systems administration"
  ],
  "description": "|build status| |coverage| |pypi status| |pypi version|\n\nzabbix module for python\n========================\n\ninstall\n-------\n\nyou can install zabbix modules for python with pip:\n\n::\n\n    pip install py-zabbix\n\nofficial documentation for `py-zabbix <https://py-zabbix.readthedocs.org/en/latest/>`__\n--------------------------------------------------------------------------------------\n\nexamples\n--------\n\nzabbixapi\n~~~~~~~~~\n\n.. code:: python\n\n    from pyzabbix.api import zabbixapi\n\n    # create zabbixapi class instance\n    zapi = zabbixapi(url='https://localhost/zabbix/', user='admin', password='zabbix')\n\n    # get all monitored hosts\n    result1 = zapi.host.get(monitored_hosts=1, output='extend')\n\n    # get all disabled hosts\n    result2 = zapi.do_request('host.get',\n                              {\n                                  'filter': {'status': 1},\n                                  'output': 'extend'\n                              })\n\n    # filter results\n    hostnames1 = [host['host'] for host in result1]\n    hostnames2 = [host['host'] for host in result2['result']]\n\n    # logout from zabbix\n    zapi.user.logout()\n\nor use 'with' statement to logout automatically:\n\n.. code:: python\n\n    from pyzabbix.api import zabbixapi\n\n    # create zabbixapi class instance\n    with zabbixapi(url='https://localhost/zabbix/', user='admin', password='zabbix') as zapi:\n\n        # get all monitored hosts\n        result1 = zapi.host.get(monitored_hosts=1, output='extend')\n\nenable logging:\n\n.. code:: python\n\n    import sys\n    import logging\n    from pyzabbix.api import zabbixapi\n\n    # create zabbixapi class instance\n    logger = logging.getlogger(\"pyzabbix\")\n    logger.setlevel(logging.debug)\n    handler = logging.streamhandler(sys.stdout)\n    logger.addhandler(handler)\n\n    zapi = zabbixapi(url='http://localhost', user='admin', password='zabbix')\n\nnote that passwords and auth tokens are hidden when raw messages are logged or raised in exceptions ( but not hidden if print() is used):\n\n.. code:: python\n\n    zabbixapi.login(admin,********)\n    call user.login method\n    urllib2.request(http://localhost/api_jsonrpc.php, {\"jsonrpc\": \"2.0\", \"method\": \"user.login\", \"params\": {\"user\": \"admin\", \"password\": \"********\"}, \"id\": \"1\"})\n    response body: {\n        \"jsonrpc\": \"2.0\",\n        \"result\": \"********\",\n        \"id\": \"1\"\n    }\n\n\nzabbixsender\n~~~~~~~~~~~~\n\n.. code:: python\n\n    from pyzabbix import zabbixmetric, zabbixsender\n\n    # send metrics to zabbix trapper\n    packet = [\n      zabbixmetric('hostname1', 'test[cpu_usage]', 2),\n      zabbixmetric('hostname1', 'test[system_status]', \"ok\"),\n      zabbixmetric('hostname1', 'test[disk_io]', '0.1'),\n      zabbixmetric('hostname1', 'test[cpu_usage]', 20, 1411598020),\n    ]\n\n    result = zabbixsender(use_config=true).send(packet)\n\n.. |build status| image:: https://travis-ci.org/adubkov/py-zabbix.svg?branch=master\n   :target: https://travis-ci.org/adubkov/py-zabbix\n.. |coverage| image:: https://coveralls.io/repos/github/adubkov/py-zabbix/badge.svg?branch=master\n   :target: https://coveralls.io/github/adubkov/py-zabbix?branch=master\n.. |pypi status| image:: https://img.shields.io/pypi/status/py-zabbix.svg\n   :target: https://pypi.python.org/pypi/py-zabbix/\n.. |pypi version| image:: https://img.shields.io/pypi/v/py-zabbix.svg\n   :target: https://pypi.python.org/pypi/py-zabbix/\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "py-zabbix",
  "package_url": "https://pypi.org/project/py-zabbix/",
  "project_url": "https://pypi.org/project/py-zabbix/",
  "project_urls": {
    "Homepage": "https://github.com/blacked/py-zabbix"
  },
  "release_url": "https://pypi.org/project/py-zabbix/1.1.7/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python module to work with zabbix.",
  "version": "1.1.7",
  "releases": [],
  "developers": [
    "alexey.dubkov@gmail.com",
    "alexey_dubkov"
  ],
  "kwds": "zabbixapi zabbix zabbixmetric zabbixsender pyzabbix",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_py_zabbix",
  "homepage": "https://github.com/blacked/py-zabbix",
  "release_count": 16,
  "dependency_ids": []
}
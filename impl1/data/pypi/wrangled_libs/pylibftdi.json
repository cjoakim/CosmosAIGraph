{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: software development :: embedded systems",
    "topic :: system :: hardware"
  ],
  "description": "pylibftdi\n=========\n\npylibftdi is a minimal pythonic interface to ftdi devices using libftdi_.\n\n.. _libftdi: http://www.intra2net.com/en/developer/libftdi/\n\n:features:\n\n - no dependencies beyond standard library and a `libftdi` install.\n - supports parallel and serial devices\n - support for multiple devices\n - file-like interface wherever appropriate\n - cross-platform\n\n:limitations:\n\n - the api might change prior to reaching a 1.0 release.\n\nusage\n-----\n\nthe primary interface is the ``device`` class in the pylibftdi package; this\ngives serial access on relevant ftdi devices (e.g. the um232r), providing a\nfile-like interface (read, write).  baudrate is controlled with the ``baudrate``\nproperty.\n\nif a device instance is created with ``mode='t'`` (text mode) then read() and\nwrite() can use the given ``encoding`` (defaulting to latin-1). this allows\neasier integration with passing unicode strings between devices.\n\nmultiple devices are supported by passing the desired device serial number (as\na string) in the ``device_id`` parameter - this is the first parameter in both\ndevice() and bitbangdevice() constructors. alternatively the device 'description'\ncan be given, and an attempt will be made to match this if matching by serial\nnumber fails.\n\nexamples\n~~~~~~~~\n\n::\n\n    >>> from pylibftdi import device\n    >>>\n    >>> with device(mode='t') as dev:\n    ...     dev.baudrate = 115200\n    ...     dev.write('hello world')\n\nthe pylibftdi.bitbangdevice wrapper provides access to the parallel io mode of\noperation through the ``port`` and ``direction`` properties.  these provide an\n8 bit io port including all the relevant bit operations to make things simple.\n\n::\n\n    >>> from pylibftdi import bitbangdevice\n    >>>\n    >>> with bitbangdevice('fte00p4l') as bb:\n    ...     bb.direction = 0x0f  # four lsb are output(1), four msb are input(0)\n    ...     bb.port |= 2         # set bit 1\n    ...     bb.port &= 0xfe      # clear bit 0\n\nthere is support for a number of external devices and protocols, including\ninterfacing with hd44780 lcds using the 4-bit interface.\n\nhistory & motivation\n--------------------\nthis package is the result of various bits of work using ftdi's\ndevices, primarily for controlling external devices.  some of this\nis documented on the codedstructure blog, codedstructure.blogspot.com\n\nseveral other open-source python ftdi wrappers exist, and each may be\nbest for some projects. some aim at closely wrapping the libftdi interface,\nothers use ftdi's own d2xx driver (ftd2xx_) or talk directly to usb via\nlibusb or similar (such as pyftdi_).\n\n.. _ftd2xx: http://pypi.python.org/pypi/ftd2xx\n.. _pyftdi: https://github.com/eblot/pyftdi\n\nthe aim for pylibftdi is to work with libftdi, but to provide\na high-level pythonic interface.  various wrappers and utility\nfunctions are also part of the distribution; following python's\nbatteries included approach, there are various interesting devices\nsupported out-of-the-box - or at least there will be soon!\n\nplans\n-----\n * add more examples: spi devices, knight-rider effects, input devices, midi...\n * perhaps add support for d2xx driver, though the name then becomes a\n   slight liability ;)\n\nlicense\n-------\n\ncopyright (c) 2010-2023 ben bass <benbass@codedstructure.net>\n\npylibftdi is released under the mit licence; see the file \"license.txt\"\nfor information.\n\nall trademarks referenced herein are property of their respective\nholders.\nlibftdi itself is developed by intra2net ag.  no association with\nintra2net is claimed or implied, but i have found their library\nhelpful and had fun with it...\n\n",
  "docs_url": null,
  "keywords": "ftdi,libftdi,usb",
  "license": "mit",
  "name": "pylibftdi",
  "package_url": "https://pypi.org/project/pylibftdi/",
  "project_url": "https://pypi.org/project/pylibftdi/",
  "project_urls": {
    "Documentation": "https://pylibftdi.readthedocs.io/en/latest/",
    "Homepage": "https://github.com/codedstructure/pylibftdi",
    "Repository": "https://github.com/codedstructure/pylibftdi"
  },
  "release_url": "https://pypi.org/project/pylibftdi/0.21.0/",
  "requires_dist": [],
  "requires_python": ">=3.7.0",
  "summary": "pythonic interface to ftdi devices using libftdi.",
  "version": "0.21.0",
  "releases": [],
  "developers": [
    "ben_bass",
    "benbass@codedstructure.net"
  ],
  "kwds": "ftdi pyftdi pyftdi_ usb _pyftdi",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pylibftdi",
  "homepage": "https://github.com/codedstructure/pylibftdi",
  "release_count": 30,
  "dependency_ids": []
}
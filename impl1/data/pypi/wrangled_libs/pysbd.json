{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: scientific/engineering :: information analysis",
    "topic :: software development",
    "topic :: software development :: libraries",
    "topic :: text processing",
    "topic :: text processing :: linguistic"
  ],
  "description": "\n![pysbd logo](artifacts/pysbd_logo.png?raw=true \"pysbd logo\")\n# pysbd: python sentence boundary disambiguation (sbd)\n\n![python package](https://github.com/nipunsadvilkar/pysbd/workflows/python%20package/badge.svg) [![codecov](https://codecov.io/gh/nipunsadvilkar/pysbd/branch/master/graph/badge.svg)](https://codecov.io/gh/nipunsadvilkar/pysbd) [![license](https://img.shields.io/badge/license-mit-brightgreen.svg?style=flat)](https://github.com/nipunsadvilkar/pysbd/blob/master/license) [![pypi](https://img.shields.io/pypi/v/pysbd?color=blue&logo=pypi&logocolor=white)](https://pypi.python.org/pypi/pysbd) [![github](https://img.shields.io/github/v/release/nipunsadvilkar/pysbd.svg?include_prereleases&logo=github&style=flat)](https://github.com/nipunsadvilkar/pysbd)\n\npysbd - python sentence boundary disambiguation (sbd) - is a rule-based sentence boundary detection module that works out-of-the-box.\n\nthis project is a direct port of ruby gem - [pragmatic segmenter](https://github.com/diasks2/pragmatic_segmenter) which provides rule-based sentence boundary detection.\n\n![pysbd_code](artifacts/pysbd_code.png?raw=true \"pysbd_code\")\n\n## highlights\n**'pysbd: pragmatic sentence boundary disambiguation'** a short research paper got accepted into 2nd workshop for natural language processing open source software (nlp-oss) at emnlp 2020. </br>\n\n**research paper:**</br>\n\nhttps://arxiv.org/abs/2010.09657</br>\n\n**[recorded talk:](https://slideslive.com/38939754)**</br>\n\n[![pysbd_talk](artifacts/pysbd_talk.png)](https://slideslive.com/38939754)</br>\n\n**poster:**</br>\n\n[![name](artifacts/pysbd_poster.png)](artifacts/pysbd_poster.png)\n\n## install\n\n**python**\n\n    pip install pysbd\n\n## usage\n\n-   currently pysbd supports only english language. support for more languages will be released soon.\n\n```python\nimport pysbd\ntext = \"my name is jonas e. smith. please turn to p. 55.\"\nseg = pysbd.segmenter(language=\"en\", clean=false)\nprint(seg.segment(text))\n# ['my name is jonas e. smith.', 'please turn to p.\u00a055.']\n```\n\n-   use `pysbd` as a [spacy](https://spacy.io/usage/processing-pipelines) pipeline component. (recommended)</br>please refer to example [pysbd\\_as\\_spacy\\_component.py](https://github.com/nipunsadvilkar/pysbd/blob/master/examples/pysbd_as_spacy_component.py)\n- use pysbd through [entrypoints](https://spacy.io/usage/saving-loading#entry-points-components)\n\n```python\nimport spacy\nfrom pysbd.utils import pysbdfactory\n\nnlp = spacy.blank('en')\n\n# explicitly adding component to pipeline\n# (recommended - makes it more readable to tell what's going on)\nnlp.add_pipe(pysbdfactory(nlp))\n\n# or you can use it implicitly with keyword\n# pysbd = nlp.create_pipe('pysbd')\n# nlp.add_pipe(pysbd)\n\ndoc = nlp('my name is jonas e. smith. please turn to p. 55.')\nprint(list(doc.sents))\n# [my name is jonas e. smith., please turn to p. 55.]\n\n```\n\n## contributing\n\nif you want to contribute new feature/language support or found a text that is incorrectly segmented using pysbd, then please head to [contributing.md](https://github.com/nipunsadvilkar/pysbd/blob/master/contributing.md) to know more and follow these steps.\n\n1.  fork it ( https://github.com/nipunsadvilkar/pysbd/fork )\n2.  create your feature branch (`git checkout -b my-new-feature`)\n3.  commit your changes (`git commit -am 'add some feature'`)\n4.  push to the branch (`git push origin my-new-feature`)\n5.  create a new pull request\n\n## citation\nif you use `pysbd` package in your projects or research, please cite [pysbd: pragmatic sentence boundary disambiguation](https://www.aclweb.org/anthology/2020.nlposs-1.15).\n```\n@inproceedings{sadvilkar-neumann-2020-pysbd,\n    title = \"{p}y{sbd}: pragmatic sentence boundary disambiguation\",\n    author = \"sadvilkar, nipun  and\n      neumann, mark\",\n    booktitle = \"proceedings of second workshop for nlp open source software (nlp-oss)\",\n    month = nov,\n    year = \"2020\",\n    address = \"online\",\n    publisher = \"association for computational linguistics\",\n    url = \"https://www.aclweb.org/anthology/2020.nlposs-1.15\",\n    pages = \"110--114\",\n    abstract = \"we present a rule-based sentence boundary disambiguation python package that works out-of-the-box for 22 languages. we aim to provide a realistic segmenter which can provide logical sentences even when the format and domain of the input text is unknown. in our work, we adapt the golden rules set (a language specific set of sentence boundary exemplars) originally implemented as a ruby gem pragmatic segmenter which we ported to python with additional improvements and functionality. pysbd passes 97.92{\\%} of the golden rule set examplars for english, an improvement of 25{\\%} over the next best open source python tool.\",\n}\n```\n\n## credit\n\nthis project wouldn't be possible without the great work done by [pragmatic segmenter](https://github.com/diasks2/pragmatic_segmenter) team.\n\n\n",
  "docs_url": null,
  "keywords": "natural-language-processing nlp",
  "license": "mit",
  "name": "pysbd",
  "package_url": "https://pypi.org/project/pysbd/",
  "project_url": "https://pypi.org/project/pysbd/",
  "project_urls": {
    "Homepage": "http://nipunsadvilkar.github.io/"
  },
  "release_url": "https://pypi.org/project/pysbd/0.3.4/",
  "requires_dist": [],
  "requires_python": ">=3",
  "summary": "pysbd (python sentence boundary disambiguation) is a rule-based sentence boundary detection that works out-of-the-box across many languages.",
  "version": "0.3.4",
  "releases": [],
  "developers": [
    "nipun_sadvilkar",
    "nipunsadvilkar@gmail.com"
  ],
  "kwds": "pysbd_logo pysbd pysbd_code pysbd_talk pysbd_poster",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pysbd",
  "homepage": "http://nipunsadvilkar.github.io/",
  "release_count": 15,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: posix",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: internationalization",
    "topic :: software development :: libraries",
    "topic :: software development :: localization",
    "topic :: terminals"
  ],
  "description": "|pypi_downloads| |codecov| |license|\n\n============\nintroduction\n============\n\nthis library is mainly for cli programs that carefully produce output for\nterminals, or make pretend to be an emulator.\n\n**problem statement**: the printable length of *most* strings are equal to the\nnumber of cells they occupy on the screen ``1 character : 1 cell``.  however,\nthere are categories of characters that *occupy 2 cells* (full-wide), and\nothers that *occupy 0* cells (zero-width).\n\n**solution**: posix.1-2001 and posix.1-2008 conforming systems provide\n`wcwidth(3)`_ and `wcswidth(3)`_ c functions of which this python module's\nfunctions precisely copy.  *these functions return the number of cells a\nunicode string is expected to occupy.*\n\ninstallation\n------------\n\nthe stable version of this package is maintained on pypi, install using pip::\n\n    pip install wcwidth\n\nexample\n-------\n\n**problem**: given the following phrase (japanese),\n\n   >>>  text = u'\u30b3\u30f3\u30cb\u30c1\u30cf'\n\npython **incorrectly** uses the *string length* of 5 codepoints rather than the\n*printible length* of 10 cells, so that when using the `rjust` function, the\noutput length is wrong::\n\n    >>> print(len('\u30b3\u30f3\u30cb\u30c1\u30cf'))\n    5\n\n    >>> print('\u30b3\u30f3\u30cb\u30c1\u30cf'.rjust(20, '_'))\n    _______________\u30b3\u30f3\u30cb\u30c1\u30cf\n\nby defining our own \"rjust\" function that uses wcwidth, we can correct this::\n\n   >>> def wc_rjust(text, length, padding=' '):\n   ...    from wcwidth import wcswidth\n   ...    return padding * max(0, (length - wcswidth(text))) + text\n   ...\n\nour **solution** uses wcswidth to determine the string length correctly::\n\n   >>> from wcwidth import wcswidth\n   >>> print(wcswidth('\u30b3\u30f3\u30cb\u30c1\u30cf'))\n   10\n\n   >>> print(wc_rjust('\u30b3\u30f3\u30cb\u30c1\u30cf', 20, '_'))\n   __________\u30b3\u30f3\u30cb\u30c1\u30cf\n\n\nchoosing a version\n------------------\n\nexport an environment variable, ``unicode_version``. this should be done by\n*terminal emulators* or those developers experimenting with authoring one of\ntheir own, from shell::\n\n   $ export unicode_version=13.0\n\nif unspecified, the latest version is used. if your terminal emulator does not\nexport this variable, you can use the `jquast/ucs-detect`_ utility to\nautomatically detect and export it to your shell.\n\nwcwidth, wcswidth\n-----------------\nuse function ``wcwidth()`` to determine the length of a *single unicode\ncharacter*, and ``wcswidth()`` to determine the length of many, a *string\nof unicode characters*.\n\nbriefly, return values of function ``wcwidth()`` are:\n\n``-1``\n  indeterminate (not printable).\n\n``0``\n  does not advance the cursor, such as null or combining.\n\n``2``\n  characters of category east asian wide (w) or east asian\n  full-width (f) which are displayed using two terminal cells.\n\n``1``\n  all others.\n\nfunction ``wcswidth()`` simply returns the sum of all values for each character\nalong a string, or ``-1`` when it occurs anywhere along a string.\n\nfull api documentation at https://wcwidth.readthedocs.org\n\n==========\ndeveloping\n==========\n\ninstall wcwidth in editable mode::\n\n   pip install -e .\n\nexecute unit tests using tox_::\n\n   tox -e py27,py35,py36,py37,py38,py39,py310,py311,py312\n\nupdating unicode version\n------------------------\n\nregenerate python code tables from latest unicode specification data files::\n\n   tox -e update\n\nthe script is located at ``bin/update-tables.py``, requires python 3.9 or\nlater. it is recommended but not necessary to run this script with the newest\npython, because the newest python has the latest ``unicodedata`` for generating\ncomments.\n\nbuilding documentation\n----------------------\n\nthis project is using `sphinx`_ 4.5 to build documentation::\n\n   tox -e sphinx\n\nthe output will be in ``docs/_build/html/``.\n\nupdating requirements\n---------------------\n\nthis project is using `pip-tools`_ to manage requirements.\n\nto upgrade requirements for updating unicode version, run::\n\n   tox -e update_requirements_update\n\nto upgrade requirements for testing, run::\n\n   tox -e update_requirements37,update_requirements39\n\nto upgrade requirements for building documentation, run::\n\n   tox -e update_requirements_docs\n\nutilities\n---------\n\nsupplementary tools for browsing and testing terminals for wide unicode\ncharacters are found in the `bin/`_ of this project's source code.  just ensure\nto first ``pip install -r requirements-develop.txt`` from this projects main\nfolder. for example, an interactive browser for testing::\n\n  python ./bin/wcwidth-browser.py\n\n====\nuses\n====\n\nthis library is used in:\n\n- `jquast/blessed`_: a thin, practical wrapper around terminal capabilities in\n  python.\n\n- `prompt-toolkit/python-prompt-toolkit`_: a library for building powerful\n  interactive command lines in python.\n\n- `dbcli/pgcli`_: postgres cli with autocompletion and syntax highlighting.\n\n- `thomasballinger/curtsies`_: a curses-like terminal wrapper with a display\n  based on compositing 2d arrays of text.\n\n- `selectel/pyte`_: simple vtxxx-compatible linux terminal emulator.\n\n- `astanin/python-tabulate`_: pretty-print tabular data in python, a library\n  and a command-line utility.\n\n- `rspeer/python-ftfy`_: fixes mojibake and other glitches in unicode\n  text.\n\n- `nbedos/termtosvg`_: terminal recorder that renders sessions as svg\n  animations.\n\n- `peterbrittain/asciimatics`_: package to help people create full-screen text\n  uis.\n\n- `python-cmd2/cmd2`_: a tool for building interactive command line apps\n\n- `stratis-storage/stratis-cli`_: cli for the stratis project\n\n- `ihabunek/toot`_: a mastodon cli/tui client\n\n- `saulpw/visidata`_: terminal spreadsheet multitool for discovering and\n  arranging data\n\n===============\nother languages\n===============\n\n- `timoxley/wcwidth`_: javascript\n- `janlelis/unicode-display_width`_: ruby\n- `alecrabbit/php-wcwidth`_: php\n- `text::charwidth`_: perl\n- `bluebear94/terminal-wcwidth`_: perl 6\n- `mattn/go-runewidth`_: go\n- `grepsuzette/wcwidth`_: haxe\n- `aperezdc/lua-wcwidth`_: lua\n- `joachimschmidt557/zig-wcwidth`_: zig\n- `fumiyas/wcwidth-cjk`_: `ld_preload` override\n- `joshuarubin/wcwidth9`_: unicode version 9 in c\n\n=======\nhistory\n=======\n0.2.12 *2023-11-21*\n  * re-release to remove .pyi file misplaced in wheel files `issue #101`.\n\n0.2.11 *2023-11-20*\n  * include tests files in the source distribution (`pr #98`_, `pr #100`_).\n\n0.2.10 *2023-11-13*\n  * **bugfix** accounting of some kinds of emoji sequences using u+fe0f\n    variation selector 16 (`pr #97`_).\n  * **updated** `specification <specification_from_pypi_>`_.\n\n0.2.9 *2023-10-30*\n  * **bugfix** zero-width characters used in emoji zwj sequences, balinese,\n    jamo, devanagari, tamil, kannada and others (`pr #91`_).\n  * **updated** to include `specification <specification_from_pypi_>`_ of\n    character measurements.\n\n0.2.8 *2023-09-30*\n  * include requirements files in the source distribution (`pr #82`_).\n\n0.2.7 *2023-09-28*\n  * **updated** tables to include unicode specification 15.1.0.\n  * include ``bin``, ``docs``, and ``tox.ini`` in the source distribution\n\n0.2.6 *2023-01-14*\n  * **updated** tables to include unicode specification 14.0.0 and 15.0.0.\n  * **changed** developer tools to use pip-compile, and to use jinja2 templates\n    for code generation in `bin/update-tables.py` to prepare for possible\n    compiler optimization release.\n\n0.2.1 .. 0.2.5 *2020-06-23*\n  * **repository** changes to update tests and packaging issues, and\n    begin tagging repository with matching release versions.\n\n0.2.0 *2020-06-01*\n  * **enhancement**: unicode version may be selected by exporting the\n    environment variable ``unicode_version``, such as ``13.0``, or ``6.3.0``.\n    see the `jquast/ucs-detect`_ cli utility for automatic detection.\n  * **enhancement**:\n    api documentation is published to readthedocs.org.\n  * **updated** tables for *all* unicode specifications with files\n    published in a programmatically consumable format, versions 4.1.0\n    through 13.0\n\n0.1.9 *2020-03-22*\n  * **performance** optimization by `avram lubkin`_, `pr #35`_.\n  * **updated** tables to unicode specification 13.0.0.\n\n0.1.8 *2020-01-01*\n  * **updated** tables to unicode specification 12.0.0. (`pr #30`_).\n\n0.1.7 *2016-07-01*\n  * **updated** tables to unicode specification 9.0.0. (`pr #18`_).\n\n0.1.6 *2016-01-08 production/stable*\n  * ``license`` file now included with distribution.\n\n0.1.5 *2015-09-13 alpha*\n  * **bugfix**:\n    resolution of \"combining_ character width\" issue, most especially\n    those that previously returned -1 now often (correctly) return 0.\n    resolved by `philip craig`_ via `pr #11`_.\n  * **deprecated**:\n    the module path ``wcwidth.table_comb`` is no longer available,\n    it has been superseded by module path ``wcwidth.table_zero``.\n\n0.1.4 *2014-11-20 pre-alpha*\n  * **feature**: ``wcswidth()`` now determines printable length\n    for (most) combining_ characters.  the developer's tool\n    `bin/wcwidth-browser.py`_ is improved to display combining_\n    characters when provided the ``--combining`` option\n    (`thomas ballinger`_ and `leta montopoli`_ `pr #5`_).\n  * **feature**: added static analysis (prospector_) to testing\n    framework.\n\n0.1.3 *2014-10-29 pre-alpha*\n  * **bugfix**: 2nd parameter of wcswidth was not honored.\n    (`thomas ballinger`_, `pr #4`_).\n\n0.1.2 *2014-10-28 pre-alpha*\n  * **updated** tables to unicode specification 7.0.0.\n    (`thomas ballinger`_, `pr #3`_).\n\n0.1.1 *2014-05-14 pre-alpha*\n  * initial release to pypi, based on unicode specification 6.3.0\n\nthis code was originally derived directly from c code of the same name,\nwhose latest version is available at\nhttps://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c::\n\n * markus kuhn -- 2007-05-26 (unicode 5.0)\n *\n * permission to use, copy, modify, and distribute this software\n * for any purpose and without fee is hereby granted. the author\n * disclaims all warranties with regard to this software.\n\n.. _`specification_from_pypi`: https://wcwidth.readthedocs.io/en/latest/specs.html\n.. _`tox`: https://tox.wiki/en/latest/\n.. _`prospector`: https://github.com/landscapeio/prospector\n.. _`combining`: https://en.wikipedia.org/wiki/combining_character\n.. _`bin/`: https://github.com/jquast/wcwidth/tree/master/bin\n.. _`bin/wcwidth-browser.py`: https://github.com/jquast/wcwidth/blob/master/bin/wcwidth-browser.py\n.. _`thomas ballinger`: https://github.com/thomasballinger\n.. _`leta montopoli`: https://github.com/lmontopo\n.. _`philip craig`: https://github.com/philipc\n.. _`pr #3`: https://github.com/jquast/wcwidth/pull/3\n.. _`pr #4`: https://github.com/jquast/wcwidth/pull/4\n.. _`pr #5`: https://github.com/jquast/wcwidth/pull/5\n.. _`pr #11`: https://github.com/jquast/wcwidth/pull/11\n.. _`pr #18`: https://github.com/jquast/wcwidth/pull/18\n.. _`pr #30`: https://github.com/jquast/wcwidth/pull/30\n.. _`pr #35`: https://github.com/jquast/wcwidth/pull/35\n.. _`pr #82`: https://github.com/jquast/wcwidth/pull/82\n.. _`pr #91`: https://github.com/jquast/wcwidth/pull/91\n.. _`pr #97`: https://github.com/jquast/wcwidth/pull/97\n.. _`pr #98`: https://github.com/jquast/wcwidth/pull/98\n.. _`pr #100`: https://github.com/jquast/wcwidth/pull/100\n.. _`issue #101`: https://github.com/jquast/wcwidth/issues/101\n.. _`jquast/blessed`: https://github.com/jquast/blessed\n.. _`selectel/pyte`: https://github.com/selectel/pyte\n.. _`thomasballinger/curtsies`: https://github.com/thomasballinger/curtsies\n.. _`dbcli/pgcli`: https://github.com/dbcli/pgcli\n.. _`prompt-toolkit/python-prompt-toolkit`: https://github.com/prompt-toolkit/python-prompt-toolkit\n.. _`timoxley/wcwidth`: https://github.com/timoxley/wcwidth\n.. _`wcwidth(3)`:  https://man7.org/linux/man-pages/man3/wcwidth.3.html\n.. _`wcswidth(3)`: https://man7.org/linux/man-pages/man3/wcswidth.3.html\n.. _`astanin/python-tabulate`: https://github.com/astanin/python-tabulate\n.. _`janlelis/unicode-display_width`: https://github.com/janlelis/unicode-display_width\n.. _`rspeer/python-ftfy`: https://github.com/rspeer/python-ftfy\n.. _`alecrabbit/php-wcwidth`: https://github.com/alecrabbit/php-wcwidth\n.. _`text::charwidth`: https://metacpan.org/pod/text::charwidth\n.. _`bluebear94/terminal-wcwidth`: https://github.com/bluebear94/terminal-wcwidth\n.. _`mattn/go-runewidth`: https://github.com/mattn/go-runewidth\n.. _`grepsuzette/wcwidth`: https://github.com/grepsuzette/wcwidth\n.. _`jquast/ucs-detect`: https://github.com/jquast/ucs-detect\n.. _`avram lubkin`: https://github.com/avylove\n.. _`nbedos/termtosvg`: https://github.com/nbedos/termtosvg\n.. _`peterbrittain/asciimatics`: https://github.com/peterbrittain/asciimatics\n.. _`aperezdc/lua-wcwidth`: https://github.com/aperezdc/lua-wcwidth\n.. _`joachimschmidt557/zig-wcwidth`: https://github.com/joachimschmidt557/zig-wcwidth\n.. _`fumiyas/wcwidth-cjk`: https://github.com/fumiyas/wcwidth-cjk\n.. _`joshuarubin/wcwidth9`: https://github.com/joshuarubin/wcwidth9\n.. _`python-cmd2/cmd2`: https://github.com/python-cmd2/cmd2\n.. _`stratis-storage/stratis-cli`: https://github.com/stratis-storage/stratis-cli\n.. _`ihabunek/toot`: https://github.com/ihabunek/toot\n.. _`saulpw/visidata`: https://github.com/saulpw/visidata\n.. _`pip-tools`: https://pip-tools.readthedocs.io/\n.. _`sphinx`: https://www.sphinx-doc.org/\n.. |pypi_downloads| image:: https://img.shields.io/pypi/dm/wcwidth.svg?logo=pypi\n    :alt: downloads\n    :target: https://pypi.org/project/wcwidth/\n.. |codecov| image:: https://codecov.io/gh/jquast/wcwidth/branch/master/graph/badge.svg\n    :alt: codecov.io code coverage\n    :target: https://app.codecov.io/gh/jquast/wcwidth/\n.. |license| image:: https://img.shields.io/pypi/l/wcwidth.svg\n    :target: https://pypi.org/project/wcwidth/\n    :alt: mit license\n",
  "docs_url": null,
  "keywords": "cjk,combining,console,eastasian,emoji,emulator,terminal,unicode,wcswidth,wcwidth,xterm",
  "license": "mit",
  "name": "wcwidth",
  "package_url": "https://pypi.org/project/wcwidth/",
  "project_url": "https://pypi.org/project/wcwidth/",
  "project_urls": {
    "Homepage": "https://github.com/jquast/wcwidth"
  },
  "release_url": "https://pypi.org/project/wcwidth/0.2.12/",
  "requires_dist": [
    "backports.functools-lru-cache >=1.2.1 ; python_version < \"3.2\""
  ],
  "requires_python": "",
  "summary": "measures the displayed width of unicode strings in a terminal",
  "version": "0.2.12",
  "releases": [],
  "developers": [
    "contact@jeffquast.com",
    "jeff_quast"
  ],
  "kwds": "charwidth unicode strings characters string",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_wcwidth",
  "homepage": "https://github.com/jquast/wcwidth",
  "release_count": 24,
  "dependency_ids": [
    "pypi_backports.functools_lru_cache"
  ]
}
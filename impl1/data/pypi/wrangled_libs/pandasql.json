{
  "classifiers": [],
  "description": "pandasql\n========\n\n``pandasql`` allows you to query ``pandas`` dataframes using sql syntax.\nit works similarly to ``sqldf`` in r. ``pandasql`` seeks to provide a\nmore familiar way of manipulating and cleaning data for people new to\npython or ``pandas``.\n\ninstallation\n^^^^^^^^^^^^\n\n::\n\n    $ pip install -u pandasql\n\nbasics\n^^^^^^\n\nthe main function used in pandasql is ``sqldf``. ``sqldf`` accepts 2\nparametrs - a sql query string - an set of session/environment variables\n(``locals()`` or ``globals()``)\n\nspecifying ``locals()`` or ``globals()`` can get tedious. you can\ndefined a short helper function to fix this.\n\n::\n\n    from pandasql import sqldf\n    pysqldf = lambda q: sqldf(q, globals())\n\nquerying\n^^^^^^^^\n\n``pandasql`` uses `sqlite syntax <http://www.sqlite.org/lang.html>`__.\nany ``pandas`` dataframes will be automatically detected by\n``pandasql``. you can query them as you would any regular sql table.\n\n::\n\n    $ python\n    >>> from pandasql import sqldf, load_meat, load_births\n    >>> pysqldf = lambda q: sqldf(q, globals())\n    >>> meat = load_meat()\n    >>> births = load_births()\n    >>> print pysqldf(\"select * from meat limit 10;\").head()\n                      date  beef  veal  pork  lamb_and_mutton broilers other_chicken turkey\n    0  1944-01-01 00:00:00   751    85  1280               89     none          none   none\n    1  1944-02-01 00:00:00   713    77  1169               72     none          none   none\n    2  1944-03-01 00:00:00   741    90  1128               75     none          none   none\n    3  1944-04-01 00:00:00   650    89   978               66     none          none   none\n    4  1944-05-01 00:00:00   681   106  1029               78     none          none   none\n\njoins and aggregations are also supported\n\n::\n\n    >>> q = \"\"\"select\n            m.date, m.beef, b.births\n         from\n            meats m\n         inner join\n            births b\n               on m.date = b.date;\"\"\"\n    >>> joined = pyqldf(q)\n    >>> print joined.head()\n                        date    beef  births\n    403  2012-07-01 00:00:00  2200.8  368450\n    404  2012-08-01 00:00:00  2367.5  359554\n    405  2012-09-01 00:00:00  2016.0  361922\n    406  2012-10-01 00:00:00  2343.7  347625\n    407  2012-11-01 00:00:00  2206.6  320195\n\n    >>> q = \"select\n               strftime('%y', date) as year\n               , sum(beef) as beef_total\n               from\n                  meat\n               group by\n                  year;\"\n    >>> print pysqldf(q).head()\n       year  beef_total\n    0  1944        8801\n    1  1945        9936\n    2  1946        9010\n    3  1947       10096\n    4  1948        8766\n\nmore information and code samples available in the\n`examples <https://github.com/yhat/pandasql/blob/master/examples/demo.py>`__\nfolder or on `our\nblog <http://blog.yhathq.com/posts/pandasql-sql-for-pandas-dataframes.html>`__.\n\n|analytics|\n\n.. |analytics| image:: https://ga-beacon.appspot.com/ua-46996803-1/pandasql/readme.md\n   :target: https://github.com/yhat/pandasql",
  "docs_url": null,
  "keywords": "",
  "license": "copyright (c) 2013 yhat, inc.\n\npermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:\n\nthe above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.\n\nthe software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
  "name": "pandasql",
  "package_url": "https://pypi.org/project/pandasql/",
  "project_url": "https://pypi.org/project/pandasql/",
  "project_urls": {
    "Download": "UNKNOWN",
    "Homepage": "https://github.com/yhat/pandasql/"
  },
  "release_url": "https://pypi.org/project/pandasql/0.7.3/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "sqldf for pandas",
  "version": "0.7.3",
  "releases": [],
  "developers": [
    "greg@yhathq.com",
    "greg_lamp"
  ],
  "kwds": "pandasql sqldf pysqldf pyqldf dataframes",
  "license_kwds": "copyright liable liability noninfringement copies",
  "libtype": "pypi",
  "id": "pypi_pandasql",
  "homepage": "https://github.com/yhat/pandasql/",
  "release_count": 31,
  "dependency_ids": []
}
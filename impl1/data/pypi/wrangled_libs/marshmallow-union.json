{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: utilities"
  ],
  "description": "========\noverview\n========\n\n\n\nunion fields for marshmallow.\n\n* free software: mit license\n\n\nwarning\n===========\n\n   this library works by trying a list of fields one by one, and (de)serializing with the first one not to raise an error.\n   the type of the values is not taken into account, so if one of the fields in the union accepts values of an unexpected type,\n   they will be used for serialization. this can lead to a surprising behavior, because :\n\n   .. code-block:: python\n\n       u = union(fields=[fields.integer(), fields.string()]) # the integer field accepts string representations of integers\n       type(u.deserialize('0')) # -> int\n\n   if you want to have precise control of which field will be used for which value, you can use `marshmallow-polyfield <https://github.com/bachmann1234/marshmallow-polyfield/>`_ instead of this library.\n\n\n\ndocumentation\n=============\n\n\nhttps://python-marshmallow-union.readthedocs.io/\n\n0.1.15 (2020-05-30)\n-------------------\n\nchanges\n^^^^^^^\n\n- fix `#32 <https://github.com/adamboche/python-marshmallow-union/issues/32>`_ : never ignore the value passed to `_serialize`. notably, this fixes the serialization of lists of unions, such as ``list(union([int(), string()]))``\n\n0.1.12 (2019-10-24)\n-------------------\n\n\nbackward-incompatible changes\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- on serialization, ``marshmallow_union.exceptiongroup`` is raised if all candidate fields fail.\n  `#24 <https://github.com/adamboche/python-marshmallow-union/issues/24>`_\n\n\n----\n\n\n0.1.11 (2019-06-19)\n-------------------\n\n\nchanges\n^^^^^^^\n\n- override the underscore-prefixed methods instead of the plain ones\n  `#22 <https://github.com/adamboche/python-marshmallow-union/issues/22>`_\n\n\n----\n\n\nchangelog\n=========\n\n0.1.10 (2019-06-08)\n-------------------\n\n\nchanges\n^^^^^^^\n\n- use towncrier for changelog.\n  `#18 <https://github.com/adamboche/python-marshmallow-union/issues/18>`_\n\n\n----\n\n\n0.1.0 (2019-06-07)\n------------------\n\n* first release on pypi.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "marshmallow-union",
  "package_url": "https://pypi.org/project/marshmallow-union/",
  "project_url": "https://pypi.org/project/marshmallow-union/",
  "project_urls": {
    "Homepage": "https://github.com/adamboche/python-marshmallow-union"
  },
  "release_url": "https://pypi.org/project/marshmallow-union/0.1.15.post1/",
  "requires_dist": [
    "marshmallow (>=3.0.0)"
  ],
  "requires_python": "",
  "summary": "union fields for marshmallow.",
  "version": "0.1.15.post1",
  "releases": [],
  "developers": [
    "adam_boche",
    "adamboche@users.noreply.github.com"
  ],
  "kwds": "marshmallow_union _serialize serializing fields serialization",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_marshmallow_union",
  "homepage": "https://github.com/adamboche/python-marshmallow-union",
  "release_count": 6,
  "dependency_ids": [
    "pypi_marshmallow"
  ]
}
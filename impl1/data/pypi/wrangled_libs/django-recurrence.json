{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: plugins",
    "environment :: web environment",
    "framework :: django",
    "framework :: django :: 2.2",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "\ndjango-recurrence\n=================\n\n.. image:: https://img.shields.io/github/stars/django-recurrence/django-recurrence.svg?label=stars&style=socialca\n   :target: https://github.com/jazzband/django-recurrence\n   :alt: github\n\n.. image:: https://img.shields.io/pypi/v/django-recurrence.svg\n   :target: https://pypi.org/project/django-recurrence/\n   :alt: pypi release\n\n.. image:: https://img.shields.io/pypi/pyversions/django-recurrence.svg\n   :target: https://pypi.org/project/django-recurrence/\n   :alt: supported python versions\n\n.. image:: https://img.shields.io/pypi/djversions/django-recurrence.svg\n   :target: https://pypi.org/project/django-recurrence/\n   :alt: supported django versions\n\n.. image:: https://img.shields.io/readthedocs/django-recurrence.svg\n   :target: https://django-recurrence.readthedocs.io/\n   :alt: documentation\n\n.. image:: https://github.com/django-recurrence/django-recurrence/workflows/test/badge.svg\n   :target: https://github.com/django-recurrence/django-recurrence/actions\n   :alt: github actions\n\n.. image:: https://codecov.io/gh/django-recurrence/django-recurrence/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/django-recurrence/django-recurrence\n   :alt: coverage\n\n\ndjango-recurrence is a utility for working with recurring dates in django.\n\n\nfunctionality\n-------------\n\n* recurrence/rule objects using a subset of rfc2445\n  (wraps ``dateutil.rrule``) for specifying recurring date/times,\n* ``recurrencefield`` for storing recurring datetimes in the database, and\n* javascript widget.\n\n``recurrencefield`` provides a django model field which serializes\nrecurrence information for storage in the database.\n\nfor example - say you were storing information about a university course\nin your app. you could use a model like this:\n\n.. code:: python\n\n   import recurrence.fields\n\n   class course(models.model):\n       title = models.charfield(max_length=200)\n       start = models.timefield()\n       end = models.timefield()\n       recurrences = recurrence.fields.recurrencefield()\n\nyou\u2019ll notice that i\u2019m storing my own start and end time.\nthe recurrence field only deals with *recurrences*\nnot with specific time information.\ni have an event that starts at 2pm.\nits recurrences would be \u201cevery friday\u201d.\n\n\ndocumentation\n-------------\n\nfor more information on installation and configuration see the documentation at:\n\nhttps://django-recurrence.readthedocs.io/\n\n\nissues\n------\n\nif you have questions or have trouble using the app please file a bug report at:\n\nhttps://github.com/django-recurrence/django-recurrence/issues\n\n\ncontributions\n-------------\n\nall contributions are welcome!\n\nit is best to separate proposed changes and prs into small, distinct patches\nby type so that they can be merged faster into upstream and released quicker.\n\none way to organize contributions would be to separate prs for e.g.\n\n* bugfixes,\n* new features,\n* code and design improvements,\n* documentation improvements, or\n* tooling and ci improvements.\n\nmerging contributions requires passing the checks configured\nwith the ci. this includes running tests and linters successfully\non the currently officially supported python and django versions.\n\nthe test automation is run automatically with github actions, but you can\nrun it locally with the ``tox`` command before pushing commits.\n\n\nchanges\n=======\n\n1.11.1 (2021-01-25)\n-------------------\n\n- fix restructuredtest syntax to be pypi compliant.\n\n1.11.0 (2021-01-21)\n-------------------\n\n- add django 4.0 and python 3.10 support.\n  deprecate eol django and python versions.\n  [aleksihakli]\n- fix weekday deserialization typing bug.\n  [apirobot]\n- fix default ``recurrence.language_code`` not being set\n  by using ``en-us`` for locale in frontend as the default.\n  [jleclanche]\n\n1.10.3\n------\n\n* add hungarian localisation #161.\n\n1.10.2\n------\n\n* add hebrew localisation #159.\n\n1.10.1\n------\n\n* update path to jquery to match the one django admin provides #148.\n\n1.10.0\n------\n\n* fixes and official support for django 2.1 and 2.2 #143, #142;\n* remove support for python 2.7 and 3.5, remove support for django 2.0 #145.\n\n1.9.0\n-----\n\n* fix for using the recurrence widget in admin inlines #137.\n\n1.8.2\n-----\n\n* minor fix for django 2.0 #134;\n* minor packaging fix #135.\n\n1.8.1\n-----\n\n* bad release, do not use.\n\n1.8.0\n-----\n\nthis release contains two backwards incompatible changes -\nplease read the notes below for details.\n\n* django-recurrence now returns timezone aware ``datetime`` objects\n  in most cases #130. if ``use_tz`` is ``true`` (it\n  defaults to off with a stock django install) then you'll now get\n  timezone aware ``datetime`` objects back from django-recurrence. if\n  you have ``use_tz`` as ``true``, and you don't want this behaviour,\n  you can set ``recurrence_use_tz`` to ``false``, but please let us\n  know (via github issues) that you wanted to opt out, so we can\n  understand what your use case is.\n* ``recurrencefield`` instances without ``required=false`` will now\n  require at least one rule or date. this change is intended to bring\n  django-recurrence into line with how custom fields should\n  behave. if you don't want to require at least one rule or date,\n  just set ``require=false`` on your field #133.\n* improvements to avoid inline styles #85;\n* handle changes to ``javascript_catalog`` in django 2 #131.\n\n1.7.0\n-----\n\n* drop official support for django versions 1.7, 1.8, 1.9, 1.10;\n* fixes for saving ``none`` into a ``recurrencefield`` causing a\n  ``typeerror`` #89`, #122;\n* drop official support for python 3.3 and python 3.4;\n* provisional support for python 3.7 (only for django 2.0 and up);\n* ensure use of ``render`` on django widgets always passes the\n  ``renderer`` argument, to ensure support for django 2.1 #125;\n* django 2.0 compatibility fix for usage of django-recurrence with\n  django rest framework #126.\n\n1.6.0\n-----\n\n* fixes for python 3 #105;\n* support for django 2.0 #109, #110;\n* switch back a couple of instances of ``deserializationerror`` to\n  ``validationerror`` #111;\n* switch around how we set dates in the date selector widget to avoid\n  issues with short months #113.\n\n1.5.0\n-----\n\n* add slovakian translations #98;\n* add support for events occurring at a fixed point before the\n  end of the month - e.g. the second last tuesday before the end of the month #88;\n* add minor style changes to make django-recurrence compatible with wagtail #100;\n* allow changing the behaviour of generating recurrences on\n  ``dtstart`` by default. you can opt in to this by setting\n  ``include_dtstart=false`` on your ``recurrencefield`` #93;\n* ensure broken values raise ``deserializationerror`` where expected #103.\n\n1.4.1\n-----\n\n* make po-revision-date parseable by babel #75;\n* update installation notes to cover django 1.10 #74;\n* add german translation #77;\n* add brazilian translation #79;\n* ensure the migrations are included when installing #78;\n* fix order of arguments to ``to_dateutil_rruleset`` #81.\n\n1.4.0\n-----\n\n* improve our testing setup to also cover python 3.5;\n* fixes for django 1.10 #69.\n\n1.3.1\n-----\n\n* add basque translations #67.\n\n1.3.0\n-----\n\n* drop official support for django 1.4, django 1.5, django 1.6 and\n  python 2.6 (no changes have been made to deliberately break older\n  versions, but older versions will not be tested going forward);\n* add official support for django 1.8 and django 1.9 #62;\n* fix for a bug in ``rule`` creation where the weekday parameter is\n  an instance of ``weekday`` rather than an integer #57.\n\n1.2.0\n-----\n\n* added an option for events to occur on the fourth of a given\n  weekday of the month #29;\n* fixed an off-by-one bug in the ``to_text`` method for events\n  happening on a regular month each year #30;\n* fixed a bug in the javascript widget where the date for monthly\n  events on a fixed date of the month had the description rendered\n  incorrectly if the day selected was more than the number of days in\n  the current calendar month #31;\n* added a french translation #32 - this may be backwards\n  incompatible if have overriden the widget javascript such that\n  there is no ``language_code`` member of your recurrence object;\n* added a spanish translation #49;\n* added database migrations - running ``python manage.py migrate\n  recurrence --fake`` should be sufficient for this version - nothing\n  has changed about the database schema between 1.1.0 and 1.2.0;\n* fix broken tests for django 1.4.\n\n1.1.0\n-----\n\n* added experimental python 3 support.\n* added extensive test coverage (from 0% to 81%).\n* added documentation (including this changelog).\n* removed ``recurrencemodelfield`` and ``recurrencemodeldescriptor``,\n  which don't appear to have worked as expected for some time.\n* fixed a bug introduced in 1.0.3 which prevented the\n  django-recurrence javascript from working #27.\n* don't raise ``valueerror`` if you save ``none`` into a\n  ``recurrencefield`` with ``null=false`` #22, for\n  consistency with other field types.\n* make sure an empty recurrence object is falsey #25.\n* fix a copy-paste error in ``to_recurrence_object`` which prevented\n  exclusion rules from being populated correctly.\n* fix a typo in ``create_from_recurrence_object`` which prevented it\n  working with inclusion or exclusion rules.\n* various other very minor bugfixes.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "django-recurrence",
  "package_url": "https://pypi.org/project/django-recurrence/",
  "project_url": "https://pypi.org/project/django-recurrence/",
  "project_urls": {
    "Homepage": "https://github.com/django-recurrence/django-recurrence"
  },
  "release_url": "https://pypi.org/project/django-recurrence/1.11.1/",
  "requires_dist": [
    "django (>=2.2)",
    "python-dateutil"
  ],
  "requires_python": ">=3.7",
  "summary": "django utility wrapping dateutil.rrule",
  "version": "1.11.1",
  "releases": [],
  "developers": [
    "tamas.kemenczy@gmail.com",
    "tamas_kemenczy"
  ],
  "kwds": "to_recurrence_object django recurrencemodelfield create_from_recurrence_object recurrencefield",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_django_recurrence",
  "homepage": "https://github.com/django-recurrence/django-recurrence",
  "release_count": 20,
  "dependency_ids": [
    "pypi_django",
    "pypi_python_dateutil"
  ]
}
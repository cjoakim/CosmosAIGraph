{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# microsoft azure sdk for python\n\nthis is the microsoft azure consumption client library.\nthis package has been tested with python 3.6+.\nfor a more complete view of azure libraries, see the [azure sdk python release](https://aka.ms/azsdk/python/all).\n\n## _disclaimer_\n\n_azure sdk python packages support for python 2.7 has ended 01 january 2022. for more information and questions, please refer to https://github.com/azure/azure-sdk-for-python/issues/20691_\n\n# usage\n\n\nto learn how to use this package, see the [quickstart guide](https://aka.ms/azsdk/python/mgmt)\n\n\n\nfor docs and references, see [python sdk references](https://docs.microsoft.com/python/api/overview/azure/consumption)\ncode samples for this package can be found at [consumption](https://docs.microsoft.com/samples/browse/?languages=python&term=getting%20started%20-%20managing&terms=getting%20started%20-%20managing) on docs.microsoft.com.\nadditional code samples for different azure services are available at [samples repo](https://aka.ms/azsdk/python/mgmt/samples)\n\n\n# provide feedback\n\nif you encounter any bugs or have suggestions, please file an issue in the\n[issues](https://github.com/azure/azure-sdk-for-python/issues)\nsection of the project. \n\n\n![impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2fazure-mgmt-consumption%2freadme.png)\n\n\n# release history\n\n## 10.0.0 (2022-06-20)\n\n**features**\n\n  - added operation lotsoperations.list_by_customer\n\n**breaking changes**\n\n  - model budgetfilter no longer has parameter not_property\n  - operation reservationrecommendationdetailsoperations.get has a new parameter resource_scope\n  - operation reservationrecommendationsoperations.list has a new parameter resource_scope\n  - operation reservationrecommendationsoperations.list no longer has parameter scope\n  - operation reservationsdetailsoperations.list has a new parameter resource_scope\n  - operation reservationsdetailsoperations.list no longer has parameter scope\n  - operation reservationssummariesoperations.list has a new parameter resource_scope\n  - operation reservationssummariesoperations.list no longer has parameter scope\n\n## 9.0.0 (2022-01-06)\n\n**features**\n\n  - added operation eventsoperations.list_by_billing_account\n  - added operation eventsoperations.list_by_billing_profile\n  - added operation lotsoperations.list_by_billing_account\n  - added operation lotsoperations.list_by_billing_profile\n  - model balance has a new parameter etag\n  - model budget has a new parameter forecast_spend\n  - model chargesummary has a new parameter e_tag\n  - model creditbalancesummary has a new parameter estimated_balance_in_billing_currency\n  - model creditsummary has a new parameter billing_currency\n  - model creditsummary has a new parameter credit_currency\n  - model creditsummary has a new parameter e_tag\n  - model creditsummary has a new parameter etag\n  - model creditsummary has a new parameter reseller\n  - model eventsummary has a new parameter adjustments_in_billing_currency\n  - model eventsummary has a new parameter billing_currency\n  - model eventsummary has a new parameter billing_profile_display_name\n  - model eventsummary has a new parameter billing_profile_id\n  - model eventsummary has a new parameter canceled_credit\n  - model eventsummary has a new parameter charges_in_billing_currency\n  - model eventsummary has a new parameter closed_balance_in_billing_currency\n  - model eventsummary has a new parameter credit_currency\n  - model eventsummary has a new parameter credit_expired_in_billing_currency\n  - model eventsummary has a new parameter e_tag\n  - model eventsummary has a new parameter e_tag_properties_e_tag\n  - model eventsummary has a new parameter lot_id\n  - model eventsummary has a new parameter lot_source\n  - model eventsummary has a new parameter new_credit_in_billing_currency\n  - model eventsummary has a new parameter reseller\n  - model legacychargesummary has a new parameter e_tag\n  - model legacyreservationrecommendation has a new parameter etag\n  - model legacyreservationrecommendation has a new parameter resource_type\n  - model legacyreservationtransaction has a new parameter billing_month\n  - model legacyreservationtransaction has a new parameter monetary_commitment\n  - model legacyreservationtransaction has a new parameter overage\n  - model legacyusagedetail has a new parameter benefit_id\n  - model legacyusagedetail has a new parameter benefit_name\n  - model legacyusagedetail has a new parameter etag\n  - model legacyusagedetail has a new parameter pay_g_price\n  - model legacyusagedetail has a new parameter pricing_model\n  - model lotsummary has a new parameter billing_currency\n  - model lotsummary has a new parameter closed_balance_in_billing_currency\n  - model lotsummary has a new parameter credit_currency\n  - model lotsummary has a new parameter e_tag\n  - model lotsummary has a new parameter e_tag_properties_e_tag\n  - model lotsummary has a new parameter original_amount_in_billing_currency\n  - model lotsummary has a new parameter purchased_date\n  - model lotsummary has a new parameter reseller\n  - model lotsummary has a new parameter status\n  - model managementgroupaggregatedcostresult has a new parameter etag\n  - model marketplace has a new parameter additional_info\n  - model marketplace has a new parameter etag\n  - model modernchargesummary has a new parameter e_tag\n  - model modernreservationrecommendation has a new parameter etag\n  - model modernreservationrecommendation has a new parameter location_properties_location\n  - model modernreservationrecommendation has a new parameter sku_name\n  - model modernusagedetail has a new parameter benefit_id\n  - model modernusagedetail has a new parameter benefit_name\n  - model modernusagedetail has a new parameter cost_allocation_rule_name\n  - model modernusagedetail has a new parameter effective_price\n  - model modernusagedetail has a new parameter etag\n  - model modernusagedetail has a new parameter pay_g_price\n  - model modernusagedetail has a new parameter pricing_model\n  - model modernusagedetail has a new parameter provider\n  - model notification has a new parameter locale\n  - model operation has a new parameter id\n  - model operationdisplay has a new parameter description\n  - model pricesheetresult has a new parameter download\n  - model pricesheetresult has a new parameter etag\n  - model reservationdetail has a new parameter etag\n  - model reservationrecommendation has a new parameter etag\n  - model reservationrecommendationdetailsmodel has a new parameter etag\n  - model reservationrecommendationslistresult has a new parameter previous_link\n  - model reservationsummary has a new parameter etag\n  - model reservationtransaction has a new parameter billing_month\n  - model reservationtransaction has a new parameter monetary_commitment\n  - model reservationtransaction has a new parameter overage\n  - model resource has a new parameter etag\n  - model tag has a new parameter value\n  - model tagsresult has a new parameter next_link\n  - model tagsresult has a new parameter previous_link\n  - model usagedetail has a new parameter etag\n\n**breaking changes**\n\n  - model chargesummary no longer has parameter tags\n  - model eventsummary no longer has parameter tags\n  - model legacychargesummary no longer has parameter tags\n  - model lotsummary no longer has parameter tags\n  - model modernchargesummary no longer has parameter tags\n  - operation reservationrecommendationdetailsoperations.get has a new signature\n  - parameter scope of model legacyreservationrecommendation is now required\n  - parameter scope of model legacyreservationrecommendation is now required\n  - removed operation eventsoperations.list\n  - removed operation lotsoperations.list\n  - removed operation group forecastsoperations\n\n## 8.0.0 (2020-12-22)\n\n**features**\n\n  - model reservationrecommendationdetailscalculatedsavingsproperties has a new parameter reserved_unit_count\n  - model reservationrecommendationdetailsmodel has a new parameter location\n  - model reservationrecommendationdetailsmodel has a new parameter sku\n\n## 8.0.0b1 (2020-10-31)\n\nthis is beta preview version.\nfor detailed changelog please refer to equivalent stable version 3.0.0(https://pypi.org/project/azure-mgmt-consumption/3.0.0/)\n\nthis version uses a next-generation code generator that introduces important breaking changes, but also important new features (like unified authentication and async programming).\n\n**general breaking changes**\n\n- credential system has been completly revamped:\n\n  - `azure.common.credentials` or `msrestazure.azure_active_directory` instances are no longer supported, use the `azure-identity` classes instead: https://pypi.org/project/azure-identity/\n  - `credentials` parameter has been renamed `credential`\n\n- the `config` attribute no longer exists on a client, configuration should be passed as kwarg. example: `myclient(credential, subscription_id, enable_logging=true)`. for a complete set of\n  supported options, see the [parameters accept in init documentation of azure-core](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/client_library_developer.md#available-policies)\n- you can't import a `version` module anymore, use `__version__` instead\n- operations that used to return a `msrest.polling.lropoller` now returns a `azure.core.polling.lropoller` and are prefixed with `begin_`.\n- exceptions tree have been simplified and most exceptions are now `azure.core.exceptions.httpresponseerror` (`clouderror` has been removed).\n- most of the operation kwarg have changed. some of the most noticeable:\n\n  - `raw` has been removed. equivalent feature can be found using `cls`, a callback that will give access to internal http response for advanced user\n  - for a complete set of supported options, see the [parameters accept in request documentation of azure-core](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/client_library_developer.md#available-policies)\n\n**general new features**\n\n- type annotations support using `typing`. sdks are mypy ready.\n- this client has now stable and official support for async. check the `aio` namespace of your package to find the async client.\n- this client now support natively tracing library like opencensus or opentelemetry. see this [tracing quickstart](https://github.com/azure/azure-sdk-for-python/tree/main/sdk/core/azure-core-tracing-opentelemetry) for an overview.\n\n\n## 3.0.0 (2018-05-16)\n\n**features**\n\n  - model meterdetails has a new parameter service_name\n  - model meterdetails has a new parameter service_tier\n  - model filters has a new parameter tags\n  - model marketplace has a new parameter is_recurring_charge\n  - model pricesheetproperties has a new parameter offer_id\n  - added operation usagedetailsoperations.download\n  - added operation group forecastsoperations\n  - added operation group chargesoperations\n  - added operation group tagsoperations\n  - added operation group balancesoperations\n  - added operation group reservationrecommendationsoperations\n  - added operation group aggregatedcostoperations\n\n**breaking changes**\n\n  - model usagedetail has a new signature\n  - removed operation\n    budgetsoperations.create_or_update_by_resource_group_name\n  - removed operation budgetsoperations.get_by_resource_group_name\n  - removed operation budgetsoperations.list_by_resource_group_name\n  - removed operation\n    budgetsoperations.delete_by_resource_group_name\n  - removed operation usagedetailsoperations.list_by_billing_period\n  - removed operation marketplacesoperations.list_by_billing_period\n\n**general breaking changes**\n\nthis version uses a next-generation code generator that *might*\nintroduce breaking changes.\n\n  - model signatures now use only keyword-argument syntax. all\n    positional arguments must be re-written as keyword-arguments. to\n    keep auto-completion in most cases, models are now generated for\n    python 2 and python 3. python 3 uses the \"*\" syntax for\n    keyword-only arguments.\n  - enum types now use the \"str\" mixin (class azureenum(str, enum)) to\n    improve the behavior when unrecognized enum values are encountered.\n    while this is not a breaking change, the distinctions are important,\n    and are documented here:\n    <https://docs.python.org/3/library/enum.html#others> at a glance:\n      - \"is\" should not be used at all.\n      - \"format\" will return the string value, where \"%s\" string\n        formatting will return `nameofenum.stringvalue`. format syntax\n        should be prefered.\n  - new long running operation:\n      - return type changes from\n        `msrestazure.azure_operation.azureoperationpoller` to\n        `msrest.polling.lropoller`. external api is the same.\n      - return type is now **always** a `msrest.polling.lropoller`,\n        regardless of the optional parameters used.\n      - the behavior has changed when using `raw=true`. instead of\n        returning the initial call result as `clientrawresponse`,\n        without polling, now this returns an lropoller. after polling,\n        the final resource will be returned as a `clientrawresponse`.\n      - new `polling` parameter. the default behavior is\n        `polling=true` which will poll using arm algorithm. when\n        `polling=false`, the response of the initial call will be\n        returned without polling.\n      - `polling` parameter accepts instances of subclasses of\n        `msrest.polling.pollingmethod`.\n      - `add_done_callback` will no longer raise if called after\n        polling is finished, but will instead execute the callback right\n        away.\n\n## 2.0.0 (2018-02-06)\n\n**features**\n\n  - marketplace data with and without billing period\n  - price sheets data with and without billing period\n  - budget crud operations support\n\n**breaking changes**\n\n  - removing scope from usage_details, reservation summaries and\n    details operations.\n\n## 1.1.0 (2017-12-12)\n\n**features**\n\n  - reservation summaries based on reservation order id and/or\n    reservationid\n  - reservation details based on reservation order id and/or\n    reservationid\n\n## 1.0.0 (2017-11-15)\n\n**features**\n\n  - featuring stable api ga version 2017-11-30\n  - supporting ea customers with azure consumption usage details\n\n**breaking changes**\n\n  - removing support for calling usage_details.list() with\n    'invoice_id'. will feature in future releases.\n\n## 0.1.0 (2017-05-18)\n\n  - initial release\n\n\n",
  "docs_url": null,
  "keywords": "azure,azure sdk",
  "license": "mit license",
  "name": "azure-mgmt-consumption",
  "package_url": "https://pypi.org/project/azure-mgmt-consumption/",
  "project_url": "https://pypi.org/project/azure-mgmt-consumption/",
  "project_urls": {
    "Homepage": "https://github.com/Azure/azure-sdk-for-python"
  },
  "release_url": "https://pypi.org/project/azure-mgmt-consumption/10.0.0/",
  "requires_dist": [
    "msrest (>=0.6.21)",
    "azure-common (~=1.1)",
    "azure-mgmt-core (<2.0.0,>=1.3.1)"
  ],
  "requires_python": ">=3.6",
  "summary": "microsoft azure consumption client library for python",
  "version": "10.0.0",
  "releases": [],
  "developers": [
    "azpysdkhelp@microsoft.com",
    "microsoft_corporation"
  ],
  "kwds": "azure_operation _azure azure azure_active_directory azureenum",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_azure_mgmt_consumption",
  "homepage": "https://github.com/azure/azure-sdk-for-python",
  "release_count": 10,
  "dependency_ids": [
    "pypi_azure_common",
    "pypi_azure_mgmt_core",
    "pypi_msrest"
  ]
}
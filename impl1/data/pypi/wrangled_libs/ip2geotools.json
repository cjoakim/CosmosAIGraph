{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "intended audience :: telecommunications industry",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: internet",
    "topic :: scientific/engineering :: information analysis",
    "topic :: utilities"
  ],
  "description": "\n===========\nip2geotools\n===========\n\ndescription\n-----------\n\n``ip2geotools`` is a simple tool for getting geolocation information on given ip address from various geolocation databases. this package provides an api for several geolocation databases.\n\ninstallation\n------------\n\nto install the ``ip2geotools`` module, type:\n\n.. code-block:: bash\n\n    $ pip install ip2geotools\n\nbasic usage\n-----------\n\n.. code-block:: pycon\n\n    >>> from ip2geotools.databases.noncommercial import dbipcity\n    >>> response = dbipcity.get('147.229.2.90', api_key='free')\n    >>> response.ip_address\n    '147.229.2.90'\n    >>> response.city\n    'brno (brno st\u0159ed)'\n    >>> response.region\n    'south moravian'\n    >>> response.country\n    'cz'\n    >>> response.latitude\n    49.1926824\n    >>> response.longitude\n    16.6182105\n    >>> response.to_json()\n    '{\"ip_address\": \"147.229.2.90\", \"city\": \"brno (brno st\u0159ed)\", \"region\": \"south moravian\", \"country\": \"cz\", \"latitude\": 49.1926824, \"longitude\": 16.6182105}'\n    >>> response.to_xml()\n    '<?xml version=\"1.0\" encoding=\"utf-8\" ?><ip_location><ip_address>147.229.2.90</ip_address><city>brno (brno st\u0159ed)</city><region>south moravian</region><country>cz</country><latitude>49.1926824</latitude><longitude>16.6182105</longitude></ip_location>'\n    >>> response.to_csv(',')\n    '147.229.2.90,brno (brno st\u0159ed),south moravian,cz,49.1926824,16.6182105'\n\ncommand-line usage\n------------------\n\nwhen installed, you can invoke ``ip2geotools`` from the command-line:\n\n.. code:: bash\n\n    ip2geotools [-h] -d {dbipcity,hostip,freegeoip,ipstack,maxmindgeolite2city,ip2location,dbipweb,maxmindgeoip2city,ip2locationweb,neustarweb,geobytescitydetails,skyhookcontextacceleratorip,ipinfo,eurek,ipdata}\n                       [--api_key api_key] [--db_path db_path] [-u username]\n                       [-p password] [-f {json,xml,csv-space,csv-tab,inline}] [-v]\n                       ip_address\n\nwhere:\n\n* ``ip2geotools``: is the script when installed in your environment, in development you could use ``python -m ip2geotools`` instead\n\n* ``ip_address``: ip address to be checked\n\n* ``-h``, ``--help``: show help message and exit\n\n* ``-d {dbipcity,hostip,...,ipdata}``: geolocation database to be used (case insesitive)\n\n* ``--api_key api_key``: api key for given geolocation database (if needed)\n\n* ``--db_path db_path``: path to geolocation database file (if needed)\n\n* ``-u username``, ``--username username``: username for accessing given geolocation database (if needed)\n\n* ``-p password``, ``--password password``: password for accessing given geolocation database (if needed)\n\n* ``-f {json,xml,csv-space,csv-tab,inline}``, ``--format {json,xml,csv-space,csv-tab,inline}``: output data format\n\n* ``-v``, ``--version``: show program's version number and exit\n\nexamples:\n\n.. code:: bash\n\n    $ ip2geotools 147.229.2.90 -d dbipcity -f json\n    {\"ip_address\": \"147.229.2.90\", \"city\": \"brno (brno st\u0159ed)\", \"region\": \"south moravian\", \"country\": \"cz\", \"latitude\": 49.1926824, \"longitude\": 16.6182105}\n\nmodels\n------\n\nthis module contains models for the data returned by geolocation databases\nand these models are also used for comparison of given and provided data.\n\n``ip2geotools.models.iplocation``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nmodel for storing location of given ip address.\n\nattributes:\n\n* ``ip_address``: ip address\n* ``city``: city where ip address is located\n* ``region``: region where ip address is located\n* ``country``: country where ip address is located (two letters country code)\n* ``latitude``: latitude where ip address is located\n* ``longitude``: longitude where ip address is located\n\nmethods:\n\n* ``to_json``: returns model data in json format\n* ``to_xml``: returns model data in xml format (root element: ``ip_location``)\n* ``to_csv``: returns model data in csv format separated by given delimiter\n* ``__str__``: internal string representation of model, every single information on new line\n\nexceptions\n----------\n\nthis module provides special exceptions used when accessing data from\nthird-party geolocation databases.\n\n* ``ip2geotools.errors.locationerror``: a generic location error\n* ``ip2geotools.errors.ipaddressnotfounderror``: the ip address was not found\n* ``ip2geotools.errors.permissionrequirederror``: problem with authentication or authorization of the request; check your permission for accessing the service\n* ``ip2geotools.errors.invalidrequesterror``: invalid request\n* ``ip2geotools.errors.invalidresponseerror``: invalid response\n* ``ip2geotools.errors.serviceerror``: response from geolocation database is invalid (not accessible, etc.)\n* ``ip2geotools.errors.limitexceedederror``: limits of geolocation database have been reached\n\ndatabases\n---------\n\nfollowing classes access many different noncommercial and commercial geolocation databases using defined interface.\n\n``ip2geotools.databases.interfaces``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* ``igeoipdatabase``: interface for unified access to the data provided by various geolocation databases\n\n``ip2geotools.databases.noncommercial``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n* ``dbipcity``: https://db-ip.com/api/\n* ``hostip``: http://hostip.info/\n* ``freegeoip``: http://freegeoip.net/ **database is deprecated!**\n* ``ipstack``: https://ipstack.com/\n* ``maxmindgeolite2city``: https://dev.maxmind.com/geoip/geoip2/geolite2/\n* ``ip2location``: https://lite.ip2location.com/database/ip-country-region-city-latitude-longitude\n\n``ip2geotools.databases.commercial``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n* ``dbipweb``: https://db-ip.com/\n* ``maxmindgeoip2city``: https://www.maxmind.com/\n* ``ip2locationweb``: https://www.ip2location.com/\n* ``neustarweb``: https://www.neustar.biz/resources/tools/ip-geolocation-lookup-tool/\n* ``geobytescitydetails``: http://geobytes.com/get-city-details-api/\n* ``skyhookcontextacceleratorip``: http://www.skyhookwireless.com/\n* ``ipinfo``: https://ipinfo.io/\n* ``eurek``: https://www.eurekapi.com/\n* ``ipdata``: https://ipdata.co/\n\nrequirements\n------------\n\nthis code requires python 3.3+ and several other packages listed in ``requirements.txt``.\n\nsupport\n-------\n\nplease report all issues with this code using the `github issue tracker\n<https://github.com/tomas-net/ip2geotools/issues>`_\n\nlicense\n-------\n\n``ip2geotools`` is released under the mit license. see the bundled `license`_ file for details.\n\nauthor\n------\n\n``ip2geotools`` was written by tomas caha <tomas-net at seznam dot cz> / <tomas.caha1 at vut dot cz> at `feec <http://www.feec.vutbr.cz/>`_ `but <https://www.vutbr.cz/>`_.\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "ip2geotools",
  "package_url": "https://pypi.org/project/ip2geotools/",
  "project_url": "https://pypi.org/project/ip2geotools/",
  "project_urls": {
    "Download": "https://github.com/tomas-net/ip2geotools/archive/0.1.6.tar.gz",
    "Homepage": "https://github.com/tomas-net/ip2geotools"
  },
  "release_url": "https://pypi.org/project/ip2geotools/0.1.6/",
  "requires_dist": [
    "astroid (>=2.1.0)",
    "autopep8 (>=1.4.3)",
    "bleach (>=3.0.2)",
    "certifi (>=2018.10.15)",
    "chardet (>=3.0.4)",
    "Click (>=7.0)",
    "cssselect (>=1.0.3)",
    "decorator (>=4.3.0)",
    "dicttoxml (>=1.7.4)",
    "docutils (>=0.14)",
    "future (>=0.17.1)",
    "geocoder (>=1.38.1)",
    "geoip2 (>=2.9.0)",
    "idna (>=2.7)",
    "IP2Location (>=8.0.3)",
    "isort (>=4.3.4)",
    "lazy-object-proxy (>=1.3.1)",
    "lxml (>=4.2.5)",
    "maxminddb (>=1.4.1)",
    "mccabe (>=0.6.1)",
    "packaging (>=18.0)",
    "pip-review (>=1.0)",
    "pkginfo (>=1.4.2)",
    "pycodestyle (>=2.4.0)",
    "Pygments (>=2.3.0)",
    "pylint (>=2.2.0)",
    "pyparsing (>=2.3.0)",
    "pyquery (>=1.4.0)",
    "ratelim (>=0.1.6)",
    "readme-renderer (>=24.0)",
    "requests (>=2.20.1)",
    "requests-toolbelt (>=0.8.0)",
    "selenium (>=3.141.0)",
    "six (>=1.11.0)",
    "tqdm (>=4.28.1)",
    "twine (>=1.12.1)",
    "typed-ast (>=1.1.0)",
    "typing (>=3.6.6)",
    "urllib3 (>=1.24.1)",
    "webencodings (>=0.5.1)",
    "wrapt (>=1.10.11)"
  ],
  "requires_python": "",
  "summary": "simple tool for getting geolocation information on given ip address from various geolocation databases.",
  "version": "0.1.6",
  "releases": [],
  "developers": [
    "tomas-net@seznam.cz",
    "tomas_caha"
  ],
  "kwds": "geolocation ip_location ip2location iplocation ip2locationweb",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_ip2geotools",
  "homepage": "https://github.com/tomas-net/ip2geotools",
  "release_count": 7,
  "dependency_ids": [
    "pypi_astroid",
    "pypi_autopep8",
    "pypi_bleach",
    "pypi_certifi",
    "pypi_chardet",
    "pypi_click",
    "pypi_cssselect",
    "pypi_decorator",
    "pypi_dicttoxml",
    "pypi_docutils",
    "pypi_future",
    "pypi_geocoder",
    "pypi_geoip2",
    "pypi_idna",
    "pypi_ip2location",
    "pypi_isort",
    "pypi_lazy_object_proxy",
    "pypi_lxml",
    "pypi_maxminddb",
    "pypi_mccabe",
    "pypi_packaging",
    "pypi_pip_review",
    "pypi_pkginfo",
    "pypi_pycodestyle",
    "pypi_pygments",
    "pypi_pylint",
    "pypi_pyparsing",
    "pypi_pyquery",
    "pypi_ratelim",
    "pypi_readme_renderer",
    "pypi_requests",
    "pypi_requests_toolbelt",
    "pypi_selenium",
    "pypi_six",
    "pypi_tqdm",
    "pypi_twine",
    "pypi_typed_ast",
    "pypi_typing",
    "pypi_urllib3",
    "pypi_webencodings",
    "pypi_wrapt"
  ]
}
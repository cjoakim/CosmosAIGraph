{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: communications :: chat",
    "topic :: internet :: www/http :: dynamic content",
    "topic :: printing",
    "topic :: text processing :: general",
    "typing :: typed"
  ],
  "description": "flag\n====\n\n[![foodemoji on pypi](https://img.shields.io/pypi/v/emoji-country-flag.svg)](https://pypi.python.org/pypi/emoji-country-flag)\n[![python versions](https://img.shields.io/pypi/pyversions/emoji-country-flag.svg)](https://pypi.python.org/pypi/emoji-country-flag)\n[![coverage status](https://coveralls.io/repos/github/cvzi/flag/badge.svg?branch=master)](https://coveralls.io/github/cvzi/flag?branch=master)\n[![build status](https://travis-ci.com/cvzi/flag.svg?branch=master)](https://travis-ci.com/cvzi/flag)\n[![codacy badge](https://api.codacy.com/project/badge/grade/e897c2f701ee44f5aa36457d0ab1a84a)](https://app.codacy.com/app/cvzi/flag?utm_source=github.com&utm_medium=referral&utm_content=cvzi/flag&utm_campaign=badge_grade_dashboard)\n[![maintainability](https://api.codeclimate.com/v1/badges/cf1f88720896db4d1b0a/maintainability)](https://codeclimate.com/github/cvzi/flag/maintainability)\n[![quality gate status](https://sonarcloud.io/api/project_badges/measure?project=cvzi_flag&metric=alert_status)](https://sonarcloud.io/dashboard?id=cvzi_flag)\n\nflag emoji for python.  \nconverts flag emoji to ascii and other way round.\n\nthis is based on [http://schinckel.net/2015/10/29/unicode-flags-in-python/](http://web.archive.org/web/20180425063617/https://schinckel.net/2015/10/29/unicode-flags-in-python/) by [schinckel](https://github.com/schinckel/)\n\nhow it works\n------------\n\nall the flag emoji are actually composed of two unicode letters. these are the 26 [regional indicator symbols](https://en.wikipedia.org/wiki/regional_indicator_symbol).\n\nalone they look like this:  \n\ud83c\udde6 \ud83c\udde7 \ud83c\udde8 \ud83c\udde9 \ud83c\uddea \ud83c\uddeb \ud83c\uddec \ud83c\udded \ud83c\uddee \ud83c\uddef \ud83c\uddf0 \ud83c\uddf1 \ud83c\uddf2 \ud83c\uddf3 \ud83c\uddf4 \ud83c\uddf5 \ud83c\uddf6 \ud83c\uddf7 \ud83c\uddf8 \ud83c\uddf9 \ud83c\uddfa \ud83c\uddfb \ud83c\uddfc \ud83c\uddfd \ud83c\uddfe \ud83c\uddff\n\nif you pair them up according to iso 3166 some browsers and phones will display a flag.  \nfor example tw is taiwan: \ud83c\uddf9 + \ud83c\uddfc = \ud83c\uddf9\ud83c\uddfc\n\nso, to encode an ascii code like `:tw:` to \ud83c\uddf9\ud83c\uddfc, we just need to convert the ascii **t** and **w** to the corresponding regional indicator symbols \ud83c\uddf9 and \ud83c\uddfc.  \nto reverse it, we translate the regional indicator symbols back to ascii letters.\n\nexample\n-------\n\n```python\n    >>> import flag\n    \n    >>> flag.flag(\"il\")\n    '\ud83c\uddee\ud83c\uddf1'\n    \n    >>> flag.flag(\"gbeng\")\n    '\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f'\n    \n    >>> flag.flagize(\"flag of israel :il:\")\n    'flag of israel \ud83c\uddee\ud83c\uddf1'\n    \n    >>> flag.dflagize(\"flag of israel \ud83c\uddee\ud83c\uddf1\")\n    'flag of israel :il:'\n    \n    >>> flag.flagize(\"england :gb-eng: is part of the uk :gb:\", subregions=true)\n    'england \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f is part of the uk \ud83c\uddec\ud83c\udde7'\n    \n    >>> flag.dflagize(\"england \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f is part of the uk \ud83c\uddec\ud83c\udde7\", subregions=true)\n    'england :gb-eng: is part of the uk :gb:'\n```\n\ninstall\n-------\n\n`pip install emoji-country-flag`\n\nsee: [https://pypi.org/project/emoji-country-flag/](https://pypi.org/project/emoji-country-flag/)\n\npython 3.7 or higher is required for the latest release.\nthe last release for python 2.7, 3.4 and 3.5 was [v1.2.4](https://github.com/cvzi/flag/releases/tag/v1.2.4).\n\ndocumentation\n-------------\n\n[![documentation status](https://readthedocs.org/projects/flag/badge/?version=latest)](https://flag.readthedocs.io/en/latest/?badge=latest)\n\ndocumentation at [https://flag.readthedocs.io](https://flag.readthedocs.io)\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "emoji-country-flag",
  "package_url": "https://pypi.org/project/emoji-country-flag/",
  "project_url": "https://pypi.org/project/emoji-country-flag/",
  "project_urls": {
    "documentation": "https://flag.readthedocs.io/",
    "downloads": "https://pypi.org/project/emoji-country-flag/",
    "homepage": "https://github.com/cvzi/flag",
    "repository": "https://github.com/cvzi/flag"
  },
  "release_url": "https://pypi.org/project/emoji-country-flag/1.3.2/",
  "requires_dist": [
    "pytest ; extra == 'test'",
    "emoji ; extra == 'test'",
    "setuptools ; extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "en/decode unicode country flags emoji",
  "version": "1.3.2",
  "releases": [],
  "developers": [
    "cuzi@openmail.cc"
  ],
  "kwds": "flags flag flagize cvzi_flag symbols",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_emoji_country_flag",
  "homepage": "",
  "release_count": 11,
  "dependency_ids": [
    "pypi_emoji",
    "pypi_pytest",
    "pypi_setuptools"
  ]
}
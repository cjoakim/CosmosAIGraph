{
  "classifiers": [
    "intended audience :: developers",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.7"
  ],
  "description": "gslides: creating charts in google slides\n=========================================\n\n``gslides`` is a python package that helps analysts turn ``pandas`` dataframes into google slides & sheets charts by configuring and executing google api calls.\n\nthe package provides a set of classes that enable the user full control over the creation of new visualizations through configurable parameters while eliminating the complexity of working directly with the google api.\n\nquick installation\n------------------\n\n.. code-block:: bash\n\n  pip install gslides\n\n\nusage\n------------------\n\nbelow is an example that only showcases a simple workflow. full discussion around features can be found in the docs.\n\n**1. initialize package and connection**\n\n.. code-block:: python\n\n  import gslides\n  from gslides import (\n      frame,\n      presentation,\n      spreadsheet,\n      table,\n      series, chart\n  )\n  from sklearn import datasets\n  gslides.initialize_credentials(creds) #bringyourowncredentials\n\n\n**2. create a presentation**\n\n.. code-block:: python\n\n  prs = presentation.create(name = 'demo pres')\n\n**3. create a spreadsheet**\n\n.. code-block:: python\n\n  spr = spreadsheet.create(\n      title = 'demo spreadsheet',\n      sheet_names = ['demo sheet']\n  )\n\n**4. load the data to the spreadsheet**\n\n.. code-block:: python\n\n  plt_df = #iris data\n  frame = frame.create(df = plt_df,\n            spreadsheet_id = spr.spreadsheet_id,\n            sheet_id = spr.sheet_names['demo sheet'],\n            sheet_name = 'demo sheet',\n            overwrite_data = true\n  )\n\n**5. create a scatterplot**\n\n.. code-block:: python\n\n  sc = series.scatter(series_columns = target_names)\n  ch = chart(\n      data = frame.data,\n      x_axis_column = 'sepal length (cm)',\n      series = [sc],\n      title = f'demo chart',\n      x_axis_label = 'sepal length',\n      y_axis_label = 'petal width',\n      legend_position = 'right_legend',\n  )\n\n**6. create a table**\n\n.. code-block:: python\n\n  tbl = table(\n      data = plt_df.head()\n  )\n\n**7. create a slide with the scatterplot**\n\n.. code-block:: python\n\n  prs.add_slide(\n    objects = [ch, tbl],\n    layout = (1,2),\n    title = \"investigation into fischer's iris dataset\",\n    notes = \"data from 1936\"\n  )\n\n**8. preview the slide you have just created in your notebook**\n\n.. code-block:: python\n\n  prs.show_slide(prs.slide_ids[-1])\n\n.. image:: img/usage.png\n\n``gslides`` also supports basic templating functionality. see this `notebook <https://github.com/michael-gracie/gslides/blob/main/notebooks/usage.ipynb>`_ for an example.\n\nadvanced usage\n----------------------\n\nfind this `jupyter notebook <https://github.com/michael-gracie/gslides/blob/main/notebooks/advanced_usage.ipynb>`_ detailing advanced usage of ``gslides``.\n\ndeveloper instructions\n----------------------\n\nto install the package with development dependencies run the command\n\n.. code-block:: bash\n\n  pip install -e .[dev]\n\nthis will enable the following\n\n- unit testing using `pytest <https://docs.pytest.org/en/latest/>`_\n  - run ``pytest`` in root package directory\n- pre commit hooks ensuring codes style using `black <https://github.com/ambv/black>`_ and `isort <https://github.com/pre-commit/mirrors-isort>`_\n- sphinx documentation\n  - to create sphinx run ``make html`` in package docs folder\n  - to view locally run ``python -m http.server``\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "gslides",
  "package_url": "https://pypi.org/project/gslides/",
  "project_url": "https://pypi.org/project/gslides/",
  "project_urls": {
    "Bug Tracker": "https://michael-gracie.github.io/gslides//issues",
    "Documentation": "https://github.com/pages/michael-gracie/gslides/build/html/index.html",
    "Homepage": "https://github.com/michael-gracie/gslides",
    "Source Code": "https://michael-gracie.github.io/gslides/"
  },
  "release_url": "https://pypi.org/project/gslides/0.1.1/",
  "requires_dist": [
    "pylint ; extra == 'qa'",
    "pre-commit ; extra == 'qa'",
    "google-api-core (>=1.26.2)",
    "google-api-python-client (>=2.0.2)",
    "google-auth (>=1.28.0)",
    "google-auth-httplib2 (>=0.1.0)",
    "google-auth-oauthlib (>=0.4.3)",
    "googleapis-common-protos (>=1.53.0)",
    "tabulate (>=0.8.9)",
    "pandas (>=1.1.5)",
    "numpy (>=1.19.5)",
    "PyYAML (>=5.4.1)",
    "requests (>=2.22.0)",
    "ipython (>=7.16.1)",
    "coverage ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "pytest-pylint ; extra == 'dev'",
    "mypy ; extra == 'dev'",
    "sphinx ; extra == 'dev'",
    "sphinx-rtd-theme ; extra == 'dev'",
    "furo ; extra == 'dev'",
    "pylint ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "black ; extra == 'dev'",
    "isort ; extra == 'dev'",
    "check-manifest ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "sphinx ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "furo ; extra == 'docs'",
    "black ; extra == 'qa'",
    "isort ; extra == 'qa'",
    "mypy ; extra == 'qa'",
    "check-manifest ; extra == 'qa'",
    "flake8 ; extra == 'qa'",
    "coverage ; extra == 'test'",
    "pytest ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytest-pylint ; extra == 'test'",
    "mypy ; extra == 'test'"
  ],
  "requires_python": ">=3.7.0",
  "summary": "wrapper around google apis to create charts in google slides with python",
  "version": "0.1.1",
  "releases": [],
  "developers": [
    "12mpggslides@gmail.com",
    "michael_gracie"
  ],
  "kwds": "gslides charts add_slide slides show_slide",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_gslides",
  "homepage": "https://github.com/michael-gracie/gslides",
  "release_count": 2,
  "dependency_ids": [
    "pypi_black",
    "pypi_check_manifest",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_furo",
    "pypi_google_api_core",
    "pypi_google_api_python_client",
    "pypi_google_auth",
    "pypi_google_auth_httplib2",
    "pypi_google_auth_oauthlib",
    "pypi_googleapis_common_protos",
    "pypi_ipython",
    "pypi_isort",
    "pypi_mypy",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pre_commit",
    "pypi_pylint",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_pylint",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_tabulate"
  ]
}
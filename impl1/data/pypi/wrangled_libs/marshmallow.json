{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "********************************************\nmarshmallow: simplified object serialization\n********************************************\n\n.. image:: https://badgen.net/pypi/v/marshmallow\n    :target: https://pypi.org/project/marshmallow/\n    :alt: latest version\n\n.. image:: https://github.com/marshmallow-code/marshmallow/actions/workflows/build-release.yml/badge.svg\n    :target: https://github.com/marshmallow-code/marshmallow/actions/workflows/build-release.yml\n    :alt: build status\n\n.. image:: https://results.pre-commit.ci/badge/github/marshmallow-code/marshmallow/dev.svg\n   :target: https://results.pre-commit.ci/latest/github/marshmallow-code/marshmallow/dev\n   :alt: pre-commit.ci status\n\n.. image:: https://readthedocs.org/projects/marshmallow/badge/\n   :target: https://marshmallow.readthedocs.io/\n   :alt: documentation\n   \n.. image:: https://badgen.net/badge/code%20style/black/000\n    :target: https://github.com/ambv/black\n    :alt: code style: black\n\n\n**marshmallow** is an orm/odm/framework-agnostic library for converting complex datatypes, such as objects, to and from native python datatypes.\n\n.. code-block:: python\n\n    from datetime import date\n    from pprint import pprint\n\n    from marshmallow import schema, fields\n\n\n    class artistschema(schema):\n        name = fields.str()\n\n\n    class albumschema(schema):\n        title = fields.str()\n        release_date = fields.date()\n        artist = fields.nested(artistschema())\n\n\n    bowie = dict(name=\"david bowie\")\n    album = dict(artist=bowie, title=\"hunky dory\", release_date=date(1971, 12, 17))\n\n    schema = albumschema()\n    result = schema.dump(album)\n    pprint(result, indent=2)\n    # { 'artist': {'name': 'david bowie'},\n    #   'release_date': '1971-12-17',\n    #   'title': 'hunky dory'}\n\n\nin short, marshmallow schemas can be used to:\n\n- **validate** input data.\n- **deserialize** input data to app-level objects.\n- **serialize** app-level objects to primitive python types. the serialized objects can then be rendered to standard formats such as json for use in an http api.\n\nget it now\n==========\n\n::\n\n    $ pip install -u marshmallow\n\n\ndocumentation\n=============\n\nfull documentation is available at https://marshmallow.readthedocs.io/ .\n\nrequirements\n============\n\n- python >= 3.8\n\necosystem\n=========\n\na list of marshmallow-related libraries can be found at the github wiki here:\n\nhttps://github.com/marshmallow-code/marshmallow/wiki/ecosystem\n\ncredits\n=======\n\ncontributors\n------------\n\nthis project exists thanks to all the people who contribute.\n\n**you're highly encouraged to participate in marshmallow's development.**\ncheck out the `contributing guidelines <https://marshmallow.readthedocs.io/en/latest/contributing.html>`_ to see how you can help.\n\nthank you to all who have already contributed to marshmallow!\n\n.. image:: https://opencollective.com/marshmallow/contributors.svg?width=890&button=false\n    :target: https://marshmallow.readthedocs.io/en/latest/authors.html\n    :alt: contributors\n\nbackers\n-------\n\nif you find marshmallow useful, please consider supporting the team with\na donation. your donation helps move marshmallow forward.\n\nthank you to all our backers! [`become a backer`_]\n\n.. _`become a backer`: https://opencollective.com/marshmallow#backer\n\n.. image:: https://opencollective.com/marshmallow/backers.svg?width=890\n    :target: https://opencollective.com/marshmallow#backers\n    :alt: backers\n\nsponsors\n--------\n\nsupport this project by becoming a sponsor (or ask your company to support this project by becoming a sponsor).\nyour logo will show up here with a link to your website. [`become a sponsor`_]\n\n.. _`become a sponsor`: https://opencollective.com/marshmallow#sponsor\n\n.. image:: https://opencollective.com/marshmallow/sponsor/0/avatar.svg\n    :target: https://opencollective.com/marshmallow/sponsor/0/website\n    :alt: sponsors\n\n.. image:: https://opencollective.com/static/images/become_sponsor.svg\n    :target: https://opencollective.com/marshmallow#sponsor\n    :alt: become a sponsor\n\n\nprofessional support\n====================\n\nprofessionally-supported marshmallow is now available through the\n`tidelift subscription <https://tidelift.com/subscription/pkg/pypi-marshmallow?utm_source=pypi-marshmallow&utm_medium=readme>`_.\n\ntidelift gives software development teams a single source for purchasing and maintaining their software,\nwith professional-grade assurances from the experts who know it best,\nwhile seamlessly integrating with existing tools. [`get professional support`_]\n\n.. _`get professional support`: https://tidelift.com/subscription/pkg/pypi-marshmallow?utm_source=marshmallow&utm_medium=referral&utm_campaign=github\n\n.. image:: https://user-images.githubusercontent.com/2379650/45126032-50b69880-b13f-11e8-9c2c-abd16c433495.png\n    :target: https://tidelift.com/subscription/pkg/pypi-marshmallow?utm_source=pypi-marshmallow&utm_medium=readme\n    :alt: get supported marshmallow with tidelift\n\n\nproject links\n=============\n\n- docs: https://marshmallow.readthedocs.io/\n- changelog: https://marshmallow.readthedocs.io/en/latest/changelog.html\n- contributing guidelines: https://marshmallow.readthedocs.io/en/latest/contributing.html\n- pypi: https://pypi.python.org/pypi/marshmallow\n- issues: https://github.com/marshmallow-code/marshmallow/issues\n- donate: https://opencollective.com/marshmallow\n\nlicense\n=======\n\nmit licensed. see the bundled `license <https://github.com/marshmallow-code/marshmallow/blob/dev/license>`_ file for more details.\n",
  "docs_url": null,
  "keywords": "serialization,rest,json,api,marshal,marshalling,deserialization,validation,schema",
  "license": "mit",
  "name": "marshmallow",
  "package_url": "https://pypi.org/project/marshmallow/",
  "project_url": "https://pypi.org/project/marshmallow/",
  "project_urls": {
    "Changelog": "https://marshmallow.readthedocs.io/en/latest/changelog.html",
    "Funding": "https://opencollective.com/marshmallow",
    "Homepage": "https://github.com/marshmallow-code/marshmallow",
    "Issues": "https://github.com/marshmallow-code/marshmallow/issues",
    "Tidelift": "https://tidelift.com/subscription/pkg/pypi-marshmallow?utm_source=pypi-marshmallow&utm_medium=pypi"
  },
  "release_url": "https://pypi.org/project/marshmallow/3.20.1/",
  "requires_dist": [
    "packaging (>=17.0)",
    "pytest ; extra == 'dev'",
    "pytz ; extra == 'dev'",
    "simplejson ; extra == 'dev'",
    "mypy (==1.4.1) ; extra == 'dev'",
    "flake8 (==6.0.0) ; extra == 'dev'",
    "flake8-bugbear (==23.7.10) ; extra == 'dev'",
    "pre-commit (<4.0,>=2.4) ; extra == 'dev'",
    "tox ; extra == 'dev'",
    "sphinx (==7.0.1) ; extra == 'docs'",
    "sphinx-issues (==3.0.1) ; extra == 'docs'",
    "alabaster (==0.7.13) ; extra == 'docs'",
    "sphinx-version-warning (==1.1.2) ; extra == 'docs'",
    "autodocsumm (==0.2.11) ; extra == 'docs'",
    "mypy (==1.4.1) ; extra == 'lint'",
    "flake8 (==6.0.0) ; extra == 'lint'",
    "flake8-bugbear (==23.7.10) ; extra == 'lint'",
    "pre-commit (<4.0,>=2.4) ; extra == 'lint'",
    "pytest ; extra == 'tests'",
    "pytz ; extra == 'tests'",
    "simplejson ; extra == 'tests'"
  ],
  "requires_python": ">=3.8",
  "summary": "a lightweight library for converting complex datatypes to and from native python datatypes.",
  "version": "3.20.1",
  "releases": [],
  "developers": [
    "sloria1@gmail.com",
    "steven_loria"
  ],
  "kwds": "serialized serialize serialization documentation deserialize",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_marshmallow",
  "homepage": "https://github.com/marshmallow-code/marshmallow",
  "release_count": 171,
  "dependency_ids": [
    "pypi_alabaster",
    "pypi_autodocsumm",
    "pypi_flake8",
    "pypi_flake8_bugbear",
    "pypi_mypy",
    "pypi_packaging",
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_pytz",
    "pypi_simplejson",
    "pypi_sphinx",
    "pypi_sphinx_issues",
    "pypi_sphinx_version_warning",
    "pypi_tox"
  ]
}
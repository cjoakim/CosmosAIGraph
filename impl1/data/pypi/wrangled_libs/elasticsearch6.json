{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.2",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "python elasticsearch client\n===========================\n\nofficial low-level client for elasticsearch. its goal is to provide common\nground for all elasticsearch-related code in python; because of this it tries\nto be opinion-free and very extendable.\n\nfor a more high level client library with more limited scope, have a look at\n`elasticsearch-dsl`_ - a more pythonic library sitting on top of\n``elasticsearch-py``.\n\nit provides a more convenient and idiomatic way to write and manipulate\n`queries`_. it stays close to the elasticsearch json dsl, mirroring its\nterminology and structure while exposing the whole range of the dsl from python\neither directly using defined classes or a queryset-like expressions.\n\nit also provides an optional `persistence layer`_ for working with documents as\npython objects in an orm-like fashion: defining mappings, retrieving and saving\ndocuments, wrapping the document data in user-defined classes.\n\n.. _elasticsearch-dsl: https://elasticsearch-dsl.readthedocs.io/\n.. _queries: https://elasticsearch-dsl.readthedocs.io/en/latest/search_dsl.html\n.. _persistence layer: https://elasticsearch-dsl.readthedocs.io/en/latest/persistence.html#doctype\n\ncompatibility\n-------------\n\nthe library is compatible with all elasticsearch versions since ``0.90.x`` but you\n**have to use a matching major version**:\n\nfor **elasticsearch 6.0** and later, use the major version 6 (``6.x.y``) of the\nlibrary.\n\nfor **elasticsearch 5.0** and later, use the major version 5 (``5.x.y``) of the\nlibrary.\n\nfor **elasticsearch 2.0** and later, use the major version 2 (``2.x.y``) of the\nlibrary, and so on.\n\nthe recommended way to set your requirements in your `setup.py` or\n`requirements.txt` is::\n\n    # elasticsearch 6.x\n    elasticsearch>=6.0.0,<7.0.0\n\n    # elasticsearch 5.x\n    elasticsearch>=5.0.0,<6.0.0\n\n    # elasticsearch 2.x\n    elasticsearch>=2.0.0,<3.0.0\n\nif you have a need to have multiple versions installed at the same time older\nversions are also released as ``elasticsearch2``, ``elasticsearch5`` and ``elasticsearch6``.\n\ninstallation\n------------\n\ninstall the ``elasticsearch`` package for elasticsearch 6.x with `pip\n<https://pypi.python.org/pypi/elasticsearch>`_::\n\n    pip install \"elasticsearch>=6,<7\"\n\n\nexample use\n-----------\n\nsimple use-case::\n\n    >>> from datetime import datetime\n    >>> from elasticsearch import elasticsearch\n\n    # by default we connect to localhost:9200\n    >>> es = elasticsearch()\n\n    # create an index in elasticsearch, ignore status code 400 (index already exists)\n    >>> es.indices.create(index='my-index', ignore=400)\n    {u'acknowledged': true}\n\n    # datetimes will be serialized\n    >>> es.index(index=\"my-index\", doc_type=\"test-type\", id=42, body={\"any\": \"data\", \"timestamp\": datetime.now()})\n    {u'_id': u'42', u'_index': u'my-index', u'_type': u'test-type', u'_version': 1, u'ok': true}\n\n    # but not deserialized\n    >>> es.get(index=\"my-index\", doc_type=\"test-type\", id=42)['_source']\n    {u'any': u'data', u'timestamp': u'2013-05-12t19:45:31.804229'}\n\n`full documentation`_.\n\n.. _full documentation: https://elasticsearch-py.readthedocs.io/\n\nelastic cloud (and ssl) use-case::\n\n    >>> from elasticsearch import elasticsearch\n    >>> es = elasticsearch(\"https://elasticsearch.url:port\", http_auth=('elastic','yourpassword'))\n    >>> es.info()\n\nusing ssl context with a self-signed cert use-case::\n\n    >>> from elasticsearch import elasticsearch\n    >>> from ssl import create_default_context\n\n    >>> context = create_default_context(cafile=\"path/to/cafile.pem\")\n    >>> es = elasticsearch(\"https://elasticsearch.url:port\", ssl_context=context, http_auth=('elastic','yourpassword'))\n    >>> es.info()\n\n\n\nfeatures\n--------\n\nthe client's features include:\n\n * translating basic python data types to and from json (datetimes are not\n   decoded for performance reasons)\n * configurable automatic discovery of cluster nodes\n * persistent connections\n * load balancing (with pluggable selection strategy) across all available nodes\n * failed connection penalization (time based - failed connections won't be\n   retried until a timeout is reached)\n * support for ssl and http authentication\n * thread safety\n * pluggable architecture\n\n\nlicense\n-------\n\ncopyright 2017 elasticsearch\n\nlicensed under the apache license, version 2.0 (the \"license\");\nyou may not use this file except in compliance with the license.\nyou may obtain a copy of the license at\n\n    http://www.apache.org/licenses/license-2.0\n\nunless required by applicable law or agreed to in writing, software\ndistributed under the license is distributed on an \"as is\" basis,\nwithout warranties or conditions of any kind, either express or implied.\nsee the license for the specific language governing permissions and\nlimitations under the license.\n\nbuild status\n------------\n.. image:: https://readthedocs.org/projects/elasticsearch-py/badge/?version=latest&style=flat\n   :target: https://elasticsearch-py.readthedocs.io/en/master/\n\n.. image:: https://clients-ci.elastic.co/job/elastic+elasticsearch-py+master/badge/icon\n   :target: https://clients-ci.elastic.co/job/elastic+elasticsearch-py+master/\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "elasticsearch6",
  "package_url": "https://pypi.org/project/elasticsearch6/",
  "project_url": "https://pypi.org/project/elasticsearch6/",
  "project_urls": {
    "Homepage": "https://github.com/elastic/elasticsearch-py"
  },
  "release_url": "https://pypi.org/project/elasticsearch6/6.8.2/",
  "requires_dist": [
    "urllib3 (>=1.21.1)",
    "requests (<3.0.0,>=2.0.0) ; extra == 'develop'",
    "nose ; extra == 'develop'",
    "coverage ; extra == 'develop'",
    "mock ; extra == 'develop'",
    "pyyaml ; extra == 'develop'",
    "nosexcover ; extra == 'develop'",
    "numpy ; extra == 'develop'",
    "pandas ; extra == 'develop'",
    "sphinx (<1.7) ; extra == 'develop'",
    "sphinx-rtd-theme ; extra == 'develop'",
    "requests (<3.0.0,>=2.4.0) ; extra == 'requests'"
  ],
  "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4",
  "summary": "python client for elasticsearch",
  "version": "6.8.2",
  "releases": [],
  "developers": [
    "honza.kral@gmail.com",
    "nick@nicklang.com",
    "seth.larson@elastic.co",
    "seth_michael_larson"
  ],
  "kwds": "elasticsearch _elasticsearch elasticsearch2 elasticsearch5 elasticsearch6",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_elasticsearch6",
  "homepage": "https://github.com/elastic/elasticsearch-py",
  "release_count": 5,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_mock",
    "pypi_nose",
    "pypi_nosexcover",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_urllib3"
  ]
}
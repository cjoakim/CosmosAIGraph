{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet",
    "topic :: internet :: www/http",
    "topic :: text processing :: markup :: html"
  ],
  "description": ".. image:: docs/logo.png\n  :alt: selectolax logo\n\n-------------------------\n\n.. image:: https://img.shields.io/pypi/v/selectolax.svg\n        :target: https://pypi.python.org/pypi/selectolax\n\na fast html5 parser with css selectors using `modest <https://github.com/lexborisov/modest/>`_ and\n`lexbor <https://github.com/lexbor/lexbor>`_ engines.\n\n\ninstallation\n------------\nfrom pypi using pip:\n\n.. code-block:: bash\n\n        pip install selectolax\n\nif installation fails due to compilation errors, you may need to install `cython <https://github.com/cython/cython>`_:\n\n.. code-block:: bash\n\n        pip install selectolax[cython]\n\nthis usually happens when you try to install an outdated version of selectolax on a newer version of python.\n\n\ndevelopment version from github:\n\n.. code-block:: bash\n\n        git clone --recursive  https://github.com/rushter/selectolax\n        cd selectolax\n        pip install -r requirements_dev.txt\n        python setup.py install\n\nhow to compile selectolax while developing:\n\n.. code-block:: bash\n\n    make clean\n    make dev\n\nbasic examples\n--------------\n\n.. code:: python\n\n    in [1]: from selectolax.parser import htmlparser\n       ...:\n       ...: html = \"\"\"\n       ...: <h1 id=\"title\" data-updated=\"20201101\">hi there</h1>\n       ...: <div class=\"post\">lorem ipsum is simply dummy text of the printing and typesetting industry. </div>\n       ...: <div class=\"post\">lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>\n       ...: \"\"\"\n       ...: tree = htmlparser(html)\n\n    in [2]: tree.css_first('h1#title').text()\n    out[2]: 'hi there'\n\n    in [3]: tree.css_first('h1#title').attributes\n    out[3]: {'id': 'title', 'data-updated': '20201101'}\n\n    in [4]: [node.text() for node in tree.css('.post')]\n    out[4]:\n    ['lorem ipsum is simply dummy text of the printing and typesetting industry. ',\n     'lorem ipsum dolor sit amet, consectetur adipiscing elit.']\n\n.. code:: python\n\n    in [1]: html = \"<div><p id=p1><p id=p2><p id=p3><a>link</a><p id=p4><p id=p5>text<p id=p6></div>\"\n       ...: selector = \"div > :nth-child(2n+1):not(:has(a))\"\n\n    in [2]: for node in htmlparser(html).css(selector):\n       ...:     print(node.attributes, node.text(), node.tag)\n       ...:     print(node.parent.tag)\n       ...:     print(node.html)\n       ...:\n    {'id': 'p1'}  p\n    div\n    <p id=\"p1\"></p>\n    {'id': 'p5'} text p\n    div\n    <p id=\"p5\">text</p>\n\n\n* `detailed overview <https://github.com/rushter/selectolax/blob/master/examples/walkthrough.ipynb>`_\n\navailable backends\n------------------\n\nselectolax supports two backends: ``modest`` and ``lexbor``. by default, all examples use the modest backend.\nmost of the features between backends are almost identical, but there are still some differences.\n\nto use ``lexbor``, just import the parser and use it in the similar way to the `htmlparser`.\n\n.. code:: python\n\n    in [1]: from selectolax.lexbor import lexborhtmlparser\n\n    in [2]: html = \"\"\"\n       ...: <title>hi there</title>\n       ...: <div id=\"updated\">2021-08-15</div>\n       ...: \"\"\"\n\n    in [3]: parser = lexborhtmlparser(html)\n    in [4]: parser.root.css_first(\"#updated\").text()\n    out[4]: '2021-08-15'\n\n\nsimple benchmark\n----------------\n\n* extract title, links, scripts and a meta tag from main pages of top 754 domains. see ``examples/benchmark.py`` for more information.\n\n============================ ===========\npackage                       time\n============================ ===========\nbeautiful soup (html.parser)  61.02 sec.\nlxml                          9.09 sec.\nhtml5_parser                  16.10 sec.\nselectolax (modest)           2.94 sec.\nselectolax (lexbor)           2.39 sec.\n============================ ===========\n\nlinks\n-----\n\n*  `selectolax api reference <http://selectolax.readthedocs.io/en/latest/parser.html>`_\n*  `video introduction to web scraping using selectolax <https://youtu.be/hprsfppuuze>`_\n*  `detailed overview <https://github.com/rushter/selectolax/blob/master/examples/walkthrough.ipynb>`_\n*  `modest introduction <https://lexborisov.github.io/modest/>`_\n*  `modest benchmark <http://lexborisov.github.io/benchmark-html-persers/>`_\n*  `python benchmark <https://rushter.com/blog/python-fast-html-parser/>`_\n*  `another python benchmark <https://www.peterbe.com/plog/selectolax-or-pyquery>`_\n\nlicense\n-------\n\n* modest engine \u2014 `lgpl2.1 <https://github.com/lexborisov/modest/blob/master/license>`_\n* selectolax - `mit <https://github.com/rushter/selectolax/blob/master/license>`_\n",
  "docs_url": null,
  "keywords": "selectolax",
  "license": "mit license",
  "name": "selectolax",
  "package_url": "https://pypi.org/project/selectolax/",
  "project_url": "https://pypi.org/project/selectolax/",
  "project_urls": {
    "Homepage": "https://github.com/rushter/selectolax",
    "Source code": "https://github.com/rushter/selectolax"
  },
  "release_url": "https://pypi.org/project/selectolax/0.3.17/",
  "requires_dist": [
    "Cython ==0.29.36 ; extra == 'cython'"
  ],
  "requires_python": "",
  "summary": "fast html5 parser with css selectors.",
  "version": "0.3.17",
  "releases": [],
  "developers": [
    "artem_golubin",
    "me@rushter.com"
  ],
  "kwds": "selectolax lexbor lexborhtmlparser lexborisov pypi",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_selectolax",
  "homepage": "https://github.com/rushter/selectolax",
  "release_count": 38,
  "dependency_ids": [
    "pypi_cython"
  ]
}
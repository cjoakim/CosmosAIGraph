{
  "classifiers": [
    "environment :: web environment",
    "framework :: asyncio",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "memcached client for asyncio\n============================\n\nasyncio (pep 3156) library to work with memcached.\n\n\ngetting started\n---------------\n\nthe api looks very similar to the other memcache clients:\n\n.. code:: python\n\n    import asyncio\n    import aiomcache\n\n    async def hello_aiomcache():\n        mc = aiomcache.client(\"127.0.0.1\", 11211)\n        await mc.set(b\"some_key\", b\"some value\")\n        value = await mc.get(b\"some_key\")\n        print(value)\n        values = await mc.multi_get(b\"some_key\", b\"other_key\")\n        print(values)\n        await mc.delete(b\"another_key\")\n\n    asyncio.run(hello_aiomcache())\n\n\nversion 0.8 introduces `flagclient` which allows registering callbacks to\nset or process flags.  see `examples/simple_with_flag_handler.py`\n\n=======\nchanges\n=======\n\n.. towncrier release notes start\n\n0.8.1 (2023-02-10)\n==================\n- add ``conn_args`` to ``client`` to allow tls and other options when connecting to memcache.\n\n0.8.0 (2022-12-11)\n==================\n- add ``flagclient`` to support memcached flags.\n- fix type annotations for ``@acquire``.\n- fix rare exception caused by memcached server dying in middle of operation.\n- fix get method to not use cas.\n\n0.7.0 (2022-01-20)\n=====================\n\n- added support for python 3.10\n- added support for non-ascii keys\n- added type annotations\n\n0.6.0 (2017-12-03)\n==================\n\n- drop python 3.3 support\n\n0.5.2 (2017-05-27)\n==================\n\n- fix issue with pool concurrency and task cancellation\n\n0.5.1 (2017-03-08)\n==================\n\n- added manifest.in\n\n0.5.0 (2017-02-08)\n==================\n\n- added gets and cas commands\n\n0.4.0 (2016-09-26)\n==================\n\n- make max_size strict #14\n\n0.3.0 (2016-03-11)\n==================\n\n- dockerize tests\n\n- reuse memcached connections in client pool #4\n\n- fix stats parse to compatible more mc class software #5\n\n0.2 (2015-12-15)\n================\n\n- make the library python 3.5 compatible\n\n0.1 (2014-06-18)\n================\n\n- initial release\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "aiomcache",
  "package_url": "https://pypi.org/project/aiomcache/",
  "project_url": "https://pypi.org/project/aiomcache/",
  "project_urls": {
    "Homepage": "https://github.com/aio-libs/aiomcache/"
  },
  "release_url": "https://pypi.org/project/aiomcache/0.8.1/",
  "requires_dist": [
    "typing-extensions (>=4) ; python_version < \"3.11\""
  ],
  "requires_python": ">=3.7",
  "summary": "minimal pure python memcached client",
  "version": "0.8.1",
  "releases": [],
  "developers": [
    "aio-libs@googlegroups.com",
    "andrew.svetlov@gmail.com",
    "fafhrd91@gmail.com",
    "nikolay_kim"
  ],
  "kwds": "memcache memcached asyncio async aiomcache",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_aiomcache",
  "homepage": "https://github.com/aio-libs/aiomcache/",
  "release_count": 12,
  "dependency_ids": [
    "pypi_typing_extensions"
  ]
}
{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: gnu general public license v3 (gplv3)",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: name service (dns)",
    "topic :: system :: monitoring",
    "topic :: utilities"
  ],
  "description": "# pydig\n\npydig is a python wrapper library for the 'dig' command line tool.\n\n[![build status](https://travis-ci.org/leonsmith/pydig.svg?branch=master)](https://travis-ci.org/leonsmith/pydig)\n[![python versions](https://img.shields.io/pypi/pyversions/pydig.svg)](https://pypi.org/project/pydig/)\n[![license](https://img.shields.io/pypi/l/pydig.svg?color=informational)](https://pypi.org/project/pydig/)\n\n## versioning\n\npydig follows [semver](https://semver.org/) (major.minor.patch) to track what is in each release.\n\n* major version number will be bumped when there is an incompatible api change\n* minor version number will be bumped when there is functionality added in a backwards-compatible manner.\n* patch version number will be bumped when there is backwards-compatible bug fixes.\n\nadditional labels for pre-release and build metadata are available as extensions to the major.minor.patch format.\n\n\n## installation\n\ninstallation the package from pypi with your tool of choice `pip`, `poetry`\nor `pipenv`.\n\n```bash\npip install pydig\n```\n\n## usage\n\nto use the default resolver you can call `pydig.query` this resolver will use\nthe `dig` command found in your `$path`.\n```\n>>> import pydig\n>>> pydig.query('example.com', 'a')\n['93.184.216.34']\n>>> pydig.query('www.github.com', 'cname')\n['github.com.']\n>>> pydig.query('example.com', 'ns')\n['a.iana-servers.net.', 'b.iana-servers.net.']\n```\n\nif your want to adjust the executable location, the nameservers to dig will\nquery against or would like to pass additional arguments/flags, you can\nconfigure your own instance of a resolver. and call the `query` method of your\ncustom resolver.\n\n```\n>>> import pydig\n>>> resolver = pydig.resolver(\n...     executable='/usr/bin/dig',\n...     nameservers=[\n...         '1.1.1.1',\n...         '1.0.0.1',\n...     ],\n...     additional_args=[\n...         '+time=10',\n...     ]\n... )\n>>> resolver.query('example.com', 'a')\n>>> ['93.184.216.34']\n```\n\n## documentation\n\nthe code is 150~ lines with 100% test coverage\n\nhttps://github.com/leonsmith/pydig/tree/master/pydig\n",
  "docs_url": null,
  "keywords": "dig,dns,pydig,resolver,lookup",
  "license": "gpl-3.0",
  "name": "pydig",
  "package_url": "https://pypi.org/project/pydig/",
  "project_url": "https://pypi.org/project/pydig/",
  "project_urls": {
    "Homepage": "https://github.com/leonsmith/pydig",
    "Repository": "https://github.com/leonsmith/pydig"
  },
  "release_url": "https://pypi.org/project/pydig/0.4.0/",
  "requires_dist": [],
  "requires_python": ">=3.5,<4.0",
  "summary": "python wrapper library for the 'dig' command line tool",
  "version": "0.4.0",
  "releases": [],
  "developers": [
    "_@leonmarksmith.com",
    "leon_smith"
  ],
  "kwds": "pyversions pydig dig python pip",
  "license_kwds": "gpl-3.0",
  "libtype": "pypi",
  "id": "pypi_pydig",
  "homepage": "https://github.com/leonsmith/pydig",
  "release_count": 4,
  "dependency_ids": []
}
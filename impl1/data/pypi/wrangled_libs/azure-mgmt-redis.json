{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# microsoft azure sdk for python\n\nthis is the microsoft azure redis cache management client library.\nthis package has been tested with python 3.7+.\nfor a more complete view of azure libraries, see the [azure sdk python release](https://aka.ms/azsdk/python/all).\n\n## _disclaimer_\n\n_azure sdk python packages support for python 2.7 has ended 01 january 2022. for more information and questions, please refer to https://github.com/azure/azure-sdk-for-python/issues/20691_\n\n## getting started\n\n### prerequisites\n\n- python 3.7+ is required to use this package.\n- [azure subscription](https://azure.microsoft.com/free/)\n\n### install the package\n\n```bash\npip install azure-mgmt-redis\npip install azure-identity\n```\n\n### authentication\n\nby default, [azure active directory](https://aka.ms/awps/aad) token authentication depends on correct configure of following environment variables.\n\n- `azure_client_id` for azure client id.\n- `azure_tenant_id` for azure tenant id.\n- `azure_client_secret` for azure client secret.\n\nin addition, azure subscription id can be configured via environment variable `azure_subscription_id`.\n\nwith above configuration, client can be authenticated by following code:\n\n```python\nfrom azure.identity import defaultazurecredential\nfrom azure.mgmt.redis import redismanagementclient\nimport os\n\nsub_id = os.getenv(\"azure_subscription_id\")\nclient = redismanagementclient(credential=defaultazurecredential(), subscription_id=sub_id)\n```\n\n## examples\n\ncode samples for this package can be found at:\n- [search redis cache management](https://docs.microsoft.com/samples/browse/?languages=python&term=getting%20started%20-%20managing&terms=getting%20started%20-%20managing) on docs.microsoft.com\n- [azure python mgmt sdk samples repo](https://aka.ms/azsdk/python/mgmt/samples)\n\n\n## troubleshooting\n\n## next steps\n\n## provide feedback\n\nif you encounter any bugs or have suggestions, please file an issue in the\n[issues](https://github.com/azure/azure-sdk-for-python/issues)\nsection of the project. \n\n\n![impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2fazure-mgmt-redis%2freadme.png)\n\n\n# release history\n\n## 14.3.0 (2023-09-19)\n\n### features added\n\n  - added operation redisoperations.begin_flush_cache\n  - added operation group accesspolicyassignmentoperations\n  - added operation group accesspolicyoperations\n  - model rediscommonproperties has a new parameter update_channel\n  - model rediscommonpropertiesredisconfiguration has a new parameter aad_enabled\n  - model rediscreateparameters has a new parameter update_channel\n  - model rediscreateproperties has a new parameter update_channel\n  - model redisproperties has a new parameter update_channel\n  - model redisresource has a new parameter update_channel\n  - model redisupdateparameters has a new parameter update_channel\n  - model redisupdateproperties has a new parameter update_channel\n\n## 14.2.0 (2023-06-16)\n\n### features added\n\n  - model exportrdbparameters has a new parameter storage_subscription_id\n  - model importrdbparameters has a new parameter storage_subscription_id\n  - model rediscommonpropertiesredisconfiguration has a new parameter storage_subscription_id\n\n## 14.1.0 (2022-10-28)\n\n### features added\n\n  - model redislinkedservercreateparameters has a new parameter geo_replicated_primary_host_name\n  - model redislinkedservercreateparameters has a new parameter primary_host_name\n  - model redislinkedservercreateproperties has a new parameter geo_replicated_primary_host_name\n  - model redislinkedservercreateproperties has a new parameter primary_host_name\n  - model redislinkedserverproperties has a new parameter geo_replicated_primary_host_name\n  - model redislinkedserverproperties has a new parameter primary_host_name\n  - model redislinkedserverwithproperties has a new parameter geo_replicated_primary_host_name\n  - model redislinkedserverwithproperties has a new parameter primary_host_name\n\n## 14.0.0 (2022-09-05)\n\n### features added\n\n  - added operation group asyncoperationstatusoperations\n  - model exportrdbparameters has a new parameter preferred_data_archive_auth_method\n  - model importrdbparameters has a new parameter preferred_data_archive_auth_method\n  - model rediscommonpropertiesredisconfiguration has a new parameter aof_backup_enabled\n  - model rediscommonpropertiesredisconfiguration has a new parameter authnotrequired\n  - model rediscommonpropertiesredisconfiguration has a new parameter zonal_configuration\n  - model redispatchschedule has a new parameter location\n\n### breaking changes\n\n  - renamed operation linkedserveroperations.delete to linkedserveroperations.begin_delete\n  - renamed operation redisoperations.update to redisoperations.begin_update\n\n## 13.1.0 (2021-12-16)\n\n**features**\n\n  - model redisresource has a new parameter identity\n  - model redisupdateparameters has a new parameter identity\n  - model rediscreateparameters has a new parameter identity\n\n## 13.0.0 (2021-07-16)\n\n**features**\n\n  - model redisupdateproperties has a new parameter redis_version\n  - model redisupdateproperties has a new parameter replicas_per_primary\n  - model redisupdateproperties has a new parameter public_network_access\n  - model rediscommonproperties has a new parameter redis_version\n  - model rediscommonproperties has a new parameter replicas_per_primary\n  - model rediscommonproperties has a new parameter public_network_access\n  - model redisfirewallrulecreateparameters has a new parameter type\n  - model redisfirewallrulecreateparameters has a new parameter name\n  - model redisfirewallrulecreateparameters has a new parameter id\n  - model redisproperties has a new parameter private_endpoint_connections\n  - model redisproperties has a new parameter replicas_per_primary\n  - model redisproperties has a new parameter public_network_access\n  - model rediscreateproperties has a new parameter redis_version\n  - model rediscreateproperties has a new parameter replicas_per_primary\n  - model rediscreateproperties has a new parameter public_network_access\n  - model redisupdateparameters has a new parameter redis_version\n  - model redisupdateparameters has a new parameter replicas_per_primary\n  - model redisupdateparameters has a new parameter public_network_access\n  - model redisresource has a new parameter private_endpoint_connections\n  - model redisresource has a new parameter replicas_per_primary\n  - model redisresource has a new parameter public_network_access\n  - model redisinstancedetails has a new parameter is_primary\n  - model rediscreateparameters has a new parameter redis_version\n  - model rediscreateparameters has a new parameter replicas_per_primary\n  - model rediscreateparameters has a new parameter public_network_access\n  - added operation redisoperations.list_by_subscription\n  - added operation firewallrulesoperations.list\n  - added operation group privatelinkresourcesoperations\n  - added operation group privateendpointconnectionsoperations\n\n**breaking changes**\n\n  - removed operation redisoperations.list\n  - removed operation firewallrulesoperations.list_by_redis_resource\n\n## 12.0.0 (2020-11-25)\n\n## 12.0.0b1 (2020-10-12)\n\nthis is beta preview version.\n\nthis version uses a next-generation code generator that introduces important breaking changes, but also important new features (like unified authentication and async programming).\n\n**general breaking changes**\n\n- credential system has been completly revamped:\n\n  - `azure.common.credentials` or `msrestazure.azure_active_directory` instances are no longer supported, use the `azure-identity` classes instead: https://pypi.org/project/azure-identity/\n  - `credentials` parameter has been renamed `credential`\n\n- the `config` attribute no longer exists on a client, configuration should be passed as kwarg. example: `myclient(credential, subscription_id, enable_logging=true)`. for a complete set of\n  supported options, see the [parameters accept in init documentation of azure-core](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/client_library_developer.md#available-policies)\n- you can't import a `version` module anymore, use `__version__` instead\n- operations that used to return a `msrest.polling.lropoller` now returns a `azure.core.polling.lropoller` and are prefixed with `begin_`.\n- exceptions tree have been simplified and most exceptions are now `azure.core.exceptions.httpresponseerror` (`clouderror` has been removed).\n- most of the operation kwarg have changed. some of the most noticeable:\n\n  - `raw` has been removed. equivalent feature can be found using `cls`, a callback that will give access to internal http response for advanced user\n  - for a complete set of\n  supported options, see the [parameters accept in request documentation of azure-core](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/client_library_developer.md#available-policies)\n\n**general new features**\n\n- type annotations support using `typing`. sdks are mypy ready.\n- this client has now stable and official support for async. check the `aio` namespace of your package to find the async client.\n- this client now support natively tracing library like opencensus or opentelemetry. see this [tracing quickstart](https://github.com/azure/azure-sdk-for-python/tree/main/sdk/core/azure-core-tracing-opentelemetry) for an overview.\n\n## 7.0.0rc2 (2020-09-01)\n\n**features**\n\n  - model redisrebootparameters has a new parameter ports\n  - model redisinstancedetails has a new parameter is_master\n\n**breaking changes**\n\n  - operation redisoperations.force_reboot has a new signature\n\n## 7.0.0rc1 (2019-12-07)\n\n**features**\n\n  - model redisupdateparameters has a new parameter\n    replicas_per_master\n  - model rediscreateparameters has a new parameter\n    replicas_per_master\n  - model redisresource has a new parameter instances\n  - model redisresource has a new parameter replicas_per_master\n\n**general breaking changes**\n\nthis version uses a next-generation code generator that *might*\nintroduce breaking changes if from some import. in summary, some modules\nwere incorrectly visible/importable and have been renamed. this fixed\nseveral issues caused by usage of classes that were not supposed to be\nused in the first place.\n\n  - redismanagementclient cannot be imported from\n    `azure.mgmt.redis.redis_management_client` anymore (import from\n    `azure.mgmt.redis` works like before)\n  - redismanagementclientconfiguration import has been moved from\n    `azure.mgmt.redis.redis_management_client` to\n    `azure.mgmt.redis`\n  - a model `myclass` from a \"models\" sub-module cannot be imported\n    anymore using `azure.mgmt.redis.models.my_class` (import from\n    `azure.mgmt.redis.models` works like before)\n  - an operation class `myclassoperations` from an `operations`\n    sub-module cannot be imported anymore using\n    `azure.mgmt.redis.operations.my_class_operations` (import from\n    `azure.mgmt.redis.operations` works like before)\n\nlast but not least, http connection pooling is now enabled by default.\nyou should always use a client as a context manager, or call close(), or\nuse no more than one client per process.\n\n## 6.0.0 (2019-01-15)\n\n**note**\n\n  - azure-mgmt-nspkg is not installed anymore on python 3 (pep420-based\n    namespace package)\n\n**features**\n\n  - client class can be used as a context manager to keep the underlying\n    http session open for performance\n  - model rediscreateparameters has a new parameter\n    minimum_tls_version\n  - model redisresource has a new parameter minimum_tls_version\n  - model redisupdateparameters has a new parameter\n    minimum_tls_version\n  - added operation patchschedulesoperations.list_by_redis_resource\n  - added operation redisoperations.list_upgrade_notifications\n  - added operation redisoperations.check_name_availability\n\n**general breaking changes**\n\nthis version uses a next-generation code generator that *might*\nintroduce breaking changes.\n\n  - model signatures now use only keyword-argument syntax. all\n    positional arguments must be re-written as keyword-arguments. to\n    keep auto-completion in most cases, models are now generated for\n    python 2 and python 3. python 3 uses the \"*\" syntax for\n    keyword-only arguments.\n  - enum types now use the \"str\" mixin (class azureenum(str, enum)) to\n    improve the behavior when unrecognized enum values are encountered.\n    while this is not a breaking change, the distinctions are important,\n    and are documented here:\n    <https://docs.python.org/3/library/enum.html#others> at a glance:\n      - \"is\" should not be used at all.\n      - \"format\" will return the string value, where \"%s\" string\n        formatting will return `nameofenum.stringvalue`. format syntax\n        should be prefered.\n  - new long running operation:\n      - return type changes from\n        `msrestazure.azure_operation.azureoperationpoller` to\n        `msrest.polling.lropoller`. external api is the same.\n      - return type is now **always** a `msrest.polling.lropoller`,\n        regardless of the optional parameters used.\n      - the behavior has changed when using `raw=true`. instead of\n        returning the initial call result as `clientrawresponse`,\n        without polling, now this returns an lropoller. after polling,\n        the final resource will be returned as a `clientrawresponse`.\n      - new `polling` parameter. the default behavior is\n        `polling=true` which will poll using arm algorithm. when\n        `polling=false`, the response of the initial call will be\n        returned without polling.\n      - `polling` parameter accepts instances of subclasses of\n        `msrest.polling.pollingmethod`.\n      - `add_done_callback` will no longer raise if called after\n        polling is finished, but will instead execute the callback right\n        away.\n\n## 5.0.0 (2018-02-08)\n\n**disclaimer**\n\nseveral model (like rediscreateparameters) have positional arguments\nshuffled, due to constraints in our code generator. this is not breaking\nif you use keyword arguments. if you are using positional arguments, we\nstrongly suggest to use keyword only arguments for model creation, since\nnext version 6.0.0 will use keyword only arguments for models.\n\n**breaking changes**\n\n  - rediscreateparameters parameters orders shuffled (see disclaimer)\n  - redisupdateparameters parameters orders shuffled (see disclaimer)\n  - merging redis_firewall_rule operations group into firewall_rules\n  - rename firewall_rules.list to\n    firewall_rules.list_by_redis_resource\n\n**features**\n\n  - all operation groups have now a \"models\" attribute\n  - add linked_server operations group\n\nnew apiversion 2017-10-01\n\n## 4.1.1 (2017-10-25)\n\n**bugfixes**\n\n  - fix \"tags\" attribute in redis update\n\n## 4.1.0 (2017-04-18)\n\n**features**\n\n  - add firewall rules operations\n\n**notes**\n\n  - this wheel package is now built with the azure wheel extension\n\n## 4.0.0 (2017-01-13)\n\n**bugfixes**\n\n  - fix error if patching when not exist\n\n**breaking change**\n\n  - `redis.update` is no longer an async operation\n\n## 3.0.0 (2016-11-14)\n\n**new features**\n\n  - add \"everyday\" and \"weekend\" to schedule enums\n  - improve technical documention\n\n**breaking change**\n\n  - simplify `patch_schedules.create_or_update` parameters\n\n## 2.0.0 (2016-10-20)\n\n  - major bug fixes and refactoring.\n\n## 1.0.0 (2016-08-09)\n\n  - initial release (api version 2016-04-01)\n",
  "docs_url": null,
  "keywords": "azure,azure sdk",
  "license": "mit license",
  "name": "azure-mgmt-redis",
  "package_url": "https://pypi.org/project/azure-mgmt-redis/",
  "project_url": "https://pypi.org/project/azure-mgmt-redis/",
  "project_urls": {
    "Homepage": "https://github.com/Azure/azure-sdk-for-python"
  },
  "release_url": "https://pypi.org/project/azure-mgmt-redis/14.3.0/",
  "requires_dist": [
    "isodate<1.0.0,>=0.6.1",
    "azure-common~=1.1",
    "azure-mgmt-core<2.0.0,>=1.3.2",
    "typing-extensions>=4.3.0; python_version < \"3.8.0\""
  ],
  "requires_python": ">=3.7",
  "summary": "microsoft azure redis cache management client library for python",
  "version": "14.3.0",
  "releases": [],
  "developers": [
    "azpysdkhelp@microsoft.com",
    "microsoft_corporation"
  ],
  "kwds": "azure_operation _azure azure_client_secret azure_active_directory azure",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_azure_mgmt_redis",
  "homepage": "https://github.com/azure/azure-sdk-for-python",
  "release_count": 25,
  "dependency_ids": [
    "pypi_azure_common",
    "pypi_azure_mgmt_core",
    "pypi_isodate",
    "pypi_typing_extensions"
  ]
}
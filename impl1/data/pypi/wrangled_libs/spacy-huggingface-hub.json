{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: artificial intelligence"
  ],
  "description": "<a href=\"https://explosion.ai\"><img src=\"https://explosion.ai/assets/img/logo.svg\" width=\"125\" height=\"125\" align=\"right\" /></a>\n\n# spacy-huggingface-hub: push your spacy pipelines to the hugging face hub\n\nthis package provides a cli command for uploading any trained spacy pipeline packaged with [`spacy package`](https://spacy.io/api/cli#package) to the [hugging face hub](https://huggingface.co/). it auto-generates all meta information for you, uploads a pretty readme (requires spacy v3.1+) and handles version control under the hood.\n\n[![pypi](https://img.shields.io/pypi/v/spacy-huggingface-hub.svg?style=flat-square&logo=pypi&logocolor=white)](https://pypi.python.org/pypi/spacy-huggingface-hub)\n[![github](https://img.shields.io/github/release/explosion/spacy-huggingface-hub/all.svg?style=flat-square&logo=github)](https://github.com/explosion/spacy-huggingface-hub/releases)\n\n## \ud83e\udd17 about the hugging face hub\n\nthe [hugging face hub](https://huggingface.co/) hosts git-based repositories which are storage spaces that can contain all your files. these repositories have multiple advantages: **versioning** (commit history and diffs), **branches**, useful **metadata** about their tasks, languages, metrics and more, browser-based **visualizers** to explore the models interactively in your browser, as well as an **api** to use the models in production.\n\n## \ud83d\ude80 quickstart\n\nyou can install `spacy-huggingface-hub` from pip:\n\n```bash\npip install spacy-huggingface-hub\n```\n\nto check if the command has been registered successfully:\n\n```bash\npython -m spacy huggingface-hub --help\n```\n\n\nyou can upload any pipeline packaged with [`spacy package`](https://spacy.io/api/cli#package). make sure to set `--build wheel` to output a binary `.whl` file. the uploader will read all metadata from the pipeline package, including the auto-generated pretty `readme.md` and the model details available in the `meta.json`.\n\n```bash\nhuggingface-cli login\npython -m spacy package ./en_ner_fashion ./output --build wheel\ncd ./output/en_ner_fashion-0.0.0/dist\npython -m spacy huggingface-hub push en_ner_fashion-0.0.0-py3-none-any.whl\n```\n\nthe command will output two things:\n\n- where to find your repo in the hub! for example, https://huggingface.co/spacy/en_core_web_sm\n- and how to install the pipeline directly from the hub!\n\n```bash\npip install https://huggingface.co/spacy/en_core_web_sm/resolve/main/en_core_web_sm-any-py3-none-any.whl\n```\n\nnow you can share your pipelines very quickly with others. additionally, you can also test your pipeline directly in the browser!\n\n![image of browser widget](https://user-images.githubusercontent.com/13643239/124529281-7e9a1b00-de0a-11eb-9069-093e3021a307.png)\n\n## \u2699\ufe0f usage and api\n\nif spacy is already installed in the same environment, this package automatically adds the `spacy huggingface-hub` commands to the cli. if you don't have spacy installed, you can also execute the cli directly via the package.\n\n### `push`\n\n```bash\npython -m spacy huggingface-hub push [whl_path] [--org] [--msg] [--local-repo] [--verbose]\n```\n\n```bash\npython -m spacy_huggingface_hub push [whl_path] [--org] [--msg] [--local-repo] [--verbose]\n```\n\n| argument             | type         | description                                                                                                                   |\n| -------------------- | ------------ | ----------------------------------------------------------------------------------------------------------------------------- |\n| `whl_path`           | str / `path` | the path to the `.whl` file packaged with [`spacy package`](https://spacy.io/api/cli#package).                                |\n| `--org`, `-o`        | str          | optional name of organization to which the pipeline should be uploaded.                                                       |\n| `--msg`, `-m`        | str          | commit message to use for update. defaults to `\"update spacy pipeline\"`.                                                      |\n| `--verbose`, `-v`    | bool         | output additional info for debugging, e.g. the full generated hub metadata.                                                   |\n\n### usage from python\n\ninstead of using the cli, you can also call the `push` function from python. it returns a dictionary containing the `\"url\"` of the published model and the `\"whl_url\"` of the wheel file, which you can install with `pip install`\n\n```python\nfrom spacy_huggingface_hub import push\n\nresult = push(\"./en_ner_fashion-0.0.0-py3-none-any.whl\")\nprint(result[\"url\"])\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "spacy-huggingface-hub",
  "package_url": "https://pypi.org/project/spacy-huggingface-hub/",
  "project_url": "https://pypi.org/project/spacy-huggingface-hub/",
  "project_urls": {
    "Homepage": "https://spacy.io"
  },
  "release_url": "https://pypi.org/project/spacy-huggingface-hub/0.0.10/",
  "requires_dist": [
    "huggingface-hub (>=0.8.1)",
    "wasabi (<1.2.0,>=0.8.1)",
    "typer (<0.8.0,>=0.3.0)",
    "PyYAML"
  ],
  "requires_python": ">=3.6",
  "summary": "quickly push your spacy pipelines to the hugging face hub",
  "version": "0.0.10",
  "releases": [],
  "developers": [
    "explosion_and_hugging_face",
    "omar@huggingface.co"
  ],
  "kwds": "spacy_huggingface_hub spacy py3 huggingface upload",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_spacy_huggingface_hub",
  "homepage": "https://spacy.io",
  "release_count": 10,
  "dependency_ids": [
    "pypi_huggingface_hub",
    "pypi_pyyaml",
    "pypi_typer",
    "pypi_wasabi"
  ]
}
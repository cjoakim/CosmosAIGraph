{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet",
    "topic :: internet :: proxy servers"
  ],
  "description": "========================\nmaxmind db python module\n========================\n\ndescription\n-----------\n\nthis is a python module for reading maxmind db files. the module includes both\na pure python reader and an optional c extension.\n\nmaxmind db is a binary file format that stores data indexed by ip address\nsubnets (ipv4 or ipv6).\n\ninstallation\n------------\n\nto install maxminddb, type:\n\n.. code-block:: bash\n\n    $ pip install maxminddb\n\nif you are not able to use pip, you may also use easy_install from the\nsource directory:\n\n.. code-block:: bash\n\n    $ easy_install .\n\nthe installer will attempt to build the c extension. if this fails, the\nmodule will fall-back to the pure python implementation.\n\nusage\n-----\n\nto use this module, you must first download or create a maxmind db file. we\nprovide `free geolite2 databases\n<https://dev.maxmind.com/geoip/geolocate-an-ip/databases?lang=en>`_. these\nfiles must be decompressed with ``gunzip``.\n\nafter you have obtained a database and imported the module, call\n``open_database`` with a path, or file descriptor (in the case of ``mode_fd``),\nto the database as the first argument. optionally, you may pass a mode as the\nsecond argument. the modes are exported from ``maxminddb``. valid modes are:\n\n* ``mode_mmap_ext`` - use the c extension with memory map.\n* ``mode_mmap`` - read from memory map. pure python.\n* ``mode_file`` - read database as standard file. pure python.\n* ``mode_memory`` - load database into memory. pure python.\n* ``mode_fd`` - load database into memory from a file descriptor. pure python.\n* ``mode_auto`` - try ``mode_mmap_ext``, ``mode_mmap``, ``mode_file`` in that\n  order. default.\n\n**note**: when using ``mode_fd``, it is the *caller's* responsibility to be\nsure that the file descriptor gets closed properly. the caller may close the\nfile descriptor immediately after the ``reader`` object is created.\n\nthe ``open_database`` function returns a ``reader`` object. to look up an ip\naddress, use the ``get`` method on this object. the method will return the\ncorresponding values for the ip address from the database (e.g., a dictionary\nfor geoip2/geolite2 databases). if the database does not contain a record for\nthat ip address, the method will return ``none``.\n\nif you wish to also retrieve the prefix length for the record, use the\n``get_with_prefix_len`` method. this returns a tuple containing the record\nfollowed by the network prefix length associated with the record.\n\nyou may also iterate over the whole database. the ``reader`` class implements\nthe ``__iter__`` method that returns an iterator. this iterator yields a\ntuple containing the network and the record.\n\nexample\n-------\n\n.. code-block:: pycon\n\n    >>> import maxminddb\n    >>>\n    >>> with maxminddb.open_database('geolite2-city.mmdb') as reader:\n    >>>\n    >>>     reader.get('152.216.7.110')\n    {'country': ... }\n    >>>\n    >>>     reader.get_with_prefix_len('152.216.7.110')\n    ({'country': ... }, 24)\n    >>>\n    >>>     for network, record in reader:\n    >>>         ...\n\nexceptions\n----------\n\nthe module will return an ``invaliddatabaseerror`` if the database is corrupt\nor otherwise invalid. a ``valueerror`` will be thrown if you look up an\ninvalid ip address or an ipv6 address in an ipv4 database.\n\nrequirements\n------------\n\nthis code requires python 3.8+. older versions are not supported. the c\nextension requires cpython.\n\nversioning\n----------\n\nthe maxmind db python module uses `semantic versioning <https://semver.org/>`_.\n\nsupport\n-------\n\nplease report all issues with this code using the `github issue tracker\n<https://github.com/maxmind/maxmind-db-reader-python/issues>`_\n\nif you are having an issue with a maxmind service that is not specific to this\napi, please contact `maxmind support <https://www.maxmind.com/en/support>`_ for\nassistance.\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license, version 2.0",
  "name": "maxminddb",
  "package_url": "https://pypi.org/project/maxminddb/",
  "project_url": "https://pypi.org/project/maxminddb/",
  "project_urls": {
    "Documentation": "https://maxminddb.readthedocs.org/",
    "Homepage": "https://www.maxmind.com/",
    "Issue Tracker": "https://github.com/maxmind/MaxMind-DB-Reader-python/issues",
    "Source Code": "https://github.com/maxmind/MaxMind-DB-Reader-python"
  },
  "release_url": "https://pypi.org/project/maxminddb/2.5.1/",
  "requires_dist": [
    "setuptools >=68.2.2"
  ],
  "requires_python": ">=3.8",
  "summary": "reader for the maxmind db format",
  "version": "2.5.1",
  "releases": [],
  "developers": [
    "goschwald@maxmind.com"
  ],
  "kwds": "maxminddb maxmind open_database python easy_install",
  "license_kwds": "apache license, version 2.0",
  "libtype": "pypi",
  "id": "pypi_maxminddb",
  "homepage": "",
  "release_count": 33,
  "dependency_ids": [
    "pypi_setuptools"
  ]
}
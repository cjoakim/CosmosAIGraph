{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.4",
    "programming language :: python :: 2.5",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.1",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: jython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "##############################\nanyjson - json library wrapper\n##############################\n\noverview\n--------\n\nanyjson loads whichever is the fastest json module installed and provides\na uniform api regardless of which json implementation is used.\n\noriginally part of carrot (http://github.com/ask/carrot/)\n\nexamples\n--------\n\nto serialize a python object to a json string, call the `serialize` function:\n\n>>> import anyjson\n>>> anyjson.serialize([\"test\", 1, {\"foo\": 3.141592}, \"bar\"])\n'[\"test\", 1, {\"foo\": 3.141592}, \"bar\"]'\n\nconversion the other way is done with the `deserialize` call.\n\n>>> anyjson.deserialize(\"\"\"[\"test\", 1, {\"foo\": 3.141592}, \"bar\"]\"\"\")\n['test', 1, {'foo': 3.1415920000000002}, 'bar']\n\nregardless of the json implementation used, the exceptions will be the same.\nthis means that trying to serialize something not compatible with json\nraises a typeerror:\n\n>>> anyjson.serialize([object()])\ntraceback (most recent call last):\n  <snipped traceback>\ntypeerror: object is not json encodable\n\nand deserializing a json string with invalid json raises a valueerror:\n\n>>> anyjson.deserialize(\"\"\"['missing square brace!\"\"\")\ntraceback (most recent call last):\n  <snipped traceback>\nvalueerror: cannot parse json description\n\n\ncontact\n-------\n\nthe module is maintaned by rune f. halvorsen <runefh@gmail.com>.\nthe project resides at http://bitbucket.org/runeh/anyjson . bugs and feature\nrequests can be submitted there. patches are also very welcome.\n\nchangelog\n---------\n\nsee changelog file\n\nlicense\n-------\n\nsee the license file",
  "docs_url": null,
  "keywords": "json",
  "license": "bsd",
  "name": "anyjson",
  "package_url": "https://pypi.org/project/anyjson/",
  "project_url": "https://pypi.org/project/anyjson/",
  "project_urls": {
    "Download": "UNKNOWN",
    "Homepage": "http://bitbucket.org/runeh/anyjson/"
  },
  "release_url": "https://pypi.org/project/anyjson/0.3.3/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "wraps the best available json implementation available in a common interface",
  "version": "0.3.3",
  "releases": [],
  "developers": [
    "rune_halvorsen",
    "runefh@gmail.com"
  ],
  "kwds": "json anyjson serialize carrot api",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_anyjson",
  "homepage": "http://bitbucket.org/runeh/anyjson/",
  "release_count": 11,
  "dependency_ids": []
}
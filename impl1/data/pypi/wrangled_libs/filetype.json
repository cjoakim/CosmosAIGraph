{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "environment :: web environment",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: system",
    "topic :: system :: filesystems",
    "topic :: utilities"
  ],
  "description": "filetype.py |build status| |pypi| |pyversions| |api|\n====================================================\n\nsmall and dependency free `python`_ package to infer file type and mime\ntype checking the `magic numbers`_ signature of a file or buffer.\n\nthis is a python port from `filetype`_ go package.\n\nfeatures\n--------\n\n-  simple and friendly api\n-  supports a `wide range`_ of file types\n-  provides file extension and mime type inference\n-  file discovery by extension or mime type\n-  file discovery by kind (image, video, audio\u2026)\n-  `pluggable`_: add new custom type matchers\n-  `fast`_, even processing large files\n-  only first 261 bytes representing the max file header is required, so\n   you can just `pass a list of bytes`_\n-  dependency free (just python code, no c extensions, no libmagic\n   bindings)\n-  cross-platform file recognition\n\ninstallation\n------------\n\n::\n\n    pip install filetype\n\napi\n---\n\nsee `annotated api reference`_.\n\nexamples\n--------\n\nsimple file type checking\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    import filetype\n\n    def main():\n        kind = filetype.guess('tests/fixtures/sample.jpg')\n        if kind is none:\n            print('cannot guess file type!')\n            return\n\n        print('file extension: %s' % kind.extension)\n        print('file mime type: %s' % kind.mime)\n\n    if __name__ == '__main__':\n        main()\n\nsupported types\n---------------\n\nimage\n^^^^^\n\n-  **dwg** - ``image/vnd.dwg``\n-  **xcf** - ``image/x-xcf``\n-  **jpg** - ``image/jpeg``\n-  **jpx** - ``image/jpx``\n-  **png** - ``image/png``\n-  **apng** - ``image/apng``\n-  **gif** - ``image/gif``\n-  **webp** - ``image/webp``\n-  **cr2** - ``image/x-canon-cr2``\n-  **tif** - ``image/tiff``\n-  **bmp** - ``image/bmp``\n-  **jxr** - ``image/vnd.ms-photo``\n-  **psd** - ``image/vnd.adobe.photoshop``\n-  **ico** - ``image/x-icon``\n-  **heic** - ``image/heic``\n-  **avif** - ``image/avif``\n\nvideo\n^^^^^\n\n-  **3gp** - ``video/3gpp``\n-  **mp4** - ``video/mp4``\n-  **m4v** - ``video/x-m4v``\n-  **mkv** - ``video/x-matroska``\n-  **webm** - ``video/webm``\n-  **mov** - ``video/quicktime``\n-  **avi** - ``video/x-msvideo``\n-  **wmv** - ``video/x-ms-wmv``\n-  **mpg** - ``video/mpeg``\n-  **flv** - ``video/x-flv``\n\naudio\n^^^^^\n\n-  **aac** - ``audio/aac``\n-  **mid** - ``audio/midi``\n-  **mp3** - ``audio/mpeg``\n-  **m4a** - ``audio/mp4``\n-  **ogg** - ``audio/ogg``\n-  **flac** - ``audio/x-flac``\n-  **wav** - ``audio/x-wav``\n-  **amr** - ``audio/amr``\n-  **aiff** - ``audio/x-aiff``\n\narchive\n^^^^^^^\n\n-  **br** - ``application/x-brotli``\n-  **rpm** - ``application/x-rpm``\n-  **dcm** - ``application/dicom``\n-  **epub** - ``application/epub+zip``\n-  **zip** - ``application/zip``\n-  **tar** - ``application/x-tar``\n-  **rar** - ``application/x-rar-compressed``\n-  **gz** - ``application/gzip``\n-  **bz2** - ``application/x-bzip2``\n-  **7z** - ``application/x-7z-compressed``\n-  **xz** - ``application/x-xz``\n-  **pdf** - ``application/pdf``\n-  **exe** - ``application/x-msdownload``\n-  **swf** - ``application/x-shockwave-flash``\n-  **rtf** - ``application/rtf``\n-  **eot** - ``application/octet-stream``\n-  **ps** - ``application/postscript``\n-  **sqlite** - ``application/x-sqlite3``\n-  **nes** - ``application/x-nintendo-nes-rom``\n-  **crx** - ``application/x-google-chrome-extension``\n-  **cab** - ``application/vnd.ms-cab-compressed``\n-  **deb** - ``application/x-deb``\n-  **ar** - ``application/x-unix-archive``\n-  **z** - ``application/x-compress``\n-  **lzo** - ``application/x-lzop``\n-  **lz** - ``application/x-lzip``\n-  **lz4** - ``application/x-lz4``\n-  **zstd** - ``application/zstd``\n\ndocument\n^^^^^^^^\n\n-  **doc** - ``application/msword``\n-  **docx** - ``application/vnd.openxmlformats-officedocument.wordprocessingml.document``\n-  **odt** - ``application/vnd.oasis.opendocument.text``\n-  **xls** - ``application/vnd.ms-excel``\n-  **xlsx** - ``application/vnd.openxmlformats-officedocument.spreadsheetml.sheet``\n-  **ods** - ``application/vnd.oasis.opendocument.spreadsheet``\n-  **ppt** - ``application/vnd.ms-powerpoint``\n-  **pptx** - ``application/vnd.openxmlformats-officedocument.presentationml.presentation``\n-  **odp** - ``application/vnd.oasis.opendocument.presentation``\n\nfont\n^^^^\n\n-  **woff** - ``application/font-woff``\n-  **woff2** - ``application/font-woff``\n-  **ttf** - ``application/font-sfnt``\n-  **otf** - ``application/font-sfnt``\n\napplication\n^^^^^^^^^^^ \n\n-  **wasm** - ``application/wasm``\n\n.. _python: http://python.org\n.. _magic numbers: https://en.wikipedia.org/wiki/magic_number_(programming)#magic_numbers_in_files\n.. _filetype: https://github.com/h2non/filetype\n.. _wide range: #supported-types\n.. _pluggable: #add-additional-file-type-matchers\n.. _fast: #benchmarks\n.. _pass a list of bytes: #file-header\n.. _annotated api reference: https://h2non.github.io/filetype.py/\n\n.. |build status| image:: https://travis-ci.org/h2non/filetype.py.svg?branch=master\n   :target: https://travis-ci.org/h2non/filetype.py\n.. |pypi| image:: https://img.shields.io/pypi/v/filetype.svg?maxage=2592000?style=flat-square\n   :target: https://pypi.python.org/pypi/filetype\n.. |pyversions| image:: https://img.shields.io/pypi/pyversions/filetype.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/filetype\n.. |api| image:: https://img.shields.io/badge/api-docs-green.svg\n   :target: https://h2non.github.io/filetype.py\n\n\n",
  "docs_url": null,
  "keywords": "file libmagic magic infer numbers magicnumbers discovery mime type kind",
  "license": "mit",
  "name": "filetype",
  "package_url": "https://pypi.org/project/filetype/",
  "project_url": "https://pypi.org/project/filetype/",
  "project_urls": {
    "Download": "https://github.com/h2non/filetype.py/tarball/master",
    "Homepage": "https://github.com/h2non/filetype.py"
  },
  "release_url": "https://pypi.org/project/filetype/1.2.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "infer file type and mime type of any file/buffer. no external dependencies.",
  "version": "1.2.0",
  "releases": [],
  "developers": [
    "tomas@aparicio.me",
    "tomas_aparicio"
  ],
  "kwds": "_filetype magic_numbers_in_files filetype files mpeg",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_filetype",
  "homepage": "https://github.com/h2non/filetype.py",
  "release_count": 22,
  "dependency_ids": []
}
{
  "classifiers": [],
  "description": "guidance enables you to control modern language models more effectively and efficiently than traditional prompting or chaining. guidance programs allow you to interleave generation, prompting, and logical control into a single continuous flow matching how the language model actually processes the text.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "guidance",
  "package_url": "https://pypi.org/project/guidance/",
  "project_url": "https://pypi.org/project/guidance/",
  "project_urls": {
    "Homepage": "https://github.com/guidance-ai/guidance"
  },
  "release_url": "https://pypi.org/project/guidance/0.1.10/",
  "requires_dist": [
    "diskcache",
    "gptcache",
    "openai >=1.0",
    "platformdirs",
    "tiktoken >=0.3",
    "msal",
    "requests",
    "numpy",
    "aiohttp",
    "ordered-set",
    "pyformlang",
    "ipython ; extra == 'docs'",
    "numpydoc ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "sphinx ; extra == 'docs'",
    "nbsphinx ; extra == 'docs'",
    "pytest ; extra == 'test'",
    "transformers ; extra == 'test'",
    "torch ; extra == 'test'",
    "pytest-cov ; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "a guidance language for controlling large language models.",
  "version": "0.1.10",
  "releases": [],
  "developers": [
    "scott@scottlundberg.com",
    "scott_lundberg_and_marco_tulio_ribeiro"
  ],
  "kwds": "guidance prompting programs controlling language",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_guidance",
  "homepage": "https://github.com/guidance-ai/guidance",
  "release_count": 67,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_diskcache",
    "pypi_gptcache",
    "pypi_ipython",
    "pypi_msal",
    "pypi_nbsphinx",
    "pypi_numpy",
    "pypi_numpydoc",
    "pypi_openai",
    "pypi_ordered_set",
    "pypi_platformdirs",
    "pypi_pyformlang",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_requests",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_tiktoken",
    "pypi_torch",
    "pypi_transformers"
  ]
}
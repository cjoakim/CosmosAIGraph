{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: testing"
  ],
  "description": "===================\npytest-deadfixtures\n===================\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/python/black\n    :alt: black\n\n.. image:: https://travis-ci.org/jllorencetti/pytest-deadfixtures.svg?branch=master\n    :target: https://travis-ci.org/jllorencetti/pytest-deadfixtures\n    :alt: see build status on travis ci\n\na simple plugin to list unused or duplicated fixtures in a pytest suite.\n\n----\n\nfeatures\n--------\n\n* list unused fixtures in your tests\n* list duplicated fixtures\n\n\ninstallation\n------------\n\nyou can install \"pytest-deadfixtures\" via `pip`_ from `pypi`_::\n\n    $ pip install pytest-deadfixtures\n\nusage\n-----\n\nimportant\n*********\n\nthe `--dead-fixtures` option will not run your tests and it's also sensible for errors in the pytest collection step.\nif you are using as part of you ci process the recommended way is to run it after the default test run. for example::\n\n    script:\n      - pytest\n      - pytest --dead-fixtures\n\n\nlisting unused fixtures\n***********************\n\njust run 'pytest' with an extra option '--dead-fixtures'::\n\n    $ pytest --dead-fixtures\n    ============================= test session starts ==============================\n    (hidden for brevity)\n\n    hey there, i believe the following fixture(s) are not being used:\n    fixture name: some_fixture, location: test_write_docs_when_verbose.py:5\n\n    ========================= no tests ran in 0.00 seconds =========================\n\nusing some level of verbosity will also print the docstring of each fixture::\n\n    $ pytest --dead-fixtures -v\n    ============================= test session starts ==============================\n    (hidden for brevity)\n\n    hey there, i believe the following fixture(s) are not being used:\n    fixture name: some_fixture, location: test_write_docs_when_verbose.py:5\n        blabla fixture docs\n\n    ========================= no tests ran in 0.00 seconds =========================\n\nlisting repeated fixtures\n*************************\n\nnow that you removed every unused fixture of your test suite, what if you want to go an extra mile?\n\nan important note about this is that it uses the fixture return value to verify if two or more fixtures are equal.\n\nthis means **fixtures without a truthy return value will be skipped**.\n\nyou should use this as a hint only, verify that the functionality provided by both fixtures are really repeated before deleting one of them.\n\njust run 'pytest' with an extra option '--dup-fixtures', unlike the '--dead-fixtures' option, it'll normally run you tests::\n\n    $ pytest --dup-fixtures\n    ======================================================================================================================== test session starts ========================================================================================================================\n    (hidden for brevity)\n\n    tests/test_deadfixtures.py ........\n\n    you may have some duplicate fixtures:\n    fixture name: someclass_fixture, location: test_repeated_fixtures.py:12\n    fixture name: someclass_samefixture, location: test_repeated_fixtures.py:17\n\n\nprojects using it\n-----------------\n\n- `wemake-django-template`_\n\ncontributing\n------------\ncontributions are very welcome. tests can be run with `tox`_, please ensure\nthe coverage at least stays the same before you submit a pull request.\n\nlicense\n-------\n\ndistributed under the terms of the `mit`_ license, 'pytest-deadfixtures' is free and open source software\n\n\nissues\n------\n\nif you encounter any problems, please `file an issue`_ along with a detailed description.\n\n.. _`@jllorencetti`: https://github.com/jllorencetti\n.. _`mit`: http://opensource.org/licenses/mit\n.. _`file an issue`: https://github.com/jllorencetti/pytest-deadfixtures/issues\n.. _`pytest`: https://github.com/pytest-dev/pytest\n.. _`tox`: https://tox.readthedocs.io/en/latest/\n.. _`pip`: https://pypi.python.org/pypi/pip/\n.. _`pypi`: https://pypi.python.org/pypi\n.. _`wemake-django-template`: https://github.com/wemake-services/wemake-django-template\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pytest-deadfixtures",
  "package_url": "https://pypi.org/project/pytest-deadfixtures/",
  "project_url": "https://pypi.org/project/pytest-deadfixtures/",
  "project_urls": {
    "Homepage": "https://github.com/jllorencetti/pytest-deadfixtures"
  },
  "release_url": "https://pypi.org/project/pytest-deadfixtures/2.2.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a simple plugin to list unused fixtures in pytest",
  "version": "2.2.1",
  "releases": [],
  "developers": [
    "me@dirtycoder.net"
  ],
  "kwds": "test_deadfixtures pytest deadfixtures test_repeated_fixtures travis",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytest_deadfixtures",
  "homepage": "https://github.com/jllorencetti/pytest-deadfixtures",
  "release_count": 12,
  "dependency_ids": []
}
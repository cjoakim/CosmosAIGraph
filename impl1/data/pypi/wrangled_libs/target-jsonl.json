{
  "classifiers": [
    "programming language :: python :: 3 :: only"
  ],
  "description": "# target-jsonl\n\na [singer](https://singer.io) target that writes data to jsonl ([json lines](http://jsonlines.org/)) files.\n\n## how to use it\n\n`target-jsonl` works together with any other [singer tap] to move data from sources like [braintree], [freshdesk] and [hubspot] to jsonl formatted files.\n\n### install\n\nwe will use [`tap-exchangeratesapi`][exchangeratesapi] to pull currency exchange rate data from a public data set as an example.\n\nfirst, make sure python 3 is installed on your system or follow these installation instructions for [mac] or [ubuntu].\n\nit is recommended to install each tap and target in a separate python virtual environment to avoid conflicting dependencies between any taps and targets.\n\n```bash\n # install tap-exchangeratesapi in its own virtualenv\npython3 -m venv ~/.virtualenvs/tap-exchangeratesapi\nsource ~/.virtualenvs/tap-exchangeratesapi/bin/activate\npip install tap-exchangeratesapi\ndeactivate\n\n# install target-jsonl in its own virtualenv\npython3 -m venv ~/.virtualenvs/target-jsonl\nsource ~/.virtualenvs/target-jsonl/bin/activate\npip install target-jsonl\ndeactivate\n```\n\n### run\n\nwe can now run `tap-exchangeratesapi` and pipe the output to `target-jsonl`.\n\n```bash\n~/.virtualenvs/tap-exchangeratesapi/bin/tap-exchangeratesapi | ~/.virtualenvs/target-jsonl/bin/target-jsonl\n```\n\nthe data by default will be written to a file called `exchange_rate-{timestamp}.jsonl` in your working directory.\n\n```bash\n\u203a cat exchange_rate-{timestamp}.jsonl\n{\"cad\": 1.3954067515, \"hkd\": 7.7503228187, \"isk\": 147.1130787678, \"php\": 50.5100534957, \"dkk\": 6.8779745434, \"huf\": 327.9376498801, \"czk\": 25.018446781, \"gbp\": 0.8059214167, \"ron\": 4.4673491976, \"sek\": 9.9002029146, \"idr\": 15321.0016602103, \"inr\": 75.6516325401, \"brl\": 5.4711307877, \"rub\": 73.6220254566, \"hrk\": 6.9765725881, \"jpy\": 106.548607268, \"thb\": 32.420217672, \"chf\": 0.9750046117, \"eur\": 0.9223390518, \"myr\": 4.3475373547, \"bgn\": 1.8039107176, \"try\": 6.988286294, \"cny\": 7.0764619074, \"nok\": 10.3973436635, \"nzd\": 1.6446227633, \"zar\": 18.4316546763, \"usd\": 1.0, \"mxn\": 24.1217487548, \"sgd\": 1.4152370411, \"aud\": 1.5361556908, \"ils\": 3.5102379635, \"krw\": 1218.9540675152, \"pln\": 4.1912931194, \"date\": \"2020-04-29t00:00:00z\"}\n```\n\n### optional configuration\n\n`target-jsonl` takes an optional configuration file that can be used to set formatting parameters like the delimiter - see [config.sample.json](config.sample.json) for examples. to run `target-jsonl` with the configuration file, use this command:\n\n```bash\n~/.virtualenvs/tap-exchangeratesapi/bin/tap-exchangeratesapi | ~/.virtualenvs/target-jsonl/bin/target-jsonl -c my-config.json\n```\n\nhere is a brief description of the optional config keys\n\n`destination_path` - specifies where to write the resulting `.jsonl` file to. by default, the file gets written in your working directory.\n\n`custom_name` - specifies a custom name for the filename, instead of the stream name (i.e. `{custom_name}-{timestamp}.jsonl`, asumming `do_timestamp_file` is `true`). by default, the stream name will be used.\n\n`do_timestamp_file` - specifies if the file should get timestamped. by default, the resulting file will have a timestamp in the file name (i.e. `exchange_rate-{timestamp}.jsonl` as described above in the `run` section). if this option gets set to `false`, the resulting file will not have a timestamp associated with it (i.e. `exchange_rate.jsonl` in our example).\n\n---\n\ncopyright &copy; 2020 andy huynh\n\n[singer tap]: https://singer.io\n[braintree]: https://github.com/singer-io/tap-braintree\n[freshdesk]: https://github.com/singer-io/tap-freshdesk\n[hubspot]: https://github.com/singer-io/tap-hubspot\n[exchangeratesapi]: https://github.com/singer-io/tap-exchangeratesapi\n[mac]: http://docs.python-guide.org/en/latest/starting/install3/osx/\n[ubuntu]: https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-ubuntu-16-04\n\n",
  "docs_url": null,
  "keywords": "singer,singer.io,target,etl",
  "license": "",
  "name": "target-jsonl",
  "package_url": "https://pypi.org/project/target-jsonl/",
  "project_url": "https://pypi.org/project/target-jsonl/",
  "project_urls": {
    "Homepage": "https://github.com/andyh1203/target-jsonl"
  },
  "release_url": "https://pypi.org/project/target-jsonl/0.1.4/",
  "requires_dist": [
    "jsonschema (==2.6.0)",
    "singer-python (==5.8.0)",
    "adjust-precision-for-schema (==0.3.3)"
  ],
  "requires_python": "",
  "summary": "singer.io target for writing json line files",
  "version": "0.1.4",
  "releases": [],
  "developers": [
    "andy.huynh312@gmail.com",
    "andy_huynh"
  ],
  "kwds": "exchange_rate exchangeratesapi python3 jsonlines usd",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_target_jsonl",
  "homepage": "https://github.com/andyh1203/target-jsonl",
  "release_count": 5,
  "dependency_ids": [
    "pypi_adjust_precision_for_schema",
    "pypi_jsonschema",
    "pypi_singer_python"
  ]
}
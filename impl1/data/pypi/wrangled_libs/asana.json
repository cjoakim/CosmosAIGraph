{
  "classifiers": [],
  "description": "asana\n# asana [![github release][release-image]]() [![pypi version][pypi-image]][pypi-url]\n\n> **warning**\n> python client library version `>5.x.x` is currently in beta and subject to change. please use v3.2.x for stable / production environments `pip install asana==3.2.2`. if you have feedback on the new version, please your feedback [here](https://form.asana.com/?k=c4selcq6hausowey0kjwaa&d=15793206719).\n\n> you can try out our new python beta by installing version [v5.0.3](https://github.com/asana/python-asana/tree/v5.0.3) (`pip install asana==5.0.3`) \n\n- api version: 1.0\n- package version: 5.0.3\n\n## requirements.\n\npython 3.4+\n\n## installation & usage\n### pip install from [pypi](https://pypi.org/project/asana/)\n\n```sh\npip install asana\n```\n\nthen import the package:\n```python\nimport asana \n```\n\n### setuptools\n\ninstall via [setuptools](http://pypi.python.org/pypi/setuptools).\n\n```sh\npython setup.py install --user\n```\n(or `sudo python setup.py install` to install the package for all users)\n\nthen import the package:\n```python\nimport asana\n```\n\n## getting started\n\nplease follow the [installation procedure](#installation--usage) and then run the following:\n\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\n# create an instance of the api class\nusers_api_instance = asana.usersapi(api_client)\nuser_gid = \"me\"\nopts = {}\n\ntry:\n    # get a user\n    user = users_api_instance.get_user(user_gid, opts)\n    pprint(user)\nexcept apiexception as e:\n    print(\"exception when calling usersapi->get_user: %s\\n\" % e)\n```\n\n### example: get, post, put, delete on tasks\n\n#### get - get multiple tasks\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\n# create an instance of the api class\ntasks_api_instance = asana.tasksapi(api_client)\nopts = { \n    'limit': 50,\n    'offset': \"eyj0exaiojikv1iqlcjhbgcioijiuzi1nij9\",\n    'assignee': \"14641\",\n    'project': \"321654\",\n    'section': \"321654\",\n    'workspace': \"321654\",\n    'completed_since': '2012-02-22t02:06:58.158z',\n    'modified_since': '2012-02-22t02:06:58.158z',\n    'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\n}\n\ntry:\n    # get multiple tasks\n    tasks = tasks_api_instance.get_tasks(opts)\n    for task in tasks:\n        pprint(task)\nexcept apiexception as e:\n    print(\"exception when calling tasksapi->get_tasks: %s\\n\" % e)\n```\n\n#### post - create a task\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\n# create an instance of the api class\ntasks_api_instance = asana.tasksapi(api_client)\nbody = {\n    \"data\": {\n        \"name\": \"new task\",\n        \"projects\": [\"<your_project_gid>\"],\n    }\n}\nopts = {}\n\ntry:\n    # create a task\n    task = tasks_api_instance.create_task(body, opts)\n    pprint(task)\nexcept apiexception as e:\n    print(\"exception when calling tasksapi->create_task: %s\\n\" % e)\n```\n\n#### put - update a task\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\n# create an instance of the api class\ntasks_api_instance = asana.tasksapi(api_client)\nbody = {\n    \"data\": {\n        \"name\": \"updated task\",\n    }\n}\ntask_gid = \"<your_task_gid>\"\nopts = {}\n\ntry:\n    # update a task\n    task = tasks_api_instance.update_task(body, task_gid, opts)\n    pprint(task)\nexcept apiexception as e:\n    print(\"exception when calling tasksapi->update_task: %s\\n\" % e)\n```\n\n#### delete - delete a task\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\n# create an instance of the api class\ntasks_api_instance = asana.tasksapi(api_client)\ntask_gid = \"<your_task_gid>\"\n\ntry:\n    # delete a task\n    task = tasks_api_instance.delete_task(task_gid)\n    pprint(task)\nexcept apiexception as e:\n    print(\"exception when calling tasksapi->delete_task: %s\\n\" % e)\n```\n\n## documentation for api endpoints\n\nall uris are relative to *https://app.asana.com/api/1.0*\n\nclass | method | http request | description\n------------ | ------------- | ------------- | -------------\n*attachmentsapi* | [**create_attachment_for_object**](https://github.com/asana/python-asana/blob/v5.0.3/docs/attachmentsapi.md#create_attachment_for_object) | **post** /attachments | upload an attachment\n*attachmentsapi* | [**delete_attachment**](https://github.com/asana/python-asana/blob/v5.0.3/docs/attachmentsapi.md#delete_attachment) | **delete** /attachments/{attachment_gid} | delete an attachment\n*attachmentsapi* | [**get_attachment**](https://github.com/asana/python-asana/blob/v5.0.3/docs/attachmentsapi.md#get_attachment) | **get** /attachments/{attachment_gid} | get an attachment\n*attachmentsapi* | [**get_attachments_for_object**](https://github.com/asana/python-asana/blob/v5.0.3/docs/attachmentsapi.md#get_attachments_for_object) | **get** /attachments | get attachments from an object\n*auditlogapiapi* | [**get_audit_log_events**](https://github.com/asana/python-asana/blob/v5.0.3/docs/auditlogapiapi.md#get_audit_log_events) | **get** /workspaces/{workspace_gid}/audit_log_events | get audit log events\n*batchapiapi* | [**create_batch_request**](https://github.com/asana/python-asana/blob/v5.0.3/docs/batchapiapi.md#create_batch_request) | **post** /batch | submit parallel requests\n*customfieldsettingsapi* | [**get_custom_field_settings_for_portfolio**](https://github.com/asana/python-asana/blob/v5.0.3/docs/customfieldsettingsapi.md#get_custom_field_settings_for_portfolio) | **get** /portfolios/{portfolio_gid}/custom_field_settings | get a portfolio&#x27;s custom fields\n*customfieldsettingsapi* | [**get_custom_field_settings_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/customfieldsettingsapi.md#get_custom_field_settings_for_project) | **get** /projects/{project_gid}/custom_field_settings | get a project&#x27;s custom fields\n*customfieldsapi* | [**create_custom_field**](https://github.com/asana/python-asana/blob/v5.0.3/docs/customfieldsapi.md#create_custom_field) | **post** /custom_fields | create a custom field\n*customfieldsapi* | [**create_enum_option_for_custom_field**](https://github.com/asana/python-asana/blob/v5.0.3/docs/customfieldsapi.md#create_enum_option_for_custom_field) | **post** /custom_fields/{custom_field_gid}/enum_options | create an enum option\n*customfieldsapi* | [**delete_custom_field**](https://github.com/asana/python-asana/blob/v5.0.3/docs/customfieldsapi.md#delete_custom_field) | **delete** /custom_fields/{custom_field_gid} | delete a custom field\n*customfieldsapi* | [**get_custom_field**](https://github.com/asana/python-asana/blob/v5.0.3/docs/customfieldsapi.md#get_custom_field) | **get** /custom_fields/{custom_field_gid} | get a custom field\n*customfieldsapi* | [**get_custom_fields_for_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/customfieldsapi.md#get_custom_fields_for_workspace) | **get** /workspaces/{workspace_gid}/custom_fields | get a workspace&#x27;s custom fields\n*customfieldsapi* | [**insert_enum_option_for_custom_field**](https://github.com/asana/python-asana/blob/v5.0.3/docs/customfieldsapi.md#insert_enum_option_for_custom_field) | **post** /custom_fields/{custom_field_gid}/enum_options/insert | reorder a custom field&#x27;s enum\n*customfieldsapi* | [**update_custom_field**](https://github.com/asana/python-asana/blob/v5.0.3/docs/customfieldsapi.md#update_custom_field) | **put** /custom_fields/{custom_field_gid} | update a custom field\n*customfieldsapi* | [**update_enum_option**](https://github.com/asana/python-asana/blob/v5.0.3/docs/customfieldsapi.md#update_enum_option) | **put** /enum_options/{enum_option_gid} | update an enum option\n*eventsapi* | [**get_events**](https://github.com/asana/python-asana/blob/v5.0.3/docs/eventsapi.md#get_events) | **get** /events | get events on a resource\n*goalrelationshipsapi* | [**add_supporting_relationship**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalrelationshipsapi.md#add_supporting_relationship) | **post** /goals/{goal_gid}/addsupportingrelationship | add a supporting goal relationship\n*goalrelationshipsapi* | [**get_goal_relationship**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalrelationshipsapi.md#get_goal_relationship) | **get** /goal_relationships/{goal_relationship_gid} | get a goal relationship\n*goalrelationshipsapi* | [**get_goal_relationships**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalrelationshipsapi.md#get_goal_relationships) | **get** /goal_relationships | get goal relationships\n*goalrelationshipsapi* | [**remove_supporting_relationship**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalrelationshipsapi.md#remove_supporting_relationship) | **post** /goals/{goal_gid}/removesupportingrelationship | removes a supporting goal relationship\n*goalrelationshipsapi* | [**update_goal_relationship**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalrelationshipsapi.md#update_goal_relationship) | **put** /goal_relationships/{goal_relationship_gid} | update a goal relationship\n*goalsapi* | [**add_followers**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalsapi.md#add_followers) | **post** /goals/{goal_gid}/addfollowers | add a collaborator to a goal\n*goalsapi* | [**create_goal**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalsapi.md#create_goal) | **post** /goals | create a goal\n*goalsapi* | [**create_goal_metric**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalsapi.md#create_goal_metric) | **post** /goals/{goal_gid}/setmetric | create a goal metric\n*goalsapi* | [**delete_goal**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalsapi.md#delete_goal) | **delete** /goals/{goal_gid} | delete a goal\n*goalsapi* | [**get_goal**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalsapi.md#get_goal) | **get** /goals/{goal_gid} | get a goal\n*goalsapi* | [**get_goals**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalsapi.md#get_goals) | **get** /goals | get goals\n*goalsapi* | [**get_parent_goals_for_goal**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalsapi.md#get_parent_goals_for_goal) | **get** /goals/{goal_gid}/parentgoals | get parent goals from a goal\n*goalsapi* | [**remove_followers**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalsapi.md#remove_followers) | **post** /goals/{goal_gid}/removefollowers | remove a collaborator from a goal\n*goalsapi* | [**update_goal**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalsapi.md#update_goal) | **put** /goals/{goal_gid} | update a goal\n*goalsapi* | [**update_goal_metric**](https://github.com/asana/python-asana/blob/v5.0.3/docs/goalsapi.md#update_goal_metric) | **post** /goals/{goal_gid}/setmetriccurrentvalue | update a goal metric\n*jobsapi* | [**get_job**](https://github.com/asana/python-asana/blob/v5.0.3/docs/jobsapi.md#get_job) | **get** /jobs/{job_gid} | get a job by id\n*membershipsapi* | [**create_membership**](https://github.com/asana/python-asana/blob/v5.0.3/docs/membershipsapi.md#create_membership) | **post** /memberships | create a membership\n*membershipsapi* | [**delete_membership**](https://github.com/asana/python-asana/blob/v5.0.3/docs/membershipsapi.md#delete_membership) | **delete** /memberships/{membership_gid} | delete a membership\n*membershipsapi* | [**get_membership**](https://github.com/asana/python-asana/blob/v5.0.3/docs/membershipsapi.md#get_membership) | **get** /memberships/{membership_gid} | get a membership\n*membershipsapi* | [**get_memberships**](https://github.com/asana/python-asana/blob/v5.0.3/docs/membershipsapi.md#get_memberships) | **get** /memberships | get multiple memberships\n*organizationexportsapi* | [**create_organization_export**](https://github.com/asana/python-asana/blob/v5.0.3/docs/organizationexportsapi.md#create_organization_export) | **post** /organization_exports | create an organization export request\n*organizationexportsapi* | [**get_organization_export**](https://github.com/asana/python-asana/blob/v5.0.3/docs/organizationexportsapi.md#get_organization_export) | **get** /organization_exports/{organization_export_gid} | get details on an org export request\n*portfoliomembershipsapi* | [**get_portfolio_membership**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliomembershipsapi.md#get_portfolio_membership) | **get** /portfolio_memberships/{portfolio_membership_gid} | get a portfolio membership\n*portfoliomembershipsapi* | [**get_portfolio_memberships**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliomembershipsapi.md#get_portfolio_memberships) | **get** /portfolio_memberships | get multiple portfolio memberships\n*portfoliomembershipsapi* | [**get_portfolio_memberships_for_portfolio**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliomembershipsapi.md#get_portfolio_memberships_for_portfolio) | **get** /portfolios/{portfolio_gid}/portfolio_memberships | get memberships from a portfolio\n*portfoliosapi* | [**add_custom_field_setting_for_portfolio**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliosapi.md#add_custom_field_setting_for_portfolio) | **post** /portfolios/{portfolio_gid}/addcustomfieldsetting | add a custom field to a portfolio\n*portfoliosapi* | [**add_item_for_portfolio**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliosapi.md#add_item_for_portfolio) | **post** /portfolios/{portfolio_gid}/additem | add a portfolio item\n*portfoliosapi* | [**add_members_for_portfolio**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliosapi.md#add_members_for_portfolio) | **post** /portfolios/{portfolio_gid}/addmembers | add users to a portfolio\n*portfoliosapi* | [**create_portfolio**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliosapi.md#create_portfolio) | **post** /portfolios | create a portfolio\n*portfoliosapi* | [**delete_portfolio**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliosapi.md#delete_portfolio) | **delete** /portfolios/{portfolio_gid} | delete a portfolio\n*portfoliosapi* | [**get_items_for_portfolio**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliosapi.md#get_items_for_portfolio) | **get** /portfolios/{portfolio_gid}/items | get portfolio items\n*portfoliosapi* | [**get_portfolio**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliosapi.md#get_portfolio) | **get** /portfolios/{portfolio_gid} | get a portfolio\n*portfoliosapi* | [**get_portfolios**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliosapi.md#get_portfolios) | **get** /portfolios | get multiple portfolios\n*portfoliosapi* | [**remove_custom_field_setting_for_portfolio**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliosapi.md#remove_custom_field_setting_for_portfolio) | **post** /portfolios/{portfolio_gid}/removecustomfieldsetting | remove a custom field from a portfolio\n*portfoliosapi* | [**remove_item_for_portfolio**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliosapi.md#remove_item_for_portfolio) | **post** /portfolios/{portfolio_gid}/removeitem | remove a portfolio item\n*portfoliosapi* | [**remove_members_for_portfolio**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliosapi.md#remove_members_for_portfolio) | **post** /portfolios/{portfolio_gid}/removemembers | remove users from a portfolio\n*portfoliosapi* | [**update_portfolio**](https://github.com/asana/python-asana/blob/v5.0.3/docs/portfoliosapi.md#update_portfolio) | **put** /portfolios/{portfolio_gid} | update a portfolio\n*projectbriefsapi* | [**create_project_brief**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectbriefsapi.md#create_project_brief) | **post** /projects/{project_gid}/project_briefs | create a project brief\n*projectbriefsapi* | [**delete_project_brief**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectbriefsapi.md#delete_project_brief) | **delete** /project_briefs/{project_brief_gid} | delete a project brief\n*projectbriefsapi* | [**get_project_brief**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectbriefsapi.md#get_project_brief) | **get** /project_briefs/{project_brief_gid} | get a project brief\n*projectbriefsapi* | [**update_project_brief**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectbriefsapi.md#update_project_brief) | **put** /project_briefs/{project_brief_gid} | update a project brief\n*projectmembershipsapi* | [**get_project_membership**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectmembershipsapi.md#get_project_membership) | **get** /project_memberships/{project_membership_gid} | get a project membership\n*projectmembershipsapi* | [**get_project_memberships_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectmembershipsapi.md#get_project_memberships_for_project) | **get** /projects/{project_gid}/project_memberships | get memberships from a project\n*projectstatusesapi* | [**create_project_status_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectstatusesapi.md#create_project_status_for_project) | **post** /projects/{project_gid}/project_statuses | create a project status\n*projectstatusesapi* | [**delete_project_status**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectstatusesapi.md#delete_project_status) | **delete** /project_statuses/{project_status_gid} | delete a project status\n*projectstatusesapi* | [**get_project_status**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectstatusesapi.md#get_project_status) | **get** /project_statuses/{project_status_gid} | get a project status\n*projectstatusesapi* | [**get_project_statuses_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectstatusesapi.md#get_project_statuses_for_project) | **get** /projects/{project_gid}/project_statuses | get statuses from a project\n*projecttemplatesapi* | [**delete_project_template**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projecttemplatesapi.md#delete_project_template) | **delete** /project_templates/{project_template_gid} | delete a project template\n*projecttemplatesapi* | [**get_project_template**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projecttemplatesapi.md#get_project_template) | **get** /project_templates/{project_template_gid} | get a project template\n*projecttemplatesapi* | [**get_project_templates**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projecttemplatesapi.md#get_project_templates) | **get** /project_templates | get multiple project templates\n*projecttemplatesapi* | [**get_project_templates_for_team**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projecttemplatesapi.md#get_project_templates_for_team) | **get** /teams/{team_gid}/project_templates | get a team&#x27;s project templates\n*projecttemplatesapi* | [**instantiate_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projecttemplatesapi.md#instantiate_project) | **post** /project_templates/{project_template_gid}/instantiateproject | instantiate a project from a project template\n*projectsapi* | [**add_custom_field_setting_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#add_custom_field_setting_for_project) | **post** /projects/{project_gid}/addcustomfieldsetting | add a custom field to a project\n*projectsapi* | [**add_followers_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#add_followers_for_project) | **post** /projects/{project_gid}/addfollowers | add followers to a project\n*projectsapi* | [**add_members_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#add_members_for_project) | **post** /projects/{project_gid}/addmembers | add users to a project\n*projectsapi* | [**create_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#create_project) | **post** /projects | create a project\n*projectsapi* | [**create_project_for_team**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#create_project_for_team) | **post** /teams/{team_gid}/projects | create a project in a team\n*projectsapi* | [**create_project_for_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#create_project_for_workspace) | **post** /workspaces/{workspace_gid}/projects | create a project in a workspace\n*projectsapi* | [**delete_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#delete_project) | **delete** /projects/{project_gid} | delete a project\n*projectsapi* | [**duplicate_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#duplicate_project) | **post** /projects/{project_gid}/duplicate | duplicate a project\n*projectsapi* | [**get_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#get_project) | **get** /projects/{project_gid} | get a project\n*projectsapi* | [**get_projects**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#get_projects) | **get** /projects | get multiple projects\n*projectsapi* | [**get_projects_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#get_projects_for_task) | **get** /tasks/{task_gid}/projects | get projects a task is in\n*projectsapi* | [**get_projects_for_team**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#get_projects_for_team) | **get** /teams/{team_gid}/projects | get a team&#x27;s projects\n*projectsapi* | [**get_projects_for_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#get_projects_for_workspace) | **get** /workspaces/{workspace_gid}/projects | get all projects in a workspace\n*projectsapi* | [**get_task_counts_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#get_task_counts_for_project) | **get** /projects/{project_gid}/task_counts | get task count of a project\n*projectsapi* | [**project_save_as_template**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#project_save_as_template) | **post** /projects/{project_gid}/saveastemplate | create a project template from a project\n*projectsapi* | [**remove_custom_field_setting_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#remove_custom_field_setting_for_project) | **post** /projects/{project_gid}/removecustomfieldsetting | remove a custom field from a project\n*projectsapi* | [**remove_followers_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#remove_followers_for_project) | **post** /projects/{project_gid}/removefollowers | remove followers from a project\n*projectsapi* | [**remove_members_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#remove_members_for_project) | **post** /projects/{project_gid}/removemembers | remove users from a project\n*projectsapi* | [**update_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#update_project) | **put** /projects/{project_gid} | update a project\n*rulesapi* | [**trigger_rule**](https://github.com/asana/python-asana/blob/v5.0.3/docs/rulesapi.md#trigger_rule) | **post** /rule_triggers/{rule_trigger_gid}/run | trigger a rule\n*sectionsapi* | [**add_task_for_section**](https://github.com/asana/python-asana/blob/v5.0.3/docs/sectionsapi.md#add_task_for_section) | **post** /sections/{section_gid}/addtask | add task to section\n*sectionsapi* | [**create_section_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/sectionsapi.md#create_section_for_project) | **post** /projects/{project_gid}/sections | create a section in a project\n*sectionsapi* | [**delete_section**](https://github.com/asana/python-asana/blob/v5.0.3/docs/sectionsapi.md#delete_section) | **delete** /sections/{section_gid} | delete a section\n*sectionsapi* | [**get_section**](https://github.com/asana/python-asana/blob/v5.0.3/docs/sectionsapi.md#get_section) | **get** /sections/{section_gid} | get a section\n*sectionsapi* | [**get_sections_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/sectionsapi.md#get_sections_for_project) | **get** /projects/{project_gid}/sections | get sections in a project\n*sectionsapi* | [**insert_section_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/sectionsapi.md#insert_section_for_project) | **post** /projects/{project_gid}/sections/insert | move or insert sections\n*sectionsapi* | [**update_section**](https://github.com/asana/python-asana/blob/v5.0.3/docs/sectionsapi.md#update_section) | **put** /sections/{section_gid} | update a section\n*statusupdatesapi* | [**create_status_for_object**](https://github.com/asana/python-asana/blob/v5.0.3/docs/statusupdatesapi.md#create_status_for_object) | **post** /status_updates | create a status update\n*statusupdatesapi* | [**delete_status**](https://github.com/asana/python-asana/blob/v5.0.3/docs/statusupdatesapi.md#delete_status) | **delete** /status_updates/{status_update_gid} | delete a status update\n*statusupdatesapi* | [**get_status**](https://github.com/asana/python-asana/blob/v5.0.3/docs/statusupdatesapi.md#get_status) | **get** /status_updates/{status_update_gid} | get a status update\n*statusupdatesapi* | [**get_statuses_for_object**](https://github.com/asana/python-asana/blob/v5.0.3/docs/statusupdatesapi.md#get_statuses_for_object) | **get** /status_updates | get status updates from an object\n*storiesapi* | [**create_story_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/storiesapi.md#create_story_for_task) | **post** /tasks/{task_gid}/stories | create a story on a task\n*storiesapi* | [**delete_story**](https://github.com/asana/python-asana/blob/v5.0.3/docs/storiesapi.md#delete_story) | **delete** /stories/{story_gid} | delete a story\n*storiesapi* | [**get_stories_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/storiesapi.md#get_stories_for_task) | **get** /tasks/{task_gid}/stories | get stories from a task\n*storiesapi* | [**get_story**](https://github.com/asana/python-asana/blob/v5.0.3/docs/storiesapi.md#get_story) | **get** /stories/{story_gid} | get a story\n*storiesapi* | [**update_story**](https://github.com/asana/python-asana/blob/v5.0.3/docs/storiesapi.md#update_story) | **put** /stories/{story_gid} | update a story\n*tagsapi* | [**create_tag**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tagsapi.md#create_tag) | **post** /tags | create a tag\n*tagsapi* | [**create_tag_for_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tagsapi.md#create_tag_for_workspace) | **post** /workspaces/{workspace_gid}/tags | create a tag in a workspace\n*tagsapi* | [**delete_tag**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tagsapi.md#delete_tag) | **delete** /tags/{tag_gid} | delete a tag\n*tagsapi* | [**get_tag**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tagsapi.md#get_tag) | **get** /tags/{tag_gid} | get a tag\n*tagsapi* | [**get_tags**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tagsapi.md#get_tags) | **get** /tags | get multiple tags\n*tagsapi* | [**get_tags_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tagsapi.md#get_tags_for_task) | **get** /tasks/{task_gid}/tags | get a task&#x27;s tags\n*tagsapi* | [**get_tags_for_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tagsapi.md#get_tags_for_workspace) | **get** /workspaces/{workspace_gid}/tags | get tags in a workspace\n*tagsapi* | [**update_tag**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tagsapi.md#update_tag) | **put** /tags/{tag_gid} | update a tag\n*tasktemplatesapi* | [**get_task_template**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasktemplatesapi.md#get_task_template) | **get** /task_templates/{task_template_gid} | get a task template\n*tasktemplatesapi* | [**get_task_templates**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasktemplatesapi.md#get_task_templates) | **get** /task_templates | get multiple task templates\n*tasktemplatesapi* | [**instantiate_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasktemplatesapi.md#instantiate_task) | **post** /task_templates/{task_template_gid}/instantiatetask | instantiate a task from a task template\n*tasksapi* | [**add_dependencies_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#add_dependencies_for_task) | **post** /tasks/{task_gid}/adddependencies | set dependencies for a task\n*tasksapi* | [**add_dependents_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#add_dependents_for_task) | **post** /tasks/{task_gid}/adddependents | set dependents for a task\n*tasksapi* | [**add_followers_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#add_followers_for_task) | **post** /tasks/{task_gid}/addfollowers | add followers to a task\n*tasksapi* | [**add_project_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#add_project_for_task) | **post** /tasks/{task_gid}/addproject | add a project to a task\n*tasksapi* | [**add_tag_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#add_tag_for_task) | **post** /tasks/{task_gid}/addtag | add a tag to a task\n*tasksapi* | [**create_subtask_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#create_subtask_for_task) | **post** /tasks/{task_gid}/subtasks | create a subtask\n*tasksapi* | [**create_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#create_task) | **post** /tasks | create a task\n*tasksapi* | [**delete_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#delete_task) | **delete** /tasks/{task_gid} | delete a task\n*tasksapi* | [**duplicate_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#duplicate_task) | **post** /tasks/{task_gid}/duplicate | duplicate a task\n*tasksapi* | [**get_dependencies_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#get_dependencies_for_task) | **get** /tasks/{task_gid}/dependencies | get dependencies from a task\n*tasksapi* | [**get_dependents_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#get_dependents_for_task) | **get** /tasks/{task_gid}/dependents | get dependents from a task\n*tasksapi* | [**get_subtasks_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#get_subtasks_for_task) | **get** /tasks/{task_gid}/subtasks | get subtasks from a task\n*tasksapi* | [**get_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#get_task) | **get** /tasks/{task_gid} | get a task\n*tasksapi* | [**get_tasks**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#get_tasks) | **get** /tasks | get multiple tasks\n*tasksapi* | [**get_tasks_for_project**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#get_tasks_for_project) | **get** /projects/{project_gid}/tasks | get tasks from a project\n*tasksapi* | [**get_tasks_for_section**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#get_tasks_for_section) | **get** /sections/{section_gid}/tasks | get tasks from a section\n*tasksapi* | [**get_tasks_for_tag**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#get_tasks_for_tag) | **get** /tags/{tag_gid}/tasks | get tasks from a tag\n*tasksapi* | [**get_tasks_for_user_task_list**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#get_tasks_for_user_task_list) | **get** /user_task_lists/{user_task_list_gid}/tasks | get tasks from a user task list\n*tasksapi* | [**remove_dependencies_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#remove_dependencies_for_task) | **post** /tasks/{task_gid}/removedependencies | unlink dependencies from a task\n*tasksapi* | [**remove_dependents_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#remove_dependents_for_task) | **post** /tasks/{task_gid}/removedependents | unlink dependents from a task\n*tasksapi* | [**remove_follower_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#remove_follower_for_task) | **post** /tasks/{task_gid}/removefollowers | remove followers from a task\n*tasksapi* | [**remove_project_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#remove_project_for_task) | **post** /tasks/{task_gid}/removeproject | remove a project from a task\n*tasksapi* | [**remove_tag_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#remove_tag_for_task) | **post** /tasks/{task_gid}/removetag | remove a tag from a task\n*tasksapi* | [**search_tasks_for_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#search_tasks_for_workspace) | **get** /workspaces/{workspace_gid}/tasks/search | search tasks in a workspace\n*tasksapi* | [**set_parent_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#set_parent_for_task) | **post** /tasks/{task_gid}/setparent | set the parent of a task\n*tasksapi* | [**update_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#update_task) | **put** /tasks/{task_gid} | update a task\n*teammembershipsapi* | [**get_team_membership**](https://github.com/asana/python-asana/blob/v5.0.3/docs/teammembershipsapi.md#get_team_membership) | **get** /team_memberships/{team_membership_gid} | get a team membership\n*teammembershipsapi* | [**get_team_memberships**](https://github.com/asana/python-asana/blob/v5.0.3/docs/teammembershipsapi.md#get_team_memberships) | **get** /team_memberships | get team memberships\n*teammembershipsapi* | [**get_team_memberships_for_team**](https://github.com/asana/python-asana/blob/v5.0.3/docs/teammembershipsapi.md#get_team_memberships_for_team) | **get** /teams/{team_gid}/team_memberships | get memberships from a team\n*teammembershipsapi* | [**get_team_memberships_for_user**](https://github.com/asana/python-asana/blob/v5.0.3/docs/teammembershipsapi.md#get_team_memberships_for_user) | **get** /users/{user_gid}/team_memberships | get memberships from a user\n*teamsapi* | [**add_user_for_team**](https://github.com/asana/python-asana/blob/v5.0.3/docs/teamsapi.md#add_user_for_team) | **post** /teams/{team_gid}/adduser | add a user to a team\n*teamsapi* | [**create_team**](https://github.com/asana/python-asana/blob/v5.0.3/docs/teamsapi.md#create_team) | **post** /teams | create a team\n*teamsapi* | [**get_team**](https://github.com/asana/python-asana/blob/v5.0.3/docs/teamsapi.md#get_team) | **get** /teams/{team_gid} | get a team\n*teamsapi* | [**get_teams_for_user**](https://github.com/asana/python-asana/blob/v5.0.3/docs/teamsapi.md#get_teams_for_user) | **get** /users/{user_gid}/teams | get teams for a user\n*teamsapi* | [**get_teams_for_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/teamsapi.md#get_teams_for_workspace) | **get** /workspaces/{workspace_gid}/teams | get teams in a workspace\n*teamsapi* | [**remove_user_for_team**](https://github.com/asana/python-asana/blob/v5.0.3/docs/teamsapi.md#remove_user_for_team) | **post** /teams/{team_gid}/removeuser | remove a user from a team\n*teamsapi* | [**update_team**](https://github.com/asana/python-asana/blob/v5.0.3/docs/teamsapi.md#update_team) | **put** /teams/{team_gid} | update a team\n*timeperiodsapi* | [**get_time_period**](https://github.com/asana/python-asana/blob/v5.0.3/docs/timeperiodsapi.md#get_time_period) | **get** /time_periods/{time_period_gid} | get a time period\n*timeperiodsapi* | [**get_time_periods**](https://github.com/asana/python-asana/blob/v5.0.3/docs/timeperiodsapi.md#get_time_periods) | **get** /time_periods | get time periods\n*timetrackingentriesapi* | [**create_time_tracking_entry**](https://github.com/asana/python-asana/blob/v5.0.3/docs/timetrackingentriesapi.md#create_time_tracking_entry) | **post** /tasks/{task_gid}/time_tracking_entries | create a time tracking entry\n*timetrackingentriesapi* | [**delete_time_tracking_entry**](https://github.com/asana/python-asana/blob/v5.0.3/docs/timetrackingentriesapi.md#delete_time_tracking_entry) | **delete** /time_tracking_entries/{time_tracking_entry_gid} | delete a time tracking entry\n*timetrackingentriesapi* | [**get_time_tracking_entries_for_task**](https://github.com/asana/python-asana/blob/v5.0.3/docs/timetrackingentriesapi.md#get_time_tracking_entries_for_task) | **get** /tasks/{task_gid}/time_tracking_entries | get time tracking entries for a task\n*timetrackingentriesapi* | [**get_time_tracking_entry**](https://github.com/asana/python-asana/blob/v5.0.3/docs/timetrackingentriesapi.md#get_time_tracking_entry) | **get** /time_tracking_entries/{time_tracking_entry_gid} | get a time tracking entry\n*timetrackingentriesapi* | [**update_time_tracking_entry**](https://github.com/asana/python-asana/blob/v5.0.3/docs/timetrackingentriesapi.md#update_time_tracking_entry) | **put** /time_tracking_entries/{time_tracking_entry_gid} | update a time tracking entry\n*typeaheadapi* | [**typeahead_for_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/typeaheadapi.md#typeahead_for_workspace) | **get** /workspaces/{workspace_gid}/typeahead | get objects via typeahead\n*usertasklistsapi* | [**get_user_task_list**](https://github.com/asana/python-asana/blob/v5.0.3/docs/usertasklistsapi.md#get_user_task_list) | **get** /user_task_lists/{user_task_list_gid} | get a user task list\n*usertasklistsapi* | [**get_user_task_list_for_user**](https://github.com/asana/python-asana/blob/v5.0.3/docs/usertasklistsapi.md#get_user_task_list_for_user) | **get** /users/{user_gid}/user_task_list | get a user&#x27;s task list\n*usersapi* | [**get_favorites_for_user**](https://github.com/asana/python-asana/blob/v5.0.3/docs/usersapi.md#get_favorites_for_user) | **get** /users/{user_gid}/favorites | get a user&#x27;s favorites\n*usersapi* | [**get_user**](https://github.com/asana/python-asana/blob/v5.0.3/docs/usersapi.md#get_user) | **get** /users/{user_gid} | get a user\n*usersapi* | [**get_users**](https://github.com/asana/python-asana/blob/v5.0.3/docs/usersapi.md#get_users) | **get** /users | get multiple users\n*usersapi* | [**get_users_for_team**](https://github.com/asana/python-asana/blob/v5.0.3/docs/usersapi.md#get_users_for_team) | **get** /teams/{team_gid}/users | get users in a team\n*usersapi* | [**get_users_for_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/usersapi.md#get_users_for_workspace) | **get** /workspaces/{workspace_gid}/users | get users in a workspace or organization\n*webhooksapi* | [**create_webhook**](https://github.com/asana/python-asana/blob/v5.0.3/docs/webhooksapi.md#create_webhook) | **post** /webhooks | establish a webhook\n*webhooksapi* | [**delete_webhook**](https://github.com/asana/python-asana/blob/v5.0.3/docs/webhooksapi.md#delete_webhook) | **delete** /webhooks/{webhook_gid} | delete a webhook\n*webhooksapi* | [**get_webhook**](https://github.com/asana/python-asana/blob/v5.0.3/docs/webhooksapi.md#get_webhook) | **get** /webhooks/{webhook_gid} | get a webhook\n*webhooksapi* | [**get_webhooks**](https://github.com/asana/python-asana/blob/v5.0.3/docs/webhooksapi.md#get_webhooks) | **get** /webhooks | get multiple webhooks\n*webhooksapi* | [**update_webhook**](https://github.com/asana/python-asana/blob/v5.0.3/docs/webhooksapi.md#update_webhook) | **put** /webhooks/{webhook_gid} | update a webhook\n*workspacemembershipsapi* | [**get_workspace_membership**](https://github.com/asana/python-asana/blob/v5.0.3/docs/workspacemembershipsapi.md#get_workspace_membership) | **get** /workspace_memberships/{workspace_membership_gid} | get a workspace membership\n*workspacemembershipsapi* | [**get_workspace_memberships_for_user**](https://github.com/asana/python-asana/blob/v5.0.3/docs/workspacemembershipsapi.md#get_workspace_memberships_for_user) | **get** /users/{user_gid}/workspace_memberships | get workspace memberships for a user\n*workspacemembershipsapi* | [**get_workspace_memberships_for_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/workspacemembershipsapi.md#get_workspace_memberships_for_workspace) | **get** /workspaces/{workspace_gid}/workspace_memberships | get the workspace memberships for a workspace\n*workspacesapi* | [**add_user_for_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/workspacesapi.md#add_user_for_workspace) | **post** /workspaces/{workspace_gid}/adduser | add a user to a workspace or organization\n*workspacesapi* | [**get_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/workspacesapi.md#get_workspace) | **get** /workspaces/{workspace_gid} | get a workspace\n*workspacesapi* | [**get_workspaces**](https://github.com/asana/python-asana/blob/v5.0.3/docs/workspacesapi.md#get_workspaces) | **get** /workspaces | get multiple workspaces\n*workspacesapi* | [**remove_user_for_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/workspacesapi.md#remove_user_for_workspace) | **post** /workspaces/{workspace_gid}/removeuser | remove a user from a workspace or organization\n*workspacesapi* | [**update_workspace**](https://github.com/asana/python-asana/blob/v5.0.3/docs/workspacesapi.md#update_workspace) | **put** /workspaces/{workspace_gid} | update a workspace\n\n## accessing repsonse data\n\n### example: accessing task data\n```python\n.\n.\n.\ntry:\n    task = tasks_api_instance.get_task(task_gid, opts)\n    task_name = task['name']\n    task_notes = task['notes']\nexcept apiexception as e:\n    .\n    .\n    .\n```\n\n## accessing response status code and headers\n\nin the scenario you want to access the response headers or the status code along with the response data you can\nprovide the `_return_http_data_only` parameter argument in the request method and set the value to `false`\n\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\n# create an instance of the api class\nusers_api_instance = asana.usersapi(api_client)\nuser_gid = 'me' # str | a string identifying a user. this can either be the string \\\"me\\\", an email, or the gid of a user.\nopts = {}\n\ntry:\n    # get a user - add asana-enable in the request\n    (api_response, status, headers) = users_api_instance.get_user(user_gid, opts, _return_http_data_only=false) # returns a tuple: (response, status, headers)\n    pprint(api_response)\n    pprint(status)\n    pprint(headers)\nexcept apiexception as e:\n    print(\"exception when calling usersapi->get_user: %s\\n\" % e)\n```\n\n## adding deprecation flag: \"asana-enable\" or \"asana-disable\" header\n\n### on the client\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\n# add asana-enable header for the client\napi_client.default_headers['asana-enable'] = 'string_ids'\n```\n\nor\n\n### on the request\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\n# create an instance of the api class\nusers_api_instance = asana.usersapi(api_client)\nuser_gid = 'me' # str | a string identifying a user. this can either be the string \\\"me\\\", an email, or the gid of a user.\nopts = {}\n\ntry:\n    # get a user - add asana-enable in the request\n    api_response = users_api_instance.get_user(user_gid, opts, header_params={'asana-enable': 'string_ids'})\n    pprint(api_response)\nexcept apiexception as e:\n    print(\"exception when calling usersapi->get_user: %s\\n\" % e)\n```\n\n## async requests with multithreading\n\nthis client library uses multithreading to make async requests. to make async requests you can pass in `async_req=true` in the method call.\n\nnote:\n- this feature disables our auto-pagination feature\n- you will want to add logic to handle the asana api rate limits\n\nthe code belows is an example of how to make 15 async create task calls. it does not handle the asana api rate limits.\nyou will have to implement your own solution for api rate limits based on your tier.\n\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\ntasks_api_instance = asana.tasksapi(api_client)\nthreads = []\nfor i in range(1, 15+1):\n    body = {\n        \"data\": {\n            \"name\": f\"task: {i}\",\n            \"projects\": [\"<your_project_gid>\"]\n        }\n    }\n    opts = {}\n    threads.append(tasks_api_instance.create_task(body, opts, async_req=true))\n\nfor thread in threads:\n    try:\n        pprint(thread.get())\n    except apiexception as e:\n        print(\"exception when calling tasksapi->create_task: %s\\n\" % e)\n```\n\n## pagination\n\nthe pagination feature is enabled by default. this means two things:\n\n1: endpoints that return a single response (ex: [get_task](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#get_task) ([get a task](https://developers.asana.com/reference/gettask)), [get_project](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#get_project) ([get a project](https://developers.asana.com/reference/getproject)), etc...)\nwill return a response with the `\"data\"` key abstracted from the response.\n\ninstead of returning:\n```python\n{\n    \"data\": {\n        \"gid\": \"123\",\n        \"actual_time_minutes\": null,\n        \"assignee\": null,\n        ...\n        \"workspace\": {\n            \"gid\": \"1234567\",\n            \"name\": \"user@example.com\",\n            \"resource_type\": \"workspace\"\n        }\n    }\n}\n```\n\nit returns:\n```python\n{\n    \"gid\": \"123\",\n    \"actual_time_minutes\": null,\n    \"assignee\": null,\n    ...\n    \"workspace\": {\n        \"gid\": \"1234567\",\n        \"name\": \"user@example.com\",\n        \"resource_type\": \"workspace\"\n    }\n}\n```\n\n2: endpoints that return an array of resources (ex: [get_tasks](https://github.com/asana/python-asana/blob/v5.0.3/docs/tasksapi.md#get_tasks) ([get multiple tasks](https://developers.asana.com/reference/gettasks)), [get_projects](https://github.com/asana/python-asana/blob/v5.0.3/docs/projectsapi.md#get_projects) ([get multiple projects](https://developers.asana.com/reference/getprojects)), etc...)\nwill return a generator object ([pageiterator.items](https://github.com/asana/python-asana/blob/v5.0.3/asana/pagination/page_iterator.py)) that you can use to iterate through each result.\n\nexample usage 1:\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\ntasks_api_instance = asana.tasksapi(api_client)\nopts = {\"project\": \"<your_project_gid>\"}\n\ntry:\n    tasks = tasks_api_instance.get_tasks(opts)\n    for task in tasks:\n        pprint(task)\n\nexcept exception as e:\n    print(\"exception when calling tasksapi->get_tasks: %s\\n\" % e)\n```\n\nexample response:\n```python\n{'gid': '123',\n 'name': 'task 1',\n 'resource_subtype': 'default_task',\n 'resource_type': 'task'},\n .\n .\n .\n```\n\nexample usage 2:\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\ntasks_api_instance = asana.tasksapi(api_client)\nopts = {\"project\": \"<your_project_gid>\"}\n\ntry:\n    tasks = tasks_api_instance.get_tasks(opts)\n    pprint(list(tasks))\n\nexcept exception as e:\n    print(\"exception when calling tasksapi->get_tasks: %s\\n\" % e)\n```\n\nexample response:\n```python\n[{'gid': '123',\n 'name': 'task 1',\n 'resource_subtype': 'default_task',\n 'resource_type': 'task'},\n .\n .\n .]\n```\n\n### ending pagination early\n\nin the scenario where you want to end the pagination early, you can specify an `item_limit` in the method call. this will stop the iterator from going past that limit.\n\n**example scenario:** you have 1000 tasks in a project and are only interested in the first 2 tasks. instead of letting the pagination code continue to run to get all those 1000 tasks you can specify that you only want the first x results with `item_limit`.\n\n**without `item_limit` - the for loop will continue to run until it runs out of tasks:**\n\n```python\n    ...\n    tasks = tasks_api_instance.get_tasks(opts)\n    for task in tasks:\n        pprint(task)\n    ...\n```\n\n**sample response:**\n\n```python\n{'gid': '123',\n 'name': 'task 1',\n 'resource_subtype': 'default_task',\n 'resource_type': 'task'},\n .\n .\n .\n <1000th_task>\n```\n\n**with `item_limit` - the for loop will stop at the `item_limit` you specified:**\n```python\n    ...\n    tasks = tasks_api_instance.get_tasks(opts, item_limit=2)\n    for task in tasks:\n        pprint(task)\n    ...\n```\n\n**sample response:**\n\n```python\n{'gid': '123',\n 'name': 'task 1',\n 'resource_subtype': 'default_task',\n 'resource_type': 'task'},\n{'gid': '456',\n 'name': 'task 2',\n 'resource_subtype': 'default_task',\n 'resource_type': 'task'}\n```\n\nalternatively, if you are iterating over the generator object in a for loop, you can also just break out of the loop.\n\n**ex:**\n```python\n...\nopts = {'project': \"<your_project_gid>\"}\n\ntry:\n    count = 0\n    tasks = tasks_api_instance.get_tasks(opts)\n    for task in tasks:\n        if count == 2:\n            break\n        pprint(task)\n        count += 1\n    ...\n```\n\n**sample response:**\n\n```python\n{'gid': '123',\n 'name': 'task 1',\n 'resource_subtype': 'default_task',\n 'resource_type': 'task'},\n {'gid': '456',\n 'name': 'task 2',\n 'resource_subtype': 'default_task',\n 'resource_type': 'task'}\n```\n\n### disabling default pagination behaviour\n\nif you do not want to use the default pagination behaviour there are two ways to disbale it.\n\n1: per request - disable pagination behavior for a single request - pass in `full_payload=true` in the method request\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\ntasks_api_instance = asana.tasksapi(api_client)\nopts = {\"project\": \"<your_project>\", \"limit\": 2}\n\ntry:\n    tasks = tasks_api_instance.get_tasks(opts, full_payload=true)\n    pprint(tasks)\nexcept exception as e:\n    print(\"exception when calling tasksapi->get_tasks: %s\\n\" % e)\n```\n\nsample response:\n```python\n{'data': [{'gid': '123',\n           'name': 'task 1',\n           'resource_subtype': 'default_task',\n           'resource_type': 'task'},\n          {'gid': '456',\n           'name': 'task 2',\n           'resource_subtype': 'default_task',\n           'resource_type': 'task'}],\n 'next_page': {'offset': 'eyj0...',\n               'path': '/tasks?project=789&limit=2&offset=eyj0...',\n               'uri': 'https://app.asana.com/api/1.0/tasks?project=789&limit=2&offset=eyj0...'}}\n```\n\n2: globally - disable pagination behavior for all requests - set `return_page_iterator` to false\n```python\n...\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\nconfiguration.return_page_iterator = false\napi_client = asana.apiclient(configuration)\n...\n```\n\n## documentation for using the `call_api` method\n\nuse this to make http calls when the endpoint does not exist in the current library version or has bugs\n\n### example: get, post, put, delete on tasks\n\n#### get - get a task\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\ntry:\n    # get - get a task\n    api_response = api_client.call_api(\n        \"/tasks/{task_gid}\",\n        \"get\",\n        path_params={\"task_gid\": \"<your_task_gid>\"},\n        query_params={},\n        header_params={\"accept\": \"application/json; charset=utf-8\"},\n        body=none,\n        post_params=[],\n        files={},\n        response_type=object, # you can specify one of the following types: float, bool, bytes, str, object\n        auth_settings=[\"token\"],\n        async_req=none,\n        _return_http_data_only=true,\n        _preload_content=true,\n        _request_timeout=none,\n        collection_formats={},\n    )\n    pprint(api_response)\nexcept apiexception as e:\n    print(\"exception: %s\\n\" % e)\n```\n\n#### get - get multiple tasks -> with opt_fields\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\ntry:\n    # get - get multiple tasks\n    api_response = api_client.call_api(\n        \"/tasks\",\n        \"get\",\n        path_params={},\n        query_params={\n            \"project\": \"<your_project_gid>\",\n            \"opt_fields\": \"name,notes,projects\",\n        },\n        header_params={\"accept\": \"application/json; charset=utf-8\"},\n        body=none,\n        post_params=[],\n        files={},\n        response_type=object, # you can specify one of the following types: float, bool, bytes, str, object\n        auth_settings=[\"token\"],\n        async_req=none,\n        _return_http_data_only=true,\n        _preload_content=true,\n        _request_timeout=none,\n        collection_formats={},\n    )\n    pprint(api_response)\nexcept apiexception as e:\n    print(\"exception: %s\\n\" % e)\n```\n\n#### post - create a task\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\ntry:\n    # post - create a task\n    api_response = api_client.call_api(\n        \"/tasks\",\n        \"post\",\n        path_params={},\n        query_params={},\n        header_params={\n            \"accept\": \"application/json; charset=utf-8\",\n            \"content-type\": \"application/json; charset=utf-8\",\n        },\n        body={\n            \"data\": {\n                \"name\": \"new task\",\n                \"projects\": [\"<your_project_gid>\"],\n            }\n        },\n        post_params=[],\n        files={},\n        response_type=object, # you can specify one of the following types: float, bool, bytes, str, object\n        auth_settings=[\"token\"],\n        async_req=none,\n        _return_http_data_only=true,\n        _preload_content=true,\n        _request_timeout=none,\n        collection_formats={},\n    )\n    pprint(api_response)\nexcept apiexception as e:\n    print(\"exception: %s\\n\" % e)\n```\n\n#### put - update a task\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\ntry:\n    # put - update a task\n    api_response = api_client.call_api(\n        \"/tasks/{task_gid}\",\n        \"put\",\n        path_params={\"task_gid\": \"<your_task_gid>\"},\n        query_params={},\n        header_params={\n            \"accept\": \"application/json; charset=utf-8\",\n            \"content-type\": \"application/json; charset=utf-8\",\n        },\n        body={\n            \"data\": {\n                \"name\": \"updated task\",\n            }\n        },\n        post_params=[],\n        files={},\n        response_type=object, # you can specify one of the following types: float, bool, bytes, str, object\n        auth_settings=[\"token\"],\n        async_req=none,\n        _return_http_data_only=true,\n        _preload_content=true,\n        _request_timeout=none,\n        collection_formats={},\n    )\n    pprint(api_response)\nexcept apiexception as e:\n    print(\"exception: %s\\n\" % e)\n```\n\n#### delete - delete a task\n```python\nimport asana\nfrom asana.rest import apiexception\nfrom pprint import pprint\n\nconfiguration = asana.configuration()\nconfiguration.access_token = '<your_access_token>'\napi_client = asana.apiclient(configuration)\n\ntry:\n    # delete - delete a task\n    api_response = api_client.call_api(\n        \"/tasks/{task_gid}\",\n        \"delete\",\n        path_params={\"task_gid\": \"<your_task_gid>\"},\n        query_params={},\n        header_params={\"accept\": \"application/json; charset=utf-8\"},\n        body=none,\n        post_params=[],\n        files={},\n        response_type=object, # you can specify one of the following types: float, bool, bytes, str, object\n        auth_settings=[\"token\"],\n        async_req=none,\n        _return_http_data_only=true,\n        _preload_content=true,\n        _request_timeout=none,\n        collection_formats={},\n    )\n    pprint(api_response)\nexcept apiexception as e:\n    print(\"exception: %s\\n\" % e)\n```\n\n[release-image]: https://img.shields.io/github/release/asana/python-asana.svg\n\n[pypi-image]: https://img.shields.io/pypi/v/asana.svg?style=flat-square\n[pypi-url]: https://pypi.python.org/pypi/asana/\n",
  "docs_url": null,
  "keywords": "asana,asana",
  "license": "mit",
  "name": "asana",
  "package_url": "https://pypi.org/project/asana/",
  "project_url": "https://pypi.org/project/asana/",
  "project_urls": {
    "Homepage": "http://github.com/asana/python-asana"
  },
  "release_url": "https://pypi.org/project/asana/5.0.3/",
  "requires_dist": [
    "certifi >=2017.4.17",
    "python-dateutil >=2.1",
    "six >=1.10",
    "urllib3 >=1.23"
  ],
  "requires_python": "",
  "summary": "asana",
  "version": "5.0.3",
  "releases": [],
  "developers": [
    "asana"
  ],
  "kwds": "pip pypi asana api_client py",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_asana",
  "homepage": "http://github.com/asana/python-asana",
  "release_count": 58,
  "dependency_ids": [
    "pypi_certifi",
    "pypi_python_dateutil",
    "pypi_six",
    "pypi_urllib3"
  ],
  "documentation_summary": "The HTML text is about the official Python client library for the Asana API v1, hosted on GitHub. It provides a comprehensive guide on how to use the library, including installation, usage, and examples for performing various operations such as creating, updating, and deleting tasks. The library supports Python 3.4+ and can be installed via pip. It also covers advanced topics like pagination, async requests, and accessing response data. The library is currently in BETA for versions above 5.X.X, with a stable version recommended as 3.2.2. It is licensed under the MIT license and has received 287 stars and 97 forks on GitHub.",
  "embedding": [
    -0.020697573199868202,
    0.01874679885804653,
    0.004185170866549015,
    -0.01188450213521719,
    0.01600741408765316,
    0.011303420178592205,
    -0.03389642387628555,
    -0.005202063824981451,
    -0.007318860851228237,
    -0.02773972786962986,
    0.0009831693023443222,
    -0.005582533776760101,
    -0.0020839383359998465,
    0.031682781875133514,
    0.003915383014827967,
    -0.02230246365070343,
    0.02371366322040558,
    -0.028154786676168442,
    -0.009117446839809418,
    -0.00213755015283823,
    0.020517714321613312,
    0.0032582073472440243,
    -0.016823695972561836,
    0.017460117116570473,
    -0.024640625342726707,
    0.008017541840672493,
    0.0219980888068676,
    -0.03417313098907471,
    0.008377259597182274,
    -0.012009019032120705,
    0.019397055730223656,
    -0.00904135312885046,
    -0.009809210896492004,
    -0.010210433043539524,
    -0.01783367060124874,
    -0.0006930608651600778,
    0.003261666279286146,
    0.0015123685589060187,
    0.036635808646678925,
    0.015052779577672482,
    0.00787918921560049,
    0.015066615305840969,
    0.0019023504573851824,
    -0.0016654212959110737,
    -0.02688194066286087,
    -0.0030316547490656376,
    -0.003614465706050396,
    -0.030382266268134117,
    -0.004112535621970892,
    0.02017183229327202,
    0.01259010098874569,
    0.02150001935660839,
    -0.032236192375421524,
    -0.029967207461595535,
    -0.005862697958946228,
    -0.0011976161040365696,
    -0.013987463898956776,
    0.028306974098086357,
    -0.00244365562684834,
    -0.008225071243941784,
    0.017460117116570473,
    0.008840741589665413,
    -0.01402205228805542,
    0.0007060313946567476,
    0.003190760500729084,
    0.01949390396475792,
    -0.02559526078402996,
    0.013489393517374992,
    0.014803744852542877,
    -0.014720733277499676,
    0.03710620850324631,
    0.017764493823051453,
    0.004717829171568155,
    0.0037908656522631645,
    0.02358914539217949,
    -0.019258704036474228,
    -0.018497763201594353,
    0.0001861276978161186,
    -0.008059048093855381,
    -0.005125969648361206,
    0.016782188788056374,
    -0.013731511309742928,
    0.006761990953236818,
    0.014499369077384472,
    0.017819834873080254,
    0.010258857160806656,
    0.005931874271482229,
    0.014222663827240467,
    0.01371075864881277,
    -0.013489393517374992,
    0.018622281029820442,
    0.006827708333730698,
    0.0025750906206667423,
    0.02645304799079895,
    -0.01335104089230299,
    0.042003896087408066,
    -0.024059545248746872,
    0.003434607293456793,
    -0.011801490560173988,
    -0.024211732670664787,
    -0.020420866087079048,
    0.010224268771708012,
    -0.019355550408363342,
    -0.012264971621334553,
    -0.042003896087408066,
    0.0071666729636490345,
    0.005568698514252901,
    0.008059048093855381,
    0.018774468451738358,
    0.009864551946520805,
    -0.010376457124948502,
    0.03270659223198891,
    -0.005437263287603855,
    -0.04363645985722542,
    -0.0046555702574551105,
    -0.003052407642826438,
    0.026812763884663582,
    -0.0016515860334038734,
    0.011407184414565563,
    -0.008854576386511326,
    -0.006620179396122694,
    0.040841732174158096,
    0.01986745558679104,
    -0.0034501717891544104,
    0.008833823725581169,
    -0.008854576386511326,
    0.0030472194775938988,
    -0.011746149510145187,
    -0.01014125719666481,
    -0.033758074045181274,
    0.04034366458654404,
    0.0055756159126758575,
    0.010072080418467522,
    -0.009062105789780617,
    -0.0241978969424963,
    -0.0064852857030928135,
    -0.004531052894890308,
    0.013620829209685326,
    -0.012749206274747849,
    -0.00876464694738388,
    -0.0029590195044875145,
    0.02491733245551586,
    -0.015177297405898571,
    0.016284119337797165,
    -0.014402521774172783,
    0.0033394896890968084,
    0.009663940407335758,
    -0.01858077570796013,
    0.007761589717119932,
    0.004295852966606617,
    0.021029619500041008,
    0.019078845158219337,
    -0.017390942201018333,
    0.003199407598003745,
    0.0035158894024789333,
    -0.005236651748418808,
    0.0038358301389962435,
    0.002395232208073139,
    -0.017944352701306343,
    -0.005509898532181978,
    -0.00374244200065732,
    0.042640320956707,
    -0.015025109052658081,
    -0.022343970835208893,
    -0.004776629153639078,
    0.03929218277335167,
    0.008432600647211075,
    -0.002862172666937113,
    -0.02151385322213173,
    -0.03359204903244972,
    0.0008253606501966715,
    0.0034657365176826715,
    -0.021098796278238297,
    -0.010639326646924019,
    0.0014552980428561568,
    -0.00943565834313631,
    0.010148175060749054,
    0.021583030000329018,
    -0.012105866335332394,
    -0.0011967513710260391,
    0.006848461460322142,
    -0.0006844137678854167,
    0.004057194571942091,
    0.019563080742955208,
    -0.01227880734950304,
    0.006883049849420786,
    0.0006532844272442162,
    -0.011988266371190548,
    0.030382266268134117,
    0.03079732321202755,
    0.013281865045428276,
    0.027725892141461372,
    0.008349589072167873,
    -0.030714312568306923,
    -0.6317740082740784,
    -0.01285988837480545,
    -0.0037182304076850414,
    -0.012576265260577202,
    0.03364739194512367,
    0.008238906972110271,
    0.0031786547042429447,
    0.01155245490372181,
    -0.015357156284153461,
    0.01741861179471016,
    -0.04161651059985161,
    0.031433746218681335,
    0.0010436986340209842,
    -0.01736327074468136,
    -0.010148175060749054,
    -0.00996139831840992,
    0.006340015213936567,
    -0.01527414470911026,
    0.0026425377000123262,
    -0.0008353047887794673,
    -0.0242532379925251,
    0.008439518511295319,
    -0.01845625787973404,
    -0.0021167972590774298,
    0.0008383312379010022,
    0.012092030607163906,
    0.001381798181682825,
    -0.026978787034749985,
    -0.006637473590672016,
    0.0060944389551877975,
    -0.03129539266228676,
    0.03995627537369728,
    0.00956709310412407,
    -0.015080450102686882,
    0.03777030110359192,
    -0.008633212186396122,
    -0.024778978899121284,
    0.03904314711689949,
    -0.014928262680768967,
    0.04003928601741791,
    -0.009857634082436562,
    0.013662334531545639,
    0.0035401012282818556,
    -0.005997592117637396,
    -0.0015374450013041496,
    -0.005907662678509951,
    0.020434701815247536,
    0.004607146605849266,
    -0.0006169668049551547,
    -0.005831568501889706,
    0.012763042002916336,
    -0.018124211579561234,
    0.007886107079684734,
    -0.013406381942331791,
    -0.001650721300393343,
    0.01588289625942707,
    0.022025758400559425,
    -0.009975234046578407,
    0.007505637127906084,
    0.007436460815370083,
    0.003759736195206642,
    -0.00014137921971268952,
    -0.013399464078247547,
    -0.027020294219255447,
    -0.004053735639899969,
    0.02614867128431797,
    0.015025109052658081,
    -0.01001673936843872,
    -0.012922147288918495,
    -0.02743535116314888,
    0.017252588644623756,
    0.01679602451622486,
    -0.00023606438480783254,
    0.0017639975994825363,
    0.014513203874230385,
    0.025858130306005478,
    0.023436956107616425,
    -0.004126370884478092,
    -0.02536006085574627,
    0.033204659819602966,
    0.015384826809167862,
    0.013752263970673084,
    0.011414102278649807,
    -0.029911866411566734,
    0.03716155141592026,
    0.007004108279943466,
    -0.026176340878009796,
    -0.004738581832498312,
    0.016450142487883568,
    -0.012486336752772331,
    0.02083592489361763,
    0.009311140514910221,
    -0.0018314445624127984,
    -0.009504834190011024,
    0.007401872426271439,
    0.02547074295580387,
    -0.015329485759139061,
    -0.005886910017579794,
    0.001746703521348536,
    -0.024294743314385414,
    0.0046763233840465546,
    -0.019895127043128014,
    0.004524135030806065,
    0.0034640070516616106,
    0.018705293536186218,
    0.006782744079828262,
    -0.04183787479996681,
    -0.006672061514109373,
    0.03270659223198891,
    -0.014125816524028778,
    -0.007388037163764238,
    -0.04496464505791664,
    -0.015924401581287384,
    0.0006991137634031475,
    0.026051824912428856,
    -0.01729409396648407,
    0.01722491905093193,
    -0.0006130756810307503,
    0.027961092069745064,
    0.018663786351680756,
    0.005990674253553152,
    -0.017792165279388428,
    0.008349589072167873,
    0.014872921630740166,
    0.03126772493124008,
    0.023063404485583305,
    0.002303573302924633,
    -0.022440817207098007,
    -0.01986745558679104,
    0.008266577497124672,
    0.009698527865111828,
    0.0033550544176250696,
    0.007574813440442085,
    -0.017307929694652557,
    0.024211732670664787,
    -0.020379360765218735,
    0.031074028462171555,
    -0.0015884626191109419,
    0.01851159892976284,
    -0.0234092865139246,
    0.0015287980204448104,
    -0.010182762518525124,
    0.009318058378994465,
    0.00658559100702405,
    -0.013565488159656525,
    -0.02015799656510353,
    -0.004703993909060955,
    0.005274699069559574,
    -0.013876781798899174,
    0.013413299806416035,
    -0.025982648134231567,
    -0.00812822487205267,
    -0.023727497085928917,
    0.037797972559928894,
    0.023118745535612106,
    -0.02908174879848957,
    -0.018705293536186218,
    -0.02627318911254406,
    -0.00187467981595546,
    -0.0021479264833033085,
    0.00010776382987387478,
    0.002267255913466215,
    -0.028210127726197243,
    -0.011102808639407158,
    -0.01680986024439335,
    0.003249560482800007,
    -0.024267073720693588,
    0.02720015123486519,
    -0.014457862824201584,
    -0.0337304025888443,
    0.005731262732297182,
    -0.002630431903526187,
    -0.01438868697732687,
    0.002751490566879511,
    0.025429237633943558,
    0.0015720331575721502,
    0.0009883574675768614,
    -0.0070698256604373455,
    0.018317904323339462,
    0.006340015213936567,
    -0.003936136141419411,
    0.029607489705085754,
    0.002428090898320079,
    -0.01512195635586977,
    0.023492299020290375,
    0.004282017704099417,
    0.00824582390487194,
    0.030382266268134117,
    -0.024543778970837593,
    -0.012624689377844334,
    -0.01874679885804653,
    0.001341157010756433,
    -0.003247831016778946,
    0.01754312962293625,
    -0.0022188322618603706,
    0.0017985858721658587,
    -0.015467838384211063,
    0.009124364703893661,
    -0.007913777604699135,
    0.024599120020866394,
    -0.002438467228785157,
    0.010072080418467522,
    0.005489145405590534,
    -0.0007838548626750708,
    -0.024986507371068,
    -0.0015019921120256186,
    0.0243085790425539,
    0.0017665917985141277,
    -0.00016451007104478776,
    -0.024723637849092484,
    0.03619308024644852,
    -0.02675742283463478,
    -0.004831970203667879,
    -0.005610204301774502,
    0.009394152089953423,
    -0.0005581668810918927,
    0.0012987864902243018,
    0.002877737395465374,
    -0.010404127649962902,
    -0.004818134941160679,
    0.011462525464594364,
    0.016339460387825966,
    -0.0007721813162788749,
    -0.016408637166023254,
    -0.005309286992996931,
    0.0013964981772005558,
    0.040841732174158096,
    0.05102449655532837,
    -0.011414102278649807,
    -0.02743535116314888,
    -0.00043818913400173187,
    0.03171045333147049,
    0.009657022543251514,
    -0.02040703222155571,
    0.005406133830547333,
    -0.02565060183405876,
    0.0206422321498394,
    -0.01704506017267704,
    0.040177639573812485,
    -0.02639770694077015,
    0.008294248022139072,
    -0.0007989871664904058,
    0.01924486830830574,
    -0.022759027779102325,
    0.03029925376176834,
    0.02260684035718441,
    0.03323233127593994,
    0.0059872157871723175,
    0.0017968564061447978,
    -0.01874679885804653,
    -0.007754671853035688,
    -0.004835428670048714,
    0.0036110070068389177,
    0.012140454724431038,
    0.010514809750020504,
    -0.001872950466349721,
    -0.01667150668799877,
    0.022523829713463783,
    0.02877737395465374,
    0.024239402264356613,
    0.016118096187710762,
    -0.0030299252830445766,
    0.01809654012322426,
    0.04026065394282341,
    0.033813413232564926,
    -0.005655169021338224,
    -0.0257197767496109,
    -0.025028014555573463,
    -0.0032218897249549627,
    -0.032402217388153076,
    -0.015066615305840969,
    -0.02162453532218933,
    0.002827584510669112,
    -0.03262358158826828,
    0.01133800856769085,
    -0.006405732594430447,
    -0.004776629153639078,
    0.0036006304435431957,
    0.004818134941160679,
    0.001157839666120708,
    -0.045186009258031845,
    -0.044134531170129776,
    0.03893246501684189,
    0.013904452323913574,
    0.00010295390529790893,
    0.006730861496180296,
    0.011047467589378357,
    0.0054476396180689335,
    -0.01936938613653183,
    0.022634511813521385,
    -0.014250334352254868,
    0.007554060313850641,
    0.007360366638749838,
    0.0103211160749197,
    -0.010646244511008263,
    -0.003384454408660531,
    0.010646244511008263,
    0.003012631321325898,
    -0.00965010467916727,
    -0.023008063435554504,
    -0.00012765203427989036,
    -0.020324019715189934,
    -0.011254996992647648,
    0.006554462015628815,
    0.0529060959815979,
    0.02296655811369419,
    -0.01667150668799877,
    -0.010798432864248753,
    0.0024125261697918177,
    -0.026868104934692383,
    -0.005516816396266222,
    -0.0016299684066325426,
    -0.010715421289205551,
    -0.01441635750234127,
    0.008107471279799938,
    0.008730058558285236,
    0.005613663233816624,
    -0.01815188117325306,
    0.023367781192064285,
    -0.009311140514910221,
    -0.002369290916249156,
    -0.03428381308913231,
    -0.03242988511919975,
    0.02083592489361763,
    0.03489256650209427,
    0.018068870529532433,
    0.00891683530062437,
    -0.011981348507106304,
    -0.03763195127248764,
    0.020144160836935043,
    -0.037050869315862656,
    0.004333900287747383,
    0.013198853470385075,
    0.014803744852542877,
    -0.023423122242093086,
    -0.017086565494537354,
    0.008107471279799938,
    0.008266577497124672,
    0.026798928156495094,
    0.006488744169473648,
    -0.0018573857378214598,
    0.005904203746467829,
    -0.01752929389476776,
    -0.01815188117325306,
    0.025512248277664185,
    0.0037977832835167646,
    -0.012168125249445438,
    0.0076439897529780865,
    0.033260002732276917,
    -0.015730708837509155,
    0.020310183987021446,
    0.001652450766414404,
    -0.011434854939579964,
    -0.03209783881902695,
    -0.013102006167173386,
    0.007630154490470886,
    0.0031786547042429447,
    0.004209382459521294,
    -0.03165511041879654,
    0.05077546089887619,
    0.014291839674115181,
    0.01826256327331066,
    -0.0007842871709726751,
    -0.002320867497473955,
    0.0034052073024213314,
    0.021430842578411102,
    -0.0013472100254148245,
    0.02090510167181492,
    -0.0012175042647868395,
    -0.026314694434404373,
    -0.01754312962293625,
    0.016394801437854767,
    -0.022316299378871918,
    -0.0021444677840918303,
    -0.005907662678509951,
    0.01858077570796013,
    -0.03353670984506607,
    -0.015426332131028175,
    0.023077240213751793,
    -0.00014840494259260595,
    0.01770915277302265,
    -0.011504031717777252,
    -0.0048942286521196365,
    -0.050858475267887115,
    -0.0002217967703472823,
    -0.020241009071469307,
    -0.012341066263616085,
    -0.0077200839295983315,
    0.002194620668888092,
    -0.010417962446808815,
    -0.014042804948985577,
    0.020241009071469307,
    -0.016726847738027573,
    -0.000715110800229013,
    -0.008543282747268677,
    -0.01972910389304161,
    -0.01913418620824814,
    0.01942472718656063,
    0.038351383060216904,
    -0.01160779595375061,
    -0.0009001576108857989,
    -0.013904452323913574,
    -0.006530249956995249,
    0.0026581024285405874,
    -0.019231032580137253,
    -0.024709802120923996,
    -0.0031613605096936226,
    -0.02938612550497055,
    0.009062105789780617,
    -0.02138933539390564,
    0.0016386155039072037,
    0.004572558682411909,
    0.03129539266228676,
    0.034256141632795334,
    0.012700783088803291,
    0.0035176188684999943,
    0.010044409893453121,
    -0.00904827006161213,
    0.03433915600180626,
    0.0018435504753142595,
    0.0037666538264602423,
    -0.005644792690873146,
    0.014250334352254868,
    -0.001188104273751378,
    -0.0009382046409882605,
    -0.028389986604452133,
    0.015689203515648842,
    -0.013212688267230988,
    0.008806153200566769,
    0.008418764919042587,
    0.002573361387476325,
    0.04587777331471443,
    -0.019701432436704636,
    -0.004946111235767603,
    0.016754519194364548,
    -0.01063240971416235,
    0.003808159613981843,
    0.006063309498131275,
    0.025097189471125603,
    0.0033965602051466703,
    -0.01014125719666481,
    0.017612306401133537,
    0.004593311343342066,
    -0.02548457868397236,
    -0.009027517400681973,
    -0.027629045769572258,
    0.008833823725581169,
    0.03281727433204651,
    -0.0003380995476618409,
    0.007353449240326881,
    0.005817733239382505,
    -0.028694361448287964,
    0.004389241337776184,
    0.003683642251417041,
    0.016463978216052055,
    -0.0075678955763578415,
    0.014333345927298069,
    -0.002066644374281168,
    0.0038392890710383654,
    -0.02004731446504593,
    -0.00713208457455039,
    0.018788304179906845,
    0.011123561300337315,
    -0.016394801437854767,
    -0.018788304179906845,
    0.014430192299187183,
    -0.027172481641173363,
    -0.006402273662388325,
    -0.01698971912264824,
    -0.029967207461595535,
    -0.034809552133083344,
    0.014983603730797768,
    -0.007685495540499687,
    0.027117140591144562,
    0.0015694390749558806,
    0.017197247594594955,
    0.019272539764642715,
    0.007083660922944546,
    -0.007796177640557289,
    0.01838708110153675,
    0.007685495540499687,
    -0.005492604337632656,
    0.014859085902571678,
    0.014859085902571678,
    0.027601374313235283,
    0.009235046803951263,
    0.0003313980996608734,
    -0.007747754454612732,
    0.0035193483345210552,
    -0.010376457124948502,
    -0.013676170259714127,
    -0.006557920482009649,
    0.003949971403926611,
    -0.023782838135957718,
    0.028749702498316765,
    0.015315650030970573,
    0.023492299020290375,
    -0.017736824229359627,
    0.006976437754929066,
    0.003131960518658161,
    0.002006114926189184,
    -0.002948643174022436,
    -0.029967207461595535,
    -0.024516109377145767,
    -0.00488731125369668,
    0.00374935963191092,
    -0.025678271427750587,
    0.0030333842150866985,
    -0.05207597836852074,
    -0.02809944562613964,
    0.015620025806128979,
    -0.010438715107738972,
    0.003413854166865349,
    -0.025207871571183205,
    0.015910567715764046,
    0.01384219340980053,
    -0.007948365993797779,
    0.022274794057011604,
    0.02387968637049198,
    -0.025692107155919075,
    0.0018331740284338593,
    -0.023755168542265892,
    -0.005530651658773422,
    -0.0013939039781689644,
    0.015108120627701283,
    0.003628300968557596,
    0.030769653618335724,
    -0.0007622372359037399,
    -0.0059111216105520725,
    0.03115704096853733,
    0.024723637849092484,
    -0.009657022543251514,
    0.018442422151565552,
    -0.006419567856937647,
    -0.0004025200614705682,
    -0.005312745925039053,
    -0.03331534564495087,
    -0.035722680389881134,
    -0.014347180724143982,
    0.0035349128302186728,
    0.025526084005832672,
    0.023575309664011,
    -0.031323064118623734,
    -0.0032201604917645454,
    0.02015799656510353,
    -0.007401872426271439,
    0.032595910131931305,
    0.025885799899697304,
    0.024474602192640305,
    0.013053582981228828,
    0.02369982749223709,
    0.007713166065514088,
    -0.005291992798447609,
    -0.014554710127413273,
    -0.0011068220483139157,
    0.01777832955121994,
    0.011227326467633247,
    -0.0014414627803489566,
    -0.010563232935965061,
    0.005181310698390007,
    0.019092680886387825,
    -0.027034128084778786,
    -0.014333345927298069,
    0.029413796961307526,
    -0.010653162375092506,
    0.012479418888688087,
    -0.03231920301914215,
    -0.002684043487533927,
    -0.005015287548303604,
    0.027656715363264084,
    -0.013862946070730686,
    -0.008114389143884182,
    0.013738429173827171,
    -0.012763042002916336,
    -0.013247276656329632,
    0.011614713817834854,
    0.01081918552517891,
    0.002324326429516077,
    0.01728026010096073,
    0.014789910055696964,
    -0.017681483179330826,
    -0.015813719481229782,
    -0.012603935785591602,
    -0.007270437199622393,
    0.003310089698061347,
    0.03707853704690933,
    -0.01838708110153675,
    -0.0071113319136202335,
    0.030520617961883545,
    0.03752126917243004,
    -0.01765381172299385,
    0.004413452930748463,
    -0.006834626197814941,
    0.031682781875133514,
    -0.01734943501651287,
    -0.03159977123141289,
    -0.01918952725827694,
    -0.025138696655631065,
    0.011095890775322914,
    0.007713166065514088,
    -0.0012512276880443096,
    0.0005080140545032918,
    -0.01514962688088417,
    -0.014430192299187183,
    0.0072012608870863914,
    -0.018317904323339462,
    -0.029192430898547173,
    -0.0016247802414000034,
    0.009760786779224873,
    -0.023187922313809395,
    -0.010639326646924019,
    -0.025692107155919075,
    0.00675161462277174,
    -0.01784750632941723,
    -0.017695317044854164,
    -0.015689203515648842,
    -0.02742151729762554,
    0.0035349128302186728,
    0.012479418888688087,
    0.02187357097864151,
    0.0027220905758440495,
    0.04734431207180023,
    -0.021029619500041008,
    0.002125444123521447,
    -0.03364739194512367,
    0.010314198210835457,
    -0.023921191692352295,
    0.02462679147720337,
    -0.0038323714397847652,
    -0.008273494429886341,
    0.00597338005900383,
    -0.00027238199254497886,
    -0.03826837241649628,
    -0.02963516116142273,
    0.018317904323339462,
    0.026314694434404373,
    0.02645304799079895,
    -0.010397209785878658,
    0.0015166921075433493,
    -0.018041199073195457,
    -0.0013229981996119022,
    0.006419567856937647,
    -0.040786392986774445,
    0.032180849462747574,
    -0.01960458606481552,
    -0.0008357370970770717,
    0.02253766357898712,
    -0.0009779810206964612,
    0.0045829350128769875,
    -0.008819987997412682,
    0.015799885615706444,
    0.010404127649962902,
    -0.02731083333492279,
    -0.012970571406185627,
    -0.017003552988171577,
    0.003327383892610669,
    -0.022717522457242012,
    0.013399464078247547,
    -0.028362315148115158,
    -0.03129539266228676,
    -0.02511102519929409,
    0.05293376371264458,
    0.03450517728924751,
    -0.016892870888113976,
    -0.015066615305840969,
    0.010473303496837616,
    0.008231989108026028,
    -0.020379360765218735,
    -0.018539268523454666,
    -0.012686947360634804,
    -0.003559124656021595,
    -0.007962200790643692,
    -0.038711100816726685,
    -0.0028500668704509735,
    0.0062604621052742004,
    0.016519319266080856,
    0.032042499631643295,
    -0.02314641699194908,
    -0.022413145750761032,
    -0.013233440928161144,
    -0.030326925218105316,
    -0.004984158091247082,
    -0.01404972281306982,
    0.024543778970837593,
    0.013959793373942375,
    0.03500324860215187,
    0.00649220310151577,
    0.006312344688922167,
    -0.020019643008708954,
    0.015370991080999374,
    -0.026812763884663582,
    0.020420866087079048,
    0.024516109377145767,
    -0.00474895816296339,
    -0.008902999572455883,
    -0.016851365566253662,
    -0.01402205228805542,
    -0.0022810911759734154,
    0.012161207385361195,
    -0.0012365278089419007,
    -0.02296655811369419,
    0.017335601150989532,
    -0.009096694178879261,
    -0.013738429173827171,
    -0.01441635750234127,
    0.00803137756884098,
    -0.003317007329314947,
    0.019106516614556313,
    0.026190176606178284,
    -0.008882246911525726,
    -0.006685896776616573,
    -0.0018262563971802592,
    0.028445327654480934,
    0.004984158091247082,
    0.015287979505956173,
    -0.010805350728332996,
    -0.011815325357019901,
    0.010673915036022663,
    -0.02046237327158451,
    -0.02396269701421261,
    -0.022593004629015923,
    0.02309107594192028,
    0.024571450427174568,
    -0.003413854166865349,
    0.014430192299187183,
    0.029828853905200958,
    -0.025526084005832672,
    -0.00819048285484314,
    0.009525586850941181,
    0.03049294836819172,
    -0.029109420254826546,
    -0.010563232935965061,
    0.009850716218352318,
    -0.00687267305329442,
    -0.01512195635586977,
    -0.0040295240469276905,
    0.0353076234459877,
    -0.009906057268381119,
    0.014693062752485275,
    0.008273494429886341,
    -0.008591705933213234,
    -0.008958340622484684,
    0.0032806897070258856,
    0.003496865974739194,
    -0.01856693997979164,
    -0.014374851249158382,
    0.02303573489189148,
    0.022274794057011604,
    0.015426332131028175,
    -0.016118096187710762,
    -0.02944146655499935,
    -0.027656715363264084,
    0.004925358109176159,
    -0.0028396903071552515,
    -0.013274947181344032,
    -0.04338742420077324,
    0.012147371657192707,
    0.008640130050480366,
    -0.03403477743268013,
    0.013060499913990498,
    0.1643630713224411,
    0.00685883779078722,
    -0.014554710127413273,
    0.006665144115686417,
    0.004576017614454031,
    0.008349589072167873,
    0.011282667517662048,
    -0.003294524969533086,
    -0.01353089977055788,
    0.01650548353791237,
    -0.006651308853179216,
    -0.011407184414565563,
    0.01575837843120098,
    0.00026308640372008085,
    0.026176340878009796,
    -0.010860691778361797,
    -0.009207376278936863,
    -0.00906902365386486,
    -0.03301096707582474,
    -0.023976532742381096,
    -0.010334950871765614,
    -0.011414102278649807,
    -0.014015134423971176,
    -0.02253766357898712,
    0.009449493139982224,
    0.007491801865398884,
    -0.006177450530230999,
    -0.018345575779676437,
    0.0024713261518627405,
    0.015343320555984974,
    -0.012258054688572884,
    0.004551805555820465,
    4.901794818579219e-05,
    -0.00949791632592678,
    -0.03276193141937256,
    -0.025194037705659866,
    0.009027517400681973,
    0.017211083322763443,
    0.027338504791259766,
    0.03768729045987129,
    -0.028320809826254845,
    -0.022814368829131126,
    -0.0039741829968988895,
    -0.023782838135957718,
    4.53699758509174e-05,
    -0.01856693997979164,
    0.008536364883184433,
    0.007152837701141834,
    -0.01399438176304102,
    0.03743825480341911,
    -0.014914426952600479,
    -0.016159601509571075,
    0.02883271500468254,
    0.01734943501651287,
    -0.0007060313946567476,
    -0.017446283251047134,
    0.021430842578411102,
    0.05047108605504036,
    0.016823695972561836,
    0.02296655811369419,
    -0.00870930589735508,
    0.04239128530025482,
    -0.011178902350366116,
    0.024834319949150085,
    -0.03190414607524872,
    -0.00816281232982874,
    -0.0011906983563676476,
    0.004883852321654558,
    -0.004939193371683359,
    0.021181806921958923,
    -0.002948643174022436,
    -0.01900966838002205,
    -0.012444830499589443,
    0.007491801865398884,
    -0.01801352947950363,
    -0.006699732039123774,
    0.05689065530896187,
    0.02060072496533394,
    0.00578660424798727,
    0.0054130516946315765,
    -0.03126772493124008,
    -0.0027255492750555277,
    -0.02033785544335842,
    0.007353449240326881,
    -0.005921497941017151,
    -0.018290234729647636,
    0.007740836590528488,
    0.0035867951810359955,
    -0.012569348327815533,
    -0.008723141625523567,
    -0.023741332814097404,
    -0.025249378755688667,
    0.014194993302226067,
    -0.03389642387628555,
    0.005205522291362286,
    0.015481673181056976,
    0.002135820686817169,
    0.007982954382896423,
    -0.012375653721392155,
    -0.006713567301630974,
    -0.009484081529080868,
    0.06214805692434311,
    -0.009705445729196072,
    0.019812114536762238,
    -0.017086565494537354,
    -0.01930020935833454,
    -0.012479418888688087,
    0.007547142915427685,
    -0.003444983623921871,
    0.009587845765054226,
    0.0064852857030928135,
    -0.029192430898547173,
    -0.017183411866426468,
    -0.006201662123203278,
    -0.008197400718927383,
    -0.00563441589474678,
    -0.016450142487883568,
    -0.028389986604452133,
    -0.0023589145857840776,
    -0.002934807911515236,
    -0.010639326646924019,
    0.0004920170176774263,
    -0.014983603730797768,
    -0.01797202229499817,
    0.0010756927076727152,
    -0.014015134423971176,
    -0.010148175060749054,
    -0.00803137756884098,
    0.012320312671363354,
    -0.031433746218681335,
    0.016851365566253662,
    -0.021403171122074127,
    0.025858130306005478,
    -0.00514672277495265,
    -0.0382407009601593,
    -0.014250334352254868,
    -0.022745193913578987,
    -0.020669901743531227,
    -0.010078998282551765,
    -0.00938031729310751,
    -0.03207016736268997,
    0.002374479081481695,
    0.02150001935660839,
    -0.03209783881902695,
    0.01624261401593685,
    -0.023616814985871315,
    0.010030575096607208,
    -0.011441772803664207,
    -0.005572157446295023,
    0.00336888968013227,
    -0.020628396421670914,
    -7.46348305256106e-05,
    0.013261111453175545,
    0.008612459525465965,
    0.02292505092918873,
    -0.0012944629415869713,
    0.0022689851466566324,
    -0.007782342378050089,
    0.008017541840672493,
    -0.0034000189043581486,
    -0.042972367256879807,
    -0.013205770403146744,
    0.011905254796147346,
    0.003007443156093359,
    -0.036331433802843094,
    -0.0076993308030068874,
    -0.17720220983028412,
    0.015675367787480354,
    0.02897106669843197,
    -0.03409012034535408,
    -0.00014029834710527211,
    -0.02999487705528736,
    0.00013846084766555578,
    0.017501624301075935,
    -0.0013973627937957644,
    -0.018912822008132935,
    0.02314641699194908,
    0.007291190326213837,
    -0.022869709879159927,
    -0.03586103394627571,
    0.0050810049287974834,
    0.0017008741851896048,
    0.014706898480653763,
    0.003697477513924241,
    0.04875551164150238,
    0.007519472390413284,
    0.033149320632219315,
    7.177048973971978e-05,
    0.023021899163722992,
    0.009823045693337917,
    0.004147124011069536,
    -0.01149019692093134,
    -0.009152035228908062,
    0.019327880814671516,
    0.016228778287768364,
    -0.011123561300337315,
    0.0005862698308192194,
    0.03079732321202755,
    0.002874278463423252,
    -0.016962047666311264,
    0.02328476868569851,
    0.018594611436128616,
    0.023727497085928917,
    -0.02518020197749138,
    -0.030437607318162918,
    0.022219453006982803,
    0.017460117116570473,
    0.033453695476055145,
    0.00040057447040453553,
    -0.022413145750761032,
    -0.01118582021445036,
    -0.002298385137692094,
    0.026964953169226646,
    0.003304901532828808,
    0.005063710734248161,
    -0.03616541251540184,
    0.026909612119197845,
    -0.017197247594594955,
    0.018677622079849243,
    -0.0025370437651872635,
    -0.0036110070068389177,
    0.009864551946520805,
    0.01001673936843872,
    0.0006230197614058852,
    -0.0027618668973445892,
    -0.017266424372792244,
    0.010957538150250912,
    -0.03256823867559433,
    0.0021548441145569086,
    0.006755073554813862,
    -0.015869060531258583,
    -0.007311942987143993,
    -0.031793463975191116,
    0.027103304862976074,
    -0.02657756395637989,
    0.018483927473425865,
    0.0052643222734332085,
    -0.0020752912387251854,
    5.039607276557945e-05,
    -0.00615323893725872,
    0.01802736334502697,
    0.007152837701141834,
    -0.02548457868397236,
    0.03807467967271805,
    0.030050218105316162,
    -0.015343320555984974,
    -0.007547142915427685,
    0.03865576162934303,
    0.009843798354268074,
    0.009843798354268074,
    0.01734943501651287,
    0.006381521001458168,
    0.006180909462273121,
    -0.001152651384472847,
    -0.007560978177934885,
    -0.004437664523720741,
    0.03788098320364952,
    -0.018165716901421547,
    0.009726198390126228,
    0.0072220140136778355,
    0.011822243221104145,
    0.0009970045648515224,
    0.020393196493387222,
    -0.010051327757537365,
    0.014803744852542877,
    -0.011815325357019901,
    0.0110267149284482,
    0.008259659633040428,
    -0.028998738154768944,
    0.011995184235274792,
    0.03599938750267029,
    0.013627746142446995,
    -0.02096044272184372,
    0.016934378072619438,
    0.01912035048007965,
    -0.015481673181056976,
    -0.02614867128431797,
    0.01570303738117218,
    0.02296655811369419,
    -0.000901887018699199,
    -0.010494056157767773,
    0.045545727014541626,
    0.013669252395629883,
    -0.017889011651277542,
    0.0009139928733929992,
    -0.004925358109176159,
    0.03306630998849869,
    0.024516109377145767,
    -0.007581731304526329,
    -0.0028984902892261744,
    -0.01986745558679104,
    -0.04529669135808945,
    -0.07841834425926208,
    -0.037299904972314835,
    0.016284119337797165,
    -0.013461722992360592,
    0.0011924278223887086,
    -0.018497763201594353,
    0.007505637127906084,
    0.02181822992861271,
    0.026480717584490776,
    0.001220098347403109,
    -0.00015716008783783764,
    -0.0031596310436725616,
    -0.011137397028505802,
    -0.019659927114844322,
    0.002388314576819539,
    -0.006315803155303001,
    -0.023976532742381096,
    -0.029496807605028152,
    0.031433746218681335,
    0.01157320849597454,
    -0.015537014231085777,
    0.0070905787870287895,
    0.009062105789780617,
    -0.010279609821736813,
    -0.005430345889180899,
    0.005018746480345726,
    -0.020988112315535545,
    0.012963653542101383,
    0.02677125856280327,
    0.023630650714039803,
    0.0010999044170603156,
    -0.0227866992354393,
    -0.006035638973116875,
    0.008280412293970585,
    0.002697878750041127,
    0.015896731987595558,
    -0.03818536177277565,
    -0.006198203656822443,
    0.027047963812947273,
    -0.01399438176304102,
    0.0012814924120903015,
    -0.008923753164708614,
    0.017792165279388428,
    -0.015924401581287384,
    -0.01833174005150795,
    -0.0003422068839427084,
    -0.003880794858559966,
    0.015979742631316185,
    -0.0006839814595878124,
    -0.019148021936416626,
    -0.020808255299925804,
    -0.011995184235274792,
    -0.012991324067115784,
    -0.03165511041879654,
    0.012963653542101383,
    0.01802736334502697,
    0.01014125719666481,
    0.0033965602051466703,
    -0.005440722219645977,
    -0.008660882711410522,
    0.001246904255822301,
    -0.01588289625942707,
    -0.013925204984843731,
    0.013406381942331791,
    0.006634014658629894,
    -0.001090392703190446,
    0.0003623112861532718,
    -0.008045212365686893,
    0.044328223913908005,
    -0.020669901743531227,
    -0.01048022136092186,
    0.03182113543152809,
    -0.024945002049207687,
    0.013081253506243229,
    -0.027712056413292885,
    0.00748488400131464,
    0.01155245490372181,
    0.009670857340097427,
    0.010334950871765614,
    0.004742040764540434,
    -0.014485533349215984,
    -3.515565185807645e-05,
    -0.0007315402035601437,
    -0.013205770403146744,
    0.013904452323913574,
    0.012901394627988338,
    0.01858077570796013,
    -0.00522627541795373,
    0.008176648057997227,
    -0.05094148591160774,
    0.006806955672800541,
    -0.0023917732760310173,
    0.027781233191490173,
    -0.0046763233840465546,
    0.008757729083299637,
    -0.001494209747761488,
    0.004171335604041815,
    -0.0001355424610665068,
    -0.0411737821996212,
    0.015896731987595558,
    -0.06043248251080513,
    0.00658559100702405,
    -0.07792027294635773,
    -0.00010398074664408341,
    -6.874402606626973e-05,
    -0.008204318583011627,
    0.012998241931200027,
    -0.00011597852426348254,
    0.0017622682498767972,
    -0.03018857166171074,
    0.00042500236304476857,
    0.0002559525892138481,
    -0.025927307084202766,
    -0.02811327949166298,
    -0.010756926611065865,
    -0.006267379969358444,
    0.00996139831840992,
    -0.00611173314973712,
    0.03782564401626587,
    -0.004828511271625757,
    0.040482018142938614,
    -0.0028950313571840525,
    -0.012735371477901936,
    0.00685883779078722,
    0.02296655811369419,
    -0.006301967892795801,
    -0.01631179079413414,
    -0.004831970203667879,
    -0.012327230535447598,
    -0.006461073644459248,
    -0.024848155677318573,
    -0.02677125856280327,
    0.028445327654480934,
    -0.00042954206583090127,
    0.016201108694076538,
    0.018649952486157417,
    -0.009366481564939022,
    0.00837034173309803,
    0.017460117116570473,
    0.005502981133759022,
    0.00470745237544179,
    0.00473512290045619,
    -0.009179705753922462,
    -0.008833823725581169,
    0.019397055730223656,
    -0.031378407031297684,
    -0.013883698731660843,
    -0.010494056157767773,
    -0.0005763256922364235,
    0.006966061424463987,
    0.0322638638317585,
    0.02652222290635109,
    0.031074028462171555,
    0.016353296115994453,
    -0.027961092069745064,
    -0.017432447522878647,
    0.026729753240942955,
    -0.030326925218105316,
    0.040426675230264664,
    -0.0013705570017918944,
    -0.011870666407048702,
    0.01337871141731739,
    0.017501624301075935,
    0.005641333758831024,
    0.005042958073318005,
    0.01992279663681984,
    -0.009926809929311275,
    -0.001622186042368412,
    -0.03984559327363968,
    -0.0070352377369999886,
    0.0006995461299084127,
    -0.014444028027355671,
    -0.045462716370821,
    -0.029856525361537933,
    0.010431798174977303,
    -0.003078348934650421,
    0.043415095657110214,
    -0.0025889258831739426,
    -0.0110267149284482,
    0.001744974171742797,
    -0.021583030000329018,
    0.01063240971416235,
    0.01710040122270584,
    -0.000992681016214192,
    -0.028915725648403168,
    0.02133399434387684,
    0.025083355605602264,
    0.0011725396616384387,
    -0.01680986024439335,
    -0.0007241902058012784,
    0.003943053539842367,
    0.012133536860346794,
    0.0022689851466566324,
    0.005022204946726561,
    0.0042128413915634155,
    0.01066008023917675,
    0.018055034801363945,
    0.009366481564939022,
    -0.003455360187217593,
    -0.028445327654480934,
    0.011690807528793812,
    0.003315277863293886,
    0.009110528975725174,
    -0.005056793335825205,
    0.03514159843325615,
    -0.02389352023601532,
    -0.02078058384358883,
    0.0023468085564672947,
    -0.0016014331486076117,
    -0.029718171805143356,
    -0.0005136345862410963,
    -0.0014449215959757566,
    0.0015556038124486804,
    -0.01194676011800766,
    0.028445327654480934,
    0.012230384163558483,
    -0.021541524678468704,
    0.01230647787451744,
    -0.0006277756183408201,
    -0.018525434657931328,
    -0.01512195635586977,
    0.008204318583011627,
    0.009525586850941181,
    -0.0037666538264602423,
    0.04795306548476219,
    -0.0036455951631069183,
    0.025885799899697304,
    0.012292642146348953,
    0.020877430215477943,
    -0.006284674163907766,
    -0.004019147716462612,
    0.002481702482327819,
    -0.011427938006818295,
    0.004115994554013014,
    -0.030631300061941147,
    -0.016699178144335747,
    0.0030333842150866985,
    -0.010417962446808815,
    -0.008439518511295319,
    0.008743894286453724,
    0.0013152159517630935,
    0.08445052057504654,
    -0.0007419166504405439,
    -0.009165870025753975,
    -0.019383221864700317,
    0.013606993481516838,
    0.005298910662531853,
    0.04178253188729286,
    0.0006212903535924852,
    -0.027172481641173363,
    -0.008487941697239876,
    0.026356199756264687,
    0.00426126504316926,
    -0.022330135107040405,
    -0.0022845498751848936,
    -0.03140607476234436,
    0.0003227510314900428,
    -0.04338742420077324,
    0.03749359771609306,
    0.0018227975815534592,
    0.013579322956502438,
    0.025498412549495697,
    0.008806153200566769,
    0.014720733277499676,
    -0.02933078445494175,
    -0.02603798918426037,
    0.010729256086051464,
    0.01954924501478672,
    0.004441123455762863,
    0.005624039564281702,
    -0.04466027021408081,
    0.017321765422821045,
    0.00839801225811243,
    -0.023852014914155006,
    -0.011628549546003342,
    0.007893024943768978,
    -0.002267255913466215,
    -0.0011759984772652388,
    -0.03281727433204651,
    0.01035570353269577,
    -0.009110528975725174,
    -0.0013031100388616323,
    -0.00034134218003600836,
    -0.013945957645773888,
    -0.03746592625975609,
    -0.008792317472398281,
    0.0048215934075415134,
    -0.013295699842274189,
    -0.00093733990797773,
    -0.04449424520134926
  ]
}
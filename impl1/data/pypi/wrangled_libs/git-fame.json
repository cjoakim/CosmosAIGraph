{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "environment :: macos x",
    "environment :: other environment",
    "environment :: win32 (ms windows)",
    "environment :: x11 applications",
    "framework :: ipython",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: end users/desktop",
    "intended audience :: other audience",
    "intended audience :: system administrators",
    "license :: osi approved :: mozilla public license 2.0 (mpl 2.0)",
    "operating system :: macos",
    "operating system :: macos :: macos x",
    "operating system :: microsoft",
    "operating system :: microsoft :: ms-dos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: posix :: bsd",
    "operating system :: posix :: bsd :: freebsd",
    "operating system :: posix :: linux",
    "operating system :: posix :: sunos/solaris",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation",
    "programming language :: python :: implementation :: ironpython",
    "programming language :: python :: implementation :: pypy",
    "programming language :: unix shell",
    "topic :: desktop environment",
    "topic :: education :: computer aided instruction (cai)",
    "topic :: education :: testing",
    "topic :: office/business",
    "topic :: other/nonlisted topic",
    "topic :: software development :: build tools",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: pre-processors",
    "topic :: software development :: user interfaces",
    "topic :: system :: installation/setup",
    "topic :: system :: logging",
    "topic :: system :: monitoring",
    "topic :: system :: shells",
    "topic :: terminals",
    "topic :: utilities"
  ],
  "description": "git-fame\n========\n\npretty-print ``git`` repository collaborators sorted by contributions.\n\n|py-versions| |pypi| |conda-forge| |docker| |snapcraft|\n\n|build-status| |coverage-status| |branch-coverage-status| |codacy-grade| |libraries-rank| |pypi-downloads|\n\n|doi-uri| |licence| |openhub-status| |sponsor-casper|\n\n.. code:: sh\n\n    ~$ git fame --cost hour,month --loc ins\n    processing: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00,  2.16repo/s]\n    total commits: 1775\n    total ctimes: 2770\n    total files: 461\n    total hours: 449.7\n    total loc: 41659\n    total months: 151.0\n    | author               |   hrs |   mths |   loc |   coms |   fils |  distribution   |\n    |:---------------------|------:|-------:|------:|-------:|-------:|:----------------|\n    | casper da costa-luis |   228 |    108 | 28572 |   1314 |    172 | 68.6/74.0/37.3  |\n    | stephen larroque     |    28 |     18 |  5243 |    203 |     25 | 12.6/11.4/ 5.4  |\n    | pgajdos              |     2 |      9 |  2606 |      2 |     18 | 6.3/ 0.1/ 3.9   |\n    | martin zugnoni       |     2 |      5 |  1656 |      3 |      3 | 4.0/ 0.2/ 0.7   |\n    | kyle altendorf       |     7 |      2 |   541 |     31 |      7 | 1.3/ 1.7/ 1.5   |\n    | hadrien mary         |     5 |      1 |   469 |     31 |     17 | 1.1/ 1.7/ 3.7   |\n    | richard sheridan     |     2 |      1 |   437 |     23 |      3 | 1.0/ 1.3/ 0.7   |\n    | guangshuo chen       |     3 |      1 |   321 |     18 |      7 | 0.8/ 1.0/ 1.5   |\n    | noam yorav-raphael   |     4 |      1 |   229 |     11 |      6 | 0.5/ 0.6/ 1.3   |\n    | github-actions[bot]  |     2 |      1 |   186 |      1 |     51 | 0.4/ 0.1/11.1   |\n    ...\n\nthe ``distribution`` column is a percentage breakdown of ``loc/coms/fils``.\n(e.g. in the table above, casper has written surviving code in\n``172/461 = 37.3%`` of all files).\n\n------------------------------------------\n\n.. contents:: table of contents\n   :backlinks: top\n   :local:\n\n\ninstallation\n------------\n\nlatest pypi stable release\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n|pypi| |pypi-downloads| |libraries-dependents|\n\n.. code:: sh\n\n    pip install git-fame\n\nlatest development release on github\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n|github-status| |github-stars| |github-commits| |github-forks| |github-updated|\n\npull and install:\n\n.. code:: sh\n\n    pip install \"git+https://github.com/casperdcl/git-fame.git@main#egg=git-fame\"\n\nlatest conda release\n~~~~~~~~~~~~~~~~~~~~\n\n|conda-forge|\n\n.. code:: sh\n\n    conda install -c conda-forge git-fame\n\nlatest snapcraft release\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n|snapcraft|\n\n.. code:: sh\n\n    snap install git-fame\n\nlatest docker release\n~~~~~~~~~~~~~~~~~~~~~\n\n|docker|\n\n.. code:: sh\n\n    docker pull casperdcl/git-fame\n    docker run --rm casperdcl/git-fame --help\n    docker run --rm -v </local/path/to/repository>:/repo casperdcl/git-fame\n\nregister alias with git\n~~~~~~~~~~~~~~~~~~~~~~~\n\non windows, run:\n\n.. code:: sh\n\n    git config --global alias.fame \"!python -m gitfame\"\n\nthis is probably not necessary on unix systems.\nif ``git fame`` doesn't work after restarting the terminal on linux & mac os, try (with single quotes):\n\n.. code:: sh\n\n    git config --global alias.fame '!python -m gitfame'\n\ntab completion\n~~~~~~~~~~~~~~\n\noptionally, systems with ``bash-completion`` can install tab completion\nsupport. the\n`git-fame_completion.bash <https://raw.githubusercontent.com/casperdcl/git-fame/main/git-fame_completion.bash>`__\nfile needs to be copied to an appropriate folder.\n\non ubuntu, the procedure would be:\n\n.. code:: sh\n\n    $ # ensure completion works for `git` itself\n    $ sudo apt-get install bash-completion\n\n    $ # install `git fame` completions\n    $ sudo wget \\\n        https://raw.githubusercontent.com/casperdcl/git-fame/main/git-fame_completion.bash \\\n        -o /etc/bash_completion.d/git-fame_completion.bash\n\nfollowed by a terminal restart.\n\n\nchangelog\n---------\n\nthe list of all changes is available on the releases page: |github-status|.\n\n\nusage\n-----\n\n.. code:: sh\n\n    git fame              # if alias registered with git (see above)\n    git-fame              # alternative execution as python console script\n    python -m gitfame     # alternative execution as python module\n    git-fame -h           # print help\n\nfor example, to print statistics regarding all source files in a c++/cuda\nrepository (``*.c/h/t(pp), *.cu(h)``), carefully handling whitespace and line\ncopies:\n\n.. code:: sh\n\n    git fame --incl '\\.[cht][puh]{0,2}$' -twmc\n\nit is also possible to run from within a python shell or script.\n\n.. code:: python\n\n    >>> import gitfame\n    >>> gitfame.main(['--sort=commits', '-wt', '/path/to/my/repo'])\n\n\ndocumentation\n-------------\n\n|py-versions| |readme-hits|\n\n.. code::\n\n    usage:\n      git-fame [--help | options] [<gitdir>...]\n\n    arguments:\n      <gitdir>       git directory [default: ./].\n                     may be specified multiple times to aggregate across\n                     multiple repositories.\n\n    options:\n      -h, --help     print this help and exit.\n      -v, --version  print module version and exit.\n      --branch=<b>   branch or tag [default: head] up to which to check.\n      --sort=<key>   [default: loc]|commits|files|hours|months.\n      --loc=<type>   surv(iving)|ins(ertions)|del(etions)\n                     what `loc` represents. use 'ins,del' to count both.\n                     defaults to 'surviving' unless `--cost` is specified.\n      --excl=<f>     excluded files (default: none).\n                     in no-regex mode, may be a comma-separated list.\n                     escape (\\,) for a literal comma (may require \\\\, in shell).\n      --incl=<f>     included files [default: .*]. see `--excl` for format.\n      --since=<date>  date from which to check. can be absoulte (eg: 1970-01-31)\n                      or relative to now (eg: 3.weeks).\n      --cost=<method>  include time cost in person-months (cocomo) or\n                       person-hours (based on commit times).\n                       methods: month(s)|cocomo|hour(s)|commit(s).\n                       may be multiple comma-separated values.\n                       alters `--loc` default to imply 'ins' (cocomo) or\n                       'ins,del' (hours).\n      -r, --recurse  recursively find repositories & submodules within <gitdir>.\n      -n, --no-regex  assume <f> are comma-separated exact matches\n                      rather than regular expressions [default: false].\n                      nb: if regex is enabled ',' is equivalent to '|'.\n      -s, --silent-progress    suppress `tqdm` [default: false].\n      --warn-binary  don't silently skip files which appear to be binary data\n                     [default: false].\n      -e, --show-email  show author email instead of name [default: false].\n      --enum         show row numbers [default: false].\n      -t, --bytype             show stats per file extension [default: false].\n      -w, --ignore-whitespace  ignore whitespace when comparing the parent's\n                               version and the child's to find where the lines\n                               came from [default: false].\n      -m             detect intra-file line moves and copies [default: false].\n      -c             detect inter-file line moves and copies [default: false].\n      --ignore-rev=<rev>       ignore changes made by the given revision\n                               (requires `--loc=surviving`).\n      --ignore-revs-file=<f>   ignore revisions listed in the given file\n                               (requires `--loc=surviving`).\n      --format=<format>        table format\n          [default: pipe]|md|markdown|yaml|yml|json|csv|tsv|tabulate.\n          may require `git-fame[<format>]`, e.g. `pip install git-fame[yaml]`.\n          any `tabulate.tabulate_formats` is also accepted.\n      --manpath=<path>         directory in which to install git-fame man pages.\n      --log=<lvl>    fatal|critical|error|warn(ing)|[default: info]|debug|notset.\n\n\nif multiple user names and/or emails correspond to the same user, aggregate\n``git-fame`` statistics and maintain a ``git`` repository properly by adding a\n`.mailmap file <https://git-scm.com/docs/git-blame#_mapping_authors>`_.\n\nfaqs\n~~~~\n\noptions such as ``-w``, ``-m``, and ``-c`` can increase accuracy, but take\nlonger to compute.\n\nnote that specifying ``--sort=hours`` or ``--sort=months`` requires ``--cost``\nto be specified appropriately.\n\nnote that ``--cost=months`` (``--cost=cocomo``) approximates\n`person-months <https://en.wikipedia.org/wiki/cocomo>`_ and should be used with\n``--loc=ins``.\n\nmeanwhile, ``--cost=hours`` (``--cost=commits``) approximates\n`person-hours <https://github.com/kimmobrunfeldt/git-hours/blob/8aaeee237cb9d9028e7a2592a25ad8468b1f45e4/index.js#l114-l143>`_.\n\nextra care should be taken when using ``ins`` and/or ``del`` for ``--loc``\nsince all historical files (including those no longer surviving) are counted.\nin such cases, ``--excl`` may need to be significantly extended.\non the plus side, it is faster to compute ``ins`` and ``del`` compared to\n``surv``.\n\nexamples\n--------\n\ncodeowners\n~~~~~~~~~~\n\ngenerating\n`codeowners <https://help.github.com/en/articles/about-code-owners>`__:\n\n.. code:: sh\n\n    # bash syntax function for current directory git repository\n    owners(){\n      for f in $(git ls-files); do\n        # filename\n        echo -n \"$f \"\n        # author emails if loc distribution >= 30%\n        git fame -esnwmc --incl \"$f\" | tr '/' '|' \\\n          | awk -f '|' '(nr>6 && $6>=30) {print $2}' \\\n          | xargs echo\n      done\n    }\n\n    # print to screen and file\n    owners | tee .github/codeowners\n\n    # same but with `tqdm` progress for large repos\n    owners \\\n      | tqdm --total $(git ls-files | wc -l) \\\n        --unit file --desc \"generating codeowners\" \\\n      > .github/codeowners\n\nzenodo config\n~~~~~~~~~~~~~\n\ngenerating `.zenodo.json <https://developers.zenodo.org/#deposit-metadata>`__:\n\n.. code:: sh\n\n    git fame -wmc --format json \\\n      | jq -c '{creators: [.data[] | {name: .[0]}]}' \\\n      | sed -r -e 's/(\\{\"name\")/\\n    \\1/g' -e 's/:/: /g' \\\n      > .zenodo.json\n\ncontributions\n-------------\n\n|github-commits| |github-issues| |github-prs| |openhub-status|\n\nall source code is hosted on `github <https://github.com/casperdcl/git-fame>`__.\ncontributions are welcome.\n\n\nlicence\n-------\n\nopen source (osi approved): |licence|\n\ncitation information: |doi-uri|\n\n\nauthors\n-------\n\n|openhub-status|\n\n- casper da costa-luis (`casperdcl <https://github.com/casperdcl>`__ |sponsor-casper|)\n\nwe are grateful for all |github-contributions|.\n\n|readme-hits|\n\n.. |build-status| image:: https://img.shields.io/github/actions/workflow/status/casperdcl/git-fame/test.yml?branch=main&label=git-fame&logo=github\n   :target: https://github.com/casperdcl/git-fame/actions/workflows/test.yml\n.. |coverage-status| image:: https://img.shields.io/coveralls/github/casperdcl/git-fame/main?logo=coveralls\n   :target: https://coveralls.io/github/casperdcl/git-fame\n.. |branch-coverage-status| image:: https://codecov.io/gh/casperdcl/git-fame/branch/main/graph/badge.svg\n   :target: https://codecov.io/gh/casperdcl/git-fame\n.. |codacy-grade| image:: https://api.codacy.com/project/badge/grade/bde789ee0e57491eb2bb8609bd4190c3\n   :target: https://www.codacy.com/app/casper-dcl/git-fame/dashboard\n.. |github-status| image:: https://img.shields.io/github/tag/casperdcl/git-fame.svg?maxage=86400&logo=github\n   :target: https://github.com/casperdcl/git-fame/releases\n.. |github-forks| image:: https://img.shields.io/github/forks/casperdcl/git-fame.svg?logo=github\n   :target: https://github.com/casperdcl/git-fame/network\n.. |github-stars| image:: https://img.shields.io/github/stars/casperdcl/git-fame.svg?logo=github\n   :target: https://github.com/casperdcl/git-fame/stargazers\n.. |github-commits| image:: https://img.shields.io/github/commit-activity/y/casperdcl/git-fame?label=commits&logo=git\n   :target: https://github.com/casperdcl/git-fame/graphs/commit-activity\n.. |github-issues| image:: https://img.shields.io/github/issues-closed/casperdcl/git-fame.svg?logo=github\n   :target: https://github.com/casperdcl/git-fame/issues\n.. |github-prs| image:: https://img.shields.io/github/issues-pr-closed/casperdcl/git-fame.svg?logo=github\n   :target: https://github.com/casperdcl/git-fame/pulls\n.. |github-contributions| image:: https://img.shields.io/github/contributors/casperdcl/git-fame.svg?logo=github\n   :target: https://github.com/casperdcl/git-fame/graphs/contributors\n.. |github-updated| image:: https://img.shields.io/github/last-commit/casperdcl/git-fame?label=pushed&logo=github\n   :target: https://github.com/casperdcl/git-fame/pulse\n.. |sponsor-casper| image:: https://img.shields.io/badge/sponsor-foss-dc10ff.svg?logo=contactless%20payment\n   :target: https://cdcl.ml/sponsor\n.. |pypi| image:: https://img.shields.io/pypi/v/git-fame.svg?logo=pypi&logocolor=white\n   :target: https://pypi.org/project/git-fame\n.. |pypi-downloads| image:: https://img.shields.io/pypi/dm/git-fame.svg?label=pypi%20downloads&logo=docusign\n   :target: https://pypi.org/project/git-fame\n.. |py-versions| image:: https://img.shields.io/pypi/pyversions/git-fame.svg?logo=python&logocolor=white\n   :target: https://pypi.org/project/git-fame\n.. |conda-forge| image:: https://img.shields.io/conda/v/conda-forge/git-fame.svg?label=conda-forge&logo=conda-forge\n   :target: https://anaconda.org/conda-forge/git-fame\n.. |snapcraft| image:: https://img.shields.io/badge/snap-install-blue.svg?logo=snapcraft&logocolor=white\n   :target: https://snapcraft.io/git-fame\n.. |docker| image:: https://img.shields.io/badge/docker-pull-blue.svg?logo=docker&logocolor=white\n   :target: https://hub.docker.com/r/casperdcl/git-fame\n.. |libraries-rank| image:: https://img.shields.io/librariesio/sourcerank/pypi/git-fame.svg?color=green&logo=koding\n   :target: https://libraries.io/pypi/git-fame\n.. |libraries-dependents| image:: https://img.shields.io/librariesio/dependent-repos/pypi/git-fame.svg?logo=koding\n    :target: https://github.com/casperdcl/git-fame/network/dependents\n.. |openhub-status| image:: https://www.openhub.net/p/git-fame/widgets/project_thin_badge?format=gif\n   :target: https://www.openhub.net/p/git-fame?ref=thin+badge\n.. |licence| image:: https://img.shields.io/pypi/l/git-fame.svg?color=purple&logo=spdx\n   :target: https://raw.githubusercontent.com/casperdcl/git-fame/main/licence\n.. |doi-uri| image:: https://img.shields.io/badge/doi-10.5281/zenodo.2544975-blue.svg?color=purple&logo=orcid\n   :target: https://doi.org/10.5281/zenodo.2544975\n.. |readme-hits| image:: https://caspersci.uk.to/cgi-bin/hits.cgi?q=git-fame&style=social&r=https://github.com/casperdcl/git-fame\n   :target: https://caspersci.uk.to/cgi-bin/hits.cgi?q=git-fame&a=plot&r=https://github.com/casperdcl/git-fame&style=social\n",
  "docs_url": null,
  "keywords": "git,blame,git-blame,git-log,code-analysis,cost,loc,author,commit,shortlog,ls-files",
  "license": "",
  "name": "git-fame",
  "package_url": "https://pypi.org/project/git-fame/",
  "project_url": "https://pypi.org/project/git-fame/",
  "project_urls": {
    "Changelog": "https://github.com/casperdcl/git-fame/releases",
    "Documentation": "https://github.com/casperdcl/git-fame/#git-fame",
    "Homepage": "https://github.com/casperdcl/git-fame"
  },
  "release_url": "https://pypi.org/project/git-fame/2.0.1/",
  "requires_dist": [
    "argopt (>=0.3.5)",
    "setuptools",
    "tabulate",
    "tqdm (>=4.44.0)",
    "pyyaml ; extra == 'dev'",
    "py-make (>=0.1.0) ; extra == 'dev'",
    "twine ; extra == 'dev'",
    "wheel ; extra == 'dev'",
    "pyyaml ; extra == 'full'",
    "pyyaml ; extra == 'yaml'"
  ],
  "requires_python": ">=3.7",
  "summary": "pretty-print `git` repository collaborators sorted by contributions",
  "version": "2.0.1",
  "releases": [],
  "developers": [
    "casper.dcl@physics.org",
    "casper_da_costa"
  ],
  "kwds": "git commits github gitdir commit",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_git_fame",
  "homepage": "https://github.com/casperdcl/git-fame",
  "release_count": 34,
  "dependency_ids": [
    "pypi_argopt",
    "pypi_py_make",
    "pypi_pyyaml",
    "pypi_setuptools",
    "pypi_tabulate",
    "pypi_tqdm",
    "pypi_twine",
    "pypi_wheel"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: mathematics"
  ],
  "description": ".. image:: https://cdn.rawgit.com/pymc-devs/pymc/main/docs/logos/svg/pymc_banner.svg\n    :height: 100px\n    :alt: pymc logo\n    :align: center\n\n|build status| |coverage| |numfocus_badge| |binder| |dockerhub| |doizenodo|\n\npymc (formerly pymc3) is a python package for bayesian statistical modeling\nfocusing on advanced markov chain monte carlo (mcmc) and variational inference (vi)\nalgorithms. its flexibility and extensibility make it applicable to a\nlarge suite of problems.\n\ncheck out the `pymc overview <https://docs.pymc.io/en/latest/learn/core_notebooks/pymc_overview.html>`__,  or\none of `the many examples <https://www.pymc.io/projects/examples/en/latest/gallery.html>`__!\nfor questions on pymc, head on over to our `pymc discourse <https://discourse.pymc.io/>`__ forum.\n\nfeatures\n========\n\n-  intuitive model specification syntax, for example, ``x ~ n(0,1)``\n   translates to ``x = normal('x',0,1)``\n-  **powerful sampling algorithms**, such as the `no u-turn\n   sampler <http://www.jmlr.org/papers/v15/hoffman14a.html>`__, allow complex models\n   with thousands of parameters with little specialized knowledge of\n   fitting algorithms.\n-  **variational inference**: `advi <http://www.jmlr.org/papers/v18/16-107.html>`__\n   for fast approximate posterior estimation as well as mini-batch advi\n   for large data sets.\n-  relies on `pytensor <https://pytensor.readthedocs.io/en/latest/>`__ which provides:\n    *  computation optimization and dynamic c or jax compilation\n    *  numpy broadcasting and advanced indexing\n    *  linear algebra operators\n    *  simple extensibility\n-  transparent support for missing value imputation\n\ngetting started\n===============\n\nif you already know about bayesian statistics:\n----------------------------------------------\n\n-  `api quickstart guide <https://www.pymc.io/projects/examples/en/latest/howto/api_quickstart.html>`__\n-  the `pymc tutorial <https://docs.pymc.io/en/latest/learn/core_notebooks/pymc_overview.html>`__\n-  `pymc examples <https://www.pymc.io/projects/examples/en/latest/gallery.html>`__ and the `api reference <https://docs.pymc.io/en/stable/api.html>`__\n\nlearn bayesian statistics with a book together with pymc\n--------------------------------------------------------\n\n-  `probabilistic programming and bayesian methods for hackers <https://github.com/camdavidsonpilon/probabilistic-programming-and-bayesian-methods-for-hackers>`__: fantastic book with many applied code examples.\n-  `pymc port of the book \"doing bayesian data analysis\" by john kruschke <https://github.com/cluhmann/dbda-python>`__ as well as the `first edition <https://github.com/aloctavodia/doing_bayesian_data_analysis>`__.\n-  `pymc port of the book \"statistical rethinking a bayesian course with examples in r and stan\" by richard mcelreath <https://github.com/pymc-devs/resources/tree/master/rethinking>`__\n-  `pymc port of the book \"bayesian cognitive modeling\" by michael lee and ej wagenmakers <https://github.com/pymc-devs/resources/tree/master/bcm>`__: focused on using bayesian statistics in cognitive modeling.\n-  `bayesian analysis with python  <https://www.packtpub.com/big-data-and-business-intelligence/bayesian-analysis-python-second-edition>`__ (second edition) by osvaldo martin: great introductory book. (`code <https://github.com/aloctavodia/bap>`__ and errata).\n\naudio & video\n-------------\n\n- here is a `youtube playlist <https://www.youtube.com/playlist?list=pl1ma_1dbbe82ovw8fz_6ts1ooeyoaiovy>`__ gathering several talks on pymc.\n- you can also find all the talks given at **pymcon 2020** `here <https://discourse.pymc.io/c/pymcon/2020talks/15>`__.\n- the `\"learning bayesian statistics\" podcast <https://www.learnbayesstats.com/>`__ helps you discover and stay up-to-date with the vast bayesian community. bonus: it's hosted by alex andorra, one of the pymc core devs!\n\ninstallation\n============\n\nto install pymc on your system, follow the instructions on the `installation guide <https://www.pymc.io/projects/docs/en/latest/installation.html>`__.\n\nciting pymc\n===========\nplease choose from the following:\n\n- |doipaper| *pymc: a modern and comprehensive probabilistic programming framework in python*, abril-pla o, andreani v, carroll c, dong l, fonnesbeck cj, kochurov m, kumar r, lao j, luhmann cc, martin oa, osthege m, vieira r, wiecki t, zinkov r. (2023)\n- |doizenodo| a doi for all versions.\n- dois for specific versions are shown on zenodo and under `releases <https://github.com/pymc-devs/pymc/releases>`_\n\n.. |doipaper| image:: https://img.shields.io/badge/doi-10.7717%2fpeerj--cs.1516-blue\n     :target: https://doi.org/10.7717/peerj-cs.1516\n.. |doizenodo| image:: https://zenodo.org/badge/doi/10.5281/zenodo.4603970.svg\n   :target: https://doi.org/10.5281/zenodo.4603970\n\ncontact\n=======\n\nwe are using `discourse.pymc.io <https://discourse.pymc.io/>`__ as our main communication channel.\n\nto ask a question regarding modeling or usage of pymc we encourage posting to our discourse forum under the `\u201cquestions\u201d category <https://discourse.pymc.io/c/questions>`__. you can also suggest feature in the `\u201cdevelopment\u201d category <https://discourse.pymc.io/c/development>`__.\n\nyou can also follow us on these social media platforms for updates and other announcements:\n\n- `linkedin @pymc <https://www.linkedin.com/company/pymc/>`__\n- `youtube @pymcdevelopers <https://www.youtube.com/c/pymcdevelopers>`__\n- `twitter @pymc_devs <https://twitter.com/pymc_devs>`__\n- `mastodon @pymc@bayes.club <https://bayes.club/@pymc>`__\n\nto report an issue with pymc please use the `issue tracker <https://github.com/pymc-devs/pymc/issues>`__.\n\nfinally, if you need to get in touch for non-technical information about the project, `send us an e-mail <info@pymc-devs.org>`__.\n\nlicense\n=======\n\n`apache license, version\n2.0 <https://github.com/pymc-devs/pymc/blob/main/license>`__\n\n\nsoftware using pymc\n===================\n\ngeneral purpose\n---------------\n\n- `bambi <https://github.com/bambinos/bambi>`__: bayesian model-building interface (bambi) in python.\n- `calibr8 <https://calibr8.readthedocs.io>`__: a toolbox for constructing detailed observation models to be used as likelihoods in pymc.\n- `gumbi <https://github.com/johngoertz/gumbi>`__: a high-level interface for building gp models.\n- `sunode <https://github.com/aseyboldt/sunode>`__: fast ode solver, much faster than the one that comes with pymc.\n- `pymc-learn <https://github.com/pymc-learn/pymc-learn>`__: custom pymc models built on top of pymc3_models/scikit-learn api\n\ndomain specific\n---------------\n\n- `exoplanet <https://github.com/dfm/exoplanet>`__: a toolkit for modeling of transit and/or radial velocity observations of exoplanets and other astronomical time series.\n- `beat <https://github.com/hvasbath/beat>`__: bayesian earthquake analysis tool.\n- `causalpy <https://github.com/pymc-labs/causalpy>`__: a package focussing on causal inference in quasi-experimental settings.\n\nplease contact us if your software is not listed here.\n\npapers citing pymc\n==================\n\nsee `google scholar <https://scholar.google.de/scholar?oi=bibs&hl=en&authuser=1&cites=6936955228135731011>`__ for a continuously updated list.\n\ncontributors\n============\n\nsee the `github contributor\npage <https://github.com/pymc-devs/pymc/graphs/contributors>`__. also read our `code of conduct <https://github.com/pymc-devs/pymc/blob/main/code_of_conduct.md>`__ guidelines for a better contributing experience.\n\nsupport\n=======\n\npymc is a non-profit project under numfocus umbrella. if you want to support pymc financially, you can donate `here <https://numfocus.salsalabs.org/donate-to-pymc3/index.html>`__.\n\nprofessional consulting support\n===============================\n\nyou can get professional consulting support from `pymc labs <https://www.pymc-labs.io>`__.\n\nsponsors\n========\n\n|numfocus|\n\n|pymclabs|\n\n|mistplay|\n\n|odsc|\n\n.. |binder| image:: https://mybinder.org/badge_logo.svg\n   :target: https://mybinder.org/v2/gh/pymc-devs/pymc/main?filepath=%2fdocs%2fsource%2fnotebooks\n.. |build status| image:: https://github.com/pymc-devs/pymc/workflows/pytest/badge.svg\n   :target: https://github.com/pymc-devs/pymc/actions\n.. |coverage| image:: https://codecov.io/gh/pymc-devs/pymc/branch/main/graph/badge.svg\n   :target: https://codecov.io/gh/pymc-devs/pymc\n.. |dockerhub| image:: https://img.shields.io/docker/automated/pymc/pymc.svg\n   :target: https://hub.docker.com/r/pymc/pymc\n.. |numfocus_badge| image:: https://img.shields.io/badge/powered%20by-numfocus-orange.svg?style=flat&colora=e1523d&colorb=007d8a\n   :target: http://www.numfocus.org/\n.. |numfocus| image:: https://github.com/pymc-devs/brand/blob/main/sponsors/sponsor_logos/sponsor_numfocus.png?raw=true\n   :target: http://www.numfocus.org/\n.. |pymclabs| image:: https://github.com/pymc-devs/brand/blob/main/sponsors/sponsor_logos/sponsor_pymc_labs.png?raw=true\n   :target: https://pymc-labs.io\n.. |mistplay| image:: https://github.com/pymc-devs/brand/blob/main/sponsors/sponsor_logos/sponsor_mistplay.png?raw=true\n   :target: https://www.mistplay.com/\n.. |odsc| image:: https://github.com/pymc-devs/brand/blob/main/sponsors/sponsor_logos/odsc/sponsor_odsc.png?raw=true\n   :target: https://odsc.com/california/?utm_source=pymc&utm_medium=referral\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license, version 2.0",
  "name": "pymc",
  "package_url": "https://pypi.org/project/pymc/",
  "project_url": "https://pypi.org/project/pymc/",
  "project_urls": {
    "Homepage": "http://github.com/pymc-devs/pymc"
  },
  "release_url": "https://pypi.org/project/pymc/5.10.3/",
  "requires_dist": [
    "arviz >=0.13.0",
    "cachetools >=4.2.1",
    "cloudpickle",
    "fastprogress >=0.2.0",
    "numpy >=1.15.0",
    "pandas >=0.24.0",
    "pytensor <2.19,>=2.18.1",
    "scipy >=1.4.1",
    "typing-extensions >=3.7.4"
  ],
  "requires_python": ">=3.9",
  "summary": "probabilistic programming in python: bayesian modeling and probabilistic machine learning with pytensor",
  "version": "5.10.3",
  "releases": [],
  "developers": [
    "pymc.devs@gmail.com",
    "pymc_developers"
  ],
  "kwds": "pymc_overview pymc3_models pymc pymc3 pymc_devs",
  "license_kwds": "apache license, version 2.0",
  "libtype": "pypi",
  "id": "pypi_pymc",
  "homepage": "http://github.com/pymc-devs/pymc",
  "release_count": 59,
  "dependency_ids": [
    "pypi_arviz",
    "pypi_cachetools",
    "pypi_cloudpickle",
    "pypi_fastprogress",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pytensor",
    "pypi_scipy",
    "pypi_typing_extensions"
  ]
}
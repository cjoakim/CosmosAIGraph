{
  "classifiers": [
    "development status :: 6 - mature",
    "framework :: pyramid",
    "intended audience :: developers",
    "license :: repoze public license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: internet :: www/http",
    "topic :: internet :: www/http :: wsgi"
  ],
  "description": "pyramid\n=======\n\n.. image:: https://github.com/pylons/pyramid/workflows/build%20and%20test/badge.svg?branch=2.0-branch\n        :target: https://github.com/pylons/pyramid/actions?query=workflow%3a%22build+and+test%22\n        :alt: 2.0-branch travis ci status\n\n.. image:: https://readthedocs.org/projects/pyramid/badge/?version=2.0-branch\n        :target: https://docs.pylonsproject.org/projects/pyramid/en/2.0-branch\n        :alt: 2.0-branch documentation status\n\n.. image:: https://img.shields.io/badge/irc-libera.chat-blue.svg\n        :target: https://web.libera.chat/#pyramid\n        :alt: irc libera.chat\n\npyramid is a small, fast, down-to-earth, open source python web framework.\nit makes real-world web application development\nand deployment more fun, more predictable, and more productive.\n`try pyramid <https://trypyramid.com/>`_, browse its add-ons and documentation, and get an overview.\n\n.. code-block:: python\n\n    from wsgiref.simple_server import make_server\n    from pyramid.config import configurator\n    from pyramid.response import response\n\n    def hello_world(request):\n        return response('hello world!')\n\n    if __name__ == '__main__':\n        with configurator() as config:\n            config.add_route('hello', '/')\n            config.add_view(hello_world, route_name='hello')\n            app = config.make_wsgi_app()\n        server = make_server('0.0.0.0', 6543, app)\n        server.serve_forever()\n\npyramid is a project of the `pylons project <https://pylonsproject.org>`_.\n\nsupport and documentation\n-------------------------\n\nsee `pyramid support and development\n<https://docs.pylonsproject.org/projects/pyramid/en/latest/#support-and-development>`_\nfor documentation, reporting bugs, and getting support.\n\ndeveloping and contributing\n---------------------------\n\nsee `hacking.txt <https://github.com/pylons/pyramid/blob/main/hacking.txt>`_ and\n`contributing.md <https://github.com/pylons/pyramid/blob/main/contributing.md>`_\nfor guidelines on running tests, adding features, coding style, and updating\ndocumentation when developing in or contributing to pyramid.\n\nlicense\n-------\n\npyramid is offered under the bsd-derived `repoze public license\n<http://repoze.org/license.html>`_.\n\nauthors\n-------\n\npyramid is made available by `agendaless consulting <https://agendaless.com>`_\nand a team of `contributors\n<https://github.com/pylons/pyramid/graphs/contributors>`_.\n\n\n.. _changes_2.0.2:\n\n2.0.2 (2023-08-25)\n==================\n\nbug fixes\n---------\n\n- removed support for null-bytes in the path when making a request for a file\n  against a static_view. whille null-bytes are allowed by the http\n  specification, due to the handling of null-bytes potentially leading to\n  security vulnerabilities it is no longer supported.\n\n  this fixes a security vulnerability that is present due to a bug in python\n  3.11.0 through 3.11.4, thereby allowing the unintended disclosure of an\n  ``index.html`` one directory up from the static views path.\n\n  thanks to masashi yamane of lac co., ltd for reporting this issue.\n\nbackward incompatibilities\n--------------------------\n\n- requests to a static_view are no longer allowed to contain a null-byte in any\n  part of the path segment.\n\n.. _changes_2.0.1:\n\n2.0.1 (2023-01-29)\n==================\n\n- add support for python 3.10 and 3.11.\n\n- copy ``__name__`` from decorated attribute when using\n  ``pyramid.decorator.reify``.\n  see https://github.com/pylons/pyramid/pull/3660\n\n- fix method signatures in docs for\n  ``pyramid.config.configurator.add_static_view`` and\n  ``pyramid.config.configurator.override_asset``.\n  see https://github.com/pylons/pyramid/pull/3699\n\n- remove obsolete stackframe hack used in python 3.5.0 when showing\n  configurator conflict errors.\n  see https://github.com/pylons/pyramid/pull/3700\n\n- fix an error when injecting certain objects into the ``pshell`` env due to\n  the use of ``!=``.\n  see https://github.com/pylons/pyramid/pull/3704\n\n- pyramid drops support for ``l*gettext()`` methods in the i18n module.\n  these have been deprecated in python's gettext module since 3.8, and\n  removed in python 3.11. they also shouldn't be used at all on python 3.\n  see https://github.com/pylons/pyramid/pull/3717\n\n- avoid ``setdaemon(true)`` deprecation warning by updating threading api usage\n  to ``.daemon = true``.\n\n2.0 (2021-02-28)\n================\n\n- no changes from 2.0b1.\n\n2.0b1 (2021-02-20)\n==================\n\n- break potential reference cycle between ``request`` and ``context``.\n  see https://github.com/pylons/pyramid/pull/3649\n\n- remove ``update_wrapper`` from ``pyramid.decorator.reify``.\n  see https://github.com/pylons/pyramid/pull/3657\n\n2.0b0 (2020-12-15)\n==================\n\n- overhaul tutorials and update cookiecutter to de-emphasize ``request.user``\n  in favor of ``request.identity`` for common use cases.\n  see https://github.com/pylons/pyramid/pull/3629\n\n- improve documentation and patterns with builtin fixtures shipped in the\n  cookiecutters.\n  see https://github.com/pylons/pyramid/pull/3629\n\n2.0a0 (2020-11-29)\n==================\n\nfeatures\n--------\n\n- add support for python 3.9.\n  see https://github.com/pylons/pyramid/issues/3622\n\n- the ``aslist`` method now handles non-string objects when flattening.\n  see https://github.com/pylons/pyramid/pull/3594\n\n- it is now possible to pass multiple values to the ``header`` predicate\n  for route and view configuration.\n  see https://github.com/pylons/pyramid/pull/3576\n\n- add support for python 3.8.\n  see https://github.com/pylons/pyramid/pull/3547\n\n- new security apis have been added to support a massive overhaul of the\n  authentication and authorization system. read\n  \"upgrading authentication/authorization\" in the \"what's new in pyramid 2.0\"\n  chapter of the documentation for information about using this new system.\n\n  - ``pyramid.config.configurator.set_security_policy``.\n  - ``pyramid.interfaces.isecuritypolicy``\n  - ``pyramid.request.request.identity``.\n  - ``pyramid.request.request.is_authenticated``\n  - ``pyramid.authentication.sessionauthenticationhelper``\n  - ``pyramid.authorization.aclhelper``\n  - ``is_authenticated=true/false`` predicate for route and view configs\n\n  see https://github.com/pylons/pyramid/pull/3465 and\n  https://github.com/pylons/pyramid/pull/3598\n\n- changed the default ``serializer`` on\n  ``pyramid.session.signedcookiesessionfactory`` to use\n  ``pyramid.session.jsonserializer`` instead of\n  ``pyramid.session.pickleserializer``. read\n  \"upgrading session serialization\" in the \"what's new in pyramid 2.0\" chapter\n  of the documentation for more information about why this change was made.\n  see https://github.com/pylons/pyramid/pull/3413\n\n- it is now possible to control whether a route pattern contains a trailing\n  slash when it is composed with a route prefix using\n  ``config.include(..., route_prefix=...)`` or\n  ``with config.route_prefix_context(...)``. this can be done by specifying\n  an empty pattern and setting the new argument\n  ``inherit_slash=true``. for example:\n\n  .. code-block:: python\n\n      with config.route_prefix_context('/users'):\n          config.add_route('users', '', inherit_slash=true)\n\n  in the example, the resulting pattern will be ``/users``. similarly, if the\n  route prefix were ``/users/`` then the final pattern would be ``/users/``.\n  if the ``pattern`` was ``'/'``, then the final pattern would always be\n  ``/users/``. this new setting is only available if the pattern supplied\n  to ``add_route`` is the empty string (``''``).\n  see https://github.com/pylons/pyramid/pull/3420\n\n- no longer define ``pyramid.request.request.json_body`` which is already\n  provided by webob. this allows the attribute to now be settable.\n  see https://github.com/pylons/pyramid/pull/3447\n\n- improve debugging info from ``pyramid.view.view_config`` decorator.\n  see https://github.com/pylons/pyramid/pull/3483\n\n- a new parameter, ``allow_no_origin``, was added to\n  ``pyramid.config.configurator.set_default_csrf_options`` as well as\n  ``pyramid.csrf.check_csrf_origin``. this option controls whether a\n  request is rejected if it has no ``origin`` or ``referer`` header -\n  often the result of a user configuring their browser not to send a\n  ``referer`` header for privacy reasons even on same-domain requests.\n  the default is to reject requests without a known origin. it is also\n  possible to allow the special ``origin: null`` header by adding it to the\n  ``pyramid.csrf_trusted_origins`` list in the settings.\n  see https://github.com/pylons/pyramid/pull/3512\n  and https://github.com/pylons/pyramid/pull/3518\n\n- a new parameter, ``check_origin``, was added to\n  ``pyramid.config.configurator.set_default_csrf_options`` which disables\n  origin checking entirely.\n  see https://github.com/pylons/pyramid/pull/3518\n\n- added ``pyramid.interfaces.ipredicateinfo`` which defines the object passed\n  to predicate factories as their second argument.\n  see https://github.com/pylons/pyramid/pull/3514\n\n- added support for serving pre-compressed static assets by using the\n  ``content_encodings`` argument of\n  ``pyramid.config.configurator.add_static_view`` and\n  ``pyramid.static.static_view``.\n  see https://github.com/pylons/pyramid/pull/3537\n\n- fix ``deprecationwarning`` emitted by using the ``imp`` module.\n  see https://github.com/pylons/pyramid/pull/3553\n\n- properties created via ``config.add_request_method(..., property=true)`` or\n  ``request.set_property`` used to be readonly. they can now be overridden\n  via ``request.foo = ...`` and until the value is deleted it will return\n  the overridden value. this is most useful when mocking request properties\n  in testing.\n  see https://github.com/pylons/pyramid/pull/3559\n\n- finished callbacks are now executed as part of the ``closer`` that is\n  invoked as part of ``pyramid.scripting.prepare`` and\n  ``pyramid.paster.bootstrap``.\n  see https://github.com/pylons/pyramid/pull/3561\n\n- added ``pyramid.request.requestlocalcache`` which can be used to create\n  simple objects that are shared across requests and can be used to store\n  per-request data. this is useful when the source of data is external to\n  the request itself. often a reified property is used on a request via\n  ``pyramid.config.configurator.add_request_method``, or\n  ``pyramid.decorator.reify``, and these work great when the data is\n  generated on-demand when accessing the request property. however, often\n  the case is that the data is generated when accessing some other system\n  and then we want to cache the data for the duration of the request.\n  see https://github.com/pylons/pyramid/pull/3561\n\n- exposed ``pyramid.authorization.all_permissions`` and\n  ``pyramid.authorization.deny_all`` such that all of the acl-related constants\n  are now importable from the ``pyramid.authorization`` namespace.\n  see https://github.com/pylons/pyramid/pull/3563\n\n- ``pserve`` now outputs verbose messaging to `stderr` instead of `stdout`\n  to circumvent buffering issues that exist by default on `stdout`.\n  see https://github.com/pylons/pyramid/pull/3593\n\ndeprecations\n------------\n\n- deprecated the authentication and authorization interfaces and\n  principal-based support. see \"upgrading authentication/authorization\" in\n  the \"what's new in pyramid 2.0\" chapter of the documentation for information\n  on equivalent apis and notes on upgrading. the following apis are deprecated\n  as a result of this change:\n\n  - ``pyramid.config.configurator.set_authentication_policy``\n  - ``pyramid.config.configurator.set_authorization_policy``\n  - ``pyramid.interfaces.iauthenticationpolicy``\n  - ``pyramid.interfaces.iauthorizationpolicy``\n  - ``pyramid.request.request.effective_principals``\n  - ``pyramid.request.request.unauthenticated_userid``\n  - ``pyramid.authentication.authtktauthenticationpolicy``\n  - ``pyramid.authentication.remoteuserauthenticationpolicy``\n  - ``pyramid.authentication.repozewho1authenticationpolicy``\n  - ``pyramid.authentication.sessionauthenticationpolicy``\n  - ``pyramid.authentication.basicauthauthenticationpolicy``\n  - ``pyramid.authorization.aclauthorizationpolicy``\n  - the ``effective_principals`` view and route predicates.\n\n  see https://github.com/pylons/pyramid/pull/3465\n\n- deprecated ``pyramid.security.principals_allowed_by_permission``. this\n  method continues to work with the deprecated\n  ``pyramid.interfaces.iauthorizationpolicy`` interface but will not work with\n  the new ``pyramid.interfaces.isecuritypolicy``.\n  see https://github.com/pylons/pyramid/pull/3465\n\n- deprecated several acl-related aspects of ``pyramid.security``. equivalent\n  objects should now be imported from the ``pyramid.authorization`` namespace.\n  this includes:\n\n  - ``pyramid.security.everyone``\n  - ``pyramid.security.authenticated``\n  - ``pyramid.security.all_permissions``\n  - ``pyramid.security.deny_all``\n  - ``pyramid.security.aclallowed``\n  - ``pyramid.security.acldenied``\n\n  see https://github.com/pylons/pyramid/pull/3563\n\n- deprecated ``pyramid.session.pickleserializer``.\n  see https://github.com/pylons/pyramid/issues/2709,\n  and https://github.com/pylons/pyramid/pull/3353,\n  and https://github.com/pylons/pyramid/pull/3413\n\nbackward incompatibilities\n--------------------------\n\n- drop support for python 2.7, 3.4, and 3.5.\n  see https://github.com/pylons/pyramid/pull/3421,\n  and https://github.com/pylons/pyramid/pull/3547,\n  and https://github.com/pylons/pyramid/pull/3634\n\n- removed the ``pyramid.compat`` module. integrators should use the ``six``\n  module or vendor shims they are using into their own codebases going forward.\n  https://github.com/pylons/pyramid/pull/3421\n\n- ``pcreate`` and the builtin scaffolds have been removed in favor of\n  using the ``cookiecutter`` tool and the ``pyramid-cookiecutter-starter``\n  cookiecutter. the script and scaffolds were deprecated in pyramid 1.8.\n  see https://github.com/pylons/pyramid/pull/3406\n\n- changed the default ``hashalg`` on\n  ``pyramid.authentication.authtktcookiehelper`` to ``sha512``.\n  see https://github.com/pylons/pyramid/pull/3557\n\n- removed ``pyramid.interfaces.itemplaterenderer``. this interface was\n  deprecated since pyramid 1.5 and was an interface\n  used by libraries like ``pyramid_mako`` and ``pyramid_chameleon`` but\n  provided no functionality within pyramid itself.\n  see https://github.com/pylons/pyramid/pull/3409\n\n- removed ``pyramid.security.has_permission``,\n  ``pyramid.security.authenticated_userid``,\n  ``pyramid.security.unauthenticated_userid``, and\n  ``pyramid.security.effective_principals``. these methods were deprecated\n  in pyramid 1.5 and all have equivalents available as properties on the\n  request. for example, ``request.authenticated_userid``.\n  see https://github.com/pylons/pyramid/pull/3410\n\n- removed support for supplying a media range to the ``accept`` predicate of\n  both ``pyramid.config.configurator.add_view`` and\n  ``pyramid.config.configurator.add_route``. these options were deprecated\n  in pyramid 1.10 and webob 1.8 because they resulted in uncontrollable\n  matching that was not compliant with the rfc.\n  see https://github.com/pylons/pyramid/pull/3411\n\n- removed ``pyramid.session.unencryptedcookiesessionfactoryconfig``. this\n  session factory was replaced with\n  ``pyramid.session.signedcookiesessionfactory`` in pyramid 1.5 and has been\n  deprecated since then.\n  see https://github.com/pylons/pyramid/pull/3412\n\n- removed ``pyramid.session.signed_serialize``, and\n  ``pyramid.session.signed_deserialize``. these methods were only used by\n  the now-removed ``pyramid.session.unencryptedcookiesessionfactoryconfig``\n  and were coupled to the vulnerable pickle serialization format which could\n  lead to remove code execution if the secret key is compromised.\n  see https://github.com/pylons/pyramid/pull/3412\n\n- changed the default ``serializer`` on\n  ``pyramid.session.signedcookiesessionfactory`` to use\n  ``pyramid.session.jsonserializer`` instead of\n  ``pyramid.session.pickleserializer``. read \"upgrading session serialization\"\n  in the \"what's new in pyramid 2.0\" chapter of the documentation for more\n  information about why this change was made.\n  see https://github.com/pylons/pyramid/pull/3413\n\n- ``pyramid.request.request.invoke_exception_view`` will no longer be called\n  by the default execution policy.\n  see https://github.com/pylons/pyramid/pull/3496\n\n- ``pyramid.config.configurator.scan`` will no longer, by default, execute\n  venusian decorator callbacks registered for categories other than\n  ``'pyramid'``. to find any decorator regardless of category, specify\n  ``config.scan(..., categories=none)``.\n  see https://github.com/pylons/pyramid/pull/3510\n\n- the second argument to predicate factories has been changed from ``config``\n  to ``info``, an instance of ``pyramid.interfaces.ipredicateinfo``. this\n  limits the data available to predicates but still provides the package,\n  registry, settings and dotted-name resolver which should cover most use\n  cases and is largely backward compatible.\n  see https://github.com/pylons/pyramid/pull/3514\n\n- removed the ``check_csrf`` predicate. instead, use\n  ``pyramid.config.configurator.set_default_csrf_options`` and the\n  ``require_csrf`` view option to enable automatic csrf checking.\n  see https://github.com/pylons/pyramid/pull/3521\n\n- update the default behavior of\n  ``pyramid.authenticationauthtktauthenticationpolicy`` and\n  ``pyramid.authentication.authtktcookiehelper`` to only set a single cookie\n  without a domain parameter when no other domain constraints are specified.\n  prior to this change, ``wild_domain=false`` (the default) was effectively\n  treated the same as ``wild_domain=true``, in which a cookie was defined\n  such that browsers would use it both for the request's domain, as well as\n  any subdomain. in the new behavior, cookies will only affect the current\n  domain, and not subdomains, by default.\n  see https://github.com/pylons/pyramid/pull/3587\n\ndocumentation changes\n---------------------\n\n- restore build of pdf on read the docs.\n  see https://github.com/pylons/pyramid/issues/3290\n\n- fix docs build for sphinx 2.0.\n  see https://github.com/pylons/pyramid/pull/3480\n\n- significant updates to the wiki, wiki2 tutorials to demonstrate the new\n  security policy usage as well as a much more production-ready test harness.\n  see https://github.com/pylons/pyramid/pull/3557\n",
  "docs_url": null,
  "keywords": "web,wsgi,pylons,pyramid",
  "license": "bsd-derived (repoze)",
  "name": "pyramid",
  "package_url": "https://pypi.org/project/pyramid/",
  "project_url": "https://pypi.org/project/pyramid/",
  "project_urls": {
    "Changelog": "https://docs.pylonsproject.org/projects/pyramid/en/2.0-branch/whatsnew-2.0.html",
    "Documentation": "https://docs.pylonsproject.org/projects/pyramid/en/2.0-branch/",
    "Homepage": "https://trypyramid.com",
    "Issue Tracker": "https://github.com/Pylons/pyramid/issues"
  },
  "release_url": "https://pypi.org/project/pyramid/2.0.2/",
  "requires_dist": [
    "hupper >=1.5",
    "plaster",
    "plaster-pastedeploy",
    "setuptools",
    "translationstring >=0.4",
    "venusian >=1.0",
    "webob >=1.8.3",
    "zope.deprecation >=3.5.0",
    "zope.interface >=3.8.0",
    "Sphinx >=3.0.0 ; extra == 'docs'",
    "docutils ; extra == 'docs'",
    "pylons-sphinx-themes >=1.0.8 ; extra == 'docs'",
    "pylons-sphinx-latesturl ; extra == 'docs'",
    "repoze.sphinx.autointerface ; extra == 'docs'",
    "sphinx-copybutton ; extra == 'docs'",
    "sphinxcontrib-autoprogram ; extra == 'docs'",
    "webtest >=1.3.1 ; extra == 'testing'",
    "zope.component >=4.0 ; extra == 'testing'",
    "coverage ; extra == 'testing'",
    "pytest >=5.4.2 ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'"
  ],
  "requires_python": ">=3.6",
  "summary": "the pyramid web framework, a pylons project",
  "version": "2.0.2",
  "releases": [],
  "developers": [
    "chris_mcdonough",
    "pylons-discuss@googlegroups.com"
  ],
  "kwds": "pyramid pyramid_chameleon pyramid_mako wsgi make_wsgi_app",
  "license_kwds": "bsd-derived (repoze)",
  "libtype": "pypi",
  "id": "pypi_pyramid",
  "homepage": "https://trypyramid.com",
  "release_count": 151,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_docutils",
    "pypi_hupper",
    "pypi_plaster",
    "pypi_plaster_pastedeploy",
    "pypi_pylons_sphinx_latesturl",
    "pypi_pylons_sphinx_themes",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_repoze.sphinx.autointerface",
    "pypi_setuptools",
    "pypi_sphinx",
    "pypi_sphinx_copybutton",
    "pypi_sphinxcontrib_autoprogram",
    "pypi_translationstring",
    "pypi_venusian",
    "pypi_webob",
    "pypi_webtest",
    "pypi_zope.component",
    "pypi_zope.deprecation",
    "pypi_zope.interface"
  ]
}
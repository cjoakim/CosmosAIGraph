{
  "classifiers": [],
  "description": "leven\n=====\n\nlevenshtein edit distance library for python, apache-licensed.\nwritten by lars buitinck, netherlands escience center, with contributions\nfrom isaac sijaranamual, university of amsterdam.\n\nperforms distance computations on either byte strings or unicode codepoints.\n\ninstallation\n------------\n\nmake sure you have cython and a c++ compiler installed::\n\n    pip install cython\n\ninstalling a c++ compiler is so platform-dependent that i won't show\ninstructions. consult your package manager.\n\nthen::\n\n    python setup.py install\n\nto run the tests, but not to actually use leven, you need six and nose.\n\nusage\n-----\n\n    >>> from leven import levenshtein\n    >>> levenshtein(\"hello, world!\", \"goodbye, cruel world!\")\n    13\n\nabout the implementation\n------------------------\n\nthe core algorithms have been implemented in c++. i used this instead of c\nto get templates, easier memory management and a better standard library,\nso the c++ code probably looks c-ish.\n\ntodo\n----\n\n* implement ukkonen's algorithm for bounded levenshtein distance\n* implement levenshtein automata for fast neighbor search in string spaces\n* implement weighted levenshtein distance\n",
  "docs_url": null,
  "keywords": "",
  "license": "unknown",
  "name": "leven",
  "package_url": "https://pypi.org/project/leven/",
  "project_url": "https://pypi.org/project/leven/",
  "project_urls": {
    "Download": "UNKNOWN",
    "Homepage": "https://github.com/semanticize/leven"
  },
  "release_url": "https://pypi.org/project/leven/1.0.4/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "levenshtein edit distance library",
  "version": "1.0.4",
  "releases": [],
  "developers": [
    "l.j.buitinck@esciencecenter.nl",
    "lars_buitinck"
  ],
  "kwds": "levenshtein python unicode cython leven",
  "license_kwds": "unknown",
  "libtype": "pypi",
  "id": "pypi_leven",
  "homepage": "https://github.com/semanticize/leven",
  "release_count": 1,
  "dependency_ids": []
}
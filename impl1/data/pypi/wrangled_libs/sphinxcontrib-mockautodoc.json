{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "topic :: documentation",
    "topic :: utilities"
  ],
  "description": "mockautodoc\n===========\n\nmock imports for build docs without install packages in environment.\n\nthis extension add `:mockimport:` and `:mocktype:` for standard automodule\nderictive from autodoc_.\n\nmain goal of extension is to solve task defined on question_.\n\ninstall\n-------\n\n::\n\n    pip install sphinxcontrib-mockautodoc\n\n\nusage\n-----\n\nadd mockautodoc to extensions list::\n\n    extenstion = ['sphinx.ext.autodoc', 'sphinxcontrib.mockautodoc', ]\n\nthe extension add two options to standard automodule:\n\n- `:mockimport:` list of name spaces to mock separated by ','.\n- `:mocktype:` list of objects which must be mock as type object \n    for right way subclass them in sources, separated by ','.\n\nif you have module for documenting::\n    \n    from twisted.internet import protocol, defer\n    \n    @defer.inlinecallbacks\n    def my_func():\n        \"\"\"my function\"\"\"\n        pass\n\n    class myprotocol(protocol.protocol):\n        \"\"\"my protocol\"\"\"\n        pass\n\nand twisted_ not installed you can document module like that::\n    \n    .. automodule:: package\n        :mockimport: twisted\n        :mocktype: protocol.protocol\n\n\nwhere on `:mockimport:` will be mocked all twisted.* imports\nin automodule building context. and `:mocktype:` means which instances must be \nobject types to successful subclass them without loss target documentation.\n\n\nmockatudoc settings may be defined on conf.py and all automodule directives\nwith present `:mockimport:` will be mocked. where data on mockatodoc settings\nwill be summed with `:mockimport:` and `:mocktype:` options::\n    \n    mockautodoc = {\n        'mockimport': ['twisted',],\n        'mocktype': ['protocol.protocol'],\n    }\n\n.. _twisted: http://twistedmatrix.com/\n.. _autodoc: http://sphinx-doc.org/ext/autodoc.html\n.. _question: http://stackoverflow.com/questions/15587305/any-ways-build-docs-by-sphinx-with-both-python2-x-and-python3-x-ecosystems",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "sphinxcontrib-mockautodoc",
  "package_url": "https://pypi.org/project/sphinxcontrib-mockautodoc/",
  "project_url": "https://pypi.org/project/sphinxcontrib-mockautodoc/",
  "project_urls": {
    "Download": "http://pypi.python.org/pypi/sphinxcontrib-mockautodoc",
    "Homepage": "http://bitbucket.org/birkenfeld/sphinx-contrib"
  },
  "release_url": "https://pypi.org/project/sphinxcontrib-mockautodoc/0.0.1dev-20130518/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "sphinx mocking autodoc extension",
  "version": "0.0.1dev-20130518",
  "releases": [],
  "developers": [
    "evgeniy_tatarkin",
    "tatarkin.evg@gmail.com"
  ],
  "kwds": "sphinxcontrib sphinx mockautodoc mockatudoc mockimport",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_sphinxcontrib_mockautodoc",
  "homepage": "http://bitbucket.org/birkenfeld/sphinx-contrib",
  "release_count": 2,
  "dependency_ids": []
}
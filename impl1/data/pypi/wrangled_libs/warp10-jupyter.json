{
  "classifiers": [],
  "description": "can be loaded as a jupyter extension `%load_ext warpscript`, which provides the cell magic `%%warpscript` that executes warpscript code.\n\ncan be imported as `import warpscript`, which provides `newstack()` and `newlocalstack()` that create a warpscript execution environment (a stack).\n\nto execute warpscript code on a warp 10 platform with this extension, the platform must embed the [py4j plugin](https://warp10.io/content/03_documentation/04_warpscript/02_tooling/03_python) available [here](https://gitlab.com/senx/warp10-plugin-py4j). to enable `fetch`, `find`, and `findstats` functions on this platform, set `egress.clients.expose=true`.\n\nwarpscript code can also be executed locally (without a warp 10 platform) using `%%warpscript --local/-l` or `newlocalstack()`.\n\nadditional resources:\n\n* [blog post](https://blog.senx.io/warpscript-in-jupyter-notebooks/) presenting this extension.\n* [slides](https://fr.slideshare.net/jeancharlesvialatte/20190705-py-dataparismeetup) presented at a pydata meetup.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache 2.0",
  "name": "warp10-jupyter",
  "package_url": "https://pypi.org/project/warp10-jupyter/",
  "project_url": "https://pypi.org/project/warp10-jupyter/",
  "project_urls": {
    "Homepage": "http://github.com/senx/warp10-jupyter"
  },
  "release_url": "https://pypi.org/project/warp10-jupyter/1.0/",
  "requires_dist": [
    "py4j",
    "jupyter",
    "requests",
    "future"
  ],
  "requires_python": "",
  "summary": "functions and jupyter extension for executing warpscript code",
  "version": "1.0",
  "releases": [],
  "developers": [
    "jean",
    "jean-charles.vialatte@senx.io"
  ],
  "kwds": "warpscript 04_warpscript warp10 warp jupyter",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_warp10_jupyter",
  "homepage": "http://github.com/senx/warp10-jupyter",
  "release_count": 13,
  "dependency_ids": [
    "pypi_future",
    "pypi_jupyter",
    "pypi_py4j",
    "pypi_requests"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.1",
    "framework :: django :: 4.2",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http :: dynamic content"
  ],
  "description": "# django recaptcha <!-- omit from toc -->\n\n**django recaptcha form field/widget integration app.**\n\n[![pypi latest version](https://img.shields.io/pypi/v/django-recaptcha.svg)](https://pypi.org/project/django-recaptcha/)\n[![pypi monthly downloads](https://img.shields.io/pypi/dm/django-recaptcha.svg)](https://pypi.org/project/django-recaptcha/)\n[![ci status](https://github.com/torchbox/django-recaptcha/workflows/ci/badge.svg)](https://github.com/torchbox/django-recaptcha/actions)\n[![coverage](https://coveralls.io/repos/github/torchbox/django-recaptcha/badge.svg?branch=main)](https://coveralls.io/github/torchbox/django-recaptcha?branch=main)\n\n> [!note]\n> django-recaptcha supports google recaptcha v2 - checkbox (default), google recaptcha v2 - invisible and google recaptcha v3. please look at the widgets section for more information.\n>\n> django recaptcha uses a modified version of the [python recaptcha client](http://pypi.python.org/pypi/recaptcha-client) which is included in the package as `client.py`.\n\n- [requirements](#requirements)\n- [installation](#installation)\n- [usage](#usage)\n  - [fields](#fields)\n  - [widgets](#widgets)\n  - [recaptcha v3 score](#recaptcha-v3-score)\n  - [recaptcha v3 action](#recaptcha-v3-action)\n  - [local development and functional testing](#local-development-and-functional-testing)\n- [credits](#credits)\n\n## requirements\n\ntested with:\n\n- python: 3.8, 3.9, 3.10, 3.11\n- django: 3.2, 4.1, 4.2\n- you can view the [python-django support matrix\n  here](https://docs.djangoproject.com/en/dev/faq/install/#what-python-version-can-i-use-with-django)\n\nthis package only supports modern, \u201cevergreen\u201d desktop and mobile\nbrowsers. for ie11 support, make sure to add a [polyfill for\nelement.closest](https://developer.mozilla.org/en-us/docs/web/api/element/closest#polyfill).\n\n## installation\n\n1.  [sign up for recaptcha](https://www.google.com/recaptcha/intro/index.html).\n\n2.  install with `pip install django-recaptcha`.\n\n3.  add `'django_recaptcha'` to your `installed_apps` setting.\n\n```python\ninstalled_apps = [\n    ...,\n    'django_recaptcha',\n    ...\n]\n```\n\n4.  add the google recaptcha keys generated in step 1 to your django\n    production settings with `recaptcha_public_key` and\n    `recaptcha_private_key`. note that omitting these settings will\n    default to a set of test keys refer to [local development and\n    functional testing](#local-development-and-functional-testing) for\n    more information.\n\nfor example:\n\n```python\nrecaptcha_public_key = 'myrecaptchakey123'\nrecaptcha_private_key = 'myrecaptchaprivatekey456'\n```\n\nthese can also be specified per field by passing the `public_key`\nor `private_key` parameters to `recaptchafield` - see field usage\nbelow.\n\n5.  (optional) if you require a proxy, add a `recaptcha_proxy` setting\n    (dictionary of proxies), for example:\n\n```python\nrecaptcha_proxy = {'http': 'http://127.0.0.1:8000', 'https': 'https://127.0.0.1:8000'}\n```\n\n6.  (optional) in the event `www.google.com` is not accessible the\n    `recaptcha_domain` setting can be changed to `www.recaptcha.net` as\n    per the [recaptcha\n    faq](https://developers.google.com/recaptcha/docs/faq#can-i-use-recaptcha-globally):\n\n```python\nrecaptcha_domain = 'www.recaptcha.net'\n```\n\nthis will change the google javascript api domain as well as the client\nside field verification domain.\n\n## usage\n\n### fields\n\nthe quickest way to add recaptcha to a form is to use the included\n`recaptchafield` field class. a `recaptchav2checkbox` will be rendered\nby default. for example:\n\n```python\nfrom django import forms\nfrom django_recaptcha.fields import recaptchafield\n\nclass formwithcaptcha(forms.form):\n    captcha = recaptchafield()\n```\n\nbe sure to include the captcha field in your forms. there are many ways\nto add fields to forms in django. we recommend you refer to the [form\nrendering\noptions](https://docs.djangoproject.com/en/dev/topics/forms/#form-rendering-options)\nand [rendering fields\nmanually](https://docs.djangoproject.com/en/dev/topics/forms/#rendering-fields-manually)\nsections of the [official django documentation for\nforms](https://docs.djangoproject.com/en/dev/topics/forms).\n\nto allow for runtime specification of keys you can optionally pass the\n`private_key` or `public_key` parameters to the constructor. for\nexample:\n\n```python\ncaptcha = recaptchafield(\n    public_key='76wtgdfsjhsydt7r5ffgfhgsdfytd656sad75fgh',\n    private_key='98dfg6df7g56df6gdfgdfg65jhjh656565gfgfgs',\n)\n```\n\nif specified, these parameters will be used instead of your recaptcha\nproject settings.\n\n### widgets\n\nthere are three widgets that can be used with the `recaptchafield`\nclass:\n\n- `recaptchav2checkbox` for [google recaptcha v2 - checkbox](https://developers.google.com/recaptcha/docs/display)\n- `recaptchav2invisible` for [google recaptcha v2 - invisible](https://developers.google.com/recaptcha/docs/invisible)\n- `recaptchav3` for [google recaptcha v3](https://developers.google.com/recaptcha/docs/v3)\n\nto make use of widgets other than the default google recaptcha v2 -\ncheckbox widget, simply replace the `recaptchafield` widget. for\nexample:\n\n```python\nfrom django import forms\nfrom django_recaptcha.fields import recaptchafield\nfrom django_recaptcha.widgets import recaptchav2invisible\n\nclass formwithcaptcha(forms.form):\n    captcha = recaptchafield(widget=recaptchav2invisible)\n```\n\nthe recaptcha widget supports several [data\nattributes](https://developers.google.com/recaptcha/docs/display#render_param)\nthat customize the behaviour of the widget, such as `data-theme`,\n`data-size`, etc. you can forward these options to the widget by passing\nan `attrs` parameter to the widget, containing a dictionary of options.\nfor example:\n\n```python\ncaptcha = fields.recaptchafield(\n    widget=widgets.recaptchav2checkbox(\n        attrs={\n            'data-theme': 'dark',\n            'data-size': 'compact',\n        }\n    )\n)\n# the recaptchav2invisible widget\n# ignores the \"data-size\" attribute in favor of 'data-size=\"invisible\"'\n```\n\nthe recaptcha api supports several\n[parameters](https://developers.google.com/recaptcha/docs/display#js_param).\nto customise the parameters that get sent along pass an `api_params`\nparameter to the widget, containing a dictionary of options. for\nexample:\n\n```python\ncaptcha = fields.recaptchafield(\n    widget=widgets.recaptchav2checkbox(\n        api_params={'hl': 'cl', 'onload': 'onloadfunc'}\n    )\n)\n# the dictionary is urlencoded and appended to the recaptcha api url.\n```\n\nby default, the widgets provided only supports a single form with a\nsingle widget on each page.\n\nthe language can be set with the 'h1' parameter, look at [language\ncodes](https://developers.google.com/recaptcha/docs/language) for the\nlanguage code options. note that translations need to be added to this\npackage for the errors to be shown correctly. currently the package has\nerror translations for the following language codes: es, fr, nl, pl,\npt_br, ru, zh_cn, zh_tw\n\nhowever, the javascript used by the widgets can easily be overridden in\nthe templates.\n\nthe templates are located in:\n\n- `django_recaptcha/includes/js_v2_checkbox.html` for overriding the recaptcha v2 - checkbox template\n- `django_recaptcha/includes/js_v2_invisible.html` for overriding the recaptcha v2 - invisible template\n- `django_recaptcha/includes/js_v3.html` for overriding the recaptcha v3 template\n\nfor more information about overriding templates look at [django's template override](https://docs.djangoproject.com/en/4.2/howto/overriding-templates/)\n\n### recaptcha v3 score\n\nas of version 3, recaptcha also returns a score value. this can be used\nto determine the likelihood of the page interaction being a bot. see the google [documentation](https://developers.google.com/recaptcha/docs/v3#score)\nfor more details.\n\nto set a project wide score limit use the `recaptcha_required_score` setting.\n\nfor example:\n\n```python\nrecaptcha_required_score = 0.85\n```\n\nfor per field, runtime, specification the attribute can also be passed to the widget:\n\n```python\ncaptcha = fields.recaptchafield(\n    widget=recaptchav3(\n        attrs={\n            'required_score':0.85,\n            ...\n        }\n    )\n)\n```\n\nin the event the score does not meet the requirements, the field\nvalidation will fail as expected and an error message will be logged.\n\n### recaptcha v3 action\n\n[google's recaptcha v3 api supports passing an action value](https://developers.google.com/recaptcha/docs/v3#actions).\nactions allow you to tie recaptcha validations to a specific form on your site for analytical purposes, enabling you to perform risk analysis per form. this will allow you to make informed decisions about adjusting the score threshold for certain forms because abusive behavior can vary depending on the nature of the form.\n\nto set the action value, pass an `action` argument when instantiating the recaptcha\nwidget. be careful to only use alphanumeric characters, slashes and underscores as stated in the recaptcha documentation.\n\n```python\ncaptcha = fields.recaptchafield(\n    widget=widgets.recaptchav3(\n        action='signup'\n    )\n)\n```\n\nsetting an action is entirely optional. if you don't specify an action, no action will be passed to the recaptcha v3 api.\n\n### local development and functional testing\n\nif `recaptcha_public_key` and `recaptcha_private_key` are not set,\ndjango-recaptcha will use [google's test\nkeys](https://developers.google.com/recaptcha/docs/faq) instead. these\ncannot be used in production since they always validate to true and a\nwarning will be shown on the recaptcha. google's test keys only work for\nrecaptcha version 2.\n\nto bypass the security check that prevents the test keys from being used\nunknowingly add\n`silenced_system_checks = [..., 'django_recaptcha.recaptcha_test_key_error', ...]`\nto your settings, here is an example:\n\n```python\nsilenced_system_checks = ['django_recaptcha.recaptcha_test_key_error']\n```\n\nif you want to mock the call to google's servers altogether, have a look\nat\n[test_fields.py](https://github.com/torchbox/django-recaptcha/blob/main/captcha/tests/test_fields.py):\n\n```python\nfrom unittest.mock import patch\nfrom django.test import testcase\nfrom django_recaptcha.client import recaptcharesponse\n\nclass testfields(testcase):\n    @patch(\"django_recaptcha.fields.client.submit\")\n    def test_client_success_response(self, mocked_submit):\n        mocked_submit.return_value = recaptcharesponse(is_valid=true)\n        ...\n```\n\n## credits\n\noriginally developed by [praekelt consulting](https://github.com/praekelt/django-recaptcha)\n\ninspired marco fucci's blogpost titled [integrating recaptcha with django](http://www.marcofucci.com/tumblelog/26/jul/2009/integrating-recaptcha-with-django)\n\n`client.py` taken from [recaptcha-client](http://pypi.python.org/pypi/recaptcha-client) licensed mit/x11 by mike crawford.\n\nrecaptcha copyright 2012 google.\n\n\n# authors\n\n## current maintainers\n\n- [andrew chen wang](https://github.com/andrew-chen-wang)\n- [storm heg](https://github.com/stormheg)\n\n## praekelt consulting\n\n- shaun sephton\n- peter pistorius\n- hedley roos\n- altus barry\n- cilliers blignaut\n\n## btaylor design\n\n- [brandon taylor](http://btaylordesign.com/)\n\n## other\n\n- brooks travis\n- [denis mishchishin](https://github.com/denz)\n- [joshua peper](https://github.com/zout)\n- [rodrigo primo](https://github.com/rodrigoprimo)\n- [snnwolf](https://github.com/snnwolf)\n- [adriano orioli](https://github.com/aorioli)\n- [cdvv7788](https://github.com/cdvv7788)\n- [daniel gatis carrazzoni](https://github.com/danielgatis)\n- [pbf](https://github.com/pbf)\n- [alexey subbotin](https://github.com/dotsbb)\n- [sean stewart](https://github.com/mindcruzer)\n- [rob charlwood](https://github.com/robcharlwood)\n- [ruslan kovtun](https://github.com/koutoftimer)\n",
  "docs_url": null,
  "keywords": "django,recaptcha,recaptcha v2,recaptcha v3",
  "license": "bsd",
  "name": "django-recaptcha",
  "package_url": "https://pypi.org/project/django-recaptcha/",
  "project_url": "https://pypi.org/project/django-recaptcha/",
  "project_urls": {
    "Changelog": "https://github.com/torchbox/django-recaptcha/blob/main/CHANGELOG.md",
    "Discussions": "https://github.com/torchbox/django-recaptcha/discussions",
    "Homepage": "https://github.com/torchbox/django-recaptcha",
    "Issue Tracker": "https://github.com/torchbox/django-recaptcha/issues"
  },
  "release_url": "https://pypi.org/project/django-recaptcha/4.0.0/",
  "requires_dist": [
    "django"
  ],
  "requires_python": "",
  "summary": "django recaptcha form field/widget app.",
  "version": "4.0.0",
  "releases": [],
  "developers": [
    "hello@torchbox.com",
    "torchbox_and_individual_contributors"
  ],
  "kwds": "django_recaptcha recaptcharesponse recaptcha recaptchafield recaptcha_proxy",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_django_recaptcha",
  "homepage": "https://github.com/torchbox/django-recaptcha",
  "release_count": 30,
  "dependency_ids": [
    "pypi_django"
  ]
}
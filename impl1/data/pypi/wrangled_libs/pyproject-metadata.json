{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# pyproject-metadata\n\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/ffy00/python-pyproject-metadata/main.svg)](https://results.pre-commit.ci/latest/github/ffy00/python-pyproject-metadata/main)\n[![checks](https://github.com/ffy00/python-pyproject-metadata/actions/workflows/checks.yml/badge.svg)](https://github.com/ffy00/python-pyproject-metadata/actions/workflows/checks.yml)\n[![tests](https://github.com/ffy00/python-pyproject-metadata/actions/workflows/tests.yml/badge.svg)](https://github.com/ffy00/python-pyproject-metadata/actions/workflows/tests.yml)\n[![codecov](https://codecov.io/gh/ffy00/python-pyproject-metadata/branch/main/graph/badge.svg?token=9chbjs1lch)](https://codecov.io/gh/ffy00/python-pyproject-metadata)\n[![documentation status](https://readthedocs.org/projects/pyproject-metadata/badge/?version=latest)](https://pyproject-metadata.readthedocs.io/en/latest/?badge=latest)\n\n\n> dataclass for pep 621 metadata with support for [core metadata] generation\n\nthis project does not implement the parsing of `pyproject.toml`\ncontaining pep 621 metadata.\n\ninstead, given a python data structure representing pep 621 metadata (already\nparsed), it will validate this input and generate a pep 643-compliant metadata\nfile (e.g. `pkg-info`).\n\n\n## usage\n\nafter [installing `pyproject-metadata`](https://pypi.org/project/pyproject-metadata/),\nyou can use it as a library in your scripts and programs:\n\n```python\nfrom pyproject_metadata import standardmetadata\n\nparsed_pyproject = { ... }  # you can use parsers like `tomli` to obtain this dict\nmetadata = standardmetadata.from_pyproject(parsed_pyproject)\nprint(metadata.entrypoints)  # same fields as defined in pep 621\n\npkg_info = metadata.as_rfc822()\nprint(str(pkg_info))  # core metadata\n```\n\n\n[core metadata]: https://packaging.python.org/specifications/core-metadata/\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pyproject-metadata",
  "package_url": "https://pypi.org/project/pyproject-metadata/",
  "project_url": "https://pypi.org/project/pyproject-metadata/",
  "project_urls": {
    "changelog": "https://pyproject-metadata.readthedocs.io/en/stable/changelog.html",
    "homepage": "https://github.com/FFY00/python-pyproject-metadata"
  },
  "release_url": "https://pypi.org/project/pyproject-metadata/0.7.1/",
  "requires_dist": [
    "packaging (>=19.0)",
    "furo (>=2020.11.19b18) ; extra == 'docs'",
    "sphinx (~=3.0) ; extra == 'docs'",
    "sphinx-autodoc-typehints (>=1.10.0) ; extra == 'docs'",
    "Jinja2 (<3.1) ; extra == 'docs'",
    "pytest (>=6.2.4) ; extra == 'test'",
    "pytest-cov (>=2) ; extra == 'test'",
    "tomli (>=1.0.0) ; (python_version < \"3.11\") and extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "pep 621 metadata parsing",
  "version": "0.7.1",
  "releases": [],
  "developers": [
    "lains@riseup.net"
  ],
  "kwds": "pyproject_metadata from_pyproject pyproject parsed_pyproject pkg_info",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pyproject_metadata",
  "homepage": "",
  "release_count": 6,
  "dependency_ids": [
    "pypi_furo",
    "pypi_jinja2",
    "pypi_packaging",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_sphinx",
    "pypi_sphinx_autodoc_typehints",
    "pypi_tomli"
  ]
}
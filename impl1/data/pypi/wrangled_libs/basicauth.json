{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "intended audience :: developers",
    "license :: public domain",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http",
    "topic :: software development :: libraries"
  ],
  "description": "# python-basicauth\n\n[![build status](https://github.com/rdegges/python-basicauth/actions/workflows/test.yml/badge.svg)](https://github.com/rdegges/python-basicauth/actions)\n\na dead simple http basic auth encoder and decoder. why? because http should be\ndrop dead easy... that's why.\n\n\n## install\n\nto install ``python-basicauth``, simply run ``pip install basicauth`` and\nyou'll get the latest version installed automatically.\n\n\n## usage\n\nto generate an encoded basic auth string:\n\n``` python\n>>> from basicauth import encode\n>>> username, password = 'rdegges', 'omghax!!!'\n>>> encoded_str = encode(username, password)\n>>> print encoded_str\n'basic cmrlz2dlczpvbwdoyxglmjelmjelmje='\n```\n\nto decode an encoded basic auth string:\n\n``` python\n>>> from basicauth import decode\n>>> encoded_str = 'basic cmrlz2dlczpvbwdoyxglmjelmjelmje='  # from the example above.\n>>> username, password = decode(encoded_str)\n>>> print (username, password)\n('rdegges', 'omghax!!!')\n```\n\nwe can also decode the encoded string directly:\n\n``` python\n>>> from basicauth import decode\n>>> encoded_str = 'cmrlz2dlczpvbwdoyxglmjelmjelmje='  # from the example above.\n>>> username, password = decode(encoded_str)\n>>> print (username, password)\n('rdegges', 'omghax!!!')\n```\n\nand if there are errors:\n\n``` python\n>>> from basicauth import decode, decodeerror\n>>> encoded_str = 'lol omg cmrlz2dlczpvbwdoyxglmjelmjelmje='  # invalid encoded string.\n>>> username, password = decode(encoded_str)\ntraceback (most recent call last):\n  file \"<stdin>\", line 1, in <module>\n  file \"basicauth/__init__.py\", line 49, in decode\n    raise decodeerror\nbasicauth.decodeerror\n```\n\n**note**: the [http basic authentication spec](http://www.ietf.org/rfc/rfc2617.txt)\ndoes **not** allow you to include any colon characters (`:`) in the username\nfield. colons are allowed in the password field -- but that's it.\n\n\n## tests\n\nwant to run the tests? no problem:\n\n``` bash\n$ git clone https://github.com/rdegges/python-basicauth.git\n$ cd python-basicauth\n$ pip install -e .\n...\n$ python -m unittest\n..............\n----------------------------------------------------------------------\nran 14 tests in 0.103s\n\nok\n```\n",
  "docs_url": null,
  "keywords": "security,basicauth,http",
  "license": "unlicense",
  "name": "basicauth",
  "package_url": "https://pypi.org/project/basicauth/",
  "project_url": "https://pypi.org/project/basicauth/",
  "project_urls": {
    "Homepage": "https://github.com/rdegges/python-basicauth"
  },
  "release_url": "https://pypi.org/project/basicauth/1.0.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "an incredibly simple http basic auth implementation.",
  "version": "1.0.0",
  "releases": [],
  "developers": [
    "r@rdegges.com",
    "randall_degges"
  ],
  "kwds": "basicauth encoded_str auth encoded python",
  "license_kwds": "unlicense",
  "libtype": "pypi",
  "id": "pypi_basicauth",
  "homepage": "https://github.com/rdegges/python-basicauth",
  "release_count": 6,
  "dependency_ids": []
}
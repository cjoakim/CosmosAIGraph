{
  "classifiers": [
    "development status :: 4 - beta",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: testing"
  ],
  "description": "================\npytest-freezegun\n================\n\n\n.. image:: https://img.shields.io/pypi/v/pytest-freezegun.svg\n    :target: https://pypi.python.org/pypi/pytest-freezegun/\n\n.. image:: https://travis-ci.org/ktosiek/pytest-freezegun.svg?branch=master\n    :target: https://travis-ci.org/ktosiek/pytest-freezegun\n    :alt: see build status on travis ci\n\n.. image:: https://ci.appveyor.com/api/projects/status/github/ktosiek/pytest-freezegun?branch=master&svg=true\n    :target: https://ci.appveyor.com/project/ktosiek/pytest-freezegun/branch/master\n    :alt: see build status on appveyor\n\nwrap tests with fixtures in freeze_time\n\n\nfeatures\n--------\n\n* freeze time in both the test and fixtures\n* access the freezer when you need it\n\n\ninstallation\n------------\n\nyou can install \"pytest-freezegun\" via `pip`_ from `pypi`_::\n\n    $ pip install pytest-freezegun\n\n\nusage\n-----\n\nfreeze time by using the ``freezer`` fixture::\n\n    def test_frozen_date(freezer):\n        now = datetime.now()\n        time.sleep(1)\n        later = datetime.now()\n        assert now == later\n\nthis can then be used to move time::\n\n    def test_moving_date(freezer):\n        now = datetime.now()\n        freezer.move_to('2017-05-20')\n        later = datetime.now()\n        assert now != later\n\nyou can also pass arguments to freezegun by using the ``freeze_time`` mark::\n\n    @pytest.mark.freeze_time('2017-05-21')\n    def test_current_date():\n        assert date.today() == date(2017, 5, 21)\n\nthe ``freezer`` fixture and ``freeze_time`` mark can be used together,\nand they work with other fixtures::\n\n    @pytest.fixture\n    def current_date():\n        return date.today()\n\n    @pytest.mark.freeze_time\n    def test_changing_date(current_date, freezer):\n        freezer.move_to('2017-05-20')\n        assert current_date == date(2017, 5, 20)\n        freezer.move_to('2017-05-21')\n        assert current_date == date(2017, 5, 21)\n\nthey can also be used in class-based tests::\n\n    class testdate:\n\n        @pytest.mark.freeze_time\n        def test_changing_date(self, current_date, freezer):\n            freezer.move_to('2017-05-20')\n            assert current_date == date(2017, 5, 20)\n            freezer.move_to('2017-05-21')\n            assert current_date == date(2017, 5, 21)\n\n\ncontributing\n------------\n\ncontributions are very welcome.\ntests can be run with `tox`_.\nyou can later check coverage with `coverage combine && coverage html`.\nplease try to keep coverage at least the same before you submit a pull request.\n\n\nlicense\n-------\n\ndistributed under the terms of the `mit`_ license, \"pytest-freezegun\" is free and open source software\n\n\nissues\n------\n\nif you encounter any problems, please `file an issue`_ along with a detailed description.\n\n\ncredits\n-------\n\nthis `pytest`_ plugin was generated with `cookiecutter`_ along with `@hackebrot`_'s `cookiecutter-pytest-plugin`_ template.\n\n\n.. _`cookiecutter`: https://github.com/audreyr/cookiecutter\n.. _`@hackebrot`: https://github.com/hackebrot\n.. _`mit`: http://opensource.org/licenses/mit\n.. _`cookiecutter-pytest-plugin`: https://github.com/pytest-dev/cookiecutter-pytest-plugin\n.. _`file an issue`: https://github.com/ktosiek/pytest-freezegun/issues\n.. _`pytest`: https://github.com/pytest-dev/pytest\n.. _`tox`: https://tox.readthedocs.io/en/latest/\n.. _`pip`: https://pypi.python.org/pypi/pip/\n.. _`pypi`: https://pypi.python.org/pypi\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pytest-freezegun",
  "package_url": "https://pypi.org/project/pytest-freezegun/",
  "project_url": "https://pypi.org/project/pytest-freezegun/",
  "project_urls": {
    "Homepage": "https://github.com/ktosiek/pytest-freezegun"
  },
  "release_url": "https://pypi.org/project/pytest-freezegun/0.4.2/",
  "requires_dist": [
    "freezegun (>0.3)",
    "pytest (>=3.0.0)"
  ],
  "requires_python": "",
  "summary": "wrap tests with fixtures in freeze_time",
  "version": "0.4.2",
  "releases": [],
  "developers": [
    "tomasz.kontusz@gmail.com",
    "tomasz_kontusz"
  ],
  "kwds": "pytest pypi freezegun travis pip",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytest_freezegun",
  "homepage": "https://github.com/ktosiek/pytest-freezegun",
  "release_count": 6,
  "dependency_ids": [
    "pypi_freezegun",
    "pypi_pytest"
  ]
}
{
  "classifiers": [
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: implementation :: micropython"
  ],
  "description": "flask-httpauth\n==============\n\n[![build status](https://github.com/miguelgrinberg/flask-httpauth/workflows/build/badge.svg)](https://github.com/miguelgrinberg/flask-httpauth/actions) [![codecov](https://codecov.io/gh/miguelgrinberg/flask-httpauth/branch/master/graph/badge.svg?token=keu2002dho)](https://codecov.io/gh/miguelgrinberg/flask-httpauth)\n\nsimple extension that provides basic and digest http authentication for flask routes.\n\ninstallation\n------------\nthe easiest way to install this is through pip.\n```\npip install flask-httpauth\n```\n\nbasic authentication example\n----------------------------\n\n```python\nfrom flask import flask\nfrom flask_httpauth import httpbasicauth\nfrom werkzeug.security import generate_password_hash, check_password_hash\n\napp = flask(__name__)\nauth = httpbasicauth()\n\nusers = {\n    \"john\": generate_password_hash(\"hello\"),\n    \"susan\": generate_password_hash(\"bye\")\n}\n\n@auth.verify_password\ndef verify_password(username, password):\n    if username in users and \\\n            check_password_hash(users.get(username), password):\n        return username\n\n@app.route('/')\n@auth.login_required\ndef index():\n    return \"hello, %s!\" % auth.current_user()\n\nif __name__ == '__main__':\n    app.run()\n```\n\nnote: see the [documentation](http://pythonhosted.org/flask-httpauth) for more complex examples that involve password hashing and custom verification callbacks.\n\ndigest authentication example\n-----------------------------\n\n```python\nfrom flask import flask\nfrom flask_httpauth import httpdigestauth\n\napp = flask(__name__)\napp.config['secret_key'] = 'secret key here'\nauth = httpdigestauth()\n\nusers = {\n    \"john\": \"hello\",\n    \"susan\": \"bye\"\n}\n\n@auth.get_password\ndef get_pw(username):\n    if username in users:\n        return users.get(username)\n    return none\n\n@app.route('/')\n@auth.login_required\ndef index():\n    return \"hello, %s!\" % auth.username()\n\nif __name__ == '__main__':\n    app.run()\n```\n\nresources\n---------\n\n- [documentation](http://flask-httpauth.readthedocs.io/en/latest/)\n- [pypi](https://pypi.org/project/flask-httpauth)\n- [change log](https://github.com/miguelgrinberg/flask-httpauth/blob/master/changes.md)\n",
  "docs_url": "https://pythonhosted.org/Flask-HTTPAuth/",
  "keywords": "",
  "license": "",
  "name": "flask-httpauth",
  "package_url": "https://pypi.org/project/Flask-HTTPAuth/",
  "project_url": "https://pypi.org/project/Flask-HTTPAuth/",
  "project_urls": {
    "Bug Tracker": "https://github.com/miguelgrinberg/flask-httpauth/issues",
    "Homepage": "https://github.com/miguelgrinberg/flask-httpauth"
  },
  "release_url": "https://pypi.org/project/Flask-HTTPAuth/4.8.0/",
  "requires_dist": [
    "flask"
  ],
  "requires_python": "",
  "summary": "http authentication for flask routes",
  "version": "4.8.0",
  "releases": [],
  "developers": [
    "miguel.grinberg@gmail.com",
    "miguel_grinberg"
  ],
  "kwds": "flask_httpauth flask httpauth httpbasicauth httpdigestauth",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_flask_httpauth",
  "homepage": "https://github.com/miguelgrinberg/flask-httpauth",
  "release_count": 34,
  "dependency_ids": [
    "pypi_flask"
  ]
}
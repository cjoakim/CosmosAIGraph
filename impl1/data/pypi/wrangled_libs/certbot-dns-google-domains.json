{
  "classifiers": [
    "license :: other/proprietary license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# certbot-dns-google-domains\n\na certbot dns authenticator for [google domains](https://domains.google/).\n\n## named arguments\n\noption|description\n---|---|\n`--authenticator dns-google-domains`|select this authenticator plugin.\n`--dns-google-domains-credentials file`|path to the ini file with credentials.\n`--dns-google-domains-propagation-seconds int`|how long to wait for dns changes to propagate. default = 30s.\n`--dns-google-domains-zone string`|what the registered domain on google domains is. default: retrieved from either the credentials file, or by using the public suffix list to guess.\n\n## credentials\n\nthe credentials file includes the access token for google domains.\n\n```.ini\ndns_google_domains_access_token = abcdef\n```\n\noptionally, you can also define the zone in this file.\n\n```.ini\ndns_google_domains_access_token = abcdef\ndns_google_domains_zone = example.com\n```\n\n## usage example\n\n### docker / podman\n\n``` bash\ndocker run \\\n  -v '/var/lib/letsencrypt:/var/lib/letsencrypt' \\\n  -v '/etc/letsencrypt:/etc/letsencrypt' \\\n  --cap-drop=all \\\n  ghcr.io/aaomidi/certbot-dns-google-domains:latest \\\n  certbot certonly \\\n  --authenticator 'dns-google-domains' \\\n  --dns-google-domains-credentials '/var/lib/letsencrypt/dns_google_domains_credentials.ini' \\\n  --server 'https://acme-v02.api.letsencrypt.org/directory' \\\n  --non-interactive \\\n  --dns-google-domains-zone 'example.com' \\\n  -d 'a.example.com'\n```\n\nnotes:\n- `-v '/var/lib/letsencrypt:/var/lib/letsencrypt'` is where certbot by default outputs certificates, keys, and account information.\n- `-v '/etc/letsencrypt:/etc/letsencrypt'` is where certbot keeps its configuration.\n- `--authenticator 'dns-google-domains'` uses the dns-google-domains authenticator.\n- `--dns-google-domains-credentials '/var/lib/letsencrypt/dns_google_domains_credentials.ini'` is the path to the credentials file.\n- `--dns-google-domains-zone 'example.com'` is the main domain you have registered with google domains. this is optional.\n- to ensure successful execution, this command requires you to intentionally provide both the --email and --agree-tos arguments. the command does not include them by default, as it is important for users to consciously agree to the terms of service and supply their email address.\n\n### python\n\nyou can get the `certbot-dns-google-domains` package from [pypi](https://pypi.org/project/certbot-dns-google-domains/):\n\n```bash\npip3 install certbot certbot-dns-google-domains\n\ncertbot certonly \\\n--authenticator 'dns-google-domains' \\\n--dns-google-domains-credentials '/var/lib/letsencrypt/dns_google_domains_credentials.ini' \\\n--server 'https://acme-v02.api.letsencrypt.org/directory' \\\n--dns-google-domains-zone 'example.com' \\\n-d 'a.example.com'\n```\n\nnote: if you have installed certbot from a non-pip3 source, the certbot-dns-google-domains plugin might not be compatible with your existing certbot installation. in this case, consider using pip3 to install certbot and its plugins to ensure compatibility.\n\n### homebrew\n\n```bash\nbrew install certbot\n$(brew --prefix certbot)/libexec/bin/pip3 install certbot-dns-google-domains\n```\n\n## notes on zone resolution\n\ngoogle domains does not provide an api to obtain the zone for a domain based on a subdomain. this plugin employs the following logic to determine the zone:\n\n1. if the `--dns-google-domains-zone` argument is specified, use that.\n2. if the credentials file specifies a zone, use that.\n3. utilize the [public suffix list](https://publicsuffix.org/) to determine the zone.\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache 2.0",
  "name": "certbot-dns-google-domains",
  "package_url": "https://pypi.org/project/certbot-dns-google-domains/",
  "project_url": "https://pypi.org/project/certbot-dns-google-domains/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/certbot-dns-google-domains/0.1.11/",
  "requires_dist": [
    "certbot (>=1.23.0)",
    "zope.interface (>=5.5.0)",
    "dataclasses-json (>=0.5.7,<0.6.0)",
    "publicsuffixlist (>=0.9.3,<0.10.0)"
  ],
  "requires_python": ">=3.7.2",
  "summary": "certbot dns authenticator for google domains",
  "version": "0.1.11",
  "releases": [],
  "developers": [
    "amir@aaomidi.com",
    "amir_omidi"
  ],
  "kwds": "dns_google_domains_credentials dns_google_domains_access_token dns_google_domains_zone certbot dns",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_certbot_dns_google_domains",
  "homepage": "",
  "release_count": 9,
  "dependency_ids": [
    "pypi_certbot",
    "pypi_dataclasses_json",
    "pypi_publicsuffixlist",
    "pypi_zope.interface"
  ]
}
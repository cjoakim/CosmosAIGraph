{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mozilla public license 2.0 (mpl 2.0)",
    "operating system :: os independent",
    "topic :: internet :: name service (dns)",
    "topic :: text processing :: filters"
  ],
  "description": "publicsuffixlist\n===\n\n[public suffix list](https://publicsuffix.org/) parser implementation for python 2.6+/3.x.\n\n- compliant with [test data](https://raw.githubusercontent.com/publicsuffix/list/master/tests/test_psl.txt)\n- support idn (unicode or punycoded).\n- support python2.6+ and python 3.x\n- shipped with built-in psl and the updater script.\n- written in pure python. no library dependencies.\n\n[![build status](https://app.travis-ci.com/ko-zu/psl.svg?branch=master)](https://app.travis-ci.com/ko-zu/psl)\n[![pypi version](https://badge.fury.io/py/publicsuffixlist.svg)](https://badge.fury.io/py/publicsuffixlist)\n[![downloads](http://pepy.tech/badge/publicsuffixlist)](http://pepy.tech/project/publicsuffixlist)\n\ninstall\n===\n`publicsuffixlist` can be installed via `pip` or `pip3`.\n```\n$ sudo pip install publicsuffixlist\n```\n\nif you are in a bit old distributions (rhel/centos6.x), you may need to update `pip` itself before install.\n```\n$ sudo pip install -u pip\n```\n\nusage\n===\n\n```python\nfrom publicsuffixlist import publicsuffixlist\n\npsl = publicsuffixlist()\n# uses built-in psl file\n\npsl.publicsuffix(\"www.example.com\")   # \"com\"\n# longest public suffix part\n\npsl.privatesuffix(\"www.example.com\")  # \"example.com\"\n# shortest domain assigned for a registrant\n\npsl.privatesuffix(\"com\") # none\n# none if no private (non-public) part found\n\n\npsl.publicsuffix(\"www.example.unknownnewtld\") # \"unknownnewtld\"\n# new tlds are valid public suffix by default\n\npsl.publicsuffix(u\"www.example.\u9999\u6e2f\")   # u\"\u9999\u6e2f\"\n# accept unicode\n\npsl.publicsuffix(\"www.example.xn--j6w193g\") # \"xn--j6w193g\"\n# accept punycoded idns by default\n```\n\nlatest psl can be passed as a file like line-iterable object.\n```python\nwith open(\"latest_psl.dat\", \"rb\") as f:\n    psl = publicsuffixlist(f)\n```\n\nworks with both python 2.x and 3.x.\n```\n$ python2 setup.py test\n$ python3 setup.py test\n```\n\ndrop-in compatibility code to replace [publicsuffix](https://pypi.org/project/publicsuffix/)\n```python\n# from publicsuffix import publicsuffixlist\nfrom publicsuffixlist.compat import publicsuffixlist\n\npsl = publicsuffixlist()\npsl.suffix(\"www.example.com\")   # return \"example.com\"\npsl.suffix(\"com\")               # return \"\" (as str, not none)\n```\n\nsome convenient methods available.\n```python\npsl.is_private(\"example.com\")  # true\npsl.privateparts(\"aaa.www.example.com\") # (\"aaa\", \"www\", \"example.com\")\npsl.subdomain(\"aaa.www.example.com\", depth=1) # \"www.example.com\"\n```\n\n\nlimitation\n===\n`publicsuffixlist` do not provide domain name validation.\nin dns protocol, most of 8-bit characters are acceptable label of domain name. icann compliant registries do not accept domain names that have `_` (underscore) but hostname may have. dmarc records, for example.\n\nusers need to confirm the input is valid based on the users' context.\n\npartially encoded (unicode-mixed) punycode is not supported because of very slow punycode en/decoding and unpredictable encoding of results.\nif you are not sure the input is valid punycode or not, you should do `unknowndomain.encode(\"idna\")` which is idempotence.\n\nicann and private suffixes\n===\nthe public suffix list contains both suffixes for icann domains and private suffixes. using the flag `only_icann` the private suffixes can be deactivated:\n```\n>>> psl = publicsuffixlist()\n>>> psl.publicsuffix(\"example.priv.at\")\n'priv.at'\n>>> psl = publicsuffixlist(only_icann=true)\n>>> psl.publicsuffix(\"example.priv.at\")\n'at'\n```\n\nlicense\n===\n\n- this module is licensed under mozilla public license 2.0.\n- public suffix list maintained by mozilla foundation is licensed under mozilla public license 2.0.\n- psl testcase dataset is public domain (cc0).\n\n\ndevelopment / packaging\n===\nthis module and its packaging workflow are maintained in the author's repository located at https://github.com/ko-zu/psl.\na new package, which includes the latest psl file, is automatically generated and uploaded to pypi.\nthe last part of the version number represents the release date, for instance, `0.10.1.20230331`.\n\n\nsource / link\n===\n\n- git repository on github (https://github.com/ko-zu/psl)\n- pypi (https://pypi.org/project/publicsuffixlist/)\n",
  "docs_url": null,
  "keywords": "",
  "license": "mpl-2.0",
  "name": "publicsuffixlist",
  "package_url": "https://pypi.org/project/publicsuffixlist/",
  "project_url": "https://pypi.org/project/publicsuffixlist/",
  "project_urls": {
    "Homepage": "https://github.com/ko-zu/psl"
  },
  "release_url": "https://pypi.org/project/publicsuffixlist/0.10.0.20231214/",
  "requires_dist": [
    "pandoc ; extra == 'readme'",
    "requests ; extra == 'update'"
  ],
  "requires_python": ">=2.6",
  "summary": "publicsuffixlist implement",
  "version": "0.10.0.20231214",
  "releases": [],
  "developers": [
    "causeless@gmail.com",
    "ko"
  ],
  "kwds": "latest_psl pip3 python3 test_psl python2",
  "license_kwds": "mpl-2.0",
  "libtype": "pypi",
  "id": "pypi_publicsuffixlist",
  "homepage": "https://github.com/ko-zu/psl",
  "release_count": 93,
  "dependency_ids": [
    "pypi_pandoc",
    "pypi_requests"
  ]
}
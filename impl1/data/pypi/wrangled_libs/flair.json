{
  "classifiers": [],
  "description": "![alt text](resources/docs/flair_logo_2020_final_day_dpi72.png#gh-light-mode-only)\n![alt text](resources/docs/flair_logo_2020_final_night_dpi72.png#gh-dark-mode-only)\n\n[![pypi version](https://badge.fury.io/py/flair.svg)](https://badge.fury.io/py/flair)\n[![github issues](https://img.shields.io/github/issues/flairnlp/flair.svg)](https://github.com/flairnlp/flair/issues)\n[![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg)](contributing.md)\n[![license: mit](https://img.shields.io/badge/license-mit-brightgreen.svg)](https://opensource.org/licenses/mit)\n\na very simple framework for **state-of-the-art nlp**. developed by [humboldt university of berlin](https://www.informatik.hu-berlin.de/en/forschung-en/gebiete/ml-en/) and friends.\n\n---\n\nflair is:\n\n* **a powerful nlp library.** flair allows you to apply our state-of-the-art natural language processing (nlp)\nmodels to your text, such as named entity recognition (ner), sentiment analysis, part-of-speech tagging (pos),\n  special support for [biomedical data](/resources/docs/hunflair.md),\n sense disambiguation and classification, with support for a rapidly growing number of languages.\n\n* **a text embedding library.** flair has simple interfaces that allow you to use and combine different word and\ndocument embeddings, including our proposed [flair embeddings](https://www.aclweb.org/anthology/c18-1139/) and various transformers.\n\n* **a pytorch nlp framework.** our framework builds directly on [pytorch](https://pytorch.org/), making it easy to\ntrain your own models and experiment with new approaches using flair embeddings and classes.\n\nnow at [version 0.13.1(https://github.com/flairnlp/flair/releases)!\n\n\n## state-of-the-art models\n\nflair ships with state-of-the-art models for a range of nlp tasks. for instance, check out our latest ner models:\n\n| language | dataset | flair | best published | model card & demo\n|  ---  | ----------- | ---------------- | ------------- | ------------- |\n| english | conll-03 (4-class)   |  **94.09**  | *94.3 [(yamada et al., 2020)](https://doi.org/10.18653/v1/2020.emnlp-main.523)* | [flair english 4-class ner demo](https://huggingface.co/flair/ner-english-large)  |\n| english | ontonotes (18-class)  |  **90.93**  | *91.3 [(yu et al., 2020)](https://www.aclweb.org/anthology/2020.acl-main.577.pdf)* | [flair english 18-class ner demo](https://huggingface.co/flair/ner-english-ontonotes-large) |\n| german  | conll-03 (4-class)   |  **92.31**  | *90.3 [(yu et al., 2020)](https://www.aclweb.org/anthology/2020.acl-main.577.pdf)* | [flair german 4-class ner demo](https://huggingface.co/flair/ner-german-large)  |\n| dutch  | conll-03  (4-class)  |  **95.25**  | *93.7 [(yu et al., 2020)](https://www.aclweb.org/anthology/2020.acl-main.577.pdf)* | [flair dutch 4-class ner demo](https://huggingface.co/flair/ner-dutch-large)  |\n| spanish  | conll-03 (4-class)   |  **90.54** | *90.3 [(yu et al., 2020)](https://www.aclweb.org/anthology/2020.acl-main.577.pdf)* | [flair spanish 4-class ner demo](https://huggingface.co/flair/ner-spanish-large)  |\n\nmany flair sequence tagging models (named entity recognition, part-of-speech tagging etc.) are also hosted\non the [__\ud83e\udd17 hugging face model hub__](https://huggingface.co/models?library=flair&sort=downloads)! you can browse models, check detailed information on how they were trained, and even try each model out online!\n\n\n## quick start\n\n### requirements and installation\n\nin your favorite virtual environment, simply do:\n\n```\npip install flair\n```\n\nflair requires python 3.8+. \n\n### example 1: tag entities in text\n\nlet's run **named entity recognition** (ner) over an example sentence. all you need to do is make a `sentence`, load\na pre-trained model and use it to predict tags for the sentence:\n\n```python\nfrom flair.data import sentence\nfrom flair.nn import classifier\n\n# make a sentence\nsentence = sentence('i love berlin .')\n\n# load the ner tagger\ntagger = classifier.load('ner')\n\n# run ner over sentence\ntagger.predict(sentence)\n\n# print the sentence with all annotations\nprint(sentence)\n```\n\nthis should print:\n\n```console\nsentence: \"i love berlin .\" \u2192 [\"berlin\"/loc]\n```\n\nthis means that \"berlin\" was tagged as a **location entity** in this sentence. \n\n   * *to learn more about ner tagging in flair, check out our [ner tutorial](https://flairnlp.github.io/docs/tutorial-basics/tagging-entities)!*\n\n\n### example 2: detect sentiment \n\nlet's run **sentiment analysis** over an example sentence to determine whether it is positive or negative.\nsame code as above, just a different model: \n\n```python\nfrom flair.data import sentence\nfrom flair.nn import classifier\n\n# make a sentence\nsentence = sentence('i love berlin .')\n\n# load the ner tagger\ntagger = classifier.load('sentiment')\n\n# run ner over sentence\ntagger.predict(sentence)\n\n# print the sentence with all annotations\nprint(sentence)\n```\n\nthis should print:\n\n```console\nsentence[4]: \"i love berlin .\" \u2192 positive (0.9983)\n```\n\nthis means that the sentence \"i love berlin\" was tagged as having **positive** sentiment. \n\n   * *to learn more about sentiment analysis in flair, check out our [sentiment analysis tutorial](https://flairnlp.github.io/docs/tutorial-basics/tagging-sentiment)!*\n\n## tutorials\n\non our new :fire: [**flair documentation page**](https://flairnlp.github.io/docs/intro) you will find many tutorials to get you started!\n\nin particular: \n- [tutorial 1: basic tagging](https://flairnlp.github.io/docs/category/tutorial-1-basic-tagging) \u2192 how to tag your text \n- [tutorial 2: training models](https://flairnlp.github.io/docs/category/tutorial-2-training-models) \u2192 how to train your own state-of-the-art nlp models \n- [tutorial 3: embeddings](https://flairnlp.github.io/docs/category/tutorial-3-embeddings) \u2192 how to produce embeddings for words and documents\n\nthere is also a dedicated landing page for our [biomedical ner and datasets](/resources/docs/hunflair.md) with\ninstallation instructions and tutorials.\n\n\n## more documentation\n\nanother great place to start is the book [natural language processing with flair](https://www.amazon.com/natural-language-processing-flair-understanding/dp/1801072310)\nand its accompanying [code repository](https://github.com/packtpublishing/natural-language-processing-with-flair), though it was\nwritten for an older version of flair and some examples may no longer work.\n\nthere are also good third-party articles and posts that illustrate how to use flair:\n* [training an ner model with flair](https://medium.com/thecyphy/training-custom-ner-model-using-flair-df1f9ea9c762)\n* [training a text classifier with flair](https://towardsdatascience.com/text-classification-with-state-of-the-art-nlp-library-flair-b541d7add21f)\n* [zero and few-shot learning](https://towardsdatascience.com/zero-and-few-shot-learning-c08e145dc4ed) \n* [visualisation tool for highlighting the extracted entities](https://github.com/lunayach/visner)\n* [flair functionality and how to use in colab](https://www.analyticsvidhya.com/blog/2019/02/flair-nlp-library-python/)\n* [benchmarking ner algorithms](https://towardsdatascience.com/benchmark-ner-algorithm-d4ab01b2d4c3)\n* [clinical nlp](https://towardsdatascience.com/clinical-natural-language-processing-5c7b3d17e137)\n* [how to build a microservice with flair and flask](https://shekhargulati.com/2019/01/04/building-a-sentiment-analysis-python-microservice-with-flair-and-flask/)\n* [a docker image for flair](https://towardsdatascience.com/docker-image-for-nlp-5402c9a9069e)\n* [practical approach of state-of-the-art flair in named entity recognition](https://medium.com/analytics-vidhya/practical-approach-of-state-of-the-art-flair-in-named-entity-recognition-46a837e25e6b)\n* [training a flair text classifier on google cloud platform (gcp) and serving predictions on gcp](https://github.com/robinvanschaik/flair-on-gcp)\n* [model interpretability for transformer-based flair models](https://github.com/robinvanschaik/interpret-flair)\n\n## citing flair\n\nplease cite [the following paper](https://www.aclweb.org/anthology/c18-1139/) when using flair embeddings:\n\n```\n@inproceedings{akbik2018coling,\n  title={contextual string embeddings for sequence labeling},\n  author={akbik, alan and blythe, duncan and vollgraf, roland},\n  booktitle = {{coling} 2018, 27th international conference on computational linguistics},\n  pages     = {1638--1649},\n  year      = {2018}\n}\n```\n\nif you use the flair framework for your experiments, please cite [this paper](https://www.aclweb.org/anthology/papers/n/n19/n19-4010/):\n\n```\n@inproceedings{akbik2019flair,\n  title={{flair}: an easy-to-use framework for state-of-the-art {nlp}},\n  author={akbik, alan and bergmann, tanja and blythe, duncan and rasul, kashif and schweter, stefan and vollgraf, roland},\n  booktitle={{naacl} 2019, 2019 annual conference of the north american chapter of the association for computational linguistics (demonstrations)},\n  pages={54--59},\n  year={2019}\n}\n```\n\nif you use our new \"flert\" models or approach, please cite [this paper](https://arxiv.org/abs/2011.06993):\n\n```\n@misc{schweter2020flert,\n    title={{flert}: document-level features for named entity recognition},\n    author={stefan schweter and alan akbik},\n    year={2020},\n    eprint={2011.06993},\n    archiveprefix={arxiv},\n    primaryclass={cs.cl}\n}\n```\n\nif you use our tars approach for few-shot and zero-shot learning, please cite [this paper](https://kishaloyhalder.github.io/pdfs/tars_coling2020.pdf/):\n\n```\n@inproceedings{halder2020coling,\n  title={task aware representation of sentences for generic text classification},\n  author={halder, kishaloy and akbik, alan and krapac, josip and vollgraf, roland},\n  booktitle = {{coling} 2020, 28th international conference on computational linguistics},\n  year      = {2020}\n}\n```\n\n## contact\n\nplease email your questions or comments to [alan akbik](http://alanakbik.github.io/).\n\n## contributing\n\nthanks for your interest in contributing! there are many ways to get involved;\nstart with our [contributor guidelines](contributing.md) and then\ncheck these [open issues](https://github.com/flairnlp/flair/issues) for specific tasks.\n\n\n## [license](/license)\n\nthe mit license (mit)\n\nflair is licensed under the following mit license: the mit license (mit) copyright \u00a9 2018 zalando se, https://tech.zalando.com\n\npermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201csoftware\u201d), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:\n\nthe above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.\n\nthe software is provided \u201cas is\u201d, without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "flair",
  "package_url": "https://pypi.org/project/flair/",
  "project_url": "https://pypi.org/project/flair/",
  "project_urls": {
    "Homepage": "https://github.com/flairNLP/flair"
  },
  "release_url": "https://pypi.org/project/flair/0.13.1/",
  "requires_dist": [
    "boto3 >=1.20.27",
    "bpemb >=0.3.2",
    "conllu >=4.0",
    "deprecated >=1.2.13",
    "ftfy >=6.1.0",
    "gdown >=4.4.0",
    "gensim >=4.2.0",
    "huggingface-hub >=0.10.0",
    "janome >=0.4.2",
    "langdetect >=1.0.9",
    "lxml >=4.8.0",
    "matplotlib >=2.2.3",
    "more-itertools >=8.13.0",
    "mpld3 >=0.3",
    "pptree >=3.1",
    "python-dateutil >=2.8.2",
    "pytorch-revgrad >=0.2.0",
    "regex >=2022.1.18",
    "scikit-learn >=1.0.2",
    "segtok >=1.5.11",
    "sqlitedict >=2.0.0",
    "tabulate >=0.8.10",
    "torch !=1.8,>=1.5.0",
    "tqdm >=4.63.0",
    "transformer-smaller-training-vocab >=0.2.3",
    "transformers[sentencepiece] <5.0.0,>=4.18.0",
    "urllib3 <2.0.0,>=1.0.0",
    "wikipedia-api >=0.5.7",
    "semver <4.0.0,>=3.0.0"
  ],
  "requires_python": ">=3.8",
  "summary": "a very simple framework for state-of-the-art nlp",
  "version": "0.13.1",
  "releases": [],
  "developers": [
    "alan.akbik@gmail.com",
    "alan_akbik"
  ],
  "kwds": "flair_logo_2020_final_night_dpi72 flair_logo_2020_final_day_dpi72 badge highlighting flair",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_flair",
  "homepage": "https://github.com/flairnlp/flair",
  "release_count": 31,
  "dependency_ids": [
    "pypi_boto3",
    "pypi_bpemb",
    "pypi_conllu",
    "pypi_deprecated",
    "pypi_ftfy",
    "pypi_gdown",
    "pypi_gensim",
    "pypi_huggingface_hub",
    "pypi_janome",
    "pypi_langdetect",
    "pypi_lxml",
    "pypi_matplotlib",
    "pypi_more_itertools",
    "pypi_mpld3",
    "pypi_pptree",
    "pypi_python_dateutil",
    "pypi_pytorch_revgrad",
    "pypi_regex",
    "pypi_scikit_learn",
    "pypi_segtok",
    "pypi_semver",
    "pypi_sqlitedict",
    "pypi_tabulate",
    "pypi_torch",
    "pypi_tqdm",
    "pypi_transformer_smaller_training_vocab",
    "pypi_transformers",
    "pypi_urllib3",
    "pypi_wikipedia_api"
  ]
}
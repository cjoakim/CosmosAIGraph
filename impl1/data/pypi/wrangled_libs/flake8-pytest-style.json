{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "environment :: plugins",
    "framework :: flake8",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing",
    "topic :: software development :: testing :: unit"
  ],
  "description": "# flake8-pytest-style\n\n[![pypi](https://badge.fury.io/py/flake8-pytest-style.svg)](https://pypi.org/project/flake8-pytest-style)\n[![python: 3.7+](https://img.shields.io/badge/python-3.7+-blue.svg)](https://pypi.org/project/flake8-pytest-style)\n[![downloads](https://img.shields.io/pypi/dm/flake8-pytest-style.svg)](https://pypistats.org/packages/flake8-pytest-style)\n[![build status](https://github.com/m-burst/flake8-pytest-style/actions/workflows/ci.yml/badge.svg?branch=master)](https://github.com/m-burst/flake8-pytest-style/actions/workflows/ci.yml)\n[![code coverage](https://codecov.io/gh/m-burst/flake8-pytest-style/branch/master/graph/badge.svg)](https://codecov.io/gh/m-burst/flake8-pytest-style)\n[![license: mit](https://img.shields.io/badge/license-mit-green.svg)](https://en.wikipedia.org/wiki/mit_license)\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n## description\n\na `flake8` plugin checking common style issues or inconsistencies with `pytest`-based tests.\n\ncurrently the following errors are reported:\n\n| code    | description |\n| ------- | ----------- |\n| [pt001] | use @pytest.fixture() over @pytest.fixture <br> (configurable by `pytest-fixture-no-parentheses`) |\n| [pt002] | configuration for fixture '{name}' specified via positional args, use kwargs |\n| [pt003] | scope='function' is implied in @pytest.fixture() |\n| [pt004] | fixture '{name}' does not return anything, add leading underscore |\n| [pt005] | fixture '{name}' returns a value, remove leading underscore |\n| [pt006] | wrong name(s) type in @pytest.mark.parametrize, expected {expected_type} <br> (configurable by `pytest-parametrize-names-type`) |\n| [pt007] | wrong values type in @pytest.mark.parametrize, expected {expected_type} <br> (configurable by `pytest-parametrize-values-type` and `pytest-parametrize-values-row-type`) |\n| [pt008] | use return_value= instead of patching with lambda |\n| [pt009] | use a regular assert instead of unittest-style '{assertion}' |\n| [pt010] | set the expected exception in pytest.raises() |\n| [pt011] | pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception <br> (configurable by `pytest-raises-require-match-for`) |\n| [pt012] | pytest.raises() block should contain a single simple statement |\n| [pt013] | found incorrect import of pytest, use simple 'import pytest' instead |\n| [pt014] | found duplicate test cases {indexes} in @pytest.mark.parametrize |\n| [pt015] | assertion always fails, replace with pytest.fail() |\n| [pt016] | no message passed to pytest.fail() |\n| [pt017] | found assertion on exception {name} in except block, use pytest.raises() instead |\n| [pt018] | assertion should be broken down into multiple parts |\n| [pt019] | fixture {name} without value is injected as parameter, use @pytest.mark.usefixtures instead |\n| [pt020] | @pytest.yield_fixture is deprecated, use @pytest.fixture |\n| [pt021] | use yield instead of request.addfinalizer |\n| [pt022] | no teardown in fixture {name}, use return instead of yield |\n| [pt023] | use @pytest.mark.foo() over @pytest.mark.foo <br> (configurable by `pytest-mark-no-parentheses`) |\n| [pt024] | pytest.mark.asyncio is unnecessary for fixtures |\n| [pt025] | pytest.mark.usefixtures has no effect on fixtures |\n| [pt026] | useless pytest.mark.usefixtures without parameters | \n| [pt027] | use pytest.raises() instead of unittest-style '{assertion}' |\n\n## installation\n\n    pip install flake8-pytest-style\n\n## configuration\n\nthe plugin has the following configuration options:\n\n* `pytest-fixture-no-parentheses` &mdash; see [pt001]\n* `pytest-parametrize-names-type` &mdash; see [pt006]\n* `pytest-parametrize-values-type` &mdash; see [pt007]\n* `pytest-parametrize-values-row-type` &mdash; see [pt007]\n* `pytest-raises-require-match-for` &mdash; see [pt011]\n* `pytest-mark-no-parentheses` &mdash; see [pt023]\n\n## for developers\n\n### install deps and setup pre-commit hook\n\n    make init\n\n### run linters, autoformat, tests etc.\n\n    make format lint test\n\n### bump new version\n\n    make bump_major\n    make bump_minor\n    make bump_patch\n\n## license\n\nmit\n\n## change log\n\n**unreleased**\n\n...\n\n**1.7.2 - 2023-02-15**\n\n* fix false positive for [pt009] on `pytest.fail`\n\n**1.7.1 - 2023-02-15**\n\n* update list of unittest-style assert methods for [pt009]/[pt027]\n\n**1.7.0 - 2023-02-09**\n\n* require at least python 3.7.2\n* support python 3.11\n* add [pt027] (checks for unittest-style `assertraises`)\n\n**1.6.0 - 2021-12-23**\n\n* require at least python 3.6.2\n* expose `py.typed` file\n\n**1.5.1 - 2021-11-05**\n\n* better wording for [pt011]\n* support python 3.10\n\n**1.5.0 - 2021-06-18**\n\n* add [pt025] (checks for erroneous `pytest.mark.usefixtures` on fixtures)\n* add [pt026] (checks for `pytest.mark.usefixtures` without parameters)\n\n**1.4.4 - 2021-06-17**\n\n* fix [pt023] not checking marks in classes\n* fix [pt004] incorrectly firing on fixtures with `yield from`\n\n**1.4.2 - 2021-05-24**\n\n* update `flake8-plugin-utils` version to improve stability\n\n**1.4.1 - 2021-04-01**\n\n* fix argparse-related warnings\n\n**1.4.0 - 2021-03-14**\n\n* add [pt023] (checks for parentheses consistency in `pytest.mark` usage)\n* add [pt024] (checks for unnecessary `pytest.mark.asyncio` on fixtures)\n* fix [pt004], [pt005] firing on abstract fixtures\n* fix [pt012] firing on `with` statements containing a single `pass`\n\n**1.3.0 - 2020-08-30**\n\n* add [pt022] (checks for `yield` fixtures without teardown)\n\n**1.2.3 - 2020-08-06**\n\n* update `flake8-plugin-utils` dependency to fix encoding problems on windows\n\n**1.2.2 - 2020-07-23**\n\n* fix [pt004]/[pt005] inspecting returns of nested functions\n\n**1.2.1 - 2020-06-15**\n\n* fix [pt021] for factory fixtures (#46)\n\n**1.2.0 - 2020-06-12**\n\n* support scoped `mocker` fixtures from `pytest-mock` for [pt008]\n* check for positional-only lambda arguments in [pt008]\n* add [pt020] (checks for `pytest.yield_fixture`)\n* add [pt021] (checks for `request.addfinalizer`)\n* add documentation pages for all rules\n\n**1.1.1 - 2020-04-17**\n\n* fix [pt011] not reporting `match=''` as a violation\n\n**1.1.0 - 2020-04-14**\n\n* add [pt015] (checks for `assert false`)\n* add [pt016] (checks for `pytest.fail()` without message)\n* add [pt017] (checks for assertions on exceptions in `except` blocks)\n* add [pt018] (checks for composite assertions)\n* add [pt019] (checks for fixtures without value injected as parameters)\n\n**1.0.0 - 2020-03-26**\n\n* add [pt014] (checks for duplicate test cases in `@pytest.mark.parametrize`)\n\n**0.6.0 - 2020-03-21**\n\n* add configuration option `pytest-parametrize-names-type` for [pt006]\n* add configuration options `pytest-parametrize-values-type` and\n`pytest-parametrize-values-row-type` for [pt007]\n\n**0.5.0 - 2020-03-09**\n\n* add configuration option `pytest-fixture-no-parentheses` for [pt001]\n* add [pt013] (checks for `from`-imports from `pytest`)\n\n**0.4.0 - 2020-03-09**\n\n* add [pt012] (checks for multiple statements in `with pytest.raises()`)\n\n**0.3.1 - 2020-03-09**\n\n* fix default value of `pytest-raises-require-match-for` config option\n\n**0.3.0 - 2020-03-09**\n\n* add [pt010] and [pt011] (checks for `pytest.raises` parameters)\n\n**0.2.0 - 2020-03-01**\n\n* add [pt009] (ported from [flake8-pytest](https://github.com/vikingco/flake8-pytest))\n\n**0.1.3 - 2019-05-24**\n\n* add `yield` fixtures support\n* fix changelog entry for 0.1.2\n\n**0.1.2 - 2019-05-23**\n\n* fix parametrize checkers not working in decorators\n\n**0.1.1 - 2019-05-23**\n\n* update pypi description\n\n**0.1.0 - 2019-05-23**\n\n* initial\n\n[pt001]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt001.md\n[pt002]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt002.md\n[pt003]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt003.md\n[pt004]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt004.md\n[pt005]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt005.md\n[pt006]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt006.md\n[pt007]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt007.md\n[pt008]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt008.md\n[pt009]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt009.md\n[pt010]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt010.md\n[pt011]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt011.md\n[pt012]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt012.md\n[pt013]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt013.md\n[pt014]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt014.md\n[pt015]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt015.md\n[pt016]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt016.md\n[pt017]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt017.md\n[pt018]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt018.md\n[pt019]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt019.md\n[pt020]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt020.md\n[pt021]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt021.md\n[pt022]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt022.md\n[pt023]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt023.md\n[pt024]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt024.md\n[pt025]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt025.md\n[pt026]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt026.md\n[pt027]: https://github.com/m-burst/flake8-pytest-style/blob/v1.7.2/docs/rules/pt027.md\n",
  "docs_url": null,
  "keywords": "flake8,pytest",
  "license": "mit",
  "name": "flake8-pytest-style",
  "package_url": "https://pypi.org/project/flake8-pytest-style/",
  "project_url": "https://pypi.org/project/flake8-pytest-style/",
  "project_urls": {
    "Homepage": "https://pypi.org/project/flake8-pytest-style",
    "Repository": "https://github.com/m-burst/flake8-pytest-style"
  },
  "release_url": "https://pypi.org/project/flake8-pytest-style/1.7.2/",
  "requires_dist": [
    "flake8-plugin-utils (>=1.3.2,<2.0.0)"
  ],
  "requires_python": ">=3.7.2,<4.0.0",
  "summary": "a flake8 plugin checking common style issues or inconsistencies with pytest-based tests.",
  "version": "1.7.2",
  "releases": [],
  "developers": [
    "mdburshteyn@gmail.com",
    "mikhail_burshteyn"
  ],
  "kwds": "pytest flake8 pypi pypistats pip",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_flake8_pytest_style",
  "homepage": "https://pypi.org/project/flake8-pytest-style",
  "release_count": 29,
  "dependency_ids": [
    "pypi_flake8_plugin_utils"
  ]
}
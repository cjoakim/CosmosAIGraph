{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: mathematics"
  ],
  "description": "![pyswarms logo](https://i.imgur.com/ex8oqpq.png)\n---\n\n\n[![pypi version](https://badge.fury.io/py/pyswarms.svg)](https://badge.fury.io/py/pyswarms)\n[![build status](https://dev.azure.com/ljvmiranda/ljvmiranda/_apis/build/status/ljvmiranda921.pyswarms?branchname=master)](https://dev.azure.com/ljvmiranda/ljvmiranda/_build/latest?definitionid=1&branchname=master)\n[![documentation status](https://readthedocs.org/projects/pyswarms/badge/?version=latest)](https://pyswarms.readthedocs.io/en/master/?badge=master)\n[![license: mit](https://img.shields.io/badge/license-mit-blue.svg )](https://raw.githubusercontent.com/ljvmiranda921/pyswarms/master/license)\n[![doi](http://joss.theoj.org/papers/10.21105/joss.00433/status.svg)](https://doi.org/10.21105/joss.00433)\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n[![gitter chat](https://badges.gitter.im/join%20chat.svg)](https://gitter.im/pyswarms/issues)\n\npyswarms is an extensible research toolkit for particle swarm optimization\n(pso) in python.\n\nit is intended for swarm intelligence researchers, practitioners, and\nstudents who prefer a high-level declarative interface for implementing pso\nin their problems. pyswarms enables basic optimization with pso and\ninteraction with swarm optimizations. check out more features below!\n\n* **free software:** mit license\n* **documentation:** https://pyswarms.readthedocs.io.\n* **python versions:** 3.5 and above\n\n## features\n\n* high-level module for particle swarm optimization. for a list of all optimizers, check [this link].\n* built-in objective functions to test optimization algorithms.\n* plotting environment for cost histories and particle movement.\n* hyperparameter search tools to optimize swarm behaviour.\n* (for devs and researchers): highly-extensible api for implementing your own techniques.\n\n[this link]: https://pyswarms.readthedocs.io/en/latest/features.html\n\n## installation\n\nto install pyswarms, run this command in your terminal:\n\n```shell\n$ pip install pyswarms\n```\n\nthis is the preferred method to install pyswarms, as it will always install\nthe most recent stable release.\n\nin case you want to install the bleeding-edge version, clone this repo:\n\n```shell\n$ git clone -b development https://github.com/ljvmiranda921/pyswarms.git\n```\nand then run\n\n```shell\n$ cd pyswarms\n$ python setup.py install\n```\n\n## running in a vagrant box\n\nto run pyswarms in a vagrant box, install vagrant by going to \nhttps://www.vagrantup.com/downloads.html and downloading the proper packaged from the hashicorp website. \n\nafterward, run the following command in the project directory:\n\n```shell\n$ vagrant provision\n$ vagrant up\n$ vagrant ssh\n```\nnow you're ready to develop your contributions in a premade virtual environment. \n\n## basic usage\n\npyswarms provides a high-level implementation of various particle swarm\noptimization algorithms. thus, it aims to be user-friendly and customizable.\nin addition, supporting modules can be used to help you in your optimization\nproblem.\n\n### optimizing a sphere function\n\nyou can import pyswarms as any other python module,\n\n```python\nimport pyswarms as ps\n```\n\nsuppose we want to find the minima of `f(x) = x^2` using global best\npso, simply import the built-in sphere function,\n`pyswarms.utils.functions.sphere()`, and the necessary optimizer:\n\n```python\nimport pyswarms as ps\nfrom pyswarms.utils.functions import single_obj as fx\n# set-up hyperparameters\noptions = {'c1': 0.5, 'c2': 0.3, 'w':0.9}\n# call instance of pso\noptimizer = ps.single.globalbestpso(n_particles=10, dimensions=2, options=options)\n# perform optimization\nbest_cost, best_pos = optimizer.optimize(fx.sphere, iters=100)\n```\n\n![sphere optimization](https://i.imgur.com/5ltjrof.gif)\n\nthis will run the optimizer for `100` iterations, then returns the best cost\nand best position found by the swarm. in addition, you can also access\nvarious histories by calling on properties of the class:\n\n```python\n# obtain the cost history\noptimizer.cost_history\n# obtain the position history\noptimizer.pos_history\n# obtain the velocity history\noptimizer.velocity_history\n```\n\nat the same time, you can also obtain the mean personal best and mean neighbor\nhistory for local best pso implementations. simply call `optimizer.mean_pbest_history`\nand `optimizer.mean_neighbor_history` respectively.\n\n### hyperparameter search tools\n\npyswarms implements a grid search and random search technique to find the\nbest parameters for your optimizer. setting them up is easy. in this example,\nlet's try using `pyswarms.utils.search.randomsearch` to find the optimal\nparameters for `localbestpso` optimizer.\n\nhere, we input a range, enclosed in tuples, to define the space in which the\nparameters will be found. thus, `(1,5)` pertains to a range from 1 to 5.\n\n```python\nimport numpy as np\nimport pyswarms as ps\nfrom pyswarms.utils.search import randomsearch\nfrom pyswarms.utils.functions import single_obj as fx\n\n# set-up choices for the parameters\noptions = {\n    'c1': (1,5),\n    'c2': (6,10),\n    'w': (2,5),\n    'k': (11, 15),\n    'p': 1\n}\n\n# create a randomsearch object\n# n_selection_iters is the number of iterations to run the searcher\n# iters is the number of iterations to run the optimizer\ng = randomsearch(ps.single.localbestpso, n_particles=40,\n            dimensions=20, options=options, objective_func=fx.sphere,\n            iters=10, n_selection_iters=100)\n\nbest_score, best_options = g.search()\n```\n\nthis then returns the best score found during optimization, and the\nhyperparameter options that enable it.\n\n```s\n>>> best_score\n1.41978545901\n>>> best_options['c1']\n1.543556887693\n>>> best_options['c2']\n9.504769054771\n```\n\n### swarm visualization\n\nit is also possible to plot optimizer performance for the sake of formatting.\nthe plotters module is built on top of `matplotlib`, making it\nhighly-customizable.\n\n\n```python\nimport pyswarms as ps\nfrom pyswarms.utils.functions import single_obj as fx\nfrom pyswarms.utils.plotters import plot_cost_history, plot_contour, plot_surface\nimport matplotlib.pyplot as plt\n# set-up optimizer\noptions = {'c1':0.5, 'c2':0.3, 'w':0.9}\noptimizer = ps.single.globalbestpso(n_particles=50, dimensions=2, options=options)\noptimizer.optimize(fx.sphere, iters=100)\n# plot the cost\nplot_cost_history(optimizer.cost_history)\nplt.show()\n```\n\n![costhistory](https://i.imgur.com/19iuz4b.png)\n\nwe can also plot the animation...\n\n```python\nfrom pyswarms.utils.plotters.formatters import mesher, designer\n# plot the sphere function's mesh for better plots\nm = mesher(func=fx.sphere,\n           limits=[(-1,1), (-1,1)])\n# adjust figure limits\nd = designer(limits=[(-1,1), (-1,1), (-0.1,1)],\n             label=['x-axis', 'y-axis', 'z-axis'])\n```\n\nin 2d,\n\n```python\nplot_contour(pos_history=optimizer.pos_history, mesher=m, designer=d, mark=(0,0))\n```\n\n![contour](https://i.imgur.com/h3yofj6.gif)\n\nor in 3d!\n\n```python\npos_history_3d = m.compute_history_3d(optimizer.pos_history) # preprocessing\nanimation3d = plot_surface(pos_history=pos_history_3d,\n                           mesher=m, designer=d,\n                           mark=(0,0,0))    \n```\n\n![surface](https://i.imgur.com/krb61hx.gif)\n\n## contributing\n\npyswarms is currently maintained by a small yet dedicated team:\n- lester james v. miranda ([@ljvmiranda921](https://github.com/ljvmiranda921))\n- siobh\u00e1n k. cronin ([@siokcronin](https://github.com/siokcronin))\n- aaron moser ([@whzup](https://github.com/whzup))\n- steven beardwell ([@stevenbw](https://github.com/stevenbw))\n\nand we would appreciate it if you can lend a hand with the following:\n\n* find bugs and fix them\n* update documentation in docstrings\n* implement new optimizers to our collection\n* make utility functions more robust.\n\nwe would also like to acknowledge [all our\ncontributors](http://pyswarms.readthedocs.io/en/latest/authors.html), past and\npresent, for making this project successful!\n\nif you wish to contribute, check out our [contributing guide].\nmoreover, you can also see the list of features that need some help in our\n[issues] page.\n\n[contributing guide]: https://pyswarms.readthedocs.io/en/development/contributing.html\n[issues]: https://github.com/ljvmiranda921/pyswarms/issues\n\n**most importantly**, first-time contributors are welcome to join! i try my\nbest to help you get started and enable you to make your first pull request!\nlet's learn from each other!\n\n## credits\n\nthis project was inspired by the [pyswarm] module that performs pso with\nconstrained support. the package was created with [cookiecutter] and the\n[`audreyr/cookiecutter-pypackage`] project template.\n\n[pyswarm]: https://github.com/tisimst/pyswarm\n[cookiecutter]: https://github.com/audreyr/cookiecutter\n[`audreyr/cookiecutter-pypackage`]: https://github.com/audreyr/cookiecutter-pypackage\n\n## cite us\nare you using pyswarms in your project or research? please cite us!\n\n* miranda l.j., (2018). pyswarms: a research toolkit for particle swarm optimization in python. *journal of open source software*, 3(21), 433, [https://doi.org/10.21105/joss.00433](https://doi.org/10.21105/joss.00433)\n\n```bibtex\n@article{pyswarmsjoss2018,\n    author  = {lester james v. miranda},\n    title   = \"{p}y{s}warms, a research-toolkit for {p}article {s}warm {o}ptimization in {p}ython\",\n    journal = {journal of open source software},\n    year    = {2018},\n    volume  = {3},\n    issue   = {21},\n    doi     = {10.21105/joss.00433},\n    url     = {https://doi.org/10.21105/joss.00433}\n}\n```\n\n### projects citing pyswarms\nnot on the list? ping us in the issue tracker!\n\n* gousios, georgios. lecture notes for the tu delft ti3110tu course algorithms and data structures. accessed may 22, 2018. http://gousios.org/courses/algo-ds/book/string-distance.html#sop-example-using-pyswarms.\n* nandy, abhishek, and manisha biswas., \"applying python to reinforcement learning.\" *reinforcement learning*. apress, berkeley, ca, 2018. 89-128.\n* benedetti, marcello, et al., \"a generative modeling approach for benchmarking and training shallow quantum circuits.\" *arxiv preprint arxiv:1801.07686* (2018).\n* vrban\u010di\u010d et al., \"niapy: python microframework for building nature-inspired algorithms.\" journal of open source software, 3(23), 613, https://doi.org/10.21105/joss.00613\n* ha\u0308se, florian, et al. \"phoenics: a bayesian optimizer for chemistry.\" *acs central science.* 4.9 (2018): 1134-1145. \n* szynkiewicz, pawel. \"a comparative study of pso and cma-es algorithms on black-box optimization benchmarks.\" *journal of telecommunications and information technology* 4 (2018): 5.\n* mistry, miten, et al. \"mixed-integer convex nonlinear optimization with gradient-boosted trees embedded.\" imperial college london (2018).\n* vishwakarma, gaurav. *machine learning model selection for predicting properties of high refractive index polymers* dissertation. state university of new york at buffalo, 2018.\n* uluturk ismail, et al. \"efficient 3d placement of access points in an aerial wireless network.\" *2019 16th ieee anual consumer communications and networking conference (ccnc)* ieee (2019): 1-7.\n* downey a., theisen c., et al. \"cam-based passive variable friction device for structural control.\" *engineering structures* elsevier (2019): 430-439.\n* thaler s., paehler l., adams, n.a. \"sparse identification of truncation errors.\" *journal of computational physics* elsevier (2019): vol. 397\n* lin, y.h., he, d., wang, y. lee, l.j. \"last-mile delivery: optimal locker locatuion under multinomial logit choice model\" https://arxiv.org/abs/2002.10153\n* park j., kim s., lee, j. \"supplemental material for ultimate light trapping in free-form plasmonic waveguide\" kaist, university of cambridge, and cornell university http://www.jlab.or.kr/documents/publications/2019prapplied_si.pdf\n* pasha a., latha p.h., \"bio-inspired dimensionality reduction for parkinson's disease classification,\" *health information science and systems*, springer (2020).\n* carmichael z., syed, h., et al. \"analysis of wide and deep echo state networks for multiscale spatiotemporal time-series forecasting,\" *proceedings of the 7th annual neuro-inspired computational elements* acm (2019), nb. 7: 1-10 https://doi.org/10.1145/3320288.3320303\n* klonowski, j. \"optimizing message to virtual link assignment in avionics full-duplex switched ethernet networks\" proquest\n* haidar, a., jan, zm. \"evolving one-dimensional deep convolutional neural netowrk: a swarm-based approach,\" *ieee congress on evolutionary computation* (2019) https://doi.org/10.1109/cec.2019.8790036\n* shang, z. \"performance evaluation of the control plane in openflow networks,\" freie universitat berlin (2020)\n* linker, f. \"industrial benchmark for fuzzy particle swarm reinforcement learning,\" liezpic university (2020)\n* vetter, a. yan, c. et al. \"computational rule-based approach for corner correction of non-manhattan geometries in mask aligner photolithography,\" optics (2019). vol. 27, issue 22: 32523-32535 https://doi.org/10.1364/oe.27.032523\n* wang, q., megherbi, n., breckon t.p., \"a reference architecture for plausible thread image projection (tip) within 3d x-ray computed tomography volumes\" https://arxiv.org/abs/2001.05459\n* menke, tim, hase, florian, et al. \"automated discovery of superconducting circuits and its application to 4-local coupler design,\" arxiv preprint: https://arxiv.org/abs/1912.03322 \n\n## others\nlike it? love it? leave us a star on [github] to show your appreciation! \n\n[github]: https://github.com/ljvmiranda921/pyswarms\n\n## contributors\n\nthanks goes to these wonderful people ([emoji key](https://github.com/all-contributors/all-contributors#emoji-key)):\n\n<!-- all-contributors-list:start - do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/whzup\"><img src=\"https://avatars3.githubusercontent.com/u/39431903?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>aaron</b></sub></a><br /><a href=\"#maintenance-whzup\" title=\"maintenance\">\ud83d\udea7</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=whzup\" title=\"code\">\ud83d\udcbb</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=whzup\" title=\"documentation\">\ud83d\udcd6</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=whzup\" title=\"tests\">\u26a0\ufe0f</a> <a href=\"#ideas-whzup\" title=\"ideas, planning, & feedback\">\ud83e\udd14</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/pulls?q=is%3apr+reviewed-by%3awhzup\" title=\"reviewed pull requests\">\ud83d\udc40</a></td>\n    <td align=\"center\"><a href=\"https://github.com/carl-k\"><img src=\"https://avatars2.githubusercontent.com/u/13661469?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>carl-k</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=carl-k\" title=\"code\">\ud83d\udcbb</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=carl-k\" title=\"tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"http://www.siobhankcronin.com/\"><img src=\"https://avatars2.githubusercontent.com/u/19956669?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>siobh\u00e1n k cronin</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=siokcronin\" title=\"code\">\ud83d\udcbb</a> <a href=\"#maintenance-siokcronin\" title=\"maintenance\">\ud83d\udea7</a> <a href=\"#ideas-siokcronin\" title=\"ideas, planning, & feedback\">\ud83e\udd14</a></td>\n    <td align=\"center\"><a href=\"http://andrewjarcho.com\"><img src=\"https://avatars3.githubusercontent.com/u/1452951?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>andrew jarcho</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=jazcap53\" title=\"tests\">\u26a0\ufe0f</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=jazcap53\" title=\"code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/mamadyonline\"><img src=\"https://avatars1.githubusercontent.com/u/20543370?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>mamady</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=mamadyonline\" title=\"code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/jayspeidell\"><img src=\"https://avatars3.githubusercontent.com/u/26357788?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>jay speidell</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=jayspeidell\" title=\"code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/slek120\"><img src=\"https://avatars2.githubusercontent.com/u/3589574?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>eric</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3aslek120\" title=\"bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=slek120\" title=\"code\">\ud83d\udcbb</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/cpapadim\"><img src=\"https://avatars1.githubusercontent.com/u/13984473?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>cpapadim</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3acpapadim\" title=\"bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=cpapadim\" title=\"code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/dfhljf\"><img src=\"https://avatars1.githubusercontent.com/u/7887642?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>jianghui</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=dfhljf\" title=\"code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/nik1082\"><img src=\"https://avatars3.githubusercontent.com/u/17260188?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>jericho arcelao</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=nik1082\" title=\"code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"http://www.jdbohrman.xyz\"><img src=\"https://avatars2.githubusercontent.com/u/27848025?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>james d. bohrman</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=jdbohrman\" title=\"code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/bradahoward\"><img src=\"https://avatars2.githubusercontent.com/u/24660861?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>bradahoward</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=bradahoward\" title=\"code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/thomasces\"><img src=\"https://avatars2.githubusercontent.com/u/18325841?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>thomasces</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=thomasces\" title=\"code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/danielcorreia96\"><img src=\"https://avatars0.githubusercontent.com/u/17486065?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>daniel correia</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3adanielcorreia96\" title=\"bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=danielcorreia96\" title=\"code\">\ud83d\udcbb</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/fluencer\"><img src=\"https://avatars3.githubusercontent.com/u/6614307?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>fluencer</b></sub></a><br /><a href=\"#example-fluencer\" title=\"examples\">\ud83d\udca1</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=fluencer\" title=\"documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/miguelcocruz\"><img src=\"https://avatars0.githubusercontent.com/u/45034603?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>miguelcocruz</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=miguelcocruz\" title=\"documentation\">\ud83d\udcd6</a> <a href=\"#example-miguelcocruz\" title=\"examples\">\ud83d\udca1</a></td>\n    <td align=\"center\"><a href=\"https://github.com/stevenbw\"><img src=\"https://avatars1.githubusercontent.com/u/46458390?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>steven beardwell</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=stevenbw\" title=\"code\">\ud83d\udcbb</a> <a href=\"#maintenance-stevenbw\" title=\"maintenance\">\ud83d\udea7</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=stevenbw\" title=\"documentation\">\ud83d\udcd6</a> <a href=\"#ideas-stevenbw\" title=\"ideas, planning, & feedback\">\ud83e\udd14</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ndngo\"><img src=\"https://avatars1.githubusercontent.com/u/16291290?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>nathaniel ngo</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=ndngo\" title=\"documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/aneal-sharma\"><img src=\"https://avatars1.githubusercontent.com/u/19873846?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>aneal sharma</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=aneal-sharma\" title=\"documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/citomcclure\"><img src=\"https://avatars2.githubusercontent.com/u/38021988?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>chris mcclure</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=citomcclure\" title=\"documentation\">\ud83d\udcd6</a> <a href=\"#example-citomcclure\" title=\"examples\">\ud83d\udca1</a></td>\n    <td align=\"center\"><a href=\"http://se4.space/\"><img src=\"https://avatars2.githubusercontent.com/u/42605993?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>christopher angell</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=ctangell\" title=\"documentation\">\ud83d\udcd6</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/kutim\"><img src=\"https://avatars3.githubusercontent.com/u/8309533?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>kutim</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3akutim\" title=\"bug reports\">\ud83d\udc1b</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ichbinjakes\"><img src=\"https://avatars1.githubusercontent.com/u/20906800?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>jake souter</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3aichbinjakes\" title=\"bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=ichbinjakes\" title=\"code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ianboyanzhang\"><img src=\"https://avatars3.githubusercontent.com/u/4110995?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>ian zhang</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=ianboyanzhang\" title=\"documentation\">\ud83d\udcd6</a> <a href=\"#example-ianboyanzhang\" title=\"examples\">\ud83d\udca1</a></td>\n    <td align=\"center\"><a href=\"https://www.zachariahcarmichael.com/\"><img src=\"https://avatars2.githubusercontent.com/u/20629897?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>zach</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=craymichael\" title=\"documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://www.linkedin.com/in/michel-lavoie-71841526/\"><img src=\"https://avatars3.githubusercontent.com/u/3951483?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>michel lavoie</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3amiek770\" title=\"bug reports\">\ud83d\udc1b</a></td>\n    <td align=\"center\"><a href=\"http://linkedin.com/in/ewelinakaminska/\"><img src=\"https://avatars1.githubusercontent.com/u/42674710?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>ewekam</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=ewekam\" title=\"documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://www.linkedin.com/in/ivyna-alves\"><img src=\"https://avatars2.githubusercontent.com/u/18709508?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>ivyna santino</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=ivynasantino\" title=\"documentation\">\ud83d\udcd6</a> <a href=\"#example-ivynasantino\" title=\"examples\">\ud83d\udca1</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/yasirroni\"><img src=\"https://avatars2.githubusercontent.com/u/48709672?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>muhammad yasirroni</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=yasirroni\" title=\"documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ckastner\"><img src=\"https://avatars0.githubusercontent.com/u/15859947?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>christian kastner</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=ckastner\" title=\"documentation\">\ud83d\udcd6</a> <a href=\"#platform-ckastner\" title=\"packaging/porting to new platform\">\ud83d\udce6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/nishnash54\"><img src=\"https://avatars1.githubusercontent.com/u/25393122?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>nishant rodrigues</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=nishnash54\" title=\"code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/msat59\"><img src=\"https://avatars2.githubusercontent.com/u/20813541?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>msat59</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=msat59\" title=\"code\">\ud83d\udcbb</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3amsat59\" title=\"bug reports\">\ud83d\udc1b</a></td>\n    <td align=\"center\"><a href=\"https://github.com/diegoroman17\"><img src=\"https://avatars0.githubusercontent.com/u/1294358?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>diego</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=diegoroman17\" title=\"documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"http://www.aquanova-mp.com/\"><img src=\"https://avatars2.githubusercontent.com/u/6449766?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>shaad alaka</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=archer6621\" title=\"documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/blazewicz\"><img src=\"https://avatars1.githubusercontent.com/u/13185945?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>krzysztof b\u0142a\u017cewicz</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3ablazewicz\" title=\"bug reports\">\ud83d\udc1b</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/a310883\"><img src=\"https://avatars2.githubusercontent.com/u/48936633?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>jorge castillo</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=a310883\" title=\"documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://danner-web.de/\"><img src=\"https://avatars3.githubusercontent.com/u/11915163?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>philipp danner</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=dannerph\" title=\"code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/nikhil-sethi\"><img src=\"https://avatars2.githubusercontent.com/u/50928699?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>nikhil sethi</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=nikhil-sethi\" title=\"code\">\ud83d\udcbb</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=nikhil-sethi\" title=\"documentation\">\ud83d\udcd6</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n<!-- all-contributors-list:end -->\n\nthis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. contributions of any kind welcome!\n\n\n",
  "docs_url": null,
  "keywords": "pyswarms",
  "license": "mit license",
  "name": "pyswarms",
  "package_url": "https://pypi.org/project/pyswarms/",
  "project_url": "https://pypi.org/project/pyswarms/",
  "project_urls": {
    "Homepage": "https://github.com/ljvmiranda921/pyswarms"
  },
  "release_url": "https://pypi.org/project/pyswarms/1.3.0/",
  "requires_dist": [
    "scipy",
    "numpy",
    "matplotlib (>=1.3.1)",
    "attrs",
    "tqdm",
    "future",
    "pyyaml",
    "alabaster (==0.7.12); extra == 'test'",
    "attrs (==18.1.0); extra == 'test'",
    "babel (==2.6.0); extra == 'test'",
    "backcall (==0.1.0); extra == 'test'",
    "bleach (==3.1.0); extra == 'test'",
    "bumpversion (==0.5.3); extra == 'test'",
    "certifi (==2018.11.29); extra == 'test'",
    "chardet (==3.0.4); extra == 'test'",
    "coverage (==4.5.1); extra == 'test'",
    "cycler (==0.10.0); extra == 'test'",
    "decorator (==4.4.0); extra == 'test'",
    "defusedxml (==0.6.0); extra == 'test'",
    "docutils (==0.14); extra == 'test'",
    "entrypoints (==0.3); extra == 'test'",
    "flake8 (==3.5.0); extra == 'test'",
    "future (==0.16.0); extra == 'test'",
    "idna (==2.8); extra == 'test'",
    "imagesize (==1.1.0); extra == 'test'",
    "iniconfig (==1.1.1); extra == 'test'",
    "ipykernel (==5.1.1); extra == 'test'",
    "ipython-genutils (==0.2.0); extra == 'test'",
    "ipython (==7.5.0); extra == 'test'",
    "jedi (==0.13.3); extra == 'test'",
    "jinja2 (==2.10); extra == 'test'",
    "joblib (==0.13.2); extra == 'test'",
    "jsonschema (==3.0.1); extra == 'test'",
    "jupyter-client (==5.2.4); extra == 'test'",
    "jupyter-core (==4.4.0); extra == 'test'",
    "kiwisolver (==1.0.1); extra == 'test'",
    "markupsafe (==1.1.0); extra == 'test'",
    "matplotlib (==3.0.2); extra == 'test'",
    "mccabe (==0.6.1); extra == 'test'",
    "mistune (==0.8.4); extra == 'test'",
    "mock (==2.0.0); extra == 'test'",
    "nbconvert (==5.5.0); extra == 'test'",
    "nbformat (==4.4.0); extra == 'test'",
    "nbsphinx (==0.4.2); extra == 'test'",
    "nbstripout (==0.3.5); extra == 'test'",
    "numpy (==1.16.1); extra == 'test'",
    "packaging (==19.0); extra == 'test'",
    "pandas (==0.24.2); extra == 'test'",
    "pandocfilters (==1.4.2); extra == 'test'",
    "parso (==0.4.0); extra == 'test'",
    "pbr (==5.1.1); extra == 'test'",
    "pexpect (==4.7.0); extra == 'test'",
    "pickleshare (==0.7.5); extra == 'test'",
    "pluggy (==0.13.1); extra == 'test'",
    "pockets (==0.7.2); extra == 'test'",
    "prompt-toolkit (==2.0.9); extra == 'test'",
    "ptyprocess (==0.6.0); extra == 'test'",
    "py (==1.9.0); extra == 'test'",
    "pycodestyle (==2.3.1); extra == 'test'",
    "pyflakes (==1.6.0); extra == 'test'",
    "pygments (==2.3.1); extra == 'test'",
    "pyparsing (==2.3.1); extra == 'test'",
    "pyrsistent (==0.15.2); extra == 'test'",
    "pytest-cov (==2.10.1); extra == 'test'",
    "pytest (==6.1.2); extra == 'test'",
    "python-dateutil (==2.7.5); extra == 'test'",
    "pytz (==2018.9); extra == 'test'",
    "pyyaml (==3.13); extra == 'test'",
    "pyzmq (==18.0.1); extra == 'test'",
    "requests (==2.21.0); extra == 'test'",
    "scikit-learn (==0.21.1); extra == 'test'",
    "scipy (==1.2.0); extra == 'test'",
    "seaborn (==0.9.0); extra == 'test'",
    "six (==1.12.0); extra == 'test'",
    "snowballstemmer (==1.2.1); extra == 'test'",
    "sphinx-rtd-theme (==0.4.3); extra == 'test'",
    "sphinx (==1.7.6); extra == 'test'",
    "sphinxcontrib-napoleon (==0.7); extra == 'test'",
    "sphinxcontrib-websupport (==1.1.0); extra == 'test'",
    "testpath (==0.4.2); extra == 'test'",
    "toml (==0.10.2); extra == 'test'",
    "tornado (==6.0.2); extra == 'test'",
    "tox (==3.2.1); extra == 'test'",
    "tqdm (==4.24.0); extra == 'test'",
    "traitlets (==4.3.2); extra == 'test'",
    "urllib3 (==1.24.1); extra == 'test'",
    "virtualenv (==16.3.0); extra == 'test'",
    "wcwidth (==0.1.7); extra == 'test'",
    "webencodings (==0.5.1); extra == 'test'",
    "wheel (==0.31.1); extra == 'test'"
  ],
  "requires_python": "",
  "summary": "a python-based particle swarm optimization (pso) library.",
  "version": "1.3.0",
  "releases": [],
  "developers": [
    "lester_james_v",
    "ljvmiranda@gmail.com"
  ],
  "kwds": "pyswarmsjoss2018 pyswarms pyswarm badges badge",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_pyswarms",
  "homepage": "https://github.com/ljvmiranda921/pyswarms",
  "release_count": 20,
  "dependency_ids": [
    "pypi_alabaster",
    "pypi_attrs",
    "pypi_babel",
    "pypi_backcall",
    "pypi_bleach",
    "pypi_bumpversion",
    "pypi_certifi",
    "pypi_chardet",
    "pypi_coverage",
    "pypi_cycler",
    "pypi_decorator",
    "pypi_defusedxml",
    "pypi_docutils",
    "pypi_entrypoints",
    "pypi_flake8",
    "pypi_future",
    "pypi_idna",
    "pypi_imagesize",
    "pypi_iniconfig",
    "pypi_ipykernel",
    "pypi_ipython",
    "pypi_ipython_genutils",
    "pypi_jedi",
    "pypi_jinja2",
    "pypi_joblib",
    "pypi_jsonschema",
    "pypi_jupyter_client",
    "pypi_jupyter_core",
    "pypi_kiwisolver",
    "pypi_markupsafe",
    "pypi_matplotlib",
    "pypi_mccabe",
    "pypi_mistune",
    "pypi_mock",
    "pypi_nbconvert",
    "pypi_nbformat",
    "pypi_nbsphinx",
    "pypi_nbstripout",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_pandocfilters",
    "pypi_parso",
    "pypi_pbr",
    "pypi_pexpect",
    "pypi_pickleshare",
    "pypi_pluggy",
    "pypi_pockets",
    "pypi_prompt_toolkit",
    "pypi_ptyprocess",
    "pypi_py",
    "pypi_pycodestyle",
    "pypi_pyflakes",
    "pypi_pygments",
    "pypi_pyparsing",
    "pypi_pyrsistent",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_python_dateutil",
    "pypi_pytz",
    "pypi_pyyaml",
    "pypi_pyzmq",
    "pypi_requests",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_seaborn",
    "pypi_six",
    "pypi_snowballstemmer",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_sphinxcontrib_napoleon",
    "pypi_sphinxcontrib_websupport",
    "pypi_testpath",
    "pypi_toml",
    "pypi_tornado",
    "pypi_tox",
    "pypi_tqdm",
    "pypi_traitlets",
    "pypi_urllib3",
    "pypi_virtualenv",
    "pypi_wcwidth",
    "pypi_webencodings",
    "pypi_wheel"
  ]
}
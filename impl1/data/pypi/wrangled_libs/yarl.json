{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: cython",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "yarl\n====\n\nthe module provides handy url class for url parsing and changing.\n\n.. image:: https://github.com/aio-libs/yarl/workflows/ci/badge.svg\n  :target: https://github.com/aio-libs/yarl/actions?query=workflow%3aci\n  :align: right\n\n.. image:: https://codecov.io/gh/aio-libs/yarl/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/aio-libs/yarl\n\n.. image:: https://badge.fury.io/py/yarl.svg\n    :target: https://badge.fury.io/py/yarl\n\n\n.. image:: https://readthedocs.org/projects/yarl/badge/?version=latest\n    :target: https://yarl.aio-libs.org\n\n\n.. image:: https://img.shields.io/pypi/pyversions/yarl.svg\n    :target: https://pypi.python.org/pypi/yarl\n\n.. image:: https://img.shields.io/matrix/aio-libs:matrix.org?label=discuss%20on%20matrix%20at%20%23aio-libs%3amatrix.org&logo=matrix&server_fqdn=matrix.org&style=flat\n   :target: https://matrix.to/#/%23aio-libs:matrix.org\n   :alt: matrix room \u2014 #aio-libs:matrix.org\n\n.. image:: https://img.shields.io/matrix/aio-libs-space:matrix.org?label=discuss%20on%20matrix%20at%20%23aio-libs-space%3amatrix.org&logo=matrix&server_fqdn=matrix.org&style=flat\n   :target: https://matrix.to/#/%23aio-libs-space:matrix.org\n   :alt: matrix space \u2014 #aio-libs-space:matrix.org\n\nintroduction\n------------\n\nurl is constructed from ``str``:\n\n.. code-block:: pycon\n\n   >>> from yarl import url\n   >>> url = url('https://www.python.org/~guido?arg=1#frag')\n   >>> url\n   url('https://www.python.org/~guido?arg=1#frag')\n\nall url parts: *scheme*, *user*, *password*, *host*, *port*, *path*,\n*query* and *fragment* are accessible by properties:\n\n.. code-block:: pycon\n\n   >>> url.scheme\n   'https'\n   >>> url.host\n   'www.python.org'\n   >>> url.path\n   '/~guido'\n   >>> url.query_string\n   'arg=1'\n   >>> url.query\n   <multidictproxy('arg': '1')>\n   >>> url.fragment\n   'frag'\n\nall url manipulations produce a new url object:\n\n.. code-block:: pycon\n\n   >>> url = url('https://www.python.org')\n   >>> url / 'foo' / 'bar'\n   url('https://www.python.org/foo/bar')\n   >>> url / 'foo' % {'bar': 'baz'}\n   url('https://www.python.org/foo?bar=baz')\n\nstrings passed to constructor and modification methods are\nautomatically encoded giving canonical representation as result:\n\n.. code-block:: pycon\n\n   >>> url = url('https://www.python.org/\u0448\u043b\u044f\u0445')\n   >>> url\n   url('https://www.python.org/%d1%88%d0%bb%d1%8f%d1%85')\n\nregular properties are *percent-decoded*, use ``raw_`` versions for\ngetting *encoded* strings:\n\n.. code-block:: pycon\n\n   >>> url.path\n   '/\u0448\u043b\u044f\u0445'\n\n   >>> url.raw_path\n   '/%d1%88%d0%bb%d1%8f%d1%85'\n\nhuman readable representation of url is available as ``.human_repr()``:\n\n.. code-block:: pycon\n\n   >>> url.human_repr()\n   'https://www.python.org/\u0448\u043b\u044f\u0445'\n\nfor full documentation please read https://yarl.aio-libs.org.\n\n\ninstallation\n------------\n\n::\n\n   $ pip install yarl\n\nthe library is python 3 only!\n\npypi contains binary wheels for linux, windows and macos.  if you want to install\n``yarl`` on another operating system (like *alpine linux*, which is not\nmanylinux-compliant because of the missing glibc and therefore, cannot be\nused with our wheels) the the tarball will be used to compile the library from\nthe source code. it requires a c compiler and and python headers installed.\n\nto skip the compilation you must explicitly opt-in by using a pep 517\nconfiguration setting ``pure-python``, or setting the ``yarl_no_extensions``\nenvironment variable to a non-empty value, e.g.:\n\n.. code-block:: console\n\n   $ pip install yarl --config-settings=pure-python=false\n\nplease note that the pure-python (uncompiled) version is much slower. however,\npypy always uses a pure-python implementation, and, as such, it is unaffected\nby this variable.\n\ndependencies\n------------\n\nyarl requires multidict_ library.\n\n\napi documentation\n------------------\n\nthe documentation is located at https://yarl.aio-libs.org.\n\n\nwhy isn't boolean supported by the url query api?\n-------------------------------------------------\n\nthere is no standard for boolean representation of boolean values.\n\nsome systems prefer ``true``/``false``, others like ``yes``/``no``, ``on``/``off``,\n``y``/``n``, ``1``/``0``, etc.\n\n``yarl`` cannot make an unambiguous decision on how to serialize ``bool`` values because\nit is specific to how the end-user's application is built and would be different for\ndifferent apps.  the library doesn't accept booleans in the api; a user should convert\nbools into strings using own preferred translation protocol.\n\n\ncomparison with other url libraries\n------------------------------------\n\n* furl (https://pypi.python.org/pypi/furl)\n\n  the library has rich functionality but the ``furl`` object is mutable.\n\n  i'm afraid to pass this object into foreign code: who knows if the\n  code will modify my url in a terrible way while i just want to send url\n  with handy helpers for accessing url properties.\n\n  ``furl`` has other non-obvious tricky things but the main objection\n  is mutability.\n\n* urlobject (https://pypi.python.org/pypi/urlobject)\n\n  urlobject is immutable, that's pretty good.\n\n  every url change generates a new url object.\n\n  but the library doesn't do any decode/encode transformations leaving the\n  end user to cope with these gory details.\n\n\nsource code\n-----------\n\nthe project is hosted on github_\n\nplease file an issue on the `bug tracker\n<https://github.com/aio-libs/yarl/issues>`_ if you have found a bug\nor have some suggestion in order to improve the library.\n\nthe library uses `azure pipelines <https://dev.azure.com/aio-libs/yarl>`_ for\ncontinuous integration.\n\ndiscussion list\n---------------\n\n*aio-libs* google group: https://groups.google.com/forum/#!forum/aio-libs\n\nfeel free to post your questions and ideas here.\n\n\nauthors and license\n-------------------\n\nthe ``yarl`` package is written by andrew svetlov.\n\nit's *apache 2* licensed and freely available.\n\n\n.. _github: https://github.com/aio-libs/yarl\n\n.. _multidict: https://github.com/aio-libs/multidict\n\n..\n    you should *not* be adding new change log entries to this file, this\n    file is managed by towncrier. you *may* edit previous change logs to\n    fix problems like typo corrections or such.\n    to add a new change log entry, please see\n    https://pip.pypa.io/en/latest/development/#adding-a-news-entry\n    we named the news folder \"changes\".\n\n    warning: don't drop the next directive!\n\n.. towncrier release notes start\n\n1.9.4 (2023-12-06)\n==================\n\nbug fixes\n---------\n\n- started raising ``typeerror`` when a string value is passed into\n  ``yarl.url.build()`` as the ``port`` argument  -- by `@commonism <https://github.com/sponsors/commonism>`__.\n\n  previously the empty string as port would create malformed urls when rendered as string representations. (`#883 <https://github.com/aio-libs/yarl/issues/883>`__)\n\n\npackaging updates and notes for downstreams\n-------------------------------------------\n\n- the leading ``--`` has been dropped from the `pep 517 <https://peps.python.org/pep-517>`__ in-tree build\n  backend config setting names. ``--pure-python`` is now just ``pure-python``\n  -- by `@webknjaz <https://github.com/sponsors/webknjaz>`__.\n\n  the usage now looks as follows:\n\n  .. code-block:: console\n\n      $ python -m build \\\n          --config-setting=pure-python=true \\\n          --config-setting=with-cython-tracing=true\n\n  (`#963 <https://github.com/aio-libs/yarl/issues/963>`__)\n\n\ncontributor-facing changes\n--------------------------\n\n- a step-by-step ``release guide`` guide has\n  been added, describing how to release *yarl* -- by `@webknjaz <https://github.com/sponsors/webknjaz>`__.\n\n  this is primarily targeting maintainers. (`#960 <https://github.com/aio-libs/yarl/issues/960>`__)\n- coverage collection has been implemented for the cython modules\n  -- by `@webknjaz <https://github.com/sponsors/webknjaz>`__.\n\n  it will also be reported to codecov from any non-release ci jobs.\n\n  to measure coverage in a development environment, *yarl* can be\n  installed in editable mode, which requires an environment variable\n  ``yarl_cython_tracing=1`` to be set:\n\n  .. code-block:: console\n\n      $ yarl_cython_tracing=1 python -im pip install -e .\n\n  editable install produces c-files required for the cython coverage\n  plugin to map the measurements back to the pyx-files. (`#961 <https://github.com/aio-libs/yarl/issues/961>`__)\n- it is now possible to request line tracing in cython builds using the\n  ``with-cython-tracing`` `pep 517 <https://peps.python.org/pep-517>`__ config setting\n  -- `@webknjaz <https://github.com/sponsors/webknjaz>`__.\n\n  this can be used in ci and development environment to measure coverage\n  on cython modules, but is not normally useful to the end-users or\n  downstream packagers.\n\n  here's a usage example:\n\n  .. code-block:: console\n\n      $ python -im pip install . --config-settings=with-cython-tracing=true\n\n  for editable installs, this setting is on by default. otherwise, it's\n  off unless requested explicitly. (`#962 <https://github.com/aio-libs/yarl/issues/962>`__)\n\n\n1.9.3 (2023-11-20)\n==================\n\nbug fixes\n---------\n\n- stopped dropping trailing slashes in ``yarl.url.joinpath()`` -- by `@gmacon <https://github.com/sponsors/gmacon>`__. (`#862 <https://github.com/aio-libs/yarl/issues/862>`__, `#866 <https://github.com/aio-libs/yarl/issues/866>`__)\n- started accepting string subclasses in ``__truediv__()`` operations (``url / segment``) -- by `@mjpieters <https://github.com/sponsors/mjpieters>`__. (`#871 <https://github.com/aio-libs/yarl/issues/871>`__, `#884 <https://github.com/aio-libs/yarl/issues/884>`__)\n- fixed the human representation of urls with square brackets in usernames and passwords -- by `@mjpieters <https://github.com/sponsors/mjpieters>`__. (`#876 <https://github.com/aio-libs/yarl/issues/876>`__, `#882 <https://github.com/aio-libs/yarl/issues/882>`__)\n- updated type hints to include ``url.missing_port()``, ``url.__bytes__()``\n  and the ``encoding`` argument to ``yarl.url.joinpath()``\n  -- by `@mjpieters <https://github.com/sponsors/mjpieters>`__. (`#891 <https://github.com/aio-libs/yarl/issues/891>`__)\n\n\npackaging updates and notes for downstreams\n-------------------------------------------\n\n- integrated cython 3 to enable building *yarl* under python 3.12 -- by `@mjpieters <https://github.com/sponsors/mjpieters>`__. (`#829 <https://github.com/aio-libs/yarl/issues/829>`__, `#881 <https://github.com/aio-libs/yarl/issues/881>`__)\n- declared modern ``setuptools.build_meta`` as the `pep 517 <https://peps.python.org/pep-517>`__ build\n  backend in ``pyproject.toml`` explicitly -- by `@webknjaz <https://github.com/sponsors/webknjaz>`__. (`#886 <https://github.com/aio-libs/yarl/issues/886>`__)\n- converted most of the packaging setup into a declarative ``setup.cfg``\n  config -- by `@webknjaz <https://github.com/sponsors/webknjaz>`__. (`#890 <https://github.com/aio-libs/yarl/issues/890>`__)\n- the packaging is replaced from an old-fashioned ``setup.py`` to an\n  in-tree `pep 517 <https://peps.python.org/pep-517>`__ build backend -- by `@webknjaz <https://github.com/sponsors/webknjaz>`__.\n\n  whenever the end-users or downstream packagers need to build ``yarl`` from\n  source (a git checkout or an sdist), they may pass a ``config_settings``\n  flag ``--pure-python``. if this flag is not set, a c-extension will be built\n  and included into the distribution.\n\n  here is how this can be done with ``pip``:\n\n  .. code-block:: console\n\n      $ python -m pip install . --config-settings=--pure-python=false\n\n  this will also work with ``-e | --editable``.\n\n  the same can be achieved via ``pypa/build``:\n\n  .. code-block:: console\n\n      $ python -m build --config-setting=--pure-python=false\n\n  adding ``-w | --wheel`` can force ``pypa/build`` produce a wheel from source\n  directly, as opposed to building an ``sdist`` and then building from it. (`#893 <https://github.com/aio-libs/yarl/issues/893>`__)\n\n  .. attention::\n\n     v1.9.3 was the only version using the ``--pure-python`` setting name.\n     later versions dropped the ``--`` prefix, making it just ``pure-python``.\n\n- declared python 3.12 supported officially in the distribution package metadata\n  -- by `@edgarrmondragon <https://github.com/sponsors/edgarrmondragon>`__. (`#942 <https://github.com/aio-libs/yarl/issues/942>`__)\n\n\ncontributor-facing changes\n--------------------------\n\n- a regression test for no-host urls was added per `#821 <https://github.com/aio-libs/yarl/issues/821>`__\n  and ``3986`` -- by `@kenballus <https://github.com/sponsors/kenballus>`__. (`#821 <https://github.com/aio-libs/yarl/issues/821>`__, `#822 <https://github.com/aio-libs/yarl/issues/822>`__)\n- started testing *yarl* against python 3.12 in ci -- by `@mjpieters <https://github.com/sponsors/mjpieters>`__. (`#881 <https://github.com/aio-libs/yarl/issues/881>`__)\n- all python 3.12 jobs are now marked as required to pass in ci\n  -- by `@edgarrmondragon <https://github.com/sponsors/edgarrmondragon>`__. (`#942 <https://github.com/aio-libs/yarl/issues/942>`__)\n- myst is now integrated in sphinx -- by `@webknjaz <https://github.com/sponsors/webknjaz>`__.\n\n  this allows the contributors to author new documents in markdown\n  when they have difficulties with going straight rst. (`#953 <https://github.com/aio-libs/yarl/issues/953>`__)\n\n\n1.9.2 (2023-04-25)\n==================\n\nbugfixes\n--------\n\n- fix regression with ``__truediv__`` and absolute urls with empty paths causing the raw path to lack the leading ``/``.\n  (`#854 <https://github.com/aio-libs/yarl/issues/854>`_)\n\n\n1.9.1 (2023-04-21)\n==================\n\nbugfixes\n--------\n\n- marked tests that fail on older python patch releases (< 3.7.10, < 3.8.8 and < 3.9.2) as expected to fail due to missing a security fix for cve-2021-23336. (`#850 <https://github.com/aio-libs/yarl/issues/850>`_)\n\n\n1.9.0 (2023-04-19)\n==================\n\nthis release was never published to pypi, due to issues with the build process.\n\nfeatures\n--------\n\n- added ``url.joinpath(*elements)``, to create a new url appending multiple path elements. (`#704 <https://github.com/aio-libs/yarl/issues/704>`_)\n- made ``url.__truediv__()`` return ``notimplemented`` if called with an\n  unsupported type \u2014 by `@michaeljpeters <https://github.com/sponsors/michaeljpeters>`__.\n  (`#832 <https://github.com/aio-libs/yarl/issues/832>`_)\n\n\nbugfixes\n--------\n\n- path normalization for absolute urls no longer raises a valueerror exception\n  when ``..`` segments would otherwise go beyond the url path root.\n  (`#536 <https://github.com/aio-libs/yarl/issues/536>`_)\n- fixed an issue with update_query() not getting rid of the query when argument is none. (`#792 <https://github.com/aio-libs/yarl/issues/792>`_)\n- added some input restrictions on with_port() function to prevent invalid boolean inputs or out of valid port inputs; handled incorrect 0 port representation. (`#793 <https://github.com/aio-libs/yarl/issues/793>`_)\n- made ``yarl.url.build()`` raise a ``typeerror`` if the ``host`` argument is ``none`` \u2014 by `@paulpapacz <https://github.com/sponsors/paulpapacz>`__. (`#808 <https://github.com/aio-libs/yarl/issues/808>`_)\n- fixed an issue with ``update_query()`` getting rid of the query when the argument\n  is empty but not ``none``. (`#845 <https://github.com/aio-libs/yarl/issues/845>`_)\n\n\nmisc\n----\n\n- `#220 <https://github.com/aio-libs/yarl/issues/220>`_\n\n\n1.8.2 (2022-12-03)\n==================\n\nthis is the first release that started shipping wheels for python 3.11.\n\n\n1.8.1 (2022-08-01)\n==================\n\nmisc\n----\n\n- `#694 <https://github.com/aio-libs/yarl/issues/694>`_, `#699 <https://github.com/aio-libs/yarl/issues/699>`_, `#700 <https://github.com/aio-libs/yarl/issues/700>`_, `#701 <https://github.com/aio-libs/yarl/issues/701>`_, `#702 <https://github.com/aio-libs/yarl/issues/702>`_, `#703 <https://github.com/aio-libs/yarl/issues/703>`_, `#739 <https://github.com/aio-libs/yarl/issues/739>`_\n\n\n1.8.0 (2022-08-01)\n==================\n\nfeatures\n--------\n\n- added ``url.raw_suffix``, ``url.suffix``, ``url.raw_suffixes``, ``url.suffixes``, ``url.with_suffix``. (`#613 <https://github.com/aio-libs/yarl/issues/613>`_)\n\n\nimproved documentation\n----------------------\n\n- fixed broken internal references to ``yarl.url.human_repr()``.\n  (`#665 <https://github.com/aio-libs/yarl/issues/665>`_)\n- fixed broken external references to ``multidict:index`` docs. (`#665 <https://github.com/aio-libs/yarl/issues/665>`_)\n\n\ndeprecations and removals\n-------------------------\n\n- dropped python 3.6 support. (`#672 <https://github.com/aio-libs/yarl/issues/672>`_)\n\n\nmisc\n----\n\n- `#646 <https://github.com/aio-libs/yarl/issues/646>`_, `#699 <https://github.com/aio-libs/yarl/issues/699>`_, `#701 <https://github.com/aio-libs/yarl/issues/701>`_\n\n\n1.7.2 (2021-11-01)\n==================\n\nbugfixes\n--------\n\n- changed call in ``with_port()`` to stop reencoding parts of the url that were already encoded. (`#623 <https://github.com/aio-libs/yarl/issues/623>`_)\n\n\n1.7.1 (2021-10-07)\n==================\n\nbugfixes\n--------\n\n- fix 1.7.0 build error\n\n1.7.0 (2021-10-06)\n==================\n\nfeatures\n--------\n\n- add ``__bytes__()`` magic method so that ``bytes(url)`` will work and use optimal ascii encoding.\n  (`#582 <https://github.com/aio-libs/yarl/issues/582>`_)\n- started shipping platform-specific arm64 wheels for apple silicon. (`#622 <https://github.com/aio-libs/yarl/issues/622>`_)\n- started shipping platform-specific wheels with the ``musl`` tag targeting typical alpine linux runtimes. (`#622 <https://github.com/aio-libs/yarl/issues/622>`_)\n- added support for python 3.10. (`#622 <https://github.com/aio-libs/yarl/issues/622>`_)\n\n\n1.6.3 (2020-11-14)\n==================\n\nbugfixes\n--------\n\n- no longer loose characters when decoding incorrect percent-sequences (like ``%e2%82%f8``). all non-decodable percent-sequences are now preserved.\n  `#517 <https://github.com/aio-libs/yarl/issues/517>`_\n- provide x86 windows wheels.\n  `#535 <https://github.com/aio-libs/yarl/issues/535>`_\n\n\n----\n\n\n1.6.2 (2020-10-12)\n==================\n\n\nbugfixes\n--------\n\n- provide generated ``.c`` files in tarball distribution.\n  `#530  <https://github.com/aio-libs/multidict/issues/530>`_\n\n1.6.1 (2020-10-12)\n==================\n\nfeatures\n--------\n\n- provide wheels for ``aarch64``, ``i686``, ``ppc64le``, ``s390x`` architectures on\n  linux as well as ``x86_64``.\n  `#507  <https://github.com/aio-libs/yarl/issues/507>`_\n- provide wheels for python 3.9.\n  `#526 <https://github.com/aio-libs/yarl/issues/526>`_\n\nbugfixes\n--------\n\n- ``human_repr()`` now always produces valid representation equivalent to the original url (if the original url is valid).\n  `#511 <https://github.com/aio-libs/yarl/issues/511>`_\n- fixed  requoting a single percent followed by a percent-encoded character in the cython implementation.\n  `#514 <https://github.com/aio-libs/yarl/issues/514>`_\n- fix valueerror when decoding ``%`` which is not followed by two hexadecimal digits.\n  `#516 <https://github.com/aio-libs/yarl/issues/516>`_\n- fix decoding ``%`` followed by a space and hexadecimal digit.\n  `#520 <https://github.com/aio-libs/yarl/issues/520>`_\n- fix annotation of ``with_query()``/``update_query()`` methods for ``key=[val1, val2]`` case.\n  `#528 <https://github.com/aio-libs/yarl/issues/528>`_\n\nremoval\n-------\n\n- drop python 3.5 support; python 3.6 is the minimal supported python version.\n\n\n----\n\n\n1.6.0 (2020-09-23)\n==================\n\nfeatures\n--------\n\n- allow for int and float subclasses in query, while still denying bool.\n  `#492 <https://github.com/aio-libs/yarl/issues/492>`_\n\n\nbugfixes\n--------\n\n- do not requote arguments in ``url.build()``, ``with_xxx()`` and in ``/`` operator.\n  `#502 <https://github.com/aio-libs/yarl/issues/502>`_\n- keep ipv6 brackets in ``origin()``.\n  `#504 <https://github.com/aio-libs/yarl/issues/504>`_\n\n\n----\n\n\n1.5.1 (2020-08-01)\n==================\n\nbugfixes\n--------\n\n- fix including relocated internal ``yarl._quoting_c`` c-extension into published pypi dists.\n  `#485 <https://github.com/aio-libs/yarl/issues/485>`_\n\n\nmisc\n----\n\n- `#484 <https://github.com/aio-libs/yarl/issues/484>`_\n\n\n----\n\n\n1.5.0 (2020-07-26)\n==================\n\nfeatures\n--------\n\n- convert host to lowercase on url building.\n  `#386 <https://github.com/aio-libs/yarl/issues/386>`_\n- allow using ``mod`` operator (``%``) for updating query string (an alias for ``update_query()`` method).\n  `#435 <https://github.com/aio-libs/yarl/issues/435>`_\n- allow use of sequences such as ``list`` and ``tuple`` in the values\n  of a mapping such as ``dict`` to represent that a key has many values::\n\n      url = url(\"http://example.com\")\n      assert url.with_query({\"a\": [1, 2]}) == url(\"http://example.com/?a=1&a=2\")\n\n  `#443 <https://github.com/aio-libs/yarl/issues/443>`_\n- support ``url.build()`` with scheme and path (creates a relative url).\n  `#464 <https://github.com/aio-libs/yarl/issues/464>`_\n- cache slow idna encode/decode calls.\n  `#476 <https://github.com/aio-libs/yarl/issues/476>`_\n- add ``@final`` / ``final`` type hints\n  `#477 <https://github.com/aio-libs/yarl/issues/477>`_\n- support url authority/raw_authority properties and authority argument of ``url.build()`` method.\n  `#478 <https://github.com/aio-libs/yarl/issues/478>`_\n- hide the library implementation details, make the exposed public list very clean.\n  `#483 <https://github.com/aio-libs/yarl/issues/483>`_\n\n\nbugfixes\n--------\n\n- fix tests with newer python (3.7.6, 3.8.1 and 3.9.0+).\n  `#409 <https://github.com/aio-libs/yarl/issues/409>`_\n- fix a bug where query component, passed in a form of mapping or sequence, is unquoted in unexpected way.\n  `#426 <https://github.com/aio-libs/yarl/issues/426>`_\n- hide ``query`` and ``queryvariable`` type aliases in ``__init__.pyi``, now they are prefixed with underscore.\n  `#431 <https://github.com/aio-libs/yarl/issues/431>`_\n- keep ipv6 brackets after updating port/user/password.\n  `#451 <https://github.com/aio-libs/yarl/issues/451>`_\n\n\n----\n\n\n1.4.2 (2019-12-05)\n==================\n\nfeatures\n--------\n\n- workaround for missing ``str.isascii()`` in python 3.6\n  `#389 <https://github.com/aio-libs/yarl/issues/389>`_\n\n\n----\n\n\n1.4.1 (2019-11-29)\n==================\n\n* fix regression, make the library work on python 3.5 and 3.6 again.\n\n1.4.0 (2019-11-29)\n==================\n\n* distinguish an empty password in url from a password not provided at all (#262)\n\n* fixed annotations for optional parameters of ``url.build`` (#309)\n\n* use none as default value of ``user`` parameter of ``url.build`` (#309)\n\n* enforce building c accelerated modules when installing from source tarball, use\n  ``yarl_no_extensions`` environment variable for falling back to (slower) pure python\n  implementation (#329)\n\n* drop python 3.5 support\n\n* fix quoting of plus in path by pure python version (#339)\n\n* don't create a new url if fragment is unchanged (#292)\n\n* included in error message the path that produces starting slash forbidden error (#376)\n\n* skip slow idna encoding for ascii-only strings (#387)\n\n\n1.3.0 (2018-12-11)\n==================\n\n* fix annotations for ``query`` parameter (#207)\n\n* an incoming query sequence can have int variables (the same as for\n  mapping type) (#208)\n\n* add ``url.explicit_port`` property (#218)\n\n* give a friendlier error when port can't be converted to int (#168)\n\n* ``bool(url())`` now returns ``false`` (#272)\n\n1.2.6 (2018-06-14)\n==================\n\n* drop python 3.4 trove classifier (#205)\n\n1.2.5 (2018-05-23)\n==================\n\n* fix annotations for ``build`` (#199)\n\n1.2.4 (2018-05-08)\n==================\n\n* fix annotations for ``cached_property`` (#195)\n\n1.2.3 (2018-05-03)\n==================\n\n* accept ``str`` subclasses in ``url`` constructor (#190)\n\n1.2.2 (2018-05-01)\n==================\n\n* fix build\n\n1.2.1 (2018-04-30)\n==================\n\n* pin minimal required python to 3.5.3 (#189)\n\n1.2.0 (2018-04-30)\n==================\n\n* forbid inheritance, replace ``__init__`` with ``__new__`` (#171)\n\n* support pep-561 (provide type hinting marker) (#182)\n\n1.1.1 (2018-02-17)\n==================\n\n* fix performance regression: don't encode empty ``netloc`` (#170)\n\n1.1.0 (2018-01-21)\n==================\n\n* make pure python quoter consistent with cython version (#162)\n\n1.0.0 (2018-01-15)\n==================\n\n* use fast path if quoted string does not need requoting (#154)\n\n* speed up quoting/unquoting by ``_quoter`` and ``_unquoter`` classes (#155)\n\n* drop ``yarl.quote`` and ``yarl.unquote`` public functions (#155)\n\n* add custom string writer, reuse static buffer if available (#157)\n  code is 50-80 times faster than pure python version (was 4-5 times faster)\n\n* don't recode ip zone (#144)\n\n* support ``encoded=true`` in ``yarl.url.build()`` (#158)\n\n* fix updating query with multiple keys (#160)\n\n0.18.0 (2018-01-10)\n===================\n\n* fallback to idna 2003 if domain name is not idna 2008 compatible (#152)\n\n0.17.0 (2017-12-30)\n===================\n\n* use idna 2008 for domain name processing (#149)\n\n0.16.0 (2017-12-07)\n===================\n\n* fix raising ``typeerror`` by ``url.query_string()`` after\n  ``url.with_query({})`` (empty mapping) (#141)\n\n0.15.0 (2017-11-23)\n===================\n\n* add ``raw_path_qs`` attribute (#137)\n\n0.14.2 (2017-11-14)\n===================\n\n* restore ``strict`` parameter as no-op in ``quote`` / ``unquote``\n\n0.14.1 (2017-11-13)\n===================\n\n* restore ``strict`` parameter as no-op for sake of compatibility with\n  aiohttp 2.2\n\n0.14.0 (2017-11-11)\n===================\n\n* drop strict mode (#123)\n\n* fix ``\"valueerror: unallowed pct %\"`` when there's a ``\"%\"`` in the url (#124)\n\n0.13.0 (2017-10-01)\n===================\n\n* document ``encoded`` parameter (#102)\n\n* support relative urls like ``'?key=value'`` (#100)\n\n* unsafe encoding for qs fixed. encode ``;`` character in value parameter (#104)\n\n* process passwords without user names (#95)\n\n0.12.0 (2017-06-26)\n===================\n\n* properly support paths without leading slash in ``url.with_path()`` (#90)\n\n* enable type annotation checks\n\n0.11.0 (2017-06-26)\n===================\n\n* normalize path (#86)\n\n* clear query and fragment parts in ``.with_path()`` (#85)\n\n0.10.3 (2017-06-13)\n===================\n\n* prevent double url arguments unquoting (#83)\n\n0.10.2 (2017-05-05)\n===================\n\n* unexpected hash behavior (#75)\n\n\n0.10.1 (2017-05-03)\n===================\n\n* unexpected compare behavior (#73)\n\n* do not quote or unquote + if not a query string. (#74)\n\n\n0.10.0 (2017-03-14)\n===================\n\n* added ``url.build`` class method (#58)\n\n* added ``path_qs`` attribute (#42)\n\n\n0.9.8 (2017-02-16)\n==================\n\n* do not quote ``:`` in path\n\n\n0.9.7 (2017-02-16)\n==================\n\n* load from pickle without _cache (#56)\n\n* percent-encoded pluses in path variables become spaces (#59)\n\n\n0.9.6 (2017-02-15)\n==================\n\n* revert backward incompatible change (baseurl)\n\n\n0.9.5 (2017-02-14)\n==================\n\n* fix baseurl rich comparison support\n\n\n0.9.4 (2017-02-14)\n==================\n\n* use baseurl\n\n\n0.9.3 (2017-02-14)\n==================\n\n* added baseurl\n\n\n0.9.2 (2017-02-08)\n==================\n\n* remove debug print\n\n\n0.9.1 (2017-02-07)\n==================\n\n* do not lose tail chars (#45)\n\n\n0.9.0 (2017-02-07)\n==================\n\n* allow to quote ``%`` in non strict mode (#21)\n\n* incorrect parsing of query parameters with %3b (;) inside (#34)\n\n* fix core dumps (#41)\n\n* ``tmpbuf`` - compiling error (#43)\n\n* added ``url.update_path()`` method\n\n* added ``url.update_query()`` method (#47)\n\n\n0.8.1 (2016-12-03)\n==================\n\n* fix broken aiohttp: revert back ``quote`` / ``unquote``.\n\n\n0.8.0 (2016-12-03)\n==================\n\n* support more verbose error messages in ``.with_query()`` (#24)\n\n* don't percent-encode ``@`` and ``:`` in path (#32)\n\n* don't expose ``yarl.quote`` and ``yarl.unquote``, these functions are\n  part of private api\n\n0.7.1 (2016-11-18)\n==================\n\n* accept not only ``str`` but all classes inherited from ``str`` also (#25)\n\n0.7.0 (2016-11-07)\n==================\n\n* accept ``int`` as value for ``.with_query()``\n\n0.6.0 (2016-11-07)\n==================\n\n* explicitly use utf8 encoding in ``setup.py`` (#20)\n* properly unquote non-utf8 strings (#19)\n\n0.5.3 (2016-11-02)\n==================\n\n* don't use ``typing.namedtuple`` fields but indexes on url construction\n\n0.5.2 (2016-11-02)\n==================\n\n* inline ``_encode`` class method\n\n0.5.1 (2016-11-02)\n==================\n\n* make url construction faster by removing extra classmethod calls\n\n0.5.0 (2016-11-02)\n==================\n\n* add cython optimization for quoting/unquoting\n* provide binary wheels\n\n0.4.3 (2016-09-29)\n==================\n\n* fix typing stubs\n\n0.4.2 (2016-09-29)\n==================\n\n* expose ``quote()`` and ``unquote()`` as public api\n\n0.4.1 (2016-09-28)\n==================\n\n* support empty values in query (``'/path?arg'``)\n\n0.4.0 (2016-09-27)\n==================\n\n* introduce ``relative()`` (#16)\n\n0.3.2 (2016-09-27)\n==================\n\n* typo fixes #15\n\n0.3.1 (2016-09-26)\n==================\n\n* support sequence of pairs as ``with_query()`` parameter\n\n0.3.0 (2016-09-26)\n==================\n\n* introduce ``is_default_port()``\n\n0.2.1 (2016-09-26)\n==================\n\n* raise valueerror for urls like 'http://:8080/'\n\n0.2.0 (2016-09-18)\n==================\n\n* avoid doubling slashes when joining paths (#13)\n\n* appending path starting from slash is forbidden (#12)\n\n0.1.4 (2016-09-09)\n==================\n\n* add ``kwargs`` support for ``with_query()`` (#10)\n\n0.1.3 (2016-09-07)\n==================\n\n* document ``with_query()``, ``with_fragment()`` and ``origin()``\n\n* allow ``none`` for ``with_query()`` and ``with_fragment()``\n\n0.1.2 (2016-09-07)\n==================\n\n* fix links, tune docs theme.\n\n0.1.1 (2016-09-06)\n==================\n\n* update readme, old version used obsolete api\n\n0.1.0 (2016-09-06)\n==================\n\n* the library was deeply refactored, bytes are gone away but all\n  accepted strings are encoded if needed.\n\n0.0.1 (2016-08-30)\n==================\n\n* the first release.\n",
  "docs_url": null,
  "keywords": "cython,cext,yarl",
  "license": "apache-2.0",
  "name": "yarl",
  "package_url": "https://pypi.org/project/yarl/",
  "project_url": "https://pypi.org/project/yarl/",
  "project_urls": {
    "CI: GitHub Workflows": "https://github.com/aio-libs/yarl/actions?query=branch:master",
    "Chat: Matrix": "https://matrix.to/#/#aio-libs:matrix.org",
    "Chat: Matrix Space": "https://matrix.to/#/#aio-libs-space:matrix.org",
    "Code of Conduct": "https://github.com/aio-libs/.github/blob/master/CODE_OF_CONDUCT.md",
    "Coverage: codecov": "https://codecov.io/github/aio-libs/yarl",
    "Docs: Changelog": "https://yarl.aio-libs.org/en/latest/changes/",
    "Docs: RTD": "https://yarl.aio-libs.org",
    "GitHub: issues": "https://github.com/aio-libs/yarl/issues",
    "GitHub: repo": "https://github.com/aio-libs/yarl",
    "Homepage": "https://github.com/aio-libs/yarl"
  },
  "release_url": "https://pypi.org/project/yarl/1.9.4/",
  "requires_dist": [
    "idna >=2.0",
    "multidict >=4.0",
    "typing-extensions >=3.7.4 ; python_version < \"3.8\""
  ],
  "requires_python": ">=3.7",
  "summary": "yet another url library",
  "version": "1.9.4",
  "releases": [],
  "developers": [
    "andrew.svetlov@gmail.com",
    "andrew_svetlov",
    "team@aiohttp.org"
  ],
  "kwds": "yarl_cython_tracing yarl_no_extensions badge path_qs raw_path_qs",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_yarl",
  "homepage": "https://github.com/aio-libs/yarl",
  "release_count": 97,
  "dependency_ids": [
    "pypi_idna",
    "pypi_multidict",
    "pypi_typing_extensions"
  ]
}
{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# chocolate\n\n**chocolate** is a python package that improves python's `**kwargs`.\n\n```python\nfrom chocolate import filter_args\n\n\n# here is some function.\ndef example_function(arg1, arg2: int, arg3=3, arg4: str = \"\"):\n    print(f\"{arg1} {arg2} {arg3} {arg4}\")\n\n# we can give this function a dictionary of arguments using **kwargs.\nkwargs = {\"arg1\": 1, \"arg2\": 2, \"arg4\": \"4\"}\nexample_function(**kwargs)\n\n# but what if the **kwargs dictionary has additional keys?\nbroken_kwargs = {\"arg1\": \"this\", \"arg2\": \"does\", \"undefined_arg\": \"not\", \"arg3\": \"work\"}\ntry:\n    example_function(**broken_kwargs)\nexcept exception as exception:\n    print(exception)\n\n# chocolate can take care of that!\nexample_function(**filter_args(broken_kwargs, example_function))\n```\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "chocolate",
  "package_url": "https://pypi.org/project/chocolate/",
  "project_url": "https://pypi.org/project/chocolate/",
  "project_urls": {
    "Homepage": "https://github.com/seungjaeryanlee/chocolate"
  },
  "release_url": "https://pypi.org/project/chocolate/0.0.2/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "an improvement to python's kwargs",
  "version": "0.0.2",
  "releases": [],
  "developers": [
    "seungjae_ryan_lee",
    "seungjaeryanlee@github.com"
  ],
  "kwds": "broken_kwargs filter_args example_function kwargs undefined_arg",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_chocolate",
  "homepage": "https://github.com/seungjaeryanlee/chocolate",
  "release_count": 2,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: macos x",
    "environment :: x11 applications",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python :: 3",
    "topic :: multimedia :: graphics"
  ],
  "description": "freetype (high-level python api)\n================================\n\nfreetype python provides bindings for the freetype library. only the\nhigh-level api is bound.\n\ndocumentation available at: http://freetype-py.readthedocs.org/en/latest/\n\ninstallation\n============\n\n**from pypi, recommended**: `pip install freetype-py`. this will install the\nlibrary with a bundled freetype binary, so you're ready to go on windows,\nmacos and linux (all with 32 and 64 bit x86 architecture support).\n\ndo note: if you specify the `--no-binary` paramater to pip, or use a different\narchitecture for which we don't pre-compile binaries, the package will default\nto using an external freetype library. specify the environment variable\n`freetypepy_bundle_ft=1` before calling pip to compile a binary yourself.\n\ninstallation with compiling freetype from source\n------------------------------------------------\n\nif you don't want to or can't use the pre-built binaries, build freetype\nyourself: `export freetypepy_bundle_ft=yesplease && pip install .`.\nthis will download and compile freetype with harfbuzz support as specified in\n`setup-build-freetype.py`. set the environment variable `python_arch` to 32 or\n64 to explicitly set an architecture, default is whatever your host machine\nuses. on macos, we will always build a universal 32 and 64 bit intel binary.\n\n- windows: you need cmake and a c and c++ compiler, e.g. the visual code\n  community 2017 distribution with the desktop c++ workload.\n- macos: you need cmake and the xcode tools (full ide not necessary)\n- linux: you need cmake, gcc and g++. for building a 32 bit library on a\n  64 bit machine, you need gcc-multilib and g++-multilib (debian) or\n  glibc-devel.i686 and libstdc++-devel.i686 (fedora).\n\ninstallation with an external freetype library (the default)\n------------------------------------------------------------\n\ninstall just the pure python library and let it find a system-wide installed\nfreetype at runtime.\n\nmac users\n~~~~~~~~~\n\nfreetype should be already installed on your system. if not, either install it\nusing `homebrew <http://brew.sh>`_ or compile it and place the library binary\nfile in '/usr/local/lib'.\n\nlinux users\n~~~~~~~~~~~\n\nfreetype should be already installed on your system. if not, either install\nrelevant package from your package manager or compile from sources and place\nthe library binary file in '/usr/local/lib'.\n\nwindow users\n~~~~~~~~~~~~\n\nthere are no official freetype binary releases available, but they offer some\nlinks to precompiled windows dlls. please see the `freetype downloads\n<https://www.freetype.org/download.html>`_ page for links.\nyou can also compile the freetype library from source yourself.\n\nif you are using freetype-py on windows with a 32-bit version of python, you\nneed the 32-bit version of the freetype binary. the same applies for a 64-bit\nversion of python.\n\nbecause of the way windows searches for dll files, make sure the resulting\nfile is named 'freetype.dll' (and not something like freetype245.dll).\nwindows expects the library in one of the directories listed in the $path\nenvironment variable. as it is not recommended to place the dll in a windows\nsystem folder, you can choose one of the following ways to solve this:\n\n* place library in a folder of your choice and edit the $path user\n  environment variable\n* place library in a folder of your choice and edit the $path system\n  environment variable\n* for development purpose, place the library in the working directory of\n  the application\n* place the library in one of the existing directories listed in $path\n\nto get a complete list of all the directories in the $path\nenvironment variable (user and system), open a command promt and type\n\n.. code::\n\n   echo %path%\n\nusage example\n=============\n\n.. code:: python\n\n   import freetype\n   face = freetype.face(\"vera.ttf\")\n   face.set_char_size( 48*64 )\n   face.load_char('s')\n   bitmap = face.glyph.bitmap\n   print(bitmap.buffer)\n\nscreenshots\n===========\n\nscreenshot below comes from the wordle.py example. no clever tricks here, just\nbrute force.\n\n.. image:: https://raw.githubusercontent.com/rougier/freetype-py/master/doc/_static/wordle.png\n\nscreenshots below comes from the glyph-vector.py and glyph-vector-2.py\nexamples showing how to access a glyph outline information and use it to draw\nthe glyph. rendering (with b\u00e9zier curves) is done using matplotlib.\n\n.. image:: https://raw.githubusercontent.com/rougier/freetype-py/master/doc/_static/s.png\n.. image:: https://raw.githubusercontent.com/rougier/freetype-py/master/doc/_static/g.png\n\n\nscreenshot below comes from the glyph-color.py showing how to draw and combine\na glyph outline with the regular glyph.\n\n.. image:: https://raw.githubusercontent.com/rougier/freetype-py/master/doc/_static/outline.png\n\nthe screenshot below comes from the hello-world.py example showing how to draw\ntext in a bitmap (that has been zoomed in to show antialiasing).\n\n.. image:: https://raw.githubusercontent.com/rougier/freetype-py/master/doc/_static/hello-world.png\n\n\nthe screenshot below comes from the agg-trick.py example showing an\nimplementation of ideas from the `texts rasterization exposures\n<http://agg.sourceforge.net/antigrain.com/research/font_rasterization/>`_ by\nmaxim shemarev.\n\n.. image:: https://raw.githubusercontent.com/rougier/freetype-py/master/doc/_static/agg-trick.png\n\n\nfreezing apps\n=============\n\nfreetype implements a hook for pyinstaller to help simplify the freezing process\n(it e.g. ensures that the freetype dll is included). this hook requires\npyinstaller version 4+.\n\n\n",
  "docs_url": null,
  "keywords": "freetype,font",
  "license": "",
  "name": "freetype-py",
  "package_url": "https://pypi.org/project/freetype-py/",
  "project_url": "https://pypi.org/project/freetype-py/",
  "project_urls": {
    "Homepage": "https://github.com/rougier/freetype-py"
  },
  "release_url": "https://pypi.org/project/freetype-py/2.4.0/",
  "requires_dist": [],
  "requires_python": ">=3.7",
  "summary": "freetype python bindings",
  "version": "2.4.0",
  "releases": [],
  "developers": [
    "nicolas.rougier@inria.fr",
    "nicolas_p"
  ],
  "kwds": "freetypepy_bundle_ft freetype pip python_arch binaries",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_freetype_py",
  "homepage": "https://github.com/rougier/freetype-py",
  "release_count": 32,
  "dependency_ids": []
}
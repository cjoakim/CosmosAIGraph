{
  "classifiers": [],
  "description": "\na python library providing a simple interface to a number of state-of-art\nboolean satisfiability (sat) solvers and a few types of cardinality and\npseudo-boolean encodings. the purpose of pysat is to enable researchers\nworking on sat and its applications and generalizations to easily prototype\nwith sat oracles in python while exploiting incrementally the power of the\noriginal low-level implementations of modern sat solvers.\n\nwith pysat it should be easy for you to implement a maxsat solver, an\nmus/mcs extractor/enumerator, or any tool solving an application problem\nwith the (potentially multiple) use of a sat oracle.\n\ndetails can be found at `https://pysathq.github.io <https://pysathq.github.io>`__.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "python-sat",
  "package_url": "https://pypi.org/project/python-sat/",
  "project_url": "https://pypi.org/project/python-sat/",
  "project_urls": {
    "Homepage": "https://github.com/pysathq/pysat"
  },
  "release_url": "https://pypi.org/project/python-sat/0.1.8.dev12/",
  "requires_dist": [
    "six",
    "py-aiger-cnf >=2.0.0 ; extra == 'aiger'",
    "pyapproxmc >=4.1.8 ; extra == 'approxmc'",
    "pycryptosat >=5.11.18 ; extra == 'cryptosat'",
    "pypblib >=0.0.3 ; extra == 'pblib'",
    "pyunigen >=4.1.20 ; extra == 'unigen'"
  ],
  "requires_python": "",
  "summary": "a python library for prototyping with sat oracles",
  "version": "0.1.8.dev12",
  "releases": [],
  "developers": [
    "ajrmorgado@gmail.com",
    "alexey.ignatiev@monash.edu",
    "alexey_ignatiev",
    "joao.marques-silva@univ-toulouse.fr"
  ],
  "kwds": "satisfiability pysathq sat oracles solvers",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_python_sat",
  "homepage": "https://github.com/pysathq/pysat",
  "release_count": 139,
  "dependency_ids": [
    "pypi_py_aiger_cnf",
    "pypi_pyapproxmc",
    "pypi_pycryptosat",
    "pypi_pypblib",
    "pypi_pyunigen",
    "pypi_six"
  ]
}
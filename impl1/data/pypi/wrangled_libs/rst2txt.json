{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "environment :: web environment",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: end users/desktop",
    "intended audience :: science/research",
    "intended audience :: system administrators",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: documentation",
    "topic :: internet :: www/http :: site management",
    "topic :: printing",
    "topic :: software development",
    "topic :: software development :: documentation",
    "topic :: text processing",
    "topic :: text processing :: general",
    "topic :: text processing :: markup",
    "topic :: utilities"
  ],
  "description": "=======\nrst2txt\n=======\n\n.. image:: https://badge.fury.io/py/rst2txt.svg\n   :target: https://badge.fury.io/py/rst2txt\n   :alt: pypi status\n\n.. image:: https://travis-ci.org/stephenfin/rst2txt.svg?branch=master\n   :target: https://travis-ci.org/stephenfin/rst2txt\n   :alt: build status\n\nrestructuredtext is pretty-damn consumable in its raw form, but extensive use\nof directives and roles can hamper things or leave the document incomplete in\nits raw form (cough, ``.. include``, cough).\n\n*rst2txt* allows you to work around this by evaluating the restructuredtext\nsource and stripping it of most of its formatting. the end result is a document\nthat's more readable and has elements that don't make sense in a plain text\ndocument, such as images, stripped.\n\n*rst2txt* is based on the ``sphinx.writer.text.textwriter`` writer used by\nsphinx's `textbuilder\n<https://www.sphinx-doc.org/en/1.8/usage/builders/index.html#sphinx.builders.text.textbuilder>`__\nbut with the sphinx-specific features stripped out.\n\ninstallation\n------------\n\n*rst2txt* is available on pypi. to install, run:\n\n.. code-block:: shell\n\n   $ pip install --user rst2txt\n\nusage\n-----\n\nmost users will want just the ``rst2txt`` application:\n\n.. code-block:: shell\n\n   $ rst2txt readme.rst\n\nit is also possible to call this programmatically though. this can be useful\nfor things like consuming readme files:\n\n.. code-block:: python\n\n   from docutils.core import publish_file\n   import rst2txt\n\n   with open('readme.rst', 'r') as source:\n       publish_file(source=source, destination_path='readme.txt',\n                    writer=rst2txt.writer())\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "rst2txt",
  "package_url": "https://pypi.org/project/rst2txt/",
  "project_url": "https://pypi.org/project/rst2txt/",
  "project_urls": {
    "Download": "https://pypi.org/project/rst2txt",
    "Homepage": "https://github.com/stephenfin/rst2txt"
  },
  "release_url": "https://pypi.org/project/rst2txt/1.1.0/",
  "requires_dist": [
    "docutils (>=0.11)",
    "pygments",
    "pytest ; extra == 'test'",
    "pytest-cov ; extra == 'test'"
  ],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
  "summary": "convert restructuredtext to plain text",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "stephen@that.guru",
    "stephen_finucane"
  ],
  "kwds": "rst2txt rst restructuredtext docutils readme",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_rst2txt",
  "homepage": "https://github.com/stephenfin/rst2txt",
  "release_count": 2,
  "dependency_ids": [
    "pypi_docutils",
    "pypi_pygments",
    "pypi_pytest",
    "pypi_pytest_cov"
  ]
}
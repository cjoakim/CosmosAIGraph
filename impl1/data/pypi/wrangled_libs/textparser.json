{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 2",
    "programming language :: python :: 3"
  ],
  "description": "about\n=====\n\na text parser written in the python language.\n\nthe project has one goal, speed! see the benchmark below more details.\n\nproject homepage: https://github.com/eerimoq/textparser\n\ndocumentation: http://textparser.readthedocs.org/en/latest\n\ncredits\n=======\n\n- thanks `pyparsing`_ for a user friendly interface. many of\n  ``textparser``'s class names are taken from this project.\n\ninstallation\n============\n\n.. code-block:: python\n\n    pip install textparser\n\nexample usage\n=============\n\nthe `hello world`_ example parses the string ``hello, world!`` and\noutputs its parse tree ``['hello', ',', 'world', '!']``.\n\nthe script:\n\n.. code-block:: python\n\n   import textparser\n   from textparser import sequence\n\n\n   class parser(textparser.parser):\n\n       def token_specs(self):\n           return [\n               ('skip',          r'[ \\r\\n\\t]+'),\n               ('word',          r'\\w+'),\n               ('emark',    '!', r'!'),\n               ('comma',    ',', r','),\n               ('mismatch',      r'.')\n           ]\n\n       def grammar(self):\n           return sequence('word', ',', 'word', '!')\n\n\n   tree = parser().parse('hello, world!')\n\n   print('tree:', tree)\n\nscript execution:\n\n.. code-block:: text\n\n   $ env pythonpath=. python3 examples/hello_world.py\n   tree: ['hello', ',', 'world', '!']\n\nbenchmark\n=========\n\na `benchmark`_ comparing the speed of 10 json parsers, parsing a `276\nkb file`_.\n\n.. code-block:: text\n\n   $ env pythonpath=. python3 examples/benchmarks/json/speed.py\n\n   parsed 'examples/benchmarks/json/data.json' 1 time(s) in:\n\n   package         seconds   ratio  version\n   textparser         0.10    100%  0.21.1\n   parsimonious       0.17    169%  unknown\n   lark (lalr)        0.27    267%  0.7.0\n   funcparserlib      0.34    340%  unknown\n   textx              0.54    546%  1.8.0\n   pyparsing          0.68    684%  2.4.0\n   pyleri             0.88    886%  1.2.2\n   parsy              0.92    925%  1.2.0\n   parsita            2.28   2286%  unknown\n   lark (earley)      2.34   2348%  0.7.0\n\n*note 1: the parsers are not necessarily optimized for\nspeed. optimizing them will likely affect the measurements.*\n\n*note 2: the structure of the resulting parse trees varies and\nadditional processing may be required to make them fit the user\napplication.*\n\n*note 3: only json parsers are compared. parsing other languages may\ngive vastly different results.*\n\ncontributing\n============\n\n#. fork the repository.\n\n#. implement the new feature or bug fix.\n\n#. implement test case(s) to ensure that future changes do not break\n   legacy.\n\n#. run the tests.\n\n   .. code-block:: text\n\n      python3 -m unittest\n\n#. create a pull request.\n\n.. _pyparsing: https://github.com/pyparsing/pyparsing\n.. _hello world: https://github.com/eerimoq/textparser/blob/master/examples/hello_world.py\n.. _benchmark: https://github.com/eerimoq/textparser/blob/master/examples/benchmarks/json/speed.py\n.. _276 kb file: https://github.com/eerimoq/textparser/blob/master/examples/benchmarks/json/data.json\n\n\n",
  "docs_url": null,
  "keywords": "parser,parsing",
  "license": "mit",
  "name": "textparser",
  "package_url": "https://pypi.org/project/textparser/",
  "project_url": "https://pypi.org/project/textparser/",
  "project_urls": {
    "Homepage": "https://github.com/eerimoq/textparser"
  },
  "release_url": "https://pypi.org/project/textparser/0.24.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "text parser.",
  "version": "0.24.0",
  "releases": [],
  "developers": [
    "erik.moqvist@gmail.com",
    "erik_moqvist"
  ],
  "kwds": "parsers parser parsing parse parses",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_textparser",
  "homepage": "https://github.com/eerimoq/textparser",
  "release_count": 25,
  "dependency_ids": []
}
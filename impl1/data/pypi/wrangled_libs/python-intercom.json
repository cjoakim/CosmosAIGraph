{
  "classifiers": [
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4"
  ],
  "description": "intercom api wrapper\npython-intercom\n===============\n\n|pypi version| |pypi downloads| |travis ci build| |coverage status|\n\npython bindings for the intercom api (https://api.intercom.io).\n\n`api documentation <https://developers.intercom.com/reference>`__.\n\n`package\ndocumentation <http://readthedocs.org/docs/python-intercom/>`__.\n\nupgrading information\n---------------------\n\nversion 3 of python-intercom is **not backwards compatible** with\nprevious versions.\n\nversion 3 moves away from a global setup approach to the use of an\nintercom client.\n\ninstallation\n------------\n\n::\n\n    pip install python-intercom\n\nbasic usage\n-----------\n\nconfigure your client\n~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from intercom.client import client\n    intercom = client(personal_access_token='my_personal_access_token')\n\nnote that certain resources will require an extended scope access token : `setting up personal access tokens <https://developers.intercom.com/docs/personal-access-tokens>`_\n\nresources\n~~~~~~~~~\n\nresources this api supports:\n\n::\n\n    https://api.intercom.io/users\n    https://api.intercom.io/contacts\n    https://api.intercom.io/companies\n    https://api.intercom.io/counts\n    https://api.intercom.io/tags\n    https://api.intercom.io/notes\n    https://api.intercom.io/segments\n    https://api.intercom.io/events\n    https://api.intercom.io/conversations\n    https://api.intercom.io/messages\n    https://api.intercom.io/subscriptions\n    https://api.intercom.io/jobs\n    https://api.intercom.io/bulk\n\nexamples\n~~~~~~~~\n\nusers\n^^^^^\n\n.. code:: python\n\n    # find user by email\n    user = intercom.users.find(email=\"bob@example.com\")\n    # find user by user_id\n    user = intercom.users.find(user_id=\"1\")\n    # find user by id\n    user = intercom.users.find(id=\"1\")\n    # create a user\n    user = intercom.users.create(email=\"bob@example.com\", name=\"bob smith\")\n    # delete a user\n    user = intercom.users.find(id=\"1\")\n    deleted_user = intercom.users.delete(user)\n    # update custom_attributes for a user\n    user.custom_attributes[\"average_monthly_spend\"] = 1234.56\n    intercom.users.save(user)\n    # perform incrementing\n    user.increment('karma')\n    intercom.users.save(user)\n    # iterate over all users\n    for user in intercom.users.all():\n        ...\n\n    # bulk operations.\n    # submit bulk job, to create users, if any of the items in create_items match an existing user that user will be updated\n    intercom.users.submit_bulk_job(create_items=[{'user_id': 25, 'email': 'alice@example.com'}, {'user_id': 25, 'email': 'bob@example.com'}])\n    # submit bulk job, to delete users\n    intercom.users.submit_bulk_job(delete_items=[{'user_id': 25, 'email': 'alice@example.com'}, {'user_id': 25, 'email': 'bob@example.com'}])\n    # submit bulk job, to add items to existing job\n    intercom.users.submit_bulk_job(create_items=[{'user_id': 25, 'email': 'alice@example.com'}], delete_items=[{'user_id': 25, 'email': 'bob@example.com'}], 'job_id': 'job_abcd1234')\n\nadmins\n^^^^^^\n\n.. code:: python\n\n    # iterate over all admins\n    for admin in intercom.admins.all():\n        ...\n\ncompanies\n^^^^^^^^^\n\n.. code:: python\n\n    # add a user to one or more companies\n    user = intercom.users.find(email='bob@example.com')\n    user.companies = [\n        {'company_id': 6, 'name': 'intercom'},\n        {'company_id': 9, 'name': 'test company'}\n    ]\n    intercom.users.save(user)\n    # you can also pass custom attributes within a company as you do this\n    user.companies = [\n        {\n            'id': 6,\n            'name': 'intercom',\n            'custom_attributes': {\n                'referral_source': 'google'\n            }\n        }\n    ]\n    intercom.users.save(user)\n    # find a company by company_id\n    company = intercom.companies.find(company_id='44')\n    # find a company by name\n    company = intercom.companies.find(name='some company')\n    # find a company by id\n    company = intercom.companies.find(id='41e66f0313708347cb0000d0')\n    # update a company\n    company.name = 'updated company name'\n    intercom.companies.save(company)\n    # iterate over all companies\n    for company in intercom.companies.all():\n        ...\n    # get a list of users in a company\n    intercom.companies.users(company.id)\n\ntags\n^^^^\n\n.. code:: python\n\n    # tag users\n    tag = intercom.tags.tag_users(name='blue', users=[{'email': 'test1@example.com'}])\n    # untag users\n    intercom.tags.untag_users(name='blue', users=[{'user_id': '42ea2f1b93891f6a99000427'}])\n    # iterate over all tags\n    for tag in intercom.tags.all():\n        ...\n    # tag companies\n    tag = intercom.tags.tag(name='blue', companies=[{'id': '42ea2f1b93891f6a99000427'}])\n\nsegments\n^^^^^^^^\n\n.. code:: python\n\n    # find a segment\n    segment = intercom.segments.find(id=segment_id)\n    # iterate over all segments\n    for segment in intercom.segments.all():\n        ...\n\nnotes\n^^^^^\n\n.. code:: python\n\n    # find a note by id\n    note = intercom.notes.find(id=note)\n    # create a note for a user\n    note = intercom.notes.create(\n        body=\"<p>text for the note</p>\",\n        email='joe@example.com')\n    # iterate over all notes for a user via their email address\n    for note in intercom.notes.find_all(email='joe@example.com'):\n        ...\n    # iterate over all notes for a user via their user_id\n    for note in intercom.notes.find_all(user_id='123'):\n        ...\n\nconversations\n^^^^^^^^^^^^^\n\n.. code:: python\n\n    # finding conversations for an admin\n    # iterate over all conversations (open and closed) assigned to an admin\n    for convo in intercom.conversations.find_all(type='admin', id='7'):\n        ...\n    # iterate over all open conversations assigned to an admin\n    for convo in intercom.conversations.find_all(type='admin', id=7, open=true):\n        ...\n    # iterate over closed conversations assigned to an admin\n    for convo intercom.conversations.find_all(type='admin', id=7, open=false):\n        ...\n    # iterate over closed conversations for assigned an admin, before a certain\n    # moment in time\n    for convo in intercom.conversations.find_all(\n            type='admin', id= 7, open= false, before=1374844930):\n        ...\n\n    # finding conversations for a user\n    # iterate over all conversations (read + unread, correct) with a user based on\n    # the users email\n    for convo in intercom.onversations.find_all(email='joe@example.com',type='user'):\n        ...\n    # iterate over through all conversations (read + unread) with a user based on\n    # the users email\n    for convo in intercom.conversations.find_all(\n            email='joe@example.com', type='user', unread=false):\n        ...\n    # iterate over all unread conversations with a user based on the users email\n    for convo in intercom.conversations.find_all(\n            email='joe@example.com', type='user', unread=true):\n        ...\n\n    # finding a single conversation\n    conversation = intercom.conversations.find(id='1')\n\n    # interacting with the parts of a conversation\n    # getting the subject of a part (only applies to email-based conversations)\n    conversation.rendered_message.subject\n    # get the part_type of the first part\n    conversation.conversation_parts[0].part_type\n    # get the body of the second part\n    conversation.conversation_parts[1].body\n\n    # replying to conversations\n    # user (identified by email) replies with a comment\n    intercom.conversations.reply(\n        type='user', email='joe@example.com',\n        message_type='comment', body='foo')\n    # admin (identified by email) replies with a comment\n    intercom.conversations.reply(\n        type='admin', email='bob@example.com',\n        message_type='comment', body='bar')\n    # user (identified by email) replies with a comment and attachment\n    intercom.conversations.reply(id=conversation.id, type='user', email='joe@example.com', message_type='comment', body='foo', attachment_urls=['http://www.example.com/attachment.jpg'])\n\n    # open\n    intercom.conversations.open(id=conversation.id, admin_id='123')\n\n    # close\n    intercom.conversations.close(id=conversation.id, admin_id='123')\n\n    # assign\n    intercom.conversations.assign(id=conversation.id, admin_id='123', assignee_id='124')\n\n    # reply and open\n    intercom.conversations.reply(id=conversation.id, type='admin', admin_id='123', message_type='open', body='bar')\n\n    # reply and close\n    intercom.conversations.reply(id=conversation.id, type='admin', admin_id='123', message_type='close', body='bar')\n\n    # assigning conversations to admins\n    intercom.conversations.reply(id=conversation.id, type='admin', assignee_id=assignee_admin.id, admin_id=admin.id, message_type='assignment')\n\n    # marking a conversation as read\n    intercom.conversations.mark_read(conversation.id)\n\nfull loading of an embedded entity\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    # given a conversation with a partial user, load the full user. this can be\n    # done for any entity\n    intercom.users.load(conversation.user)\n\nsending messages\n^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    # inapp message from admin to user\n    intercom.messages.create(**{\n        \"message_type\": \"inapp\",\n        \"body\": \"what's up :)\",\n        \"from\": {\n            \"type\": \"admin\",\n            \"id\": \"1234\"\n        },\n        \"to\": {\n            \"type\": \"user\",\n            \"id\": \"5678\"\n        }\n    })\n\n    # email message from admin to user\n    intercom.messages.create(**{\n        \"message_type\": \"email\",\n        \"subject\": \"hey there\",\n        \"body\": \"what's up :)\",\n        \"template\": \"plain\", # or \"personal\",\n        \"from\": {\n            \"type\": \"admin\",\n            \"id\": \"1234\"\n        },\n        \"to\": {\n            \"type\": \"user\",\n            \"id\": \"536e564f316c83104c000020\"\n        }\n    })\n\n    # message from a user\n    intercom.messages.create(**{\n        \"from\": {\n            \"type\": \"user\",\n            \"id\": \"536e564f316c83104c000020\"\n        },\n        \"body\": \"halp\"\n    })\n\n    # message from admin to contact\n    intercom.messages.create(**{\n        'body': 'how can i help :)',\n        'from': {\n            'type': 'admin',\n            'id': '1234'\n        },\n        'to': {\n            'type': 'contact',\n            'id': '536e5643as316c83104c400671'\n        }\n    })\n\n    # message from a contact\n    intercom.messages.create(**{\n        'from' => {\n            'type': 'contact',\n            'id': '536e5643as316c83104c400671'\n        },\n        'body': 'halp'\n    })\n\nevents\n^^^^^^\n\n.. code:: python\n\n    intercom.events.create(\n        event_name='invited-friend',\n        created_at=time.mktime(),\n        email=user.email,\n        metadata={\n            'invitee_email': 'pi@example.org',\n            'invite_code': 'addafriend',\n            'found_date': 12909364407\n        }\n    )\n\n    # retrieve event list for user with id:'123abc'\n    intercom.events.find_all(type='user', \"intercom_user_id\"=\"123abc)\n\nmetadata objects support a few simple types that intercom can present on\nyour behalf\n\n.. code:: python\n\n    intercom.events.create(\n        event_name=\"placed-order\",\n        email=current_user.email,\n        created_at=1403001013\n        metadata={\n            'order_date': time.mktime(),\n            'stripe_invoice': 'inv_3434343434',\n            'order_number': {\n                'value': '3434-3434',\n                'url': 'https://example.org/orders/3434-3434'\n            },\n            'price': {\n                'currency': 'usd',\n                'amount': 2999\n            }\n        }\n    )\n\nthe metadata key values in the example are treated as follows-\n\n-  order\\_date: a date (key ends with '\\_date').\n-  stripe\\_invoice: the identifier of the stripe invoice (has a\n   'stripe\\_invoice' key)\n-  order\\_number: a rich link (value contains 'url' and 'value' keys)\n-  price: an amount in us dollars (value contains 'amount' and\n   'currency' keys)\n\nbulk operations.\n\n.. code:: python\n\n    # submit bulk job, to create events\n    intercom.events.submit_bulk_job(create_items: [\n        {\n            'event_name': 'ordered-item',\n            'created_at': 1438944980,\n            'user_id': '314159',\n            'metadata': {\n                'order_date': 1438944980,\n                'stripe_invoice': 'inv_3434343434'\n            }\n        },\n        {\n            'event_name': 'invited-friend',\n            'created_at': 1438944979,\n            'user_id': '314159',\n            'metadata': {\n                'invitee_email': 'pi@example.org',\n                'invite_code': 'addafriend'\n            }\n        }\n    ])\n\n    # submit bulk job, to add items to existing job\n    intercom.events.submit_bulk_job(create_items=[\n        {\n            'event_name': 'ordered-item',\n            'created_at': 1438944980,\n            'user_id': '314159',\n            'metadata': {\n                'order_date': 1438944980,\n                'stripe_invoice': 'inv_3434343434'\n            }\n        },\n        {\n            'event_name': 'invited-friend',\n            'created_at': 1438944979,\n            'user_id': \"314159\",\n            'metadata': {\n                'invitee_email': 'pi@example.org',\n                'invite_code': 'addafriend'\n            }\n        }\n        ], job_id='job_abcd1234')\n\ncontacts\n^^^^^^^^\n\ncontacts represent logged out users of your application.\n\n.. code:: python\n\n    # create a contact\n    contact = intercom.contacts.create(email=\"some_contact@example.com\")\n\n    # update a contact\n    contact.custom_attributes['foo'] = 'bar'\n    intercom.contacts.save(contact)\n\n    # find contacts by email\n    contacts = intercom.contacts.find_all(email=\"some_contact@example.com\")\n\n    # convert a contact into a user\n    intercom.contacts.convert(contact, user)\n\n    # delete a contact\n    intercom.contacts.delete(contact)\n\ncounts\n^^^^^^\n\n.. code:: python\n\n    # app-wide counts\n    intercom.counts.for_app()\n\n    # users in segment counts\n    intercom.counts.for_type(type='user', count='segment')\n\nsubscriptions\n~~~~~~~~~~~~~\n\nsubscribe to events in intercom to receive webhooks.\n\n.. code:: python\n\n    # create a subscription\n    intercom.subscriptions.create(url='http://example.com', topics=['user.created'])\n\n    # fetch a subscription\n    intercom.subscriptions.find(id='nsub_123456789')\n\n    # list subscriptions\n    intercom.subscriptions.all():\n        ...\n\nbulk jobs\n^^^^^^^^^\n\n.. code:: python\n\n    # fetch a job\n    intercom.jobs.find(id='job_abcd1234')\n\n    # fetch a job's error feed\n    intercom.jobs.errors(id='job_abcd1234')\n\nerrors\n~~~~~~\n\nyou do not need to deal with the http response from an api call\ndirectly. if there is an unsuccessful response then an error that is a\nsubclass of ``intercom.error`` will be raised. if desired, you can get\nat the http\\_code of an ``error`` via it's ``http_code`` method.\n\nthe list of different error subclasses are listed below. as they all\ninherit off ``intercomerror`` you can choose to except ``intercomerror``\nor the more specific error subclass:\n\n.. code:: python\n\n    authenticationerror\n    servererror\n    serviceunavailableerror\n    serviceconnectionerror\n    resourcenotfound\n    badgatewayerror\n    badrequesterror\n    ratelimitexceeded\n    multiplematchinguserserror\n    httperror\n    unexpectederror\n\nrate limiting\n~~~~~~~~~~~~~\n\ncalling your clients ``rate_limit_details`` returns a dict that contains\ndetails about your app's current rate limit.\n\n.. code:: python\n\n    intercom.rate_limit_details\n    # {'limit': 180, 'remaining': 179, 'reset_at': datetime.datetime(2014, 10, 07, 14, 58)}\n\nrunning the tests\n-----------------\n\nunit tests:\n\n.. code:: bash\n\n    nosetests tests/unit\n\nintegration tests:\n\n.. code:: bash\n\n    intercom_personal_access_token=xxx nosetests tests/integration\n\n.. |pypi version| image:: https://img.shields.io/pypi/v/python-intercom.svg\n   :target: https://pypi.python.org/pypi/python-intercom\n.. |pypi downloads| image:: https://img.shields.io/pypi/dm/python-intercom.svg\n   :target: https://pypi.python.org/pypi/python-intercom\n.. |travis ci build| image:: https://travis-ci.org/jkeyes/python-intercom.svg\n   :target: https://travis-ci.org/jkeyes/python-intercom\n.. |coverage status| image:: https://coveralls.io/repos/github/jkeyes/python-intercom/badge.svg?branch=master\n   :target: https://coveralls.io/github/jkeyes/python-intercom?branch=master\n",
  "docs_url": null,
  "keywords": "intercom crm python",
  "license": "mit license",
  "name": "python-intercom",
  "package_url": "https://pypi.org/project/python-intercom/",
  "project_url": "https://pypi.org/project/python-intercom/",
  "project_urls": {
    "Homepage": "http://github.com/jkeyes/python-intercom"
  },
  "release_url": "https://pypi.org/project/python-intercom/3.1.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "intercom api wrapper",
  "version": "3.1.0",
  "releases": [],
  "developers": [
    "john@keyes.ie",
    "john_keyes"
  ],
  "kwds": "intercom_personal_access_token intercomerror intercom intercom_user_id pip",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_python_intercom",
  "homepage": "http://github.com/jkeyes/python-intercom",
  "release_count": 27,
  "dependency_ids": [],
  "documentation_summary": "The GitHub repository \"intercom/python-intercom\" is a Python wrapper for the Intercom API, not officially supported by Intercom but hosted to support the Python community. It allows for interaction with various Intercom API functionalities such as users, contacts, companies, tags, segments, notes, conversations, messages, events, and more, through Python code. The wrapper is not maintained or updated by Intercom and is community-maintained. It includes documentation on installation, basic usage, and examples for different API resources. The repository also outlines how to handle errors and rate limiting. Version 3 of the wrapper introduces significant changes, including the move from a global setup to using an Intercom Client.",
  "embedding": [
    -0.014003951102495193,
    -0.0023588708136230707,
    0.0009112635161727667,
    -0.030771199613809586,
    0.01969023607671261,
    0.013941464014351368,
    0.018051696941256523,
    -0.025133516639471054,
    -0.00751228304579854,
    -0.025577865540981293,
    0.008019119501113892,
    -0.01119899470359087,
    -0.026174960657954216,
    -0.0019943653605878353,
    -0.004349764436483383,
    -0.027660753577947617,
    0.015913264825940132,
    -0.031909845769405365,
    -0.00016098988999146968,
    -0.008900875225663185,
    0.00730399414896965,
    0.0017400794895365834,
    -0.025522321462631226,
    -0.004610125441104174,
    -0.036853235214948654,
    0.0034558584447950125,
    0.01706579700112343,
    -0.02514740265905857,
    0.004606654401868582,
    -0.002860499545931816,
    0.015455029904842377,
    -0.005110018886625767,
    -0.037325356155633926,
    0.0006413559312932193,
    -0.014677418395876884,
    -0.012282096780836582,
    0.025841698050498962,
    -0.014233068563044071,
    0.030021360144019127,
    0.012386240996420383,
    0.012282096780836582,
    0.022856226190924644,
    0.004058160353451967,
    -0.003327413694933057,
    -0.014038666151463985,
    0.009990920312702656,
    0.00381168513558805,
    -0.037464212626218796,
    -0.024383677169680595,
    0.02069002203643322,
    0.0026678324211388826,
    0.025800039991736412,
    -0.011643344536423683,
    0.006807572674006224,
    0.030937831848859787,
    -0.009011962451040745,
    0.017329629510641098,
    0.03368724510073662,
    -0.005245406646281481,
    -0.0016411422984674573,
    0.019537489861249924,
    -0.002791070146486163,
    -0.02821619063615799,
    -0.018704334273934364,
    -0.012177952565252781,
    0.009761801920831203,
    -0.011851632967591286,
    0.0014823219971731305,
    0.033659473061561584,
    0.011247595772147179,
    0.03963041678071022,
    0.027535781264305115,
    -0.0160937812179327,
    -0.0038984722923487425,
    0.045379187911748886,
    -0.013392970897257328,
    -0.001330444822087884,
    0.01517731137573719,
    -0.010483870282769203,
    0.0009572606650181115,
    0.012795875780284405,
    -0.03801964968442917,
    -0.005346079356968403,
    0.03102114610373974,
    0.025952786207199097,
    0.026535993441939354,
    -0.002922986401244998,
    0.007790001574903727,
    0.0016255206428468227,
    0.0027372620534151793,
    0.018537703901529312,
    -0.0059952461160719395,
    -0.003711012192070484,
    0.043101899325847626,
    -0.006644412875175476,
    0.029938044026494026,
    -0.02952146716415882,
    0.02370326593518257,
    0.015052338130772114,
    -0.01824609935283661,
    -0.011074021458625793,
    0.006637469865381718,
    -0.007526169065386057,
    -0.021662035956978798,
    -0.05462721362709999,
    -0.02681371197104454,
    0.0007003711070865393,
    -0.0020759450271725655,
    0.042851950973272324,
    0.00651596812531352,
    -0.0204678475856781,
    0.03307626396417618,
    -0.011150394566357136,
    -0.028993802145123482,
    0.0054745241068303585,
    -0.014816277660429478,
    0.022772910073399544,
    0.001661103218793869,
    0.011914120055735111,
    0.0024387147277593613,
    -0.004974631126970053,
    -0.006644412875175476,
    0.006380580365657806,
    -0.030326850712299347,
    0.01649647392332554,
    0.011032364331185818,
    0.013969236053526402,
    -0.006901302374899387,
    -0.0027181690093129873,
    -0.0017261934699490666,
    -0.01154614333063364,
    -0.012788932770490646,
    0.006095919292420149,
    -0.0078108301386237144,
    -0.027063658460974693,
    0.0005302685895003378,
    -0.009685429744422436,
    -0.009900661185383797,
    -0.015343942679464817,
    -0.03471480309963226,
    0.0016055596061050892,
    0.015052338130772114,
    -0.0146079882979393,
    0.00813714973628521,
    0.009414654225111008,
    0.04723990336060524,
    0.008900875225663185,
    -0.012830590829253197,
    -0.012809761799871922,
    0.008428754284977913,
    0.01371234655380249,
    0.00672425702214241,
    -0.029271520674228668,
    -0.007526169065386057,
    -0.02073168009519577,
    0.018579361960291862,
    0.0024196216836571693,
    0.028188418596982956,
    0.015774406492710114,
    -0.008706471882760525,
    -0.026577651500701904,
    0.02217581495642662,
    -0.020578933879733086,
    0.001149059971794486,
    0.02200918458402157,
    0.02199529856443405,
    0.0001548063155496493,
    -0.02716086059808731,
    -0.025577865540981293,
    0.027022002264857292,
    0.015260626561939716,
    0.0032180622220039368,
    -0.022245245054364204,
    -0.017871180549263954,
    -0.005307893268764019,
    0.010643558576703072,
    -0.004922559019178152,
    -0.020134584978222847,
    -0.02620273269712925,
    -0.028854943811893463,
    0.029104890301823616,
    -0.0022391045931726694,
    -0.0007754418766126037,
    0.04698995500802994,
    -0.020356759428977966,
    -0.02243964746594429,
    -0.01737128756940365,
    -0.005727942101657391,
    0.016204869374632835,
    0.012059922330081463,
    0.012177952565252781,
    0.03926938399672508,
    0.014885706827044487,
    -0.04829523339867592,
    -0.5687673091888428,
    0.007977461442351341,
    -0.013573487289249897,
    -0.002421357436105609,
    0.016121553257107735,
    -0.0048947869800031185,
    0.018232213333249092,
    7.675225788261741e-05,
    -0.003752670018002391,
    0.016524245962500572,
    -0.012316811829805374,
    0.03402050584554672,
    0.009435483254492283,
    0.0079844044521451,
    0.0008457393269054592,
    -0.017385171726346016,
    0.03413159400224686,
    -0.03310403600335121,
    -0.015357828699052334,
    -0.010435269214212894,
    0.0012740332167595625,
    0.027757955715060234,
    -0.04329629987478256,
    0.024828026071190834,
    -0.0004551978490781039,
    -0.013372141867876053,
    0.012129351496696472,
    0.006873530801385641,
    -0.002683454193174839,
    0.008088548667728901,
    -0.017399057745933533,
    0.039213839918375015,
    0.0248835701495409,
    -0.019648578017950058,
    0.04732321575284004,
    0.010095064528286457,
    -0.028966030105948448,
    0.04040803015232086,
    0.016954708844423294,
    0.03496474772691727,
    0.000543286616448313,
    -0.01364986039698124,
    0.0071512493304908276,
    0.014177525416016579,
    -0.00136689527425915,
    0.006095919292420149,
    0.014899592846632004,
    0.022675707936286926,
    0.0002269480173708871,
    -0.023370005190372467,
    -0.004183133598417044,
    0.0016775927506387234,
    -0.00498504564166069,
    0.0017617761623114347,
    0.024661395698785782,
    -0.006738143041729927,
    -0.00831072311848402,
    0.01741294376552105,
    0.0035044592805206776,
    -0.023675493896007538,
    0.0034523869398981333,
    0.02606387250125408,
    0.012275153771042824,
    -0.006141048390418291,
    -0.03674214705824852,
    0.02598055824637413,
    0.005655040964484215,
    -0.01714911125600338,
    0.018135013058781624,
    -0.018273871392011642,
    0.022509077563881874,
    -0.010053406469523907,
    0.009470198303461075,
    -0.026883142068982124,
    0.013698460534214973,
    0.03854731470346451,
    0.013531829230487347,
    0.007546998094767332,
    -0.0050301747396588326,
    0.038214053958654404,
    -0.00907444953918457,
    0.00730399414896965,
    -0.013858148828148842,
    -0.03999145328998566,
    0.04168553277850151,
    -0.0034228793811053038,
    -0.02396709844470024,
    -0.020856652408838272,
    0.020134584978222847,
    -0.007026275619864464,
    0.006220892537385225,
    0.026452679187059402,
    0.0036138107534497976,
    -0.013892863877117634,
    0.01701025292277336,
    -0.0021974470000714064,
    -0.009588228538632393,
    -0.006217421032488346,
    -0.010692158713936806,
    -0.007415081840008497,
    0.020801108330488205,
    -0.022717365995049477,
    -0.0020707380026578903,
    0.010088121518492699,
    0.020537275820970535,
    -0.01574663445353508,
    -0.013254111632704735,
    0.01319162454456091,
    0.00835238117724657,
    -0.004235205706208944,
    0.012004378251731396,
    -0.05337747931480408,
    -0.0035721531603485346,
    -0.004311578348278999,
    -0.0004755927948281169,
    -0.025869470089673996,
    0.04054688662290573,
    0.011754431761801243,
    0.012469557113945484,
    0.0004460852069314569,
    -0.010379726067185402,
    0.0006916924030520022,
    -0.00498504564166069,
    0.009018905460834503,
    0.025661181658506393,
    0.015149539336562157,
    0.010067292489111423,
    0.012455671094357967,
    -0.019926296547055244,
    -0.005311364773660898,
    0.015718862414360046,
    0.02606387250125408,
    0.012990279123187065,
    0.0032788130920380354,
    0.03676991909742355,
    0.028007902204990387,
    0.04054688662290573,
    -0.02282845415174961,
    -0.0063007366843521595,
    -0.005224577616900206,
    -0.006682599429041147,
    0.009803459979593754,
    0.005602968856692314,
    -0.008893932215869427,
    -0.010664386674761772,
    -0.027480237185955048,
    -0.010469984263181686,
    0.0018277342896908522,
    -0.015427257865667343,
    -0.01828775741159916,
    0.004370593465864658,
    -0.0248835701495409,
    -0.010476927272975445,
    0.021148256957530975,
    0.01323328260332346,
    -0.005325250793248415,
    -0.0005602100864052773,
    -0.01412892434746027,
    -0.011171223595738411,
    -0.010199208743870258,
    0.008713414892554283,
    -0.0019700650591403246,
    -0.013615145348012447,
    0.0009208100964315236,
    -0.03713095188140869,
    -0.00018973808619193733,
    -0.021537063643336296,
    0.014621874317526817,
    -0.006498611066490412,
    -0.008539841510355473,
    -0.00354785262607038,
    0.007206792943179607,
    -0.0131430234760046,
    -0.000502496724948287,
    0.002759826835244894,
    0.00981734599918127,
    -0.004731627646833658,
    0.0038845862727612257,
    0.0018815422663465142,
    -0.000683447637129575,
    -0.010282523930072784,
    0.01999572664499283,
    -0.03496474772691727,
    -0.02681371197104454,
    0.012920849025249481,
    -0.008345438167452812,
    0.03615893796086311,
    0.016302071511745453,
    -0.034881431609392166,
    0.020134584978222847,
    -0.028007902204990387,
    -0.0029212506487965584,
    -0.015538345091044903,
    0.02988250181078911,
    -0.03088228777050972,
    0.010949048213660717,
    0.02673039771616459,
    0.0008700397447682917,
    0.00012475631956476718,
    0.018398845568299294,
    0.013691517524421215,
    0.002266876632347703,
    0.0031035032588988543,
    -0.001399006461724639,
    -0.015163425356149673,
    -0.004974631126970053,
    0.0043324073776602745,
    -0.015718862414360046,
    0.03946378827095032,
    -0.03382610157132149,
    0.02817453257739544,
    0.01192106306552887,
    -0.015427257865667343,
    0.004148419015109539,
    0.00244392198510468,
    0.027716297656297684,
    -0.02256462164223194,
    0.046434517949819565,
    -0.02738303504884243,
    -0.0233144611120224,
    0.002134960377588868,
    0.013719289563596249,
    -0.0061896489933133125,
    -0.024897456169128418,
    -0.006370166316628456,
    -0.02138431742787361,
    0.016565904021263123,
    0.009386882185935974,
    0.010129779577255249,
    -0.03818628191947937,
    -0.0038359856698662043,
    0.024078186601400375,
    0.012164066545665264,
    -0.007887203246355057,
    0.04029694199562073,
    -0.018745992332696915,
    0.03279854357242584,
    -0.04496261104941368,
    0.030243534594774246,
    -0.008748129941523075,
    -0.0007355198613367975,
    0.006331979762762785,
    0.031687669456005096,
    -0.02545289322733879,
    0.025397349148988724,
    -0.004009559750556946,
    -0.005297478754073381,
    0.009539627470076084,
    -0.020856652408838272,
    0.025119630619883537,
    0.007449796423316002,
    0.012670902535319328,
    -0.011386455036699772,
    0.008519012480974197,
    -0.0011195522965863347,
    0.0033656000159680843,
    0.012115465477108955,
    0.011914120055735111,
    0.03627002611756325,
    -0.009643771685659885,
    -0.014045609161257744,
    -0.008588441647589207,
    0.028202304616570473,
    0.03513137996196747,
    0.03368724510073662,
    -0.0028171062003821135,
    -0.015052338130772114,
    -0.0381307378411293,
    -0.027008116245269775,
    -0.01434415578842163,
    -0.0013651595218107104,
    -0.041491132229566574,
    -0.0021974470000714064,
    -0.01674642041325569,
    0.03604784980416298,
    0.00015545722271781415,
    0.006658298894762993,
    0.025314033031463623,
    0.011608629487454891,
    0.003922772593796253,
    -0.011560029350221157,
    -0.03088228777050972,
    0.044157229363918304,
    -0.014163639396429062,
    0.001606427482329309,
    -0.012254324741661549,
    -0.025841698050498962,
    0.008907818235456944,
    -0.020495619624853134,
    0.027091430500149727,
    -0.00766502832993865,
    0.019440289586782455,
    0.02117602899670601,
    1.8903294403571635e-05,
    0.01570497639477253,
    0.014566331170499325,
    0.03402050584554672,
    0.001561298151500523,
    -0.018301643431186676,
    0.0018502989551052451,
    0.033576156944036484,
    0.024355905130505562,
    -0.011712773703038692,
    0.014510787092149258,
    0.020328987389802933,
    -0.0032215334940701723,
    -0.014246954582631588,
    -0.02103717066347599,
    -0.027327490970492363,
    -0.017482373863458633,
    0.011205937713384628,
    0.0012592794373631477,
    -0.03263191506266594,
    -0.004797585774213076,
    0.023370005190372467,
    0.00035018555354326963,
    0.004946859087795019,
    -0.011678059585392475,
    0.03102114610373974,
    -0.006946431938558817,
    -0.012844476848840714,
    -0.031743213534355164,
    -0.009018905460834503,
    0.0038707004860043526,
    0.02868831157684326,
    -0.0025098801124840975,
    0.004519867245107889,
    0.010678272694349289,
    -0.034659259021282196,
    -0.019801322370767593,
    -0.021731466054916382,
    0.010532470420002937,
    -0.01102542132139206,
    -0.020926082506775856,
    -0.0034003148321062326,
    0.017593462020158768,
    0.028063446283340454,
    0.007651142310351133,
    0.0059362309984862804,
    0.00730399414896965,
    -0.025036314502358437,
    -0.005325250793248415,
    0.0015621660277247429,
    -0.03179875761270523,
    0.024703053757548332,
    -0.01967635005712509,
    0.009789573960006237,
    -0.0025498021859675646,
    0.03660328686237335,
    0.008949476294219494,
    0.009095277637243271,
    0.018704334273934364,
    -0.03279854357242584,
    -0.03643665462732315,
    0.02852168120443821,
    0.00756782665848732,
    0.023689379915595055,
    0.007658085320144892,
    -0.02834116481244564,
    0.017385171726346016,
    0.02213415689766407,
    0.025202946737408638,
    0.0006131501868367195,
    0.00552312470972538,
    0.02966032736003399,
    0.038297370076179504,
    -0.010928219184279442,
    -0.002607081551104784,
    0.005530067719519138,
    -0.021120484918355942,
    -0.01340685598552227,
    0.026147188618779182,
    0.007692799903452396,
    0.01627429947257042,
    0.00215405342169106,
    0.016329843550920486,
    -0.028577225282788277,
    -0.019620805978775024,
    0.012004378251731396,
    -0.00918553676456213,
    0.0031607826240360737,
    -0.0038359856698662043,
    -0.011115679517388344,
    -0.051155731081962585,
    0.0032024404499679804,
    -0.032354194670915604,
    0.003488837508484721,
    -0.0217453520745039,
    -0.011303139850497246,
    -0.03726981207728386,
    -0.01124065276235342,
    0.024994656443595886,
    -0.006061204243451357,
    0.005103075876832008,
    0.010588014498353004,
    -0.02248130552470684,
    0.00804689060896635,
    -0.0026817184407263994,
    0.021273231133818626,
    0.0218703243881464,
    0.01946806162595749,
    -0.002103717066347599,
    0.023328347131609917,
    0.010004805400967598,
    0.0232311449944973,
    -0.04690663889050484,
    0.0029351364355534315,
    -0.018745992332696915,
    -0.0025619524531066418,
    -0.008609270676970482,
    0.000724237528629601,
    0.0020533804781734943,
    -0.0033638642635196447,
    0.038380686193704605,
    -0.009734030812978745,
    0.01727408543229103,
    0.0013087480328977108,
    -0.0044677951373159885,
    0.009504912421107292,
    0.013587373308837414,
    -0.005835558287799358,
    0.011844689957797527,
    0.016177097335457802,
    0.006908245384693146,
    -0.01832941547036171,
    -0.024897456169128418,
    -0.007165134884417057,
    0.0023831711150705814,
    0.0031694613862782717,
    -0.005429395008832216,
    0.0047246846370399,
    0.025605637580156326,
    -0.021592605859041214,
    0.032437510788440704,
    0.028854943811893463,
    0.009921490214765072,
    0.006009132135659456,
    -0.0026261748280376196,
    -0.005387737415730953,
    -0.009706258773803711,
    -0.029799185693264008,
    0.03704763576388359,
    0.0037005979102104902,
    -0.027438579127192497,
    0.014677418395876884,
    -0.025314033031463623,
    -0.0007546130218543112,
    0.02982695773243904,
    -0.016829736530780792,
    -0.008782844990491867,
    0.001569976913742721,
    -0.0060542612336575985,
    -0.005498824641108513,
    0.0034246151335537434,
    0.019231999292969704,
    0.011080964468419552,
    0.01355960126966238,
    -0.009150821715593338,
    0.01045609824359417,
    -0.003349978243932128,
    -0.01041444018483162,
    0.01049775630235672,
    -0.006991561036556959,
    -0.005290535744279623,
    -0.012386240996420383,
    -0.0019440288888290524,
    -0.01390674989670515,
    -0.022370217368006706,
    -0.006693013943731785,
    -0.029104890301823616,
    -0.0059952461160719395,
    0.0219536405056715,
    -0.011955778114497662,
    0.030104676261544228,
    -0.003275341587141156,
    -0.009268851950764656,
    -0.021023284643888474,
    -0.02852168120443821,
    -0.029771413654088974,
    -0.004304635338485241,
    0.011004592292010784,
    -0.002751148073002696,
    0.011317024938762188,
    0.037603072822093964,
    0.017329629510641098,
    0.0025636882055550814,
    0.012275153771042824,
    -0.0009589964174665511,
    0.014302498660981655,
    0.00756782665848732,
    0.0033204706851392984,
    0.018607133999466896,
    0.0025463306810706854,
    -0.003195497440174222,
    -0.011448941193521023,
    0.035270240157842636,
    0.01367068849503994,
    -0.024703053757548332,
    -0.012566758319735527,
    0.021578719839453697,
    0.005776543170213699,
    -0.0027962771710008383,
    -0.02042618952691555,
    -0.014566331170499325,
    0.00861621368676424,
    -0.005710585042834282,
    -0.02091219648718834,
    -0.005054475273936987,
    -0.03352061286568642,
    0.003223269246518612,
    0.01255287230014801,
    -0.0025810454972088337,
    0.01445524301379919,
    0.022467419505119324,
    0.004259506240487099,
    -0.024022642523050308,
    0.032354194670915604,
    0.017482373863458633,
    0.017649004235863686,
    -0.012122408486902714,
    0.002778919879347086,
    -0.04113009572029114,
    0.016066011041402817,
    -0.015635546296834946,
    0.006536797154694796,
    0.02060670591890812,
    0.011414227075874805,
    -0.001978743588551879,
    -0.018565475940704346,
    0.022995084524154663,
    0.02091219648718834,
    -0.018468273803591728,
    0.015538345091044903,
    -0.01544114388525486,
    -0.01906536892056465,
    -0.01578829251229763,
    -0.012407070025801659,
    -0.0247169379144907,
    -0.005863329861313105,
    0.003589510452002287,
    0.019842980429530144,
    0.022064728662371635,
    0.0035443813540041447,
    0.013365198858082294,
    0.001009332831017673,
    -0.020939968526363373,
    0.05012817308306694,
    0.03307626396417618,
    0.016260413452982903,
    0.01233764085918665,
    0.01696859486401081,
    -0.013226339593529701,
    -0.027702411636710167,
    -0.01841273158788681,
    0.0018954281695187092,
    0.015677204355597496,
    0.034881431609392166,
    -0.018579361960291862,
    -0.011074021458625793,
    0.0217453520745039,
    -0.003592981956899166,
    -0.03485365957021713,
    -0.016690876334905624,
    0.029327064752578735,
    0.01824609935283661,
    0.028327278792858124,
    -0.038602858781814575,
    -0.001027558115310967,
    0.00914387870579958,
    0.018690450116991997,
    -0.013719289563596249,
    -0.00903279148042202,
    0.009435483254492283,
    -0.008470411412417889,
    -0.016038239002227783,
    0.03352061286568642,
    0.036547742784023285,
    0.003488837508484721,
    0.015205083414912224,
    -0.007067933678627014,
    -0.0011803032830357552,
    -0.039130523800849915,
    -0.017329629510641098,
    0.0027580910827964544,
    0.011344796977937222,
    -0.0020117226522415876,
    -0.0004972895258106291,
    -0.0029472867026925087,
    0.027827385812997818,
    0.00022759892453905195,
    -0.004530281759798527,
    0.012920849025249481,
    -0.021856438368558884,
    0.0409356951713562,
    0.009095277637243271,
    -0.01128231082111597,
    -0.021592605859041214,
    -0.04471266269683838,
    -0.0004734231042675674,
    -0.007963575422763824,
    -0.011226766742765903,
    0.006946431938558817,
    -0.009157764725387096,
    -0.005012817215174437,
    -0.003860285971313715,
    0.012462614104151726,
    -0.0008288159151561558,
    -0.003929715603590012,
    0.008234350942075253,
    0.0037318412214517593,
    -0.010490813292562962,
    -0.0047941142693161964,
    -0.01498290803283453,
    -0.012802818790078163,
    -0.024605851620435715,
    -0.04121341183781624,
    -0.006842287257313728,
    0.019051482900977135,
    0.012851419858634472,
    0.015996580943465233,
    -0.009129992686212063,
    0.03402050584554672,
    -0.012851419858634472,
    -0.0014215711271390319,
    -0.007859431207180023,
    0.018537703901529312,
    -0.024466991424560547,
    -0.009227193892002106,
    0.001756568904966116,
    -0.003711012192070484,
    0.02838282100856304,
    0.007071405183523893,
    -0.043546248227357864,
    -0.021412089467048645,
    -0.005273178219795227,
    0.025175174698233604,
    0.00466914102435112,
    -0.019787436351180077,
    0.0023328347597271204,
    0.014524673111736774,
    -5.519111073226668e-05,
    -0.020537275820970535,
    -0.0036589400842785835,
    0.0074011958204209805,
    -0.026313818991184235,
    0.006321565248072147,
    0.026369363069534302,
    -0.0016663104761391878,
    0.04987822845578194,
    -0.0018520347075536847,
    0.0348258875310421,
    0.0408523790538311,
    -0.04193548113107681,
    -0.008116320706903934,
    0.005953588522970676,
    0.0035270238295197487,
    -0.0018138483865186572,
    0.02760520949959755,
    -0.02191198244690895,
    -0.012046036310493946,
    -0.040741290897130966,
    0.04287972301244736,
    -0.0003825137100648135,
    0.005738356616348028,
    -0.011164280585944653,
    0.0437406487762928,
    0.030076904222369194,
    0.015149539336562157,
    -0.005908459424972534,
    -0.006425709929317236,
    -0.010768531821668148,
    -0.0027858628891408443,
    -0.016510359942913055,
    -0.024814140051603317,
    -0.0001837714808061719,
    0.01749625988304615,
    0.006151462905108929,
    -0.03349284082651138,
    -0.03004913218319416,
    -0.012282096780836582,
    -0.039519328624010086,
    -0.014621874317526817,
    -0.0190237108618021,
    0.02396709844470024,
    0.015649432316422462,
    0.019315315410494804,
    -0.013212453573942184,
    0.0006578454631380737,
    0.0060716187581419945,
    0.02205084264278412,
    -0.027480237185955048,
    0.009005019441246986,
    0.030910059809684753,
    0.0036762976087629795,
    0.002199182752519846,
    -0.017871180549263954,
    -0.03665883094072342,
    -0.0014215711271390319,
    0.03415936604142189,
    -0.00951185543090105,
    -0.002202654257416725,
    0.06293099373579025,
    0.0041623045690357685,
    -0.01644092984497547,
    0.010962934233248234,
    -0.024994656443595886,
    -0.02396709844470024,
    0.020676136016845703,
    0.034048277884721756,
    -0.025966672226786613,
    -0.013851205818355083,
    0.020453961566090584,
    0.01323328260332346,
    0.009303566999733448,
    0.0075608836486935616,
    0.0020985098090022802,
    -0.0040859319269657135,
    0.01871822029352188,
    -0.00986594706773758,
    -0.03321512043476105,
    0.006620112806558609,
    0.0036242252681404352,
    0.009574342519044876,
    -0.00992843322455883,
    0.015010680072009563,
    0.013767890632152557,
    -0.02056504786014557,
    -0.0160937812179327,
    -0.01041444018483162,
    0.04571245238184929,
    -0.01487182080745697,
    0.021981412544846535,
    0.027896814048290253,
    -0.005557839758694172,
    -0.008963361382484436,
    -0.03718649595975876,
    0.04229651391506195,
    -0.012948621064424515,
    0.01662144623696804,
    0.0053391363471746445,
    -0.0018259985372424126,
    -0.0036589400842785835,
    0.006564569193869829,
    0.018010038882493973,
    -0.020259559154510498,
    0.019412517547607422,
    -0.006141048390418291,
    0.028660539537668228,
    -0.006637469865381718,
    -0.023522749543190002,
    -0.03257637098431587,
    -0.03876949101686478,
    0.015982694923877716,
    0.01798226684331894,
    0.0007776115671731532,
    -0.03352061286568642,
    0.0072901081293821335,
    0.02134265936911106,
    -0.026452679187059402,
    0.013358255848288536,
    0.197068989276886,
    -0.0037040694151073694,
    0.003542645601555705,
    0.019537489861249924,
    0.018912624567747116,
    -0.003617282258346677,
    -0.004283806309103966,
    0.019273657351732254,
    -0.030410166829824448,
    0.027674639597535133,
    -0.006307679228484631,
    -0.017204655334353447,
    -0.002954229712486267,
    0.0025324448943138123,
    0.002325891749933362,
    -0.02205084264278412,
    -0.005769600160419941,
    -0.051239047199487686,
    -0.031382180750370026,
    -0.007949689403176308,
    -0.004412251058965921,
    -0.012129351496696472,
    -0.00794274639338255,
    -0.007158191874623299,
    0.00320417620241642,
    -0.001067480188794434,
    -0.004693441092967987,
    -0.007428967393934727,
    0.016982480883598328,
    0.0190237108618021,
    -0.013781776651740074,
    -0.01692693680524826,
    -0.0068804738111793995,
    -0.02134265936911106,
    -0.027188632637262344,
    -0.022495191544294357,
    -0.0004538960347417742,
    -0.014691304415464401,
    0.002140167634934187,
    0.013115252368152142,
    -0.006793686654418707,
    -0.04460157826542854,
    -0.0009338281815871596,
    -0.03615893796086311,
    0.02260627970099449,
    -0.030021360144019127,
    -0.021550949662923813,
    0.002806691685691476,
    0.034492626786231995,
    0.046601150184869766,
    -0.004919087514281273,
    -0.016079895198345184,
    0.018468273803591728,
    0.012698674574494362,
    -0.0036867118906229734,
    0.0006461292505264282,
    -0.005651569925248623,
    0.00988677516579628,
    0.014184467494487762,
    0.01810724101960659,
    -0.01592715084552765,
    0.0352424681186676,
    0.005234992131590843,
    0.01999572664499283,
    -0.047489847987890244,
    0.019787436351180077,
    -0.023550521582365036,
    0.004783699754625559,
    -0.018579361960291862,
    -0.0022234830539673567,
    0.01401783712208271,
    0.006554154679179192,
    -0.04071351885795593,
    -0.007338709197938442,
    -0.013177738524973392,
    -0.02020401507616043,
    0.044296085834503174,
    0.011900234036147594,
    0.055571455508470535,
    0.021009398624300957,
    0.003693654900416732,
    0.004655255004763603,
    0.030993374064564705,
    0.00977568794041872,
    -0.01539948582649231,
    0.005727942101657391,
    0.05309975892305374,
    -0.02260627970099449,
    -0.009761801920831203,
    -0.02388378418982029,
    -0.019134799018502235,
    -0.002221747301518917,
    0.0292159765958786,
    0.00751228304579854,
    0.007866374216973782,
    0.003303113393485546,
    -0.018121127039194107,
    0.012948621064424515,
    -0.008491240441799164,
    0.019565261900424957,
    -0.0124001270160079,
    0.057709887623786926,
    -0.005422451999038458,
    -0.019218113273382187,
    -0.042574234306812286,
    -0.011851632967591286,
    0.004269920755177736,
    0.017815636470913887,
    -0.009157764725387096,
    -0.0115739144384861,
    -0.007533112075179815,
    -0.0025914600118994713,
    0.009553513489663601,
    0.00840098224580288,
    0.012414013035595417,
    -0.014927364885807037,
    0.011775260791182518,
    -0.015052338130772114,
    0.008435696363449097,
    0.004839243367314339,
    -0.002331099007278681,
    0.008498183451592922,
    -0.00831072311848402,
    -0.0022165400441735983,
    -0.027827385812997818,
    -0.030937831848859787,
    -0.0013339162105694413,
    -0.005530067719519138,
    0.00220959703437984,
    -0.0038707004860043526,
    0.016552018001675606,
    -0.006526382640004158,
    0.024244816973805428,
    -0.0011386454571038485,
    -0.015718862414360046,
    -0.016565904021263123,
    0.011164280585944653,
    -0.017857294529676437,
    0.0027407335583120584,
    0.019648578017950058,
    -0.011796089820563793,
    -0.00029203828307799995,
    0.0020429659634828568,
    -0.018704334273934364,
    0.022981198504567146,
    -0.024244816973805428,
    0.016593676060438156,
    0.00892170425504446,
    0.014059494249522686,
    0.008144092746078968,
    -0.021370431408286095,
    0.017204655334353447,
    0.012393184006214142,
    -0.031465496867895126,
    0.02868831157684326,
    0.0021436389070004225,
    -0.010955991223454475,
    -0.030632341280579567,
    0.0034506511874496937,
    0.012212667614221573,
    -0.025397349148988724,
    -0.023300575092434883,
    0.006373637355864048,
    -0.020398417487740517,
    -0.04185216501355171,
    -0.014941250905394554,
    -0.17351846396923065,
    0.019356973469257355,
    0.017649004235863686,
    -0.019759664312005043,
    0.014746847562491894,
    -0.009838175028562546,
    -0.029299292713403702,
    -0.005668926984071732,
    0.002221747301518917,
    -0.018995938822627068,
    5.3319767175707966e-05,
    -0.014142810367047787,
    -0.008595384657382965,
    -0.020717794075608253,
    0.008588441647589207,
    0.012143237516283989,
    -0.000855285907164216,
    -0.010726873762905598,
    0.0351591520011425,
    0.01065050158649683,
    0.043907281011343,
    -0.026230504736304283,
    0.014788505621254444,
    -0.0013451986014842987,
    -0.014552445150911808,
    -0.010213094763457775,
    -0.01841273158788681,
    -0.014844048768281937,
    -0.016246527433395386,
    -0.035631272941827774,
    -0.02577226795256138,
    0.017385171726346016,
    0.050239261239767075,
    0.0030705241952091455,
    0.011483656242489815,
    0.01393452100455761,
    0.03657551482319832,
    -0.008623156696557999,
    -0.0048774294555187225,
    0.024522535502910614,
    0.023481091484427452,
    0.03110446222126484,
    0.010560242459177971,
    0.0035721531603485346,
    -0.034659259021282196,
    -0.010997649282217026,
    0.030743427574634552,
    -0.015052338130772114,
    0.009574342519044876,
    -0.018537703901529312,
    0.025688953697681427,
    -0.024022642523050308,
    0.012122408486902714,
    -0.020551161840558052,
    0.01757957600057125,
    -0.001782605075277388,
    0.02305062860250473,
    -0.009546570479869843,
    0.002258197870105505,
    -0.021634263917803764,
    0.004033859819173813,
    -0.01592715084552765,
    -0.0074845110066235065,
    -0.028327278792858124,
    -0.020356759428977966,
    -0.031521040946245193,
    -0.007394252810627222,
    0.008956418372690678,
    0.006109805312007666,
    0.029604783281683922,
    0.009699315764009953,
    0.017482373863458633,
    -0.01676030643284321,
    0.0028361992444843054,
    0.01570497639477253,
    0.013323540799319744,
    -0.0073664807714521885,
    0.025994444265961647,
    0.035186924040317535,
    0.0036242252681404352,
    -0.01551057305186987,
    0.03926938399672508,
    -0.003353449748829007,
    -0.009768744930624962,
    -0.014580216258764267,
    -0.013983122073113918,
    0.004433080088347197,
    -0.009213308803737164,
    -0.0049711596220731735,
    -0.020537275820970535,
    0.021245459094643593,
    -0.03679769113659859,
    0.0020568519830703735,
    0.014774619601666927,
    0.005832086782902479,
    0.018482159823179245,
    0.014885706827044487,
    -0.013136081397533417,
    0.020703908056020737,
    -0.02300897054374218,
    -0.00640835240483284,
    0.021981412544846535,
    -0.0035825674422085285,
    0.01859324797987938,
    0.02073168009519577,
    0.02305062860250473,
    -0.05132236331701279,
    -0.003497516270726919,
    0.01570497639477253,
    -0.011775260791182518,
    0.020801108330488205,
    -0.0019336144905537367,
    0.021856438368558884,
    0.037158723920583725,
    -0.03910275176167488,
    0.009914547204971313,
    -0.010574128478765488,
    0.0014788504922762513,
    -0.0009563927887938917,
    0.0037387842312455177,
    0.02457807958126068,
    -0.0017044967971742153,
    -0.014330269768834114,
    -0.019356973469257355,
    -0.032604143023490906,
    -0.014677418395876884,
    -0.10558854043483734,
    -0.0377141609787941,
    0.0035999249666929245,
    0.016593676060438156,
    0.02024567313492298,
    -0.002620967570692301,
    -0.00541203748434782,
    0.0015404693549498916,
    0.0009008491178974509,
    0.008234350942075253,
    -0.010962934233248234,
    0.01662144623696804,
    -0.020814994350075722,
    0.0004089837602805346,
    -6.753113848390058e-05,
    -0.018829308450222015,
    -0.043629564344882965,
    0.007769172545522451,
    -0.007234564516693354,
    0.004169247578829527,
    -0.009977034293115139,
    -0.028118988499045372,
    0.017773978412151337,
    0.012525100260972977,
    -0.02296731248497963,
    0.009977034293115139,
    -0.022689593955874443,
    0.01942640356719494,
    0.03971373289823532,
    -0.0025376519188284874,
    -0.0025272376369684935,
    -0.01657979004085064,
    -0.000646997126750648,
    -0.005589082837104797,
    0.0019943653605878353,
    0.03271522745490074,
    -0.03035462275147438,
    -0.027327490970492363,
    0.04504592716693878,
    -0.030021360144019127,
    0.008130206726491451,
    0.004127589985728264,
    -0.022689593955874443,
    -0.030326850712299347,
    -0.008935590274631977,
    0.014802391640841961,
    0.003815156640484929,
    0.011955778114497662,
    0.009796516969799995,
    -0.004919087514281273,
    -0.017773978412151337,
    -0.010102007538080215,
    -0.028632767498493195,
    -0.0015187725657597184,
    0.014205296523869038,
    0.0152467405423522,
    0.011247595772147179,
    -0.011587800458073616,
    -0.0034454441629350185,
    -0.013677631504833698,
    -0.01408726628869772,
    -0.0042976923286914825,
    -0.020884424448013306,
    0.019176457077264786,
    0.015871606767177582,
    -0.005821672268211842,
    -0.003752670018002391,
    0.025341805070638657,
    0.03088228777050972,
    -0.0024421862326562405,
    -0.011060135439038277,
    0.006009132135659456,
    -0.01937085948884487,
    0.013816490769386292,
    -0.0377974770963192,
    0.008796731010079384,
    0.006217421032488346,
    -0.024286475032567978,
    0.00809549167752266,
    0.0013061444042250514,
    -0.020148470997810364,
    -0.009248022921383381,
    -0.022120270878076553,
    0.013274939730763435,
    -0.01666310429573059,
    0.0349925197660923,
    0.011185108684003353,
    0.0006730332388542593,
    0.02205084264278412,
    -0.031076690182089806,
    0.02103717066347599,
    -0.017912836745381355,
    0.04113009572029114,
    -0.008394039236009121,
    -0.002339777536690235,
    -0.008699528872966766,
    -0.030410166829824448,
    -0.011226766742765903,
    -0.020759452134370804,
    0.02935483679175377,
    -0.0352424681186676,
    -0.008567612618207932,
    -0.08503738045692444,
    0.02366160787642002,
    0.009685429744422436,
    -0.013635974377393723,
    0.026674853637814522,
    -0.056015804409980774,
    0.003620753763243556,
    -0.02199529856443405,
    -0.007206792943179607,
    -0.0007185963913798332,
    -0.005832086782902479,
    0.026605423539876938,
    -0.005363436881452799,
    0.009317453019320965,
    0.009317453019320965,
    0.016607560217380524,
    0.04896175488829613,
    -0.0021193386055529118,
    0.020370645448565483,
    -0.010553299449384212,
    -0.0038950007874518633,
    0.0027268477715551853,
    0.020884424448013306,
    -0.00288653583265841,
    -0.020259559154510498,
    -0.0019613862968981266,
    -0.012282096780836582,
    0.03696431964635849,
    0.00015578267630189657,
    -0.032132022082805634,
    0.018801536411046982,
    -1.6625135685899295e-05,
    -0.018398845568299294,
    0.01692693680524826,
    0.024383677169680595,
    -0.007706685923039913,
    0.01649647392332554,
    0.025397349148988724,
    0.015274512581527233,
    -0.006706899497658014,
    -0.019523603841662407,
    -0.018704334273934364,
    0.018537703901529312,
    -0.013504058122634888,
    -0.029104890301823616,
    0.001931878738105297,
    0.0007758758147247136,
    0.0005645494675263762,
    0.038214053958654404,
    0.005196805577725172,
    0.013788719661533833,
    0.015205083414912224,
    -0.046129029244184494,
    -0.01338602788746357,
    -0.0025914600118994713,
    -0.012240438722074032,
    0.026952572166919708,
    -0.01319162454456091,
    -0.0028848000802099705,
    0.009310510009527206,
    0.013156909495592117,
    0.0028049559332430363,
    -0.010629672557115555,
    0.01907925494015217,
    0.006321565248072147,
    -0.040880151093006134,
    -0.04265754669904709,
    -0.02205084264278412,
    0.008803674019873142,
    -0.00010577165812719613,
    -0.020009610801935196,
    -0.04443494603037834,
    0.026133302599191666,
    -0.012129351496696472,
    0.006693013943731785,
    -0.00698808953166008,
    0.005957060027867556,
    -0.012302925810217857,
    -0.02754966728389263,
    0.03315958008170128,
    0.037908561527729034,
    -0.027660753577947617,
    -0.018121127039194107,
    0.0042143771424889565,
    0.020065154880285263,
    0.018954280763864517,
    -0.03324289247393608,
    -0.014073380269110203,
    -0.0013070122804492712,
    -0.010136721655726433,
    -0.01224738173186779,
    -0.008539841510355473,
    -0.02209249883890152,
    0.006974203512072563,
    0.002922986401244998,
    0.003874171758070588,
    -4.4234249799046665e-05,
    -0.004898258484899998,
    0.017690662294626236,
    -0.01528839860111475,
    0.014969022013247013,
    -0.015093996189534664,
    -0.002041230443865061,
    -0.020384531468153,
    -0.029799185693264008,
    -0.01806558296084404,
    -0.0009876361582428217,
    -0.0317709855735302,
    -0.007106119766831398,
    0.03529800847172737,
    0.020190129056572914,
    -0.01382343377918005,
    -0.0190237108618021,
    0.013066651299595833,
    -0.022148042917251587,
    0.012386240996420383,
    0.013705403544008732,
    -0.005724470596760511,
    -0.018732106313109398,
    0.004096346441656351,
    -0.0017999624833464622,
    -0.004648311994969845,
    0.028285620734095573,
    -0.022550735622644424,
    0.0031434253323823214,
    0.014371927827596664,
    -0.007033218629658222,
    -0.00704363314434886,
    -0.008123263716697693,
    0.009310510009527206,
    0.00787331722676754,
    0.0007320483564399183,
    -0.01623264141380787,
    -0.022675707936286926,
    -0.005057946778833866,
    -0.025091858580708504,
    -0.03249305486679077,
    -0.009282737970352173,
    -0.017871180549263954,
    0.08031616359949112,
    -0.03307626396417618,
    -0.010060349479317665,
    0.001579523435793817,
    0.0031972331926226616,
    0.019704122096300125,
    0.01619098335504532,
    -0.0008223068434745073,
    -0.037991877645254135,
    -0.0008652664255350828,
    -0.0055335392244160175,
    -0.012101579457521439,
    -0.013330483809113503,
    -0.028882715851068497,
    -0.011858575977385044,
    0.0321875624358654,
    -0.012990279123187065,
    0.019148685038089752,
    -0.0009668072452768683,
    -0.004926030524075031,
    0.0348258875310421,
    0.0014779827324673533,
    -0.011803032830357552,
    -0.03513137996196747,
    -0.030771199613809586,
    -0.00018019152048509568,
    -0.001683667884208262,
    0.019176457077264786,
    -0.030104676261544228,
    -0.02988250181078911,
    0.022231359034776688,
    -0.00519333453848958,
    -0.015802178531885147,
    -0.005769600160419941,
    -0.02410595864057541,
    0.010858790017664433,
    -0.0019492361461743712,
    -0.020759452134370804,
    0.008296838030219078,
    0.015691090375185013,
    -0.012865305878221989,
    0.01969023607671261,
    -0.049544963985681534,
    -0.04132449999451637,
    0.021773124113678932,
    0.024744709953665733,
    0.0028535567689687014,
    -0.022772910073399544,
    -0.04207434132695198
  ]
}
{
  "classifiers": [
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3.8",
    "topic :: software development :: quality assurance"
  ],
  "description": "========\nedx-lint\n========\n\n| |ci|_\n\na collection of code quality tools:\n\n- a few pylint plugins to check for quality issues pylint misses.\n\n- a command-line tool to generate config files like pylintrc from a master\n  file (part of edx_lint), and a repo-specific tweaks file.\n\n\nusing edx_lint\n==============\n\nthe ``edx_lint`` command can generate config files from its own master file. install\nthe package using ``pip``::\n\n    $ pip install edx-lint\n\nthe ``write`` sub-command will write a config file based on the contents of the\nedx_lint master file::\n\n    $ edx_lint write pylintrc\n\nthe file written contains a hash of its contents, to detect subsequent editing.\n``edx_lint`` will detect this when it next tries to write the file.  if editing\nis detected, the edited file will be moved aside so it can be compared to the\nnewly written file.\n\nhandling newly introduced lint violations\n-----------------------------------------\n\nnew potential lint violations will be communicated with a major version bump.\n\nif you run into new lint violations during an upgrade of edx-lint, your options include:\n\n#. fixing the violations immediately, or\n#. `using lint-amnesty`_ and fixing at a later time, or\n#. `customizing edx_lint`_ to permanently ignore the violations.\n\nusing lint-amnesty\n------------------\n\nthe ``lint-amnesty`` command can be used to squash all existing pylint errors\nin a codebase, so that from then the repository can maintain pylint-cleanliness.\ninstall the package using ``pip``::\n\n    $ pip install edx-lint\n\nthe ``lint-amnesty`` command expects pylint errors in the ``--output-format=parseable``\nformat::\n\n    $ pylint my.python.package --output-format=parseable | lint-amnesty\n\nthis will add comments for every existing pylint violation that look like::\n\n    # pylint: disable=some-error  # lint-amnesty\n\nit will also remove any existing suppressions that pylint flags as being ``useless-suppressions``.\n\n\ncustomizing edx_lint\n--------------------\n\nyou can customize the resulting pylintrc file by creating a pylintrc_tweaks file in the\ncurrent directory before running the ``write`` sub-command.  it should contain only the\nsettings you want to override.\n\n**note:** if your project is not a django project, you'll want to disable the django plugins with\nyour pylintrc_tweaks file::\n\n    [master]\n    load-plugins = edx_lint.pylint\n\n\ndeveloping edx_lint\n===================\n\nto run the tests::\n\n    $ make requirements\n    $ make test\n\nto manually test your pylint plugin, create a custom module and run pylint with a selected set of enabled message symbols. for instance::\n\n    pylint --load-plugins=edx_lint.pylint --disable=all --enable=feature-toggle-needs-doc path/to/my/custom/module.py\n\nlicense\n-------\n\nthe code in this repository is licensed under apache 2.0.  please see\n``license.txt`` for details.\n\nhow to contribute\n-----------------\n\ncontributions are very welcome.\n\nplease read `how to contribute <https://github.com/openedx/.github/blob/master/contributing.md>`_ for details.\n\n\ngetting help\n------------\n\nthe open edx project has resources for developer support on the `getting help`_ page.\n\n\n.. _getting help: https://open.edx.org/getting-help\n\n.. |ci| image:: https://github.com/openedx/edx-lint/workflows/python%20ci/badge.svg?branch=master\n.. _ci: https://github.com/openedx/edx-lint/actions?query=workflow%3a%22python+ci%22\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache",
  "name": "edx-lint",
  "package_url": "https://pypi.org/project/edx-lint/",
  "project_url": "https://pypi.org/project/edx-lint/",
  "project_urls": {
    "Homepage": "https://github.com/openedx/edx-lint"
  },
  "release_url": "https://pypi.org/project/edx-lint/5.3.6/",
  "requires_dist": [
    "click",
    "click-log",
    "code-annotations >=1.1.0",
    "pylint",
    "pylint-celery",
    "pylint-django",
    "six"
  ],
  "requires_python": "",
  "summary": "edx-authored pylint checkers",
  "version": "5.3.6",
  "releases": [],
  "developers": [
    "edx",
    "oscm@edx.org"
  ],
  "kwds": "pylintrc_tweaks edx_lint pylint pylintrc pip",
  "license_kwds": "apache",
  "libtype": "pypi",
  "id": "pypi_edx_lint",
  "homepage": "https://github.com/openedx/edx-lint",
  "release_count": 47,
  "dependency_ids": [
    "pypi_click",
    "pypi_click_log",
    "pypi_code_annotations",
    "pypi_pylint",
    "pypi_pylint_celery",
    "pypi_pylint_django",
    "pypi_six"
  ]
}
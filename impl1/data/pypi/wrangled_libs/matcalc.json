{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: chemistry",
    "topic :: scientific/engineering :: information analysis",
    "topic :: scientific/engineering :: physics",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "<h1 align=\"center\">\n  <img src=\"https://github.com/materialsvirtuallab/matcalc/assets/30958850/89486f2f-73fb-40fb-803a-dfafe510eb6d\" width=\"150\" height=\"150\" alt=\"matcalc logo\" style=\"vertical-align: middle;\" />\n  matcalc\n</h1>\n\n<h4 align=\"center\">\n\n[![github license](https://img.shields.io/github/license/materialsvirtuallab/matcalc)](https://github.com/materialsvirtuallab/matcalc/blob/main/license)\n[![linting](https://github.com/materialsvirtuallab/matcalc/workflows/linting/badge.svg)](https://github.com/materialsvirtuallab/matcalc/workflows/linting/badge.svg)\n[![testing](https://github.com/materialsvirtuallab/matcalc/workflows/testing/badge.svg)](https://github.com/materialsvirtuallab/matcalc/workflows/testing/badge.svg)\n[![codecov](https://codecov.io/gh/materialsvirtuallab/matcalc/branch/main/graph/badge.svg?token=or7z9wwrrc)](https://codecov.io/gh/materialsvirtuallab/matcalc)\n[![requires python 3.8+](https://img.shields.io/badge/python-3.8+-blue.svg?logo=python&logocolor=white)](https://python.org/downloads)\n</h4>\n\n## introduction\n\nmatcalc is a python library for calculating materials properties from the potential energy surface (pes). the\npes can be from dft or, more commonly, from machine learning interatomic potentials (mlips).\n\ncalculating various materials properties can require relatively involved setup of various simulation codes. the\ngoal of matcalc is to provide a simplified, consistent interface to access these properties with any\nparameterization of the pes.\n\n## outline\n\nthe main base class in matcalc is `propcalc` (property calculator). [all `propcalc` subclasses](https://github.com/search?q=repo%3amaterialsvirtuallab%2fmatcalc%20%22(propcalc)%22) should implement a\n`calc(pymatgen.structure) -> dict` method that returns a dict of properties.\n\nin general, `propcalc` should be initialized with an ml model or ase calculator, which is then used by either ase,\nlammps or some other simulation code to perform calculations of properties.\n",
  "docs_url": null,
  "keywords": "materials,interatomic potential,force field,science,property prediction,ai,machine learning,graph,deep learning",
  "license": "",
  "name": "matcalc",
  "package_url": "https://pypi.org/project/matcalc/",
  "project_url": "https://pypi.org/project/matcalc/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/matcalc/0.0.3/",
  "requires_dist": [
    "ase",
    "pymatgen",
    "joblib",
    "phonopy"
  ],
  "requires_python": ">=3.8",
  "summary": "calculators for materials properties from the potential energy surface.",
  "version": "0.0.3",
  "releases": [],
  "developers": [
    "eliott_liu",
    "ongsp@ucsd.edu",
    "shyue_ping_ong"
  ],
  "kwds": "matcalc materialsvirtuallab materials potentials logo",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_matcalc",
  "homepage": "",
  "release_count": 3,
  "dependency_ids": [
    "pypi_ase",
    "pypi_joblib",
    "pypi_phonopy",
    "pypi_pymatgen"
  ]
}
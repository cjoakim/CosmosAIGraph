{
  "classifiers": [],
  "description": "pytest-testrail\n===============\n\n|build status| |pypi version|\n\nthis is a pytest plugin for creating/editing testplans or testruns based\non pytest markers. the results of the collected tests will be updated\nagainst the testplan/testrun in testrail.\n\ninstallation\n------------\n\n::\n\n   pip install pytest-testrail\n\nconfiguration\n-------------\n\nconfig for pytest tests\n~~~~~~~~~~~~~~~~~~~~~~~\n\nadd a marker to the tests that will be picked up to be added to the run.\n\n.. code:: python\n\n   from pytest_testrail.plugin import testrail\n\n   @testrail('c1234', 'c5678')\n   def test_foo():\n       # test code goes here\n\n   # or    \n\n   from pytest_testrail.plugin import pytestrail\n\n   @pytestrail.case('c1234', 'c5678')\n   def test_bar():\n       # test code goes here\n\nsee a `more detailed example here <tests/livetest/livetest.py>`__.\n\nconfig for testrail\n~~~~~~~~~~~~~~~~~~~\n\n-  settings file template config:\n\n.. code:: ini\n\n   [api]\n   url = https://yoururl.testrail.net/\n   email = user@email.com\n   password = <api_key>\n\n   [testrun]\n   assignedto_id = 1\n   project_id = 2\n   suite_id = 3\n\nor\n\n-  set command line options (see below)\n\nusage\n-----\n\nbasically, the following command will create a testrun in testrail, add\nall marked tests to run. once the all tests are finished they will be\nupdated in testrail:\n\n.. code:: bash\n\n   py.test --testrail --tr-config=<settings file>.cfg\n\nall available options\n~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n     --testrail            create and update testruns with testrail\n     --tr-config=tr_config\n                           path to the config file containing information about\n                           the testrail server (defaults to testrail.cfg)\n     --tr-url=tr_url       testrail address you use to access testrail with your\n                           web browser (config file: url in api section)\n     --tr-email=tr_email   email for the account on the testrail server (config\n                           file: email in api section)\n     --tr-password=tr_password\n                           password for the account on the testrail server\n                           (config file: password in api section)\n     --tr-testrun-assignedto-id=tr_testrun_assignedto_id\n                           id of the user assigned to the test run (config file:\n                           assignedto_id in testrun section)\n     --tr-testrun-project-id=tr_testrun_project_id\n                           id of the project the test run is in (config file:\n                           project_id in testrun section)\n     --tr-testrun-suite-id=tr_testrun_suite_id\n                           id of the test suite containing the test cases (config\n                           file: suite_id in testrun section)\n     --tr-testrun-suite-include-all\n                           include all test cases in specified test suite when\n                           creating test run (config file: include_all in testrun\n                           section)\n     --tr-testrun-name=tr_testrun_name\n                           name given to testrun, that appears in testrail\n                           (config file: name in testrun section)\n     --tr-run-id=tr_run_id\n                           identifier of testrun, that appears in testrail. if\n                           provided, option \"--tr-testrun-name\" will be ignored\n     --tr-plan-id=tr_plan_id\n                           identifier of testplan, that appears in testrail. if\n                           provided, option \"--tr-testrun-name\" will be ignored\n     --tr-version=tr_version\n                           indicate a version in test case result.\n     --tr-no-ssl-cert-check\n                           do not check for valid ssl certificate on testrail\n                           host\n     --tr-close-on-complete\n                           close a test plan or test run on completion.\n     --tr-dont-publish-blocked\n                           do not publish results of \"blocked\" testcases in\n                           testrail\n     --tr-skip-missing     skip test cases that are not present in testrun\n\n.. |build status| image:: https://travis-ci.org/allankp/pytest-testrail.svg?branch=master\n   :target: https://travis-ci.org/allankp/pytest-testrail\n.. |pypi version| image:: https://badge.fury.io/py/pytest-testrail.svg\n   :target: https://badge.fury.io/py/pytest-testrail\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "pytest-testrail",
  "package_url": "https://pypi.org/project/pytest-testrail/",
  "project_url": "https://pypi.org/project/pytest-testrail/",
  "project_urls": {
    "Homepage": "http://github.com/allankp/pytest-testrail/"
  },
  "release_url": "https://pypi.org/project/pytest-testrail/2.9.0/",
  "requires_dist": [
    "pytest (>=3.6)",
    "requests (>=2.20.0)"
  ],
  "requires_python": "",
  "summary": "pytest plugin for creating testrail runs and adding results",
  "version": "2.9.0",
  "releases": [],
  "developers": [
    "allan_kilpatrick",
    "allanklp@gmail.com"
  ],
  "kwds": "pytest_testrail testrail test_foo pytest testplan",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pytest_testrail",
  "homepage": "http://github.com/allankp/pytest-testrail/",
  "release_count": 38,
  "dependency_ids": [
    "pypi_pytest",
    "pypi_requests"
  ]
}
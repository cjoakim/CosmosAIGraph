{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: information technology",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# mkdocs-htmlproofer-plugin [![pypi - version](https://img.shields.io/pypi/v/mkdocs-htmlproofer-plugin.svg)](https://pypi.org/project/mkdocs-htmlproofer-plugin)\n\n[![github actions](https://github.com/manuzhang/mkdocs-htmlproofer-plugin/actions/workflows/ci.yml/badge.svg)](https://github.com/manuzhang/mkdocs-htmlproofer-plugin/actions/workflows/ci.yml)\n\n*a [mkdocs](https://www.mkdocs.org/) plugin that validates urls, including anchors, in rendered html files*.\n\n## installation\n\n0. prerequisites\n\n* python >= 3.8\n* mkdocs >= 1.4.0\n\n1. install the package with pip:\n\n```bash\npip install mkdocs-htmlproofer-plugin\n```\n\n2. enable the plugin in your `mkdocs.yml`:\n\n> **note:** if you have no `plugins` entry in your config file yet, you'll likely also want to add the `search` plugin.\nmkdocs enables it by default if there is no `plugins` entry set, but now you have to enable it explicitly.\n\n```yaml\nplugins:\n    - search\n    - htmlproofer\n```\n\nto enable cross-page anchor validation, you must set `use_directory_urls = false` in `mkdocs.yml`:\n\n```yaml\nuse_directory_urls: false\n```\n\n## configuring\n\n### `enabled`\n\ntrue by default, allows toggling whether the plugin is enabled.\nuseful for local development where you may want faster build times.\n\n```yaml\nplugins:\n  - htmlproofer:\n      enabled: !env [enabled_htmlproofer, true]\n```\n\nwhich enables you do disable the plugin locally using:\n\n```bash\nexport enabled_htmlproofer=false\nmkdocs serve\n```\n\n\n### `raise_error`\n\noptionally, you may raise an error and fail the build on first bad url status. takes precedense over `raise_error_after_finish`.\n\n```yaml\nplugins:\n  - htmlproofer:\n      raise_error: true\n```\n\n### `raise_error_after_finish`\n\noptionally, you may want to raise an error and fail the build on at least one bad url status after all links have been checked.\n\n```yaml\nplugins:\n  - htmlproofer:\n      raise_error_after_finish: true\n```\n\n### `raise_error_excludes`\n\nwhen specifying `raise_error: true` or `raise_error_after_finish: true`, it is possible to ignore errors\nfor combinations of urls (`'*'` means all urls) and status codes with `raise_error_excludes`.\n\n```yaml\nplugins:\n  - search\n  - htmlproofer:\n      raise_error: true\n      raise_error_excludes:\n        504: ['https://www.mkdocs.org/']\n        404: ['https://github.com/manuzhang/mkdocs-htmlproofer-plugin']\n        400: ['*']\n```\n\n### `validate_external_urls`\n\navoids validating any external urls (i.e those starting with http:// or https://).\nthis will be faster if you just want to validate local anchors, as it does not make any network requests.\n\n```yaml\nplugins:\n  - htmlproofer:\n      validate_external_urls: false\n```\n\n### `validate_rendered_template`\n\nvalidates the entire rendered template for each page - including the navigation, header, footer, etc.\nthis defaults to off because it is much slower and often redundant to repeat for every single page.\n\n```yaml\nplugins:\n  - htmlproofer:\n      validate_rendered_template: true\n```\n\n## compatibility with `attr_list` extension\n\nif you need to manually specify anchors make use of the `attr_list` [extension](https://python-markdown.github.io/extensions/attr_list) in the markdown. \nthis can be useful for multilingual documentation to keep anchors as language neutral permalinks in all languages.\n\n* a sample for a heading `# gr\u00fc\u00dfe {#greetings}` (the slugified generated anchor `gre` is overwritten with `greetings`).\n* this also works for images `this is a nice image [](foo-bar.png){#nice-image}` \n* and generall for paragraphs:\n```markdown\nlisting: this is noteworthy.\n{#paragraphanchor}\n```\n\n## improving\n\nmore information about plugins in the [mkdocs documentation](http://www.mkdocs.org/user-guide/plugins/)\n\n## acknowledgement\n\nthis work is based on the [mkdocs-markdownextradata-plugin](https://github.com/rosscdh/mkdocs-markdownextradata-plugin) project and the [finding and fixing website link rot with python, beautifulsoup and requests](https://www.twilio.com/blog/2018/07/find-fix-website-link-rot-python-beautifulsoup-requests.html) article. \n",
  "docs_url": null,
  "keywords": "mkdocs python markdown",
  "license": "mit",
  "name": "mkdocs-htmlproofer-plugin",
  "package_url": "https://pypi.org/project/mkdocs-htmlproofer-plugin/",
  "project_url": "https://pypi.org/project/mkdocs-htmlproofer-plugin/",
  "project_urls": {
    "Homepage": "https://github.com/manuzhang/mkdocs-htmlproofer-plugin"
  },
  "release_url": "https://pypi.org/project/mkdocs-htmlproofer-plugin/1.0.0/",
  "requires_dist": [
    "mkdocs (>=1.4.0)",
    "Markdown",
    "requests",
    "beautifulsoup4"
  ],
  "requires_python": ">=3.8",
  "summary": "a mkdocs plugin that validates url in rendered html files",
  "version": "1.0.0",
  "releases": [],
  "developers": [
    "manu_zhang",
    "owenzhang1990@gmail.com"
  ],
  "kwds": "enabled_htmlproofer htmlproofer mkdocs validate_external_urls validate_rendered_template",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_mkdocs_htmlproofer_plugin",
  "homepage": "https://github.com/manuzhang/mkdocs-htmlproofer-plugin",
  "release_count": 23,
  "dependency_ids": [
    "pypi_beautifulsoup4",
    "pypi_markdown",
    "pypi_mkdocs",
    "pypi_requests"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: javascript",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: astronomy",
    "topic :: scientific/engineering :: atmospheric science",
    "topic :: scientific/engineering :: chemistry",
    "topic :: scientific/engineering :: gis",
    "topic :: scientific/engineering :: mathematics",
    "topic :: scientific/engineering :: physics",
    "topic :: software development",
    "topic :: software development :: localization",
    "topic :: utilities"
  ],
  "description": ".. image:: https://travis-ci.org/coddingtonbear/python-measurement.svg?branch=master\n   :target: https://travis-ci.org/coddingtonbear/python-measurement\n\neasily use and manipulate unit-aware measurement objects in python.\n\n`django.contrib.gis.measure <https://github.com/django/django/blob/master/django/contrib/gis/measure.py>`_\nhas these wonderful 'distance' objects that can be used not only for storing a\nunit-aware distance measurement, but also for converting between different\nunits and adding/subtracting these objects from one another.\n\nthis module not only provides those distance and area measurement\nobjects, but also other measurements including:\n\n- energy\n- speed\n- temperature\n- time\n- volume\n- weight\n\nexample:\n\n.. code-block:: python\n\n   >>> from measurement.measures import weight\n   >>> weight_1 = weight(lb=125)\n   >>> weight_2 = weight(kg=40)\n   >>> added_together = weight_1 + weight_2\n   >>> added_together\n   weight(lb=213.184976807)\n   >>> added_together.kg  # maybe i actually need this value in kg?\n   96.699\n\n.. warning::\n   measurements are stored internally by converting them to a\n   floating-point number of a (generally) reasonable si unit.  given that \n   floating-point numbers are very slightly lossy, you should be aware of\n   any inaccuracies that this might cause.\n\n   tldr: do not use this in\n   `navigation algorithms guiding probes into the atmosphere of extraterrestrial worlds <http://en.wikipedia.org/wiki/mars_climate_orbiter>`_.\n\n- documentation for python-measurement is available an\n  `readthedocs <https://python-measurement.readthedocs.org/>`_.\n- please post issues on\n  `github <https://github.com/coddingtonbear/python-measurement/issues>`_.\n- test status available on\n  `travis-ci <https://travis-ci.org/coddingtonbear/python-measurement>`_.\n\n\n\n.. image:: https://d2weczhvl823v0.cloudfront.net/coddingtonbear/python-measurement/trend.png\n   :alt: bitdeli badge\n   :target: https://bitdeli.com/free\n\n\n",
  "docs_url": null,
  "keywords": "measurement",
  "license": "",
  "name": "measurement",
  "package_url": "https://pypi.org/project/measurement/",
  "project_url": "https://pypi.org/project/measurement/",
  "project_urls": {
    "Project-URL": "http://github.com/coddingtonbear/python-measurement"
  },
  "release_url": "https://pypi.org/project/measurement/3.2.2/",
  "requires_dist": [
    "sympy",
    "sphinx ; extra == \"docs\"",
    "python-docs-theme ; extra == \"docs\"",
    "pytest ; extra == \"test\"",
    "pytest-cov ; extra == \"test\""
  ],
  "requires_python": ">=3.7",
  "summary": "easily use and manipulate unit-aware measurements in python.",
  "version": "3.2.2",
  "releases": [],
  "developers": [
    "johannes@maron.family",
    "me@adamcoddington.net"
  ],
  "kwds": "measurement measures units measure distance",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_measurement",
  "homepage": "",
  "release_count": 32,
  "dependency_ids": [
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_python_docs_theme",
    "pypi_sphinx",
    "pypi_sympy"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: chemistry"
  ],
  "description": "<h1 align=\"center\">\n    chembl_downloader\n</h1>\n\n<p align=\"center\">\n    <a href=\"https://pypi.org/project/chembl_downloader\">\n        <img alt=\"pypi\" src=\"https://img.shields.io/pypi/v/chembl_downloader\" />\n    </a>\n    <a href=\"https://pypi.org/project/chembl_downloader\">\n        <img alt=\"pypi - python version\" src=\"https://img.shields.io/pypi/pyversions/chembl_downloader\" />\n    </a>\n    <a href=\"https://github.com/cthoyt/chembl_downloader/blob/main/license\">\n        <img alt=\"pypi - license\" src=\"https://img.shields.io/pypi/l/chembl_downloader\" />\n    </a>\n    <a href=\"https://zenodo.org/badge/latestdoi/390113187\">\n        <img src=\"https://zenodo.org/badge/390113187.svg\" alt=\"doi\" />\n    </a>\n    <a href=\"https://github.com/psf/black\">\n        <img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" alt=\"code style: black\" />\n    </a>\n    <a href='https://chembl-downloader.readthedocs.io/en/latest/?badge=latest'>\n        <img src='https://readthedocs.org/projects/chembl-downloader/badge/?version=latest' alt='documentation status' />\n    </a>\n</p>\n\ndon't worry about downloading/extracting chembl or versioning - just use ``chembl_downloader`` to write code that knows\nhow to download it and use it automatically.\n\ninstall with:\n\n```bash\n$ pip install chembl-downloader\n```\n\nfull technical documentation can be found on\n[readthedocs](https://chembl-downloader.readthedocs.io). tutorials can be found\nin jupyter notebooks in the [notebooks/](notebooks/) directory of the\nrepository.\n\n## database usage\n\n### download a specific version\n\n```python\nimport chembl_downloader\n\npath = chembl_downloader.download_extract_sqlite(version='28')\n```\n\nafter it's been downloaded and extracted once, it's smart and does not need to download again. it gets stored\nusing [`pystow`](https://github.com/cthoyt/pystow) automatically in the `~/.data/chembl`\ndirectory.\n\nwe'd like to implement something such that it could load directly into sqlite from the archive, but it appears this is\na [paid feature](https://sqlite.org/purchase/zipvfs).\n\n### download the latest version\n\nyou can modify the previous code slightly by omitting the `version` keyword\nargument to automatically find the latest version of chembl:\n\n```python\nimport chembl_downloader\n\npath = chembl_downloader.download_extract_sqlite()\n```\n\nthe `version` keyword argument is available for all functions in this package (e.g., including\n`connect()`, `cursor()`, and `query()`), but will be omitted below for brevity.\n\n### automate connection\n\ninside the archive is a single sqlite database file. normally, people manually untar this folder then do something with\nthe resulting file. don't do this, it's not reproducible!\ninstead, the file can be downloaded and a connection can be opened automatically with:\n\n```python\nimport chembl_downloader\n\nwith chembl_downloader.connect() as conn:\n    with conn.cursor() as cursor:\n        cursor.execute(...)  # run your query string\n        rows = cursor.fetchall()  # get your results\n```\n\nthe `cursor()` function provides a convenient wrapper around this operation:\n\n```python\nimport chembl_downloader\n\nwith chembl_downloader.cursor() as cursor:\n    cursor.execute(...)  # run your query string\n    rows = cursor.fetchall()  # get your results\n```\n\n### run a query and get a pandas dataframe\n\nthe most powerful function is `query()` which builds on the previous `connect()` function in combination\nwith [`pandas.read_sql`](https://pandas.pydata.org/docs/reference/api/pandas.read_sql.html)\nto make a query and load the results into a pandas dataframe for any downstream use.\n\n```python\nimport chembl_downloader\n\nsql = \"\"\"\nselect\n    molecule_dictionary.chembl_id,\n    molecule_dictionary.pref_name\nfrom molecule_dictionary\njoin compound_structures on molecule_dictionary.molregno == compound_structures.molregno\nwhere molecule_dictionary.pref_name is not null\nlimit 5\n\"\"\"\n\ndf = chembl_downloader.query(sql)\ndf.to_csv(..., sep='\\t', index=false)\n```\n\nsuggestion 1: use `pystow` to make a reproducible file path that's portable to other people's machines\n(e.g., it doesn't have your username in the path).\n\nsuggestion 2: rdkit is now pip-installable with `pip install rdkit-pypi`, which means most users don't have to muck\naround with complicated conda environments and configurations. one of the powerful but understated tools in rdkit is\nthe [rdkit.chem.pandastools](https://rdkit.org/docs/source/rdkit.chem.pandastools.html)\nmodule.\n\n## sdf usage\n\n### access an rdkit supplier over entries in the sdf dump\n\nthis example is a bit more fit-for-purpose than the last two. the `supplier()` function makes sure that the latest sdf\ndump is downloaded and loads it from the gzip file into a `rdkit.chem.forwardsdmolsupplier`\nusing a context manager to make sure the file doesn't get closed until after parsing is done. like the previous\nexamples, it can also explicitly take a `version`.\n\n```python\nfrom rdkit import chem\n\nimport chembl_downloader\n\nwith chembl_downloader.supplier() as suppl:\n    data = []\n    for i, mol in enumerate(suppl):\n        if mol is none or mol.getnumatoms() > 50:\n            continue\n        fp = chem.patternfingerprint(mol, fpsize=1024, tautomerfingerprints=true)\n        smi = chem.moltosmiles(mol)\n        data.append((smi, fp))\n```\n\nthis example was adapted from greg landrum's rdkit blog post\non [generalized substructure search](https://greglandrum.github.io/rdkit-blog/tutorial/substructure/2021/08/03/generalized-substructure-search.html).\n\n### iterate over smiles\n\nthis example uses the `supplier()` method and rdkit to get smiles strings from molecules \nin chembl's sdf file. if you want direct access to the rdkit molecule objects, use `supplier()`.\n\n```python\nimport chembl_downloader\n\nfor smiles in chembl_downloader.iterate_smiles():\n    print(smiles)\n```\n\n### get an rdkit substructure library\n\nbuilding on the `supplier()` function, the `get_substructure_library()`\nmakes the preparation of a [substructure library](https://www.rdkit.org/docs/cppapi/classrdkit_1_1substructlibrary.html)\nautomated and reproducible. additionally, it caches the results of the build,\nwhich takes on the order of tens of minutes, only has to be done once and future\nloading from a pickle object takes on the order of seconds.\n\nthe implementation was inspired by greg landrum's rdkit blog post,\n[some new features in the substructlibrary](https://greglandrum.github.io/rdkit-blog/tutorial/substructure/2021/12/20/substructlibrary-search-order.html).\nthe following example shows how it can be used to accomplish some of the first\ntasks presented in the post:\n\n```python\nfrom rdkit import chem\n\nimport chembl_downloader\n\nlibrary = chembl_downloader.get_substructure_library()\nquery = chem.molfromsmarts('[o,n]=c-c:1:c:c:n:c:c:1')\nmatches = library.getmatches(query)\n```\n\n## morgan fingerprints usage\n\n### get the morgan fingerprint file\n\nchembl makes a file containing pre-computed 2048 bit radius 2 morgan\nfingerprints for each molecule available. it can be downloaded using:\n\n```python\nimport chembl_downloader\n\npath = chembl_downloader.download_fps()\n```\n\nthe `version` and other keyword arguments are also valid for this function.\n\n### load fingerprints with [`chemfp`](https://chemfp.com/)\n\nthe following wraps the `download_fps` function with `chemfp`'s fingerprint\nloader:\n\n```python\nimport chembl_downloader\n\narena = chembl_downloader.chemfp_load_fps()\n```\n\nthe `version` and other keyword arguments are also valid for this function.\nmore information on working with the `arena` object can be found\n[here](https://chemfp.readthedocs.io/en/latest/using-api.html#working-with-a-fingerprintarena).\n\n## extras\n\n### store in a different place\n\nif you want to store the data elsewhere using `pystow` (e.g., in [`pyobo`](https://github.com/pyobo/pyobo)\ni also keep a copy of this file), you can use the `prefix` argument.\n\n```python\nimport chembl_downloader\n\n# it gets downloaded/extracted to \n# ~/.data/pyobo/raw/chembl/29/chembl_29/chembl_29_sqlite/chembl_29.db\npath = chembl_downloader.download_extract_sqlite(prefix=['pyobo', 'raw', 'chembl'])\n```\n\nsee the `pystow` [documentation](https://github.com/cthoyt/pystow#%ef%b8%8f-configuration) on configuring the storage\nlocation further.\n\nthe `prefix` keyword argument is available for all functions in this package (e.g., including\n`connect()`, `cursor()`, and `query()`).\n\n### download via cli\n\nafter installing, run the following cli command to ensure it and send the path to stdout\n\n```bash\n$ chembl_downloader\n```\n\nuse `--test` to show two example queries\n\n```bash\n$ chembl_downloader --test\n```\n\n## contributing\n\nplease read the contribution guidelines in [contributing.md](.github/contributing.md).\n\nif you'd like to contribute, there's a submodule called `chembl_downloader.queries`\nwhere you can add a useful sql queries along with a description of what it does for easy\nimporting and reuse.\n\n## users\n\nsee [who's using `chembl-downloader`](https://github.com/search?q=chembl_downloader+-user%3acthoyt&type=code).\n\n## statistics and compatibility\n\n`chembl-downloader` is compatible with all versions of chembl. however, some files are\nnot available for all versions. for example, the sqlite version of the database was first\nadded in release 21 (2015-02-12).\n\n|   chembl version | release date   | total named compounds *from sqlite* |\n|------------------|----------------|------------------------------------:|\n|               31 | 2022-07-12     |                              41,585 |\n|               30 | 2022-02-22     |                              41,549 |\n|               29 | 2021-07-01     |                              41,383 |\n|               28 | 2021-01-15     |                              41,049 |\n|               27 | 2020-05-18     |                              40,834 |\n|               26 | 2020-02-14     |                              40,822 |\n|               25 | 2019-02-01     |                              39,885 |\n|             24_1 | 2018-05-01     |                              39,877 |\n|               24 |                |                                     |\n|               23 | 2017-05-18     |                              39,584 |\n|             22_1 | 2016-11-17     |                                     |\n|               22 |                |                              39,422 |\n|               21 | 2015-02-12     |                              39,347 |\n|               20 | 2015-02-03     |                                   - |\n|               19 | 2014-07-2333   |                                   - |\n|               18 | 2014-04-02     |                                   - |\n|               17 | 2013-09-16     |                                   - |\n|               16 | 2013-055555-15 |                                   - |\n|               15 | 2013-01-30     |                                   - |\n|               14 | 2012 -07-18    |                                   - |\n|               13 | 2012-02-29     |                                   - |\n|               12 | 2011-11-30     |                                   - |\n|               11 | 2011-06-07     |                                   - |\n|               10 | 2011-06-07     |                                   - |\n|               09 | 2011-01-04     |                                   - |\n|               08 | 2010-11-05     |                                   - |\n|               07 | 2010-09-03     |                                   - |\n|               06 | 2010-09-03     |                                   - |\n|               05 | 2010-06-07     |                                   - |\n|               04 | 2010-05-26     |                                   - |\n|               03 | 2010-04-30     |                                   - |\n|               02 | 2009-12-07     |                                   - |\n|               01 | 2009-10-28     |                                   - |\n",
  "docs_url": null,
  "keywords": "chembl,sqlite",
  "license": "mit",
  "name": "chembl-downloader",
  "package_url": "https://pypi.org/project/chembl-downloader/",
  "project_url": "https://pypi.org/project/chembl-downloader/",
  "project_urls": {
    "Bug Tracker": "https://github.com/cthoyt/chembl_downloader/issues",
    "Download": "https://github.com/cthoyt/chembl_downloader/releases",
    "Homepage": "https://github.com/cthoyt/chembl_downloader",
    "Source Code": "https://github.com/cthoyt/chembl_downloader"
  },
  "release_url": "https://pypi.org/project/chembl-downloader/0.4.4/",
  "requires_dist": [
    "click",
    "more-click",
    "pystow",
    "tqdm",
    "typing-extensions",
    "sphinx ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "sphinx-click ; extra == 'docs'",
    "sphinx-autodoc-typehints ; extra == 'docs'",
    "sphinx-automodapi ; extra == 'docs'",
    "pandas ; extra == 'pandas'",
    "rdkit-pypi ; extra == 'rdkit'",
    "pytest ; extra == 'tests'",
    "coverage ; extra == 'tests'"
  ],
  "requires_python": ">=3.7",
  "summary": "reproducibly download, open, parse, and query chembl",
  "version": "0.4.4",
  "releases": [],
  "developers": [
    "charles_tapley_hoyt",
    "cthoyt@gmail.com"
  ],
  "kwds": "chembl_downloader chembl_29_sqlite download_extract_sqlite chembl_id chembl",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_chembl_downloader",
  "homepage": "https://github.com/cthoyt/chembl_downloader",
  "release_count": 16,
  "dependency_ids": [
    "pypi_click",
    "pypi_coverage",
    "pypi_more_click",
    "pypi_pandas",
    "pypi_pystow",
    "pypi_pytest",
    "pypi_rdkit_pypi",
    "pypi_sphinx",
    "pypi_sphinx_autodoc_typehints",
    "pypi_sphinx_automodapi",
    "pypi_sphinx_click",
    "pypi_sphinx_rtd_theme",
    "pypi_tqdm",
    "pypi_typing_extensions"
  ]
}
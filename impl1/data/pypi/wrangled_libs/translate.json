{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: end users/desktop",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.5",
    "topic :: education"
  ],
  "description": "\n========================\ntranslate tool in python\n========================\n\n|pypi latest| |pypi version| |pypi license| |docs| |travis build status|\n\n\ntranslate is a simple but powerful translation tool written in python with with support for\nmultiple translation providers. by now we offer integration with microsoft translation api,\ntranslated mymemory api, libretranslate, and deepl's free and pro apis\n\n\nwhy should i use this?\n----------------------\n\nthe biggest reason to use translate is to  make translations in a simple way without the need of bigger\neffort and can be used as a translation tool like command line\n\n\n\ninstallation\n------------\n\n.. code-block:: bash\n\n   $ pip install translate\n\nor, you can download the source and\n\n.. code-block:: bash\n\n   $ python setup.py install\n\nprefix 'sudo' if you encounter a problem.\n\n\nfeatures\n--------\n\n- translate your output in real time\n- do translation in your terminal using the command line\n\nusage\n-----\n\nin your command-line:\n\n.. code-block:: bash\n\n   $ translate-cli -t zh \"this is a pen.\"\n\n   translation: \u8fd9\u662f\u4e00\u652f\u7b14\n   -------------------------\n   translated by: mymemory\n\nor\n\n.. code-block:: bash\n\n   $ translate-cli -t zh \"this is a pen.\" -o\n   \u8fd9\u662f\u4e00\u652f\u7b14\n\noptions\n~~~~~~~\n\n.. code-block:: bash\n\n    $ translate-cli --help\n    usage: __main__.py [options] text...\n\n      python command line tool to make online translations\n\n      example:\n\n           $ translate-cli -t zh the book is on the table\n           \u7897\u662f\u5728\u684c\u5b50\u4e0a\u3002\n\n      available languages:\n\n           https://en.wikipedia.org/wiki/iso_639-1\n           examples: (e.g. en, ja, ko, pt, zh, zh-tw, ...)\n\n    options:\n      --version                 show the version and exit.\n      --generate-config-file    generate the config file using a wizard and exit.\n      -f, --from text           sets the language of the text being translated.\n                                the default value is 'autodetect'.\n      -t, --to text             set the language you want to translate.\n      -p, --provider text       set the provider you want to use. the default\n                                value is 'mymemory'.\n      --secret_access_key text  set the secret access key used to get provider\n                                oauth token.\n      -o, --output_only         set to display the translation only.\n      --help                    show this message and exit.\n\n\nchange default languages\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nin ~/.python-translate.cfg:\n\n.. code-block:: bash\n\n   [default]\n   from_lang = autodetect\n   to_lang = de\n   provider = mymemory\n   secret_access_key =\n\nthe cfg is not for use as a python module.\n\nor run the command line and follow the steps:\n\n.. code-block:: bash\n\n    $ translate-cli --generate-config-file\n    translate from [autodetect]:\n    translate to: <language you want to translate>\n    provider [mymemory]:\n    secret access key []:\n\n\nuse as a python module\n----------------------\n\n.. code-block:: python\n\n   in [1]: from translate import translator\n   in [2]: translator= translator(to_lang=\"zh\")\n   in [3]: translation = translator.translate(\"this is a pen.\")\n   out [3]: \u8fd9\u662f\u4e00\u652f\u7b14\n\nthe result is usually a unicode string.\n\n\nuse a different translation provider\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    in [1]: from translate import translator\n    in [2]: to_lang = 'zh'\n    in [3]: secret = '<your secret from microsoft or deepl>'\n    in [4]: translator = translator(provider='<the name of the provider, eg. microsoft or deepl>', to_lang=to_lang, secret_access_key=secret)\n    in [5]: translator.translate('the book is on the table')\n    out [5]: '\u7897\u662f\u5728\u684c\u5b50\u4e0a\u3002'\n\nthe deepl provider\n~~~~~~~~~~~~~~~~~~\nto use deepl's pro api, pass an additional parameter called pro to the translator object and set it to true and use your pro authentication key as the secret_access_key\n\n.. code-block:: python\n\n    in: translator = translator(provider='microsoft', to_lang=to_lang, secret_access_key=secret, pro=true)\n\ndocumentation\n-------------\n\ncheck out the latest ``translate`` documentation at `read the docs <http://translate-python.readthedocs.io/en/latest/>`_\n\n\ncontributing\n------------\n\nplease send pull requests, very much appreciated.\n\n\n1. fork the `repository <https://github.com/terryyin/translate-python>`_ on github.\n2. make a branch off of master and commit your changes to it.\n3. install requirements. ``pip install -r requirements-dev.txt``\n4. install pre-commit. ``pre-commit install``\n5. run the tests with ``py.test -vv -s``\n6. create a pull request with your contribution\n\n\n\n.. |docs| image:: https://readthedocs.org/projects/translate-python/badge/?version=latest\n   :target: http://translate-python.readthedocs.org/en/latest/?badge=latest\n.. |travis build status| image:: https://api.travis-ci.org/terryyin/translate-python.png?branch=master\n   :target: https://travis-ci.org/terryyin/translate-python\n.. |pypi version| image:: https://img.shields.io/pypi/pyversions/translate.svg?maxage=2592000\n   :target: https://pypi.python.org/pypi/translate\n.. |pypi license| image:: https://img.shields.io/pypi/l/translate.svg?maxage=2592000\n   :target: https://github.com/terryyin/translate-python/blob/master/license\n.. |pypi latest| image:: https://img.shields.io/pypi/v/translate.svg?maxage=360\n   :target: https://pypi.python.org/pypi/translate\n\n\nchangelog\n---------\n\n3.6.1\n-----\n\n* add libretranslate\n\n3.5.0\n-----\n\n* add sphinx documentation\n* update readme.\n\n3.4.1\n-----\n\n* makefile: add a make release command\n* add twine to dev requirements.\n\n3.4.0\n-----\n\n* refactor: create a folder to add all providers instead to let in a single file\n* add microsoft provider\n* add more documentation to all providers (translated-mymemory and microsoft translator)\n* add arguments to change the default provider using translate-cli\n\n\n3.3.0\n-----\n\n* refactor translate-cli (command line interface) using click library instead of argparser\n* unify translate-cli and main to avoid duplicate code\n* add documentation to be used on helper commands on translate-cli\n* remove unnecessary code\n* refactor setup to complete information in the pkg-info used by pypi\n\n\n3.2.1\n-----\n\n* change the license from \"beer-ware\" to mit\n\n3.2.0\n-----\n\n* add multiple providers suport\n\n3.1.0\n-----\n\n* apply solid principles\n* organize project\n* add pre-commit, pytest\n* add new make file\n* add new test cases\n\n3.0.0\n-----\n\n* general refactor\n* remove urllib to use requests\n* refactor methods names removing google from then\n* apply pep8\n* change contructor to keep it the code simple\n\n2.0.0 (2017-11-08)\n------------------\n\n* initial release using changes file\n\n\n",
  "docs_url": null,
  "keywords": "translate translation command line",
  "license": "mit",
  "name": "translate",
  "package_url": "https://pypi.org/project/translate/",
  "project_url": "https://pypi.org/project/translate/",
  "project_urls": {
    "Homepage": "https://github.com/terryyin/google-translate-python"
  },
  "release_url": "https://pypi.org/project/translate/3.6.1/",
  "requires_dist": [
    "click",
    "lxml",
    "requests",
    "libretranslatepy (==2.1.1)"
  ],
  "requires_python": "",
  "summary": "this is a simple, yet powerful command line translator with google translate behind it. you can also use it as a python module in your code.",
  "version": "3.6.1",
  "releases": [],
  "developers": [
    "terry.yinze@gmail.com",
    "terry_yin"
  ],
  "kwds": "translator translations pip translate translation",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_translate",
  "homepage": "https://github.com/terryyin/google-translate-python",
  "release_count": 16,
  "dependency_ids": [
    "pypi_click",
    "pypi_libretranslatepy",
    "pypi_lxml",
    "pypi_requests"
  ]
}
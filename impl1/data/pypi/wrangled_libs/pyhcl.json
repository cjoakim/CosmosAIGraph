{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mozilla public license 2.0 (mpl 2.0)",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "topic :: text processing"
  ],
  "description": "pyhcl\n=====\n\nimplements a parser for `hcl (hashicorp configuration\nlanguage) <https://github.com/hashicorp/hcl>`__ in python. this\nimplementation aims to be compatible with the original golang version of\nthe parser.\n\npyhcl does not support hcl2 (which is what modern terraform uses). you might try\nhttps://pypi.org/project/python-hcl2/ instead (though i've never personally tried it).\n\nthe grammar and many of the tests/fixtures were copied/ported from the\ngolang parser into pyhcl. all releases are tested with a variety of \npython versions from python 2.7 onward.\n\nthis version has been modified to work with terraform 0.12 syntax.  \nit should be backward compatible with earlier versions.  \nit doesn't cover every situation.  see discussion in pull request:\nhttps://github.com/virtuald/pyhcl/pull/57\n\ninstallation\n============\n\n::\n\n    pip install pyhcl\n\nusage\n=====\n\nthis module is intended to be used in mostly the same way that one would\nuse the json module in python, and load/loads/dumps are implemented.\n\n::\n\n    import hcl\n\n    with open('file.hcl', 'r') as fp:\n        obj = hcl.load(fp)\n\ncurrently the dumps function outputs json, and not hcl.\n\nconvert hcl to json\n-------------------\n\npyhcl comes with a script that you can use to easily convert hcl to json,\nsimilar to the json.tool that comes with python::\n\n\thcltool infile [outfile]\n\t\nstructure validation\n--------------------\n\nsimilar to json, the output of parsing hcl is a python dictionary with\nno defined structure. the golang library for hcl implements support for\nparsing hcl according to defined objects, but this implementation does\nnot currently support such constructs.\n\ninstead, i recommend that you use tools designed to validate json, such\nas the `schematics <https://pypi.python.org/pypi/schematics>`_ library. \n\nsyntax\n======\n\n-  single line comments start with ``#`` or ``//``\n\n-  multi-line comments are wrapped in ``/*`` and ``*/``\n\n-  values are assigned with the syntax ``key = value`` (whitespace\n   doesn't matter). the value can be any primitive: a string, number,\n   boolean, object, or list.\n\n-  strings are double-quoted and can contain any utf-8 characters.\n   example: ``\"hello, world\"``\n\n-  numbers are assumed to be base 10. if you prefix a number with 0x, it\n   is treated as a hexadecimal. if it is prefixed with 0, it is treated\n   as an octal. numbers can be in scientific notation: \"1e10\".\n\n-  boolean values: ``true``, ``false``\n\n-  arrays can be made by wrapping it in ``[]``. example:\n   ``[\"foo\", \"bar\", 42]``. arrays can contain primitives and other\n   arrays, but cannot contain objects. objects must use the block syntax\n   shown below.\n\nobjects and nested objects are created using the structure shown below::\n\n    variable \"ami\" {\n        description = \"the ami to use\"\n    }\n\ntesting\n=======\n\nto run the tests::\n\n    pip install -r testing-requirements.txt\n    tests/run_tests.sh\n    \ndebug mode\n----------\n\nto enable debug mode::\n\n    import hcl\n    hcl.parser.debug = true\n\nauthors\n=======\n\ndustin spicuzza (dustin@virtualroadside.com)\n\nnote: this project is not associated with hashicorp\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "pyhcl",
  "package_url": "https://pypi.org/project/pyhcl/",
  "project_url": "https://pypi.org/project/pyhcl/",
  "project_urls": {
    "Homepage": "https://github.com/virtuald/pyhcl"
  },
  "release_url": "https://pypi.org/project/pyhcl/0.4.5/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "hcl configuration parser for python",
  "version": "0.4.5",
  "releases": [],
  "developers": [
    "dustin@virtualroadside.com",
    "dustin_spicuzza"
  ],
  "kwds": "pyhcl terraform pip hcl golang",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pyhcl",
  "homepage": "https://github.com/virtuald/pyhcl",
  "release_count": 40,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules",
    "topic :: utilities",
    "typing :: typed"
  ],
  "description": "discord.py\n==========\n\n.. image:: https://discord.com/api/guilds/336642139381301249/embed.png\n   :target: https://discord.gg/r3sskjj\n   :alt: discord server invite\n.. image:: https://img.shields.io/pypi/v/discord.py.svg\n   :target: https://pypi.python.org/pypi/discord.py\n   :alt: pypi version info\n.. image:: https://img.shields.io/pypi/pyversions/discord.py.svg\n   :target: https://pypi.python.org/pypi/discord.py\n   :alt: pypi supported python versions\n\na modern, easy to use, feature-rich, and async ready api wrapper for discord written in python.\n\nkey features\n-------------\n\n- modern pythonic api using ``async`` and ``await``.\n- proper rate limit handling.\n- optimised in both speed and memory.\n\ninstalling\n----------\n\n**python 3.8 or higher is required**\n\nto install the library without full voice support, you can just run the following command:\n\n.. code:: sh\n\n    # linux/macos\n    python3 -m pip install -u discord.py\n\n    # windows\n    py -3 -m pip install -u discord.py\n\notherwise to get voice support you should run the following command:\n\n.. code:: sh\n\n    # linux/macos\n    python3 -m pip install -u \"discord.py[voice]\"\n\n    # windows\n    py -3 -m pip install -u discord.py[voice]\n\n\nto install the development version, do the following:\n\n.. code:: sh\n\n    $ git clone https://github.com/rapptz/discord.py\n    $ cd discord.py\n    $ python3 -m pip install -u .[voice]\n\n\noptional packages\n~~~~~~~~~~~~~~~~~~\n\n* `pynacl <https://pypi.org/project/pynacl/>`__ (for voice support)\n\nplease note that when installing voice support on linux, you must install the following packages via your favourite package manager (e.g. ``apt``, ``dnf``, etc) before running the above commands:\n\n* libffi-dev (or ``libffi-devel`` on some systems)\n* python-dev (e.g. ``python3.8-dev`` for python 3.8)\n\nquick example\n--------------\n\n.. code:: py\n\n    import discord\n\n    class myclient(discord.client):\n        async def on_ready(self):\n            print('logged on as', self.user)\n\n        async def on_message(self, message):\n            # don't respond to ourselves\n            if message.author == self.user:\n                return\n\n            if message.content == 'ping':\n                await message.channel.send('pong')\n\n    intents = discord.intents.default()\n    intents.message_content = true\n    client = myclient(intents=intents)\n    client.run('token')\n\nbot example\n~~~~~~~~~~~~~\n\n.. code:: py\n\n    import discord\n    from discord.ext import commands\n\n    intents = discord.intents.default()\n    intents.message_content = true\n    bot = commands.bot(command_prefix='>', intents=intents)\n\n    @bot.command()\n    async def ping(ctx):\n        await ctx.send('pong')\n\n    bot.run('token')\n\nyou can find more examples in the examples directory.\n\nlinks\n------\n\n- `documentation <https://discordpy.readthedocs.io/en/latest/index.html>`_\n- `official discord server <https://discord.gg/r3sskjj>`_\n- `discord api <https://discord.gg/discord-api>`_\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "discord.py",
  "package_url": "https://pypi.org/project/discord.py/",
  "project_url": "https://pypi.org/project/discord.py/",
  "project_urls": {
    "Documentation": "https://discordpy.readthedocs.io/en/latest/",
    "Homepage": "https://github.com/Rapptz/discord.py",
    "Issue tracker": "https://github.com/Rapptz/discord.py/issues"
  },
  "release_url": "https://pypi.org/project/discord.py/2.3.2/",
  "requires_dist": [
    "aiohttp (<4,>=3.7.4)",
    "sphinx (==4.4.0) ; extra == 'docs'",
    "sphinxcontrib-trio (==1.1.2) ; extra == 'docs'",
    "sphinxcontrib-websupport ; extra == 'docs'",
    "typing-extensions (<5,>=4.3) ; extra == 'docs'",
    "orjson (>=3.5.4) ; extra == 'speed'",
    "aiodns (>=1.1) ; extra == 'speed'",
    "Brotli ; extra == 'speed'",
    "cchardet (==2.1.7) ; (python_version < \"3.10\") and extra == 'speed'",
    "coverage[toml] ; extra == 'test'",
    "pytest ; extra == 'test'",
    "pytest-asyncio ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytest-mock ; extra == 'test'",
    "typing-extensions (<5,>=4.3) ; extra == 'test'",
    "PyNaCl (<1.6,>=1.3.0) ; extra == 'voice'"
  ],
  "requires_python": ">=3.8.0",
  "summary": "a python wrapper for the discord api",
  "version": "2.3.2",
  "releases": [],
  "developers": [
    "rapptz"
  ],
  "kwds": "discordpy discord python3 pyversions py",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_discord.py",
  "homepage": "https://github.com/rapptz/discord.py",
  "release_count": 77,
  "dependency_ids": [
    "pypi_aiodns",
    "pypi_aiohttp",
    "pypi_brotli",
    "pypi_cchardet",
    "pypi_coverage",
    "pypi_orjson",
    "pypi_pynacl",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_pytest_mock",
    "pypi_sphinx",
    "pypi_sphinxcontrib_trio",
    "pypi_sphinxcontrib_websupport",
    "pypi_typing_extensions"
  ]
}
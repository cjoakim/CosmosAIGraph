{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: gnu library or lesser general public license (lgpl)",
    "operating system :: os independent",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http :: dynamic content",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "demjson3\n=======\n[![build status](https://app.travis-ci.com/nielstron/demjson3.svg?branch=master)](https://app.travis-ci.com/nielstron/demjson3)\n[![coverage status](https://coveralls.io/repos/github/nielstron/demjson3/badge.svg?branch=master)](https://coveralls.io/github/nielstron/demjson3?branch=master)\n[![package version](https://img.shields.io/pypi/v/demjson3)](https://pypi.org/project/demjson3/)\n[![python versions](https://img.shields.io/pypi/pyversions/demjson3.svg)](https://pypi.org/project/demjson3/)\n\nthis is a fork of the popular tool [demjson](https://github.com/dmeranda/demjson) to only support python 3.\nthe decision to do this is mainly based on all the headache caused\nby trying to support python 2 and 3.\n\n<b>demjson3</b> is a [python language](http://python.org/) module for\nencoding, decoding, and syntax-checking [json](http://json.org/)\ndata.  it works under python 3.\n\nit comes with a <b>jsonlint</b> script which can be used to validate\nyour json documents for strict conformance to the json specification,\nand to detect potential data portability issues.  it can also reformat\nor pretty-print json documents; either by re-indenting or removing\nunnecessary whitespace.\n\n\nwhat's new\n==========\n\n<b>version 3.0.0</b> will start to only work under python 3.\n\n<b>version 2.2.4</b> fixes problem with jsonlint under python 3 when\ntrying to reformat json (-f or -f options) and writing the output to\nstandard output.\n\n<b>version 2.2.3</b> fixes incorrect return values from the \"jsonlint\"\ncommand.  also fixes a minor problem with the included unit tests in\ncertain python versions.\n\n<b>version 2.2.2</b> fixes installation problems with certain python 3\nversions prior to python 3.4.  no other changes.\n\n<b>version 2.2.1</b> adds an enhancement for html safety, and a few\nobscure bug fixes.\n\n<b>version 2.2</b> fixes compatibility with python 2.6 and\nnarrow-unicode pythons, fixes bugs with statistics, and adds many\nenhancements to the treatment of numbers and floating-point values.\n\n<b>version 2.0.1</b> is a re-packaging of 2.0, after discovering\nproblems with incorrect checksums in the pypi distribution of 2.0.  no\nchanges were made from 2.0.\n\n<b>version 2.0</b>, released 2014-05-21, is a major new version with many\nchanges and improvements.\n\nvisit http://nielstron.github.io/demjson3/ for complete details and documentation. additional documentation may also be found\nunder the \"docs/\" folder of the source.\n\nthe biggest changes in 2.0 include:\n\n  * now works in python 3; minimum version supported is python 2.6\n  * much improved reporting of errors and warnings\n  * extensible with user-supplied hooks\n  * handles many additional python data types automatically\n  * statistics\n\nthere are many more changes.\n\n\nexample use\n===========\n\nto use demjson3 from within your python programs:\n\n```python\n    >>> import demjson3\n\n    >>> demjson3.encode( ['one',42,true,none] )    # from python to json\n    '[\"one\",42,true,null]'\n\n    >>> demjson3.decode( '[\"one\",42,true,null]' )  # from json to python\n    ['one', 42, true, none]\n```\n\nto check a json data file for errors or problems:\n\n```bash\n    $ jsonlint my.json\n\n    my.json:1:8: error: numbers may not have extra leading zeros: '017'\n       |  at line 1, column 8, offset 8\n    my.json:4:10: warning: object contains same key more than once: 'name'\n       |  at line 4, column 10, offset 49\n       |  object started at line 1, column 0, offset 0 (at-start)\n    my.json:9:11: warning: integers larger than 53-bits are not portable\n       |  at line 9, column 11, offset 142\n    my.json: has errors\n```\n\n\nwhy use demjson3?\n================\n\ni wrote demjson3 before python had any json support in its standard\nlibrary.  if all you need is to be able to read or write json data,\nthen you may wish to just use what's built into python.\n\nhowever demjson3 is extremely feature rich and is quite useful in\ncertain applications.  it is especially good at error checking\njson data and for being able to parse more of the javascript syntax\nthan is permitted by strict json.\n\na few advantages of demjson3 are:\n\n * it generally has better error handling and \"lint\" checking capabilities;\n\n * it will automatically use the python decimal (bigfloat) class\n   instead of a floating-point number whenever there might be an\n   overflow or loss of precision otherwise.\n\n * it can correctly deal with different unicode encodings, including ascii.\n   it will automatically adapt when to use \\u-escapes based on the encoding.\n\n * it generates more conservative json, such as escaping unicode\n   format control characters or line terminators, which should improve\n   data portability.\n\n * in non-strict mode it can also deal with slightly non-conforming\n   input that is more javascript than json (such as allowing comments).\n\n * it supports a broader set of python types during conversion.\n\n\ninstallation\n============\n\nto install, type:\n\n```bash\n   python setup.py install\n```\n\nor optionally just copy the file \"demjson3.py\" to whereever you want.\nsee \"docs/install.txt\" for more detailed instructions, including how\nto run the self-tests.\n\n\nmore information\n================\n\nsee the files under the \"docs\" subdirectory.  the module is also\nself-documented, so within the python interpreter type:\n\n```python\n    import demjson3\n    help(demjson3)\n```\n\nor from a shell command line:\n\n```bash\n    pydoc demjson3\n```\n\nthe \"jsonlint\" command script which gets installed as part of demjson3\nhas built-in usage instructions as well.  just type:\n\n```bash\n   jsonlint --help\n```\n\ncomplete documentation and additional information is also available\non the project homepage at http://nielstron.github.io/demjson3/\n\nit is also available on the python package index (pypi) at\nhttp://pypi.python.org/pypi/demjson3/\n\n\nlicense\n=======\n\nlgplv3 - see the included \"license.txt\" file.\n\nthis software is free software and is licensed under the terms of the\ngnu lgpl (gnu lesser general public license).  more information is\nfound at the top of the demjson3.py source file and the included\nlicense.txt file.\n\nreleases prior to 1.4 were released under a different license, be\nsure to check the corresponding license.txt file included with them.\n\nthis software was written by deron meranda, http://deron.meranda.us/ and adjusted\nfor python 3 only support by niels m\u00fcndler.\n",
  "docs_url": null,
  "keywords": "json,jsonlint,javascript,utf-32",
  "license": "gnu lgpl 3.0",
  "name": "demjson3",
  "package_url": "https://pypi.org/project/demjson3/",
  "project_url": "https://pypi.org/project/demjson3/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/demjson3/3.0.6/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "encoder, decoder, and lint/validator for json (javascript object notation) compliant with rfc 7159",
  "version": "3.0.6",
  "releases": [],
  "developers": [
    "deron.meranda@gmail.com",
    "deron_meranda"
  ],
  "kwds": "demjson3 demjson jsonlint json deron",
  "license_kwds": "gnu lgpl 3.0",
  "libtype": "pypi",
  "id": "pypi_demjson3",
  "homepage": "",
  "release_count": 7,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: installation/setup"
  ],
  "description": "## dephell venvs\n\n[![travis](https://travis-ci.org/dephell/dephell_venvs.svg?branch=master)](https://travis-ci.org/dephell/dephell_venvs)\n[![appveyor](https://ci.appveyor.com/api/projects/status/github/dephell/dephell_venvs?svg=true)](https://ci.appveyor.com/project/orsinium/dephell-venvs)\n[![mit license](https://img.shields.io/pypi/l/dephell-venvs.svg)](https://github.com/dephell/dephell_venvs/blob/master/license)\n\nmanage python virtual environments.\n\n## installation\n\ninstall from [pypi](https://pypi.org/project/dephell-venvs):\n\n```bash\npython3 -m pip install --user dephell_venvs\n```\n\n## get venv from manager\n\n```python\nfrom pathlib import path\nfrom dephell_venvs import venv, venvs\n\n# pass here path with substitutions:\nvenvs = venvs(path=path() / '{project}-{digest}' / '{env}')\n```\n\n`venvs` gets argument `path` that is path to the virtual environment with substitutions:\n\n+ `{project}` - last part of the path to the project.\n+ `{digest}` - short hash of full path to the project to avoid collisions.\n+ `{env}` - name of sub-environment because most of project need more than one environment. for example, `tests`, `docs`, `tests-py35`.\n\nways to get `venv` object from `venvs`:\n\n+ `venvs.get(project_path, env)`. pass here path to the project and sub-environment name and dephell will substitute them is the path template and return `venv` instance for this path.\n+ `venvs.get_by_name(name)`. pass only name and this will be substituted as `{project}` and other substitutions (`{digest}`, `{env}`) will be just dropped out.\n+ `venvs.current` -- returns current active venv if some venv is active.\n\nexample:\n\n```python\nvenv = venvs.get(project_path=path('dephell_venvs'), env='pytest')\n# venv(path=posixpath('dephell_venvs/pytest'), project='dephell_venvs', env='pytest')\n```\n\n## manage venv\n\n`venv` can be got from `venvs` ot created manually:\n\n```python\nvenv = venv(path=path('venv'))\n```\n\ncheck existence:\n\n```python\nvenv.exists()\n# false\n```\n\ncreate and destroy:\n\n```python\nvenv.create()\nvenv.destroy()\n```\n\nsome other useful information:\n\n```python\nvenv.bin_path\n# posixpath('dephell_venvs-njyt/pytest/bin')\nvenv.lib_path\n# posixpath('dephell_venvs-njyt/pytest/lib/python3.7/site-packages')\nvenv.python_path\n# posixpath('dephell_venvs-njyt/pytest/bin/python3.7')\n\nvenv.prompt\n# 'dephell_venvs/pytest'\n\nvenv.python\n# python(path=posixpath('dephell_venvs-njyt/pytest/bin/python3.7'), version='3.7.0', implementation='python', abstract=false)\n```\n\nfor details about `python` object see [dephell_pythons](https://github.com/dephell/dephell_pythons).\n",
  "docs_url": null,
  "keywords": "dephell,packaging,venv,pipenv,virtualenv",
  "license": "mit",
  "name": "dephell-venvs",
  "package_url": "https://pypi.org/project/dephell-venvs/",
  "project_url": "https://pypi.org/project/dephell-venvs/",
  "project_urls": {
    "Repository": "https://github.com/dephell/dephell_venvs"
  },
  "release_url": "https://pypi.org/project/dephell-venvs/0.1.18/",
  "requires_dist": [
    "attrs",
    "dephell-pythons",
    "requests"
  ],
  "requires_python": ">=3.5",
  "summary": "manage virtual environments",
  "version": "0.1.18",
  "releases": [],
  "developers": [
    "gram",
    "master_fess@mail.ru"
  ],
  "kwds": "dephell_pythons dephell_venvs virtualenv pip pipenv",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_dephell_venvs",
  "homepage": "",
  "release_count": 12,
  "dependency_ids": [
    "pypi_attrs",
    "pypi_dephell_pythons",
    "pypi_requests"
  ]
}
{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# libify\nlibify makes it easy to import notebooks in databricks. notebook imports can also be nested to create complex workflows easily. supports databricks runtime version 5.5 and above.\n\n<details>\n  <summary><strong>installation</strong></summary>\n\n1. click the **clusters** icon in the sidebar\n2. click a cluster name (make sure the cluster is running)\n3. click the **libraries** tab\n4. click **install new**\n5. under **library source**, choose **pypi**\n6. under **package**, write **libify**\n7. click **install**\n\n[![capture.png](https://i.postimg.cc/4nstmpxr/capture.png)](https://postimg.cc/g97ntk8q)\n\n</details>\n\n### typical usage\n\nafter installing the package, add the following code snippets to the notebooks:\n\n1. in the **importee notebook** (the notebook to be imported), add the following cell at the **end** of the notebook. make sure that `dbutils.notebook.exit` is not used anywhere in the notebook and that the last cell contains exactly the following snippet and nothing else:\n    ``` python\n    import libify\n    libify.exporter(globals())\n    ```\n\n\n2. in the **importer notebook** (the notebook that imports other notebooks), first import `libify`:\n    ``` python\n    import libify\n    ```\n    and then use the following code to import the notebook(s) of your choice:\n    ``` python\n    mod1 = libify.importer(globals(), '/path/to/importee1')\n    mod2 = libify.importer(globals(), '/path/to/importee2')\n    ```\n    everything defined in `importee1` and `importee2` would now be contained in the namespaces `mod1` and `mod2` respectively, and can be accessed using the dot notation, e.g.\n    ```python\n    x = mod1.function_defined_in_importee1()\n    ```\n\n\n### databricks community cloud workaround\ndatabricks community cloud (https://community.cloud.databricks.com) does not allow calling one notebook from another notebook, but notebooks can still be imported using the following workaround. however, both of the following steps will have to be run each time a cluster is created/restarted.\n\n1. run step 1 from above (**typical usage**). make a note of the output of the last cell (only the part marked below):\n    [![capture.png](https://i.postimg.cc/jdpr39v6/capture.png)](https://postimg.cc/ppw7psly)\n\n2. in the **importer notebook**, call `libify.importer` with the `config` parameter as the dictionary obtained from the previous step:\n    ``` python\n    import libify\n    mod1 = libify.importer(globals(), config={\"key\": \"t5grauduh9usbhhirj2c9r4ubrxut2wia4ayipl3ggo=\", \"file\": \"/tmp/tmpmcoypj24\"})\n    ```\n\n\n---\n![build/push pipeline](https://github.com/vagrantism/libify/workflows/build%20and%20publish%20to%20pypi%20and%20testpypi/badge.svg) ![github issues](https://img.shields.io/github/issues/vagrantism/libify) ![pypi - format](https://img.shields.io/pypi/format/libify) ![pypi version](https://badge.fury.io/py/libify.svg) ![github last commit](https://img.shields.io/github/last-commit/vagrantism/libify) ![github tag (latest by date)](https://img.shields.io/github/v/tag/vagrantism/libify) ![visitors](https://visitor-badge.laobi.icu/badge?page_id=libify_main_ctr) ![downloads](https://pepy.tech/badge/libify)\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "libify",
  "package_url": "https://pypi.org/project/libify/",
  "project_url": "https://pypi.org/project/libify/",
  "project_urls": {
    "Homepage": "https://github.com/vagrantism/libify"
  },
  "release_url": "https://pypi.org/project/libify/0.78/",
  "requires_dist": [],
  "requires_python": ">=3.5",
  "summary": "import databricks notebooks as libraries/modules",
  "version": "0.78",
  "releases": [],
  "developers": [
    "29144316+vagrantism@users.noreply.github.com",
    "madhup_sukoon"
  ],
  "kwds": "databricks clusters cluster notebook importer",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_libify",
  "homepage": "https://github.com/vagrantism/libify",
  "release_count": 3,
  "dependency_ids": []
}
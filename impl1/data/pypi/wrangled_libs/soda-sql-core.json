{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: apache software license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "<p align=\"center\"><img src=\"https://raw.githubusercontent.com/sodadata/docs/main/assets/images/soda-banner.png\" alt=\"soda logo\" /></p>\n\n<h1 align=\"center\">soda sql</h1>\n<p align=\"center\"><b>data testing, monitoring and profiling for sql accessible data.</b></p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/sodadata/soda-sql/blob/main/license\"><img src=\"https://img.shields.io/badge/license-apache%202-blue.svg\" alt=\"license: apache 2.0\"></a>\n  <a href=\"https://join.slack.com/t/soda-community/shared_invite/zt-m77gajo1-nxjf7jtbbrht2zwailb9pg\"><img alt=\"slack\" src=\"https://img.shields.io/badge/chat-slack-green.svg\"></a>\n  <a href=\"https://pypi.org/project/soda-sql/\"><img alt=\"pypi soda sql\" src=\"https://img.shields.io/badge/pypi-soda%20sql-green.svg\"></a>\n  <a href=\"https://github.com/sodadata/soda-sql/actions/workflows/build.yml\"><img alt=\"build soda-sql\" src=\"https://github.com/sodadata/soda-sql/actions/workflows/build.yml/badge.svg\"></a>\n</p>\n\n**what does soda sql do?**\n\nsoda sql allows you to\n\n * stop your pipeline when bad data is detected\n * extract metrics and column profiles through super efficient sql\n * full control over metrics and queries through declarative config files\n\n**why soda sql?**\n\nto protect against silent data issues for the consumers of your data,\nit's best-practice to profile and test your data:\n\n * as it lands in your warehouse,\n * after every important data processing step\n * right before consumption.\n\nthis way you will prevent delivery of bad data to downstream consumers.\nyou will spend less time firefighting and gain a better reputation.\n\n**how does soda sql work?**\n\nsoda sql is a command line interface (cli) and a python library to measure\nand test your data using sql.\n\nas input, soda sql uses yaml configuration files that include:\n * sql connection details\n * what metrics to compute\n * what tests to run on the measurements\n\nbased on those configuration files, soda sql will perform scans.  a scan\nperforms all measurements and runs all tests associated with one table.  typically\na scan is executed after new data has arrived.  all soda-sql configuration files\ncan be checked into your version control system as part of your pipeline\ncode.\n\n> want to try soda sql? head over to our ['quick start tutorial'](https://docs.soda.io/soda-sql/getting-started/5_min_tutorial.html) and get started straight away!\n\n**\"[show me the metrics](https://www.youtube.com/watch?v=1-mokmq19zu)\"**\n\nlet's walk through an example. simple metrics and tests can be configured in scan yaml configuration\nfiles. an example of the contents of such a file:\n\n```yaml\nmetrics:\n    - row_count\n    - missing_count\n    - missing_percentage\n    - values_count\n    - values_percentage\n    - valid_count\n    - valid_percentage\n    - invalid_count\n    - invalid_percentage\n    - min\n    - max\n    - avg\n    - sum\n    - min_length\n    - max_length\n    - avg_length\n    - distinct\n    - unique_count\n    - duplicate_count\n    - uniqueness\n    - maxs\n    - mins\n    - frequent_values\n    - histogram\ncolumns:\n    id:\n        metrics:\n            - distinct\n            - duplicate_count\n        valid_format: uuid\n        tests:\n            duplicate_count == 0\n    category:\n        missing_values:\n            - n/a\n            - no category\n        tests:\n            missing_percentage < 3\n    size:\n        tests:\n            max - min < 20\nsql_metrics:\n    - sql: |\n        select sum(volume) as total_volume_us\n        from customer_transactions\n        where country = 'us'\n      tests:\n        - total_volume_us > 5000\n```\n\nbased on these configuration files, soda sql will scan your data\neach time new data arrived like this:\n\n```bash\n$ soda scan ./soda/metrics my_warehouse my_dataset\nsoda 1.0 scan for dataset my_dataset on prod my_warehouse\n  | select column_name, data_type, is_nullable\n  | from information_schema.columns\n  | where lower(table_name) = 'customers'\n  |   and table_catalog = 'datasource.database'\n  |   and table_schema = 'datasource.schema'\n  - 0.256 seconds\nfound 4 columns: id, name, create_date, country\n  | select\n  |  count(*),\n  |  count(case when id is null then 1 end),\n  |  count(case when id is not null and id regexp '\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b' then 1 end),\n  |  min(length(id)),\n  |  avg(length(id)),\n  |  max(length(id)),\n  | from customers\n  - 0.557 seconds\nrow_count : 23543\nmissing   : 23\ninvalid   : 0\nmin_length: 9\navg_length: 9\nmax_length: 9\n\n...more queries...\n\n47 measurements computed\n23 tests executed\nall is good. no tests failed. scan took 23.307 seconds\n```\n\nthe next step is to add soda sql scans in your favorite\ndata pipeline orchestration solution like:\n\n* airflow\n* aws glue\n* prefect\n* dagster\n* fivetran\n* matillion\n* luigi\n\nif you like the goals of this project, encourage us! star [sodadata/soda-sql on github](https://github.com/sodadata/soda-sql).\n\n> next, head over to our ['quick start tutorial'](https://docs.soda.io/soda-sql/getting-started/5_min_tutorial.html) and get your first project going!\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "soda-sql-core",
  "package_url": "https://pypi.org/project/soda-sql-core/",
  "project_url": "https://pypi.org/project/soda-sql-core/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/soda-sql-core/2.2.2/",
  "requires_dist": [
    "markupsafe (==2.0.1)",
    "Jinja2 (<4.0,>=2.11.3)",
    "click (<9.0,>=8.0)",
    "pyyaml (<6.0,>=5.4.1)",
    "requests (<3.0,>=2.23.0)",
    "Deprecated (<1.3,>=1.2.13)",
    "opentelemetry-api (~=1.11.0)",
    "opentelemetry-exporter-otlp-proto-http (~=1.11.0)",
    "protobuf (~=3.19.0)"
  ],
  "requires_python": ">=3.7",
  "summary": "soda sql library & cli",
  "version": "2.2.2",
  "releases": [],
  "developers": [
    "tom@soda.io",
    "tom_baeyens"
  ],
  "kwds": "sodadata soda slack database datasource",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_soda_sql_core",
  "homepage": "",
  "release_count": 31,
  "dependency_ids": [
    "pypi_click",
    "pypi_deprecated",
    "pypi_jinja2",
    "pypi_markupsafe",
    "pypi_opentelemetry_api",
    "pypi_opentelemetry_exporter_otlp_proto_http",
    "pypi_protobuf",
    "pypi_pyyaml",
    "pypi_requests"
  ]
}
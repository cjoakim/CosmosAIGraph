{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "<h1 align=\"center\">\n<img alt=\"logo\" src=\"https://raw.githubusercontent.com/uriyyo/fastapi-pagination/main/docs/img/logo.png\">\n</h1>\n\n<div align=\"center\">\n<img alt=\"license\" src=\"https://img.shields.io/badge/license-mit-lightgrey\">\n<img alt=\"test\" src=\"https://github.com/uriyyo/fastapi-pagination/workflows/test/badge.svg\">\n<img alt=\"codecov\" src=\"https://codecov.io/gh/uriyyo/fastapi-pagination/branch/main/graph/badge.svg?token=qqiqdq7fzi\">\n<a href=\"https://pepy.tech/project/fastapi-pagination\"><img alt=\"downloads\" src=\"https://pepy.tech/badge/fastapi-pagination\"></a>\n<a href=\"https://pypi.org/project/fastapi-pagination\"><img alt=\"pypi\" src=\"https://img.shields.io/pypi/v/fastapi-pagination\"></a>\n<img alt=\"black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\">\n</div>\n\n## introduction\n\n`fastapi-pagination` is a python library designed to simplify pagination in fastapi applications. \nit provides a set of utility functions and data models to help you paginate your database queries \nand return paginated responses to your clients.\n\nwith `fastapi-pagination`, you can easily define pagination parameters in your fastapi endpoint functions,\nand use them to generate paginated responses that include the requested subset of your data.\nthe library supports a variety of pagination strategies, including cursor-based pagination and page-based pagination.\n\n`fastapi-pagination` is built on top of the popular `fastapi` library, and it works with a wide range \nof sql and nosql databases frameworks. it also supports async/await syntax and is compatible with python 3.8 and higher.\n\nfeatures:\n* simplifies pagination in fastapi applications.\n* supports a variety of pagination strategies, including cursor-based pagination and page-based pagination\n* works with a wide range of sql and nosql databases frameworks, including `sqlalchemy`, `tortoise orm`, and `pymongo`.\n* supports async/await syntax.\n* compatible with python 3.8 and higher.\n\n----\n\nfor more information on how to use fastapi-pagination, please refer to the \n[official documentation](https://uriyyo-fastapi-pagination.netlify.app/).\n\n---\n\n## installation\n\n```bash\npip install fastapi-pagination\n```\n\n## quickstart\n\nall you need to do is to use `page` class as a return type for your endpoint and call `paginate` function\non data you want to paginate.\n\n```py\nfrom fastapi import fastapi\nfrom pydantic import basemodel, field\n\n# import all you need from fastapi-pagination\nfrom fastapi_pagination import page, add_pagination, paginate\n\napp = fastapi()  # create fastapi app\n\n\nclass userout(basemodel):  # define your model\n    name: str = field(..., example=\"steve\")\n    surname: str = field(..., example=\"rogers\")\n\n\nusers = [  # create some data\n    # ...\n]\n\n\n@app.get('/users', response_model=page[userout])  # use page[userout] as response model\nasync def get_users():\n    return paginate(users)  # use paginate function to paginate your data\n\n\nadd_pagination(app)  # important! add pagination to your app\n```\n\nplease, be careful when you work with databases, because default `paginate` will require to load all data in memory.\n\nfor instance, if you use `sqlalchemy` you can use `paginate` from `fastapi_pagination.ext.sqlalchemy` module.\n\n```py\nfrom sqlalchemy import select\nfrom fastapi_pagination.ext.sqlalchemy import paginate\n\n\n@app.get('/users', response_model=page[userout])\ndef get_users(db: session = depends(get_db)):\n    return paginate(db, select(user).order_by(user.created_at))\n```\n\n---\n\ncode from `quickstart` will generate openapi schema as bellow:\n\n<div align=\"center\">\n<img alt=\"app-example\" src=\"https://raw.githubusercontent.com/uriyyo/fastapi-pagination/main/docs/img/example.png\">\n</div>\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "fastapi-pagination",
  "package_url": "https://pypi.org/project/fastapi-pagination/",
  "project_url": "https://pypi.org/project/fastapi-pagination/",
  "project_urls": {
    "Homepage": "https://github.com/uriyyo/fastapi-pagination",
    "Repository": "https://github.com/uriyyo/fastapi-pagination"
  },
  "release_url": "https://pypi.org/project/fastapi-pagination/0.12.14/",
  "requires_dist": [
    "pydantic (>=1.9.1)",
    "fastapi (>=0.93.0)",
    "typing-extensions (>=4.8.0,<5.0.0)",
    "SQLAlchemy (>=1.3.20) ; extra == \"sqlalchemy\" or extra == \"asyncpg\" or extra == \"all\"",
    "databases (>=0.6.0) ; extra == \"databases\" or extra == \"orm\" or extra == \"django\" or extra == \"all\"",
    "orm (>=0.3.1) ; extra == \"orm\" or extra == \"all\"",
    "tortoise-orm (>=0.16.18,<0.21.0) ; extra == \"tortoise\" or extra == \"all\"",
    "asyncpg (>=0.24.0) ; extra == \"asyncpg\" or extra == \"all\"",
    "ormar (>=0.11.2) ; extra == \"ormar\" or extra == \"all\"",
    "django (<5.0.0) ; extra == \"django\" or extra == \"all\"",
    "piccolo (>=0.89,<0.122) ; extra == \"piccolo\" or extra == \"all\"",
    "motor (>=2.5.1,<4.0.0) ; extra == \"motor\" or extra == \"all\"",
    "mongoengine (>=0.23.1,<0.28.0) ; extra == \"mongoengine\" or extra == \"all\"",
    "sqlmodel (>=0.0.8,<0.0.15) ; extra == \"sqlmodel\" or extra == \"all\"",
    "pony (>=0.7.16,<0.8.0) ; extra == \"all\"",
    "beanie (>=1.11.9,<2.0.0) ; extra == \"beanie\" or extra == \"all\"",
    "sqlakeyset (>=2.0.1680321678,<3.0.0) ; extra == \"sqlmodel\" or extra == \"sqlalchemy\" or extra == \"all\"",
    "scylla-driver (>=3.25.6,<4.0.0) ; extra == \"scylla-driver\" or extra == \"all\"",
    "bunnet (>=1.1.0,<2.0.0) ; extra == \"bunnet\" or extra == \"all\""
  ],
  "requires_python": ">=3.8,<4.0",
  "summary": "fastapi pagination",
  "version": "0.12.14",
  "releases": [],
  "developers": [
    "1998uriyyo@gmail.com",
    "yurii_karabas"
  ],
  "kwds": "fastapi_pagination fastapi badge add_pagination pagination",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_fastapi_pagination",
  "homepage": "https://github.com/uriyyo/fastapi-pagination",
  "release_count": 47,
  "dependency_ids": [
    "pypi_asyncpg",
    "pypi_beanie",
    "pypi_bunnet",
    "pypi_databases",
    "pypi_django",
    "pypi_fastapi",
    "pypi_mongoengine",
    "pypi_motor",
    "pypi_orm",
    "pypi_ormar",
    "pypi_piccolo",
    "pypi_pony",
    "pypi_pydantic",
    "pypi_scylla_driver",
    "pypi_sqlakeyset",
    "pypi_sqlalchemy",
    "pypi_sqlmodel",
    "pypi_tortoise_orm",
    "pypi_typing_extensions"
  ]
}
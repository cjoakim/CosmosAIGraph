{
  "classifiers": [
    "environment :: console",
    "framework :: flake8",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: documentation",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: quality assurance"
  ],
  "description": "# flake8-functions\n\n[![build status](https://travis-ci.org/best-doctor/flake8-functions.svg?branch=master)](https://travis-ci.org/best-doctor/flake8-functions)\n[![maintainability](https://api.codeclimate.com/v1/badges/4cdbd67833752665ee79/maintainability)](https://codeclimate.com/github/best-doctor/flake8-functions/maintainability)\n[![test coverage](https://api.codeclimate.com/v1/badges/4cdbd67833752665ee79/test_coverage)](https://codeclimate.com/github/best-doctor/flake8-functions/test_coverage)\n[![pypi version](https://badge.fury.io/py/flake8-functions.svg?)](https://badge.fury.io/py/flake8-functions)\n![pypi - python version](https://img.shields.io/pypi/pyversions/flake8-functions)\n\nan extension for flake8 to report on issues with functions.\n\nwe believe code readability is very important for a team that consists of\nmore than one person. one of the issues we've encountered is functions\nthat are more that two screens long.\n\nthe validator checks for:\n\n* cfq001 - function length (default max length is 100)\n* cfq002 - function arguments number (default max arguments amount is 6)\n* cfq003 - function is not pure.\n* cfq004 - function returns number (default max returns amount is 3)\n\n## installation\n\n```terminal\npip install flake8-functions\n```\n\n## example\n\n```python\ndef some_long_function(\n    first_parameter: int,\n    second_parameter: int,\n    third_parameter: int,\n):\n    first_parameter = (\n        first_parameter +\n        second_parameter +\n        third_parameter\n    )\n\n    first_parameter = (\n        first_parameter +\n        second_parameter +\n        third_parameter\n    )\n\n    first_parameter = (\n        first_parameter +\n        second_parameter +\n        third_parameter\n    )\n\n    first_parameter = (\n        first_parameter +\n        second_parameter +\n        third_parameter\n    )\n\n    return first_parameter\n```\n\nusage:\n\n```terminal\n$ flake8 --max-function-length=20 test.py\ntest.py:1:0: cfq001 \"some_long_function\" function has length 25\nthat exceeds max allowed length 20\n```\n\n## error codes\n\n| error code |                     description                                                                    |\n|:----------:|:--------------------------------------------------------------------------------------------------:|\n|   cfq001   | function \"some_function\" has length %function_length% that exceeds max allowed length %max_length% |\n|   cfq002   | function \"some_function\" has %args_amount% arguments that exceeds max allowed %max_args_amount%    |\n|   cfq003   | function \"some_function\" is not pure.                                                              |\n|   cfq004   | function \"some_function\" has %returns_amount% returns that exceeds max allowed %max_returns_amount%|\n\n## code prerequisites\n\n1. python 3.7+;\n\n## contributing\n\nwe would love you to contribute to our project. it's simple:\n\n1. create an issue with bug you found or proposal you have.\n   wait for approve from maintainer.\n1. create a pull request. make sure all checks are green.\n1. fix review comments if any.\n1. be awesome.\n\nhere are useful tips:\n\n* you can run all checks and tests with `make check`.\n  please do it before travisci does.\n* we use [bestdoctor python styleguide](https://github.com/best-doctor/guides/blob/master/guides/en/python_styleguide.md).\n* we respect [django coc](https://www.djangoproject.com/conduct/).\n  make soft, not bullshit.\n",
  "docs_url": null,
  "keywords": "flake8",
  "license": "mit",
  "name": "flake8-functions",
  "package_url": "https://pypi.org/project/flake8-functions/",
  "project_url": "https://pypi.org/project/flake8-functions/",
  "project_urls": {
    "Homepage": "https://github.com/best-doctor/flake8-functions"
  },
  "release_url": "https://pypi.org/project/flake8-functions/0.0.8/",
  "requires_dist": [
    "setuptools",
    "mr-proper"
  ],
  "requires_python": "",
  "summary": "a flake8 extension that checks functions",
  "version": "0.0.8",
  "releases": [],
  "developers": [
    "lerikpav@gmail.com",
    "valery_pavlov"
  ],
  "kwds": "flake8 test_coverage coverage pyversions maintainability",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_flake8_functions",
  "homepage": "https://github.com/best-doctor/flake8-functions",
  "release_count": 8,
  "dependency_ids": [
    "pypi_mr_proper",
    "pypi_setuptools"
  ]
}
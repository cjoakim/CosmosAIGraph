{
  "classifiers": [],
  "description": "# pycloudflared\n\npython cloudflared wrapper\n\n## install\n\n```sh\npip install pycloudflared\n```\n\ncloudflare binaries will be downloaded the first time you run it.\n\n## usage\n\n```sh\n\u276f pycloudflared --help\nname:\n   cloudflared - cloudflare's command-line tool and agent\n\nusage:\n   cloudflared [global options] [command] [command options]\n\nversion:\n   2023.2.1 (built 2023-02-03-1038 utc)\n\ndescription:\n   cloudflared connects your machine or user identity to cloudflare's global network.\n     you can use it to authenticate a session to reach an api behind access, route web traffic to this machine,\n     and configure access control.\n\n     see https://developers.cloudflare.com/cloudflare-one/connections/connect-apps for more in-depth documentation.\n\ncommands:\n   update     update the agent if a new version exists\n   version    print the version\n   proxy-dns  run a dns over https proxy server.\n   service    manages the cloudflared windows service\n   help, h    shows a list of commands or help for one command\n   access:\n     access, forward  access <subcommand>\n   tunnel:\n     tunnel  use cloudflare tunnel to expose private services to the internet or to cloudflare connected private users.\n\nglobal options:\n   --credentials-file value, --cred-file value  filepath at which to read/write the tunnel credentials [%tunnel_cred_file%]\n   --region value                               cloudflare edge region to connect to. omit or set to empty to connect to the global region. [%tunnel_region%]\n   --edge-ip-version value                      cloudflare edge ip address version to connect with. {4, 6, auto} (default: \"4\") [%tunnel_edge_ip_version%]\n   --post-quantum, --pq                         when given creates an experimental post-quantum secure tunnel (default: false) [%tunnel_post_quantum%]\n   --overwrite-dns, -f                          overwrites existing dns records with this hostname (default: false) [%tunnel_force_provisioning_dns%]\n   --help, -h                                   show help (default: false)\n   --version, -v, -v                            print the version (default: false)\n\ncopyright:\n   (c) 2023 cloudflare inc.\n   your installation of cloudflared software constitutes a symbol of your signature indicating that you accept\n   the terms of the apache license version 2.0 (https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/license),\n   terms (https://www.cloudflare.com/terms/) and privacy policy (https://www.cloudflare.com/privacypolicy/).\n```\n\nall arguments are passed directly to cloudflared.\n\nsince there is no binary for arm mac, you may need rosetta 2.\n\n\n### try_cloudflared\n\n```py\nfrom pycloudflared import try_cloudflare\n\ntry_cloudflare(port=7860)\n```\n\na simple function to run trycloudflare within python.\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pycloudflared",
  "package_url": "https://pypi.org/project/pycloudflared/",
  "project_url": "https://pypi.org/project/pycloudflared/",
  "project_urls": {
    "repository": "https://github.com/Bing-su/pycloudflared"
  },
  "release_url": "https://pypi.org/project/pycloudflared/0.2.0/",
  "requires_dist": [
    "tomli; python_version < \"3.11\"",
    "tqdm"
  ],
  "requires_python": ">=3.7",
  "summary": "unofficial cloudflared python wrapper",
  "version": "0.2.0",
  "releases": [],
  "developers": [
    "ks2515@naver.com"
  ],
  "kwds": "try_cloudflare try_cloudflared pycloudflared cloudflare cloudflared",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pycloudflared",
  "homepage": "",
  "release_count": 4,
  "dependency_ids": [
    "pypi_tomli",
    "pypi_tqdm"
  ]
}
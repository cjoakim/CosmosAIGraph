{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "topic :: scientific/engineering"
  ],
  "description": "urdf parser and manipulator for python\n\n\n",
  "docs_url": null,
  "keywords": "robotics ros urdf robots parser",
  "license": "mit license",
  "name": "urdfpy",
  "package_url": "https://pypi.org/project/urdfpy/",
  "project_url": "https://pypi.org/project/urdfpy/",
  "project_urls": {
    "Homepage": "https://github.com/mmatl/urdfpy"
  },
  "release_url": "https://pypi.org/project/urdfpy/0.0.22/",
  "requires_dist": [
    "lxml",
    "networkx (==2.2)",
    "numpy",
    "pillow",
    "pycollada (==0.6)",
    "pyrender (>=0.1.20)",
    "scipy",
    "six",
    "trimesh",
    "flake8 ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "tox ; extra == 'dev'",
    "sphinx ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "sphinx-automodapi ; extra == 'docs'"
  ],
  "requires_python": "",
  "summary": "urdf parser and manipulator for python",
  "version": "0.0.22",
  "releases": [],
  "developers": [
    "matthew_matl",
    "matthewcmatl@gmail.com"
  ],
  "kwds": "robotics ros urdf robots parser urdf parser and manipulator for python urdf parser and manipulator for python",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_urdfpy",
  "homepage": "https://github.com/mmatl/urdfpy",
  "release_count": 18,
  "dependency_ids": [
    "pypi_flake8",
    "pypi_lxml",
    "pypi_networkx",
    "pypi_numpy",
    "pypi_pillow",
    "pypi_pre_commit",
    "pypi_pycollada",
    "pypi_pyrender",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_scipy",
    "pypi_six",
    "pypi_sphinx",
    "pypi_sphinx_automodapi",
    "pypi_sphinx_rtd_theme",
    "pypi_tox",
    "pypi_trimesh"
  ]
}
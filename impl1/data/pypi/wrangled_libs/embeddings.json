{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3.5"
  ],
  "description": "embeddings\n==========\n\n.. image:: https://readthedocs.org/projects/embeddings/badge/?version=latest\n    :target: http://embeddings.readthedocs.io/en/latest/?badge=latest\n    :alt: documentation status\n.. image:: https://travis-ci.org/vzhong/embeddings.svg?branch=master\n    :target: https://travis-ci.org/vzhong/embeddings\n\nembeddings is a python package that provides pretrained word embeddings for natural language processing and machine learning.\n\ninstead of loading a large file to query for embeddings, ``embeddings`` is backed by a database and fast to load and query:\n\n.. code-block:: python\n\n    >>> %timeit gloveembedding('common_crawl_840', d_emb=300)\n    100 loops, best of 3: 12.7 ms per loop\n\n    >>> %timeit gloveembedding('common_crawl_840', d_emb=300).emb('canada')\n    100 loops, best of 3: 12.9 ms per loop\n\n    >>> g = gloveembedding('common_crawl_840', d_emb=300)\n\n    >>> %timeit -n1 g.emb('canada')\n    1 loop, best of 3: 38.2 \u00b5s per loop\n\n\ninstallation\n------------\n\n.. code-block:: sh\n\n    pip install embeddings  # from pypi\n    pip install git+https://github.com/vzhong/embeddings.git  # from github\n\n\nusage\n-----\n\nupon first use, the embeddings are first downloaded to disk in the form of a sqlite database.\nthis may take a long time for large embeddings such as glove.\nfurther usage of the embeddings are directly queried against the database.\nembedding databases are stored in the ``$embeddings_root`` directory (defaults to ``~/.embeddings``). note that this location is probably **undesirable** if your home directory is on nfs, as it would slow down database queries significantly.\n\n\n.. code-block:: python\n\n    from embeddings import gloveembedding, fasttextembedding, kazumacharembedding, concatembedding\n\n    g = gloveembedding('common_crawl_840', d_emb=300, show_progress=true)\n    f = fasttextembedding()\n    k = kazumacharembedding()\n    c = concatembedding([g, f, k])\n    for w in ['canada', 'vancouver', 'toronto']:\n        print('embedding {}'.format(w))\n        print(g.emb(w))\n        print(f.emb(w))\n        print(k.emb(w))\n        print(c.emb(w))\n\n\ndocker\n------\n\nif you use docker, an image prepopulated with the common crawl 840 glove embeddings and kazuma hashimoto's character ngram embeddings is available at `vzhong/embeddings <https://hub.docker.com/r/vzhong/embeddings>`_.\nto mount volumes from this container, set ``$embeddings_root`` in your container to ``/opt/embeddings``.\n\nfor example:\n\n.. code-block:: bash\n\n    docker run --volumes-from vzhong/embeddings -e embeddings_root='/opt/embeddings' myimage python train.py\n\n\ncontribution\n------------\n\npull requests welcome!\n\n\n",
  "docs_url": null,
  "keywords": "text nlp machine-learning",
  "license": "mit",
  "name": "embeddings",
  "package_url": "https://pypi.org/project/embeddings/",
  "project_url": "https://pypi.org/project/embeddings/",
  "project_urls": {
    "Homepage": "https://github.com/vzhong/embeddings"
  },
  "release_url": "https://pypi.org/project/embeddings/0.0.8/",
  "requires_dist": [
    "tqdm",
    "requests",
    "numpy",
    "check-manifest ; extra == 'dev'",
    "sphinx ; extra == 'dev'",
    "sphinx-rtd-theme ; extra == 'dev'",
    "coverage ; extra == 'test'",
    "nose ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "pretrained word embeddings in python.",
  "version": "0.0.8",
  "releases": [],
  "developers": [
    "victor@victorzhong.com",
    "victor_zhong"
  ],
  "kwds": "embeddings embedding fasttextembedding embeddings_root nlp",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_embeddings",
  "homepage": "https://github.com/vzhong/embeddings",
  "release_count": 7,
  "dependency_ids": [
    "pypi_check_manifest",
    "pypi_coverage",
    "pypi_nose",
    "pypi_numpy",
    "pypi_requests",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_tqdm"
  ]
}
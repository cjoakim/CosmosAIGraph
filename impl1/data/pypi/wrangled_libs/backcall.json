{
  "classifiers": [
    "license :: osi approved :: bsd license",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3"
  ],
  "description": "========\nbackcall\n========\n\n.. image:: https://travis-ci.org/takluyver/backcall.png?branch=master\n        :target: https://travis-ci.org/takluyver/backcall\n\nspecifications for callback functions passed in to an api\n\nif your code lets other people supply callback functions, it's important to\nspecify the function signature you expect, and check that functions support that.\nadding extra parameters later would break other peoples code unless you're careful.\n\nbackcall provides a way of specifying the callback signature using a prototype\nfunction::\n\n    from backcall import callback_prototype\n    \n    @callback_prototype\n    def handle_ping(sender, delay=none):\n        # specify positional parameters without a default, and keyword\n        # parameters with a default.\n        pass\n    \n    def register_ping_handler(callback):\n        # this checks and adapts the function passed in:\n        callback = handle_ping.adapt(callback)\n        ping_callbacks.append(callback)\n\nif the callback takes fewer parameters than your prototype, *backcall* will wrap\nit in a function that discards the extra arguments. if the callback expects\nmore arguments, a typeerror is thrown when it is registered.\n\nfor more details, see the `docs <http://backcall.readthedocs.org/en/latest/>`_ or\nthe `demo notebook <http://nbviewer.ipython.org/github/takluyver/backcall/blob/master/demo.ipynb>`_.\n\nthe tests are run with `pytest <http://pytest.org/latest/>`_. in the root directory,\nexecute::\n\n    py.test\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "backcall",
  "package_url": "https://pypi.org/project/backcall/",
  "project_url": "https://pypi.org/project/backcall/",
  "project_urls": {
    "Homepage": "https://github.com/takluyver/backcall"
  },
  "release_url": "https://pypi.org/project/backcall/0.2.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "specifications for callback functions passed in to an api",
  "version": "0.2.0",
  "releases": [],
  "developers": [
    "thomas@kluyver.me.uk",
    "thomas_kluyver"
  ],
  "kwds": "ping_callbacks register_ping_handler handle_ping callback_prototype callback",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_backcall",
  "homepage": "https://github.com/takluyver/backcall",
  "release_count": 2,
  "dependency_ids": []
}
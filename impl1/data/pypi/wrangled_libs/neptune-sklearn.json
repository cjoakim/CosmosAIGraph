{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# neptune + scikit-learn integration\n\nexperiment tracking, model registry, data versioning, and live model monitoring for scikit-learn (sklearn) trained models.\n\n## what will you get with this integration?\n\n* log, display, organize, and compare ml experiments in a single place\n* version, store, manage, and query trained models, and model building metadata\n* record and monitor model training, evaluation, or production runs live\n\n## what will be logged to neptune?\n\n* classifier and regressor parameters,\n* pickled model,\n* test predictions,\n* test predictions probabilities,\n* test scores,\n* classifier and regressor visualizations, like confusion matrix, precision-recall chart, and feature importance chart,\n* kmeans cluster labels and clustering visualizations,\n* metadata including git summary info,\n* [other metadata](https://docs.neptune.ai/logging/what_you_can_log)\n\n![image](https://user-images.githubusercontent.com/97611089/160642485-afca99da-9f7b-4d80-b0be-810c9d5770e5.png)\n*confusion matrix logged to neptune*\n\n## resources\n\n* [documentation](https://docs.neptune.ai/integrations/sklearn)\n* [code example on github](https://github.com/neptune-ai/examples/blob/main/integrations-and-supported-tools/sklearn/scripts/neptune_scikit_learn_classification.py)\n* [runs logged in the neptune app](https://app.neptune.ai/o/common/org/sklearn-integration/e/sklear-95/all)\n* [run example in google colab](https://colab.research.google.com/github/neptune-ai/examples/blob/master/integrations-and-supported-tools/sklearn/notebooks/neptune_scikit_learn.ipynb)\n\n## example\n\n```\n# on the command line:\npip install neptune-sklearn\n```\n\n```python\n# in python, prepare a fitted estimator\nparameters = {\n    \"n_estimators\": 70, \"max_depth\": 7, \"min_samples_split\": 3\n}\n\nestimator = ...\nestimator.fit(x_train, y_train)\n\n# import neptune and start a run\nimport neptune\n\nrun = neptune.init_run(\n    project=\"common/sklearn-integration\",\n    api_token=neptune.anonymous_api_token,\n)\n\n# log parameters and scores\nrun[\"parameters\"] = parameters\n\ny_pred = estimator.predict(x_test)\n\nrun[\"scores/max_error\"] = max_error(y_test, y_pred)\nrun[\"scores/mean_absolute_error\"] = mean_absolute_error(y_test, y_pred)\nrun[\"scores/r2_score\"] = r2_score(y_test, y_pred)\n\n# stop the run\nrun.stop()\n```\n\n## support\n\nif you got stuck or simply want to talk to us, here are your options:\n\n* check our [faq page](https://docs.neptune.ai/getting_help)\n* you can submit bug reports, feature requests, or contributions directly to the repository.\n* chat! when in the neptune application click on the blue message icon in the bottom-right corner and send a message. a real person will talk to you asap (typically very asap),\n* you can just shoot us an email at support@neptune.ai\n\n",
  "docs_url": null,
  "keywords": "mlops,ml experiment tracking,ml model registry,ml model store,ml metadata store",
  "license": "apache-2.0",
  "name": "neptune-sklearn",
  "package_url": "https://pypi.org/project/neptune-sklearn/",
  "project_url": "https://pypi.org/project/neptune-sklearn/",
  "project_urls": {
    "Documentation": "https://docs.neptune.ai/integrations-and-supported-tools/model-training/sklearn",
    "Homepage": "https://neptune.ai/",
    "Repository": "https://github.com/neptune-ai/neptune-sklearn",
    "Tracker": "https://github.com/neptune-ai/neptune-sklearn/issues"
  },
  "release_url": "https://pypi.org/project/neptune-sklearn/2.1.0/",
  "requires_dist": [
    "importlib-metadata ; python_version < \"3.8\"",
    "neptune (>=1.0.0) ; extra == \"dev\"",
    "pre-commit ; extra == \"dev\"",
    "pytest (>=5.0) ; extra == \"dev\"",
    "pytest-cov (==2.10.1) ; extra == \"dev\"",
    "scikit-learn (>=0.24.1)",
    "scikit-plot (>=0.3.7)",
    "yellowbrick (>=1.3)"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "neptune.ai scikit-learn integration library",
  "version": "2.1.0",
  "releases": [],
  "developers": [
    "contact@neptune.ai",
    "neptune"
  ],
  "kwds": "neptune_scikit_learn_classification neptune_scikit_learn scikit documentation sklearn",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_neptune_sklearn",
  "homepage": "https://neptune.ai/",
  "release_count": 13,
  "dependency_ids": [
    "pypi_importlib_metadata",
    "pypi_neptune",
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_scikit_learn",
    "pypi_scikit_plot",
    "pypi_yellowbrick"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries",
    "topic :: utilities"
  ],
  "description": "iniconfig: brain-dead simple parsing of ini files\n=======================================================\n\niniconfig is a small and simple ini-file parser module\nhaving a unique set of features:\n\n* maintains order of sections and entries\n* supports multi-line values with or without line-continuations\n* supports \"#\" comments everywhere\n* raises errors with proper line-numbers\n* no bells and whistles like automatic substitutions\n* iniconfig raises an error if two sections have the same name.\n\nif you encounter issues or have feature wishes please report them to:\n\n    https://github.com/ronnypfannschmidt/iniconfig/issues\n\nbasic example\n===================================\n\nif you have an ini file like this:\n\n.. code-block:: ini\n\n    # content of example.ini\n    [section1] # comment\n    name1=value1  # comment\n    name1b=value1,value2  # comment\n\n    [section2]\n    name2=\n        line1\n        line2\n\nthen you can do:\n\n.. code-block:: pycon\n\n    >>> import iniconfig\n    >>> ini = iniconfig.iniconfig(\"example.ini\")\n    >>> ini['section1']['name1'] # raises keyerror if not exists\n    'value1'\n    >>> ini.get('section1', 'name1b', [], lambda x: x.split(\",\"))\n    ['value1', 'value2']\n    >>> ini.get('section1', 'notexist', [], lambda x: x.split(\",\"))\n    []\n    >>> [x.name for x in list(ini)]\n    ['section1', 'section2']\n    >>> list(list(ini)[0].items())\n    [('name1', 'value1'), ('name1b', 'value1,value2')]\n    >>> 'section1' in ini\n    true\n    >>> 'inexistendsection' in ini\n    false\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "iniconfig",
  "package_url": "https://pypi.org/project/iniconfig/",
  "project_url": "https://pypi.org/project/iniconfig/",
  "project_urls": {
    "Homepage": "https://github.com/pytest-dev/iniconfig"
  },
  "release_url": "https://pypi.org/project/iniconfig/2.0.0/",
  "requires_dist": [],
  "requires_python": ">=3.7",
  "summary": "brain-dead simple config-ini parsing",
  "version": "2.0.0",
  "releases": [],
  "developers": [
    "holger.krekel@gmail.com",
    "opensource@ronnypfannschmidt.de"
  ],
  "kwds": "iniconfig ini parsing line1 sections",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_iniconfig",
  "homepage": "",
  "release_count": 8,
  "dependency_ids": []
}
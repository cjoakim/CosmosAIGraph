{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: ironpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: multimedia",
    "topic :: printing"
  ],
  "description": "piexif\n======\n\n|build status| |windows build| |coverage status| |docs|\n\n\nto simplify exif manipulations with python. writing, reading, and more... piexif is pure python. to everywhere with python.\n\n\ndocument: http://piexif.readthedocs.org/en/latest/\n\nonline demo: http://piexif-demo.appspot.com/demo\n\ninstall\n-------\n\n'easy_install'::\n\n    $ easy_install piexif\n\nor 'pip'::\n\n    $ pip install piexif\n\nor download .zip, extract it. put 'piexif' directory into your environment.\n\nwhy choose piexif\n-----------------\n\n- pure python. so, it runs everywhere where python runs.\n- easy exif manipulations. read, write, remove...\n- documented. http://piexif.readthedocs.org/en/latest/\n\nhow to use\n----------\n\nthere are only just five functions.\n\n- *load(filename)* - get exif data as *dict*.\n- *dump(exif_dict)* - get exif as *bytes*.\n- *insert(exif_bytes, filename)* - insert exif into jpeg, or webp.\n- *remove(filename)* - remove exif from jpeg, or webp.\n- *transplant(filename, filename)* - transplant exif from jpeg to jpeg.\n\nexample\n-------\n\n::\n\n    exif_dict = piexif.load(\"foo1.jpg\")\n    for ifd in (\"0th\", \"exif\", \"gps\", \"1st\"):\n        for tag in exif_dict[ifd]:\n            print(piexif.tags[ifd][tag][\"name\"], exif_dict[ifd][tag])\n\nwith pil(pillow)\n----------------\n\n::\n\n    from pil import image\n    import piexif\n\n    im = image.open(filename)\n    exif_dict = piexif.load(im.info[\"exif\"])\n    # process im and exif_dict...\n    w, h = im.size\n    exif_dict[\"0th\"][piexif.imageifd.xresolution] = (w, 1)\n    exif_dict[\"0th\"][piexif.imageifd.yresolution] = (h, 1)\n    exif_bytes = piexif.dump(exif_dict)\n    im.save(new_file, \"jpeg\", exif=exif_bytes)\n\nenvironment\n-----------\n\ntested on python 2.7, 3.5+ and pypy3. piexif would run even on ironpython. piexif is os independent and can run on google app engine.\n\nlicense\n-------\n\nthis software is released under the mit license, see license.txt.\n\n.. |build status| image:: https://api.travis-ci.org/hmatoba/piexif.svg?branch=master\n   :target: https://travis-ci.org/hmatoba/piexif\n.. |windows build| image:: https://ci.appveyor.com/api/projects/status/github/hmatoba/piexif?branch=master&svg=true\n   :target: https://ci.appveyor.com/project/hmatoba/piexif\n.. |coverage status| image:: https://coveralls.io/repos/hmatoba/piexif/badge.svg?branch=master\n   :target: https://coveralls.io/r/hmatoba/piexif?branch=master\n.. |docs| image:: https://readthedocs.org/projects/piexif/badge/?version=latest\n   :target: https://readthedocs.org/projects/piexif/",
  "docs_url": null,
  "keywords": "exif,jpeg",
  "license": "mit",
  "name": "piexif",
  "package_url": "https://pypi.org/project/piexif/",
  "project_url": "https://pypi.org/project/piexif/",
  "project_urls": {
    "Homepage": "https://github.com/hMatoba/Piexif"
  },
  "release_url": "https://pypi.org/project/piexif/1.1.3/",
  "requires_dist": [],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
  "summary": "to simplify exif manipulations with python. writing, reading, and more...",
  "version": "1.1.3",
  "releases": [],
  "developers": [
    "hiroaki.mtb@outlook.com",
    "hmatoba"
  ],
  "kwds": "piexif exif_dict exif_bytes imageifd exif",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_piexif",
  "homepage": "https://github.com/hmatoba/piexif",
  "release_count": 17,
  "dependency_ids": []
}
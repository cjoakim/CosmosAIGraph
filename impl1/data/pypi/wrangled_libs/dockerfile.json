{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "[![build status](https://github.com/asottile/dockerfile/actions/workflows/main.yml/badge.svg)](https://github.com/asottile/dockerfile/actions/workflows/main.yml)\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/asottile/dockerfile/main.svg)](https://results.pre-commit.ci/latest/github/asottile/dockerfile/main)\n\ndockerfile\n==========\n\nthe goal of this repository is to provide a wrapper around\n[docker/docker](https://github.com/docker/docker)'s parser for dockerfiles.\n\n\n## python library\n\n### installation\n\nthis project uses [setuptools-golang](https://github.com/asottile/setuptools-golang)\nwhen built from source.  to build from source you'll need a go compiler.\n\nif you're using linux and sufficiently new pip (>=8.1) you should be able to\njust download prebuilt manylinux1 wheels.\n\n```\npip install dockerfile\n```\n\n### usage\n\nthere's three api functions provided by this library:\n\n#### `dockerfile.all_cmds()`\n\nlist all of the known dockerfile cmds.\n\n```python\n>>> dockerfile.all_cmds()\n('add', 'arg', 'cmd', 'copy', 'entrypoint', 'env', 'expose', 'from', 'healthcheck', 'label', 'maintainer', 'onbuild', 'run', 'shell', 'stopsignal', 'user', 'volume', 'workdir')\n```\n\n#### `dockerfile.parse_file(filename)`\n\nparse a dockerfile by filename.\nreturns a `tuple` of `dockerfile.command` objects representing each layer of\nthe dockerfile.\npossible exceptions:\n- `dockerfile.goioerror`: the file could not be opened.\n- `dockerfile.goparseerror`: the dockerfile was not parseable.\n\n```python\n>>> pprint.pprint(dockerfile.parse_file('testfiles/dockerfile.ok'))\n(command(cmd='from', sub_cmd=none, json=false, original='from ubuntu:xenial', start_line=1, flags=(), value=('ubuntu:xenial',)),\n command(cmd='cmd', sub_cmd=none, json=true, original='cmd [\"echo\", \"hi\"]', start_line=2, flags=(), value=('echo', 'hi')))\n```\n\n#### `dockerfile.parse_string(s)`\n\nparse a dockerfile using a string.\nreturns a `tuple` of `dockerfile.command` objects representing each layer of\nthe dockerfile.\npossible exceptions:\n- `dockerfile.goparseerror`: the dockerfile was not parseable.\n\n```python\n>>> dockerfile.parse_string('from ubuntu:xenial')\n(command(cmd='from', sub_cmd=none, json=false, original='from ubuntu:xenial', start_line=1, flags=(), value=('ubuntu:xenial',)),)\n```\n\n## go library\n\nslightly more convenient than the api provided by docker/docker?  might not be\nterribly useful -- the main point of this repository was a python wrapper.\n\n### installation\n\n```\ngo get github.com/asottile/dockerfile\n```\n\n### usage\n\n[godoc](https://godoc.org/github.com/asottile/dockerfile)\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "dockerfile",
  "package_url": "https://pypi.org/project/dockerfile/",
  "project_url": "https://pypi.org/project/dockerfile/",
  "project_urls": {
    "Homepage": "https://github.com/asottile/dockerfile"
  },
  "release_url": "https://pypi.org/project/dockerfile/3.3.1/",
  "requires_dist": [],
  "requires_python": ">=3.8",
  "summary": "parse a dockerfile into a high-level representation using the official go parser.",
  "version": "3.3.1",
  "releases": [],
  "developers": [
    "anthony_sottile",
    "asottile@umich.edu"
  ],
  "kwds": "dockerfile dockerfiles docker golang pip",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_dockerfile",
  "homepage": "https://github.com/asottile/dockerfile",
  "release_count": 12,
  "dependency_ids": []
}
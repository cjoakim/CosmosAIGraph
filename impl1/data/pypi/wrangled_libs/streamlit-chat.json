{
  "classifiers": [
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# st-chat\n\nstreamlit component, for a chat-bot ui, [example app](https://share.streamlit.io/ai-yash/st-chat/main/examples/chatbot.py)\n\nauthors - [@yashppawar](https://github.com/yashppawar) & [@yashvardhan-ai](https://github.com/yashvardhan-ai)\n\n## installation\n\ninstall `streamlit-chat` with pip\n```bash\npip install streamlit-chat \n```\n\nusage, import the `message` function from `streamlit_chat`\n```py\nimport streamlit as st\nfrom streamlit_chat import message\n\nmessage(\"my message\") \nmessage(\"hello bot!\", is_user=true)  # align's the message to the right\n```\n\n### screenshot\n\n![chatbot-og](https://user-images.githubusercontent.com/90775147/210397700-5ab9e00d-a61b-4bc9-a34a-b5bd4454b084.png)\n\nanother example for html in chat, and refresh chat button\n```py\nimport streamlit as st\nfrom streamlit_chat import message\nfrom streamlit.components.v1 import html\n\ndef on_input_change():\n    user_input = st.session_state.user_input\n    st.session_state.past.append(user_input)\n    st.session_state.generated.append(\"the messages from bot\\nwith new line\")\n\ndef on_btn_click():\n    del st.session_state.past[:]\n    del st.session_state.generated[:]\n\naudio_path = \"https://docs.google.com/uc?export=open&id=16qsvolwnxeqco_wb2jvzaresaw5ow6cl\"\nimg_path = \"https://www.groundzeroweb.com/wp-content/uploads/2017/05/funny-cat-memes-11.jpg\"\nyoutube_embed = '''\n<iframe width=\"400\" height=\"215\" src=\"https://www.youtube.com/embed/lmq5gauy17k\" title=\"youtube video player\" frameborder=\"0\" allow=\"accelerometer; encrypted-media;\"></iframe>\n'''\n\nmarkdown = \"\"\"\n### html in markdown is ~quite~ **unsafe**\n<blockquote>\n  however, if you are in a trusted environment (you trust the markdown). you can use allow_html props to enable support for html.\n</blockquote>\n\n* lists\n* [ ] todo\n* [x] done\n\nmath:\n\nlift($l$) can be determined by lift coefficient ($c_l$) like the following\nequation.\n\n$$\nl = \\\\frac{1}{2} \\\\rho v^2 s c_l\n$$\n\n~~~py\nimport streamlit as st\n\nst.write(\"python code block\")\n~~~\n\n~~~js\nconsole.log(\"here is some javascript code\")\n~~~\n\n\"\"\"\n\ntable_markdown = '''\na table:\n\n| feature     | support              |\n| ----------: | :------------------- |\n| commonmark  | 100%                 |\n| gfm         | 100% w/ `remark-gfm` |\n'''\n\nst.session_state.setdefault(\n    'past', \n    ['plan text with line break',\n     'play the song \"dancing vegetables\"', \n     'show me image of cat', \n     'and video of it',\n     'show me some markdown sample',\n     'table in markdown']\n)\nst.session_state.setdefault(\n    'generated', \n    [{'type': 'normal', 'data': 'line 1 \\n line 2 \\n line 3'},\n     {'type': 'normal', 'data': f'<audio controls src=\"{audio_path}\"></audio>'}, \n     {'type': 'normal', 'data': f'<img width=\"100%\" height=\"200\" src=\"{img_path}\"/>'}, \n     {'type': 'normal', 'data': f'{youtube_embed}'},\n     {'type': 'normal', 'data': f'{markdown}'},\n     {'type': 'table', 'data': f'{table_markdown}'}]\n)\n\nst.title(\"chat placeholder\")\n\nchat_placeholder = st.empty()\n\nwith chat_placeholder.container():    \n    for i in range(len(st.session_state['generated'])):                \n        message(st.session_state['past'][i], is_user=true, key=f\"{i}_user\")\n        message(\n            st.session_state['generated'][i]['data'], \n            key=f\"{i}\", \n            allow_html=true,\n            is_table=true if st.session_state['generated'][i]['type']=='table' else false\n        )\n\n    st.button(\"clear message\", on_click=on_btn_click)\n\nwith st.container():\n    st.text_input(\"user input:\", on_change=on_input_change, key=\"user_input\")\n\n```\n\n### screenshot\n\n![chatbot-markdown-sp](https://user-images.githubusercontent.com/27276267/224665635-1d9c1b8e-92ba-4f67-9e27-ad5d4eacaa43.png)\n\n\n\n",
  "docs_url": null,
  "keywords": "chat streamlit streamlit-component",
  "license": "",
  "name": "streamlit-chat",
  "package_url": "https://pypi.org/project/streamlit-chat/",
  "project_url": "https://pypi.org/project/streamlit-chat/",
  "project_urls": {
    "Homepage": "https://github.com/AI-Yash/st-chat"
  },
  "release_url": "https://pypi.org/project/streamlit-chat/0.1.1/",
  "requires_dist": [
    "streamlit (>=0.63)"
  ],
  "requires_python": ">=3.6",
  "summary": "a streamlit component, to make chatbots",
  "version": "0.1.1",
  "releases": [],
  "developers": [
    "yash_pravin_pawar",
    "yashpawarp@gmail.com"
  ],
  "kwds": "streamlit_chat chatbot chatbots chat_placeholder pip",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_streamlit_chat",
  "homepage": "https://github.com/ai-yash/st-chat",
  "release_count": 5,
  "dependency_ids": [
    "pypi_streamlit"
  ]
}
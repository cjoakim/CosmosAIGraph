{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing"
  ],
  "description": "# pylint-pytest\n\n![pypi - version](https://img.shields.io/pypi/v/pylint-pytest)\n![pypi - python version](https://img.shields.io/pypi/pyversions/pylint-pytest)\n![pypi - downloads](https://img.shields.io/pypi/dd/pylint-pytest)\n![pypi - license](https://img.shields.io/pypi/l/pylint-pytest)\n\n[![github - testing](https://github.com/pylint-dev/pylint-pytest/actions/workflows/run-tests.yaml/badge.svg)](https://github.com/pylint-dev/pylint-pytest/actions/workflows/run-tests.yaml)\n[![codecov](https://codecov.io/gh/pylint-dev/pylint-pytest/graph/badge.svg?token=nhzdlkmomd)](https://codecov.io/gh/pylint-dev/pylint-pytest)\n\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![checked with mypy](https://www.mypy-lang.org/static/mypy_badge.svg)](https://mypy-lang.org/)\n[![pylint](https://img.shields.io/badge/linting-pylint-yellowgreen)](https://github.com/pylint-dev/pylint)\n[![ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)\n\n[![say thanks!](https://img.shields.io/badge/say%20thanks-!-1eaedb.svg)](https://saythanks.io/to/stdedos)\n\na pylint plugin to suppress pytest-related false positives.\n\n## installation\n\nrequirements:\n\n- `pylint`\n- `pytest>=4.6`\n\nto install:\n\n```bash\n$ pip install pylint-pytest\n```\n\n## usage\n\nenable via command line option `--load-plugins`\n\n```bash\n$ pylint --load-plugins pylint_pytest <path_to_your_sources>\n```\n\nor in `.pylintrc`:\n\n```ini\n[master]\nload-plugins=pylint_pytest\n```\n\n## suppressed pylint warnings\n\n### `unused-argument`\n\nfp when a fixture is used in an applicable function but not referenced in the function body, e.g.\n\n```python\ndef test_something(conftest_fixture):  # <- unused argument 'conftest_fixture'\n    assert true\n```\n\n### `unused-import`\n\nfp when an imported fixture is used in an applicable function, e.g.\n\n```python\nfrom fixture_collections import (\n    imported_fixture,\n)  # <- unused imported_fixture imported from fixture_collections\n\n\ndef test_something(imported_fixture):\n    ...\n```\n\n### `redefined-outer-name`\n\nfp when an imported/declared fixture is used in an applicable function, e.g.\n\n```python\nfrom fixture_collections import imported_fixture\n\n\ndef test_something(\n    imported_fixture,\n):  # <- redefining name 'imported_fixture' from outer scope (line 1)\n    ...\n```\n\n### `no-member`\n\nfp when class attributes are defined in setup fixtures\n\n```python\nimport pytest\n\n\nclass testclass(object):\n    @staticmethod\n    @pytest.fixture(scope=\"class\", autouse=true)\n    def setup_class(request):\n        cls = request.cls\n        cls.defined_in_setup_class = true\n\n    def test_foo(self):\n        assert (\n            self.defined_in_setup_class\n        )  # <- instance of 'testclass' has no 'defined_in_setup_class' member\n```\n\n## raise new warning(s)\n\n### w6401 `deprecated-pytest-yield-fixture`\n\nraise when using deprecated `@pytest.yield_fixture` decorator ([ref](https://docs.pytest.org/en/latest/yieldfixture.html))\n\n```python\nimport pytest\n\n\n@pytest.yield_fixture  # <- using a deprecated @pytest.yield_fixture decorator\ndef yield_fixture():\n    yield\n```\n\n### w6402 `useless-pytest-mark-decorator`\n\nraise when using every `@pytest.mark.*` for the fixture ([ref](https://docs.pytest.org/en/stable/reference.html#marks))\n\n```python\nimport pytest\n\n\n@pytest.fixture\ndef awesome_fixture():\n    ...\n\n\n@pytest.fixture\n@pytest.mark.usefixtures(\n    \"awesome_fixture\"\n)  # <- using useless `@pytest.mark.*` decorator for fixtures\ndef another_awesome_fixture():\n    ...\n```\n\n### w6403 `deprecated-positional-argument-for-pytest-fixture`\n\nraise when using deprecated positional arguments for fixture decorator ([ref](https://docs.pytest.org/en/stable/deprecations.html#pytest-fixture-arguments-are-keyword-only))\n\n```python\nimport pytest\n\n\n@pytest.fixture(\"module\")  # <- using a deprecated positional arguments for fixture\ndef awesome_fixture():\n    ...\n```\n\n### f6401 `cannot-enumerate-pytest-fixtures`\n\nraise when the plugin cannot enumerate and collect pytest fixtures for analysis\n\nnote: this warning is only added to test modules (`test_*.py` / `*_test.py`)\n\n```python\nimport no_such_package  # <- pylint-pytest plugin cannot enumerate and collect pytest fixtures\n```\n\n## changelog\n\nsee [changelog](changelog.md).\n\n## license\n\n`pylint-pytest` is available under [mit license](license).\n",
  "docs_url": null,
  "keywords": "pylint,pytest,plugin",
  "license": "mit",
  "name": "pylint-pytest",
  "package_url": "https://pypi.org/project/pylint-pytest/",
  "project_url": "https://pypi.org/project/pylint-pytest/",
  "project_urls": {
    "Changelog": "https://github.com/pylint-dev/pylint-pytest/blob/master/CHANGELOG.md",
    "Documentation": "https://github.com/pylint-dev/pylint-pytest#readme",
    "Homepage": "https://github.com/pylint-dev/pylint-pytest",
    "Say Thanks!": "https://saythanks.io/to/stdedos",
    "Source": "https://github.com/pylint-dev/pylint-pytest",
    "Tracker": "https://github.com/pylint-dev/pylint-pytest/issues"
  },
  "release_url": "https://pypi.org/project/pylint-pytest/1.1.7/",
  "requires_dist": [
    "pylint >=2",
    "pytest >=4.6"
  ],
  "requires_python": ">=3.6",
  "summary": "a pylint plugin to suppress pytest-related false positives.",
  "version": "1.1.7",
  "releases": [],
  "developers": [
    "133706+stdedos@users.noreply.github.com",
    "stavros_ntentos"
  ],
  "kwds": "pylint_pytest pytest pylint pylintrc pypi",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pylint_pytest",
  "homepage": "https://github.com/pylint-dev/pylint-pytest",
  "release_count": 20,
  "dependency_ids": [
    "pypi_pylint",
    "pypi_pytest"
  ]
}
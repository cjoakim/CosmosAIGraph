{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: internet :: www/http"
  ],
  "description": "<p align=\"center\">\n  <img width=\"320\" height=\"320\" src=\"https://raw.githubusercontent.com/tomchristie/uvicorn/master/docs/uvicorn.png\" alt='uvicorn'>\n</p>\n\n<p align=\"center\">\n<em>an asgi web server, for python.</em>\n</p>\n\n---\n\n[![build status](https://github.com/encode/uvicorn/workflows/test%20suite/badge.svg)](https://github.com/encode/uvicorn/actions)\n[![package version](https://badge.fury.io/py/uvicorn.svg)](https://pypi.python.org/pypi/uvicorn)\n[![supported python version](https://img.shields.io/pypi/pyversions/uvicorn.svg?color=%2334d058)](https://pypi.org/project/uvicorn)\n\n**documentation**: [https://www.uvicorn.org](https://www.uvicorn.org)\n\n**requirements**: python 3.8+\n\nuvicorn is an asgi web server implementation for python.\n\nuntil recently python has lacked a minimal low-level server/application interface for\nasync frameworks. the [asgi specification][asgi] fills this gap, and means we're now able to\nstart building a common set of tooling usable across all async frameworks.\n\nuvicorn supports http/1.1 and websockets.\n\n## quickstart\n\ninstall using `pip`:\n\n```shell\n$ pip install uvicorn\n```\n\nthis will install uvicorn with minimal (pure python) dependencies.\n\n```shell\n$ pip install 'uvicorn[standard]'\n```\n\nthis will install uvicorn with \"cython-based\" dependencies (where possible) and other \"optional extras\".\n\nin this context, \"cython-based\" means the following:\n\n- the event loop `uvloop` will be installed and used if possible.\n- the http protocol will be handled by `httptools` if possible.\n\nmoreover, \"optional extras\" means that:\n\n- the websocket protocol will be handled by `websockets` (should you want to use `wsproto` you'd need to install it manually) if possible.\n- the `--reload` flag in development mode will use `watchfiles`.\n- windows users will have `colorama` installed for the colored logs.\n- `python-dotenv` will be installed should you want to use the `--env-file` option.\n- `pyyaml` will be installed to allow you to provide a `.yaml` file to `--log-config`, if desired.\n\ncreate an application, in `example.py`:\n\n```python\nasync def app(scope, receive, send):\n    assert scope['type'] == 'http'\n\n    await send({\n        'type': 'http.response.start',\n        'status': 200,\n        'headers': [\n            (b'content-type', b'text/plain'),\n        ],\n    })\n    await send({\n        'type': 'http.response.body',\n        'body': b'hello, world!',\n    })\n```\n\nrun the server:\n\n```shell\n$ uvicorn example:app\n```\n\n---\n\n## why asgi?\n\nmost well established python web frameworks started out as wsgi-based frameworks.\n\nwsgi applications are a single, synchronous callable that takes a request and returns a response.\nthis doesn\u2019t allow for long-lived connections, like you get with long-poll http or websocket connections,\nwhich wsgi doesn't support well.\n\nhaving an async concurrency model also allows for options such as lightweight background tasks,\nand can be less of a limiting factor for endpoints that have long periods being blocked on network\ni/o such as dealing with slow http requests.\n\n---\n\n## alternative asgi servers\n\na strength of the asgi protocol is that it decouples the server implementation\nfrom the application framework. this allows for an ecosystem of interoperating\nwebservers and application frameworks.\n\n### daphne\n\nthe first asgi server implementation, originally developed to power django channels, is [the daphne webserver][daphne].\n\nit is run widely in production, and supports http/1.1, http/2, and websockets.\n\nany of the example applications given here can equally well be run using `daphne` instead.\n\n```\n$ pip install daphne\n$ daphne app:app\n```\n\n### hypercorn\n\n[hypercorn][hypercorn] was initially part of the quart web framework, before\nbeing separated out into a standalone asgi server.\n\nhypercorn supports http/1.1, http/2, and websockets.\n\nit also supports [the excellent `trio` async framework][trio], as an alternative to `asyncio`.\n\n```\n$ pip install hypercorn\n$ hypercorn app:app\n```\n\n### mangum\n\n[mangum][mangum] is an adapter for using asgi applications with aws lambda & api gateway.\n\n---\n\n<p align=\"center\"><i>uvicorn is <a href=\"https://github.com/encode/uvicorn/blob/master/license.md\">bsd licensed</a> code.<br/>designed & crafted with care.</i><br/>&mdash; \ud83e\udd84  &mdash;</p>\n\n[asgi]: https://asgi.readthedocs.io/en/latest/\n[daphne]: https://github.com/django/daphne\n[hypercorn]: https://github.com/pgjones/hypercorn\n[mangum]: https://mangum.io\n[trio]: https://trio.readthedocs.io\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "uvicorn",
  "package_url": "https://pypi.org/project/uvicorn/",
  "project_url": "https://pypi.org/project/uvicorn/",
  "project_urls": {
    "Changelog": "https://github.com/encode/uvicorn/blob/master/CHANGELOG.md",
    "Funding": "https://github.com/sponsors/encode",
    "Homepage": "https://www.uvicorn.org/",
    "Source": "https://github.com/encode/uvicorn"
  },
  "release_url": "https://pypi.org/project/uvicorn/0.25.0/",
  "requires_dist": [
    "click>=7.0",
    "h11>=0.8",
    "typing-extensions>=4.0; python_version < '3.11'",
    "colorama>=0.4; (sys_platform == 'win32') and extra == 'standard'",
    "httptools>=0.5.0; extra == 'standard'",
    "python-dotenv>=0.13; extra == 'standard'",
    "pyyaml>=5.1; extra == 'standard'",
    "uvloop!=0.15.0,!=0.15.1,>=0.14.0; (sys_platform != 'win32' and (sys_platform != 'cygwin' and platform_python_implementation != 'PyPy')) and extra == 'standard'",
    "watchfiles>=0.13; extra == 'standard'",
    "websockets>=10.4; extra == 'standard'"
  ],
  "requires_python": ">=3.8",
  "summary": "the lightning-fast asgi server.",
  "version": "0.25.0",
  "releases": [],
  "developers": [
    "tom@tomchristie.com"
  ],
  "kwds": "uvicorn uvloop wsgi svg py",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_uvicorn",
  "homepage": "",
  "release_count": 154,
  "dependency_ids": [
    "pypi_click",
    "pypi_colorama",
    "pypi_h11",
    "pypi_httptools",
    "pypi_python_dotenv",
    "pypi_pyyaml",
    "pypi_typing_extensions",
    "pypi_uvloop!",
    "pypi_watchfiles",
    "pypi_websockets"
  ]
}
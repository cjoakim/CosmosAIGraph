{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "topic :: database"
  ],
  "description": "# <img src=\"https://github.com/singlestore-labs/singlestoredb-python/blob/main/resources/singlestore-logo.png\" height=\"60\" valign=\"middle\"/> singlestoredb python interface\n\nthis project contains a [db-api 2.0](https://www.python.org/dev/peps/pep-0249/)\ncompatible python interface to the singlestore database and workspace management api.\n\n> **warning**\n> as of version v0.5.0, the parameter substitution syntax has changed from `:1`, `:2`, etc.\n> for list parameters and `:foo`, `:bar`, etc. for dictionary parameters to `%s` and `%(foo)s`,\n> `%(bar)s` etc., respectively.\n\n## install\n\nthis package can be install from pypi using `pip`:\n```\npip install singlestoredb\n```\n\n## documentation\n\nhttps://singlestore-labs.github.io/singlestoredb-python\n\n## usage\n\nconnections to the singlestore database are made using the db-api parameters\n`host`, `port`, `user`, `password`, etc, but they may also be done using\nurls that specify these parameters as well (much like the\n[sqlalchemy](https://www.sqlalchemy.org) package).\n```\nimport singlestoredb as s2\n\n# connect using the default connector\nconn = s2.connect('user:password@host:3306/db_name')\n\n# create a cursor\ncur = conn.cursor()\n\n# execute sql\ncur.execute('select * from foo')\n\n# fetch the results\nprint(cur.description)\nfor item in cur:\n    print(item)\n\n# close the connection\nconn.close()\n```\n\nconnecting to the http api is done as follows:\n```\n# use the http api connector\nconn = s2.connect('https://user:password@host:8080/db_name')\n```\n\n## performance\n\nwhile this package is based on [pymysql](https://github.com/pymysql/pymysql)\nwhich is a pure python-based mysql connector, it adds various performance\nenhancements that make it faster than most other connectors. the performance\nimprovements come from changes to the data conversion functions, cursor implementations,\nand a c extension that is highly optimized to improve row data reading.\n\nthe package can be used both in a pure python mode and as well as a c accelerated\nmode. generally speaking, the c accelerated version of the client can read\ndata 10x faster than pymysql, 2x faster than mysqldb, and 1.5x faster than\nmysql.connector. all of this is done without having to install any 3rd party\nmysql libraries!\n\nbenchmarking was done with a table of 3,533,286 rows each containing a datetime,\na float, and eight character columns. the data is the same data set used in\n[this article](https://www.singlestore.com/blog/how-to-get-started-with-singlestore/).\nthe client and server were running on the same machine and queries were made\nusing `fetchone`, `fetchall`, `fetchmany(1000)`, and an iterator over the cursor\nobject (e.g., `iter(cur)`). the results are shown below.\n\n### buffered\n\n|                         | pymysql | mysqldb | mysql.connector | singlestore (pure python) | singlestore |\n|-------------------------|---------|---------|-----------------|---------------------------|-------------|\n| fetchall                |   37.0s |    8.7s |            5.6s |                     29.0s |        3.7s |\n| fetchmany(1000)         |   37.4s |    9.2s |            6.2s |                     29.6s |        3.6s |\n| fetchone                |   38.2s |   10.1s |            10.2s |                     30.9s |        4.8s |\n| iter(cur)               |   38.3s |    9.1s |            10.2s |                     30.4s |        4.4s |\n\n### unbuffered\n\n|                         | pymysql | mysqldb | mysql.connector | singlestore (pure python) | singlestore |\n|-------------------------|---------|---------|-----------------|---------------------------|-------------|\n| fetchall                |   39.0s |    6.5s |            5.5s |                     30.3s |        5.5s |\n| fetchmany(1000)         |   39.4s |    7.0s |            6.0s |                     30.4s |        4.1s |\n| fetchone                |   34.5s |    8.9s |           10.1s |                     30.8s |        6.6s |\n| iter(cur)               |   39.0s |    9.0s |           10.2s |                     31.4s |        6.0s |\n\n\n## license\n\nthis library is licensed under the [apache 2.0 license](https://raw.githubusercontent.com/singlestore-labs/singlestoredb-python/main/license?token=ghsat0aaaaaabmgv6qpnr6n23bvicdyk5laytvk5ea).\n\n## resources\n\n* [singlestore](https://singlestore.com)\n* [python](https://python.org)\n\n## user agreement\n\nsinglestore, inc. (\"singlestore\") agrees to grant you and your company access to this open source software connector only if (a) you and your company represent and warrant that you, on behalf of your company, have the authority to legally bind your company and (b) you, on behalf of your company accept and agree to be bound by all of the open source terms and conditions applicable to this open source connector as set forth below (this \u201cagreement\u201d), which shall be definitively evidenced by any one of the following means: you, on behalf of your company, clicking the \u201cdownload, \u201cacceptance\u201d or \u201ccontinue\u201d button, as applicable or company\u2019s installation, access or use of the open source connector and shall be effective on the earlier of the date on which the download, access, copy or install of the connector or use any services (including any updates or upgrades) provided by singlestore.\nbeta software connector\n\ncustomer understands and agrees that it is  being granted access to pre-release or \u201cbeta\u201d versions of singlestore\u2019s open source software connector (\u201cbeta software connector\u201d) for the limited purposes of non-production testing and evaluation of such beta software connector. customer acknowledges that singlestore shall have no obligation to release a generally available version of such beta software connector or to provide support or warranty for such versions of the beta software connector  for any production or non-evaluation use.\n\nnotwithstanding anything to the contrary in any documentation,  agreement or in any order document, singlestore will have no warranty, indemnity, support, or service level, obligations with\nrespect to this beta software connector (including tools and utilities).\n\napplicable open source license: apache 2.0\n\nif you or your company do not agree to these terms and conditions, do not check the acceptance box, and do not download, access, copy, install or use the software or the services.\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "singlestoredb",
  "package_url": "https://pypi.org/project/singlestoredb/",
  "project_url": "https://pypi.org/project/singlestoredb/",
  "project_urls": {
    "Homepage": "https://github.com/singlestore-labs/singlestoredb-python"
  },
  "release_url": "https://pypi.org/project/singlestoredb/0.10.2/",
  "requires_dist": [
    "PyJWT",
    "build",
    "parsimonious",
    "requests",
    "sqlparams",
    "wheel",
    "ibis-singlestoredb ; extra == 'dataframe'",
    "dbt-singlestore ; extra == 'dbt'",
    "PyNaCl (>=1.4.0) ; extra == 'ed22519'",
    "gssapi ; extra == 'gssapi'",
    "ibis-singlestoredb ; extra == 'ibis'",
    "gssapi ; extra == 'kerberos'",
    "cryptography ; extra == 'rsa'",
    "sqlalchemy-singlestoredb ; extra == 'sqlalchemy'"
  ],
  "requires_python": ">=3.8",
  "summary": "interface to the singlestoredb database and workspace management apis",
  "version": "0.10.2",
  "releases": [],
  "developers": [
    "singlestore",
    "support@singlestore.com"
  ],
  "kwds": "singlestoredb singlestore pymysql python pypi",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_singlestoredb",
  "homepage": "https://github.com/singlestore-labs/singlestoredb-python",
  "release_count": 37,
  "dependency_ids": [
    "pypi_build",
    "pypi_cryptography",
    "pypi_dbt_singlestore",
    "pypi_gssapi",
    "pypi_ibis_singlestoredb",
    "pypi_parsimonious",
    "pypi_pyjwt",
    "pypi_pynacl",
    "pypi_requests",
    "pypi_sqlalchemy_singlestoredb",
    "pypi_sqlparams",
    "pypi_wheel"
  ]
}
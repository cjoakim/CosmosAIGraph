{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries"
  ],
  "description": "================================================================================\npyexcel-io - let you focus on data, instead of file formats\n================================================================================\n\n.. image:: https://raw.githubusercontent.com/pyexcel/pyexcel.github.io/master/images/patreon.png\n   :target: https://www.patreon.com/chfw\n\n.. image:: https://raw.githubusercontent.com/pyexcel/pyexcel-mobans/master/images/awesome-badge.svg\n   :target: https://awesome-python.com/#specific-formats-processing\n\n.. image:: https://github.com/pyexcel/pyexcel-io/workflows/run_tests/badge.svg\n   :target: http://github.com/pyexcel/pyexcel-io/actions\n\n.. image:: https://codecov.io/gh/pyexcel/pyexcel-io/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/pyexcel/pyexcel-io\n\n.. image:: https://badge.fury.io/py/pyexcel-io.svg\n   :target: https://pypi.org/project/pyexcel-io\n\n.. image:: https://anaconda.org/conda-forge/pyexcel-io/badges/version.svg\n   :target: https://anaconda.org/conda-forge/pyexcel-io\n\n.. image:: https://pepy.tech/badge/pyexcel-io/month\n   :target: https://pepy.tech/project/pyexcel-io\n\n.. image:: https://anaconda.org/conda-forge/pyexcel-io/badges/downloads.svg\n   :target: https://anaconda.org/conda-forge/pyexcel-io\n\n.. image:: https://img.shields.io/gitter/room/gitterhq/gitter.svg\n   :target: https://gitter.im/pyexcel/lobby\n\n.. image:: https://img.shields.io/static/v1?label=continuous%20templating&message=%e6%a8%a1%e7%89%88%e6%9b%b4%e6%96%b0&color=blue&style=flat-square\n    :target: https://moban.readthedocs.io/en/latest/#at-scale-continous-templating-for-open-source-projects\n\n.. image:: https://img.shields.io/static/v1?label=coding%20style&message=black&color=black&style=flat-square\n    :target: https://github.com/psf/black\n.. image:: https://readthedocs.org/projects/pyexcel-io/badge/?version=latest\n   :target: http://pyexcel-io.readthedocs.org/en/latest/\n\nsupport the project\n================================================================================\n\nif your company has embedded pyexcel and its components into a revenue generating\nproduct, please support me on github, `patreon <https://www.patreon.com/bepatron?u=5537627>`_\nor `bounty source <https://salt.bountysource.com/teams/chfw-pyexcel>`_ to maintain\nthe project and develop it further.\n\nif you are an individual, you are welcome to support me too and for however long\nyou feel like. as my backer, you will receive\n`early access to pyexcel related contents <https://www.patreon.com/pyexcel/posts>`_.\n\nand your issues will get prioritized if you would like to become my patreon as `pyexcel pro user`.\n\nwith your financial support, i will be able to invest\na little bit more time in coding, documentation and writing interesting posts.\n\n\nknown constraints\n==================\n\nfonts, colors and charts are not supported.\n\nnor to read password protected xls, xlsx and ods files.\n\nintroduction\n================================================================================\n\n**pyexcel-io** provides **one** application programming interface(api) to read\nand write the data in excel format, import the data into and export the data\nfrom database. it provides support for csv(z) format, django database and\nsqlalchemy supported databases. its supported file formats are extended to cover\n\"xls\", \"xlsx\", \"ods\" by the following extensions:\n\n.. _file-format-list:\n.. _a-map-of-plugins-and-file-formats:\n\n.. table:: a list of file formats supported by external plugins\n\n   ======================== ======================= =================\n   package name              supported file formats  dependencies\n   ======================== ======================= =================\n   `pyexcel-io`_            csv, csvz [#f1]_, tsv,\n                            tsvz [#f2]_\n   `pyexcel-xls`_           xls, xlsx(read only),   `xlrd`_,\n                            xlsm(read only)         `xlwt`_\n   `pyexcel-xlsx`_          xlsx                    `openpyxl`_\n   `pyexcel-ods3`_          ods                     `pyexcel-ezodf`_,\n                                                    lxml\n   `pyexcel-ods`_           ods                     `odfpy`_\n   ======================== ======================= =================\n\n.. table:: dedicated file reader and writers\n\n   ======================== ======================= =================\n   package name              supported file formats  dependencies\n   ======================== ======================= =================\n   `pyexcel-xlsxw`_         xlsx(write only)        `xlsxwriter`_\n   `pyexcel-libxlsxw`_      xlsx(write only)        `libxlsxwriter`_\n   `pyexcel-xlsxr`_         xlsx(read only)         lxml\n   `pyexcel-xlsbr`_         xlsb(read only)         pyxlsb\n   `pyexcel-odsr`_          read only for ods, fods lxml\n   `pyexcel-odsw`_          write only for ods      loxun\n   `pyexcel-htmlr`_         html(read only)         lxml,html5lib\n   `pyexcel-pdfr`_          pdf(read only)          camelot\n   ======================== ======================= =================\n\n\nplugin shopping guide\n------------------------\n\nsince 2020, all pyexcel-io plugins have dropped the support for python versions\nwhich are lower than 3.6. if you want to use any of those python versions, please use pyexcel-io\nand its plugins versions that are lower than 0.6.0.\n\n\nexcept csv files, xls, xlsx and ods files are a zip of a folder containing a lot of\nxml files\n\nthe dedicated readers for excel files can stream read\n\n\nin order to manage the list of plugins installed, you need to use pip to add or remove\na plugin. when you use virtualenv, you can have different plugins per virtual\nenvironment. in the situation where you have multiple plugins that does the same thing\nin your environment, you need to tell pyexcel which plugin to use per function call.\nfor example, pyexcel-ods and pyexcel-odsr, and you want to get_array to use pyexcel-odsr.\nyou need to append get_array(..., library='pyexcel-odsr').\n\n\n\n.. _pyexcel-io: https://github.com/pyexcel/pyexcel-io\n.. _pyexcel-xls: https://github.com/pyexcel/pyexcel-xls\n.. _pyexcel-xlsx: https://github.com/pyexcel/pyexcel-xlsx\n.. _pyexcel-ods: https://github.com/pyexcel/pyexcel-ods\n.. _pyexcel-ods3: https://github.com/pyexcel/pyexcel-ods3\n.. _pyexcel-odsr: https://github.com/pyexcel/pyexcel-odsr\n.. _pyexcel-odsw: https://github.com/pyexcel/pyexcel-odsw\n.. _pyexcel-pdfr: https://github.com/pyexcel/pyexcel-pdfr\n\n.. _pyexcel-xlsxw: https://github.com/pyexcel/pyexcel-xlsxw\n.. _pyexcel-libxlsxw: https://github.com/pyexcel/pyexcel-libxlsxw\n.. _pyexcel-xlsxr: https://github.com/pyexcel/pyexcel-xlsxr\n.. _pyexcel-xlsbr: https://github.com/pyexcel/pyexcel-xlsbr\n.. _pyexcel-htmlr: https://github.com/pyexcel/pyexcel-htmlr\n\n.. _xlrd: https://github.com/python-excel/xlrd\n.. _xlwt: https://github.com/python-excel/xlwt\n.. _openpyxl: https://bitbucket.org/openpyxl/openpyxl\n.. _xlsxwriter: https://github.com/jmcnamara/xlsxwriter\n.. _pyexcel-ezodf: https://github.com/pyexcel/pyexcel-ezodf\n.. _odfpy: https://github.com/eea/odfpy\n.. _libxlsxwriter: http://libxlsxwriter.github.io/getting_started.html\n\n\n.. rubric:: footnotes\n\n.. [#f1] zipped csv file\n.. [#f2] zipped tsv file\n\nif you need to manipulate the data, you might do it yourself or use its brother\nlibrary `pyexcel <https://github.com/pyexcel/pyexcel>`__ .\n\nif you would like to extend it, you may use it to write your own\nextension to handle a specific file format.\n\n\n\n\ninstallation\n================================================================================\n\nyou can install pyexcel-io via pip:\n\n.. code-block:: bash\n\n    $ pip install pyexcel-io\n\n\nor clone it and install it:\n\n.. code-block:: bash\n\n    $ git clone https://github.com/pyexcel/pyexcel-io.git\n    $ cd pyexcel-io\n    $ python setup.py install\n\n\n\ndevelopment guide\n================================================================================\n\ndevelopment steps for code changes\n\n#. git clone https://github.com/pyexcel/pyexcel-io.git\n#. cd pyexcel-io\n\nupgrade your setup tools and pip. they are needed for development and testing only:\n\n#. pip install --upgrade setuptools pip\n\nthen install relevant development requirements:\n\n#. pip install -r rnd_requirements.txt # if such a file exists\n#. pip install -r requirements.txt\n#. pip install -r tests/requirements.txt\n\nonce you have finished your changes, please provide test case(s), relevant documentation\nand update changelog.yml\n\n.. note::\n\n    as to rnd_requirements.txt, usually, it is created when a dependent\n    library is not released. once the dependecy is installed\n    (will be released), the future\n    version of the dependency in the requirements.txt will be valid.\n\n\nhow to test your contribution\n------------------------------\n\nalthough `nose` and `doctest` are both used in code testing, it is adviable that unit tests are put in tests. `doctest` is incorporated only to make sure the code examples in documentation remain valid across different development releases.\n\non linux/unix systems, please launch your tests like this::\n\n    $ make\n\non windows, please issue this command::\n\n    > test.bat\n\n\nbefore you commit\n------------------------------\n\nplease run::\n\n    $ make format\n\nso as to beautify your code otherwise your build may fail your unit test.\n\n\n\n\nlicense\n================================================================================\n\nnew bsd license\n\nchange log\n================================================================================\n\n0.6.6 - 31.1.2022\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#112 <https://github.com/pyexcel/pyexcel-io/issues/112>`_: log empty row\n   warning instead 'print' \n\n0.6.5 - 08.10.2021\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#109 <https://github.com/pyexcel/pyexcel-io/issues/109>`_: enable ods3 to\n   have datetime\n\n0.6.4 - 31.10.2020\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#102 <https://github.com/pyexcel/pyexcel-io/issues/102>`_: skip columns from\n   imported excel sheet.\n\n0.6.3 - 12.10.2020\n--------------------------------------------------------------------------------\n\n**fixed**\n\n#. `#96 <https://github.com/pyexcel/pyexcel-io/issues/96>`_: regression: unknown\n   file type shall trigger nosupportingpluginfound\n\n**updated**\n\n#. extra dependencies uses 0.6.0 based plugins\n\n0.6.2 - 7.10.2020\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#94 <https://github.com/pyexcel/pyexcel-io/issues/94>`_: keep backward\n   compatibility for pyexcel-xls 0.4.1\n\n0.6.1 - 7.10.2020\n--------------------------------------------------------------------------------\n\n**removed**\n\n#. python 3.6 lower versions are no longer supported\n\n**updated**\n\n#. pyexcel-io plugin interface has been rewritten. pyinstaller user will be\n   impacted. please read 'packaging with pyinstaller' in the documentation.\n#. new query set reader plugin. pyexcel<=0.6.4 has used intrusive way of getting\n   query set source done. it is against the plugin interface.\n\n**fixed**\n\n#. `#74 <https://github.com/pyexcel/pyexcel-io/issues/74>`_: handle zip files\n   which contain non-utf-8 encoded files.\n\n**added**\n\n#. `#86 <https://github.com/pyexcel/pyexcel-io/issues/86>`_: allow trailing\n   options, get_data(...keep_trailing_empty_cells=true).\n\n0.5.20 - 17.7.2019\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#70 <https://github.com/pyexcel/pyexcel-io/issues/70>`_: when the given file\n   is a root directory, the error shall read it is not a file\n\n0.5.19 - 14.7.2019\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `pyexcel#185 <https://github.com/pyexcel/pyexcel/issues/185>`_: handle stream\n   conversion if file type(html) needs string content then bytes to handle\n\n0.5.18 - 12.06.2019\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#69 <https://github.com/pyexcel/pyexcel-io/issues/69>`_: force file\n   type(force_file_type) on write\n\n0.5.17 - 04.04.2019\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#68 <https://github.com/pyexcel/pyexcel-io/issues/68>`_: raise ioerror when\n   the data file does not exist\n\n0.5.16 - 19.03.2019\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#67 <https://github.com/pyexcel/pyexcel-io/issues/67>`_: fix conversion\n   issue for long type on python 2.7 for ods\n\n0.5.15 - 16.03.2019\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `pyexcel-ods#33 <https://github.com/pyexcel/pyexcel-ods/issues/33>`_: fix\n   integer comparision error on i586\n\n0.5.14 - 21.02.2019\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#65 <https://github.com/pyexcel/pyexcel-io/issues/65>`_: add\n   tests/__init__.py because python2.7 setup.py test needs it\n\n0.5.13 - 12.02.2019\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#63 <https://github.com/pyexcel/pyexcel-io/issues/63>`_: version 0.5.12\n   prevents xslx and ods plugin from being loaded\n\n0.5.12 - 9.02.2019\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#60 <https://github.com/pyexcel/pyexcel-io/issues/60>`_: include tests in\n   tar ball\n#. `#61 <https://github.com/pyexcel/pyexcel-io/issues/61>`_: enable python\n   setup.py test\n\n0.5.11 - 3.12.2018\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#59 <https://github.com/pyexcel/pyexcel-io/issues/59>`_: please use\n   scan_plugins_regex, which lml 0.7 complains about\n\n0.5.10 - 27.11.2018\n--------------------------------------------------------------------------------\n\n**added**\n\n#. `#57 <https://github.com/pyexcel/pyexcel-io/issues/57>`_, long type will not\n   be written in ods. please use string type. and if the integer is equal or\n   greater than 10 to the power of 16, it will not be written either in ods. in\n   both situation, integerprecisionlosserror will be raised. and this version\n   enables pyexcel-ods and pyexcel-ods3 to do so.\n\n0.5.9.1 - 30.08.2018\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#53 <https://github.com/pyexcel/pyexcel-io/issues/53>`_, upgrade lml\n   dependency to at least 0.0.2\n\n0.5.9 - 23.08.2018\n--------------------------------------------------------------------------------\n\n**added**\n\n#. `pyexcel#148 <https://github.com/pyexcel/pyexcel/issues/148>`_, support\n   force_file_type\n\n0.5.8 - 16.08.2018\n--------------------------------------------------------------------------------\n\n**added**\n\n#. `#49 <https://github.com/pyexcel/pyexcel-io/issues/49>`_, support additional\n   options when detecting float values in csv format. default_float_nan,\n   ignore_nan_text\n\n0.5.7 - 02.05.2018\n--------------------------------------------------------------------------------\n\n**fixed**\n\n#. `#48 <https://github.com/pyexcel/pyexcel-io/issues/48>`_, turn off pep 0515\n#. `#47 <https://github.com/pyexcel/pyexcel-io/issues/47>`_, csv reader cannot\n   handle relative file names\n\n0.5.6 - 11.01.2018\n--------------------------------------------------------------------------------\n\n**fixed**\n\n#. `#46 <https://github.com/pyexcel/pyexcel-io/issues/46>`_, expose `bulk_save`\n   to developer\n\n0.5.5 - 23.12.2017\n--------------------------------------------------------------------------------\n\n**fixed**\n\n#. issue `#45 <https://github.com/pyexcel/pyexcel-io/issues/45>`_, csv reader\n   throws exception because google app engine does not support mmap. people who\n   are not working with google app engine, need not to take this update. enjoy\n   your christmas break.\n\n0.5.4 - 10.11.2017\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. pr `#44 <https://github.com/pyexcel/pyexcel-io/pull/44>`_, use unicodewriter\n   for csvz writers.\n\n0.5.3 - 23.10.2017\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. pyexcel `pyexcel#105 <https://github.com/pyexcel/pyexcel/issues/105>`_,\n   remove gease from setup_requires, introduced by 0.5.2.\n#. remove python2.6 test support\n\n0.5.2 - 20.10.2017\n--------------------------------------------------------------------------------\n\n**added**\n\n#. `pyexcel#103 <https://github.com/pyexcel/pyexcel/issues/103>`_, include\n   license file in manifest.in, meaning license file will appear in the released\n   tar ball.\n\n0.5.1 - 02.09.2017\n--------------------------------------------------------------------------------\n\n**fixed**\n\n#. `pyexcel-ods#25 <https://github.com/pyexcel/pyexcel-ods/issues/25>`_,\n   unwanted dependency on pyexcel.\n\n0.5.0 - 30.08.2017\n--------------------------------------------------------------------------------\n\n**added**\n\n#. collect all data type conversion codes as service.py.\n\n**updated**\n\n#. `#19 <https://github.com/pyexcel/pyexcel-io/issues/19>`_, use cstring by\n   default. for python, it will be a performance boost\n\n0.4.4 - 08.08.2017\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#42 <https://github.com/pyexcel/pyexcel-io/issues/42>`_, raise exception if\n   database table name does not match the sheet name\n\n0.4.3 - 29.07.2017\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#41 <https://github.com/pyexcel/pyexcel-io/issues/41>`_, walk away\n   gracefully when mmap is not available.\n\n0.4.2 - 05.07.2017\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#37 <https://github.com/pyexcel/pyexcel-io/issues/37>`_, permanently fix the\n   residue folder pyexcel by release all future releases in a clean clone.\n\n0.4.1 - 29.06.2017\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#39 <https://github.com/pyexcel/pyexcel-io/issues/39>`_, raise exception\n   when bulk save in django fails. please `bulk_save=false` if you as the\n   developer choose to save the records one by one if bulk_save cannot be used.\n   however, exception in one-by-one save case will be raised as well. this\n   change is made to raise exception in the first place so that you as the\n   developer will be suprised when it was deployed in production.\n\n0.4.0 - 19.06.2017\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. 'built-in' as the value to the parameter 'library' as parameter to invoke\n   pyexcel-io's built-in csv, tsv, csvz, tsvz, django and sql won't work. it is\n   renamed to 'pyexcel-io'.\n#. built-in csv, tsv, csvz, tsvz, django and sql are lazy loaded.\n#. pyexcel-io plugin interface has been updated. v0.3.x plugins won't work.\n#. `#32 <https://github.com/pyexcel/pyexcel-io/issues/32>`_, csv and csvz file\n   handle are made sure to be closed. file close mechanism is enfored.\n#. iget_data function is introduced to cope with dangling file handle issue.\n\n**removed**\n\n#. removed plugin loading code and lml is used instead\n\n0.3.4 - 18.05.2017\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#33 <https://github.com/pyexcel/pyexcel-io/issues/33>`_, handle mmap object\n   differently given as file content. this issue has put in a priority to single\n   sheet csv over multiple sheets in a single memory stream. the latter format\n   is pyexcel own creation but is rarely used. in latter case,\n   multiple_sheet=true should be passed along get_data.\n#. `#34 <https://github.com/pyexcel/pyexcel-io/issues/34>`_, treat mmap object\n   as a file content.\n#. `#35 <https://github.com/pyexcel/pyexcel-io/issues/35>`_, encoding parameter\n   take no effect when given along with file content\n#. use zip_defalted to really do the compression\n\n0.3.3 - 30.03.2017\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#31 <https://github.com/pyexcel/pyexcel-io/issues/31>`_, support pyinstaller\n\n0.3.2 - 26.01.2017\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#29 <https://github.com/pyexcel/pyexcel-io/issues/29>`_, change\n   skip_empty_rows to false by default\n\n0.3.1 - 21.01.2017\n--------------------------------------------------------------------------------\n\n**added**\n\n#. updated versions of extra packages\n\n**updated**\n\n#. `#23 <https://github.com/pyexcel/pyexcel-io/issues/23>`_, provide helpful\n   message when old pyexcel plugin exists\n#. restored previously available diagnosis message for missing libraries\n\n0.3.0 - 22.12.2016\n--------------------------------------------------------------------------------\n\n**added**\n\n#. lazy loading of plugins. for example, pyexcel-xls is not entirely loaded\n   until xls format is used at its first attempted reading or writing. since it\n   is loaded, it will not be loaded in the second io action.\n#. `pyexcel-xls#11 <https://github.com/pyexcel/pyexcel-xls/issues/11>`_, make\n   case-insensitive for file type\n\n0.2.6 - 21.12.2016\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#24 <https://github.com/pyexcel/pyexcel-io/issues/24>`__, pass on batch_size\n\n0.2.5 - 20.12.2016\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#26 <https://github.com/pyexcel/pyexcel-io/issues/26>`__, performance issue\n   with getting the number of columns.\n\n0.2.4 - 24.11.2016\n--------------------------------------------------------------------------------\n\n**updated**\n\n#. `#23 <https://github.com/pyexcel/pyexcel-io/issues/23>`__, failed to convert\n   long integer string in python 2 to its actual value\n\n0.2.3 - 16.09.2016\n--------------------------------------------------------------------------------\n\n**added**\n\n#. `#21 <https://github.com/pyexcel/pyexcel-io/issues/21>`__, choose subset from\n   data base tables for export\n#. `#22 <https://github.com/pyexcel/pyexcel-io/issues/22>`__, custom renderer if\n   given `row_renderer` as parameter.\n\n0.2.2 - 31.08.2016\n--------------------------------------------------------------------------------\n\n**added**\n\n#. support pagination. two pairs: start_row, row_limit and start_column,\n   column_limit help you deal with large files.\n#. `skip_empty_rows=true` was introduced. to include empty rows, put it to\n   false.\n\n**updated**\n\n#. `#20 <https://github.com/pyexcel/pyexcel-io/issues/20>`__, pyexcel-io\n   attempts to parse cell contents of 'infinity' as a float/int, crashes\n\n0.2.1 - 11.07.2016\n--------------------------------------------------------------------------------\n\n**added**\n\n#. csv format: handle utf-16 encoded csv files. potentially being able to decode\n   other formats if correct \"encoding\" is provided\n#. csv format: write utf-16 encoded files. potentially other encoding is also\n   supported\n#. support stdin as input stream and stdout as output stream\n\n**updated**\n\n#. attention, user of pyexcel-io! no longer io stream validation is performed in\n   python 3. the guideline is: io.stringio for csv, tsv only, otherwise bytesio\n   for xlsx, xls, ods. you can use rwmanager.get_io to produce a correct stream\n   type for you.\n#. `#15 <https://github.com/pyexcel/pyexcel-io/issues/15>`__, support foreign\n   django/sql foreign key\n\n0.2.0 - 01.06.2016\n--------------------------------------------------------------------------------\n\n**added**\n\n#. autoload of pyexcel-io plugins\n#. auto detect `datetime`, `float` and `int`. detection can be switched off by\n   `auto_detect_datetime`, `auto_detect_float`, `auto_detect_int`\n\n0.1.0 - 17.01.2016\n--------------------------------------------------------------------------------\n\n**added**\n\n#. yield key word to return generator as content\n\n\n\n",
  "docs_url": null,
  "keywords": "python,api,tsv,tsvz,csv,csvz,django,sqlalchemy",
  "license": "new bsd",
  "name": "pyexcel-io",
  "package_url": "https://pypi.org/project/pyexcel-io/",
  "project_url": "https://pypi.org/project/pyexcel-io/",
  "project_urls": {
    "Download": "https://github.com/pyexcel/pyexcel-io/archive/0.6.6.tar.gz",
    "Homepage": "https://github.com/pyexcel/pyexcel-io"
  },
  "release_url": "https://pypi.org/project/pyexcel-io/0.6.6/",
  "requires_dist": [
    "lml (>=0.0.4)",
    "pyexcel-ods3 (>=0.6.0) ; extra == 'ods'",
    "pyexcel-xls (>=0.6.0) ; extra == 'xls'",
    "pyexcel-xlsx (>=0.6.0) ; extra == 'xlsx'"
  ],
  "requires_python": ">=3.6",
  "summary": "a python library to read and write structured data in csv, zipped csvformat and to/from databases",
  "version": "0.6.6",
  "releases": [],
  "developers": [
    "info@pyexcel.org"
  ],
  "kwds": "csv csvformat sqlalchemy csvz django",
  "license_kwds": "new bsd",
  "libtype": "pypi",
  "id": "pypi_pyexcel_io",
  "homepage": "https://github.com/pyexcel/pyexcel-io",
  "release_count": 49,
  "dependency_ids": [
    "pypi_lml",
    "pypi_pyexcel_ods3",
    "pypi_pyexcel_xls",
    "pypi_pyexcel_xlsx"
  ]
}
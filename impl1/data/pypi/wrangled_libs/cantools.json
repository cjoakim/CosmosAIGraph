{
  "classifiers": [
    "license :: osi approved :: mit license"
  ],
  "description": "can bus tools.\n|github-actions| |coverage| |nala|\n\nabout\n=====\n\ncan bus tools in python 3.\n\n- `dbc`_, `kcd`_, sym, arxml 3&4 and cdd file parsing.\n\n- can message encoding and decoding.\n\n- simple and extended signal multiplexing.\n\n- diagnostic did encoding and decoding.\n\n- ``candump`` output decoder.\n\n- node `tester`_.\n\n- `c` source code generator.\n\n- can bus monitor.\n\n- graphical plots of signals.\n\nproject homepage: https://github.com/cantools/cantools\n\ndocumentation: https://cantools.readthedocs.io\n\ninstallation\n============\n\n.. code-block:: bash\n\n    python3 -m pip install cantools\n\nexample usage\n=============\n\nscripting\n---------\n\nthe example starts by parsing a `small dbc-file`_ and printing its\nmessages and signals.\n\n.. code-block:: python\n\n   >>> import cantools\n   >>> from pprint import pprint\n   >>> db = cantools.database.load_file('tests/files/dbc/motohawk.dbc')\n   >>> db.messages\n   [message('examplemessage', 0x1f0, false, 8, 'example message used as template in motohawk models.')]\n   >>> example_message = db.get_message_by_name('examplemessage')\n   >>> pprint(example_message.signals)\n   [signal('enable', 7, 1, 'big_endian', false, 1.0, 0, 0.0, 0.0, '-', false, none, {0: 'disabled', 1: 'enabled'}, none),\n    signal('averageradius', 6, 6, 'big_endian', false, 0.1, 0, 0.0, 5.0, 'm', false, none, none, ''),\n    signal('temperature', 0, 12, 'big_endian', true, 0.01, 250, 229.53, 270.47, 'degk', false, none, none, none)]\n\nthe example continues `encoding`_ a message and sending it on a can\nbus using the `python-can`_ package.\n\n.. code-block:: python\n\n   >>> import can\n   >>> can_bus = can.interface.bus('vcan0', bustype='socketcan')\n   >>> data = example_message.encode({'temperature': 250.1, 'averageradius': 3.2, 'enable': 1})\n   >>> message = can.message(arbitration_id=example_message.frame_id, data=data)\n   >>> can_bus.send(message)\n\nalternatively, a message can be encoded using the `encode_message()`_\nmethod on the database object.\n\nthe last part of the example receives and `decodes`_ a can message.\n\n.. code-block:: python\n\n   >>> message = can_bus.recv()\n   >>> db.decode_message(message.arbitration_id, message.data)\n   {'averageradius': 3.2, 'enable': 'enabled', 'temperature': 250.09}\n\nsee `examples`_ for additional examples.\n\ncommand line tool\n-----------------\n\nthe decode subcommand\n^^^^^^^^^^^^^^^^^^^^^\n\ndecode can frames captured with the linux program ``candump``.\n\n.. code-block:: text\n\n   $ candump vcan0 | python3 -m cantools decode tests/files/dbc/motohawk.dbc\n     vcan0  1f0   [8]  80 4a 0f 00 00 00 00 00 ::\n   examplemessage(\n       enable: 'enabled' -,\n       averageradius: 0.0 m,\n       temperature: 255.92 degk\n   )\n     vcan0  1f0   [8]  80 4a 0f 00 00 00 00 00 ::\n   examplemessage(\n       enable: 'enabled' -,\n       averageradius: 0.0 m,\n       temperature: 255.92 degk\n   )\n     vcan0  1f0   [8]  80 4a 0f 00 00 00 00 00 ::\n   examplemessage(\n       enable: 'enabled' -,\n       averageradius: 0.0 m,\n       temperature: 255.92 degk\n   )\n\nalternatively, the decoded message can be printed on a single line:\n\n.. code-block:: text\n\n   $ candump vcan0 | python3 -m cantools decode --single-line tests/files/dbc/motohawk.dbc\n     vcan0  1f0   [8]  80 4a 0f 00 00 00 00 00 :: examplemessage(enable: 'enabled' -, averageradius: 0.0 m, temperature: 255.92 degk)\n     vcan0  1f0   [8]  80 4a 0f 00 00 00 00 00 :: examplemessage(enable: 'enabled' -, averageradius: 0.0 m, temperature: 255.92 degk)\n     vcan0  1f0   [8]  80 4a 0f 00 00 00 00 00 :: examplemessage(enable: 'enabled' -, averageradius: 0.0 m, temperature: 255.92 degk)\n\nthe plot subcommand\n^^^^^^^^^^^^^^^^^^^\n\nthe plot subcommand is similar to the decode subcommand but messages are visualized using `matplotlib`_ instead of being printed to stdout.\n\n.. code-block:: bash\n\n    $ candump -l vcan0\n    $ cat candump-2021-01-04_180521.log\n    (1609779922.655421) vcan0 00000343#b204b9049c049c04\n    (1609779922.655735) vcan0 0000024a#120527052e051905\n    (1609779923.657524) vcan0 00000343#c404c404cb04c404\n    (1609779923.658086) vcan0 0000024a#8b058b058b059205\n    (1609779924.659912) vcan0 00000343#5c04790479045504\n    (1609779924.660471) vcan0 0000024a#44064b0659064406\n    (1609779925.662277) vcan0 00000343#15040704f203f203\n    (1609779925.662837) vcan0 0000024a#8b069906a706a706\n    (1609779926.664191) vcan0 00000343#bc03b503a703bc03\n    (1609779926.664751) vcan0 0000024a#a006a706c406c406\n\n    $ cat candump-2021-01-04_180521.log | python3 -m cantools plot tests/files/dbc/abs.dbc\n\n.. image:: https://github.com/cantools/cantools/raw/master/docs/plot-1.png\n\nif you don't want to show all signals you can select the desired signals with command line arguments.\na ``*`` can stand for any number of any character, a ``?`` for exactly one arbitrary character.\nsignals separated by a ``-`` are displayed in separate subplots.\noptionally a format can be specified after a signal, separated by a colon.\n\n.. code-block:: bash\n\n    $ cat candump-2021-01-04_180521.log | python3 -m cantools plot tests/files/dbc/abs.dbc '*33.*fl:-<' '*33.*fr:->' - '*33.*rl:-<' '*33.*rr:->'\n\n.. image:: https://github.com/cantools/cantools/raw/master/docs/plot-2-subplots.png\n\nsignals with a different range of values can be displayed in the same subplot on different vertical axes by separating them with a comma.\n\n.. code-block:: bash\n\n   $ cat candump-2021-01-04_180521.log | cantools plot --auto-color tests/files/dbc/abs.dbc -- \\\n      --ylabel 'bremse 33' '*_33.*fl*:-<' '*_33.*fr*:>' '*_33.*rl*:3' '*_33.*rr*:4' , \\\n      --ylabel 'bremse 2' '*_2.*fl*:-<' '*_2.*fr*:>' '*_2.*rl*:3' '*_2.*rr*:4'\n\n.. image:: https://github.com/cantools/cantools/raw/master/docs/plot-2-axes.png\n\nmatplotlib comes with different preinstalled styles that you can use:\n\n.. code-block:: bash\n\n   $ cat candump-2021-01-04_180521.log | cantools plot tests/files/dbc/abs.dbc --style seaborn\n\n.. image:: https://github.com/cantools/cantools/raw/master/docs/plot-seaborn.png\n\nyou can try all available styles with\n\n.. code-block:: bash\n\n   $ cantools plot --list-styles . | sed -n '/^- /s/^- //p' | while ifs= read -r style; do\n         cat candump-2021-01-04_180521.log | cantools plot tests/files/dbc/abs.dbc --style \"$style\" --title \"--style '$style'\"\n     done\n\nfor more information see\n\n.. code-block:: bash\n\n    $ python3 -m cantools plot --help\n\nnote that by default matplotlib is not installed with cantools. but it can be by specifying an extra\nat installation:\n\n.. code-block:: bash\n\n    $ python3 -m pip install cantools[plot]\n\nthe dump subcommand\n^^^^^^^^^^^^^^^^^^^\n\ndump given database in a human readable format:\n\n.. code-block:: text\n\n   $ python3 -m cantools dump tests/files/dbc/motohawk.dbc\n   ================================= messages =================================\n\n     ------------------------------------------------------------------------\n\n     name:       examplemessage\n     id:         0x1f0\n     length:     8 bytes\n     cycle time: - ms\n     senders:    pcm1\n     layout:\n\n                             bit\n\n                7   6   5   4   3   2   1   0\n              +---+---+---+---+---+---+---+---+\n            0 |<-x|<---------------------x|<--|\n              +---+---+---+---+---+---+---+---+\n                |                       +-- averageradius\n                +-- enable\n              +---+---+---+---+---+---+---+---+\n            1 |-------------------------------|\n              +---+---+---+---+---+---+---+---+\n            2 |----------x|   |   |   |   |   |\n        b     +---+---+---+---+---+---+---+---+\n        y               +-- temperature\n        t     +---+---+---+---+---+---+---+---+\n        e   3 |   |   |   |   |   |   |   |   |\n              +---+---+---+---+---+---+---+---+\n            4 |   |   |   |   |   |   |   |   |\n              +---+---+---+---+---+---+---+---+\n            5 |   |   |   |   |   |   |   |   |\n              +---+---+---+---+---+---+---+---+\n            6 |   |   |   |   |   |   |   |   |\n              +---+---+---+---+---+---+---+---+\n            7 |   |   |   |   |   |   |   |   |\n              +---+---+---+---+---+---+---+---+\n\n     signal tree:\n\n       -- {root}\n          +-- enable\n          +-- averageradius\n          +-- temperature\n\n     signal choices:\n\n       enable\n           0 disabled\n           1 enabled\n\n     ------------------------------------------------------------------------\n\nthe list subcommand\n^^^^^^^^^^^^^^^^^^^\n\nprint all information of a given database in a human readable\nformat. this is very similar to the \"dump\" subcommand, but the output\nis less pretty, slightly more comprehensive and easier to parse by\nshell scripts:\n\n.. code-block:: bash\n\n    $ python3 -m cantools list -a tests/files/dbc/motohawk.dbc\n    examplemessage:\n      comment[none]: example message used as template in motohawk models.\n      frame id: 0x1f0 (496)\n      size: 8 bytes\n      is extended frame: false\n      signals:\n        enable:\n          type: integer\n          start bit: 7\n          length: 1 bits\n          unit: -\n          is signed: false\n          named values:\n            0: disabled\n\nthe generate c source subcommand\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ngenerate `c` source code from given database.\n\nthe generated code contains:\n\n- message `structs`_.\n\n- message `pack`_ and `unpack`_ functions.\n\n- signal `encode`_ and `decode`_ functions.\n\n- frame id, length, type, cycle time and signal choices `defines`_.\n\nknown limitations:\n\n- the maximum signal size is 64 bits, which in practice is never\n  exceeded.\n\nbelow is an example of how to generate c source code from a\ndatabase. the database is ``tests/files/dbc/motohawk.dbc``.\n\n.. code-block:: text\n\n   $ python3 -m cantools generate_c_source tests/files/dbc/motohawk.dbc\n   successfully generated motohawk.h and motohawk.c.\n\nsee `motohawk.h`_ and `motohawk.c`_ for the contents of the generated\nfiles.\n\nin this example we use ``--use-float`` so floating point numbers in the generated\ncode are single precision (``float``) instead of double precision (``double``).\n\n.. code-block:: text\n\n   $ python3 -m cantools generate_c_source --use-float tests/files/dbc/motohawk.dbc\n   successfully generated motohawk.h and motohawk.c.\n\nin the next example we use ``--database-name`` to set a custom\nnamespace for all generated types, defines and functions. the output\nfile names are also changed by this option.\n\n.. code-block:: text\n\n   $ python3 -m cantools generate_c_source --database-name my_database_name tests/files/dbc/motohawk.dbc\n   successfully generated my_database_name.h and my_database_name.c.\n\nsee `my_database_name.h`_ and `my_database_name.c`_ for the contents\nof the generated files.\n\nin the next example we use ``--no-floating-point-numbers`` to generate\ncode without floating point types, i.e. ``float`` and ``double``.\n\n.. code-block:: text\n\n   $ python3 -m cantools generate_c_source --no-floating-point-numbers tests/files/dbc/motohawk.dbc\n   successfully generated motohawk.h and motohawk.c.\n\nsee `motohawk_no_floating_point_numbers.h`_ and\n`motohawk_no_floating_point_numbers.c`_ for the contents of the\ngenerated files.\n\nin the last example ``--node`` is used to generate\nmessage pack functions only for messages sent by the specified node and unpack\nfunctions only for messages with its signal receivers belonging to that node. \n\n.. code-block:: text\n\n   $ cantools generate_c_source tests/files/dbc/motohawk.dbc --node pcm1\n   successfully generated motohawk.h and motohawk.c.\n\nsee `motohawk_sender_node.h`_ and\n`motohawk_sender_node.c`_ for the contents of the\ngenerated files.\n\nother c code generators:\n\n- http://www.coderdbc.com\n\n- https://github.com/howerj/dbcc\n\n- https://github.com/lonkamikaze/hsk-libs/blob/master/scripts/dbc2c.awk\n\n- https://sourceforge.net/projects/comframe/\n\nthe monitor subcommand\n^^^^^^^^^^^^^^^^^^^^^^\n\nmonitor can bus traffic in a text based user interface.\n\n.. code-block:: text\n\n   $ python3 -m cantools monitor tests/files/dbc/motohawk.dbc\n\n.. image:: https://github.com/cantools/cantools/raw/master/docs/monitor.png\n\nthe menu at the bottom of the monitor shows the available commands.\n\n- quit: quit the monitor. ctrl-c can be used as well.\n\n- filter: only display messages matching given regular\n  expression. press <enter> to return to the menu from the filter\n  input line.\n\n- play/pause: toggle between playing and paused (or running and freezed).\n\n- reset: reset the monitor to its initial state.\n\ncontributing\n============\n\n#. fork the repository.\n\n#. install prerequisites.\n\n   .. code-block:: text\n\n      python3 -m pip install -e .[dev]\n\n#. implement the new feature or bug fix.\n\n#. implement test case(s) to ensure that future changes do not break\n   legacy.\n\n#. run the linters\n\n   .. code-block:: text\n\n      ruff check src\n      mypy src\n\n#. run the tests.\n\n   .. code-block:: text\n\n      tox -e py\n\n#. create a pull request.\n\n.. |github-actions| image:: https://github.com/cantools/cantools/actions/workflows/pythonpackage.yml/badge.svg?branch=master\n   :target: https://github.com/cantools/cantools/actions/workflows/pythonpackage.yml\n   :alt: github actions workflow status\n\n.. |coverage| image:: https://coveralls.io/repos/github/cantools/cantools/badge.svg?branch=master\n   :target: https://coveralls.io/github/cantoolscantools?branch=master\n   :alt: test coverage reports on coveralls.io\n\n.. |nala| image:: https://img.shields.io/badge/nala-test-blue.svg\n   :target: https://github.com/cantools/nala\n\n.. _small dbc-file: https://github.com/cantools/cantools/blob/master/tests/files/dbc/motohawk.dbc\n\n.. _motohawk.dbc: https://github.com/cantools/cantools/blob/master/tests/files/dbc/motohawk.dbc\n\n.. _python-can: https://python-can.readthedocs.io/en/master/\n\n.. _dbc: http://www.socialledge.com/sjsu/index.php?title=dbc_format\n\n.. _kcd: https://github.com/julietkilo/kcd\n\n.. _tester: http://cantools.readthedocs.io/en/latest/#cantools.tester.tester\n\n.. _encoding: http://cantools.readthedocs.io/en/latest/#cantools.database.can.message.encode\n\n.. _encode_message(): http://cantools.readthedocs.io/en/latest/#cantools.database.can.database.encode_message\n\n.. _decodes: http://cantools.readthedocs.io/en/latest/#cantools.database.can.database.decode_message\n\n.. _examples: https://github.com/cantools/cantools/blob/master/examples\n\n.. _structs: https://github.com/cantools/cantools/blob/master/tests/files/c_source/motohawk.h#l58\n\n.. _pack: https://github.com/cantools/cantools/blob/master/tests/files/c_source/motohawk.h#l88\n\n.. _unpack: https://github.com/cantools/cantools/blob/master/tests/files/c_source/motohawk.h#l102\n\n.. _encode: https://github.com/cantools/cantools/blob/master/tests/files/c_source/motohawk.h#l116\n\n.. _decode: https://github.com/cantools/cantools/blob/master/tests/files/c_source/motohawk.h#l125\n\n.. _defines: https://github.com/cantools/cantools/blob/master/tests/files/c_source/motohawk.h#l42\n\n.. _motohawk.h: https://github.com/cantools/cantools/blob/master/tests/files/c_source/motohawk.h\n\n.. _motohawk.c: https://github.com/cantools/cantools/blob/master/tests/files/c_source/motohawk.c\n\n.. _my_database_name.h: https://github.com/cantools/cantools/blob/master/tests/files/c_source/my_database_name.h\n\n.. _my_database_name.c: https://github.com/cantools/cantools/blob/master/tests/files/c_source/my_database_name.c\n\n.. _motohawk_no_floating_point_numbers.h: https://github.com/cantools/cantools/blob/master/tests/files/c_source/motohawk_no_floating_point_numbers.h\n\n.. _motohawk_no_floating_point_numbers.c: https://github.com/cantools/cantools/blob/master/tests/files/c_source/motohawk_no_floating_point_numbers.c\n\n.. _motohawk_sender_node.h: https://github.com/cantools/cantools/blob/master/tests/files/c_source/motohawk_sender_node.h\n\n.. _motohawk_sender_node.c: https://github.com/cantools/cantools/blob/master/tests/files/c_source/motohawk_sender_node.c\n\n.. _matplotlib: https://matplotlib.org/\n",
  "docs_url": null,
  "keywords": "can,can bus,arxml,dbc,kcd,automotive",
  "license": "mit",
  "name": "cantools",
  "package_url": "https://pypi.org/project/cantools/",
  "project_url": "https://pypi.org/project/cantools/",
  "project_urls": {
    "documentation": "https://cantools.readthedocs.io/",
    "homepage": "https://github.com/cantools/cantools",
    "repository": "https://github.com/cantools/cantools"
  },
  "release_url": "https://pypi.org/project/cantools/39.4.1/",
  "requires_dist": [
    "bitstruct >=8.16.1",
    "python-can >=3.3.4",
    "textparser >=0.21.1",
    "diskcache",
    "argparse-addons",
    "crccheck",
    "mypy ; extra == 'dev'",
    "pipx ; extra == 'dev'",
    "ruff ; extra == 'dev'",
    "tox ; extra == 'dev'",
    "matplotlib ; extra == 'plot'",
    "windows-curses ; (platform_system == \"Windows\" and platform_python_implementation == \"CPython\") and extra == 'windows-all'"
  ],
  "requires_python": ">=3.8",
  "summary": "can bus tools.",
  "version": "39.4.1",
  "releases": [],
  "developers": [
    "erik.moqvist@gmail.com"
  ],
  "kwds": "can_bus cantools candump cantoolscantools decode_message",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_cantools",
  "homepage": "",
  "release_count": 196,
  "dependency_ids": [
    "pypi_argparse_addons",
    "pypi_bitstruct",
    "pypi_crccheck",
    "pypi_diskcache",
    "pypi_matplotlib",
    "pypi_mypy",
    "pypi_pipx",
    "pypi_python_can",
    "pypi_ruff",
    "pypi_textparser",
    "pypi_tox",
    "pypi_windows_curses"
  ],
  "documentation_summary": "The HTML text provides information about \"cantools,\" a Python package for working with CAN BUS tools, available on PyPI (Python Package Index). The latest version, 39.4.5, was released on February 25, 2024. It requires Python version 3.8 or higher and is licensed under the MIT License. The package offers functionalities for parsing DBC, KCD, SYM, ARXML 3&4, and CDD files, encoding and decoding CAN messages, multiplexing, diagnostic DID encoding and decoding, and more. It also includes a command-line tool for decoding CAN frames, plotting messages using matplotlib, and generating C source code from databases. The project's homepage and documentation are available on GitHub and ReadTheDocs, respectively.",
  "embedding": [
    -0.043467603623867035,
    -0.0036768242716789246,
    0.01874682679772377,
    -0.03368170186877251,
    -0.0023415752220898867,
    0.019415339455008507,
    -0.0034634689800441265,
    -0.016783956438302994,
    -0.035047177225351334,
    -0.017381351441144943,
    0.012097249738872051,
    0.022601446136832237,
    -0.026441844180226326,
    0.008235517889261246,
    -0.009487202391028404,
    0.004612032324075699,
    0.008918254636228085,
    -0.0020979945547878742,
    0.01567450910806656,
    0.0012143476633355021,
    0.008292412385344505,
    0.012708868831396103,
    -0.01706843078136444,
    -0.019970063120126724,
    0.009124498814344406,
    0.009444531053304672,
    0.01567450910806656,
    -0.02534662000834942,
    0.0024482531007379293,
    0.00040893114055506885,
    0.03683936223387718,
    0.0009396526729688048,
    -0.0067704771645367146,
    -0.0265840794891119,
    -0.0013512506848201156,
    -0.029784411191940308,
    0.033141203224658966,
    0.002702501369640231,
    0.028276700526475906,
    0.02004118263721466,
    0.02430829033255577,
    -0.001203679945319891,
    -0.007794583216309547,
    -0.03900136426091194,
    -0.0075670043006539345,
    0.010610873810946941,
    0.022288525477051735,
    -0.03188951686024666,
    -0.034335993230342865,
    -0.012196815572679043,
    -0.003282116958871484,
    -0.0037479428574442863,
    -0.003950630314648151,
    -0.0013743642484769225,
    0.034392885863780975,
    0.004868058487772942,
    0.03134901821613312,
    0.029898200184106827,
    -0.022231630980968475,
    -0.0011690097162500024,
    0.006717138458043337,
    0.012296381406486034,
    -0.014003224670886993,
    0.009238287806510925,
    -0.010091709904372692,
    -0.004693818278610706,
    0.013334711082279682,
    0.015361587516963482,
    -0.00043137790635228157,
    0.02480611950159073,
    0.026328053325414658,
    0.031804174184799194,
    0.027906883507966995,
    0.008377754129469395,
    0.028831424191594124,
    -0.021961379796266556,
    -0.023511763662099838,
    0.020467892289161682,
    -0.015845192596316338,
    -0.005312548950314522,
    0.014202356338500977,
    -0.009401860646903515,
    -0.0103690717369318,
    0.03609973192214966,
    0.021150629967451096,
    0.02486301399767399,
    -0.03627041354775429,
    0.027465948835015297,
    -0.019529128447175026,
    -0.02328418381512165,
    -0.0018197435420006514,
    0.02317039482295513,
    0.0020731030963361263,
    0.013647632673382759,
    0.0070940665900707245,
    0.020354103296995163,
    -0.012737316079437733,
    0.048929501324892044,
    -0.016357244923710823,
    -0.016300350427627563,
    0.004103535320609808,
    -0.0014125903835520148,
    -0.0005080524715594947,
    -0.00499607203528285,
    -0.01529046893119812,
    -0.0019753151573240757,
    -0.019571799784898758,
    0.008527103811502457,
    0.02864651568233967,
    -0.006237089168280363,
    -0.016556376591324806,
    0.058601610362529755,
    0.006205085664987564,
    -0.04122025892138481,
    0.018334338441491127,
    0.006357990205287933,
    0.008825801312923431,
    -0.012182592414319515,
    0.007481662090867758,
    -0.004871614743024111,
    0.023810461163520813,
    0.00948009081184864,
    -0.0024269174318760633,
    -0.026285381987690926,
    0.006077072583138943,
    -0.011442960239946842,
    0.005248542409390211,
    -0.01652793027460575,
    -0.02366822399199009,
    -0.02150622196495533,
    -0.007958156056702137,
    0.017267562448978424,
    0.004569360986351967,
    0.01537581067532301,
    0.012147032655775547,
    0.01456506084650755,
    -0.005060078576207161,
    0.02156311646103859,
    -0.02317039482295513,
    -0.02080926112830639,
    -0.005276989657431841,
    0.012843993492424488,
    -0.030239569023251534,
    -0.020994169637560844,
    -0.013839652761816978,
    0.026868553832173347,
    0.0042031011544167995,
    0.004974736366420984,
    0.018704155460000038,
    -0.027864212170243263,
    0.028518501669168472,
    -0.007702129427343607,
    -0.007709241006523371,
    -0.02615736983716488,
    -0.006286872085183859,
    0.012922224588692188,
    0.009202728979289532,
    -0.02156311646103859,
    0.020126523450016975,
    0.00853421539068222,
    -0.006407773122191429,
    0.04619855061173439,
    -0.018675707280635834,
    -0.013683191500604153,
    0.016243455931544304,
    0.02378201298415661,
    0.009081827476620674,
    -0.019827825948596,
    -0.02949993684887886,
    0.0015103783225640655,
    0.003271449124440551,
    0.024934131652116776,
    -0.00320744258351624,
    0.010056150145828724,
    -0.0056539177894592285,
    -0.00893959030508995,
    0.016869299113750458,
    0.007936820387840271,
    -0.02695389650762081,
    0.011137151159346104,
    0.023440644145011902,
    0.013036013580858707,
    0.007794583216309547,
    0.03794880956411362,
    -0.02625693567097187,
    -0.009935248643159866,
    0.00165794906206429,
    -0.012011907994747162,
    0.02216051146388054,
    0.02032565511763096,
    0.03942807391285896,
    0.023625552654266357,
    0.005575687158852816,
    -0.038546204566955566,
    -0.5671270489692688,
    -0.0011156708933413029,
    -0.019657142460346222,
    -0.017978746443986893,
    -0.01339871808886528,
    0.018021417781710625,
    0.013882323168218136,
    0.013164026662707329,
    -0.04124870523810387,
    0.00039115152321755886,
    -0.027750423178076744,
    0.02523282915353775,
    0.003198552643880248,
    -0.005028075072914362,
    -0.0077376882545650005,
    -0.024237170815467834,
    -0.006137522868812084,
    -0.032657597213983536,
    0.027110356837511063,
    2.6238822101731785e-05,
    -0.02366822399199009,
    0.029300805181264877,
    -0.011642091907560825,
    -0.005920611787587404,
    -0.018448129296302795,
    -8.428649016423151e-05,
    0.020780814811587334,
    0.0001436815073247999,
    0.019429562613368034,
    -0.011194045655429363,
    -0.024393631145358086,
    0.03146280720829964,
    -0.0017050651367753744,
    -0.023525986820459366,
    0.04122025892138481,
    0.006486003752797842,
    -0.0018793053459376097,
    0.031690385192632675,
    -0.0068380399607121944,
    0.030609386041760445,
    -0.014920652844011784,
    -0.03254380822181702,
    0.0068487077951431274,
    0.0011796774342656136,
    0.011172709986567497,
    0.01070332806557417,
    0.003328343853354454,
    0.02166268229484558,
    -0.007823030464351177,
    -0.03578680753707886,
    0.017352905124425888,
    -0.0013770312070846558,
    -0.013092908076941967,
    -0.021804919466376305,
    0.005305436905473471,
    0.005774818826466799,
    0.02755129151046276,
    -0.021648459136486053,
    0.027380608022212982,
    -0.0119407894089818,
    -0.003033202374354005,
    0.006596236955374479,
    0.006091296207159758,
    -0.01199768390506506,
    0.007510109338909388,
    -0.007986603304743767,
    -0.016399916261434555,
    -0.049242421984672546,
    -0.02469232864677906,
    -0.012531072832643986,
    0.009110274724662304,
    -0.022117841988801956,
    -0.01474996842443943,
    -0.0345635712146759,
    0.024877237156033516,
    0.0543629489839077,
    0.021093735471367836,
    -0.012730204500257969,
    0.0008303080103360116,
    0.01708265393972397,
    -0.0048822821117937565,
    0.020240314304828644,
    -0.029727516695857048,
    -0.043638285249471664,
    0.051632001996040344,
    7.889704284025356e-05,
    0.0005880607641302049,
    0.01571718044579029,
    0.026441844180226326,
    0.0067704771645367146,
    0.012438618578016758,
    0.02901633083820343,
    -0.010276617482304573,
    -0.01701153628528118,
    -0.0022580111399292946,
    0.02053901180624962,
    -0.01248128991574049,
    0.01884639263153076,
    -0.005572131369262934,
    -0.0033852385822683573,
    -0.012111473828554153,
    -0.0023220176808536053,
    -0.0147215211763978,
    -0.02452164515852928,
    0.006998056545853615,
    -0.02036832645535469,
    -0.00767368171364069,
    0.0031594375614076853,
    0.0030278684571385384,
    -0.026328053325414658,
    -0.006898490712046623,
    -0.019628694280982018,
    -0.011955013498663902,
    -0.013818317092955112,
    -0.012182592414319515,
    -0.03188951686024666,
    0.013441388495266438,
    0.00429555494338274,
    0.023113500326871872,
    0.0008800909272395074,
    0.006884267088025808,
    -0.0063082072883844376,
    -0.01598742976784706,
    0.006169526372104883,
    0.02015497162938118,
    -0.0003713717160280794,
    0.029215462505817413,
    -0.01718221977353096,
    -0.005739259533584118,
    0.002809179248288274,
    -0.011556750163435936,
    -0.015660284087061882,
    0.009366300888359547,
    -0.02295703813433647,
    0.012239486910402775,
    0.0018366342410445213,
    0.02949993684887886,
    0.0016392804682254791,
    -0.00918850488960743,
    -0.008712011389434338,
    -0.003066983539611101,
    0.0017548480536788702,
    0.011834111995995045,
    0.0009761008550412953,
    -0.0032038865610957146,
    -0.017424022778868675,
    -0.02992664836347103,
    0.011805664747953415,
    0.011976348236203194,
    -0.00023669112124480307,
    -0.012986230663955212,
    -0.015162455849349499,
    -0.028390489518642426,
    -0.0020713252015411854,
    -0.011606533080339432,
    -0.020126523450016975,
    0.002857184037566185,
    0.007246971130371094,
    -0.007979490794241428,
    -0.012189703993499279,
    0.006045069079846144,
    0.010959354229271412,
    -0.01728178560733795,
    0.01654215343296528,
    -0.01605854742228985,
    0.01971403695642948,
    0.003954186569899321,
    0.061844613403081894,
    -0.007666570134460926,
    -0.028020672500133514,
    -0.020354103296995163,
    -0.004256439860910177,
    0.0031114325392991304,
    0.017523588612675667,
    -0.006002398207783699,
    -0.021491998806595802,
    -0.021676907315850258,
    0.0065677897073328495,
    -0.024991026148200035,
    0.015646060928702354,
    0.008519991301000118,
    0.014579284004867077,
    -0.032742939889431,
    -0.02739483118057251,
    0.026669422164559364,
    0.019870497286319733,
    0.00767368171364069,
    0.0021051063667982817,
    -0.033141203224658966,
    0.003527475520968437,
    -0.005060078576207161,
    0.0029460822697728872,
    -0.005049410741776228,
    0.005191647447645664,
    -0.012879553250968456,
    0.02318461798131466,
    -0.008662228472530842,
    -0.007186520379036665,
    0.031036095693707466,
    0.02592978999018669,
    0.016030101105570793,
    0.012808434665203094,
    0.010568203404545784,
    0.007015835959464312,
    -0.007460326422005892,
    -0.034279096871614456,
    0.017253339290618896,
    -0.008299523964524269,
    0.025702212005853653,
    -0.011279387399554253,
    0.012986230663955212,
    -0.023653998970985413,
    0.003939962480217218,
    0.028973661363124847,
    0.011762993410229683,
    0.025218605995178223,
    -0.006667355541139841,
    0.020169194787740707,
    -0.01928732544183731,
    -0.007936820387840271,
    0.0005822823732160032,
    -0.0015841637505218387,
    0.01718221977353096,
    -0.018889062106609344,
    0.011578084900975227,
    0.001356584602035582,
    0.007815918885171413,
    0.04392275959253311,
    0.003929295111447573,
    -0.02555997483432293,
    -0.017537811771035194,
    0.01896018162369728,
    -0.001806408865377307,
    -0.023269960656762123,
    0.028731858357787132,
    -0.019970063120126724,
    0.03905825689435005,
    -0.014934876933693886,
    0.03075162135064602,
    -0.022302748635411263,
    0.006542898248881102,
    0.003045648103579879,
    0.04156162962317467,
    0.008477320894598961,
    0.016499482095241547,
    -0.009337853640317917,
    0.0147215211763978,
    0.038716889917850494,
    -0.005177423823624849,
    0.007474550046026707,
    -0.00020535454677883536,
    -0.008861360140144825,
    -0.04742179065942764,
    -0.005280545447021723,
    0.0103690717369318,
    -0.03450667858123779,
    0.02183336764574051,
    0.018633035942912102,
    0.0624704547226429,
    0.015660284087061882,
    0.04525978863239288,
    0.01250973716378212,
    0.011713210493326187,
    0.016143890097737312,
    0.016812404617667198,
    0.005319660995155573,
    -0.004491130821406841,
    -0.027693528681993484,
    -0.008036386221647263,
    -0.0139676658436656,
    -0.020951498299837112,
    -0.031747281551361084,
    -0.0056539177894592285,
    -0.015631837770342827,
    0.033795490860939026,
    0.007374984212219715,
    -0.024820342659950256,
    0.04463394731283188,
    0.025759106501936913,
    0.013377382420003414,
    -0.02253032848238945,
    -0.04858813062310219,
    0.029087450355291367,
    -0.021008392795920372,
    -0.015688732266426086,
    -0.024464750662446022,
    -0.02847583219408989,
    0.01654215343296528,
    -0.0159305352717638,
    -4.5865850552218035e-05,
    -0.023255735635757446,
    0.01782228611409664,
    -0.0095369853079319,
    0.01864726096391678,
    0.011876782402396202,
    -0.003230556147173047,
    0.010475749149918556,
    0.008199958130717278,
    -0.0022224518470466137,
    0.020226089283823967,
    -0.014949100092053413,
    -0.011784329079091549,
    0.006087739951908588,
    -0.02376778982579708,
    0.04281331226229668,
    0.005988174118101597,
    -0.028490055352449417,
    -0.01950068213045597,
    -0.001852635876275599,
    -0.009288070723414421,
    0.030552489683032036,
    0.023326855152845383,
    -0.024493196979165077,
    -0.008804465644061565,
    0.01083134114742279,
    0.01836278662085533,
    0.005725035909563303,
    0.014145461842417717,
    0.017253339290618896,
    0.017978746443986893,
    -0.03208864852786064,
    -0.020410997793078423,
    0.011542526073753834,
    0.009650775231420994,
    0.022245854139328003,
    -0.012047466821968555,
    -0.008100392296910286,
    0.012047466821968555,
    -0.03868844360113144,
    -0.041533179581165314,
    -0.03646954521536827,
    -0.002423361409455538,
    0.003068761434406042,
    -0.0013414719142019749,
    -0.01826322078704834,
    0.006468223873525858,
    0.017808062955737114,
    0.007239859085530043,
    -0.019898945465683937,
    0.01685507595539093,
    -0.01928732544183731,
    0.011009137146174908,
    0.011108703911304474,
    -0.009928137063980103,
    -0.021577341482043266,
    0.001576162874698639,
    -0.01142873615026474,
    0.018832167610526085,
    0.02474922500550747,
    0.009394748136401176,
    0.013612072914838791,
    0.04426413029432297,
    0.025218605995178223,
    -0.019600247964262962,
    -0.006468223873525858,
    0.009124498814344406,
    0.011670539155602455,
    0.03464891389012337,
    -0.022060945630073547,
    0.0016695058438926935,
    0.02641339600086212,
    0.06844440847635269,
    -0.0019486458040773869,
    -0.006347322370857,
    0.04295555129647255,
    0.028290923684835434,
    -0.0018935289699584246,
    -0.024976802989840508,
    -0.010753110982477665,
    -0.02355443313717842,
    -0.010383294895291328,
    0.010041926987469196,
    -8.645337948109955e-05,
    -0.02036832645535469,
    0.024678105488419533,
    -0.006596236955374479,
    -0.03772123157978058,
    -0.023085052147507668,
    0.05237163230776787,
    -0.008377754129469395,
    0.019898945465683937,
    -0.013192473910748959,
    0.005031630862504244,
    -0.023739341646432877,
    -0.011834111995995045,
    -0.009544096887111664,
    0.03231622651219368,
    -0.0063224309124052525,
    0.010219722986221313,
    -9.462088928557932e-05,
    -0.029585279524326324,
    0.009167169220745564,
    -0.02679743617773056,
    0.012267934158444405,
    -0.0022580111399292946,
    -0.020994169637560844,
    -0.011684763245284557,
    0.012054579332470894,
    0.017409799620509148,
    0.005625470075756311,
    0.03538854420185089,
    0.016997311264276505,
    0.00022480101324617863,
    0.012417282909154892,
    -0.001911308616399765,
    -0.03507562354207039,
    0.033624809235334396,
    -0.041675418615341187,
    0.012388835661113262,
    -0.008100392296910286,
    0.00028291813214309514,
    0.02405226230621338,
    -0.008121727965772152,
    0.03857465088367462,
    -0.009679222479462624,
    0.0005685031646862626,
    0.009707669727504253,
    -0.008306636475026608,
    0.008953814394772053,
    0.023838907480239868,
    0.004259995650500059,
    -0.0036732684820890427,
    0.02679743617773056,
    -0.011464295908808708,
    -0.0016775067197158933,
    -0.029158568009734154,
    -0.014877981506288052,
    -0.022402314469218254,
    -0.005188091658055782,
    0.00587438466027379,
    -0.009174281731247902,
    0.0056219142861664295,
    -0.00945164356380701,
    0.0072896420024335384,
    0.02139243297278881,
    -0.043894313275814056,
    -0.025730658322572708,
    -0.027195699512958527,
    -0.018618812784552574,
    -0.013711638748645782,
    -0.017424022778868675,
    0.014415712095797062,
    -0.015034442767500877,
    -0.029699068516492844,
    -0.01002059131860733,
    -0.0226867888122797,
    0.007037171628326178,
    -0.004498242400586605,
    -0.010881124064326286,
    0.049356210976839066,
    0.007495885714888573,
    -0.01402456033974886,
    -0.021264418959617615,
    -0.0032625594176352024,
    0.0020002066157758236,
    0.023867355659604073,
    -0.022132065147161484,
    -0.02718147449195385,
    -0.005237874574959278,
    -0.01323514524847269,
    0.00786570180207491,
    0.02442207932472229,
    0.004021748900413513,
    -0.008918254636228085,
    -0.023796236142516136,
    0.008349306881427765,
    0.01868993043899536,
    -0.011258052662014961,
    -0.010361959226429462,
    -0.017367128282785416,
    -0.018675707280635834,
    0.023085052147507668,
    0.013299152255058289,
    0.023568658158183098,
    0.006468223873525858,
    -0.0008223071927204728,
    -0.0003251447051297873,
    -0.04710886627435684,
    -0.02453586831688881,
    -0.01816365495324135,
    0.0012187926331534982,
    0.016997311264276505,
    0.009963695891201496,
    0.026996567845344543,
    0.034705810248851776,
    0.002560264663770795,
    0.004601364489644766,
    -0.007222079671919346,
    -0.02080926112830639,
    0.00568592082709074,
    -0.04050907492637634,
    0.011250940151512623,
    -0.027323711663484573,
    -0.001322803320363164,
    -0.007453214377164841,
    0.01096646673977375,
    -0.02096572145819664,
    -0.030922306701540947,
    -0.008896918967366219,
    0.02733793668448925,
    0.023511763662099838,
    0.005952615290880203,
    -0.0031736611854285,
    -0.0020873267203569412,
    0.010461525060236454,
    -0.02328418381512165,
    0.019145090132951736,
    0.015489600598812103,
    -0.032742939889431,
    -0.0039364066906273365,
    0.05072168633341789,
    0.02361132949590683,
    -0.005821045953780413,
    0.022601446136832237,
    0.010681992396712303,
    -0.010063261725008488,
    0.0068700434640049934,
    0.00972900539636612,
    0.019201984629034996,
    0.008946701884269714,
    -0.012516848742961884,
    -0.04964068531990051,
    -0.011229604482650757,
    -0.013092908076941967,
    0.0042066569440066814,
    0.007346536964178085,
    0.016897745430469513,
    0.00613041128963232,
    -0.0015494934050366282,
    0.021975604817271233,
    -0.0025976018514484167,
    -0.027622409164905548,
    0.006550010293722153,
    -0.022615671157836914,
    -0.0411633662879467,
    -0.01977093145251274,
    -0.03137746453285217,
    -0.023056603968143463,
    0.009586768224835396,
    -0.0139676658436656,
    0.004412900656461716,
    0.02986975386738777,
    0.011144262738525867,
    0.01520512718707323,
    0.013768534176051617,
    0.023113500326871872,
    0.0378350205719471,
    -0.002711391309276223,
    0.00663179624825716,
    0.037038493901491165,
    0.014280586503446102,
    0.0026953895576298237,
    -0.013071573339402676,
    0.007424767129123211,
    -0.010091709904372692,
    0.02706768549978733,
    0.04065131023526192,
    -0.018462352454662323,
    0.02107951231300831,
    0.01345561258494854,
    0.001551271416246891,
    -0.038233283907175064,
    -0.01377564575523138,
    0.02345486730337143,
    0.03285672888159752,
    0.030609386041760445,
    -0.03564457222819328,
    0.0036874921061098576,
    -0.01248128991574049,
    -0.0034279096871614456,
    0.007680793758481741,
    -0.02884564734995365,
    0.0028962993528693914,
    -0.03183262422680855,
    -0.0036554888356477022,
    0.012822658754885197,
    -0.005092081613838673,
    0.011222492903470993,
    0.02415182814002037,
    -0.01534736342728138,
    0.016399916261434555,
    -0.03442133590579033,
    -0.014593508094549179,
    0.011421624571084976,
    -0.004124870523810387,
    0.024009592831134796,
    5.317215982358903e-05,
    -0.007858590222895145,
    0.047307997941970825,
    -0.008484432473778725,
    -0.011137151159346104,
    -0.01913086511194706,
    -0.0007231858326122165,
    0.040765102952718735,
    0.0022153400350362062,
    -0.007481662090867758,
    0.009558320976793766,
    -0.010795782320201397,
    0.0022224518470466137,
    0.002218896057456732,
    -0.018761049956083298,
    -0.016883522272109985,
    -0.03857465088367462,
    0.009024932980537415,
    0.017978746443986893,
    -0.009913912974298,
    -0.016343021765351295,
    -0.0027060573920607567,
    -0.011713210493326187,
    -0.008740458637475967,
    -0.023582881316542625,
    -0.007638122420758009,
    0.034279096871614456,
    -0.024734999984502792,
    -0.03720917925238609,
    -0.0020979945547878742,
    -0.018775273114442825,
    0.015148231759667397,
    -0.024237170815467834,
    -0.017480917274951935,
    0.016769733279943466,
    0.04651147127151489,
    -0.012282158248126507,
    0.012680421583354473,
    -0.026271158829331398,
    0.0238815788179636,
    -0.019842050969600677,
    0.0019646475557237864,
    -0.007979490794241428,
    -0.0024962578900158405,
    0.02938614785671234,
    -0.015574942342936993,
    -0.01531891617923975,
    -0.03015422634780407,
    0.011130038648843765,
    0.03473425656557083,
    0.017466694116592407,
    -0.034449782222509384,
    0.007538556586951017,
    0.013085796497762203,
    0.01164920348674059,
    -0.02285747230052948,
    -0.024350959807634354,
    0.018234772607684135,
    -0.00066362414509058,
    -0.015518047846853733,
    0.015432706102728844,
    -0.005739259533584118,
    -0.011307835578918457,
    0.004501798655837774,
    -0.012147032655775547,
    0.004277775529772043,
    -0.027167251333594322,
    -0.027921106666326523,
    0.0034385775215923786,
    0.0023646887857466936,
    -0.009124498814344406,
    0.008228405378758907,
    0.0006129522225819528,
    -0.021193301305174828,
    -0.02080926112830639,
    0.027864212170243263,
    -0.004274219274520874,
    -0.00710473395884037,
    0.04679594561457634,
    0.02075236663222313,
    -0.003260781290009618,
    -0.0013032457791268826,
    -0.00044093444012105465,
    -0.012879553250968456,
    -0.005056522320955992,
    -0.0009112052503041923,
    -0.013306263834238052,
    -0.010013478808104992,
    -0.01859036460518837,
    0.01702575944364071,
    0.011357618495821953,
    -0.016670167446136475,
    -0.01669861376285553,
    -0.019116641953587532,
    -0.0029336365405470133,
    -0.007111846003681421,
    -0.01913086511194706,
    0.038005705922842026,
    0.01226082257926464,
    0.0035150297917425632,
    0.00521298311650753,
    -0.01654215343296528,
    -0.005693032871931791,
    0.01600165292620659,
    -0.04110646992921829,
    0.01466462668031454,
    -0.0024571428075432777,
    0.01864726096391678,
    -0.006820260547101498,
    -0.013270705007016659,
    -0.047194208949804306,
    0.018704155460000038,
    -0.008249741047620773,
    -0.0013716972898691893,
    0.0006178416078910232,
    0.037152282893657684,
    -0.01042596623301506,
    -0.03706694021821022,
    0.0017086210427805781,
    -0.026029355823993683,
    -0.03641265258193016,
    0.006429108791053295,
    -0.014650402590632439,
    -0.019600247964262962,
    -0.01428769901394844,
    0.02053901180624962,
    -0.0029105229768902063,
    0.002798511413857341,
    -0.03459201753139496,
    0.006194417830556631,
    0.00853421539068222,
    0.008036386221647263,
    -0.033966176211833954,
    -0.015148231759667397,
    0.025915566831827164,
    -0.00010578870569588616,
    -0.0190739706158638,
    0.029414594173431396,
    -0.0005284990766085684,
    0.020595906302332878,
    0.033141203224658966,
    -0.0002986975305248052,
    -0.03134901821613312,
    0.002727392828091979,
    -0.0027789538726210594,
    0.00116812065243721,
    0.0008983150473795831,
    -0.02642761915922165,
    0.003114988561719656,
    -0.011819887906312943,
    0.017580483108758926,
    -0.01766582578420639,
    -0.004704486113041639,
    -0.014195244759321213,
    -0.0034136860631406307,
    -0.027679305523633957,
    0.008825801312923431,
    0.02814868651330471,
    -0.031206781044602394,
    0.011514078825712204,
    0.020197642967104912,
    -0.0007396319997496903,
    0.014963324181735516,
    -0.04272796958684921,
    -0.00945164356380701,
    -0.013014677911996841,
    0.0015379367396235466,
    0.017765391618013382,
    -0.009963695891201496,
    -0.015503824688494205,
    -0.003904403420165181,
    -0.002761174226179719,
    -0.022345419973134995,
    -0.009465866722166538,
    0.18411147594451904,
    -0.005792598705738783,
    0.022331196814775467,
    0.020026957616209984,
    0.009487202391028404,
    0.014621955342590809,
    0.030268017202615738,
    0.01202613115310669,
    0.006041513290256262,
    0.01386098749935627,
    -0.015119784511625767,
    -0.028504278510808945,
    -0.013825428672134876,
    -0.0063330987468361855,
    0.019827825948596,
    0.01836278662085533,
    0.0023113498464226723,
    -0.060763612389564514,
    -0.015873640775680542,
    0.0024713664315640926,
    -0.011272275820374489,
    -0.029841305688023567,
    -0.009416083805263042,
    -0.0411633662879467,
    0.021520445123314857,
    -0.002526483265683055,
    -0.000726297264918685,
    -0.034392885863780975,
    0.02025453746318817,
    0.003340789582580328,
    -0.033738598227500916,
    0.013889435678720474,
    -0.005326772574335337,
    -0.0038901797961443663,
    -0.010098821483552456,
    -0.008320859633386135,
    -0.0008027495932765305,
    -0.025858672335743904,
    -0.001438370905816555,
    0.009615215472877026,
    0.0019077527103945613,
    -0.04409344494342804,
    -0.015745626762509346,
    -0.03200330585241318,
    0.0005707256495952606,
    -0.008875584229826927,
    -0.014102790504693985,
    -0.010888236574828625,
    0.00542989419773221,
    0.009416083805263042,
    -0.018448129296302795,
    0.004786272533237934,
    0.02129286713898182,
    0.015432706102728844,
    -0.011250940151512623,
    -0.04415034130215645,
    -0.0036626006476581097,
    0.03652644157409668,
    0.016712838783860207,
    -0.001126338611356914,
    -0.004708041902631521,
    0.03407996520400047,
    -0.008349306881427765,
    0.037408310920000076,
    -0.024080710485577583,
    0.006183749996125698,
    -0.008896918967366219,
    0.02399536781013012,
    0.0226867888122797,
    -0.01868993043899536,
    -0.02243076264858246,
    -0.013384493999183178,
    -0.027423277497291565,
    0.0013343601021915674,
    -0.020652800798416138,
    -0.030950753018260002,
    0.020112300291657448,
    -0.0041604298166930676,
    0.005547239910811186,
    0.02258722297847271,
    0.03538854420185089,
    0.005198759492486715,
    0.00701228016987443,
    -0.007140293251723051,
    -0.01348405983299017,
    -0.012659085914492607,
    0.007438990753144026,
    -0.019600247964262962,
    0.004242216236889362,
    -0.029158568009734154,
    -0.0073180897161364555,
    -0.043410707265138626,
    -0.006411329377442598,
    0.0065677897073328495,
    0.005323216784745455,
    0.016897745430469513,
    -0.0035808144602924585,
    0.031917963176965714,
    -0.00499607203528285,
    0.012900888919830322,
    -0.044178787618875504,
    0.06901335716247559,
    0.020439445972442627,
    -0.006592681165784597,
    -0.0016783956671133637,
    0.022871697321534157,
    0.007303865626454353,
    0.005220095161348581,
    0.012168368324637413,
    -0.031263675540685654,
    -0.004448459483683109,
    -0.004153318237513304,
    -0.005913499742746353,
    -0.0033710149582475424,
    0.02560264617204666,
    0.027352159842848778,
    0.014266363345086575,
    -0.005789042450487614,
    -0.014934876933693886,
    0.0006431775982491672,
    0.03843241557478905,
    -0.0024020259734243155,
    -0.0006036179256625473,
    -0.0029300805181264877,
    -0.01534736342728138,
    0.0031096546445041895,
    -0.04050907492637634,
    0.00018135207938030362,
    -0.0006898490828461945,
    -6.840984497102909e-06,
    0.015390034765005112,
    -0.025460409000515938,
    0.017210667952895164,
    0.03294207155704498,
    0.009430307894945145,
    -0.008719122968614101,
    -0.0021424435544759035,
    -0.026285381987690926,
    -0.0053765554912388325,
    0.01977093145251274,
    -0.01361918542534113,
    0.02129286713898182,
    -0.0011192267993465066,
    -0.011357618495821953,
    0.025147488340735435,
    -0.012630638666450977,
    0.0066104610450565815,
    -0.002997643081471324,
    -0.0087831299751997,
    -0.010198387317359447,
    -0.009145833551883698,
    0.03257225453853607,
    0.005280545447021723,
    -0.0068380399607121944,
    0.01567450910806656,
    -0.028276700526475906,
    -0.0018686375115066767,
    -0.002007318427786231,
    0.00881157722324133,
    0.0032021086663007736,
    -0.026768987998366356,
    -0.016015877947211266,
    0.002242009388282895,
    0.0018490799702703953,
    -0.007481662090867758,
    -0.03829018026590347,
    -0.17990125715732574,
    0.020012734457850456,
    0.0065677897073328495,
    -0.033482570201158524,
    0.011962125077843666,
    0.0001927976991282776,
    0.02009807713329792,
    -0.009643662720918655,
    0.007716353051364422,
    -0.004412900656461716,
    0.012972007505595684,
    -0.003833285067230463,
    -0.01083134114742279,
    -0.024606987833976746,
    0.01453661359846592,
    0.001038329559378326,
    0.006855819374322891,
    0.009849906899034977,
    0.009736116975545883,
    0.037635888904333115,
    0.024564316496253014,
    -0.03718072921037674,
    -0.006357990205287933,
    0.00048138308920897543,
    0.00821418222039938,
    -0.018405457958579063,
    -0.01588786393404007,
    -0.020382551476359367,
    -0.0046547031961381435,
    -0.023426420986652374,
    -0.0025531526189297438,
    0.020652800798416138,
    -0.022672565653920174,
    0.005732147954404354,
    0.03826173022389412,
    0.0029407483525574207,
    0.009664998389780521,
    -0.0019895390141755342,
    -0.004117758944630623,
    0.022004051133990288,
    0.0004180432006251067,
    0.024678105488419533,
    0.0073180897161364555,
    -0.008455985225737095,
    -0.014138350263237953,
    0.02932925336062908,
    0.005045854952186346,
    -0.03262915089726448,
    0.013796981424093246,
    0.01137184165418148,
    0.04648302495479584,
    -0.014266363345086575,
    0.02932925336062908,
    -0.0007489662966690958,
    0.024023815989494324,
    0.0027665081433951855,
    -0.011201157234609127,
    0.019586024805903435,
    0.0024162495974451303,
    0.0023895802441984415,
    0.009956584312021732,
    -0.022288525477051735,
    0.0023220176808536053,
    0.014508165419101715,
    -0.005358776077628136,
    -0.023099275305867195,
    -0.015148231759667397,
    0.01342716533690691,
    -0.021904485300183296,
    0.024948356673121452,
    0.001617944915778935,
    0.005906388163566589,
    0.0039470745250582695,
    -0.022928591817617416,
    0.01280132308602333,
    -0.009771676734089851,
    -0.025247054174542427,
    0.005351664032787085,
    -0.012474178336560726,
    -0.01177721656858921,
    -0.011293611489236355,
    0.04318312928080559,
    0.023198841139674187,
    -0.006347322370857,
    0.024678105488419533,
    -0.025488855317234993,
    -0.006642464082688093,
    -0.031092990189790726,
    -0.0012090138625353575,
    -0.0017619598656892776,
    0.0063651022501289845,
    -0.0014952656347304583,
    0.029101673513650894,
    -0.017139548435807228,
    0.005152532365173101,
    0.027053462341427803,
    -0.0035914822947233915,
    -0.01386098749935627,
    -0.019600247964262962,
    -0.031206781044602394,
    0.01456506084650755,
    0.010539756156504154,
    -0.01431614626199007,
    -0.008256853558123112,
    0.027707751840353012,
    0.034279096871614456,
    -0.02750862017273903,
    0.005906388163566589,
    0.024450525641441345,
    0.011087368242442608,
    0.005739259533584118,
    0.01702575944364071,
    0.03021112270653248,
    0.014074343256652355,
    -0.0027309488505125046,
    0.006137522868812084,
    0.008740458637475967,
    -0.009572545066475868,
    0.018633035942912102,
    -0.012061690911650658,
    0.02409493364393711,
    -0.007488773670047522,
    -0.025261277332901955,
    0.002595823723822832,
    -0.019756708294153214,
    -0.033624809235334396,
    -0.11003448069095612,
    -0.044719286262989044,
    0.012218151241540909,
    0.02415182814002037,
    -0.004057308193296194,
    -0.0010489972773939371,
    0.025218605995178223,
    0.019543353468179703,
    -0.0007974157342687249,
    0.012232375331223011,
    -0.00807905662804842,
    -0.007204299792647362,
    -0.03129212185740471,
    0.00653934245929122,
    -0.0039577423594892025,
    -0.005486789159476757,
    0.006009509786963463,
    -0.0016232788329944015,
    0.01007748581469059,
    0.03837551921606064,
    -0.01760893128812313,
    -0.009721893817186356,
    0.013028902001678944,
    0.01477841567248106,
    -0.0009520984021946788,
    0.025915566831827164,
    -0.03646954521536827,
    0.01631457544863224,
    0.018761049956083298,
    0.019870497286319733,
    0.01728178560733795,
    -0.0399685762822628,
    0.010738887824118137,
    -0.0042031011544167995,
    -0.015390034765005112,
    -0.0023113498464226723,
    -0.01766582578420639,
    -0.025517303496599197,
    0.04067976027727127,
    -0.019059747457504272,
    0.0070620630867779255,
    -0.02480611950159073,
    -0.013277816586196423,
    -0.02140665613114834,
    0.012011907994747162,
    -0.027622409164905548,
    -0.016343021765351295,
    0.028760304674506187,
    0.01762315444648266,
    -0.018661484122276306,
    -0.02480611950159073,
    0.001534380717203021,
    -0.014650402590632439,
    0.005668141413480043,
    0.004188877064734697,
    0.002064213389530778,
    0.0011414512991905212,
    0.0025175935588777065,
    -0.018889062106609344,
    -0.03041025437414646,
    -0.004761381074786186,
    0.015759849920868874,
    -0.0087831299751997,
    0.028973661363124847,
    0.010013478808104992,
    -0.021648459136486053,
    -0.013896547257900238,
    0.005205871071666479,
    0.023269960656762123,
    -0.02156311646103859,
    -0.017367128282785416,
    0.012552408501505852,
    -0.031576596200466156,
    0.006315319333225489,
    -0.012410171329975128,
    0.01961447112262249,
    0.004825387615710497,
    0.0012179036857560277,
    0.007894149050116539,
    0.007396319881081581,
    0.0035221418365836143,
    -0.02053901180624962,
    -0.01654215343296528,
    -0.02442207932472229,
    -0.008235517889261246,
    0.026811659336090088,
    -0.01393921859562397,
    0.01099491398781538,
    -0.0079652676358819,
    -0.033795490860939026,
    0.028987884521484375,
    -0.002759396331384778,
    0.016172338277101517,
    0.009622327983379364,
    -0.019970063120126724,
    0.013768534176051617,
    0.012303493916988373,
    0.04420723393559456,
    -0.04375207796692848,
    0.002775397850200534,
    -0.03254380822181702,
    -0.007481662090867758,
    -0.0894954726099968,
    -0.002962083788588643,
    0.012545295991003513,
    -0.01701153628528118,
    0.016712838783860207,
    -0.029030555859208107,
    -0.005554351955652237,
    -0.021307090297341347,
    0.015745626762509346,
    0.024663882330060005,
    -0.03245846554636955,
    0.010347736068069935,
    0.00042048789327964187,
    -0.017765391618013382,
    -0.01868993043899536,
    0.008861360140144825,
    0.023796236142516136,
    -0.011606533080339432,
    0.025332394987344742,
    0.005230762530118227,
    0.02474922500550747,
    -0.0005845048581250012,
    0.03658333420753479,
    0.0016188339795917273,
    -0.026626750826835632,
    0.011741657741367817,
    -0.00382261723279953,
    0.04818986728787422,
    -0.0013245813315734267,
    -0.01750936545431614,
    0.015247797593474388,
    -0.014835311099886894,
    -0.005035187117755413,
    0.007410543505102396,
    0.03058093786239624,
    0.004252884071320295,
    -0.016129666939377785,
    0.0032732270192354918,
    0.004732933361083269,
    0.02322728931903839,
    -0.025005251169204712,
    -0.027409054338932037,
    0.0007360760355368257,
    -0.029243910685181618,
    -0.009060491807758808,
    -0.013811204582452774,
    0.003267893334850669,
    0.028177134692668915,
    0.016385693103075027,
    0.0030420920811593533,
    0.028290923684835434,
    -0.002643828745931387,
    -0.010653545148670673,
    -0.017850734293460846,
    0.0091600576415658,
    -0.026384947821497917,
    -0.0010641099652275443,
    -0.006190862040966749,
    -0.0011130039347335696,
    -0.010056150145828724,
    0.021975604817271233,
    0.006400661543011665,
    0.020169194787740707,
    0.007808806840330362,
    0.007744800299406052,
    -0.004697374068200588,
    -0.03479114919900894,
    -0.024123381823301315,
    -0.005294769536703825,
    -0.026598304510116577,
    -0.0024375852663069963,
    -0.04056597128510475,
    0.011905230581760406,
    -0.004544469527900219,
    0.01323514524847269,
    -0.00660334900021553,
    0.005205871071666479,
    0.022060945630073547,
    0.009465866722166538,
    0.025844449177384377,
    0.013412941247224808,
    -0.024734999984502792,
    0.002972751623019576,
    -0.030950753018260002,
    0.030324911698698997,
    0.005003183614462614,
    -0.013057349249720573,
    -0.010881124064326286,
    0.014977547340095043,
    0.005540127865970135,
    -0.021107958629727364,
    -0.0006240644725039601,
    -0.009046267718076706,
    -0.021577341482043266,
    0.004871614743024111,
    0.032401569187641144,
    -0.016926193609833717,
    0.015745626762509346,
    0.020354103296995163,
    0.009956584312021732,
    -0.002738060662522912,
    0.002405581995844841,
    -0.0001079000358004123,
    -0.007225635461509228,
    0.003376348875463009,
    0.0014294810825958848,
    -0.007410543505102396,
    -0.03183262422680855,
    -0.00021924487373325974,
    0.01923043094575405,
    0.008327971212565899,
    -0.02723837085068226,
    0.0018633035942912102,
    0.02322728931903839,
    -0.015532271936535835,
    0.014991771429777145,
    0.00988546572625637,
    0.0020624352619051933,
    -0.021363984793424606,
    0.0103690717369318,
    -0.014245027676224709,
    -0.009906801395118237,
    0.027195699512958527,
    -0.01024105865508318,
    0.013910770416259766,
    0.0021157742012292147,
    0.03311275318264961,
    0.013754310086369514,
    -0.019415339455008507,
    -0.01706843078136444,
    -0.0005396113265305758,
    0.00233624130487442,
    -0.04210212826728821,
    -0.02647029049694538,
    0.0012383501743897796,
    -0.016897745430469513,
    -0.010760222561657429,
    -0.03851775825023651,
    0.02932925336062908,
    0.10309331864118576,
    -0.003975521773099899,
    -0.019642919301986694,
    -0.0016312797088176012,
    -0.01520512718707323,
    0.032828282564878464,
    0.011634980328381062,
    -0.0005578354466706514,
    0.025545751675963402,
    -0.006389993708580732,
    0.03134901821613312,
    -0.01345561258494854,
    -0.00859110988676548,
    -0.025332394987344742,
    -0.005479677114635706,
    0.025574197992682457,
    -0.033198095858097076,
    0.00502451928332448,
    0.022544551640748978,
    -0.004732933361083269,
    0.019927391782402992,
    0.006809592712670565,
    -0.0030954310204833746,
    0.020140748471021652,
    -0.029357699677348137,
    -0.010340624488890171,
    0.014408599585294724,
    0.023981144651770592,
    0.0037123835645616055,
    -0.04733644798398018,
    0.005380111280828714,
    0.010525532066822052,
    -0.0012045688927173615,
    -0.007794583216309547,
    -0.020126523450016975,
    0.00942319631576538,
    -0.0012587967794388533,
    -0.026000909507274628,
    0.013441388495266438,
    0.027209922671318054,
    -0.006678023375570774,
    0.011471407487988472,
    -0.024222947657108307,
    -0.006055736914277077,
    0.04565805196762085,
    -0.018391232937574387,
    0.023028157651424408,
    -0.012324829585850239,
    -0.03766433522105217
  ]
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "environment :: web environment",
    "intended audience :: developers",
    "programming language :: python",
    "programming language :: python :: 3",
    "topic :: software development"
  ],
  "description": "[![pypi](https://img.shields.io/pypi/v/vprof.svg)](https://pypi.python.org/pypi/vprof/)\n\n# vprof\n\nvprof is a python package providing rich and interactive visualizations for\nvarious python program characteristics such as running time and memory usage.\nit supports python 3.4+ and distributed under bsd license.\n\nthe project is in active development and some of its features might not work as\nexpected.\n\n## screenshots\n![vprof-gif](http://i.imgur.com/ikblfvq.gif)\n\n## contributing\nall contributions are highly encouraged! you can add new features,\nreport and fix existing bugs and write docs and tutorials.\nfeel free to open an issue or send a pull request!\n\n## prerequisites\ndependencies to build `vprof` from source code:\n * python 3.4+\n * `pip`\n * `npm` >= 3.3.12\n\n`npm` is required to build `vprof` from sources only.\n\n## dependencies\nall python and `npm` module dependencies are listed in `package.json` and\n`requirements.txt`.\n\n## installation\n`vprof` can be installed from pypi\n\n```sh\npip install vprof\n```\n\nto build `vprof` from sources, clone this repository and execute\n\n```sh\npython3 setup.py deps_install && python3 setup.py build_ui && python3 setup.py install\n```\n\nto install just `vprof` dependencies, run\n\n```sh\npython3 setup.py deps_install\n```\n\n## usage\n\n```sh\nvprof -c <config> <src>\n```\n`<config>` is a combination of supported modes:\n\n* `c` - cpu flame graph  \u26a0\ufe0f **not available for windows [#62](https://github.com/nvdv/vprof/issues/62)**\n\nshows cpu flame graph for `<src>`.\n\n* `p` - profiler\n\nruns built-in python profiler on `<src>` and displays results.\n\n* `m` - memory graph\n\nshows objects that are tracked by cpython gc and left in memory after code\nexecution. also shows process memory usage after execution of each line of `<src>`.\n\n* `h` - code heatmap\n\ndisplays all executed code of `<src>` with line run times and execution counts.\n\n`<src>` can be python source file (e.g. `testscript.py`) or path to package\n(e.g. `myproject/test_package`).\n\nto run scripts with arguments use double quotes\n\n```sh\nvprof -c cmh \"testscript.py --foo --bar\"\n```\n\nmodes can be combined\n\n```sh\nvprof -c cm testscript.py\n```\n\n`vprof` can also profile functions. in order to do this,\nlaunch `vprof` in remote mode:\n\n```sh\nvprof -r\n```\n\n`vprof` will open new tab in default web browser and then wait for stats.\n\nto profile a function run\n\n```python\nfrom vprof import runner\n\ndef foo(arg1, arg2):\n    ...\n\nrunner.run(foo, 'cmhp', args=(arg1, arg2), host='localhost', port=8000)\n```\n\nwhere `cmhp` is profiling mode, `host` and `port` are hostname and port of\n`vprof` server launched in remote mode. obtained stats will be rendered in new\ntab of default web browser, opened by `vprof -r` command.\n\n`vprof` can save profile stats to file and render visualizations from\npreviously saved file.\n\n```sh\nvprof -c cmh src.py --output-file profile.json\n```\n\nwrites profile to file and\n\n```sh\nvprof --input-file profile.json\n```\nrenders visualizations from previously saved file.\n\ncheck `vprof -h` for full list of supported parameters.\n\nto show ui help, press `h` when visualizations are displayed.\n\nalso you can check `examples` directory for more profiling examples.\n\n## testing\n\n```sh\npython3 setup.py test_python && python3 setup.py test_javascript && python3 setup.py e2e_test\n```\n\n## license\n\nbsd\n\n\n",
  "docs_url": null,
  "keywords": "debugging,profiling",
  "license": "bsd",
  "name": "vprof",
  "package_url": "https://pypi.org/project/vprof/",
  "project_url": "https://pypi.org/project/vprof/",
  "project_urls": {
    "Homepage": "http://github.com/nvdv/vprof"
  },
  "release_url": "https://pypi.org/project/vprof/0.38/",
  "requires_dist": [
    "psutil (>=3)"
  ],
  "requires_python": "",
  "summary": "visual profiler for python",
  "version": "0.38",
  "releases": [],
  "developers": [
    "aflatnine@gmail.com",
    "nvdv"
  ],
  "kwds": "vprof python3 pypi python pip",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_vprof",
  "homepage": "http://github.com/nvdv/vprof",
  "release_count": 24,
  "dependency_ids": [
    "pypi_psutil"
  ]
}
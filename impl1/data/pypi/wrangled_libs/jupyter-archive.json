{
  "classifiers": [
    "framework :: jupyter",
    "framework :: jupyter :: jupyterlab",
    "framework :: jupyter :: jupyterlab :: 3",
    "framework :: jupyter :: jupyterlab :: 4",
    "framework :: jupyter :: jupyterlab :: extensions",
    "framework :: jupyter :: jupyterlab :: extensions :: prebuilt",
    "license :: osi approved :: bsd license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# jupyter-archive\n\n[![extension status](https://img.shields.io/badge/status-ready-success 'ready to be used')](https://jupyterlab-contrib.github.io/)\n[![github actions status](https://github.com/jupyterlab-contrib/jupyter-archive/workflows/build/badge.svg)](https://github.com/jupyterlab-contrib/jupyter-archive/actions?query=workflow%3abuild)\n[![binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jupyterlab-contrib/jupyter-archive.git/master?urlpath=lab)\n[![version](https://img.shields.io/npm/v/@hadim/jupyter-archive.svg)](https://www.npmjs.com/package/@hadim/jupyter-archive)\n[![pypi](https://img.shields.io/pypi/v/jupyter-archive)](https://pypi.org/project/jupyter-archive/)\n[![conda (channel only)](https://img.shields.io/conda/vn/conda-forge/jupyter-archive)](https://anaconda.org/conda-forge/jupyter-archive)\n\na jupyter extension to make, download and extract archive files.\n\nfeatures:\n\n- download selected or current folder as an archive.\n- supported formats: 'zip', 'tar.gz', 'tar.bz2' and 'tar.xz'.\n- archiving and downloading are non-blocking for jupyter. ui can still be used.\n- archive format can be set in the jlab settings.\n- alternatively, you can choose the format in the file browser menu (the format setting needs to be set to `null`).\n- decompress an archive directly in file browser.\n- notebok client extension not available. [contributions are welcome](https://github.com/jupyterlab-contrib/jupyter-archive/issues/21).\n\n![jupyter-archive in action](https://raw.githubusercontent.com/jupyterlab-contrib/jupyter-archive/master/archive.gif)\n\n## configuration\n\nthe server extension has some [configuration settings](https://jupyter-server.readthedocs.io/en/latest/users/configuration.html) --\nthe values below are the default one:\n\n```json5\n{\n  jupyterarchive: {\n    stream_max_buffer_size: 104857600, // the max size of tornado iostream buffer\n    handler_max_buffer_length: 10240, // the max length of chunks in tornado requesthandler\n    archive_download_flush_delay: 100 // the delay in ms at which we send the chunk of data to the client.\n  }\n}\n```\n\nyou can also set new values with the following environment variables:\n\n- `ja_iostream_max_buffer_size`\n- `ja_handler_max_buffer_length`\n- `ja_archive_download_flush_delay`\n\n## requirements\n\n- jupyterlab >= 3.0 or notebook >= 7.0\n\nfor jupyterlab 2.x, have look [there](https://github.com/jupyterlab-contrib/jupyter-archive/tree/2.x).\n\n## install\n\nto install the extension, execute:\n\n```bash\npip install jupyter-archive\n```\n\nor\n\n```bash\nconda install -c conda-forge jupyter-archive\n```\n\n## uninstall\n\nto remove the extension, execute:\n\n```bash\npip uninstall jupyter-archive\n```\n\nor\n\n```bash\nconda remove jupyter-archive\n```\n\n## troubleshoot\n\nif you are seeing the frontend extension, but it is not working, check\nthat the server extension is enabled:\n\n```bash\njupyter server extension list\n```\n\nif the server extension is installed and enabled, but you are not seeing\nthe frontend extension, check the frontend extension is installed:\n\n```bash\njupyter labextension list\n```\n\n## contributing\n\n### development install\n\nnote: you will need nodejs to build the extension package.\n\nthe `jlpm` command is jupyterlab's pinned version of\n[yarn](https://yarnpkg.com/) that is installed with jupyterlab. you may use\n`yarn` or `npm` in lieu of `jlpm` below.\n\n```bash\n# clone the repo to your local environment\n# change directory to the jupyter-archive directory\n# install package in development mode\npip install -e \".[test]\"\n# link your development version of the extension with jupyterlab\njupyter labextension develop . --overwrite\n# server extension must be manually installed in develop mode\njupyter server extension enable jupyter_archive\n# rebuild extension typescript source after making changes\njlpm build\n```\n\nyou can watch the source directory and run jupyterlab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.\n\n```bash\n# watch the source directory in one terminal, automatically rebuilding when needed\njlpm watch\n# run jupyterlab in another terminal\njupyter lab\n```\n\nwith the watch command running, every saved change will immediately be built locally and available in your running jupyterlab. refresh jupyterlab to load the change in your browser (you may need to wait several seconds for the extension to be rebuilt).\n\nby default, the `jlpm build` command generates the source maps for this extension to make it easier to debug using the browser dev tools. to also generate source maps for the jupyterlab core extensions, you can run the following command:\n\n```bash\njupyter lab build --minimize=false\n```\n\n## license\n\nunder bsd license. see [license](license).\n\n## authors\n\n- hadrien mary: [@hadim](https://github.com/hadim)\n- fr\u00e9d\u00e9ric collonval: [@fcollonval](https://github.com/fcollonval)\n\n### development uninstall\n\n```bash\n# server extension must be manually disabled in develop mode\njupyter server extension disable jupyter_archive\npip uninstall jupyter-archive\n```\n\nin development mode, you will also need to remove the symlink created by `jupyter labextension develop`\ncommand. to find its location, you can run `jupyter labextension list` to figure out where the `labextensions`\nfolder is located. then you can remove the symlink named `@hadim/jupyter-archive` within that folder.\n\n### testing the extension\n\n#### server tests\n\nthis extension is using [pytest](https://docs.pytest.org/) for python code testing.\n\ninstall test dependencies (needed only once):\n\n```sh\npip install -e \".[test]\"\n# each time you install the python package, you need to restore the front-end extension link\njupyter labextension develop . --overwrite\n```\n\nto execute them, run:\n\n```sh\npytest -vv -r ap --cov jupyter_archive\n```\n\n#### integration tests\n\nthis extension uses [playwright](https://playwright.dev/docs/intro) for the integration tests (aka user level tests).\nmore precisely, the jupyterlab helper [galata](https://github.com/jupyterlab/jupyterlab/tree/master/galata) is used to handle testing the extension in jupyterlab.\n\nmore information are provided within the [ui-tests](./ui-tests/readme.md) readme.\n\n### packaging the extension\n\nsee [release](release.md)\n",
  "docs_url": null,
  "keywords": "",
  "license": "copyright (c) 2011-2020, hadrien mary, frederic collonval all rights reserved.  redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. neither the name of the read_roi nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.  this software is provided by the copyright holders and contributors \"as is\" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. in no event shall the copyright holder or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.",
  "name": "jupyter-archive",
  "package_url": "https://pypi.org/project/jupyter-archive/",
  "project_url": "https://pypi.org/project/jupyter-archive/",
  "project_urls": {
    "Bug Tracker": "https://github.com/jupyterlab-contrib/jupyter-archive/issues",
    "Homepage": "https://github.com/jupyterlab-contrib/jupyter-archive",
    "Repository": "https://github.com/jupyterlab-contrib/jupyter-archive.git"
  },
  "release_url": "https://pypi.org/project/jupyter-archive/3.4.0/",
  "requires_dist": [
    "jupyter-server<3,>=1.21",
    "coverage; extra == 'test'",
    "pytest; extra == 'test'",
    "pytest-asyncio; extra == 'test'",
    "pytest-cov; extra == 'test'",
    "pytest-jupyter[server]>=0.6.0; extra == 'test'"
  ],
  "requires_python": ">=3.6",
  "summary": "a jupyterlab extension to make, download and extract archive files.",
  "version": "3.4.0",
  "releases": [],
  "developers": [
    "hadrien.mary@gmail.com"
  ],
  "kwds": "jupyter_archive jupyterlab jupyter archive jupyterarchive",
  "license_kwds": "copyright liability liable disclaimer negligence",
  "libtype": "pypi",
  "id": "pypi_jupyter_archive",
  "homepage": "",
  "release_count": 36,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_jupyter_server",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_pytest_jupyter"
  ]
}
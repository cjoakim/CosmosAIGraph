{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: science/research",
    "intended audience :: system administrators",
    "license :: osi approved :: bsd license",
    "programming language :: python",
    "programming language :: python :: 3"
  ],
  "description": "**[technical overview](#technical-overview)** |\n**[installation](#installation)** |\n**[configuration](#configuration)** |\n**[docker](#docker)** |\n**[contributing](#contributing)** |\n**[license](#license)** |\n**[help and resources](#help-and-resources)**\n\n---\n\n# [jupyterhub](https://github.com/jupyterhub/jupyterhub)\n\n[![latest pypi version](https://img.shields.io/pypi/v/jupyterhub?logo=pypi)](https://pypi.python.org/pypi/jupyterhub)\n[![latest conda-forge version](https://img.shields.io/conda/vn/conda-forge/jupyterhub?logo=conda-forge)](https://anaconda.org/conda-forge/jupyterhub)\n[![documentation build status](https://img.shields.io/readthedocs/jupyterhub?logo=read-the-docs)](https://jupyterhub.readthedocs.org/en/latest/)\n[![github workflow status - test](https://img.shields.io/github/workflow/status/jupyterhub/jupyterhub/test?logo=github&label=tests)](https://github.com/jupyterhub/jupyterhub/actions)\n[![dockerhub build status](https://img.shields.io/docker/build/jupyterhub/jupyterhub?logo=docker&label=build)](https://hub.docker.com/r/jupyterhub/jupyterhub/tags)\n[![test coverage of code](https://codecov.io/gh/jupyterhub/jupyterhub/branch/main/graph/badge.svg)](https://codecov.io/gh/jupyterhub/jupyterhub)\n[![github](https://img.shields.io/badge/issue_tracking-github-blue?logo=github)](https://github.com/jupyterhub/jupyterhub/issues)\n[![discourse](https://img.shields.io/badge/help_forum-discourse-blue?logo=discourse)](https://discourse.jupyter.org/c/jupyterhub)\n[![gitter](https://img.shields.io/badge/social_chat-gitter-blue?logo=gitter)](https://gitter.im/jupyterhub/jupyterhub)\n\nwith [jupyterhub](https://jupyterhub.readthedocs.io) you can create a\n**multi-user hub** that spawns, manages, and proxies multiple instances of the\nsingle-user [jupyter notebook](https://jupyter-notebook.readthedocs.io)\nserver.\n\n[project jupyter](https://jupyter.org) created jupyterhub to support many\nusers. the hub can offer notebook servers to a class of students, a corporate\ndata science workgroup, a scientific research project, or a high-performance\ncomputing group.\n\n## technical overview\n\nthree main actors make up jupyterhub:\n\n- multi-user **hub** (tornado process)\n- configurable http **proxy** (node-http-proxy)\n- multiple **single-user jupyter notebook servers** (python/jupyter/tornado)\n\nbasic principles for operation are:\n\n- hub launches a proxy.\n- the proxy forwards all requests to hub by default.\n- hub handles login and spawns single-user servers on demand.\n- hub configures proxy to forward url prefixes to the single-user notebook\n  servers.\n\njupyterhub also provides a\n[rest api][]\nfor administration of the hub and its users.\n\n[rest api]: https://jupyterhub.readthedocs.io/en/latest/reference/rest-api.html\n\n## installation\n\n### check prerequisites\n\n- a linux/unix based system\n- [python](https://www.python.org/downloads/) 3.6 or greater\n- [nodejs/npm](https://www.npmjs.com/)\n\n  - if you are using **`conda`**, the nodejs and npm dependencies will be installed for\n    you by conda.\n\n  - if you are using **`pip`**, install a recent version (at least 12.0) of\n    [nodejs/npm](https://docs.npmjs.com/getting-started/installing-node).\n\n- if using the default pam authenticator, a [pluggable authentication module (pam)](https://en.wikipedia.org/wiki/pluggable_authentication_module).\n- tls certificate and key for https communication\n- domain name\n\n### install packages\n\n#### using `conda`\n\nto install jupyterhub along with its dependencies including nodejs/npm:\n\n```bash\nconda install -c conda-forge jupyterhub\n```\n\nif you plan to run notebook servers locally, install jupyterlab or jupyter notebook:\n\n```bash\nconda install jupyterlab\nconda install notebook\n```\n\n#### using `pip`\n\njupyterhub can be installed with `pip`, and the proxy with `npm`:\n\n```bash\nnpm install -g configurable-http-proxy\npython3 -m pip install jupyterhub\n```\n\nif you plan to run notebook servers locally, you will need to install\n[jupyterlab or jupyter notebook](https://jupyter.readthedocs.io/en/latest/install.html):\n\n    python3 -m pip install --upgrade jupyterlab\n    python3 -m pip install --upgrade notebook\n\n### run the hub server\n\nto start the hub server, run the command:\n\n    jupyterhub\n\nvisit `http://localhost:8000` in your browser, and sign in with your system username and password.\n\n_note_: to allow multiple users to sign in to the server, you will need to\nrun the `jupyterhub` command as a _privileged user_, such as root.\nthe [wiki](https://github.com/jupyterhub/jupyterhub/wiki/using-sudo-to-run-jupyterhub-without-root-privileges)\ndescribes how to run the server as a _less privileged user_, which requires\nmore configuration of the system.\n\n## configuration\n\nthe [getting started](https://jupyterhub.readthedocs.io/en/latest/tutorial/index.html#getting-started) section of the\ndocumentation explains the common steps in setting up jupyterhub.\n\nthe [**jupyterhub tutorial**](https://github.com/jupyterhub/jupyterhub-tutorial)\nprovides an in-depth video and sample configurations of jupyterhub.\n\n### create a configuration file\n\nto generate a default config file with settings and descriptions:\n\n    jupyterhub --generate-config\n\n### start the hub\n\nto start the hub on a specific url and port `10.0.1.2:443` with **https**:\n\n    jupyterhub --ip 10.0.1.2 --port 443 --ssl-key my_ssl.key --ssl-cert my_ssl.cert\n\n### authenticators\n\n| authenticator                                                                | description                                       |\n| ---------------------------------------------------------------------------- | ------------------------------------------------- |\n| pamauthenticator                                                             | default, built-in authenticator                   |\n| [oauthenticator](https://github.com/jupyterhub/oauthenticator)               | oauth + jupyterhub authenticator = oauthenticator |\n| [ldapauthenticator](https://github.com/jupyterhub/ldapauthenticator)         | simple ldap authenticator plugin for jupyterhub   |\n| [kerberosauthenticator](https://github.com/jupyterhub/kerberosauthenticator) | kerberos authenticator plugin for jupyterhub      |\n\n### spawners\n\n| spawner                                                        | description                                                                |\n| -------------------------------------------------------------- | -------------------------------------------------------------------------- |\n| localprocessspawner                                            | default, built-in spawner starts single-user servers as local processes    |\n| [dockerspawner](https://github.com/jupyterhub/dockerspawner)   | spawn single-user servers in docker containers                             |\n| [kubespawner](https://github.com/jupyterhub/kubespawner)       | kubernetes spawner for jupyterhub                                          |\n| [sudospawner](https://github.com/jupyterhub/sudospawner)       | spawn single-user servers without being root                               |\n| [systemdspawner](https://github.com/jupyterhub/systemdspawner) | spawn single-user notebook servers using systemd                           |\n| [batchspawner](https://github.com/jupyterhub/batchspawner)     | designed for clusters using batch scheduling software                      |\n| [yarnspawner](https://github.com/jupyterhub/yarnspawner)       | spawn single-user notebook servers distributed on a hadoop cluster         |\n| [wrapspawner](https://github.com/jupyterhub/wrapspawner)       | wrapspawner and profilesspawner enabling runtime configuration of spawners |\n\n## docker\n\na starter [**docker image for jupyterhub**](https://hub.docker.com/r/jupyterhub/jupyterhub/)\ngives a baseline deployment of jupyterhub using docker.\n\n**important:** this `jupyterhub/jupyterhub` image contains only the hub itself,\nwith no configuration. in general, one needs to make a derivative image, with\nat least a `jupyterhub_config.py` setting up an authenticator and/or a spawner.\nto run the single-user servers, which may be on the same system as the hub or\nnot, jupyter notebook version 4 or greater must be installed.\n\nthe jupyterhub docker image can be started with the following command:\n\n    docker run -p 8000:8000 -d --name jupyterhub jupyterhub/jupyterhub jupyterhub\n\nthis command will create a container named `jupyterhub` that you can\n**stop and resume** with `docker stop/start`.\n\nthe hub service will be listening on all interfaces at port 8000, which makes\nthis a good choice for **testing jupyterhub on your desktop or laptop**.\n\nif you want to run docker on a computer that has a public ip then you should\n(as in must) **secure it with ssl** by adding ssl options to your docker\nconfiguration or by using an ssl enabled proxy.\n\n[mounting volumes](https://docs.docker.com/engine/admin/volumes/volumes/) will\nallow you to **store data outside the docker image (host system) so it will be persistent**, even when you start\na new image.\n\nthe command `docker exec -it jupyterhub bash` will spawn a root shell in your docker\ncontainer. you can **use the root shell to create system users in the container**.\nthese accounts will be used for authentication in jupyterhub's default configuration.\n\n## contributing\n\nif you would like to contribute to the project, please read our\n[contributor documentation](https://jupyter.readthedocs.io/en/latest/contributing/content-contributor.html)\nand the [`contributing.md`](contributing.md). the `contributing.md` file\nexplains how to set up a development installation, how to run the test suite,\nand how to contribute to documentation.\n\nfor a high-level view of the vision and next directions of the project, see the\n[jupyterhub community roadmap](docs/source/contributing/roadmap.md).\n\n### a note about platform support\n\njupyterhub is supported on linux/unix based systems.\n\njupyterhub officially **does not** support windows. you may be able to use\njupyterhub on windows if you use a spawner and authenticator that work on\nwindows, but the jupyterhub defaults will not. bugs reported on windows will not\nbe accepted, and the test suite will not run on windows. small patches that fix\nminor windows compatibility issues (such as basic installation) **may** be accepted,\nhowever. for windows-based systems, we would recommend running jupyterhub in a\ndocker container or linux vm.\n\n[additional reference:](http://www.tornadoweb.org/en/stable/#installation) tornado's documentation on windows platform support\n\n## license\n\nwe use a shared copyright model that enables all contributors to maintain the\ncopyright on their contributions.\n\nall code is licensed under the terms of the [revised bsd license](./copying.md).\n\n## help and resources\n\nwe encourage you to ask questions and share ideas on the [jupyter community forum](https://discourse.jupyter.org/).\nyou can also talk with us on our jupyterhub [gitter](https://gitter.im/jupyterhub/jupyterhub) channel.\n\n- [reporting issues](https://github.com/jupyterhub/jupyterhub/issues)\n- [jupyterhub tutorial](https://github.com/jupyterhub/jupyterhub-tutorial)\n- [documentation for jupyterhub](https://jupyterhub.readthedocs.io/en/latest/)\n- [documentation for jupyterhub's rest api][rest api]\n- [documentation for project jupyter](http://jupyter.readthedocs.io/en/latest/index.html)\n- [project jupyter website](https://jupyter.org)\n- [project jupyter community](https://jupyter.org/community)\n\njupyterhub follows the jupyter [community guides](https://jupyter.readthedocs.io/en/latest/community/content-community.html).\n\n---\n\n**[technical overview](#technical-overview)** |\n**[installation](#installation)** |\n**[configuration](#configuration)** |\n**[docker](#docker)** |\n**[contributing](#contributing)** |\n**[license](#license)** |\n**[help and resources](#help-and-resources)**\n",
  "docs_url": null,
  "keywords": "interactive,interpreter,shell,web",
  "license": "bsd",
  "name": "jupyterhub",
  "package_url": "https://pypi.org/project/jupyterhub/",
  "project_url": "https://pypi.org/project/jupyterhub/",
  "project_urls": {
    "Documentation": "https://jupyterhub.readthedocs.io",
    "Funding": "https://jupyter.org/about",
    "Homepage": "https://jupyter.org",
    "Source": "https://github.com/jupyterhub/jupyterhub/",
    "Tracker": "https://github.com/jupyterhub/jupyterhub/issues"
  },
  "release_url": "https://pypi.org/project/jupyterhub/4.0.2/",
  "requires_dist": [
    "alembic >=1.4",
    "async-generator >=1.9",
    "certipy >=0.1.2",
    "jinja2 >=2.11.0",
    "jupyter-telemetry >=0.1.0",
    "oauthlib >=3.0",
    "packaging",
    "prometheus-client >=0.4.0",
    "python-dateutil",
    "requests",
    "SQLAlchemy >=1.4",
    "tornado >=5.1",
    "traitlets >=4.3.2",
    "importlib-metadata >=3.6 ; python_version < \"3.10\"",
    "pamela ; sys_platform != \"win32\"",
    "psutil >=5.6.5 ; sys_platform == \"win32\"",
    "beautifulsoup4[html5lib] ; extra == 'test'",
    "coverage ; extra == 'test'",
    "cryptography ; extra == 'test'",
    "jsonschema ; extra == 'test'",
    "jupyterlab >=3 ; extra == 'test'",
    "mock ; extra == 'test'",
    "nbclassic ; extra == 'test'",
    "pytest >=3.3 ; extra == 'test'",
    "pytest-asyncio >=0.17 ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "requests-mock ; extra == 'test'",
    "playwright ; extra == 'test'",
    "virtualenv ; extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "jupyterhub: a multi-user server for jupyter notebooks",
  "version": "4.0.2",
  "releases": [],
  "developers": [
    "jupyter@googlegroups.com",
    "jupyter_development_team"
  ],
  "kwds": "jupyterhub_config jupyterhub jupyter jupyterlab dockerhub",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_jupyterhub",
  "homepage": "https://jupyter.org",
  "release_count": 74,
  "dependency_ids": [
    "pypi_alembic",
    "pypi_async_generator",
    "pypi_beautifulsoup4",
    "pypi_certipy",
    "pypi_coverage",
    "pypi_cryptography",
    "pypi_importlib_metadata",
    "pypi_jinja2",
    "pypi_jsonschema",
    "pypi_jupyter_telemetry",
    "pypi_jupyterlab",
    "pypi_mock",
    "pypi_nbclassic",
    "pypi_oauthlib",
    "pypi_packaging",
    "pypi_pamela",
    "pypi_playwright",
    "pypi_prometheus_client",
    "pypi_psutil",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_python_dateutil",
    "pypi_requests",
    "pypi_requests_mock",
    "pypi_sqlalchemy",
    "pypi_tornado",
    "pypi_traitlets",
    "pypi_virtualenv"
  ]
}
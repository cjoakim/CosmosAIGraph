{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: other environment",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "===============================\nthe reactivex for python (rxpy)\n===============================\n\n.. image:: https://github.com/reactivex/rxpy/workflows/python%20package/badge.svg\n    :target: https://github.com/reactivex/rxpy/actions\n    :alt: build status\n\n.. image:: https://img.shields.io/coveralls/reactivex/rxpy.svg\n    :target: https://coveralls.io/github/reactivex/rxpy\n    :alt: coverage status\n\n.. image:: https://img.shields.io/pypi/v/reactivex.svg\n    :target: https://pypi.org/project/reactivex/\n    :alt: pypy package version\n\n.. image:: https://img.shields.io/readthedocs/rxpy.svg\n    :target: https://readthedocs.org/projects/rxpy/builds/\n    :alt: documentation status\n\n\n*a library for composing asynchronous and event-based programs using observable\ncollections and query operator functions in python*\n\nreactivex for python v4\n-----------------------\n\nfor v3.x please go to the `v3 branch\n<https://github.com/reactivex/rxpy/tree/release/v3.2.x>`_.\n\nreactivex for python v4.x runs on `python <http://www.python.org/>`_ 3.7 or above. to\ninstall:\n\n.. code:: console\n\n    pip3 install reactivex\n\n\nabout reactivex\n---------------\n\nreactivex for python (rxpy) is a library for composing asynchronous and event-based\nprograms using observable sequences and pipable query operators in python. using rx,\ndevelopers represent asynchronous data streams with observables, query asynchronous data\nstreams using operators, and parameterize concurrency in data/event streams using\nschedulers.\n\n.. code:: python\n\n    import reactivex as rx\n    from reactivex import operators as ops\n\n    source = rx.of(\"alpha\", \"beta\", \"gamma\", \"delta\", \"epsilon\")\n\n    composed = source.pipe(\n        ops.map(lambda s: len(s)),\n        ops.filter(lambda i: i >= 5)\n    )\n    composed.subscribe(lambda value: print(\"received {0}\".format(value)))\n\n\nlearning reactivex\n------------------\n\nread the `documentation\n<https://rxpy.readthedocs.io/en/latest/>`_ to learn\nthe principles of reactivex and get the complete reference of the available\noperators.\n\nif you need to migrate code from rxpy v1.x or v3.x, read the `migration\n<https://rxpy.readthedocs.io/en/latest/migration.html>`_ section.\n\nthere is also a list of third party documentation available `here\n<https://rxpy.readthedocs.io/en/latest/additional_reading.html>`_.\n\n\ncommunity\n----------\n\njoin the conversation on github `discussions\n<https://github.com/reactivex/rxpy/discussions>`_! if you have any questions or\nsuggestions.\n\ndifferences from .net and rxjs\n------------------------------\n\nreactivex for python is a fairly complete implementation of\n`rx <http://reactivex.io/>`_ with more than\n`120 operators <https://rxpy.readthedocs.io/en/latest/operators.html>`_, and\nover `1300 passing unit-tests <https://coveralls.io/github/reactivex/rxpy>`_. rxpy\nis mostly a direct port of rxjs, but also borrows a bit from rx.net and rxjava in\nterms of threading and blocking operators.\n\nreactivex for python follows `pep 8 <http://legacy.python.org/dev/peps/pep-0008/>`_, so\nall function and method names are ``snake_cased`` i.e lowercase with words separated by\nunderscores as necessary to improve readability.\n\nthus .net code such as:\n\n.. code:: c#\n\n    var group = source.groupby(i => i % 3);\n\n\nneed to be written with an ``_`` in python:\n\n.. code:: python\n\n    group = source.pipe(ops.group_by(lambda i: i % 3))\n\nwith reactivex for python you should use `named keyword arguments\n<https://docs.python.org/3/glossary.html>`_ instead of positional arguments when an\noperator has multiple optional arguments. rxpy will not try to detect which arguments\nyou are giving to the operator (or not).\n\ndevelopment\n-----------\n\nthis project is managed using `poetry <https://python-poetry.org/>`_. code is formatted\nusing `black <https://github.com/psf/black>`_, `isort\n<https://github.com/pycqa/isort>`_. code is statically type checked using `pyright\n<https://github.com/microsoft/pyright>`_ and `mypy <http://mypy-lang.org/>`_.\n\nif you want to take advantage of the default vscode integration, then\nfirst configure poetry to make its virtual environment in the\nrepository:\n\n.. code:: console\n\n    poetry config virtualenvs.in-project true\n\nafter cloning the repository, activate the tooling:\n\n.. code:: console\n\n    poetry install\n    poetry run pre-commit install\n\nrun unit tests:\n\n.. code:: console\n\n    poetry run pytest\n\nrun code checks (manually):\n\n.. code:: console\n\n    poetry run pre-commit run --all-files\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "reactivex",
  "package_url": "https://pypi.org/project/reactivex/",
  "project_url": "https://pypi.org/project/reactivex/",
  "project_urls": {
    "Documentation": "https://rxpy.readthedocs.io/en/latest/",
    "Homepage": "http://reactivex.io",
    "Repository": "https://github.com/ReactiveX/RxPY"
  },
  "release_url": "https://pypi.org/project/reactivex/4.0.4/",
  "requires_dist": [
    "typing-extensions (>=4.1.1,<5.0.0)"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "reactivex (rx) for python",
  "version": "4.0.4",
  "releases": [],
  "developers": [
    "dag@brattli.net",
    "dag_brattli"
  ],
  "kwds": "reactivex rxpy rxjs rx rxjava",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_reactivex",
  "homepage": "http://reactivex.io",
  "release_count": 13,
  "dependency_ids": [
    "pypi_typing_extensions"
  ]
}
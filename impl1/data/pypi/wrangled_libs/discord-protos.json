{
  "classifiers": [
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules",
    "topic :: utilities"
  ],
  "description": "# discord protocol buffers\r\nreverse-engineering discord's user settings protobufs.\r\n\r\nthis repository provides protocol buffer files for discord's user settings automatically generated and automatically updated. the protobufs are provided as .proto files in the out/ directory, one file per settings type.\r\n\r\nthese protobufs are used by the discord clients for user settings.\r\n\r\nprovided for educational purposes only.\r\n\r\n## usage\r\n### note\r\nautomating user accounts is against the discord tos. this repository is a proof of concept and i cannot recommend using it. do so at your own risk.\r\n\r\n### installation\r\n```\r\n# with npm\r\nnpm install discord-protos\r\n\r\n# with yarn\r\nyarn add discord-protos\r\n\r\n# with pnpm\r\npnpm add discord-protos\r\n\r\n# with pip\r\npip install discord-protos\r\n```\r\n\r\n### example\r\njavascript:\r\n```js\r\nconst { preloadedusersettings } = require('discord-protos');\r\n\r\nconst encoded = preloadedusersettings.tobase64({\r\n    status: {\r\n        status: {\r\n            value: \"online\",\r\n        },\r\n        customstatus: {\r\n            text: \"hello world\",\r\n            emojiid: 0n,\r\n            emojiname: \"\",\r\n            expiresatms: 0n,\r\n        },\r\n    },\r\n});\r\n\r\nconst decoded = preloadedusersettings.frombase64(encoded);\r\n\r\nconsole.log(encoded, decoded);\r\n```\r\n\r\npython:\r\n```py\r\nimport base64\r\nfrom discord_protos import preloadedusersettings\r\n\r\nsettings = preloadedusersettings()\r\nencoded = base64.b64encode(settings.parsedict({\r\n    'status': {\r\n        'status': {\r\n            'value': 'online',\r\n        },\r\n        'custom_status': {\r\n            'text': 'hello world',\r\n            'emoji_id': 0,\r\n            'emoji_name': '',\r\n            'expires_at_ms': 0,\r\n        },\r\n    },\r\n}).serializetostring())\r\n\r\ndecoded = preloadedusersettings.fromstring(base64.b64decode(encoded))\r\n\r\nprint(encoded, decoded)\r\n```\r\n\r\n## mapping\r\nthe following table shows which protobuf user settings correspond to which .proto file (the python package also provides a `usersettingstype` enum for convenience).\r\n\r\n| type | value                             | file                        | use                                                |\r\n| ---- | --------------------------------- | --------------------------- | -------------------------------------------------- |\r\n| 1    | `preloaded_user_settings`         | preloadedusersettings.proto | general discord user settings.                     |\r\n| 2    | `frecency_and_favorites_settings` | frecencyusersettings.proto  | frecency and favorites storage for various things. |\r\n| 3    | `test_settings`                   | -                           | unknown.                                           |\r\n\r\n\r\n### protobufs\r\nthe .proto files can be compiled down to python or javascript files by running `npm run py` or `npm run js`. this requires protoc to be installed.\r\n\r\nbase64-encoded data for these protobufs are provided by the `get /users/@me/settings-proto/{type}` endpoint. for preloaded user settings, base64-encoded data is provided in the `user_settings_proto` key of the ready event received in the discord gateway, as well as in user_settings_proto_update events.\r\n\r\n### development\r\nrunning `pnpm load` will extract and save the latest protobufs to the discord_protos/ directory.\r\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "discord-protos",
  "package_url": "https://pypi.org/project/discord-protos/",
  "project_url": "https://pypi.org/project/discord-protos/",
  "project_urls": {
    "Homepage": "https://github.com/dolfies/discord-protos",
    "Issue tracker": "https://github.com/dolfies/discord-protos/issues"
  },
  "release_url": "https://pypi.org/project/discord-protos/0.0.2/",
  "requires_dist": [],
  "requires_python": ">=3.8.0",
  "summary": "discord user settings protobufs.",
  "version": "0.0.2",
  "releases": [],
  "developers": [
    "dolfies"
  ],
  "kwds": "discord_protos user_settings_proto protobufs user_settings_proto_update protobuf",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_discord_protos",
  "homepage": "https://github.com/dolfies/discord-protos",
  "release_count": 2,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# filesystem_spec\n\n[![pypi version](https://badge.fury.io/py/fsspec.svg)](https://pypi.python.org/pypi/fsspec/)\n[![anaconda-server badge](https://anaconda.org/conda-forge/fsspec/badges/version.svg)](https://anaconda.org/conda-forge/fsspec)\n![build](https://github.com/fsspec/filesystem_spec/workflows/ci/badge.svg)\n[![docs](https://readthedocs.org/projects/filesystem-spec/badge/?version=latest)](https://filesystem-spec.readthedocs.io/en/latest/?badge=latest)\n[![pypi downloads](https://img.shields.io/pypi/dm/fsspec?label=pypi%20downloads&style=flat)](https://pepy.tech/project/fsspec)\n\na specification for pythonic filesystems.\n\n## install\n\n```bash\npip install fsspec\n```\n\nwould install the base fsspec. various optionally supported features might require specification of custom\nextra require, e.g. `pip install fsspec[ssh]` will install dependencies for `ssh` backends support.\nuse `pip install fsspec[full]` for installation of all known extra dependencies.\n\nup-to-date package also provided through conda-forge distribution:\n\n```bash\nconda install -c conda-forge fsspec\n```\n\n\n## purpose\n\nto produce a template or specification for a file-system interface, that specific implementations should follow,\nso that applications making use of them can rely on a common behaviour and not have to worry about the specific\ninternal implementation decisions with any given backend. many such implementations are included in this package,\nor in sister projects such as `s3fs` and `gcsfs`.\n\nin addition, if this is well-designed, then additional functionality, such as a key-value store or fuse\nmounting of the file-system implementation may be available for all implementations \"for free\".\n\n## documentation\n\nplease refer to [rtd](https://filesystem-spec.readthedocs.io/en/latest/?badge=latest)\n\n## develop\n\nfsspec uses github actions for ci. environment files can be found\nin the \"ci/\" directory. note that the main environment is called \"py38\",\nbut it is expected that the version of python installed be adjustable at\nci runtime. for local use, pick a version suitable for you.\n\n### testing\n\ntests can be run in the dev environment, if activated, via ``pytest fsspec``.\n\nthe full fsspec suite requires a system-level docker, docker-compose, and fuse\ninstallation. if only making changes to one backend implementation, it is\nnot generally necessary to run all tests locally.\n\nit is expected that contributors ensure that any change to fsspec does not\ncause issues or regressions for either other fsspec-related packages such\nas gcsfs and s3fs, nor for downstream users of fsspec. the \"downstream\" ci\nrun and corresponding environment file run a set of tests from the dask\ntest suite, and very minimal tests against pandas and zarr from the\ntest_downstream.py module in this repo.\n\n### code formatting\n\nfsspec uses [black](https://black.readthedocs.io/en/stable) to ensure\na consistent code format throughout the project.\nrun ``black fsspec`` from the root of the filesystem_spec repository to\nauto-format your code. additionally, many editors have plugins that will apply\n``black`` as you edit files. ``black`` is included in the ``tox`` environments.\n\noptionally, you may wish to setup [pre-commit hooks](https://pre-commit.com) to\nautomatically run ``black`` when you make a git commit.\nrun ``pre-commit install --install-hooks`` from the root of the\nfilesystem_spec repository to setup pre-commit hooks. ``black`` will now be run\nbefore you commit, reformatting any changed files. you can format without\ncommitting via ``pre-commit run`` or skip these checks with ``git commit\n--no-verify``.\n",
  "docs_url": null,
  "keywords": "file",
  "license": "bsd",
  "name": "fsspec",
  "package_url": "https://pypi.org/project/fsspec/",
  "project_url": "https://pypi.org/project/fsspec/",
  "project_urls": {
    "Changelog": "https://filesystem-spec.readthedocs.io/en/latest/changelog.html",
    "Documentation": "https://filesystem-spec.readthedocs.io/en/latest/",
    "Homepage": "https://github.com/fsspec/filesystem_spec"
  },
  "release_url": "https://pypi.org/project/fsspec/2023.12.2/",
  "requires_dist": [
    "adlfs ; extra == 'abfs'",
    "adlfs ; extra == 'adl'",
    "pyarrow >=1 ; extra == 'arrow'",
    "dask ; extra == 'dask'",
    "distributed ; extra == 'dask'",
    "pytest ; extra == 'devel'",
    "pytest-cov ; extra == 'devel'",
    "dropboxdrivefs ; extra == 'dropbox'",
    "requests ; extra == 'dropbox'",
    "dropbox ; extra == 'dropbox'",
    "adlfs ; extra == 'full'",
    "aiohttp !=4.0.0a0,!=4.0.0a1 ; extra == 'full'",
    "dask ; extra == 'full'",
    "distributed ; extra == 'full'",
    "dropbox ; extra == 'full'",
    "dropboxdrivefs ; extra == 'full'",
    "fusepy ; extra == 'full'",
    "gcsfs ; extra == 'full'",
    "libarchive-c ; extra == 'full'",
    "ocifs ; extra == 'full'",
    "panel ; extra == 'full'",
    "paramiko ; extra == 'full'",
    "pyarrow >=1 ; extra == 'full'",
    "pygit2 ; extra == 'full'",
    "requests ; extra == 'full'",
    "s3fs ; extra == 'full'",
    "smbprotocol ; extra == 'full'",
    "tqdm ; extra == 'full'",
    "fusepy ; extra == 'fuse'",
    "gcsfs ; extra == 'gcs'",
    "pygit2 ; extra == 'git'",
    "requests ; extra == 'github'",
    "gcsfs ; extra == 'gs'",
    "panel ; extra == 'gui'",
    "pyarrow >=1 ; extra == 'hdfs'",
    "requests ; extra == 'http'",
    "aiohttp !=4.0.0a0,!=4.0.0a1 ; extra == 'http'",
    "libarchive-c ; extra == 'libarchive'",
    "ocifs ; extra == 'oci'",
    "s3fs ; extra == 's3'",
    "paramiko ; extra == 'sftp'",
    "smbprotocol ; extra == 'smb'",
    "paramiko ; extra == 'ssh'",
    "tqdm ; extra == 'tqdm'"
  ],
  "requires_python": ">=3.8",
  "summary": "file-system specification",
  "version": "2023.12.2",
  "releases": [],
  "developers": [
    "martin_durant",
    "mdurant@anaconda.com"
  ],
  "kwds": "fsspec badges badge pytest files",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_fsspec",
  "homepage": "https://github.com/fsspec/filesystem_spec",
  "release_count": 76,
  "dependency_ids": [
    "pypi_adlfs",
    "pypi_aiohttp",
    "pypi_dask",
    "pypi_distributed",
    "pypi_dropbox",
    "pypi_dropboxdrivefs",
    "pypi_fusepy",
    "pypi_gcsfs",
    "pypi_libarchive_c",
    "pypi_ocifs",
    "pypi_panel",
    "pypi_paramiko",
    "pypi_pyarrow",
    "pypi_pygit2",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_requests",
    "pypi_s3fs",
    "pypi_smbprotocol",
    "pypi_tqdm"
  ]
}
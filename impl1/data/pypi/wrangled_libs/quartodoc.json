{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: unix",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.9"
  ],
  "description": "# overview\n\n[![ci](https://github.com/machow/quartodoc/actions/workflows/ci.yml/badge.svg)](https://github.com/machow/quartodoc/actions/workflows/ci.yml)\n\n**quartodoc** lets you quickly generate python package api reference\ndocumentation using markdown and [quarto](https://quarto.org). quartodoc\nis designed as an alternative to\n[sphinx](https://www.sphinx-doc.org/en/master/).\n\ncheck out the below screencast for a walkthrough of creating a\ndocumentation site, or read on for instructions.\n\n<p align=\"center\">\n<a href=\"https://www.loom.com/share/fb4eb736848e470b8409ba46b514e2ed\">\n<img src=\"https://cdn.loom.com/sessions/thumbnails/fb4eb736848e470b8409ba46b514e2ed-00001.gif\" width=\"75%\">\n</a>\n</p>\n\n<br>\n\n## installation\n\n``` bash\npython -m pip install quartodoc\n```\n\nor from github\n\n``` bash\npython -m pip install git+https://github.com/machow/quartodoc.git\n```\n\n<div>\n\n> **install quarto**\n>\n> if you haven\u2019t already, you\u2019ll need to [install\n> quarto](https://quarto.org/docs/get-started/) before you can use\n> quartodoc.\n\n</div>\n\n## basic use\n\ngetting started with quartodoc takes two steps: configuring quartodoc,\nthen generating documentation pages for your library.\n\nyou can configure quartodoc alongside the rest of your quarto site in\nthe\n[`_quarto.yml`](https://quarto.org/docs/projects/quarto-projects.html)\nfile you are already using for quarto. to [configure\nquartodoc](https://machow.github.io/quartodoc/get-started/basic-docs.html#site-configuration),\nyou need to add a `quartodoc` section to the top level your\n`_quarto.yml` file. below is a minimal example of a configuration that\ndocuments the `quartodoc` package:\n\n``` yaml\nproject:\n  type: website\n\n# tell quarto to read the generated sidebar\nmetadata-files:\n  - _sidebar.yml\n\n\nquartodoc:\n  # the name used to import the package you want to create reference docs for\n  package: quartodoc\n\n  # write sidebar data to this file\n  sidebar: _sidebar.yml\n\n  sections:\n    - title: some functions\n      desc: functions to inspect docstrings.\n      contents:\n        # the functions being documented in the package.\n        # you can refer to anything: class methods, modules, etc..\n        - get_object\n        - preview\n```\n\nnow that you have configured quartodoc, you can generate the reference\napi docs with the following command:\n\n``` bash\nquartodoc build\n```\n\nthis will create a `reference/` directory with an `index.qmd` and\ndocumentation pages for listed functions, like `get_object` and\n`preview`.\n\nfinally, preview your website with quarto:\n\n``` bash\nquarto preview\n```\n\n## rebuilding site\n\nyou can preview your `quartodoc` site using the following commands:\n\nfirst, watch for changes to the library you are documenting so that your\ndocs will automatically re-generate:\n\n``` bash\nquartodoc build --watch\n```\n\nsecond, preview your site:\n\n``` bash\nquarto preview\n```\n\n## looking up objects\n\ngenerating api reference docs for python objects involves two pieces of\nconfiguration:\n\n1.  the package name.\n2.  a list of objects for content.\n\nquartodoc can look up a wide variety of objects, including functions,\nmodules, classes, attributes, and methods:\n\n``` yaml\nquartodoc:\n  package: quartodoc\n  sections:\n    - title: some section\n      desc: \"\"\n      contents:\n        - get_object        # function: quartodoc.get_object\n        - ast.preview       # submodule func: quartodoc.ast.preview\n        - mdrenderer        # class: quartodoc.mdrenderer\n        - mdrenderer.render # method: quartodoc.mdrenderer.render\n        - renderers         # module: quartodoc.renderers\n```\n\nthe functions listed in `contents` are assumed to be imported from the\npackage.\n\n## learning more\n\ngo [to the next\npage](https://machow.github.io/quartodoc/get-started/basic-docs.html) to\nlearn how to configure quartodoc sites, or check out these handy pages:\n\n- [examples\n  page](https://machow.github.io/quartodoc/examples/index.html): sites\n  using quartodoc.\n- [tutorials\n  page](https://machow.github.io/quartodoc/tutorials/index.html):\n  screencasts of building a quartodoc site.\n- [docstring issues and\n  examples](https://machow.github.io/quartodoc/get-started/docstring-examples.html):\n  common issues when formatting docstrings.\n- [programming, the big\n  picture](https://machow.github.io/quartodoc/get-started/dev-big-picture.html):\n  the nitty gritty of how quartodoc works, and how to extend it.\n",
  "docs_url": null,
  "keywords": "documentation,quarto",
  "license": "mit license  copyright (c) 2023 quartodoc authors  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.  the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software. ",
  "name": "quartodoc",
  "package_url": "https://pypi.org/project/quartodoc/",
  "project_url": "https://pypi.org/project/quartodoc/",
  "project_urls": {
    "ci": "https://github.com/machow/quartodoc/actions",
    "homepage": "https://machow.github.io/quartodoc",
    "repository": "https://github.com/machow/quartodoc"
  },
  "release_url": "https://pypi.org/project/quartodoc/0.7.2/",
  "requires_dist": [
    "click",
    "griffe >=0.33",
    "sphobjinv >=2.3.1",
    "tabulate >=0.9.0",
    "importlib-metadata >=5.1.0",
    "importlib-resources >=5.10.2",
    "pydantic",
    "pyyaml",
    "typing-extensions >=4.4.0",
    "watchdog >=3.0.0",
    "plum-dispatch <2.0.0 ; python_version < \"3.10\"",
    "plum-dispatch >2.0.0 ; python_version >= \"3.10\"",
    "pytest ; extra == 'dev'",
    "jupyterlab ; extra == 'dev'",
    "jupytext ; extra == 'dev'",
    "syrupy ; extra == 'dev'",
    "pre-commit ; extra == 'dev'"
  ],
  "requires_python": ">=3.9",
  "summary": "generate api documentation with quarto.",
  "version": "0.7.2",
  "releases": [],
  "developers": [
    "michael.chow@posit.co"
  ],
  "kwds": "documentation documenting sphinx docstrings pip",
  "license_kwds": "copyright liable license liability noninfringement",
  "libtype": "pypi",
  "id": "pypi_quartodoc",
  "homepage": "",
  "release_count": 26,
  "dependency_ids": [
    "pypi_click",
    "pypi_griffe",
    "pypi_importlib_metadata",
    "pypi_importlib_resources",
    "pypi_jupyterlab",
    "pypi_jupytext",
    "pypi_plum_dispatch",
    "pypi_pre_commit",
    "pypi_pydantic",
    "pypi_pytest",
    "pypi_pyyaml",
    "pypi_sphobjinv",
    "pypi_syrupy",
    "pypi_tabulate",
    "pypi_typing_extensions",
    "pypi_watchdog"
  ]
}
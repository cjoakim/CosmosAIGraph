{
  "classifiers": [
    "intended audience :: science/research",
    "programming language :: python",
    "topic :: scientific/engineering"
  ],
  "description": "## olympus: a benchmarking framework for noisy optimization and experiment planning\n[![build status](https://travis-ci.com/florianhase/olympus.svg?token=bmwwqbdm3xytautmlspk&branch=dev)](https://travis-ci.com/florianhase/olympus)\n[![codecov](https://codecov.io/gh/florianhase/olympus/branch/flo/graph/badge.svg?token=fyvepgbdq5)](https://codecov.io/gh/florianhase/olympus)\n\n``olympus`` provides a consistent and easy-to-use **framework for benchmarking optimization algorithms**. with ``olympus`` you can:\n* access a suite of **18 experiment planning algortihms** via a simple and consistent interface\n* easily integrate custom optimization algorithms\n* access **10 experimentally-derived benchmarks** emulated with probabilistic models, and **23 analytical test functions** for optimization\n* easily integrate custom datasets, which can be used to train models for custom benchmarks\n\nyou can find more details in the [documentation](https://florianhase.github.io/olympus/).\n\n###  installation\n``olympus`` can be installed with ``pip``:\n\n```\npip install olymp\n```\n\n### dependencies\nthe installation only requires:\n* ``python >= 3.6``\n* ``numpy``\n* ``pandas``\n\nadditional libraries are required to use specific modules and objects. ``olympus`` will alert you about these requirements as you try access the related functionality.\n\n###  citation\n``olympus`` is research software. if you make use of it in scientific publications, please cite the following article:\n\n```\n@misc{olympus,\n      title={olympus: a benchmarking framework for noisy optimization and experiment planning}, \n      author={florian h\u00e4se and matteo aldeghi and riley j. hickman and lo\u00efc m. roch and melodie christensen and elena liles and jason e. hein and al\u00e1n aspuru-guzik},\n      year={2020},\n      eprint={2010.04153},\n      archiveprefix={arxiv},\n      primaryclass={stat.ml}\n}\n```\n\n###  license\n``olympus`` is distributed under an mit license.\n\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "olymp",
  "package_url": "https://pypi.org/project/olymp/",
  "project_url": "https://pypi.org/project/olymp/",
  "project_urls": {
    "Homepage": "https://github.com/aspuru-guzik-group/olympus"
  },
  "release_url": "https://pypi.org/project/olymp/0.0.1b0/",
  "requires_dist": [
    "numpy",
    "pandas",
    "SQSnobFit ; extra == 'sqsnobfit'",
    "tensorflow (==1.15) ; extra == 'all'",
    "tensorflow-probability (==0.8) ; extra == 'all'",
    "pyswarms ; extra == 'all'",
    "phoenics ; extra == 'all'",
    "hyperopt ; extra == 'all'",
    "sqlalchemy ; extra == 'all'",
    "silence-tensorflow ; extra == 'all'",
    "matplotlib ; extra == 'all'",
    "cma ; extra == 'all'",
    "pandas ; extra == 'all'",
    "gpyopt ; extra == 'all'",
    "deap ; extra == 'all'",
    "SQSnobFit ; extra == 'all'",
    "seaborn ; extra == 'all'",
    "hyperopt ; extra == 'bayesian'",
    "gpyopt ; extra == 'bayesian'",
    "phoenics ; extra == 'bayesian'",
    "cma ; extra == 'cma'",
    "pandas ; extra == 'dataset'",
    "deap ; extra == 'deap'",
    "sqlalchemy ; extra == 'emulator'",
    "silence-tensorflow ; extra == 'emulator'",
    "tensorflow-probability (==0.8) ; extra == 'emulator'",
    "tensorflow (==1.15) ; extra == 'emulator'",
    "deap ; extra == 'genetic'",
    "cma ; extra == 'genetic'",
    "pyswarms ; extra == 'genetic'",
    "gpyopt ; extra == 'gpyopt'",
    "SQSnobFit ; extra == 'heuristic'",
    "hyperopt ; extra == 'hyperopt'",
    "matplotlib ; extra == 'matplotlib'",
    "pandas ; extra == 'pandas'",
    "phoenics ; extra == 'phoenics'",
    "pyswarms ; extra == 'planner'",
    "phoenics ; extra == 'planner'",
    "hyperopt ; extra == 'planner'",
    "cma ; extra == 'planner'",
    "gpyopt ; extra == 'planner'",
    "deap ; extra == 'planner'",
    "SQSnobFit ; extra == 'planner'",
    "matplotlib ; extra == 'plotter'",
    "seaborn ; extra == 'plotter'",
    "pyswarms ; extra == 'pyswarms'",
    "seaborn ; extra == 'seaborn'",
    "silence-tensorflow ; extra == 'silence-tensorflow'",
    "SQSnobFit ; extra == 'snobfit'",
    "sqlalchemy ; extra == 'sqlalchemy'",
    "tensorflow (==1.15) ; extra == 'tensorflow'",
    "tensorflow-probability (==0.8) ; extra == 'tensorflow-probability'"
  ],
  "requires_python": ">=3.6",
  "summary": "benchmarking framework for noisy optimization and experiment planning",
  "version": "0.0.1b0",
  "releases": [],
  "developers": [
    "florian_hase"
  ],
  "kwds": "benchmarks benchmarking olympus algorithms optimization",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_olymp",
  "homepage": "https://github.com/aspuru-guzik-group/olympus",
  "release_count": 1,
  "dependency_ids": [
    "pypi_cma",
    "pypi_deap",
    "pypi_gpyopt",
    "pypi_hyperopt",
    "pypi_matplotlib",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_phoenics",
    "pypi_pyswarms",
    "pypi_seaborn",
    "pypi_silence_tensorflow",
    "pypi_sqlalchemy",
    "pypi_sqsnobfit",
    "pypi_tensorflow",
    "pypi_tensorflow_probability"
  ]
}
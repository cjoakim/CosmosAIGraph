{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "virtualenv cloning script.\n\n[![build status](https://travis-ci.org/edwardgeorge/virtualenv-clone.svg?branch=master)](https://travis-ci.org/edwardgeorge/virtualenv-clone)\n\na script for cloning a non-relocatable virtualenv.\n\nvirtualenv provides a way to make virtualenv's relocatable which could then be\ncopied as we wanted. however making a virtualenv relocatable this way breaks\nthe no-site-packages isolation of the virtualenv as well as other aspects that\ncome with relative paths and `/usr/bin/env` shebangs that may be undesirable.\n\nalso, the .pth and .egg-link rewriting doesn't seem to work as intended. this\nattempts to overcome these issues and provide a way to easily clone an\nexisting virtualenv.\n\nit performs the following:\n\n- copies `sys.argv[1]` dir to `sys.argv[2]`\n- updates the hardcoded `virtual_env` variable in the activate script to the\n  new repo location. (`--relocatable` doesn't touch this)\n- updates the shebangs of the various scripts in bin to the new python if\n  they pointed to the old python. (version numbering is retained.)\n\n    it can also change `/usr/bin/env python` shebangs to be absolute too,\n    though this functionality is not exposed at present.\n\n- checks `sys.path` of the cloned virtualenv and if any of the paths are from\n  the old environment it finds any `.pth` or `.egg` link files within sys.path\n  located in the new environment and makes sure any absolute paths to the\n  old environment are updated to the new environment.\n\n- finally it double checks `sys.path` again and will fail if there are still\n  paths from the old environment present.\n\nnote: this script requires python 2.7 or 3.4+\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "virtualenv-clone",
  "package_url": "https://pypi.org/project/virtualenv-clone/",
  "project_url": "https://pypi.org/project/virtualenv-clone/",
  "project_urls": {
    "Homepage": "https://github.com/edwardgeorge/virtualenv-clone"
  },
  "release_url": "https://pypi.org/project/virtualenv-clone/0.5.7/",
  "requires_dist": [],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
  "summary": "script to clone virtualenvs.",
  "version": "0.5.7",
  "releases": [],
  "developers": [
    "edward_george",
    "edwardgeorge@gmail.com"
  ],
  "kwds": "virtualenvs virtual_env virtualenv cloning relocatable",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_virtualenv_clone",
  "homepage": "https://github.com/edwardgeorge/virtualenv-clone",
  "release_count": 18,
  "dependency_ids": []
}
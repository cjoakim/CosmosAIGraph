{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "topic :: internet :: www/http",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: logging"
  ],
  "description": "python-logstash\n===============\n\npython logging handler for logstash.\nhttp://logstash.net/\n\nchangelog\n=========\n0.4.8\n  - fixed python 3 issues with json serialization.\n0.4.7\n  - add couple of sensitive fields to the skip_list\n0.4.6\n  - updated field names to match java counterparts supported by logstash crew\n0.4.5\n  - allow passing exchange's routing key to amqp handler\n0.4.4\n  - fixed urllib import python3 compatibility.\n  - added long type to easy_types.\n0.4.3\n  - added amqp handler.\n0.4.2\n  - updated readme\n  - added ``tags`` parameter to handler\n0.4.1\n  - added tcp handler.\n0.3.1\n  - added support for python 3\n0.2.2\n  - split handler into handler and formatter classes\n0.2.1\n  - added support for the new json schema in logstash 1.2.x. see details in\n    http://tobrunet.ch/2013/09/logstash-1-2-0-upgrade-notes-included/ and\n    https://logstash.jira.com/browse/logstash-675\n\n    - added ``version`` parameter. available values: 1 (logstash 1.2.x version format), 0 - default (previous version).\n\n\ninstallation\n============\n\nusing pip::\n\n  pip install python-logstash\n\nusage\n=====\n\n``logstashhandler`` is a custom logging handler which sends logstash messages using udp.\n\nfor example::\n\n  import logging\n  import logstash\n  import sys\n\n  host = 'localhost'\n\n  test_logger = logging.getlogger('python-logstash-logger')\n  test_logger.setlevel(logging.info)\n  test_logger.addhandler(logstash.logstashhandler(host, 5959, version=1))\n  # test_logger.addhandler(logstash.tcplogstashhandler(host, 5959, version=1))\n\n  test_logger.error('python-logstash: test logstash error message.')\n  test_logger.info('python-logstash: test logstash info message.')\n  test_logger.warning('python-logstash: test logstash warning message.')\n\n  # add extra field to logstash message\n  extra = {\n      'test_string': 'python version: ' + repr(sys.version_info),\n      'test_boolean': true,\n      'test_dict': {'a': 1, 'b': 'c'},\n      'test_float': 1.23,\n      'test_integer': 123,\n      'test_list': [1, 2, '3'],\n  }\n  test_logger.info('python-logstash: test extra fields', extra=extra)\n\nwhen using ``extra`` field make sure you don't use reserved names. from `python documentation <https://docs.python.org/2/library/logging.html>`_.\n     | \"the keys in the dictionary passed in extra should not clash with the keys used by the logging system. (see the `formatter <https://docs.python.org/2/library/logging.html#logging.formatter>`_ documentation for more information on which keys are used by the logging system.)\"\n\nto use the amqplogstashhandler you will need to install pika first.\n\n   pip install pika\n\nfor example::\n\n  import logging\n  import logstash\n\n  test_logger = logging.getlogger('python-logstash-logger')\n  test_logger.setlevel(logging.info)\n  test_logger.addhandler(logstash.amqplogstashhandler(host='localhost', version=1))\n\n  test_logger.info('python-logstash: test logstash info message.')\n  try:\n      1/0\n  except:\n      test_logger.exception('python-logstash-logger: exception with stack trace!')\n\n\n\nusing with django\n=================\n\nmodify your ``settings.py`` to integrate ``python-logstash`` with django's logging::\n\n  logging = {\n    ...\n    'handlers': {\n        'logstash': {\n            'level': 'debug',\n            'class': 'logstash.logstashhandler',\n            'host': 'localhost',\n            'port': 5959, # default value: 5959\n            'version': 1, # version of logstash event schema. default value: 0 (for backward compatibility of the library)\n            'message_type': 'logstash',  # 'type' field in logstash message. default value: 'logstash'.\n            'fqdn': false, # fully qualified domain name. default value: false.\n            'tags': ['tag1', 'tag2'], # list of tags. default: none.\n        },\n    },\n    'loggers': {\n        'django.request': {\n            'handlers': ['logstash'],\n            'level': 'debug',\n            'propagate': true,\n        },\n    },\n    ...\n  }\n\nexample logstash configuration\n==============================\n\nexample logstash configuration (``logstash.conf``) for receiving events from python-logstash is::\n\n  input {\n    udp {\n      port => 5959\n      codec => json\n    }\n  }\n  output {\n    stdout {\n      codec => rubydebug\n    }\n  }\n\nfor tcp input you need to change the logstash's input to ``tcp`` and modify django log handler's class to ``logstash.tcplogstashhandler``\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "python-logstash",
  "package_url": "https://pypi.org/project/python-logstash/",
  "project_url": "https://pypi.org/project/python-logstash/",
  "project_urls": {
    "Homepage": "https://github.com/vklochan/python-logstash"
  },
  "release_url": "https://pypi.org/project/python-logstash/0.4.8/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "python logging handler for logstash.",
  "version": "0.4.8",
  "releases": [],
  "developers": [
    "vklochan@gmail.com",
    "volodymyr_klochan"
  ],
  "kwds": "logstash logstashhandler amqplogstashhandler logging json",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_python_logstash",
  "homepage": "https://github.com/vklochan/python-logstash",
  "release_count": 12,
  "dependency_ids": []
}
{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# python pickle malware scanner\n\n[![pypi](https://badge.fury.io/py/picklescan.svg)](https://pypi.org/project/picklescan/)\n[![test](https://github.com/mmaitre314/picklescan/workflows/test/badge.svg)](https://github.com/mmaitre314/picklescan/actions/workflows/test.yml)\n\nsecurity scanner detecting python pickle files performing suspicious actions.\n\n> for more generic model scanning, protect ai's [modelscan](https://github.com/protectai/modelscan) is now available to scan not only pickle files but\n> also pytorch, tensorflow, and keras.\n\n## getting started\n\nscan a malicious model on [hugging face](https://huggingface.co/):\n```bash\npip install picklescan\npicklescan --huggingface ykilcher/totally-harmless-model\n```\nthe scanner reports that the pickle is calling `eval()` to execute arbitrary code:\n```bash\nhttps://huggingface.co/ykilcher/totally-harmless-model/resolve/main/pytorch_model.bin:archive/data.pkl: global import '__builtin__ eval' found\n----------- scan summary -----------\nscanned files: 1\ninfected files: 1\ndangerous globals: 1\n```\n\nthe scanner can also load pickles from local files, directories, urls, and zip archives (a-la [pytorch](https://pytorch.org/)):\n```bash\npicklescan --path downloads/pytorch_model.bin\npicklescan --path downloads\npicklescan --url https://huggingface.co/sshleifer/tiny-distilbert-base-cased-distilled-squad/resolve/main/pytorch_model.bin\n```\n\nto scan numpy's `.npy` files, pip install the `numpy` package first.\n\nthe scanner exit status codes are (a-la [clamav](https://www.clamav.net/)):\n- `0`: scan did not find malware\n- `1`: scan found malware\n- `2`: scan failed\n\n## develop\n\ncreate and activate the conda environment ([miniconda](https://docs.conda.io/en/latest/miniconda.html) is sufficient):\n```\nconda env create -f conda.yaml\nconda activate picklescan\n```\n\ninstall the package in editable mode to develop and test:\n```\npython3 -m pip install -e .\n```\n\nedit with [vs code](https://code.visualstudio.com/):\n```\ncode .\n```\n\nrun unit tests:\n```\npytest tests\n```\n\nrun manual tests:\n- local pytorch (zip) file\n```bash\nmkdir downloads\nwget -o downloads/pytorch_model.bin https://huggingface.co/ykilcher/totally-harmless-model/resolve/main/pytorch_model.bin\npicklescan -l debug -p downloads/pytorch_model.bin\n```\n- remote pytorch (zip) url\n```bash\npicklescan -l debug -u https://huggingface.co/prajjwal1/bert-tiny/resolve/main/pytorch_model.bin\n```\n\nlint the code:\n```\nblack src tests\nflake8 src tests --count --show-source\n```\n\npublish the package to [pypi](https://pypi.org/project/picklescan/): bump the package version in `setup.cfg` and create a github release. this triggers the `publish` workflow.\n\nalternative manual steps to publish the package:\n```\npython3 -m pip install --upgrade pip\npython3 -m pip install --upgrade build\npython3 -m build\npython3 -m twine upload dist/*\n```\n\ntest the package: bump the version of `picklescan` in `conda.test.yaml` and run\n```\nconda env remove -n picklescan-test\nconda env create -f conda.test.yaml\nconda activate picklescan-test\npicklescan --huggingface ykilcher/totally-harmless-model\n```\n\ntested on `linux 5.10.102.1-microsoft-standard-wsl2 x86_64` (wsl2).\n\n## references\n\n- [pickletools.py](https://github.com/python/cpython/blob/main/lib/pickletools.py) -- the pickletool code is the most detailed documentation of the pickle format.\n- [machine learning attack series: backdooring pickle files](https://embracethered.com/blog/posts/2022/machine-learning-attack-series-injecting-code-pickle-files/), johann rehberger, 2022\n- [hugging face pickle scanning](https://huggingface.co/docs/hub/security-pickle), luc georges, 2022\n- [the hidden dangers of loading open-source ai models (arbitrary code exploit!](https://www.youtube.com/watch?v=2ethdz9knlk), yannic kilcher, 2022\n- [secure machine learning at scale with mlsecops](https://github.com/ethicalml/fml-security#2---load-pickle-and-inject-malicious-code), alejandro saucedo, 2022\n- [backdooring pickles: a decade only made things worse](https://coldwaterq.com/presentations/coldwaterq%20-%20backdooring%20pickles%20a%20decade%20only%20made%20things%20worse%20-%20v1.pdf), coldwaterq, defcon 2022\n- [never a dill moment: exploiting machine learning pickle files](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/), evan sultanik, 2021 (tool: [fickling](https://github.com/trailofbits/fickling))\n- [exploiting python pickles](https://davidhamann.de/2020/04/05/exploiting-python-pickle/), david hamann, 2020\n- [dangerous pickles - malicious python serialization](https://intoli.com/blog/dangerous-pickles/), evan sangaline, 2017\n- [python pickle security problems and solutions](https://www.smartfile.com/blog/python-pickle-security-problems-and-solutions/), travis cunningham, 2015\n- [arbitrary code execution with python pickles](https://checkoway.net/musings/pickle/), stephen checkoway, 2013\n- [sour pickles, a serialised exploitation guide in one part](https://www.youtube.com/watch?v=hszwfmksm08), marco slaviero, blackhat usa 2011 (see also: [doc](https://sensepost.com/cms/resources/conferences/2011/sour_pickles/bh_us_11_slaviero_sour_pickles.pdf), [slides](https://www.slideshare.net/sensepost/sour-pickles))\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "picklescan",
  "package_url": "https://pypi.org/project/picklescan/",
  "project_url": "https://pypi.org/project/picklescan/",
  "project_urls": {
    "Bug Tracker": "https://github.com/mmaitre314/picklescan/issues",
    "Homepage": "https://github.com/mmaitre314/picklescan"
  },
  "release_url": "https://pypi.org/project/picklescan/0.0.13/",
  "requires_dist": [],
  "requires_python": ">=3.9",
  "summary": "security scanner detecting python pickle files performing suspicious actions",
  "version": "0.0.13",
  "releases": [],
  "developers": [
    "matthieu_maitre",
    "mmaitre314@users.noreply.github.com"
  ],
  "kwds": "modelscan picklescan malware scanning scan",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_picklescan",
  "homepage": "https://github.com/mmaitre314/picklescan",
  "release_count": 13,
  "dependency_ids": []
}
{
  "classifiers": [
    "license :: osi approved :: gnu lesser general public license v2 (lgplv2)",
    "license :: osi approved :: mozilla public license 1.1 (mpl 1.1)",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": ".. image:: https://raw.githubusercontent.com/pygobject/pycairo/main/docs/images/pycairo.svg\r\n   :align: center\r\n   :width: 370px\r\n\r\n|\r\n\r\npycairo is a python module providing bindings for the `cairo graphics library\r\n<https://cairographics.org/>`__. it depends on **cairo >= 1.15.10** and works\r\nwith **python 3.8+** and **pypy3**. pycairo, including this documentation, is\r\nlicensed under the `lgpl-2.1-only or mpl-1.1 <https://spdx.dev/ids>`__.\r\n\r\nthe pycairo bindings are designed to match the cairo c api as closely as\r\npossible, and to deviate only in cases which are clearly better implemented in\r\na more \u2018pythonic\u2019 way.\r\n\r\n.. code:: shell\r\n\r\n    pip install pycairo\r\n\r\ninstalling pycairo requires cairo including its headers. for more info see\r\n\"`getting started\r\n<https://pycairo.readthedocs.io/en/latest/getting_started.html>`__\".\r\n\r\n----\r\n\r\n.. code:: python\r\n\r\n    import cairo\r\n\r\n    with cairo.svgsurface(\"example.svg\", 200, 200) as surface:\r\n        context = cairo.context(surface)\r\n        x, y, x1, y1 = 0.1, 0.5, 0.4, 0.9\r\n        x2, y2, x3, y3 = 0.6, 0.1, 0.9, 0.5\r\n        context.scale(200, 200)\r\n        context.set_line_width(0.04)\r\n        context.move_to(x, y)\r\n        context.curve_to(x1, y1, x2, y2, x3, y3)\r\n        context.stroke()\r\n        context.set_source_rgba(1, 0.2, 0.2, 0.6)\r\n        context.set_line_width(0.02)\r\n        context.move_to(x, y)\r\n        context.line_to(x1, y1)\r\n        context.move_to(x2, y2)\r\n        context.line_to(x3, y3)\r\n        context.stroke()\r\n\r\n.. image:: https://raw.githubusercontent.com/pygobject/pycairo/main/docs/images/example.svg\r\n    :width: 320px\r\n    :align: center\r\n\r\n----\r\n\r\nfeatures of the pycairo bindings:\r\n\r\n* provides an object oriented interface to cairo.\r\n* queries the error status of objects and translates them to exceptions.\r\n* provides a c api that can be used by other python extensions.\r\n* fully typed and documented api.\r\n\r\nfor more information visit https://pycairo.readthedocs.io\r\n",
  "docs_url": null,
  "keywords": "",
  "license": "lgpl-2.1-only or mpl-1.1",
  "name": "pycairo",
  "package_url": "https://pypi.org/project/pycairo/",
  "project_url": "https://pypi.org/project/pycairo/",
  "project_urls": {
    "Homepage": "https://pycairo.readthedocs.io",
    "Source": "https://github.com/pygobject/pycairo"
  },
  "release_url": "https://pypi.org/project/pycairo/1.25.1/",
  "requires_dist": [],
  "requires_python": ">=3.8",
  "summary": "python interface for cairo",
  "version": "1.25.1",
  "releases": [],
  "developers": [
    "christoph_reiter",
    "reiter.christoph@gmail.com"
  ],
  "kwds": "cairographics pycairo cairo pypy3 mpl",
  "license_kwds": "lgpl-2.1-only or mpl-1.1",
  "libtype": "pypi",
  "id": "pypi_pycairo",
  "homepage": "https://pycairo.readthedocs.io",
  "release_count": 39,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: system administrators",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: application frameworks",
    "topic :: software development :: libraries :: python modules",
    "typing :: typed"
  ],
  "description": "<p align=\"center\">\n  <a href=\"https://typer.tiangolo.com\"><img src=\"https://typer.tiangolo.com/img/logo-margin/logo-margin-vector.svg\" alt=\"typer\"></a>\n</p>\n<p align=\"center\">\n    <em>typer, build great clis. easy to code. based on python type hints.</em>\n</p>\n<p align=\"center\">\n<a href=\"https://github.com/tiangolo/typer/actions?query=workflow%3atest\" target=\"_blank\">\n    <img src=\"https://github.com/tiangolo/typer/workflows/test/badge.svg\" alt=\"test\">\n</a>\n<a href=\"https://github.com/tiangolo/typer/actions?query=workflow%3apublish\" target=\"_blank\">\n    <img src=\"https://github.com/tiangolo/typer/workflows/publish/badge.svg\" alt=\"publish\">\n</a>\n<a href=\"https://coverage-badge.samuelcolvin.workers.dev/redirect/tiangolo/typer\" target=\"_blank\">\n    <img src=\"https://coverage-badge.samuelcolvin.workers.dev/tiangolo/typer.svg\" alt=\"coverage\">\n<a href=\"https://pypi.org/project/typer\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/v/typer?color=%2334d058&label=pypi%20package\" alt=\"package version\">\n</a>\n</p>\n\n---\n\n**documentation**: <a href=\"https://typer.tiangolo.com\" target=\"_blank\">https://typer.tiangolo.com</a>\n\n**source code**: <a href=\"https://github.com/tiangolo/typer\" target=\"_blank\">https://github.com/tiangolo/typer</a>\n\n---\n\ntyper is a library for building <abbr title=\"command line interface, programs executed from a terminal\">cli</abbr> applications that users will **love using** and developers will **love creating**. based on python 3.6+ type hints.\n\nthe key features are:\n\n* **intuitive to write**: great editor support. <abbr title=\"also known as auto-complete, autocompletion, intellisense\">completion</abbr> everywhere. less time debugging. designed to be easy to use and learn. less time reading docs.\n* **easy to use**: it's easy to use for the final users. automatic help, and automatic completion for all shells.\n* **short**: minimize code duplication. multiple features from each parameter declaration. fewer bugs.\n* **start simple**: the simplest example adds only 2 lines of code to your app: **1 import, 1 function call**.\n* **grow large**: grow in complexity as much as you want, create arbitrarily complex trees of commands and groups of subcommands, with options and arguments.\n\n## fastapi of clis\n\n<a href=\"https://fastapi.tiangolo.com\" target=\"_blank\"><img src=\"https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png\" style=\"width: 20%;\"></a>\n\n**typer** is <a href=\"https://fastapi.tiangolo.com\" class=\"external-link\" target=\"_blank\">fastapi</a>'s little sibling.\n\nand it's intended to be the fastapi of clis.\n\n## requirements\n\npython 3.6+\n\n**typer** stands on the shoulders of a giant. its only internal dependency is <a href=\"https://click.palletsprojects.com/\" class=\"external-link\" target=\"_blank\">click</a>.\n\n## installation\n\n<div class=\"termy\">\n\n```console\n$ pip install \"typer[all]\"\n---> 100%\nsuccessfully installed typer\n```\n\n</div>\n\n**note**: that will include <a href=\"https://rich.readthedocs.io/\" class=\"external-link\" target=\"_blank\">rich</a>. rich is the recommended library to *display* information on the terminal, it is optional, but when installed, it's deeply integrated into **typer** to display beautiful output.\n\n## example\n\n### the absolute minimum\n\n* create a file `main.py` with:\n\n```python\nimport typer\n\n\ndef main(name: str):\n    print(f\"hello {name}\")\n\n\nif __name__ == \"__main__\":\n    typer.run(main)\n```\n\n### run it\n\nrun your application:\n\n<div class=\"termy\">\n\n```console\n// run your application\n$ python main.py\n\n// you get a nice error, you are missing name\nusage: main.py [options] name\ntry 'main.py --help' for help.\n\u256d\u2500 error \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 missing argument 'name'.                          \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n\n// you get a --help for free\n$ python main.py --help\n\nusage: main.py [options] name\n\n\u256d\u2500 arguments \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *    name      text  [default: none] [required]   |\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --help          show this message and exit.       \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n// now pass the name argument\n$ python main.py camila\n\nhello camila\n\n// it works! \ud83c\udf89\n```\n\n</div>\n\n**note**: auto-completion works when you create a python package and run it with `--install-completion` or when you use <a href=\"https://typer.tiangolo.com/typer-cli/\" class=\"internal-link\" target=\"_blank\">typer cli</a>.\n\n## example upgrade\n\nthis was the simplest example possible.\n\nnow let's see one a bit more complex.\n\n### an example with two subcommands\n\nmodify the file `main.py`.\n\ncreate a `typer.typer()` app, and create two subcommands with their parameters.\n\n```python hl_lines=\"3  6  11  20\"\nimport typer\n\napp = typer.typer()\n\n\n@app.command()\ndef hello(name: str):\n    print(f\"hello {name}\")\n\n\n@app.command()\ndef goodbye(name: str, formal: bool = false):\n    if formal:\n        print(f\"goodbye ms. {name}. have a good day.\")\n    else:\n        print(f\"bye {name}!\")\n\n\nif __name__ == \"__main__\":\n    app()\n```\n\nand that will:\n\n* explicitly create a `typer.typer` app.\n    * the previous `typer.run` actually creates one implicitly for you.\n* add two subcommands with `@app.command()`.\n* execute the `app()` itself, as if it was a function (instead of `typer.run`).\n\n### run the upgraded example\n\ncheck the new help:\n\n<div class=\"termy\">\n\n```console\n$ python main.py --help\n\n usage: main.py [options] command [args]...\n\n\u256d\u2500 options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --install-completion          install completion  \u2502\n\u2502                               for the current     \u2502\n\u2502                               shell.              \u2502\n\u2502 --show-completion             show completion for \u2502\n\u2502                               the current shell,  \u2502\n\u2502                               to copy it or       \u2502\n\u2502                               customize the       \u2502\n\u2502                               installation.       \u2502\n\u2502 --help                        show this message   \u2502\n\u2502                               and exit.           \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 goodbye                                           \u2502\n\u2502 hello                                             \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n// when you create a package you get \u2728 auto-completion \u2728 for free, installed with --install-completion\n\n// you have 2 subcommands (the 2 functions): goodbye and hello\n```\n\n</div>\n\nnow check the help for the `hello` command:\n\n<div class=\"termy\">\n\n```console\n$ python main.py hello --help\n\n usage: main.py hello [options] name\n\n\u256d\u2500 arguments \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *    name      text  [default: none] [required]   \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --help          show this message and exit.       \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n```\n\n</div>\n\nand now check the help for the `goodbye` command:\n\n<div class=\"termy\">\n\n```console\n$ python main.py goodbye --help\n\n usage: main.py goodbye [options] name\n\n\u256d\u2500 arguments \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *    name      text  [default: none] [required]   \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --formal    --no-formal      [default: no-formal] \u2502\n\u2502 --help                       show this message    \u2502\n\u2502                              and exit.            \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n// automatic --formal and --no-formal for the bool option \ud83c\udf89\n```\n\n</div>\n\nnow you can try out the new command line application:\n\n<div class=\"termy\">\n\n```console\n// use it with the hello command\n\n$ python main.py hello camila\n\nhello camila\n\n// and with the goodbye command\n\n$ python main.py goodbye camila\n\nbye camila!\n\n// and with --formal\n\n$ python main.py goodbye --formal camila\n\ngoodbye ms. camila. have a good day.\n```\n\n</div>\n\n### recap\n\nin summary, you declare **once** the types of parameters (*cli arguments* and *cli options*) as function parameters.\n\nyou do that with standard modern python types.\n\nyou don't have to learn a new syntax, the methods or classes of a specific library, etc.\n\njust standard **python 3.6+**.\n\nfor example, for an `int`:\n\n```python\ntotal: int\n```\n\nor for a `bool` flag:\n\n```python\nforce: bool\n```\n\nand similarly for **files**, **paths**, **enums** (choices), etc. and there are tools to create **groups of subcommands**, add metadata, extra **validation**, etc.\n\n**you get**: great editor support, including **completion** and **type checks** everywhere.\n\n**your users get**: automatic **`--help`**, **auto-completion** in their terminal (bash, zsh, fish, powershell) when they install your package or when using <a href=\"https://typer.tiangolo.com/typer-cli/\" class=\"internal-link\" target=\"_blank\">typer cli</a>.\n\nfor a more complete example including more features, see the <a href=\"https://typer.tiangolo.com/tutorial/\">tutorial - user guide</a>.\n\n## optional dependencies\n\ntyper uses <a href=\"https://click.palletsprojects.com/\" class=\"external-link\" target=\"_blank\">click</a> internally. that's the only dependency.\n\nbut you can also install extras:\n\n* <a href=\"https://rich.readthedocs.io/en/stable/index.html\" class=\"external-link\" target=\"_blank\"><code>rich</code></a>: and typer will show nicely formatted errors automatically.\n* <a href=\"https://github.com/sarugaku/shellingham\" class=\"external-link\" target=\"_blank\"><code>shellingham</code></a>: and typer will automatically detect the current shell when installing completion.\n    * with `shellingham` you can just use `--install-completion`.\n    * without `shellingham`, you have to pass the name of the shell to install completion for, e.g. `--install-completion bash`.\n\nyou can install `typer` with `rich` and `shellingham` with `pip install typer[all]`.\n\n## license\n\nthis project is licensed under the terms of the mit license.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "typer",
  "package_url": "https://pypi.org/project/typer/",
  "project_url": "https://pypi.org/project/typer/",
  "project_urls": {
    "Documentation": "https://typer.tiangolo.com/",
    "Homepage": "https://github.com/tiangolo/typer"
  },
  "release_url": "https://pypi.org/project/typer/0.9.0/",
  "requires_dist": [
    "click >= 7.1.1, <9.0.0",
    "typing-extensions >= 3.7.4.3",
    "colorama >=0.4.3,<0.5.0 ; extra == \"all\"",
    "shellingham >=1.3.0,<2.0.0 ; extra == \"all\"",
    "rich >=10.11.0,<14.0.0 ; extra == \"all\"",
    "autoflake >=1.3.1,<2.0.0 ; extra == \"dev\"",
    "flake8 >=3.8.3,<4.0.0 ; extra == \"dev\"",
    "pre-commit >=2.17.0,<3.0.0 ; extra == \"dev\"",
    "mkdocs >=1.1.2,<2.0.0 ; extra == \"doc\"",
    "mkdocs-material >=8.1.4,<9.0.0 ; extra == \"doc\"",
    "mdx-include >=1.4.1,<2.0.0 ; extra == \"doc\"",
    "pillow >=9.3.0,<10.0.0 ; extra == \"doc\"",
    "cairosvg >=2.5.2,<3.0.0 ; extra == \"doc\"",
    "shellingham >=1.3.0,<2.0.0 ; extra == \"test\"",
    "pytest >=4.4.0,<8.0.0 ; extra == \"test\"",
    "pytest-cov >=2.10.0,<5.0.0 ; extra == \"test\"",
    "coverage >=6.2,<7.0 ; extra == \"test\"",
    "pytest-xdist >=1.32.0,<4.0.0 ; extra == \"test\"",
    "pytest-sugar >=0.9.4,<0.10.0 ; extra == \"test\"",
    "mypy ==0.910 ; extra == \"test\"",
    "black >=22.3.0,<23.0.0 ; extra == \"test\"",
    "isort >=5.0.6,<6.0.0 ; extra == \"test\"",
    "rich >=10.11.0,<14.0.0 ; extra == \"test\""
  ],
  "requires_python": ">=3.6",
  "summary": "typer, build great clis. easy to code. based on python type hints.",
  "version": "0.9.0",
  "releases": [],
  "developers": [
    "tiangolo@gmail.com"
  ],
  "kwds": "logo href html img svg",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_typer",
  "homepage": "https://github.com/tiangolo/typer",
  "release_count": 27,
  "dependency_ids": [
    "pypi_autoflake",
    "pypi_black",
    "pypi_cairosvg",
    "pypi_click",
    "pypi_colorama",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_isort",
    "pypi_mdx_include",
    "pypi_mkdocs",
    "pypi_mkdocs_material",
    "pypi_mypy",
    "pypi_pillow",
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_sugar",
    "pypi_pytest_xdist",
    "pypi_rich",
    "pypi_shellingham",
    "pypi_typing_extensions"
  ]
}
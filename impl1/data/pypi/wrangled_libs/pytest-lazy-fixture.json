{
  "classifiers": [
    "development status :: 4 - beta",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: testing"
  ],
  "description": "pytest-lazy-fixture |travis-ci| |appveyor| |pypi|\n=================================================\n\nuse your fixtures in ``@pytest.mark.parametrize``.\n\ninstallation\n------------\n\n.. code-block:: shell\n\n    pip install pytest-lazy-fixture\n\nusage\n-----\n\n.. code-block:: python\n\n    import pytest\n\n    @pytest.fixture(params=[1, 2])\n    def one(request):\n        return request.param\n\n    @pytest.mark.parametrize('arg1,arg2', [\n        ('val1', pytest.lazy_fixture('one')),\n    ])\n    def test_func(arg1, arg2):\n        assert arg2 in [1, 2]\n\n\nalso you can use it as a parameter in ``@pytest.fixture``:\n\n.. code-block:: python\n\n    import pytest\n\n    @pytest.fixture(params=[\n        pytest.lazy_fixture('one'),\n        pytest.lazy_fixture('two')\n    ])\n    def some(request):\n        return request.param\n\n    @pytest.fixture\n    def one():\n        return 1\n\n    @pytest.fixture\n    def two():\n        return 2\n\n    def test_func(some):\n        assert some in [1, 2]\n\nplease see `tests <https://github.com/tvorog/pytest-lazy-fixture/blob/master/tests/test_lazyfixture.py>`_ for more examples.\n\ncontributing\n------------\n\ncontributions are very welcome. tests can be run with ``tox``.\n\nlicense\n-------\n\ndistributed under the terms of the ``mit`` license,\n``pytest-lazy-fixture`` is free and open source software\n\nissues\n------\n\nif you encounter any problems, please ``file an issue`` along with a\ndetailed description.\n\n.. |travis-ci| image:: https://travis-ci.org/tvorog/pytest-lazy-fixture.svg?branch=master\n    :target: https://travis-ci.org/tvorog/pytest-lazy-fixture\n.. |appveyor| image:: https://ci.appveyor.com/api/projects/status/github/tvorog/pytest-fixture-mark?branch=master&svg=true\n    :target: https://ci.appveyor.com/project/tvorog/pytest-fixture-mark\n.. |pypi| image:: https://badge.fury.io/py/pytest-lazy-fixture.svg\n    :target: https://pypi.python.org/pypi/pytest-lazy-fixture/\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pytest-lazy-fixture",
  "package_url": "https://pypi.org/project/pytest-lazy-fixture/",
  "project_url": "https://pypi.org/project/pytest-lazy-fixture/",
  "project_urls": {
    "Homepage": "https://github.com/tvorog/pytest-lazy-fixture"
  },
  "release_url": "https://pypi.org/project/pytest-lazy-fixture/0.6.3/",
  "requires_dist": [
    "pytest (>=3.2.5)"
  ],
  "requires_python": "",
  "summary": "it helps to use fixtures in pytest.mark.parametrize",
  "version": "0.6.3",
  "releases": [],
  "developers": [
    "marsel_zaripov",
    "marszaripov@gmail.com"
  ],
  "kwds": "test_lazyfixture lazy_fixture test_func pytest assert",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytest_lazy_fixture",
  "homepage": "https://github.com/tvorog/pytest-lazy-fixture",
  "release_count": 12,
  "dependency_ids": [
    "pypi_pytest"
  ]
}
{
  "classifiers": [
    "license :: osi approved :: mit license"
  ],
  "description": "**disclaimer**\n==============\nthis project is not maintained. it is merely a fork of [yhat/pandasql](https://github.com/yhat/pandasql) and all credit goes to the group. this fork just resolves an issue of compatibility with sqlalchemy v2.x.x. [a pr was requested](https://github.com/yhat/pandasql/pull/104) for this to be included in the main `pandasql` project but it seems to be dormant. this sparked the creation of this fork.\n\npansql\n========\n\n`pansql` allows you to query `pandas` dataframes using sql syntax. it works \nsimilarly to `sqldf` in r. `pansql` seeks to provide a more familiar way of \nmanipulating and cleaning data for people new to python or `pandas`.\n\n#### installation\n```\n$ pip install -u pansql\n```\n\n#### basics\nthe main function used in pansql is `sqldf`. `sqldf` accepts 2 parametrs\n   - a sql query string\n   - a set of session/environment variables (`locals()` or `globals()`)\n\nspecifying `locals()` or `globals()` can get tedious. you can define a short \nhelper function to fix this.\n\n    from pansql import sqldf\n    pysqldf = lambda q: sqldf(q, globals())\n\n#### querying\n`pansql` uses [sqlite syntax](http://www.sqlite.org/lang.html). any `pandas` \ndataframes will be automatically detected by `pansql`. you can query them as \nyou would any regular sql table.\n\n\n```\n$ python\n>>> from pansql import sqldf, load_meat, load_births\n>>> pysqldf = lambda q: sqldf(q, globals())\n>>> meat = load_meat()\n>>> births = load_births()\n>>> print pysqldf(\"select * from meat limit 10;\").head()\n                  date  beef  veal  pork  lamb_and_mutton broilers other_chicken turkey\n0  1944-01-01 00:00:00   751    85  1280               89     none          none   none\n1  1944-02-01 00:00:00   713    77  1169               72     none          none   none\n2  1944-03-01 00:00:00   741    90  1128               75     none          none   none\n3  1944-04-01 00:00:00   650    89   978               66     none          none   none\n4  1944-05-01 00:00:00   681   106  1029               78     none          none   none\n```\n\njoins and aggregations are also supported\n```\n>>> q = \"\"\"select\n        m.date, m.beef, b.births\n     from\n        meats m\n     inner join\n        births b\n           on m.date = b.date;\"\"\"\n>>> joined = pyqldf(q)\n>>> print joined.head()\n                    date    beef  births\n403  2012-07-01 00:00:00  2200.8  368450\n404  2012-08-01 00:00:00  2367.5  359554\n405  2012-09-01 00:00:00  2016.0  361922\n406  2012-10-01 00:00:00  2343.7  347625\n407  2012-11-01 00:00:00  2206.6  320195\n\n>>> q = \"select\n           strftime('%y', date) as year\n           , sum(beef) as beef_total\n           from\n              meat\n           group by\n              year;\"\n>>> print pysqldf(q).head()\n   year  beef_total\n0  1944        8801\n1  1945        9936\n2  1946        9010\n3  1947       10096\n4  1948        8766\n```\n\nmore information and code samples available in the [examples](https://github.com/yhat/pandasql/blob/master/examples/demo.py)\n folder or on [our blog](http://blog.yhathq.com/posts/pandasql-sql-for-pandas-dataframes.html).\n\n\n\n[![analytics](https://ga-beacon.appspot.com/ua-46996803-1/pandasql/readme.md)](https://github.com/yhat/pandasql)    \n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pansql",
  "package_url": "https://pypi.org/project/pansql/",
  "project_url": "https://pypi.org/project/pansql/",
  "project_urls": {
    "Homepage": "https://github.com/hrshdhgd/pansql/"
  },
  "release_url": "https://pypi.org/project/pansql/0.0.1/",
  "requires_dist": [
    "numpy",
    "pandas",
    "sqlalchemy"
  ],
  "requires_python": "",
  "summary": "sqldf for pandas",
  "version": "0.0.1",
  "releases": [],
  "developers": [
    "harshad_hegde",
    "hhegde@lbl.gov"
  ],
  "kwds": "pandasql sqlalchemy pansql pandas pysqldf",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pansql",
  "homepage": "https://github.com/hrshdhgd/pansql/",
  "release_count": 2,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_pandas",
    "pypi_sqlalchemy"
  ]
}
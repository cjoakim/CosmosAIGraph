{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "<p align=\"center\">\r\n  <a href=\"https://erdogant.github.io/pca/\">\r\n  <img src=\"https://github.com/erdogant/distfit/blob/master/docs/figs/logo.png\" width=\"600\" />\r\n  </a>\r\n</p>\r\n\r\n[![python](https://img.shields.io/pypi/pyversions/distfit)](https://img.shields.io/pypi/pyversions/distfit)\r\n[![pypi](https://img.shields.io/pypi/v/distfit)](https://pypi.org/project/distfit/)\r\n[![docs](https://img.shields.io/badge/sphinx-docs-green)](https://erdogant.github.io/distfit/)\r\n[![loc](https://sloc.xyz/github/erdogant/distfit/?category=code)](https://github.com/erdogant/distfit/)\r\n[![downloads](https://static.pepy.tech/personalized-badge/distfit?period=month&units=international_system&left_color=grey&right_color=brightgreen&left_text=pypi%20downloads/month)](https://pepy.tech/project/distfit)\r\n[![downloads](https://static.pepy.tech/personalized-badge/distfit?period=total&units=international_system&left_color=grey&right_color=brightgreen&left_text=downloads)](https://pepy.tech/project/distfit)\r\n[![license](https://img.shields.io/badge/license-mit-green.svg)](https://github.com/erdogant/distfit/blob/master/license)\r\n[![forks](https://img.shields.io/github/forks/erdogant/distfit.svg)](https://github.com/erdogant/distfit/network)\r\n[![issues](https://img.shields.io/github/issues/erdogant/distfit.svg)](https://github.com/erdogant/distfit/issues)\r\n[![project status](http://www.repostatus.org/badges/latest/active.svg)](http://www.repostatus.org/#active)\r\n[![doi](https://zenodo.org/badge/231843440.svg)](https://zenodo.org/badge/latestdoi/231843440)\r\n[![medium](https://img.shields.io/badge/medium-blog-black)](https://erdogant.github.io/distfit/pages/html/documentation.html#medium-blog)\r\n[![colab](https://colab.research.google.com/assets/colab-badge.svg)](https://erdogant.github.io/distfit/pages/html/documentation.html#colab-notebook)\r\n[![donate](https://img.shields.io/badge/support%20this%20project-grey.svg?logo=github%20sponsors)](https://erdogant.github.io/distfit/pages/html/documentation.html#)\r\n<!---[![buymecoffee](https://img.shields.io/badge/buymea-coffee-yellow.svg)](https://www.buymeacoffee.com/erdogant)-->\r\n<!---[![coffee](https://img.shields.io/badge/coffee-black-grey.svg)](https://erdogant.github.io/donate/?currency=usd&amount=5)-->\r\n\r\n# \r\n### blogs\r\n#### [1. how to find the best theoretical distribution for your data](https://erdogant.github.io/distfit/pages/html/documentation.html#medium-blog)\r\n\r\n#### [2. outlier detection using distribution fitting in univariate datasets](https://towardsdatascience.com/outlier-detection-using-distribution-fitting-in-univariate-data-sets-ac8b7a14d40e)\r\n\r\n#### [3. step-by-step guide to generate synthetic data by sampling from univariate distributions](https://towardsdatascience.com/step-by-step-guide-to-generate-synthetic-data-by-sampling-from-univariate-distributions-6b0be4221cb1)\r\n\r\n\r\n\r\n# \r\n\r\n### [documentation pages](https://erdogant.github.io/distfit/)\r\n\r\n# \r\n\r\n``distfit`` is a python package for probability density fitting of univariate distributions for random variables.\r\nwith the random variable as an input, distfit can find the best fit for parametric, non-parametric, and discrete distributions.\r\n\r\n* for the parametric approach, the distfit library can determine the best fit across 89 theoretical distributions.\r\n  to score the fit, one of the scoring statistics for the good-of-fitness test can be used used, such as rss/sse, wasserstein,\r\n  kolmogorov-smirnov (ks), or energy. after finding the best-fitted theoretical distribution, the loc, scale,\r\n  and arg parameters are returned, such as mean and standard deviation for normal distribution.\r\n\r\n* for the non-parametric approach, the distfit library contains two methods, the quantile and percentile method.\r\n  both methods assume that the data does not follow a specific probability distribution. in the case of the quantile method,\r\n  the quantiles of the data are modeled whereas for the percentile method, the percentiles are modeled.\r\n\r\n* in case the dataset contains discrete values, the distift library contains the option for discrete fitting.\r\n  the best fit is then derived using the binomial distribution.\r\n\r\n# \r\n**\u2b50\ufe0f star this repo if you like it \u2b50\ufe0f**\r\n# \r\n\r\n\r\n\r\n### installation\r\n\r\n##### install distfit from pypi\r\n```bash\r\npip install distfit\r\n```\r\n\r\n##### install from github source (beta version)\r\n```bash\r\n install git+https://github.com/erdogant/distfit\r\n```  \r\n\r\n##### check version\r\n```python\r\nimport distfit\r\nprint(distfit.__version__)\r\n```\r\n\r\n##### the following functions are available after installation:\r\n\r\n```python\r\n# import library\r\nfrom distfit import distfit\r\n\r\ndfit = distfit()        # initialize \r\ndfit.fit_transform(x)   # fit distributions on empirical data x\r\ndfit.predict(y)         # predict the probability of the resonse variables\r\ndfit.plot()             # plot the best fitted distribution (y is included if prediction is made)\r\n```\r\n\r\n<hr>\r\n\r\n### examples\r\n\r\n# \r\n\r\n##### [example: quick start to find best fit for your input data](https://erdogant.github.io/distfit/pages/html/examples.html#)\r\n\r\n```python\r\n\r\n# [distfit] >info> fit\r\n# [distfit] >info> transform\r\n# [distfit] >info> [norm      ] [0.00 sec] [rss: 0.00108326] [loc=-0.048 scale=1.997]\r\n# [distfit] >info> [expon     ] [0.00 sec] [rss: 0.404237] [loc=-6.897 scale=6.849]\r\n# [distfit] >info> [pareto    ] [0.00 sec] [rss: 0.404237] [loc=-536870918.897 scale=536870912.000]\r\n# [distfit] >info> [dweibull  ] [0.06 sec] [rss: 0.0115552] [loc=-0.031 scale=1.722]\r\n# [distfit] >info> [t         ] [0.59 sec] [rss: 0.00108349] [loc=-0.048 scale=1.997]\r\n# [distfit] >info> [genextreme] [0.17 sec] [rss: 0.00300806] [loc=-0.806 scale=1.979]\r\n# [distfit] >info> [gamma     ] [0.05 sec] [rss: 0.00108459] [loc=-1862.903 scale=0.002]\r\n# [distfit] >info> [lognorm   ] [0.32 sec] [rss: 0.00121597] [loc=-110.597 scale=110.530]\r\n# [distfit] >info> [beta      ] [0.10 sec] [rss: 0.00105629] [loc=-16.364 scale=32.869]\r\n# [distfit] >info> [uniform   ] [0.00 sec] [rss: 0.287339] [loc=-6.897 scale=14.437]\r\n# [distfit] >info> [loggamma  ] [0.12 sec] [rss: 0.00109042] [loc=-370.746 scale=55.722]\r\n# [distfit] >info> compute confidence intervals [parametric]\r\n# [distfit] >info> compute significance for 9 samples.\r\n# [distfit] >info> multiple test correction method applied: [fdr_bh].\r\n# [distfit] >info> create pdf plot for the parametric method.\r\n# [distfit] >info> mark 5 significant regions\r\n# [distfit] >info> estimated distribution: beta [loc:-16.364265, scale:32.868811]\r\n```\r\n\r\n<p align=\"left\">\r\n  <a href=\"https://erdogant.github.io/distfit/pages/html/examples.html#make-predictions\">\r\n  <img src=\"https://github.com/erdogant/distfit/blob/master/docs/figs/example_figp4c.png\" width=\"450\" />\r\n  </a>\r\n</p>\r\n\r\n\r\n# \r\n\r\n##### [example: plot summary of the tested distributions](https://erdogant.github.io/distfit/pages/html/examples.html#plot-rss)\r\n\r\nafter we have a fitted model, we can make some predictions using the theoretical distributions. \r\nafter making some predictions, we can plot again but now the predictions are automatically included.\r\n\r\n<p align=\"left\">\r\n  <a href=\"https://erdogant.github.io/distfit/pages/html/examples.html#plot-rss\">\r\n  <img src=\"https://github.com/erdogant/distfit/blob/master/docs/figs/fig1_summary.png\" width=\"450\" />\r\n  </a>\r\n</p>\r\n\r\n# \r\n\r\n##### [example: make predictions using the fitted distribution](https://erdogant.github.io/distfit/pages/html/examples.html#make-predictions)\r\n\r\n\r\n<p align=\"left\">\r\n  <a href=\"https://erdogant.github.io/distfit/pages/html/examples.html#make-predictions\">\r\n  <img src=\"https://github.com/erdogant/distfit/blob/master/docs/figs/example_figp1a.png\" width=\"450\" />\r\n  </a>\r\n</p>\r\n\r\n\r\n\r\n# \r\n\r\n##### [example: test for one specific distributions](https://erdogant.github.io/distfit/pages/html/examples.html#fit-for-one-specific-distribution)\r\n\r\nthe full list of distributions is listed here: https://erdogant.github.io/distfit/pages/html/parametric.html\r\n\r\n<p align=\"left\">\r\n  <a href=\"https://erdogant.github.io/distfit/pages/html/examples.html#fit-for-one-specific-distribution\">\r\n  <img src=\"https://github.com/erdogant/distfit/blob/master/docs/figs/example_figp3b.png\" width=\"450\" />\r\n  </a>\r\n</p>\r\n\r\n\r\n# \r\n\r\n##### [example: test for multiple distributions](https://erdogant.github.io/distfit/pages/html/examples.html#fit-for-multiple-distributions)\r\n\r\nthe full list of distributions is listed here: https://erdogant.github.io/distfit/pages/html/parametric.html\r\n\r\n<p align=\"left\">\r\n  <a href=\"https://erdogant.github.io/distfit/pages/html/examples.html#fit-for-multiple-distributions\">\r\n  <img src=\"https://github.com/erdogant/distfit/blob/master/docs/figs/example_figp2b.png\" width=\"450\" />\r\n  </a>\r\n</p>\r\n\r\n\r\n# \r\n\r\n\r\n##### [example: fit discrete distribution](https://erdogant.github.io/distfit/pages/html/discrete.html)\r\n\r\n\r\n```python\r\nfrom scipy.stats import binom\r\n# generate random numbers\r\n\r\n# set parameters for the test-case\r\nn = 8\r\np = 0.5\r\n\r\n# generate 10000 samples of the distribution of (n, p)\r\nx = binom(n, p).rvs(10000)\r\nprint(x)\r\n\r\n# [5 1 4 5 5 6 2 4 6 5 4 4 4 7 3 4 4 2 3 3 4 4 5 1 3 2 7 4 5 2 3 4 3 3 2 3 5\r\n#  4 6 7 6 2 4 3 3 5 3 5 3 4 4 4 7 5 4 5 3 4 3 3 4 3 3 6 3 3 5 4 4 2 3 2 5 7\r\n#  5 4 8 3 4 3 5 4 3 5 5 2 5 6 7 4 5 5 5 4 4 3 4 5 6 2...]\r\n\r\n# import distfit\r\nfrom distfit import distfit\r\n\r\n# initialize for discrete distribution fitting\r\ndfit = distfit(method='discrete')\r\n\r\n# run distfit to and determine whether we can find the parameters from the data.\r\ndfit.fit_transform(x)\r\n\r\n# [distfit] >fit..\r\n# [distfit] >transform..\r\n# [distfit] >fit using binomial distribution..\r\n# [distfit] >[binomial] [sse: 7.79] [n: 8] [p: 0.499959] [chi^2: 1.11]\r\n# [distfit] >compute confidence interval [discrete]\r\n\r\n```\r\n<p align=\"left\">\r\n  <a href=\"https://erdogant.github.io/distfit/pages/html/discrete.html\">\r\n  <img src=\"https://github.com/erdogant/distfit/blob/master/docs/figs/binomial_plot.png\" width=\"450\" />\r\n  </a>\r\n</p>\r\n\r\n# \r\n\r\n##### [example: make predictions on unseen data for discrete distribution](https://erdogant.github.io/distfit/pages/html/discrete.html#make-predictions)\r\n\r\n\r\n<p align=\"left\">\r\n  <a href=\"https://erdogant.github.io/distfit/pages/html/discrete.html#make-predictions\">\r\n  <img src=\"https://github.com/erdogant/distfit/blob/master/docs/figs/binomial_plot_predict.png\" width=\"450\" />\r\n  </a>\r\n</p>\r\n\r\n\r\n# \r\n\r\n\r\n##### [example: generate samples based on the fitted distribution](https://erdogant.github.io/distfit/pages/html/generate.html)\r\n\r\n<hr>\r\n\r\n### contributors\r\nsetting up and maintaining distfit has been possible thanks to users and contributors. thanks:\r\n\r\n<p align=\"left\">\r\n  <a href=\"https://github.com/erdogant/distfit/graphs/contributors\">\r\n  <img src=\"https://contrib.rocks/image?repo=erdogant/distfit\" />\r\n  </a>\r\n</p>\r\n\r\n\r\n### citation\r\nplease cite ``distfit`` in your publications if this is useful for your research. see column right for citation information.\r\n\r\n### maintainer\r\n* erdogan taskesen, github: [erdogant](https://github.com/erdogant)\r\n* contributions are welcome.\r\n* if you wish to buy me a <a href=\"https://erdogant.github.io/donate/?currency=usd&amount=5\">coffee</a> for this work, it is very appreciated :)\r\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "distfit",
  "package_url": "https://pypi.org/project/distfit/",
  "project_url": "https://pypi.org/project/distfit/",
  "project_urls": {
    "Download": "https://github.com/erdogant/distfit/archive/1.7.3.tar.gz",
    "Homepage": "https://erdogant.github.io/distfit"
  },
  "release_url": "https://pypi.org/project/distfit/1.7.3/",
  "requires_dist": [
    "packaging",
    "matplotlib >=3.5.2",
    "numpy",
    "pandas",
    "statsmodels",
    "scipy",
    "pypickle",
    "colourmap >=1.1.10",
    "joblib"
  ],
  "requires_python": ">=3",
  "summary": "distfit is a python library for probability density fitting.",
  "version": "1.7.3",
  "releases": [],
  "developers": [
    "erdogan_taskesen",
    "erdogant@gmail.com"
  ],
  "kwds": "pypi sphinx pyversions png example_figp4c",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_distfit",
  "homepage": "https://erdogant.github.io/distfit",
  "release_count": 47,
  "dependency_ids": [
    "pypi_colourmap",
    "pypi_joblib",
    "pypi_matplotlib",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_pypickle",
    "pypi_scipy",
    "pypi_statsmodels"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "topic :: database",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "![neomodel](https://raw.githubusercontent.com/neo4j-contrib/neomodel/master/doc/source/_static/neomodel-300.png)\n\nan object graph mapper (ogm) for the [neo4j](https://neo4j.com/) graph\ndatabase, built on the awesome\n[neo4j_driver](https://github.com/neo4j/neo4j-python-driver)\n\nif you need assistance with neomodel, please create an issue on the\ngithub repo found at <https://github.com/neo4j-contrib/neomodel/>.\n\n-   familiar class based model definitions with proper inheritance.\n-   powerful query api.\n-   schema enforcement through cardinality restrictions.\n-   full transaction support.\n-   thread safe.\n-   pre/post save/delete hooks.\n-   django integration via\n    [django_neomodel](https://github.com/neo4j-contrib/django-neomodel)\n\n[![reliability rating](https://sonarcloud.io/api/project_badges/measure?project=neo4j-contrib_neomodel&metric=reliability_rating)](https://sonarcloud.io/summary/new_code?id=neo4j-contrib_neomodel)\n[![security rating](https://sonarcloud.io/api/project_badges/measure?project=neo4j-contrib_neomodel&metric=security_rating)](https://sonarcloud.io/summary/new_code?id=neo4j-contrib_neomodel)\n[![documentation status](https://readthedocs.org/projects/neomodel/badge/?version=latest)](https://neomodel.readthedocs.io/en/latest/?badge=latest)\n\n# requirements\n\n**for neomodel releases 5.x :**\n\n-   python 3.7+\n-   neo4j 5.x, 4.4 (lts)\n\n**for neomodel releases 4.x :**\n\n-   python 3.7 -\\> 3.10\n-   neo4j 4.x (including 4.4 lts for neomodel version 4.0.10)\n\n# documentation\n\n(needs an update, but) available on\n[readthedocs](http://neomodel.readthedocs.org).\n\n# upcoming breaking changes notice - \\>=5.3\n\nbased on python version [status](https://devguide.python.org/versions/),\nneomodel will be dropping support for python 3.7 in the next release\n(5.3). this does not mean neomodel will stop working on python 3.7, but\nit will no longer be tested against it. instead, we will try to add\nsupport for python 3.12.\n\nanother potential breaking change coming up is adding async support to\nneomodel. but we do not know when this will happen yet, or if it will\nactually be a breaking change. we will definitely push this in a major\nrelease though. more to come on that later.\n\nfinally, we are looking at refactoring some standalone methods into the\ndatabase() class. more to come on that later.\n\n# installation\n\ninstall from pypi (recommended):\n\n    $ pip install neomodel ($ source dev # to install all things needed in a python3 venv)\n\n    # neomodel has some optional dependencies (including shapely), to install these use:\n\n    $ pip install neomodel['extras']\n\nto install from github:\n\n    $ pip install git+git://github.com/neo4j-contrib/neomodel.git@head#egg=neomodel-dev\n\n# contributing\n\nideas, bugs, tests and pull requests always welcome. please use\ngithub\\'s issues page to track these.\n\nif you are interested in developing `neomodel` further, pick a subject\nfrom the issues page and open a pull request (pr) for it. if you are\nadding a feature that is not captured in that list yet, consider if the\nwork for it could also contribute towards delivering any of the existing\nissues too.\n\n## running the test suite\n\nmake sure you have a neo4j database version 4 or higher to run the tests\non.:\n\n    $ export neo4j_bolt_url=bolt://<username>:<password>@localhost:7687 # check your username and password\n\nensure `dbms.security.auth_enabled=true` in your database configuration\nfile. setup a virtual environment, install neomodel for development and\nrun the test suite: :\n\n    $ pip install -e '.[dev,pandas,numpy]'\n    $ pytest\n\nthe tests in \\\"test_connection.py\\\" will fail locally if you don\\'t\nspecify the following environment variables:\n\n    $ export aura_test_db_user=username\n    $ export aura_test_db_password=password\n    $ export aura_test_db_hostname=url\n\nif you are running a neo4j database for the first time the test suite\nwill set the password to \\'test\\'. if the database is already populated,\nthe test suite will abort with an error message and ask you to re-run it\nwith the `--resetdb` switch. this is a safeguard to ensure that the test\nsuite does not accidentally wipe out a database if you happen to not\nhave restarted your neo4j server to point to a (usually named)\n`debug.db` database.\n\nif you have `docker-compose` installed, you can run the test suite\nagainst all supported python interpreters and neo4j versions: :\n\n    # in the project's root folder:\n    $ sh ./tests-with-docker-compose.sh\n",
  "docs_url": null,
  "keywords": "graph,neo4j,orm,ogm,mapper",
  "license": "mit",
  "name": "neomodel",
  "package_url": "https://pypi.org/project/neomodel/",
  "project_url": "https://pypi.org/project/neomodel/",
  "project_urls": {
    "changelog": "https://github.com/neo4j-contrib/neomodel/releases",
    "documentation": "https://neomodel.readthedocs.io/en/latest/",
    "repository": "http://github.com/neo4j-contrib/neomodel"
  },
  "release_url": "https://pypi.org/project/neomodel/5.2.1/",
  "requires_dist": [
    "neo4j ~=5.15.0",
    "pytest >=7.1 ; extra == 'dev'",
    "pytest-cov >=4.0 ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "black ; extra == 'dev'",
    "isort ; extra == 'dev'",
    "Shapely >=2.0.0 ; extra == 'dev'",
    "numpy ; extra == 'numpy'",
    "pandas ; extra == 'pandas'"
  ],
  "requires_python": ">=3.7",
  "summary": "an object mapper for the neo4j graph database.",
  "version": "5.2.1",
  "releases": [],
  "developers": [
    "athanastasiou@gmail.com",
    "cristina_escalante",
    "marius.conjeaud@outlook.com",
    "robin.ge@gmail.com"
  ],
  "kwds": "django_neomodel neo4j_driver neo4j contrib_neomodel neo4j_bolt_url",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_neomodel",
  "homepage": "",
  "release_count": 52,
  "dependency_ids": [
    "pypi_black",
    "pypi_isort",
    "pypi_neo4j",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_shapely"
  ]
}
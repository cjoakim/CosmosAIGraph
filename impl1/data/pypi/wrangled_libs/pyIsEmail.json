{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: pypy",
    "topic :: communications :: email",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "pyisemail\n=========\n\n|pypi| |ci| |coveralls| |downloads|\n\ngetting started\n---------------\n\npyisemail is a no-nonsense approach for checking whether that\nuser-supplied email address could be real. sick of not being able to use\n`email address tagging`_ to sort through your `bacn`_? we can fix that.\n\nregular expressions are cheap to write, but often require maintenance when\nnew top-level domains come out or don't conform to email addressing\nfeatures that come back into vogue. pyisemail allows you to validate an\nemail address -- and even check the domain, if you wish -- with one simple\ncall, making your code more readable and faster to write. when you want to\nknow why an email address doesn't validate, we even provide you with\na diagnosis.\n\n.. _email address tagging: http://en.wikipedia.org/wiki/email_address#address_tags\n.. _bacn: http://en.wikipedia.org/wiki/bacn\n\ninstall\n-------\n\ninstall from pypi using `pip`_, a package manager for python.\n\n.. code-block:: bash\n\n    $ pip install pyisemail\n\ndon't have pip installed? try installing it by running this from the\ncommand line:\n\n.. code-block:: bash\n\n    $ curl https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python\n\nor you can `download the source code (zip)`_ for ``pyisemail`` and then\nrun:\n\n.. code-block:: bash\n\n    $ python setup.py install\n\nyou may need to run the above commands with ``sudo``.\n\n.. _pip: http://www.pip-installer.org/en/latest/\n.. _download the source code (zip): https://github.com/michaelherold/pyisemail/zipball/master\n\nusage\n-----\n\nfor the simplest usage, import and use the ``is_email`` function:\n\n.. code-block:: python\n\n    from pyisemail import is_email\n\n    address = \"test@example.com\"\n    bool_result = is_email(address)\n    detailed_result = is_email(address, diagnose=true)\n\nyou can also check whether the domain used in the email is a valid domain\nand whether or not it has a valid mx record:\n\n.. code-block:: python\n\n    from pyisemail import is_email\n\n    address = \"test@example.com\"\n    bool_result_with_dns = is_email(address, check_dns=true)\n    detailed_result_with_dns = is_email(address, check_dns=true, diagnose=true)\n\nthese are primary indicators of whether an email address can even be\nissued at that domain. however, a valid response here *is not a guarantee\nthat the email exists*, merely that is *can* exist.\n\nif you want to limit using a `gtld`_ as the domain part of the email\naddress, you can do so with a flag:\n\n.. code-block:: python\n\n    from pyisemail import is_email\n\n    address = \"thiswont@workatall\"\n    bool_result_with_check = is_email(address, allow_gtld=false)\n    detailed_result_with_check = is_email(address, allow_gtld=false, diagnose=true)\n\nin addition to the base ``is_email`` functionality, you can also use the\nvalidators by themselves. check the validator source doe to see how this\nworks.\n\n.. _gtld: https://en.wikipedia.org/wiki/generic_top-level_domain\n\nuninstall\n---------\n\nwant to get rid of pyisemail? did you install with pip? here you go:\n\n.. code-block:: bash\n\n    $ pip uninstall pyisemail\n\nacknowledgements\n----------------\n\nthe base ``parservalidator`` is based off of `dominic sayers`_' `is_email\nscript`_. i wanted the functionality in python, so i ported it from the\noriginal php.\n\n.. _dominic sayers: https://github.com/dominicsayers\n.. _is_email script: https://github.com/dominicsayers/isemail\n\ncontributing\n------------\n\nso you're interested in contributing to pyisemail? check out our `contributing guidelines <./contributing.rst>`__ for more information on how to do that.\n\nversioning\n----------\n\nthis library aims to adhere to `semantic versioning 2.0.0`_. violations of\nthis scheme should be reported as bugs.\n\n.. _semantic versioning 2.0.0: http://semver.org/\n\ncopyright\n---------\n\ncopyright (c) 2015 michael herold. open sourced under the terms of the\n`mit license`_.\n\n.. _mit license: http://opensource.org/licenses/mit\n\n\n.. |pypi| image:: https://img.shields.io/pypi/v/pyisemail.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/pyisemail\n   :alt: latest version released on pypi\n.. |ci| image:: https://github.com/michaelherold/pyisemail/actions/workflows/ci.yml/badge.svg\n   :target: https://github.com/michaelherold/pyisemail/actions/workflows/ci.yml\n.. |coveralls| image:: https://img.shields.io/coveralls/michaelherold/pyisemail/master.svg?style=flat-square\n   :target: https://coveralls.io/r/michaelherold/pyisemail?branch=master\n   :alt: test coverage\n.. |downloads| image:: https://img.shields.io/pypi/dm/pyisemail.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/pyisemail/\n",
  "docs_url": null,
  "keywords": "email,validation",
  "license": "",
  "name": "pyisemail",
  "package_url": "https://pypi.org/project/pyIsEmail/",
  "project_url": "https://pypi.org/project/pyIsEmail/",
  "project_urls": {
    "Homepage": "https://github.com/michaelherold/pyIsEmail",
    "Source": "https://github.com/michaelherold/pyIsEmail",
    "Tracker": "https://github.com/michaelherold/pyIsEmail/issues"
  },
  "release_url": "https://pypi.org/project/pyIsEmail/2.0.1/",
  "requires_dist": [
    "dnspython>=2.0.0"
  ],
  "requires_python": ">=3.7",
  "summary": "simple, robust email validation",
  "version": "2.0.1",
  "releases": [],
  "developers": [
    "opensource@michaeljherold.com"
  ],
  "kwds": "pyisemail is_email _is_email address_tags validate",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pyisemail",
  "homepage": "",
  "release_count": 11,
  "dependency_ids": [
    "pypi_dnspython"
  ]
}
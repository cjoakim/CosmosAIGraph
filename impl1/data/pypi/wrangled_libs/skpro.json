{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": "<a href=\"https://skpro.readthedocs.io/en/latest\"><img src=\"https://github.com/sktime/skpro/blob/main/docs/source/images/skpro-banner.png\" width=\"500\" align=\"right\" /></a>\n\n:rocket: **version 2.1.1 out now!** [read the release notes here.](https://skpro.readthedocs.io/en/latest/changelog.html).\n\n`skpro` is a library for supervised probabilistic prediction in python.\nit provides `scikit-learn`-like, `scikit-base` compatible interfaces to:\n\n* tabular **supervised regressors for probabilistic prediction** - interval, quantile and distribution predictions\n* **metrics to evaluate probabilistic predictions**, e.g., pinball loss, empirical coverage, crps\n* **reductions** to turn `scikit-learn` regressors into probabilistic `skpro` regressors, such as bootstrap or conformal\n* building **pipelines and composite models**, including tuning via probabilistic performance metrics\n* symbolic **probability distributions** with value domain of `pandas.dataframe`-s and `pandas`-like interface\n\n| overview | |\n|---|---|\n| **open source** |  [![bsd 3-clause](https://img.shields.io/badge/license-bsd%203--clause-blue.svg)](https://github.com/sktime/sktime/blob/main/license) |\n| **tutorials** | [![binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/sktime/skpro/main?filepath=examples) [![!youtube](https://img.shields.io/static/v1?logo=youtube&label=youtube&message=tutorials&color=red)](https://www.youtube.com/playlist?list=plks3uggjlwhqnzu0leoelkvnjvvest2d0) |\n| **community** | [![!discord](https://img.shields.io/static/v1?logo=discord&label=discord&message=chat&color=lightgreen)](https://discord.com/invite/54aczafsn7) [![!slack](https://img.shields.io/static/v1?logo=linkedin&label=linkedin&message=news&color=lightblue)](https://www.linkedin.com/company/scikit-time/) |\n| **ci/cd** | [![github-actions](https://img.shields.io/github/actions/workflow/status/sktime/sktime/wheels.yml?logo=github)](https://github.com/sktime/skpro/actions/workflows/wheels.yml) [![!codecov](https://img.shields.io/codecov/c/github/sktime/skpro?label=codecov&logo=codecov)](https://codecov.io/gh/sktime/skpro) [![readthedocs](https://img.shields.io/readthedocs/skpro?logo=readthedocs)](https://skpro.readthedocs.io/en/latest/) [![platform](https://img.shields.io/conda/pn/conda-forge/skpro)](https://github.com/sktime/skpro) |\n| **code** |  [![!pypi](https://img.shields.io/pypi/v/skpro?color=orange)](https://pypi.org/project/skpro/) [![!conda](https://img.shields.io/conda/vn/conda-forge/skpro)](https://anaconda.org/conda-forge/skpro) [![!python-versions](https://img.shields.io/pypi/pyversions/skpro)](https://www.python.org/) [![!black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) |\n\n\n## :books: documentation\n\n| documentation              |                                                                |\n| -------------------------- | -------------------------------------------------------------- |\n| :star: **[tutorials]**        | new to skpro? here's everything you need to know!              |\n| :clipboard: **[binder notebooks]** | example notebooks to play with in your browser.              |\n| :woman_technologist: **[user guides]**      | how to use skpro and its features.                             |\n| :scissors: **[extension templates]** | how to build your own estimator using skpro's api.            |\n| :control_knobs: **[api reference]**      | the detailed reference for skpro's api.                        |\n| :hammer_and_wrench: **[changelog]**          | changes and version history.                                   |\n| :deciduous_tree: **[roadmap]**          | skpro's software and community development plan.                                   |\n| :pencil: **[related software]**          | a list of related software. |\n\n[tutorials]: https://skpro.readthedocs.io/en/latest/tutorials.html\n[binder notebooks]: https://mybinder.org/v2/gh/sktime/skpro/main?filepath=examples\n[user guides]: https://skpro.readthedocs.io/en/latest/user_guide.html\n[extension templates]: https://github.com/sktime/skpro/tree/main/extension_templates\n[api reference]: https://skpro.readthedocs.io/en/latest/api_reference.html\n[changelog]: https://skpro.readthedocs.io/en/latest/changelog.html\n[roadmap]: https://skpro.readthedocs.io/en/latest/roadmap.html\n[related software]: https://skpro.readthedocs.io/en/latest/related_software.html\n\n\n## :speech_balloon: where to ask questions\n\nquestions and feedback are extremely welcome!\nwe strongly believe in the value of sharing help publicly, as it allows a wider audience to benefit from it.\n\n`skpro` is maintained by the `sktime` community, we use the same social channels.\n\n| type                            | platforms                               |\n| ------------------------------- | --------------------------------------- |\n| :bug: **bug reports**              | [github issue tracker]                  |\n| :sparkles: **feature requests & ideas** | [github issue tracker]                       |\n| :woman_technologist: **usage questions**          | [github discussions] \u00b7 [stack overflow] |\n| :speech_balloon: **general discussion**        | [github discussions] |\n| :factory: **contribution & development** | `dev-chat` channel \u00b7 [discord] |\n| :globe_with_meridians: **community collaboration session** | [discord] - fridays 3 pm utc, dev/meet-ups channel |\n\n[github issue tracker]: https://github.com/sktime/skpro/issues\n[github discussions]: https://github.com/sktime/skpro/discussions\n[stack overflow]: https://stackoverflow.com/questions/tagged/sktime\n[discord]: https://discord.com/invite/54aczafsn7\n\n## :hourglass_flowing_sand: installing `skpro`\n\nto install `skpro`, use `pip`:\n\n```bash\npip install skpro\n```\n\nor, with maximum dependencies,\n\n```bash\npip install skpro[all_extras]\n```\n\nreleases are available as source packages and binary wheels. you can see all available wheels [here](https://pypi.org/simple/skpro/).\n\n## :zap: quickstart\n\n### making probabilistic predictions\n\n``` python\nfrom sklearn.datasets import load_diabetes\nfrom sklearn.ensemble import randomforestregressor\nfrom sklearn.linear_model import linearregression\nfrom sklearn.model_selection import train_test_split\n\nfrom skpro.regression.residual import residualdouble\n\n# step 1: data specification\nx, y = load_diabetes(return_x_y=true, as_frame=true)\nx_train, x_new, y_train, _ = train_test_split(x, y)\n\n# step 2: specifying the regressor - any compatible regressor is valid!\n# example - \"squaring residuals\" regressor\n# random forest for mean prediction\n# linear regression for variance prediction\nreg_mean = randomforestregressor()\nreg_resid = linearregression()\nreg_proba = residualdouble(reg_mean, reg_resid)\n\n# step 3: fitting the model to training data\nreg_proba.fit(x_train, y_train)\n\n# step 4: predicting labels on new data\n\n# probabilistic prediction modes - pick any or multiple\n\n# full distribution prediction\ny_pred_proba = reg_proba.predict_proba(x_new)\n\n# interval prediction\ny_pred_interval = reg_proba.predict_interval(x_new, coverage=0.9)\n\n# quantile prediction\ny_pred_quantiles = reg_proba.predict_quantiles(x_new, alpha=[0.05, 0.5, 0.95])\n\n# variance prediction\ny_pred_var = reg_proba.predict_var(x_new)\n\n# mean prediction is same as \"classical\" sklearn predict, also available\ny_pred_mean = reg_proba.predict(x_new)\n```\n\n### evaluating predictions\n\n``` python\n# step 5: specifying evaluation metric\nfrom skpro.metrics import crps\n\nmetric = crps()  # continuous rank probability score - any skpro metric works!\n\n# step 6: evaluat metric, compare predictions to actuals\nmetric(y_test, y_pred_proba)\n>>> 32.19\n```\n\n## :wave: how to get involved\n\nthere are many ways to get involved with development of `skpro`, which is\ndeveloped by the `sktime` community.\nwe follow the [all-contributors](https://github.com/all-contributors/all-contributors)\nspecification: all kinds of contributions are welcome - not just code.\n\n| documentation              |                                                                |\n| -------------------------- | --------------------------------------------------------------        |\n| :gift_heart: **[contribute]**        | how to contribute to skpro.          |\n| :school_satchel:  **[mentoring]** | new to open source? apply to our mentoring program! |\n| :date: **[meetings]** | join our discussions, tutorials, workshops, and sprints! |\n| :woman_mechanic:  **[developer guides]**      | how to further develop the skpro code base.                             |\n| :medal_sports: **[contributors]** | a list of all contributors. |\n| :raising_hand: **[roles]** | an overview of our core community roles. |\n| :money_with_wings: **[donate]** | fund sktime and skpro maintenance and development. |\n| :classical_building: **[governance]** | how and by whom decisions are made in sktime's community.   |\n\n[contribute]: https://skpro.readthedocs.io/en/latest/get_involved/contributing.html\n[donate]: https://opencollective.com/sktime\n[developer guides]: https://skpro.readthedocs.io/en/latest/developer_guide.html\n[contributors]: https://github.com/sktime/skpro/blob/main/contributors.md\n[governance]: https://www.sktime.net/en/latest/get_involved/governance.html\n[mentoring]: https://github.com/sktime/mentoring\n[meetings]: https://calendar.google.com/calendar/u/0/embed?src=sktime.toolbox@gmail.com&ctz=utc\n[roles]: https://www.sktime.net/en/latest/about/team.html\n\n\n## :wave: citation\n\nto cite `skpro` in a scientific publication, see [citations](citation.rst).\n",
  "docs_url": null,
  "keywords": "data-science,machine-learning,data-mining,time-series,scikit-learn,regression",
  "license": "",
  "name": "skpro",
  "package_url": "https://pypi.org/project/skpro/",
  "project_url": "https://pypi.org/project/skpro/",
  "project_urls": {
    "API Reference": "https://github.com/sktime/skpro",
    "Documentation": "https://github.com/sktime/skpro",
    "Download": "https://pypi.org/project/skpro/#files",
    "Homepage": "https://github.com/sktime/skpro",
    "Release Notes": "https://github.com/sktime/skpro",
    "Repository": "https://github.com/sktime/skpro"
  },
  "release_url": "https://pypi.org/project/skpro/2.1.1/",
  "requires_dist": [
    "numpy <1.27,>=1.21.0",
    "pandas <2.2.0,>=1.1.0",
    "packaging",
    "scikit-base <0.7.0,>=0.6.1",
    "scikit-learn <1.4.0,>=0.24.0",
    "scipy <2.0.0,>=1.2.0",
    "attrs ; extra == 'all_extras'",
    "distfit ; extra == 'all_extras'",
    "mapie ; extra == 'all_extras'",
    "matplotlib >=3.3.2 ; extra == 'all_extras'",
    "ngboost ; extra == 'all_extras'",
    "statsmodels >=0.12.1 ; extra == 'all_extras'",
    "tabulate ; extra == 'all_extras'",
    "uncertainties ; extra == 'all_extras'",
    "polars <0.20.0 ; (python_version < \"3.12\") and extra == 'all_extras'",
    "pyarrow <14.0.0 ; (python_version < \"3.12\") and extra == 'all_extras'",
    "jupyter ; extra == 'binder'",
    "backoff ; extra == 'dev'",
    "httpx ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "pytest-randomly ; extra == 'dev'",
    "pytest-timeout ; extra == 'dev'",
    "pytest-xdist ; extra == 'dev'",
    "wheel ; extra == 'dev'",
    "jupyter ; extra == 'docs'",
    "myst-parser ; extra == 'docs'",
    "nbsphinx >=0.8.6 ; extra == 'docs'",
    "numpydoc ; extra == 'docs'",
    "pydata-sphinx-theme ; extra == 'docs'",
    "sphinx !=7.2.0,<8.0.0 ; extra == 'docs'",
    "sphinx-design <0.6.0 ; extra == 'docs'",
    "sphinx-issues <4.0.0 ; extra == 'docs'",
    "sphinx-gallery <0.15.0 ; extra == 'docs'",
    "sphinx-panels ; extra == 'docs'",
    "tabulate ; extra == 'docs'"
  ],
  "requires_python": "<3.13,>=3.8",
  "summary": "a unified framework for probability distributions and probabilistic supervised regression",
  "version": "2.1.1",
  "releases": [],
  "developers": [
    "sktime.toolbox@gmail.com"
  ],
  "kwds": "skpro sklearn scikit python sktime",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_skpro",
  "homepage": "",
  "release_count": 6,
  "dependency_ids": [
    "pypi_attrs",
    "pypi_backoff",
    "pypi_distfit",
    "pypi_httpx",
    "pypi_jupyter",
    "pypi_mapie",
    "pypi_matplotlib",
    "pypi_myst_parser",
    "pypi_nbsphinx",
    "pypi_ngboost",
    "pypi_numpy",
    "pypi_numpydoc",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_polars",
    "pypi_pre_commit",
    "pypi_pyarrow",
    "pypi_pydata_sphinx_theme",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_randomly",
    "pypi_pytest_timeout",
    "pypi_pytest_xdist",
    "pypi_scikit_base",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_sphinx",
    "pypi_sphinx_design",
    "pypi_sphinx_gallery",
    "pypi_sphinx_issues",
    "pypi_sphinx_panels",
    "pypi_statsmodels",
    "pypi_tabulate",
    "pypi_uncertainties",
    "pypi_wheel"
  ]
}
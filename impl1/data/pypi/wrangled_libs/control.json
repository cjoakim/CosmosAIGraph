{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": ".. image:: https://anaconda.org/conda-forge/control/badges/version.svg\n   :target: https://anaconda.org/conda-forge/control\n\n.. image:: https://img.shields.io/pypi/v/control.svg\n \u00a0 :target: https://pypi.org/project/control/\n\n.. image:: https://github.com/python-control/python-control/actions/workflows/python-package-conda.yml/badge.svg\n   :target: https://github.com/python-control/python-control/actions/workflows/python-package-conda.yml\n\n.. image:: https://github.com/python-control/python-control/actions/workflows/install_examples.yml/badge.svg\n   :target: https://github.com/python-control/python-control/actions/workflows/install_examples.yml\n\n.. image:: https://github.com/python-control/python-control/actions/workflows/control-slycot-src.yml/badge.svg\n   :target: https://github.com/python-control/python-control/actions/workflows/control-slycot-src.yml\n\n.. image:: https://coveralls.io/repos/python-control/python-control/badge.svg\n   :target: https://coveralls.io/r/python-control/python-control\n\npython control systems library\n==============================\n\nthe python control systems library is a python module that implements basic\noperations for analysis and design of feedback control systems.\n\nhave a go now!\n--------------\ntry out the examples in the examples folder using the binder service.\n\n.. image:: https://mybinder.org/badge_logo.svg\n :target: https://mybinder.org/v2/gh/python-control/python-control/head\n\nthe package can also be installed on google colab using the commands::\n\n  !pip install control\n  import control as ct\n\nfeatures\n--------\n\n- linear input/output systems in state-space and frequency domain\n- block diagram algebra: serial, parallel, feedback, and other interconnections\n- time response: initial, step, impulse\n- frequency response: bode, nyquist, and nichols plots\n- control analysis: stability, reachability, observability, stability margins, root locus\n- control design: eigenvalue placement, linear quadratic regulator, sisotool, hinfsyn, rootlocus_pid_designer\n- estimator design: linear quadratic estimator (kalman filter)\n- nonlinear systems: optimization-based control, describing functions, differential flatness\n\nlinks\n-----\n\n- project home page: http://python-control.org\n- source code repository: https://github.com/python-control/python-control\n- documentation: http://python-control.readthedocs.org/\n- issue tracker: https://github.com/python-control/python-control/issues\n- mailing list: http://sourceforge.net/p/python-control/mailman/\n\ndependencies\n------------\n\nthe package requires numpy, scipy, and matplotlib.  in addition, some routines\nuse a module called slycot, that is a python wrapper around some fortran\nroutines.  many parts of python-control will work without slycot, but some\nfunctionality is limited or absent, and installation of slycot is recommended\n(see below). the slycot wrapper can be found at:\n\nhttps://github.com/python-control/slycot\n\n\ninstallation\n============\n\nconda and conda-forge\n---------------------\n\nthe easiest way to get started with the control systems library is\nusing `conda <https://conda.io>`_.\n\nthe control systems library has packages available using the `conda-forge\n<https://conda-forge.org>`_ conda channel, and as of slycot version\n0.3.4, binaries for that package are available for 64-bit windows,\nosx, and linux.\n\nto install both the control systems library and slycot in an existing\nconda environment, run::\n\n  conda install -c conda-forge control slycot\n\nmixing packages from conda-forge and the default conda channel can\nsometimes cause problems with dependencies, so it is usually best to\ninstally numpy, scipy, and matplotlib from conda-forge as well.\n\npip\n---\n\nto install using pip::\n\n  pip install slycot   # optional; see below\n  pip install control\n\nif you install slycot using pip you'll need a development environment\n(e.g., python development files, c and fortran compilers).  pip\ninstallation can be particularly complicated for windows.\n\ninstalling from source\n----------------------\n\nto install from source, get the source code of the desired branch or release\nfrom the github repository or archive, unpack, and run from within the\ntoplevel `python-control` directory::\n\n  pip install .\n  \narticle and citation information\n================================\n\nan `article <https://ieeexplore.ieee.org/abstract/document/9683368>`_ about\nthe library is available on ieee explore. if the python control systems library helped you in your research, please cite::\n\n  @inproceedings{python-control2021,\n    title={the python control systems library (python-control)},\n    author={fuller, sawyer and greiner, ben and moore, jason and\n            murray, richard and van paassen, ren{\\'e} and yorke, rory},\n    booktitle={60th ieee conference on decision and control (cdc)},\n    pages={4875--4881},\n    year={2021},\n    organization={ieee}\n  }\n\nor the github site: https://github.com/python-control/python-control\n\n\ndevelopment\n===========\n\ncode\n----\n\nyou can check out the latest version of the source code with the command::\n\n  git clone https://github.com/python-control/python-control.git\n\ntesting\n-------\n\nyou can run the unit tests with `pytest`_ to make sure that everything is\nworking correctly.  inside the source directory, run::\n\n  pytest -v\n\nor to test the installed package::\n\n  pytest --pyargs control -v\n\n.. _pytest: https://docs.pytest.org/\n\nlicense\n-------\n\nthis is free software released under the terms of `the bsd 3-clause\nlicense <http://opensource.org/licenses/bsd-3-clause>`_.  there is no\nwarranty; not even for merchantability or fitness for a particular\npurpose.  consult license for copying conditions.\n\nwhen code is modified or re-distributed, the license file should\naccompany the code or any subset of it, however small.  as an\nalternative, the license text can be copied within files, if so\ndesired.\n\ncontributing\n------------\n\nyour contributions are welcome!  simply fork the github repository and send a\n`pull request`_.\n\n.. _pull request: https://github.com/python-control/python-control/pulls\n\nplease see the `developer's wiki`_ for detailed instructions.\n\n.. _developer's wiki: https://github.com/python-control/python-control/wiki\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd-3-clause",
  "name": "control",
  "package_url": "https://pypi.org/project/control/",
  "project_url": "https://pypi.org/project/control/",
  "project_urls": {
    "homepage": "https://python-control.org",
    "source": "https://github.com/python-control/python-control"
  },
  "release_url": "https://pypi.org/project/control/0.9.4/",
  "requires_dist": [
    "numpy",
    "scipy (>=1.3)",
    "matplotlib",
    "cvxopt (>=1.2.0) ; extra == 'cvxopt'",
    "slycot (>=0.4.0) ; extra == 'slycot'",
    "pytest ; extra == 'test'",
    "pytest-timeout ; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "python control systems library",
  "version": "0.9.4",
  "releases": [],
  "developers": [
    "python-control-developers@lists.sourceforge.net"
  ],
  "kwds": "install_examples badge_logo conda yml pip",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_control",
  "homepage": "",
  "release_count": 18,
  "dependency_ids": [
    "pypi_cvxopt",
    "pypi_matplotlib",
    "pypi_numpy",
    "pypi_pytest",
    "pypi_pytest_timeout",
    "pypi_scipy",
    "pypi_slycot"
  ]
}
{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# pytapo\n\npython library for communication with tapo cameras\n\n## install:\n\n```\npython3 -m pip install pytapo\n```\n\n## usage examples:\n\n### initiate library:\n\n```\nfrom pytapo import tapo\n\nuser = \"\" # user you set in advanced settings -> camera account\npassword = \"\" # password you set in advanced settings -> camera account\nhost = \"\" # ip of the camera, example: 192.168.1.52\n\ntapo = tapo(host, user, password)\n\nprint(tapo.getbasicinfo())\n```\n\n## authentication\n\ndepending on your camera model and firmware version, the authentication method varies.\n\nnormally you should be able to authenticate using the \"camera account\" created via the tapo app (settings > advanced settings > camera account).\n\nin case of a similar stack trace:\n\n```\ntraceback (most recent call last):\n  file \"/home/user/projects/pytapo/pytapo/__init__.py\", line 41, in __init__\n    self.basicinfo = self.getbasicinfo()\n  file \"/home/user/projects/pytapo/pytapo/__init__.py\", line 232, in getbasicinfo\n    return self.performrequest(\n  file \"/home/user/projects/pytapo/pytapo/__init__.py\", line 95, in performrequest\n    self.ensureauthenticated()\n  file \"/home/user/projects/pytapo/pytapo/__init__.py\", line 61, in ensureauthenticated\n    return self.refreshstok()\n  file \"/home/user/projects/pytapo/pytapo/__init__.py\", line 80, in refreshstok\n    raise exception(\"invalid authentication data\")\nexception: invalid authentication data\n```\n\nattempt to authenticate using `admin` as `user` and your tp-link cloud account password as `password`.\n\n## downloading recordings\n\nintegration supports downloading recordings saved on camera's sd card.\n\nsee [example script](https://github.com/jurajnyiri/pytapo/blob/main/experiments/downloadrecordings.py).\nyou need to call it with following env values:\n\n- `host`: ip address of your camera\n- `password_cloud`: tapo cloud account password, it is required to access the recordings, everything is still local\n- `output`: directory where you wish to save all the recordings\n- `date`: date for which to download recordings in format of yyyymmdd, for example 20230221.\n\nyou also need to have ffmpeg installed as that is used for converting the streams to watchable file.\n\n## contributions:\n\ncontributions to pytapo are welcomed.\n\nby creating a pr you acknowledge and agree that you are not breaking any tos, law and/or have a permission to provide and share the code changes.\n\nowner of this repository is not legally responsible for any prs or code changes to this project created by 3rd parties.\n\nwhen you make a new change to the code base, make sure to have 100% unit test coverage, see below for more information about tests.\n\n### test instructions\n\nset the following environment variables:\n\n`pytapo_user` - user you set in advanced settings -> camera account\n\n`pytapo_password` - password you set in advanced settings -> camera account\n\n`pytapo_ip` - ip of the camera, example: 192.168.1.52\n\ninstall `pre-commit` and `tox` from pip.\n\nrun `pre-commit install` and `pre-commit install -t pre-push`.\n\nthen run `tox` to run all the tests.\n\nlinters are ran on every commit.\n\ntests are ran on push.\n\nyour camera may do all the actions supported by this library, including, but not limited to, move, change privacy mode and reboot while tests are running. camera does not format sd card during tests.\n\nafter the tests are done, your camera should be in the initial state.\n\n## thank you\n\n- [dale pavey](https://research.nccgroup.com/2020/07/31/lights-camera-hacked-an-insight-into-the-world-of-popular-ip-cameras/) from ncc group for the initial research on the tapo c200\n- [likaci](https://github.com/likaci) and [his github repository](https://github.com/likaci/mercury-ipc-control) for the research on the mercury camera on which tapo is based\n- [tim zhang](https://github.com/ttimasdf) for additional research for mercury camera on [his github repository](https://github.com/ttimasdf/mercury-ipc-control)\n- [g\u00e1bor szabados](https://github.com/gszabados) for doing research and gathering all the information above in [home assistant community forum](https://community.home-assistant.io/t/use-pan-tilt-function-for-tp-link-tapo-c200-from-home-assistant/170143/18)\n- [davide depau](https://github.com/depau) for additional [research](https://md.depau.eu/s/r1ys_owop) of the cameras and work on pytapo library\n- [alex x](https://github.com/alexxit) for his incredible work on go2rtc library, and its code for tapo stream communication which was rewritten to python in order to implement stream-related features of this library\n\n# disclaimer\n\npytapo is an unofficial module for achieving interoperability with tapo cameras.\n\nauthor is in no way affiliated with tp-link or tapo.\n\nall the api requests used within the library are available and published on the internet (examples linked above) and this module is purely just a wrapper around those https requests.\n\nauthor does not guarantee functionality of this library and is not responsible for any damage.\n\nall product names, trademarks and registered trademarks in this repository, are property of their respective owners.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pytapo",
  "package_url": "https://pypi.org/project/pytapo/",
  "project_url": "https://pypi.org/project/pytapo/",
  "project_urls": {
    "Homepage": "https://github.com/JurajNyiri/pytapo"
  },
  "release_url": "https://pypi.org/project/pytapo/3.3.18/",
  "requires_dist": [
    "requests",
    "urllib3",
    "pycryptodome",
    "rtp"
  ],
  "requires_python": "",
  "summary": "python library for communication with tapo cameras",
  "version": "3.3.18",
  "releases": [],
  "developers": [
    "juraj.nyiri@gmail.com"
  ],
  "kwds": "pytapo_ip pytapo_password pytapo_user tapo pytapo",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytapo",
  "homepage": "https://github.com/jurajnyiri/pytapo",
  "release_count": 99,
  "dependency_ids": [
    "pypi_pycryptodome",
    "pypi_requests",
    "pypi_rtp",
    "pypi_urllib3"
  ]
}
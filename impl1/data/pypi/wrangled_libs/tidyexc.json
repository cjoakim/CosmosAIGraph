{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 3"
  ],
  "description": "*******\ntidyexc\n*******\n\n.. image:: https://img.shields.io/pypi/v/tidyexc.svg\n   :alt: last release\n   :target: https://pypi.python.org/pypi/tidyexc\n\n.. image:: https://img.shields.io/pypi/pyversions/tidyexc.svg\n   :alt: python version\n   :target: https://pypi.python.org/pypi/tidyexc\n\n.. image:: https://img.shields.io/readthedocs/tidyexc.svg\n   :alt: documentation\n   :target: https://tidyexc.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://img.shields.io/github/workflow/status/kalekundert/tidyexc/test%20and%20release/master\n   :alt: test status\n   :target: https://github.com/kalekundert/tidyexc/actions\n\n.. image:: https://img.shields.io/coveralls/kalekundert/tidyexc.svg\n   :alt: test coverage\n   :target: https://coveralls.io/github/kalekundert/tidyexc?branch=master\n\n.. image:: https://img.shields.io/github/last-commit/kalekundert/tidyexc?logo=github\n   :alt: last commit\n   :target: https://github.com/kalekundert/tidyexc\n\ntidyexc provides an exception base class that makes it easy to raise rich, \nhelpful exceptions:\n\n- *rich*: instead of simply storing an error message, tidyexc exceptions \n  separately store parameters and message templates.  this separation makes it \n  easier for exception handling code to access information describing the error \n  and to respond accordingly.\n\n- *helpful*: tidyexc is inspired by the error message conventions promoted by \n  the `tidyverse style guide`__.  briefly, these conventions state that an \n  error message should consist of a brief statement of the problem, followed by \n  a bullet-point list of relevant contextual information.  the bullet-point \n  format makes it easy to include lots of detail, without the detail becoming \n  overwhelming.\n\n__ https://style.tidyverse.org/error-messages.html\n\nthe following example shows tidyexc in action::\n\n  >>> from tidyexc import error\n  >>> class cheeseshoperror(error):\n  ...     pass\n  ...\n  >>> err = cheeseshoperror(\n  ...         product_name=\"red leicester\",\n  ...         num_requested=1,\n  ...         num_available=0,\n  ... )\n  >>> err.brief = \"insufficient inventory to process request\"\n  >>> err.info += \"{num_requested} {product_name} requested\"\n  >>> err.blame += \"{num_available} available\"\n  >>> raise err\n  traceback (most recent call last):\n    ...\n  cheeseshoperror: insufficient inventory to process request\n  \u2022 1 red leicester requested\n  \u2716 0 available\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "tidyexc",
  "package_url": "https://pypi.org/project/tidyexc/",
  "project_url": "https://pypi.org/project/tidyexc/",
  "project_urls": {
    "Bug Tracker": "https://github.com/kalekundert/tidyexc/issues",
    "Continuous Integration": "https://github.com/kalekundert/tidyexc/actions",
    "Documentation": "https://tidyexc.readthedocs.io/en/latest/",
    "Homepage": "https://github.com/kalekundert/tidyexc",
    "Test Coverage": "https://coveralls.io/github/kalekundert/tidyexc",
    "Version Control": "https://github.com/kalekundert/tidyexc"
  },
  "release_url": "https://pypi.org/project/tidyexc/0.10.0/",
  "requires_dist": [
    "sphinx ; extra == \"doc\"",
    "sphinx_rtd_theme ; extra == \"doc\"",
    "autoclasstoc ; extra == \"doc\"",
    "pytest ; extra == \"test\"",
    "pytest-cov ; extra == \"test\"",
    "coveralls ; extra == \"test\""
  ],
  "requires_python": "~=3.6",
  "summary": "an exception class inspired by the tidyverse style guide.",
  "version": "0.10.0",
  "releases": [],
  "developers": [
    "kale@thekunderts.net",
    "kale_kundert"
  ],
  "kwds": "tidyexc tidyverse shields svg pyversions",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_tidyexc",
  "homepage": "https://github.com/kalekundert/tidyexc",
  "release_count": 11,
  "dependency_ids": [
    "pypi_autoclasstoc",
    "pypi_coveralls",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme"
  ]
}
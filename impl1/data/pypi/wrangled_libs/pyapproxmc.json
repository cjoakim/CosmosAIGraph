{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: c++",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "topic :: utilities"
  ],
  "description": "# pyapproxmc: bindings to the approxmc model counter\n\nthis directory provides python bindings to approxmc on the c++ level,\ni.e. when importing pyapproxmc, the approxmc counter becomes part of the\npython process itself.\n\n\n## installing\n\n```\npip install pyapproxmc\n```\n\n## compiling\nif you don't want to use the pip package, you can compile it:\n\n```\napt-get install python-dev\ncd python\ngit clone https://github.com/msoos/cryptominisat\ngit clone https://github.com/meelgroup/arjun\ncd ..\npython -m build\n\nyou will then find the files under \"dist/\".\n```\n\n## usage\n\n```\nimport pyapproxmc\nc = pyapproxmc.counter()\nc.add_clause([1,2,3])\nc.add_clause([3,20])\ncount = c.count()\nprint(\"approximate count is: %d*2**%d\" % (count[0], count[1]))\n```\n\nthe above will print that `approximate count is: 88*2**13`. since the largest variable in the clauses was 20, the system contained 2**20 (i.e. 1048576) potential models. however, some of these models were prohibited by the two clauses, and so only approximately 88*2**13 (i.e. 720896) models remained.\n\nif you want to count over a projection set, you need to call `count(projection_set)`, for example:\n\n```\nimport pyapproxmc\nc = pyapproxmc.counter()\nc.add_clause([1,2,3])\nc.add_clause([3,20])\ncount = c.count(range(1,10))\nprint(\"approximate count is: %d*2**%d\" % (count[0], count[1]))\n```\n\nthis now prints `approximate count is: 56*2**3`, which corresponds to the approximate count of models, projected over variables 1..10.\n\n## counter object\n\nyou can give the following arguments to `counter`:\n* `seed` -- sets the random seed\n* `verbosity` -- sets the verbosity of the system (default = 0)\n* `epsilon` -- tolerance parameter, i.e. sets how approximate the returned count is. default = 0.8\n* `delta` -- confidence parameter, i.e. sets how probabilistically correct the returned count is. default = 0.20\n\n",
  "docs_url": null,
  "keywords": "sat,model-counting",
  "license": "mit license  copyright (c) 2018 meel group kuldeep meel mate soos daniel freemont and others  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.  the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software. ",
  "name": "pyapproxmc",
  "package_url": "https://pypi.org/project/pyapproxmc/",
  "project_url": "https://pypi.org/project/pyapproxmc/",
  "project_urls": {
    "Homepage": "https://github.com/meelgroup/approxmc"
  },
  "release_url": "https://pypi.org/project/pyapproxmc/4.1.23/",
  "requires_dist": [],
  "requires_python": ">=3.5",
  "summary": "bindings to approxmc, an approximate model counter",
  "version": "4.1.23",
  "releases": [],
  "developers": [
    "soos.mate@gmail.com"
  ],
  "kwds": "pyapproxmc approxmc python pip cryptominisat",
  "license_kwds": "copyright license mit liable noninfringement",
  "libtype": "pypi",
  "id": "pypi_pyapproxmc",
  "homepage": "https://github.com/meelgroup/approxmc",
  "release_count": 22,
  "dependency_ids": []
}
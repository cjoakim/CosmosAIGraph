{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: science/research",
    "intended audience :: system administrators",
    "license :: osi approved :: bsd license",
    "programming language :: python",
    "programming language :: python :: 3"
  ],
  "description": "# bookstore :books:\n\n[![documentation status](https://readthedocs.org/projects/bookstore/badge/?version=latest)](https://bookstore.readthedocs.io/en/latest/?badge=latest)\n[![build status](https://travis-ci.org/nteract/bookstore.svg?branch=master)](https://travis-ci.org/nteract/bookstore)\n[![circleci](https://circleci.com/gh/nteract/bookstore.svg?style=shield)](https://circleci.com/gh/nteract/bookstore)\n[![codecov](https://codecov.io/gh/nteract/bookstore/branch/master/graph/badge.svg)](https://codecov.io/gh/nteract/bookstore)\n\n**bookstore** :books: provides tooling and workflow recommendations for storing :cd:, scheduling :calendar:, and publishing :book: notebooks.\n\nthe full documentation is hosted on [readthedocs](https://bookstore.readthedocs.io).\n\n## how does bookstore work\n\n### automatic notebook versioning\n\nevery *save* of a notebook creates an *immutable copy* of the notebook on object storage.\n\nto simplify implementation, we currently rely on s3 as the object store, using [versioned buckets](https://docs.aws.amazon.com/amazons3/latest/dev/versioning.html).\n\n<!--\n\ninclude diagram for versioning\n\n-->\n\n### storage paths\n\nall notebooks are archived to a single versioned s3 bucket with specific prefixes denoting the lifecycle of the notebook:\n\n- `/workspace` - where users edit\n- `/published` - public notebooks (to an organization)\n\neach notebook path is a namespace that an external service ties into the schedule. we archive off versions, keeping the path intact (until a user changes them).\n\n| prefix                                  | intent                 |\n|-----------------------------------------|------------------------|\n| `/workspace/kylek/notebooks/mine.ipynb` | notebook in \u201cdraft\u201d    |\n| `/published/kylek/notebooks/mine.ipynb` | current published copy |\n\nscheduled notebooks will also be referred to by the notebook key. in addition, we'll need to be able to surface version ids as well.\n\n### transitioning to this storage plan\n\nsince most people are on a regular filesystem, we'll start with writing to the\n`/workspace` prefix as archival storage (writing on save using a `post_save_hook`\nfor a jupyter contents manager).\n\n### publishing\n\nthe bookstore publishing endpoint is a `serverextension` to the classic jupyter\nserver. this means you will need to explicitly enable the `serverextension`\nto use the endpoint.\n\nto do so, run:\n\n    jupyter serverextension enable --py bookstore\n\nto enable it only for the current environment, run:\n\n    jupyter serverextension enable --py bookstore --sys-prefix\n\n## installation\n\n**bookstore** requires python 3.6 or higher.\n\nnote: supports installation on jupyter servers running python 3.6 and above.\nyour notebooks can still be run in python 2 or python 3.\n\n1. clone this repo.\n2. at the repo's root, enter in the terminal: `python3 -m pip install .` (tip: don't forget the dot at the end of the command)\n\n## configuration\n\n```python\n# jupyter config\n# at ~/.jupyter/jupyter_notebook_config.py for user installs on macos\n# see https://jupyter.readthedocs.io/en/latest/projects/jupyter-directories.html for other places to plop this\n\nfrom bookstore import bookstorecontentsarchiver\n\nc.notebookapp.contents_manager_class = bookstorecontentsarchiver\n\n# all bookstore settings are centralized on one config object so you don't have to configure it for each class\nc.bookstoresettings.workspace_prefix = \"/workspace/kylek/notebooks\"\nc.bookstoresettings.published_prefix = \"/published/kylek/notebooks\"\n\nc.bookstoresettings.s3_bucket = \"<bucket-name>\"\n\n# note: if bookstore is used from an ec2 instance with the right iam role, you don't\n# have to specify these\nc.bookstoresettings.s3_access_key_id = <aws access key id / iam access key id>\nc.bookstoresettings.s3_secret_access_key = <aws secret access key / iam secret access key>\n```\n\n## developing\n\nif you are developing on bookstore you will want to run the ci tests locally and to make releases.\n\nuse [contributing.md](./contributing.md) to learn more about contributing.\nuse [running_ci_locally.md](./running_ci_locally.md) to learn more about running ci tests locally.\nuse [running_python_tests.md](./running_python_tests.md) to learn about running tests locally.\nuse [releasing.md](./releasing.md) to learn more about releasing bookstore.\n\n\n",
  "docs_url": null,
  "keywords": "jupyter storage nteract notebook",
  "license": "bsd",
  "name": "bookstore",
  "package_url": "https://pypi.org/project/bookstore/",
  "project_url": "https://pypi.org/project/bookstore/",
  "project_urls": {
    "Documentation": "https://bookstore.readthedocs.io",
    "Funding": "https://nteract.io",
    "Homepage": "https://github.com/nteract/bookstore",
    "Source": "https://github.com/nteract/bookstore/",
    "Tracker": "https://github.com/nteract/bookstore/issues"
  },
  "release_url": "https://pypi.org/project/bookstore/2.5.1/",
  "requires_dist": [
    "future",
    "ipython (>=5.0)",
    "notebook",
    "tornado (>=5.1.1)",
    "aiobotocore",
    "aioboto3",
    "futures; python_version < \"3.0\"",
    "sphinx; extra == 'docs'",
    "m2r; extra == 'docs'",
    "sphinxcontrib-napoleon; extra == 'docs'",
    "sphinxcontrib-openapi; extra == 'docs'",
    "codecov; extra == 'test'",
    "coverage; extra == 'test'",
    "mock; extra == 'test'",
    "mypy (==0.660); extra == 'test'",
    "pytest (>=3.3); extra == 'test'",
    "pytest-asyncio; extra == 'test'",
    "pytest-cov; extra == 'test'",
    "pytest-mock; extra == 'test'",
    "black; extra == 'test'",
    "tox; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "storage workflows for notebooks",
  "version": "2.5.1",
  "releases": [],
  "developers": [
    "nteract@googlegroups.com",
    "nteract_contributors"
  ],
  "kwds": "nteract bookstoresettings bookstore bookstorecontentsarchiver books",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_bookstore",
  "homepage": "https://github.com/nteract/bookstore",
  "release_count": 19,
  "dependency_ids": [
    "pypi_aioboto3",
    "pypi_aiobotocore",
    "pypi_black",
    "pypi_codecov",
    "pypi_coverage",
    "pypi_future",
    "pypi_futures",
    "pypi_ipython",
    "pypi_m2r",
    "pypi_mock",
    "pypi_mypy",
    "pypi_notebook",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_pytest_mock",
    "pypi_sphinx",
    "pypi_sphinxcontrib_napoleon",
    "pypi_sphinxcontrib_openapi",
    "pypi_tornado",
    "pypi_tox"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: posix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries"
  ],
  "description": "flatdict\n========\n\n|version| |status| |coverage| |license|\n\n``flatdict`` and ``flatterdict`` are a dict classes that allows for single level,\ndelimited key/value pair mapping of nested dictionaries. you can interact with\n``flatdict`` and ``flatterdict`` like a normal dictionary and access child\ndictionaries as you normally would or with the composite key.\n\n*for example:*\n\n.. code-block:: python\n\n    value = flatdict.flatdict({'foo': {'bar': 'baz', 'qux': 'corge'}})\n\n*would be the same as:*\n\n.. code-block:: python\n\n    value == {'foo:bar': 'baz', 'foo:qux': 'corge'}\n\n*values can be accessed as:*\n\n.. code-block:: python\n\n    print(foo['foo:bar'])\n\n    # or\n\n    print(foo['foo']['bar'])\n\nadditionally, lists and tuples are also converted into dicts using ``enumerate()``,\nusing the ``flatterdict`` class.\n\n*for example:*\n\n.. code-block:: python\n\n    value = flatdict.flatterdict({'list': ['a', 'b', 'c']})\n\n*will be the same as:*\n\n.. code-block:: python\n\n    value == {'list:0': 'a', 'list:1': 'b', 'list:2': 'c'}\n\napi\n---\n\ndocumentation is available at https://flatdict.readthedocs.io\n\nversioning\n----------\nthis package attempts to use semantic versioning. api changes are indicated\nby the major version, non-breaking improvements by the minor, and bug fixes\nin the revision.\n\nit is recommended that you pin your targets to greater or equal to the current\nversion and less than the next major version.\n\ninstallation\n------------\n\n.. code-block:: bash\n\n    $ pip install flatdict\n\nnote that as of 4.0, setuptools 39.2 or higher is required for installation.\n\n.. |version| image:: https://img.shields.io/pypi/v/flatdict.svg?\n   :target: https://pypi.python.org/pypi/flatdict\n\n.. |status| image:: https://github.com/gmr/flatdict/workflows/testing/badge.svg\n   :target: https://github.com/gmr/flatdict/actions\n   :alt: build status\n\n.. |coverage| image:: https://img.shields.io/codecov/c/github/gmr/flatdict.svg?\n   :target: https://codecov.io/github/gmr/flatdict?branch=master\n\n.. |license| image:: https://img.shields.io/pypi/l/flatdict.svg?\n   :target: https://flatdict.readthedocs.org",
  "docs_url": null,
  "keywords": "",
  "license": "bsd 3-clause license",
  "name": "flatdict",
  "package_url": "https://pypi.org/project/flatdict/",
  "project_url": "https://pypi.org/project/flatdict/",
  "project_urls": {
    "Homepage": "https://github.com/gmr/flatdict"
  },
  "release_url": "https://pypi.org/project/flatdict/4.0.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python module for interacting with nested dicts as a single level dict with delimited keys.",
  "version": "4.0.1",
  "releases": [],
  "developers": [
    "gavin_m",
    "gavinmroy@gmail.com"
  ],
  "kwds": "flatterdict flatdict dict dicts dictionaries",
  "license_kwds": "bsd 3-clause license",
  "libtype": "pypi",
  "id": "pypi_flatdict",
  "homepage": "https://github.com/gmr/flatdict",
  "release_count": 18,
  "dependency_ids": []
}
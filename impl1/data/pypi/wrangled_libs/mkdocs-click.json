{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: documentation",
    "topic :: software development :: documentation",
    "topic :: text processing :: markup :: markdown",
    "typing :: typed"
  ],
  "description": "# mkdocs-click\n\n![tests](https://github.com/mkdocs/mkdocs-click/workflows/ci/badge.svg?branch=master)\n![python versions](https://img.shields.io/pypi/pyversions/mkdocs-click.svg)\n[![pypi](https://img.shields.io/pypi/v/mkdocs-click)](https://pypi.org/project/mkdocs-click/)\n\nan mkdocs extension to generate documentation for click command line applications.\n\noriginally developed by [datadog](https://www.datadoghq.com).\n\n## installation\n\ninstall from pypi:\n\n```bash\npip install mkdocs-click\n```\n\n## quickstart\n\nadd `mkdocs-click` to markdown extensions in your `mkdocs.yml` configuration:\n\n```yaml\nsite_name: example\ntheme: readthedocs\n\nmarkdown_extensions:\n    - mkdocs-click\n```\n\nadd a cli application, e.g.:\n\n```python\n# app/cli.py\nimport click\n\n@click.group()\ndef cli():\n    \"\"\"main entrypoint.\"\"\"\n\n@cli.command()\n@click.option(\"-d\", \"--debug\", help=\"include debug output.\")\ndef build(debug):\n    \"\"\"build production assets.\"\"\"\n```\n\nadd a `mkdocs-click` block in your markdown:\n\n```markdown\n# cli reference\n\nthis page provides documentation for our command line tools.\n\n::: mkdocs-click\n    :module: app.cli\n    :command: cli\n```\n\nstart the docs server:\n\n```bash\nmkdocs serve\n```\n\ntada! \ud83d\udcab\n\n![](https://raw.githubusercontent.com/datadog/mkdocs-click/master/docs/example.png)\n\n## usage\n\n### documenting commands\n\nto add documentation for a command, add a `mkdocs-click` block where the documentation should be inserted.\n\nexample:\n\n```markdown\n::: mkdocs-click\n    :module: app.cli\n    :command: main\n```\n\nfor all available options, see the [block syntax](#block-syntax).\n\n### multi-command support\n\nwhen pointed at a group (or any other multi-command), `mkdocs-click` will also generate documentation for sub-commands.\n\nthis allows you to generate documentation for an entire cli application by pointing `mkdocs-click` at the root command.\n\n### tweaking header levels\n\nby default, `mkdocs-click` generates markdown headers starting at `<h1>` for the root command section. this is generally what you want when the documentation should fill the entire page.\n\nif you are inserting documentation within other markdown content, you can set the `:depth:` option to tweak the initial header level. note that this applies even if you are just adding a heading.\n\nby default it is set to `0`, i.e. headers start at `<h1>`. if set to `1`, headers will start at `<h2>`, and so on. note that if you insert your own first level heading and leave depth at its default value of 0, the page will have multiple `<h1>` tags, which is not compatible with themes that generate page-internal menus such as the readthedocs and mkdocs-material themes.\n\n### full command path headers\n\nby default, `mkdocs-click` outputs headers that contain the command name. for nested commands such as `$ cli build all`, this also means the heading would be `## all`. this might be surprising, and may be harder to navigate at a glance for highly nested cli apps.\n\nif you'd like to show the full command path instead, turn on the [attribute lists extension](https://python-markdown.github.io/extensions/attr_list/):\n\n```yaml\n# mkdocs.yaml\n\nmarkdown_extensions:\n    - attr_list\n    - mkdocs-click\n```\n\n`mkdocs-click` will then output the full command path in headers (e.g. `## cli build all`) and permalinks (e.g. `#cli-build-all`).\n\nnote that the table of content (toc) will still use the command name: the toc is naturally hierarchal, so full command paths would be redundant. (this exception is why the `attr_list` extension is required.)\n\n## reference\n\n### block syntax\n\nthe syntax for `mkdocs-click` blocks is the following:\n\n```markdown\n::: mkdocs-click\n    :module: <module>\n    :command: <command>\n    :prog_name: <prog_name>\n    :depth: <depth>\n    :style: <style>\n```\n\noptions:\n\n- `module`: path to the module where the command object is located.\n- `command`: name of the command object.\n- `prog_name`: _(optional, default: same as `command`)_ the name to display for the command.\n- `depth`: _(optional, default: `0`)_ offset to add when generating headers.\n- `style`: _(optional, default: `plain`)_ style for the options section. the possible choices are `plain` and `table`.\n- `remove_ascii_art`: _(optional, default: `false`)_ when docstrings begin with the escape character `\\b`, all text will be ignored until the next blank line is encountered.\n- `show_hidden`: _(optional, default: `false`)_ show commands and options that are marked as hidden.\n- `list_subcommands`: _(optional, default: `false`)_ list subcommands of a given command. if _attr_list_ is installed,\nadd links to subcommands also.\n",
  "docs_url": null,
  "keywords": "click,datadog,mkdocs,mkdocs-plugin",
  "license": "",
  "name": "mkdocs-click",
  "package_url": "https://pypi.org/project/mkdocs-click/",
  "project_url": "https://pypi.org/project/mkdocs-click/",
  "project_urls": {
    "Changelog": "https://github.com/mkdocs/mkdocs-click/blob/master/CHANGELOG.md",
    "Issues": "https://github.com/mkdocs/mkdocs-click/issues",
    "Source": "https://github.com/mkdocs/mkdocs-click"
  },
  "release_url": "https://pypi.org/project/mkdocs-click/0.8.1/",
  "requires_dist": [
    "click>=8.1",
    "markdown>=3.3"
  ],
  "requires_python": ">=3.7",
  "summary": "an mkdocs extension to generate documentation for click command line applications",
  "version": "0.8.1",
  "releases": [],
  "developers": [
    "packages@datadoghq.com"
  ],
  "kwds": "mkdocs documentation documenting commands markdown_extensions",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_mkdocs_click",
  "homepage": "",
  "release_count": 10,
  "dependency_ids": [
    "pypi_click",
    "pypi_markdown"
  ]
}
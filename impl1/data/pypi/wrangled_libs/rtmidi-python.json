{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: mit license",
    "programming language :: cython",
    "topic :: multimedia :: sound/audio :: midi"
  ],
  "description": "rtmidi-python\n=============\n\npython wrapper for `rtmidi`_, the lightweight, cross-platform midi i/o\nlibrary. for linux, mac os x and windows.\n\nsetup\n-----\n\nthe wrapper is written in `cython`_, but the generated c++ code is\nincluded, so you can install the module as usual::\n\n    python setup.py install\n\nif you want to build from the cython source, make sure that you have a\nrecent version of cython (>= 0.17), and run::\n\n    python setup.py install --from-cython\n\nusage examples\n--------------\n\n*rtmidi-python* uses the same api as `rtmidi`_, only reformatted to comply\nwith pep-8, and with small changes to make it a little more pythonic.\n\nprint all output ports\n~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    import rtmidi_python as rtmidi\n\n    midi_out = rtmidi.midiout()\n    for port_name in midi_out.ports:\n        print port_name\n\nsend messages\n~~~~~~~~~~~~~\n\n::\n\n    import rtmidi_python as rtmidi\n\n    midi_out = rtmidi.midiout()\n    midi_out.open_port(0)\n\n    midi_out.send_message([0x90, 48, 100]) # note on\n    midi_out.send_message([0x80, 48, 100]) # note off\n\nget incoming messages by polling\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    import rtmidi_python as rtmidi\n\n    midi_in = rtmidi.midiin()\n    midi_in.open_port(0)\n\n    while true:\n        message, delta_time = midi_in.get_message()\n        if message:\n            print message, delta_time\n\nnote that the signature of ``get_message()`` differs from the original\n`rtmidi`_ api: it returns a tuple instead of using a return parameter.\n\nget incoming messages using a callback\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    import rtmidi_python as rtmidi\n\n    def callback(message, time_stamp):\n        print message, time_stamp\n\n    midi_in = rtmidi.midiin()\n    midi_in.callback = callback\n    midi_in.open_port(0)\n\n    # do something else here (but don't quit)\n\nnote that the signature of the callback differs from the original `rtmidi`_\napi: ``message`` is now the first parameter, like in the tuple returned by\n``get_message()``.\n\nlicense\n-------\n\n*rtmidi-python* is licensed under the mit license, see license.\n\nit uses `rtmidi`_, licensed under a modified mit license, see\nrtmidi/rtmidi.h.\n\n.. _rtmidi: http://www.music.mcgill.ca/~gary/rtmidi/\n.. _cython: http://www.cython.org",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "rtmidi-python",
  "package_url": "https://pypi.org/project/rtmidi-python/",
  "project_url": "https://pypi.org/project/rtmidi-python/",
  "project_urls": {
    "Download": "UNKNOWN",
    "Homepage": "https://github.com/superquadratic/rtmidi-python"
  },
  "release_url": "https://pypi.org/project/rtmidi-python/0.2.2/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "python wrapper for rtmidi",
  "version": "0.2.2",
  "releases": [],
  "developers": [
    "code@superquadratic.net",
    "guido_lorenz"
  ],
  "kwds": "rtmidi_python _rtmidi rtmidi _cython cython",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_rtmidi_python",
  "homepage": "https://github.com/superquadratic/rtmidi-python",
  "release_count": 1,
  "dependency_ids": []
}
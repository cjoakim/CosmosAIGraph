{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: user interfaces",
    "topic :: system :: shells",
    "topic :: utilities"
  ],
  "description": "click-shell\n===========\n\n|travisci| |docsstatus|\n\nclick-shell is an extension to `click`_ that easily turns your click app into a shell utility.\nit is built on top of the built in python `cmd`_ module, with modifications to make it work with click.\n\n\nfeatures\n--------\n\n* adds a \"shell\" mode **with command completion** to any click app\n* just a one line change for most click apps\n\n\nusage\n-----\n\nsimply replace ``@click.group`` with ``@click_shell.shell`` on the root level command:\n\n\n.. code-block:: python\n\n    from click_shell import shell\n\n    # @click.group()  # no longer\n    @shell(prompt='my-app > ', intro='starting my app...')\n    def my_app():\n        pass\n\n    @my_app.command()\n    def testcommand():\n        print('testcommand is running')\n\n    # more commands\n\n    if __name__ == '__main__':\n        my_app()\n\n\nwhen run, you should expect an output like so:\n\n.. code-block:: bash\n\n    $ python my_app.py\n    starting my app...\n    my-app > testcommand\n    testcommand is running\n    my-app >\n\n\n.. note::\n\n    it should be noted that this decorator **only** alters functionality if no arguments are\n    passed on the command line.  if you try to run a command directly\n    (like ``python my_app.py the_command`` in the above example), your app will function\n    identically to how it did before.\n\n\nfor more advanced usage, check out our docs at https://click-shell.readthedocs.io/\n\n.. _click: http://click.pocoo.org/\n.. _cmd: https://docs.python.org/2/library/cmd.html\n\n.. |travisci| image:: https://travis-ci.com/clarkperkins/click-shell.svg?branch=master\n    :target: https://travis-ci.com/clarkperkins/click-shell\n    :alt: build status\n\n.. |docsstatus| image:: https://readthedocs.org/projects/click-shell/badge/?version=latest\n    :target: https://click-shell.readthedocs.io/en/latest/?badge=latest\n    :alt: documentation status\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "click-shell",
  "package_url": "https://pypi.org/project/click-shell/",
  "project_url": "https://pypi.org/project/click-shell/",
  "project_urls": {
    "Homepage": "https://github.com/clarkperkins/click-shell"
  },
  "release_url": "https://pypi.org/project/click-shell/2.1/",
  "requires_dist": [
    "click (>=6.0)",
    "gnureadline ; extra == 'readline'",
    "pyreadline ; extra == 'windows'"
  ],
  "requires_python": "",
  "summary": "an extension to click that easily turns your click app into a shell utility",
  "version": "2.1",
  "releases": [],
  "developers": [
    "clark_perkins",
    "r.clark.perkins@gmail.com"
  ],
  "kwds": "click_shell the_command commands shell my_app",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_click_shell",
  "homepage": "https://github.com/clarkperkins/click-shell",
  "release_count": 7,
  "dependency_ids": [
    "pypi_click",
    "pypi_gnureadline",
    "pypi_pyreadline"
  ]
}
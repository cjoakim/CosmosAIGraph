{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: web environment",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": ".. image:: https://raw.githubusercontent.com/sanic-org/sanic-assets/master/png/sanic-framework-logo-400x97.png\n    :alt: sanic | build fast. run fast.\n\nsanic | build fast. run fast.\n=============================\n\n.. start-badges\n\n.. list-table::\n    :widths: 15 85\n    :stub-columns: 1\n\n    * - build\n      - | |py310test| |py39test| |py38test| |py37test|\n    * - docs\n      - | |userguide| |documentation|\n    * - package\n      - | |pypi| |pypi version| |wheel| |supported implementations| |code style black|\n    * - support\n      - | |forums| |discord| |awesome|\n    * - stats\n      - | |downloads| |wkdownloads| |conda downloads|\n\n.. |userguide| image:: https://img.shields.io/badge/user%20guide-sanic-ff0068\n   :target: https://sanicframework.org/\n.. |forums| image:: https://img.shields.io/badge/forums-community-ff0068.svg\n   :target: https://community.sanicframework.org/\n.. |discord| image:: https://img.shields.io/discord/812221182594121728?logo=discord\n   :target: https://discord.gg/farqzaemaa\n.. |py310test| image:: https://github.com/sanic-org/sanic/actions/workflows/pr-python310.yml/badge.svg?branch=main\n   :target: https://github.com/sanic-org/sanic/actions/workflows/pr-python310.yml\n.. |py39test| image:: https://github.com/sanic-org/sanic/actions/workflows/pr-python39.yml/badge.svg?branch=main\n   :target: https://github.com/sanic-org/sanic/actions/workflows/pr-python39.yml\n.. |py38test| image:: https://github.com/sanic-org/sanic/actions/workflows/pr-python38.yml/badge.svg?branch=main\n   :target: https://github.com/sanic-org/sanic/actions/workflows/pr-python38.yml\n.. |py37test| image:: https://github.com/sanic-org/sanic/actions/workflows/pr-python37.yml/badge.svg?branch=main\n   :target: https://github.com/sanic-org/sanic/actions/workflows/pr-python37.yml\n.. |documentation| image:: https://readthedocs.org/projects/sanic/badge/?version=latest\n   :target: http://sanic.readthedocs.io/en/latest/?badge=latest\n.. |pypi| image:: https://img.shields.io/pypi/v/sanic.svg\n   :target: https://pypi.python.org/pypi/sanic/\n.. |pypi version| image:: https://img.shields.io/pypi/pyversions/sanic.svg\n   :target: https://pypi.python.org/pypi/sanic/\n.. |code style black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n.. |wheel| image:: https://img.shields.io/pypi/wheel/sanic.svg\n    :alt: pypi wheel\n    :target: https://pypi.python.org/pypi/sanic\n.. |supported implementations| image:: https://img.shields.io/pypi/implementation/sanic.svg\n    :alt: supported implementations\n    :target: https://pypi.python.org/pypi/sanic\n.. |awesome| image:: https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg\n    :alt: awesome sanic list\n    :target: https://github.com/mekicha/awesome-sanic\n.. |downloads| image:: https://pepy.tech/badge/sanic/month\n    :alt: downloads\n    :target: https://pepy.tech/project/sanic\n.. |wkdownloads| image:: https://pepy.tech/badge/sanic/week\n    :alt: downloads\n    :target: https://pepy.tech/project/sanic\n.. |conda downloads| image:: https://img.shields.io/conda/dn/conda-forge/sanic.svg\n    :alt: downloads\n    :target: https://anaconda.org/conda-forge/sanic\n\n.. end-badges\n\nsanic is a **python 3.7+** web server and web framework that's written to go fast. it allows the usage of the ``async/await`` syntax added in python 3.5, which makes your code non-blocking and speedy.\n\nsanic is also asgi compliant, so you can deploy it with an `alternative asgi webserver <https://sanicframework.org/en/guide/deployment/running.html#asgi>`_.\n\n`source code on github <https://github.com/sanic-org/sanic/>`_ | `help and discussion board <https://community.sanicframework.org/>`_ | `user guide <https://sanicframework.org>`_ | `chat on discord <https://discord.gg/farqzaemaa>`_\n\nthe project is maintained by the community, for the community. **contributions are welcome!**\n\nthe goal of the project is to provide a simple way to get up and running a highly performant http server that is easy to build, to expand, and ultimately to scale.\n\nsponsor\n-------\n\ncheck out `open collective <https://opencollective.com/sanic-org>`_ to learn more about helping to fund sanic. \n\nthanks to `linode <https://www.linode.com>`_ for their contribution towards the development and community of sanic.\n\n|linode|\n\ninstallation\n------------\n\n``pip3 install sanic``\n\n    sanic makes use of ``uvloop`` and ``ujson`` to help with performance. if you do not want to use those packages, simply add an environmental variable ``sanic_no_uvloop=true`` or ``sanic_no_ujson=true`` at install time.\n\n    .. code:: shell\n\n       $ export sanic_no_uvloop=true\n       $ export sanic_no_ujson=true\n       $ pip3 install --no-binary :all: sanic\n\n\n.. note::\n\n  if you are running on a clean install of fedora 28 or above, please make sure you have the ``redhat-rpm-config`` package installed in case if you want to\n  use ``sanic`` with ``ujson`` dependency.\n\n\nhello world example\n-------------------\n\n.. code:: python\n\n    from sanic import sanic\n    from sanic.response import json\n\n    app = sanic(\"my-hello-world-app\")\n\n    @app.route('/')\n    async def test(request):\n        return json({'hello': 'world'})\n\n    if __name__ == '__main__':\n        app.run()\n\nsanic can now be easily run using ``sanic hello.app``.\n\n.. code::\n\n    [2018-12-30 11:37:41 +0200] [13564] [info] goin' fast @ http://127.0.0.1:8000\n    [2018-12-30 11:37:41 +0200] [13564] [info] starting worker [13564]\n\nand, we can verify it is working: ``curl localhost:8000 -i``\n\n.. code::\n\n    http/1.1 200 ok\n    connection: keep-alive\n    keep-alive: 5\n    content-length: 17\n    content-type: application/json\n\n    {\"hello\":\"world\"}\n\n**now, let's go build something fast!**\n\nminimum python version is 3.7. if you need python 3.6 support, please use v20.12lts.\n\ndocumentation\n-------------\n\n`user guide <https://sanicframework.org>`__ and `api documentation <http://sanic.readthedocs.io/>`__.\n\nchangelog\n---------\n\n`release changelogs <https://github.com/sanic-org/sanic/blob/master/changelog.rst>`__.\n\n\nquestions and discussion\n------------------------\n\n`ask a question or join the conversation <https://community.sanicframework.org/>`__.\n\ncontribution\n------------\n\nwe are always happy to have new contributions. we have `marked issues good for anyone looking to get started <https://github.com/sanic-org/sanic/issues?q=is%3aopen+is%3aissue+label%3abeginner>`_, and welcome `questions on the forums <https://community.sanicframework.org/>`_. please take a look at our `contribution guidelines <https://github.com/sanic-org/sanic/blob/master/contributing.rst>`_.\n\n.. |linode| image:: https://www.linode.com/wp-content/uploads/2021/01/linode-logo-black.svg\n    :alt: linode\n    :target: https://www.linode.com\n    :width: 200px\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "sanic",
  "package_url": "https://pypi.org/project/sanic/",
  "project_url": "https://pypi.org/project/sanic/",
  "project_urls": {
    "Homepage": "http://github.com/sanic-org/sanic/"
  },
  "release_url": "https://pypi.org/project/sanic/23.6.0/",
  "requires_dist": [
    "sanic-routing (>=23.6.0)",
    "httptools (>=0.0.10)",
    "aiofiles (>=0.6.0)",
    "websockets (>=10.0)",
    "multidict (<7.0,>=5.0)",
    "html5tagger (>=1.2.1)",
    "tracerite (>=1.0.0)",
    "typing-extensions (>=4.4.0)",
    "uvloop (>=0.15.0) ; sys_platform != \"win32\" and implementation_name == \"cpython\"",
    "ujson (>=1.35) ; sys_platform != \"win32\" and implementation_name == \"cpython\"",
    "docutils ; extra == 'all'",
    "pytest-sanic ; extra == 'all'",
    "sanic-testing (>=23.6.0) ; extra == 'all'",
    "pygments ; extra == 'all'",
    "m2r2 ; extra == 'all'",
    "mypy ; extra == 'all'",
    "flake8 ; extra == 'all'",
    "cryptography ; extra == 'all'",
    "tox ; extra == 'all'",
    "chardet (==3.*) ; extra == 'all'",
    "sphinx (>=2.1.2) ; extra == 'all'",
    "slotscheck (<1,>=0.8.0) ; extra == 'all'",
    "pytest-benchmark ; extra == 'all'",
    "isort (>=5.0.0) ; extra == 'all'",
    "beautifulsoup4 ; extra == 'all'",
    "black ; extra == 'all'",
    "uvicorn (<0.15.0) ; extra == 'all'",
    "mistune (<2.0.0) ; extra == 'all'",
    "pytest (==7.1.*) ; extra == 'all'",
    "enum-tools[sphinx] ; extra == 'all'",
    "towncrier ; extra == 'all'",
    "sphinx-rtd-theme (>=0.4.3) ; extra == 'all'",
    "bandit ; extra == 'all'",
    "coverage ; extra == 'all'",
    "types-ujson ; (sys_platform != \"win32\" and implementation_name == \"cpython\") and extra == 'all'",
    "sanic-testing (>=23.6.0) ; extra == 'dev'",
    "pytest (==7.1.*) ; extra == 'dev'",
    "coverage ; extra == 'dev'",
    "beautifulsoup4 ; extra == 'dev'",
    "pytest-sanic ; extra == 'dev'",
    "pytest-benchmark ; extra == 'dev'",
    "chardet (==3.*) ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "black ; extra == 'dev'",
    "isort (>=5.0.0) ; extra == 'dev'",
    "bandit ; extra == 'dev'",
    "mypy ; extra == 'dev'",
    "docutils ; extra == 'dev'",
    "pygments ; extra == 'dev'",
    "uvicorn (<0.15.0) ; extra == 'dev'",
    "slotscheck (<1,>=0.8.0) ; extra == 'dev'",
    "cryptography ; extra == 'dev'",
    "tox ; extra == 'dev'",
    "towncrier ; extra == 'dev'",
    "types-ujson ; (sys_platform != \"win32\" and implementation_name == \"cpython\") and extra == 'dev'",
    "sphinx (>=2.1.2) ; extra == 'docs'",
    "sphinx-rtd-theme (>=0.4.3) ; extra == 'docs'",
    "docutils ; extra == 'docs'",
    "pygments ; extra == 'docs'",
    "m2r2 ; extra == 'docs'",
    "enum-tools[sphinx] ; extra == 'docs'",
    "mistune (<2.0.0) ; extra == 'docs'",
    "sanic-ext ; extra == 'ext'",
    "aioquic ; extra == 'http3'",
    "sanic-testing (>=23.6.0) ; extra == 'test'",
    "pytest (==7.1.*) ; extra == 'test'",
    "coverage ; extra == 'test'",
    "beautifulsoup4 ; extra == 'test'",
    "pytest-sanic ; extra == 'test'",
    "pytest-benchmark ; extra == 'test'",
    "chardet (==3.*) ; extra == 'test'",
    "flake8 ; extra == 'test'",
    "black ; extra == 'test'",
    "isort (>=5.0.0) ; extra == 'test'",
    "bandit ; extra == 'test'",
    "mypy ; extra == 'test'",
    "docutils ; extra == 'test'",
    "pygments ; extra == 'test'",
    "uvicorn (<0.15.0) ; extra == 'test'",
    "slotscheck (<1,>=0.8.0) ; extra == 'test'",
    "types-ujson ; (sys_platform != \"win32\" and implementation_name == \"cpython\") and extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "a web server and web framework that's written to go fast. build fast. run fast.",
  "version": "23.6.0",
  "releases": [],
  "developers": [
    "admhpkns@gmail.com",
    "sanic_community"
  ],
  "kwds": "sanicframework sanic sanic_no_uvloop sanic_no_ujson py38test",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_sanic",
  "homepage": "http://github.com/sanic-org/sanic/",
  "release_count": 75,
  "dependency_ids": [
    "pypi_aiofiles",
    "pypi_aioquic",
    "pypi_bandit",
    "pypi_beautifulsoup4",
    "pypi_black",
    "pypi_chardet",
    "pypi_coverage",
    "pypi_cryptography",
    "pypi_docutils",
    "pypi_enum_tools",
    "pypi_flake8",
    "pypi_html5tagger",
    "pypi_httptools",
    "pypi_isort",
    "pypi_m2r2",
    "pypi_mistune",
    "pypi_multidict",
    "pypi_mypy",
    "pypi_pygments",
    "pypi_pytest",
    "pypi_pytest_benchmark",
    "pypi_pytest_sanic",
    "pypi_sanic_ext",
    "pypi_sanic_routing",
    "pypi_sanic_testing",
    "pypi_slotscheck",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_towncrier",
    "pypi_tox",
    "pypi_tracerite",
    "pypi_types_ujson",
    "pypi_typing_extensions",
    "pypi_ujson",
    "pypi_uvicorn",
    "pypi_uvloop",
    "pypi_websockets"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering"
  ],
  "description": ".. -*- rest -*-\n.. vim:syntax=rst\n\n.. use raw location to ensure image shows up on pypi\n.. image:: https://raw.githubusercontent.com/nipy/nibabel/master/doc/pics/logo.png\n   :target: https://nipy.org/nibabel\n   :alt: nibabel logo\n\n.. list-table::\n   :widths: 20 80\n   :header-rows: 0\n\n   * - code\n     -\n      .. image:: https://img.shields.io/pypi/pyversions/nibabel.svg\n         :target: https://pypi.python.org/pypi/nibabel/\n         :alt: pypi - python version\n      .. image:: https://img.shields.io/badge/code%20style-blue-blue.svg\n         :target: https://blue.readthedocs.io/en/latest/\n         :alt: code style: blue\n      .. image:: https://img.shields.io/badge/imports-isort-1674b1\n         :target: https://pycqa.github.io/isort/\n         :alt: imports: isort\n      .. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logocolor=white\n         :target: https://github.com/pre-commit/pre-commit\n         :alt: pre-commit\n\n   * - tests\n     -\n      .. image:: https://github.com/nipy/nibabel/actions/workflows/stable.yml/badge.svg\n         :target: https://github.com/nipy/nibabel/actions/workflows/stable.yml\n         :alt: stable tests\n      .. image:: https://codecov.io/gh/nipy/nibabel/branch/master/graph/badge.svg\n         :target: https://codecov.io/gh/nipy/nibabel\n         :alt: codecov badge\n\n   * - pypi\n     -\n      .. image:: https://img.shields.io/pypi/v/nibabel.svg\n         :target: https://pypi.python.org/pypi/nibabel/\n         :alt: pypi version\n      .. image:: https://img.shields.io/pypi/dm/nibabel.svg\n         :target: https://pypistats.org/packages/nibabel\n         :alt: pypi - downloads\n\n   * - packages\n     -\n      .. image:: https://img.shields.io/conda/vn/conda-forge/nibabel\n         :target: https://anaconda.org/conda-forge/nibabel\n         :alt: conda package\n      .. image:: https://repology.org/badge/version-for-repo/debian_unstable/nibabel.svg?header=debian%20unstable\n         :target: https://repology.org/project/nibabel/versions\n         :alt: debian unstable package\n      .. image:: https://repology.org/badge/version-for-repo/aur/python:nibabel.svg?header=arch%20%28%41%55%52%29\n         :target: https://repology.org/project/python:nibabel/versions\n         :alt: arch (aur)\n      .. image:: https://repology.org/badge/version-for-repo/gentoo_ovl_science/nibabel.svg?header=gentoo%20%28%3a%3ascience%29\n         :target: https://repology.org/project/nibabel/versions\n         :alt: gentoo (::science)\n      .. image:: https://repology.org/badge/version-for-repo/nix_unstable/python:nibabel.svg?header=nixpkgs%20unstable\n         :target: https://repology.org/project/python:nibabel/versions\n         :alt: nixpkgs unstable\n\n   * - license & doi\n     -\n      .. image:: https://img.shields.io/pypi/l/nibabel.svg\n         :target: https://github.com/nipy/nibabel/blob/master/copying\n         :alt: license\n      .. image:: https://zenodo.org/badge/doi/10.5281/zenodo.591597.svg\n         :target: https://doi.org/10.5281/zenodo.591597\n         :alt: zenodo doi\n\n.. following contents should be copied from long_description in nibabel/info.py\n\n\nread and write access to common neuroimaging file formats, including:\nanalyze_ (plain, spm99, spm2 and later), gifti_, nifti1_, nifti2_, `cifti-2`_,\nminc1_, minc2_, `afni brik/head`_, ecat_ and philips par/rec.\nin addition, nibabel also supports freesurfer_'s mgh_, geometry, annotation and\nmorphometry files, and provides some limited support for dicom_.\n\nnibabel's api gives full or selective access to header information (metadata),\nand image data is made available via numpy arrays. for more information, see\nnibabel's `documentation site`_ and `api reference`_.\n\n.. _api reference: https://nipy.org/nibabel/api.html\n.. _afni brik/head: https://afni.nimh.nih.gov/pub/dist/src/readme.attributes\n.. _analyze: http://www.grahamwideman.com/gw/brain/analyze/formatdoc.htm\n.. _cifti-2: https://www.nitrc.org/projects/cifti/\n.. _dicom: http://medical.nema.org/\n.. _documentation site: http://nipy.org/nibabel\n.. _ecat: http://xmedcon.sourceforge.net/docs/ecat\n.. _freesurfer: https://surfer.nmr.mgh.harvard.edu\n.. _gifti: https://www.nitrc.org/projects/gifti\n.. _mgh: https://surfer.nmr.mgh.harvard.edu/fswiki/fstutorial/mghformat\n.. _minc1:\n    https://en.wikibooks.org/wiki/minc/reference/minc1_file_format_reference\n.. _minc2:\n    https://en.wikibooks.org/wiki/minc/reference/minc2.0_file_format_reference\n.. _nifti1: http://nifti.nimh.nih.gov/nifti-1/\n.. _nifti2: http://nifti.nimh.nih.gov/nifti-2/\n\ninstallation\n============\n\nto install nibabel's `current release`_ with ``pip``, run::\n\n   pip install nibabel\n\nto install the latest development version, run::\n\n   pip install git+https://github.com/nipy/nibabel\n\nwhen working on nibabel itself, it may be useful to install in \"editable\" mode::\n\n   git clone https://github.com/nipy/nibabel.git\n   pip install -e ./nibabel\n\nfor more information on previous releases, see the `release archive`_ or\n`development changelog`_.\n\n.. _current release: https://pypi.python.org/pypi/nibabel\n.. _release archive: https://github.com/nipy/nibabel/releases\n.. _development changelog: https://nipy.org/nibabel/changelog.html\n\ntesting\n=======\n\nduring development, we recommend using tox_ to run nibabel tests::\n\n    git clone https://github.com/nipy/nibabel.git\n    cd nibabel\n    tox\n\nto test an installed version of nibabel, install the test dependencies\nand run pytest_::\n\n    pip install nibabel[test]\n    pytest --pyargs nibabel\n\nfor more information, consult the `developer guidelines`_.\n\n.. _tox: https://tox.wiki\n.. _pytest: https://docs.pytest.org\n.. _developer guidelines: https://nipy.org/nibabel/devel/devguide.html\n\nmailing list\n============\n\nplease send any questions or suggestions to the `neuroimaging mailing list\n<https://mail.python.org/mailman/listinfo/neuroimaging>`_.\n\nlicense\n=======\n\nnibabel is licensed under the terms of the `mit license\n<https://github.com/nipy/nibabel/blob/master/copying#nibabel>`__.\nsome code included with nibabel is licensed under the `bsd license`_.\nfor more information, please see the copying_ file.\n\n.. _bsd license: https://opensource.org/licenses/bsd-3-clause\n.. _copying: https://github.com/nipy/nibabel/blob/master/copying\n\ncitation\n========\n\nnibabel releases have a zenodo_ `digital object identifier`_ (doi) badge at\nthe top of the release notes. click on the badge for more information.\n\n.. _digital object identifier: https://en.wikipedia.org/wiki/digital_object_identifier\n.. _zenodo: https://zenodo.org\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "nibabel",
  "package_url": "https://pypi.org/project/nibabel/",
  "project_url": "https://pypi.org/project/nibabel/",
  "project_urls": {
    "Development": "https://github.com/nipy/nibabel",
    "Homepage": "https://nipy.org/nibabel"
  },
  "release_url": "https://pypi.org/project/nibabel/5.2.0/",
  "requires_dist": [
    "importlib-resources>=1.3; python_version < '3.9'",
    "numpy>=1.20",
    "packaging>=17",
    "nibabel[dicomfs,minc2,spm,zstd]; extra == 'all'",
    "tox; extra == 'dev'",
    "pydicom>=1.0.0; extra == 'dicom'",
    "nibabel[dicom]; extra == 'dicomfs'",
    "pillow; extra == 'dicomfs'",
    "matplotlib>=1.5.3; extra == 'doc'",
    "numpydoc; extra == 'doc'",
    "sphinx; extra == 'doc'",
    "texext; extra == 'doc'",
    "tomli; python_version < '3.11' and extra == 'doc'",
    "tox; extra == 'doctest'",
    "h5py; extra == 'minc2'",
    "scipy; extra == 'spm'",
    "tox; extra == 'style'",
    "pytest; extra == 'test'",
    "pytest-cov; extra == 'test'",
    "pytest-doctestplus; extra == 'test'",
    "pytest-httpserver; extra == 'test'",
    "pytest-xdist; extra == 'test'",
    "tox; extra == 'typing'",
    "pyzstd>=0.14.3; extra == 'zstd'"
  ],
  "requires_python": ">=3.8",
  "summary": "access a multitude of neuroimaging data formats",
  "version": "5.2.0",
  "releases": [],
  "developers": [
    "christopher_markiewicz",
    "neuroimaging@python.org"
  ],
  "kwds": "nibabel nipy pytest_ pyversions pytest",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_nibabel",
  "homepage": "",
  "release_count": 41,
  "dependency_ids": [
    "pypi_h5py",
    "pypi_importlib_resources",
    "pypi_matplotlib",
    "pypi_nibabel",
    "pypi_numpy",
    "pypi_numpydoc",
    "pypi_packaging",
    "pypi_pillow",
    "pypi_pydicom",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_doctestplus",
    "pypi_pytest_httpserver",
    "pypi_pytest_xdist",
    "pypi_pyzstd",
    "pypi_scipy",
    "pypi_sphinx",
    "pypi_texext",
    "pypi_tomli",
    "pypi_tox"
  ]
}
{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 2",
    "programming language :: python :: 3"
  ],
  "description": "# about\n    python package which allows creation of simple servers and clients for communication with sockets. supports both python2 and python3.\n    version: 1.0.0\n\n# usage\n    - to create a server: depending on your python version, import the server class from the appropriate server module, subclass it and override its act_on() method which describes what it should do when it receives a request, and returns a string response. finally, create a server object and call its listen() method.\n\n    - to create a client: depending on your python version, import the client class from the appropriate client module, create a client object and call its poll_server() method. you can then make use of the response it returns as required.\n\n    by default, a python2 client will poll the default python3 server while a python3 client will poll the default python2 server (unlike in the examples below).\n\n# examples\n    # test server with python2:\n    from sockets.python2.server import server\n    class myserver(server):\n        def act_on(self, data, addr):\n            # do something with data (in bytes) and return a string.\n            return data\n    server = myserver(listening_address=('127.0.0.1', 11112))\n    server.listen()\n\n    # test client with python2. polls the python2 server.\n    from sockets.python2.client import client\n    client = client()\n    response, addr = client.poll_server(\"hello world\", server=('127.0.0.1', 11112))\n    print response, addr\n\n    # test server with python3:\n    from sockets.python3.server import server\n    class myserver(server):\n        def act_on(self, data, addr):\n            # do something with data (in bytes) and return a string.\n            return data.decode()\n    server = myserver(listening_address=('127.0.0.1', 11113))\n    server.listen()\n\n    # test client with python3. polls the python3 server.\n    from sockets.python3.client import client\n    client = client()\n    response, addr = client.poll_server(\"hello world\", server=('127.0.0.1', 11113))\n    print(response, addr)\n\n# contributing authors\n    ehiorobo evans (2018).\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "sockets",
  "package_url": "https://pypi.org/project/sockets/",
  "project_url": "https://pypi.org/project/sockets/",
  "project_urls": {
    "Homepage": "https://github.com/eshiofune/sockets"
  },
  "release_url": "https://pypi.org/project/sockets/1.0.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python package which allows creation of simple servers and clients for communication with sockets",
  "version": "1.0.0",
  "releases": [],
  "developers": [
    "ehioroboevans@gmail.com",
    "evans_ehiorobo"
  ],
  "kwds": "python3 sockets python2 poll_server python",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_sockets",
  "homepage": "https://github.com/eshiofune/sockets",
  "release_count": 1,
  "dependency_ids": []
}
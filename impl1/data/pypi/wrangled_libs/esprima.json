{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "topic :: software development :: code generators",
    "topic :: software development :: compilers",
    "topic :: software development :: libraries :: python modules",
    "topic :: text processing :: general"
  ],
  "description": "|donate| |pypi version| |pypi license| |pypi format| |pypi status|\n\n**esprima** (`esprima.org <http://esprima.org>`__, bsd license) is a\nhigh performance, standard-compliant\n`ecmascript <http://www.ecma-international.org/publications/standards/ecma-262.htm>`__\nparser officially written in ecmascript (also popularly known as\n`javascript <https://en.wikipedia.org/wiki/javascript>`__) and ported to\npython. esprima is created and maintained by `ariya\nhidayat <https://twitter.com/ariyahidayat>`__, with the help of `many\ncontributors <https://github.com/jquery/esprima/contributors>`__.\n\npython port is a line-by-line manual translation and was created and is\nmaintained by `german mendez bravo\n(kronuz) <https://twitter.com/germbravo>`__.\n\nfeatures\n~~~~~~~~\n\n-  full support for ecmascript 2017 (`ecma-262 8th\n   edition <http://www.ecma-international.org/publications/standards/ecma-262.htm>`__)\n-  sensible `syntax tree\n   format <https://github.com/estree/estree/blob/master/es5.md>`__ as\n   standardized by `estree project <https://github.com/estree/estree>`__\n-  experimental support for `jsx <https://facebook.github.io/jsx/>`__, a\n   syntax extension for `react <https://facebook.github.io/react/>`__\n-  optional tracking of syntax node location (index-based and\n   line-column)\n-  `heavily tested <http://esprima.org/test/ci.html>`__ (~1500 `unit\n   tests <https://github.com/jquery/esprima/tree/master/test/fixtures>`__\n   with `full code\n   coverage <https://codecov.io/github/jquery/esprima>`__)\n\ninstallation\n~~~~~~~~~~~~\n\n.. code:: shell\n\n    pip install esprima\n\napi\n~~~\n\nesprima can be used to perform `lexical\nanalysis <https://en.wikipedia.org/wiki/lexical_analysis>`__\n(tokenization) or `syntactic\nanalysis <https://en.wikipedia.org/wiki/parsing>`__ (parsing) of a\njavascript program.\n\na simple example:\n\n.. code:: javascript\n\n    >>> import esprima\n    >>> program = 'const answer = 42'\n\n    >>> esprima.tokenize(program)\n    [{\n        type: \"keyword\",\n        value: \"const\"\n    }, {\n        type: \"identifier\",\n        value: \"answer\"\n    }, {\n        type: \"punctuator\",\n        value: \"=\"\n    }, {\n        type: \"numeric\",\n        value: \"42\"\n    }]\n\n    >>> esprima.parsescript(program)\n    {\n        body: [\n            {\n                kind: \"const\",\n                declarations: [\n                    {\n                        init: {\n                            raw: \"42\",\n                            type: \"literal\",\n                            value: 42\n                        },\n                        type: \"variabledeclarator\",\n                        id: {\n                            type: \"identifier\",\n                            name: \"answer\"\n                        }\n                    }\n                ],\n                type: \"variabledeclaration\"\n            }\n        ],\n        type: \"program\",\n        sourcetype: \"script\"\n    }\n\nfor more information, please read the `complete\ndocumentation <http://esprima.org/doc>`__.\n\n.. |donate| image:: https://img.shields.io/badge/donate-paypal-green.svg\n   :target: https://www.paypal.me/kronuz/25\n.. |pypi version| image:: https://img.shields.io/pypi/v/esprima.svg\n   :target: https://pypi.python.org/pypi/esprima\n.. |pypi license| image:: https://img.shields.io/pypi/l/esprima.svg\n   :target: https://pypi.python.org/pypi/esprima\n.. |pypi wheel| image:: https://img.shields.io/pypi/wheel/esprima.svg\n   :target: https://pypi.python.org/pypi/esprima\n.. |pypi format| image:: https://img.shields.io/pypi/format/esprima.svg\n   :target: https://pypi.python.org/pypi/esprima\n.. |pypi python version| image:: https://img.shields.io/pypi/pyversions/esprima.svg\n   :target: https://pypi.python.org/pypi/esprima\n.. |pypi implementation| image:: https://img.shields.io/pypi/implementation/esprima.svg\n   :target: https://pypi.python.org/pypi/esprima\n.. |pypi status| image:: https://img.shields.io/pypi/status/esprima.svg\n   :target: https://pypi.python.org/pypi/esprima\n.. |pypi downloads| image:: https://img.shields.io/pypi/dm/esprima.svg\n   :target: https://pypi.python.org/pypi/esprima",
  "docs_url": null,
  "keywords": "esprima ecmascript javascript parser ast",
  "license": "bsd license",
  "name": "esprima",
  "package_url": "https://pypi.org/project/esprima/",
  "project_url": "https://pypi.org/project/esprima/",
  "project_urls": {
    "Homepage": "https://github.com/Kronuz/esprima-python"
  },
  "release_url": "https://pypi.org/project/esprima/4.0.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "ecmascript parsing infrastructure for multipurpose analysis in python",
  "version": "4.0.1",
  "releases": [],
  "developers": [
    "german.mb@gmail.com",
    "german_m"
  ],
  "kwds": "ecmascript parsescript javascript script python",
  "license_kwds": "bsd license",
  "libtype": "pypi",
  "id": "pypi_esprima",
  "homepage": "https://github.com/kronuz/esprima-python",
  "release_count": 14,
  "dependency_ids": []
}
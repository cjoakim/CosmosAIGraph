{
  "classifiers": [
    "development status :: 3 - alpha",
    "framework :: asyncio",
    "framework :: aiohttp",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "typing :: typed"
  ],
  "description": "# aiohttp-client-cache\n\n[![build status](https://github.com/requests-cache/aiohttp-client-cache/actions/workflows/build.yml/badge.svg?branch=main)](https://github.com/requests-cache/aiohttp-client-cache/actions)\n[![documentation status](https://img.shields.io/readthedocs/aiohttp-client-cache/latest?label=docs)](https://aiohttp-client-cache.readthedocs.io/en/stable/)\n[![codecov](https://codecov.io/gh/requests-cache/aiohttp-client-cache/branch/main/graph/badge.svg?token=i6pnlytilm)](https://codecov.io/gh/requests-cache/aiohttp-client-cache)\n[![pypi](https://img.shields.io/pypi/v/aiohttp-client-cache?color=blue)](https://pypi.org/project/aiohttp-client-cache)\n[![conda](https://img.shields.io/conda/vn/conda-forge/aiohttp-client-cache?color=blue)](https://anaconda.org/conda-forge/aiohttp-client-cache)\n[![pypi - python versions](https://img.shields.io/pypi/pyversions/aiohttp-client-cache)](https://pypi.org/project/aiohttp-client-cache)\n[![pypi - format](https://img.shields.io/pypi/format/aiohttp-client-cache?color=blue)](https://pypi.org/project/aiohttp-client-cache)\n\n**aiohttp-client-cache** is an async persistent cache for [aiohttp](https://docs.aiohttp.org)\nclient requests, based on [requests-cache](https://github.com/reclosedev/requests-cache).\n\n# features\n* **ease of use:** use as a [drop-in replacement](https://aiohttp-client-cache.readthedocs.io/en/stable/user_guide.html)\n  for `aiohttp.clientsession`\n* **customization:** works out of the box with little to no config, but with plenty of options\n  available for customizing cache\n  [expiration](https://aiohttp-client-cache.readthedocs.io/en/stable/user_guide.html#cache-expiration)\n  and other [behavior](https://aiohttp-client-cache.readthedocs.io/en/stable/user_guide.html#cache-options)\n* **persistence:** includes several [storage backends](https://aiohttp-client-cache.readthedocs.io/en/stable/backends.html):\n  sqlite, dynamodb, mongodb, and redis.\n\n# quickstart\nfirst, install with pip (python 3.7+ required):\n```bash\npip install aiohttp-client-cache[all]\n```\n\n**note:**\nadding `[all]` will install optional dependencies for all supported backends. when adding this\nlibrary to your application, you can include only the dependencies you actually need; see individual\nbackend docs and [pyproject.toml](https://github.com/requests-cache/aiohttp-client-cache/blob/main/pyproject.toml)\nfor details.\n\n## basic usage\nnext, use [aiohttp_client_cache.cachedsession](https://aiohttp-client-cache.readthedocs.io/en/stable/modules/aiohttp_client_cache.session.html#aiohttp_client_cache.session.cachedsession)\nin place of [aiohttp.clientsession](https://docs.aiohttp.org/en/stable/client_reference.html#aiohttp.clientsession).\nto briefly demonstrate how to use it:\n\n**replace this:**\n```python\nfrom aiohttp import clientsession\n\nasync with clientsession() as session:\n    await session.get('http://httpbin.org/delay/1')\n```\n\n**with this:**\n```python\nfrom aiohttp_client_cache import cachedsession, sqlitebackend\n\nasync with cachedsession(cache=sqlitebackend('demo_cache')) as session:\n    await session.get('http://httpbin.org/delay/1')\n```\n\nthe url in this example adds a delay of 1 second, simulating a slow or rate-limited website.\nwith caching, the response will be fetched once, saved to `demo_cache.sqlite`, and subsequent\nrequests will return the cached response near-instantly.\n\n## configuration\nseveral options are available to customize caching behavior. this example demonstrates a few of them:\n\n```python\n# fmt: off\nfrom aiohttp_client_cache import sqlitebackend\n\ncache = sqlitebackend(\n    cache_name='~/.cache/aiohttp-requests.db',  # for sqlite, this will be used as the filename\n    expire_after=60*60,                         # by default, cached responses expire in an hour\n    urls_expire_after={'*.fillmurray.com': -1}, # requests for any subdomain on this site will never expire\n    allowed_codes=(200, 418),                   # cache responses with these status codes\n    allowed_methods=['get', 'post'],            # cache requests with these http methods\n    include_headers=true,                       # cache requests with different headers separately\n    ignored_params=['auth_token'],              # keep using the cached response even if this param changes\n    timeout=2.5,                                # connection timeout for sqlite backend\n)\n```\n\n# more info\nto learn more, see:\n* [user guide](https://aiohttp-client-cache.readthedocs.io/en/stable/user_guide.html)\n* [cache backends](https://aiohttp-client-cache.readthedocs.io/en/stable/backends.html)\n* [api reference](https://aiohttp-client-cache.readthedocs.io/en/stable/reference.html)\n* [examples](https://aiohttp-client-cache.readthedocs.io/en/stable/examples.html)\n\n# feedback\nif there is a feature you want, if you've discovered a bug, or if you have other general feedback, please\n[create an issue](https://github.com/requests-cache/aiohttp-client-cache/issues/new/choose) for it!\n",
  "docs_url": null,
  "keywords": "aiohttp,async,asyncio,cache,cache-backends,client,http,persistence,requests,sqlite,redis,mongodb,dynamodb",
  "license": "mit",
  "name": "aiohttp-client-cache",
  "package_url": "https://pypi.org/project/aiohttp-client-cache/",
  "project_url": "https://pypi.org/project/aiohttp-client-cache/",
  "project_urls": {
    "Documentation": "https://aiohttp-client-cache.readthedocs.io",
    "Homepage": "https://github.com/requests-cache/aiohttp-client-cache",
    "Repository": "https://github.com/requests-cache/aiohttp-client-cache"
  },
  "release_url": "https://pypi.org/project/aiohttp-client-cache/0.10.0/",
  "requires_dist": [
    "aiohttp (>=3.8,<4.0)",
    "attrs (>=21.2)",
    "itsdangerous (>=2.0)",
    "url-normalize (>=1.4,<2.0)",
    "aioboto3 (>=9.0) ; extra == \"all\" or extra == \"dynamodb\"",
    "aiobotocore (>=2.0) ; extra == \"all\" or extra == \"dynamodb\"",
    "aiofiles (>=0.6.0) ; extra == \"all\" or extra == \"filesystem\"",
    "aiosqlite (>=0.16) ; extra == \"all\" or extra == \"filesystem\" or extra == \"sqlite\"",
    "motor (>=3.1) ; extra == \"all\" or extra == \"mongodb\"",
    "redis (>=4.2) ; extra == \"all\" or extra == \"redis\"",
    "furo (>=2023.8,<2024.0) ; (python_version >= \"3.8\") and (extra == \"docs\")",
    "linkify-it-py (>=2.0) ; (python_version >= \"3.8\") and (extra == \"docs\")",
    "markdown-it-py (>=2.2) ; (python_version >= \"3.8\") and (extra == \"docs\")",
    "myst-parser (>=2.0) ; (python_version >= \"3.8\") and (extra == \"docs\")",
    "python-forge (>=18.6,<19.0) ; (python_version >= \"3.8\") and (extra == \"docs\")",
    "sphinx (==7.1.2) ; (python_version >= \"3.8\") and (extra == \"docs\")",
    "sphinx-automodapi (>=0.15) ; (python_version >= \"3.8\") and (extra == \"docs\")",
    "sphinx-autodoc-typehints (>=1.23,<2.0) ; (python_version >= \"3.8\") and (extra == \"docs\")",
    "sphinx-copybutton (>=0.3,<0.4) ; (python_version >= \"3.8\") and (extra == \"docs\")",
    "sphinx-inline-tabs (>=2023.4) ; (python_version >= \"3.8\") and (extra == \"docs\")",
    "sphinxcontrib-apidoc (>=0.3) ; (python_version >= \"3.8\") and (extra == \"docs\")"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "persistent cache for aiohttp requests",
  "version": "0.10.0",
  "releases": [],
  "developers": [
    "jordan_cook"
  ],
  "kwds": "aiohttp_client_cache dynamodb aiohttp cache io",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_aiohttp_client_cache",
  "homepage": "https://github.com/requests-cache/aiohttp-client-cache",
  "release_count": 30,
  "dependency_ids": [
    "pypi_aioboto3",
    "pypi_aiobotocore",
    "pypi_aiofiles",
    "pypi_aiohttp",
    "pypi_aiosqlite",
    "pypi_attrs",
    "pypi_furo",
    "pypi_itsdangerous",
    "pypi_linkify_it_py",
    "pypi_markdown_it_py",
    "pypi_motor",
    "pypi_myst_parser",
    "pypi_python_forge",
    "pypi_redis",
    "pypi_sphinx",
    "pypi_sphinx_autodoc_typehints",
    "pypi_sphinx_automodapi",
    "pypi_sphinx_copybutton",
    "pypi_sphinx_inline_tabs",
    "pypi_sphinxcontrib_apidoc",
    "pypi_url_normalize"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "intended audience :: system administrators",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "olefile (formerly olefileio\\_pl)\n================================\n\n`olefile <http://www.decalage.info/olefile>`_ is a python package to\nparse, read and write `microsoft ole2\nfiles <http://en.wikipedia.org/wiki/compound_file_binary_format>`_ (also\ncalled structured storage, compound file binary format or compound\ndocument file format), such as microsoft office 97-2003 documents,\nvbaproject.bin in ms office 2007+ files, image composer and flashpix\nfiles, outlook messages, stickynotes, several microscopy file formats,\nmcafee antivirus quarantine files, etc.\n\n**quick links:** `home page <http://www.decalage.info/olefile>`_ -\n`download/install <https://bitbucket.org/decalage/olefileio_pl/wiki/install>`_\n- `documentation <https://bitbucket.org/decalage/olefileio_pl/wiki>`_ -\n`report\nissues/suggestions/questions <https://bitbucket.org/decalage/olefileio_pl/issues?status=new&status=open>`_\n- `contact the author <http://decalage.info/contact>`_ -\n`repository <https://bitbucket.org/decalage/olefileio_pl>`_ - `updates\non twitter <https://twitter.com/decalage2>`_\n\nnews\n----\n\nfollow all updates and news on twitter: https://twitter.com/decalage2\n\n-  **2015-01-25 v0.42**: improved handling of special characters in\n   stream/storage names on python 2.x (using utf-8 instead of latin-1),\n   fixed bug in listdir with empty storages.\n-  2014-11-25 v0.41: olefileio.open and isolefile now support ole files\n   stored in byte strings, fixed installer for python 3, added support\n   for jython (niko ehrenfeuchter)\n-  2014-10-01 v0.40: renamed olefileio\\_pl to olefile, added initial\n   write support for streams >4k, updated doc and license, improved the\n   setup script.\n-  2014-07-27 v0.31: fixed support for large files with 4k sectors,\n   thanks to niko ehrenfeuchter, martijn berger and dave jones. added\n   test scripts from pillow (by hugovk). fixed setup for python 3\n   (martin panter)\n-  2014-02-04 v0.30: now compatible with python 3.x, thanks to martin\n   panter who did most of the hard work.\n-  2013-07-24 v0.26: added methods to parse stream/storage timestamps,\n   improved listdir to include storages, fixed parsing of direntry\n   timestamps\n-  2013-05-27 v0.25: improved metadata extraction, properties parsing\n   and exception handling, fixed `issue\n   #12 <https://bitbucket.org/decalage/olefileio_pl/issue/12/error-when-converting-timestamps-in-ole>`_\n-  2013-05-07 v0.24: new features to extract metadata (get\\_metadata\n   method and olemetadata class), improved getproperties to convert\n   timestamps to python datetime\n-  2012-10-09: published\n   `python-oletools <http://www.decalage.info/python/oletools>`_, a\n   package of analysis tools based on olefileio\\_pl\n-  2012-09-11 v0.23: added support for file-like objects, fixed `issue\n   #8 <https://bitbucket.org/decalage/olefileio_pl/issue/8/bug-with-file-object>`_\n-  2012-02-17 v0.22: fixed issues #7 (bug in getproperties) and #2\n   (added close method)\n-  2011-10-20: code hosted on bitbucket to ease contributions and bug\n   tracking\n-  2010-01-24 v0.21: fixed support for big-endian cpus, such as powerpc\n   macs.\n-  2009-12-11 v0.20: small bugfix in olefileio.open when filename is not\n   plain str.\n-  2009-12-10 v0.19: fixed support for 64 bits platforms (thanks to ben\n   g. and martijn for reporting the bug)\n-  see changelog in source code for more info.\n\ndownload/install\n----------------\n\nif you have pip or setuptools installed (pip is included in python\n2.7.9+), you may simply run **pip install olefile** or **easy\\_install\nolefile** for the first installation.\n\nto update olefile, run **pip install -u olefile**.\n\notherwise, see https://bitbucket.org/decalage/olefileio\\_pl/wiki/install\n\nfeatures\n--------\n\n-  parse, read and write any ole file such as microsoft office 97-2003\n   legacy document formats (word .doc, excel .xls, powerpoint .ppt,\n   visio .vsd, project .mpp), image composer and flashpix files, outlook\n   messages, stickynotes, zeiss axiovision zvi files, olympus fluoview\n   oib files, etc\n-  list all the streams and storages contained in an ole file\n-  open streams as files\n-  parse and read property streams, containing metadata of the file\n-  portable, pure python module, no dependency\n\nolefile can be used as an independent package or with pil/pillow.\n\nolefile is mostly meant for developers. if you are looking for tools to\nanalyze ole files or to extract data (especially for security purposes\nsuch as malware analysis and forensics), then please also check my\n`python-oletools <http://www.decalage.info/python/oletools>`_, which are\nbuilt upon olefile and provide a higher-level interface.\n\nhistory\n-------\n\nolefile is based on the olefileio module from\n`pil <http://www.pythonware.com/products/pil/index.htm>`_, the excellent\npython imaging library, created and maintained by fredrik lundh. the\nolefile api is still compatible with pil, but since 2005 i have improved\nthe internal implementation significantly, with new features, bugfixes\nand a more robust design. from 2005 to 2014 the project was called\nolefileio\\_pl, and in 2014 i changed its name to olefile to celebrate\nits 9 years and its new write features.\n\nas far as i know, olefile is the most complete and robust python\nimplementation to read ms ole2 files, portable on several operating\nsystems. (please tell me if you know other similar python modules)\n\nsince 2014 olefile/olefileio\\_pl has been integrated into\n`pillow <http://python-imaging.github.io/>`_, the friendly fork of pil.\nolefile will continue to be improved as a separate project, and new\nversions will be merged into pillow regularly.\n\nmain improvements over the original version of olefileio in pil:\n----------------------------------------------------------------\n\n-  compatible with python 3.x and 2.6+\n-  many bug fixes\n-  support for files larger than 6.8mb\n-  support for 64 bits platforms and big-endian cpus\n-  robust: many checks to detect malformed files\n-  runtime option to choose if malformed files should be parsed or raise\n   exceptions\n-  improved api\n-  metadata extraction, stream/storage timestamps (e.g. for document\n   forensics)\n-  can open file-like objects\n-  added setup.py and install.bat to ease installation\n-  more convenient slash-based syntax for stream paths\n-  write features\n\ndocumentation\n-------------\n\nplease see the `online\ndocumentation <https://bitbucket.org/decalage/olefileio_pl/wiki>`_ for\nmore information, especially the `ole\noverview <https://bitbucket.org/decalage/olefileio_pl/wiki/ole_overview>`_\nand the `api\npage <https://bitbucket.org/decalage/olefileio_pl/wiki/api>`_ which\ndescribe how to use olefile in python applications. a copy of the same\ndocumentation is also provided in the doc subfolder of the olefile\npackage.\n\nreal-life examples\n------------------\n\na real-life example: `using olefileio\\_pl for malware analysis and\nforensics <http://blog.gregback.net/2011/03/using-remnux-for-forensic-puzzle-6/>`_.\n\nsee also `this\npaper <https://computer-forensics.sans.org/community/papers/gcfa/grow-forensic-tools-taxonomy-python-libraries-helpful-forensic-analysis_6879>`_\nabout python tools for forensics, which features olefile.\n\nlicense\n-------\n\nolefile (formerly olefileio\\_pl) is copyright (c) 2005-2015 philippe\nlagadec (`http://www.decalage.info <http://www.decalage.info>`_)\n\nall rights reserved.\n\nredistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n-  redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n-  redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nthis software is provided by the copyright holders and contributors \"as\nis\" and any express or implied warranties, including, but not limited\nto, the implied warranties of merchantability and fitness for a\nparticular purpose are disclaimed. in no event shall the copyright\nholder or contributors be liable for any direct, indirect, incidental,\nspecial, exemplary, or consequential damages (including, but not limited\nto, procurement of substitute goods or services; loss of use, data, or\nprofits; or business interruption) however caused and on any theory of\nliability, whether in contract, strict liability, or tort (including\nnegligence or otherwise) arising in any way out of the use of this\nsoftware, even if advised of the possibility of such damage.\n\n--------------\n\nolefile is based on source code from the olefileio module of the python\nimaging library (pil) published by fredrik lundh under the following\nlicense:\n\nthe python imaging library (pil) is\n\n-  copyright (c) 1997-2005 by secret labs ab\n-  copyright (c) 1995-2005 by fredrik lundh\n\nby obtaining, using, and/or copying this software and/or its associated\ndocumentation, you agree that you have read, understood, and will comply\nwith the following terms and conditions:\n\npermission to use, copy, modify, and distribute this software and its\nassociated documentation for any purpose and without fee is hereby\ngranted, provided that the above copyright notice appears in all copies,\nand that both that copyright notice and this permission notice appear in\nsupporting documentation, and that the name of secret labs ab or the\nauthor not be used in advertising or publicity pertaining to\ndistribution of the software without specific, written prior permission.\n\nsecret labs ab and the author disclaims all warranties with regard to\nthis software, including all implied warranties of merchantability and\nfitness. in no event shall secret labs ab or the author be liable for\nany special, indirect or consequential damages or any damages whatsoever\nresulting from loss of use, data or profits, whether in an action of\ncontract, negligence or other tortious action, arising out of or in\nconnection with the use or performance of this software.",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "olefileio_pl",
  "package_url": "https://pypi.org/project/OleFileIO_PL/",
  "project_url": "https://pypi.org/project/OleFileIO_PL/",
  "project_urls": {
    "Download": "https://bitbucket.org/decalage/olefileio_pl/downloads",
    "Homepage": "http://www.decalage.info/python/olefileio"
  },
  "release_url": "https://pypi.org/project/OleFileIO_PL/0.42.1/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "python package to parse, read and write microsoft ole2 files (structured storage or compound document, microsoft office) - improved version of the olefileio module from pil, the python image library.",
  "version": "0.42.1",
  "releases": [],
  "developers": [
    "http",
    "philippe_lagadec"
  ],
  "kwds": "olefile compound_file_binary_format ole2 ole_overview oletools",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_olefileio_pl",
  "homepage": "http://www.decalage.info/python/olefileio",
  "release_count": 13,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "py3o.template\n*************\n\n.. image:: https://drone-ci.xcg.io/api/badges/faide/py3o.template/status.svg\n  :target: https://drone-ci.xcg.io/faide/py3o.template\n  :alt: build status\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n  :target: https://github.com/ambv/black\n  :alt: code style: black\n\nintroduction\n============\n\npy3o is an elegant and scalable solution to design reports using libreoffice.\npy3o.template is the templating component that takes care of\nmerging your data sets with a corresponding templated openoffice document.\n\nit is plateform independent and does not require libreoffice/openoffice itself\nto generate an odf file.\n\nsupported python versions: 2.7, >= 3.5.\n\nthis work was originally inspired by `relatorio`_ and diverged in\nimplementation, scope and ambitions. relatorio has many more features\nwhen py3o.template is mainly focused on odt, ods and text output.\n\nif you want to generate a pdf or any other supported output format you will then\nneed to have a server with either libreoffice or openoffice and to install\nthe `py3o.renderserver`_ on it. we also provide a docker image on\nthe `docker hub`_\n\nif you want to have templating fusion & document conversion in one\nsingle web service usable from any language with just http/post you can install\n`py3o.fusion`_ server. which also exists as a `docker image`_\n\nfull documentation\n==================\n\nwe `provide a documentation`_ for this package. if anything is not correctly\nexplained, please! create a ticket `in our ticketing system`_\n\ndocs also contain a \"hacking\" part for contributors (how tests are run, code\nstyle...).\n\nexample usage\n=============\n\nbelow is an example that you can find in the source code inside the examples\ndirectory.\n\n::\n\n    from py3o.template import template\n\n    t = template(\"py3o_example_template.odt\", \"py3o_example_output.odt\")\n\n    t.set_image_path('staticimage.logo', 'images/new_logo.png')\n\n\n    class item(object):\n        pass\n\n    items = list()\n\n    item1 = item()\n    item1.val1 = 'item1 value1'\n    item1.val2 = 'item1 value2'\n    item1.val3 = 'item1 value3'\n    item1.currency = 'eur'\n    item1.amount = '12345.35'\n    item1.invoiceref = '#1234'\n    items.append(item1)\n\n    for i in xrange(1000):\n        item = item()\n        item.val1 = 'item%s value1' % i\n        item.val2 = 'item%s value2' % i\n        item.val3 = 'item%s value3' % i\n        item.currency = 'eur'\n        item.amount = '6666.77'\n        item.invoiceref = 'reference #%04d' % i\n        items.append(item)\n\n    document = item()\n    document.total = '9999999999999.999'\n\n    data = dict(items=items, document=document)\n    t.render(data)\n\n\nchangelog\n=========\n\n\n0.10.0 2019-03-15\n-----------------\n\n  - save embedded images into \"pictures\" directory to work with lowriter>=6.0\n\n  - rely on `babel`_ to format dates & numbers from now on.\n\n    -> ``format_date`` has been deprecated in favor of the new\n       ``format_datetime``. format specifiers change as well; see the\n       \"templating\" doc. example (more in docs)::\n\n        function=\"format_datetime('2015-08-02 17:05:06', format='full', locale='fr_fr')\"\n            -> dimanche 2 ao\u00fbt 2015 \u00e0 17:05:06 temps universel coordonn\u00e9\n\n    -> ``format_amount`` & ``format_locale`` have been deprecated in favor of\n       the new ``format_currency``. example (more in the \"templating\" doc)::\n\n        function=\"format_currency(123456789.4242, 'eur', locale='fr_fr')\"\n            -> 123 456 789,42 \u20ac\n\n  - re-enable python 3 in our test suite now that a recent ``genshi`` has been\n    released.\n\n\n0.9.13 2018-07-03\n-----------------\n  - added a new format_locale function to supersed the format_amount\n  - keep aspect ratio of image if no width or height is given (thanks to\n    tom gottfried)\n  - fix generated value formula, if the genshi expressions generates a number\n    value (float or integer), the generated formula will be `=value(\"1.1\")`\n    which is problematic if the user machine is configured to use a decimal\n    separator different than the `.`. with this fix the generated formula will\n    be `=value(1.1)` (without the quotes) which is correctly handled with\n    by the `.ods` format. (thanks to zakaria makrelouf)\n  - improve error message 'we handle urls in tables or text paragraph only'\n    (thanks to alexis de lattre)\n  - add format_multiline for support of new lines (thanks to john asplin)\n\n\n0.9.12 2018-04-11\n-----------------\n\n  - better error reporting for cases when the link is not positionned\n    on its own line.\n  - better error reporting for cases when an instruction link does not contain\n    the equal sign.\n  - correct handling of images in odf 1.2 (thanks to ari caldeira)\n  - now support text:span in functions (thanks to john asplin)\n\n0.9.11 dec. 16 2016\n-------------------\n\n  - added support for escaping false values. values evaluated as false are\n    replaced with an empty string during template rendering. this\n    functionality is disabled by default and can be enabled with a new\n    parameter on the template object.\n\n\n0.9.10 oct. 3 2016\n------------------\n\n  - fixed a packaging issue (genshi requirement was unintentionally\n    dropped in last release)\n  - added more tests\n  - added more support for types formatting\n\n0.9.9 apr. 13 2016\n------------------\n\n  - template parser: fix multiple loops on the same list of objects\n  - template parser: fix multiple for loops on a variable that corresponds to a\n    name (and not an attribute) in the data source.\n  - template parser: when parsing for loops, extract the iterator even when the\n    assigned variables are not used anywhere in the body.\n  - template parser: now works with ods templates.\n  - template parser: fix a bug when parsing an unknown ast expression.\n  - template parser: manage tuple, list and set literals.\n  - template parser: improve the parsing of loops where the iterator is a\n    function.\n  - template parser: implement specific iteration behavior for enumerate.\n    the second unpacked variable is linked to the function argument, as if\n    the latter was used as the iterable object for the loop.\n  - image injection: fix an exception that was raided when the image is\n    not present in the data dictionary, even when it shouldn't\n    (template initialized with ignore_undefined_variables=true)\n  - 100 % coverage, with many new unit tests and fixes on the old ones.\n\n0.9.7.1 feb. 19 2016\n~~~~~~~~~~~~~~~~~~~~\n\n  - this release fix a bug in the formatting function format_date where\n    unicode date strings were not correctly managed.\n\n0.9.7 dec. 8 2015\n~~~~~~~~~~~~~~~~~\n\n  - this release focuses on the parser. if you\n    don't use the template parser you can skip this release as it does not\n    change anything else.\n  - fix a bug where the body of the if blocks were not evaluated\n    by the parser\n  - refactoring tests for clearer reading\n  - fix some missing/untested functions\n  - remove notimplementederror from coverage\n\n0.9.6 nov. 20 2015\n~~~~~~~~~~~~~~~~~~\n\n  - fixed formatting function\n  - fixed if=\"\" functionality that was not correctly parsed\n  - display empty string instead of \"false\" when browsing relational field\n  - code formatting in the ast parser\n\n0.9.5 oct. 30 2015\n~~~~~~~~~~~~~~~~~~\n\n  - 0.9.5 is just a rerelease of 0.9.4 with this readme correctly\n    amended...\n\n  - added support for formatting functions in the template in\n    order to control date number localization\n  - added reference to original inspiration in the readme\n  - added example source code for ods output.\n  - fixed a memory usage in case of big output file size that\n    was introduced by the dynamic image feature.\n  - introduced an experimental texttemplate\n  - fixed support for special cases where page breaks removals\n    removed trailing text (thanks to agix)\n\n0.9.3 jun. 26 2015\n~~~~~~~~~~~~~~~~~~\n\n  - introduced dynamic image support (ie: pass in image data in the input\n    iterator) and use it to insert images on the fly in the report)\n\n0.9.2 jun. 26 2015\n~~~~~~~~~~~~~~~~~~\n\n  - warning: if you used the old image replacement system, you\n    need to update your code to set static image from this::\n\n      # old way\n      t.set_image_path('logo', 'images/new_logo.png')\n\n      # you should now set it like this instead\n\n      # new way. note the 'staticimage.' prefix added just before 'logo'\n      t.set_image_path('staticimage.logo', 'images/new_logo.png')\n\n  - warning: after updating your code you must also update your template\n    to prefix your static images names with the 'staticimage.' prefix.\n\n  - added dynamic images support. you can now add images instructions inside\n    for loops or anywhere in your templates and pass the image data\n    inside your objects attributes.\n  - added support for image data (dynamic ones) being passed-in as base64\n    data. this is useful for some clients like `odoo's report_py3o`_ because\n    they store image data as base64 encoded fields.\n\n.. _odoo's report_py3o: https://bitbucket.org/xcg/report_py3o\n\n0.9.1 jun. 3 2015\n~~~~~~~~~~~~~~~~~\n\n  - fixed parser to read from the var name instead of its description,\n    if you dont use the helper tool to introspect your reports this release\n    is of no importance to you as it only fixes this particular point.\n\n0.9 jan. 8 2015\n~~~~~~~~~~~~~~~~\n\n  - added support for soft page breaks\n\n\n0.8 nov. 19 2014\n~~~~~~~~~~~~~~~~\n\n  - added better unit tests\n  - fixed corner cases in the variable introspection mechanism\n  - better handling of \"ignore_undefined\" that now also allows undefined images\n\n0.7 oct. 15 2014\n~~~~~~~~~~~~~~~~\n\n  - added python3 support\n  - fixed a problem with validity of output in case the template contains\n    a text:list inside a for loop\n  - added new public methods to help report servers introspect the template\n    data dictionary\n  - added real unit tests (96% coverage atm, way to go test team!)\n\ncontributors\n============\n\nby order of contribution date:\n\n  - `florent aide`_\n  - `emmanuel cazenave`_\n  - `jon1012`_\n  - `eugene morozov`_\n  - `houz\u00e9fa abbasbay`_\n  - `torsten irl\u00e4nder`_\n  - `sergey fedoseev`_\n  - `vincent lhote-hatakeyama`_\n  - `anael lorimier`_\n  - `bj\u00f6rn ricks`_\n  - `agix`_\n  - `j\u00e9r\u00e9mie gavrel`_\n  - `laurent mignon`_\n  - `alexis de lattre`_\n  - `josdegraeve`_\n  - `antoine nguyen`_\n  - `ari caldeira`_\n  - `john asplin`_\n  - `zakaria makrelouf`_\n  - `tom gottfried`_\n\n.. _florent aide: https://bitbucket.org/faide\n.. _emmanuel cazenave: https://bitbucket.org/cazino\n.. _jon1012: https://bitbucket.org/jon1012\n.. _eugene morozov: https://bitbucket.org/mojo\n.. _houz\u00e9fa abbasbay: https://bitbucket.org/houzefa-abba\n.. _torsten irl\u00e4nder: https://bitbucket.org/ti\n.. _sergey fedoseev: https://bitbucket.org/sir_sigurd\n.. _vincent lhote-hatakeyama: https://bitbucket.org/vincent_lhote\n.. _anael lorimier: https://bitbucket.org/alorimier\n.. _bj\u00f6rn ricks: https://bitbucket.org/bjoernricks\n.. _agix: https://bitbucket.org/agix\n.. _j\u00e9r\u00e9mie gavrel: https://bitbucket.org/gavrelj\n.. _laurent mignon: https://bitbucket.org/lmi\n.. _alexis de lattre: https://github.com/alexis-via\n.. _josdegraeve: https://bitbucket.org/josdegraeve\n.. _antoine nguyen: https://github.com/tonioo\n.. _ari caldeira: https://bitbucket.org/ari_tauga\n.. _john asplin: https://bitbucket.org/asplinsolutions\n.. _zakaria makrelouf https://bitbucket.org/z_makrelouf/\n.. _tom gottfried https://bitbucket.org/tfried/\n\n.. _py3o.renderserver: https://bitbucket.org/faide/py3o.renderserver/\n.. _provide a documentation: http://py3otemplate.readthedocs.org\n.. _in our ticketing system: https://bitbucket.org/faide/py3o.template/issues?status=new&status=open\n.. _docker hub: https://registry.hub.docker.com/u/xcgd/py3oserver-docker/\n.. _py3o.fusion: https://bitbucket.org/faide/py3o.fusion\n.. _docker image: https://registry.hub.docker.com/u/xcgd/py3o.fusion\n.. _relatorio: http://relatorio.tryton.org/\n.. _babel: http://babel.pocoo.org\n\n\n",
  "docs_url": null,
  "keywords": "libreoffice openoffice templating pdf",
  "license": "mit license",
  "name": "py3o.template",
  "package_url": "https://pypi.org/project/py3o.template/",
  "project_url": "https://pypi.org/project/py3o.template/",
  "project_urls": {
    "Homepage": "http://bitbucket.org/faide/py3o.template"
  },
  "release_url": "https://pypi.org/project/py3o.template/0.10.0/",
  "requires_dist": [
    "Pillow",
    "babel",
    "genshi (>=0.7)",
    "lxml",
    "pyjon.utils (>0.6)",
    "setuptools",
    "six (>=1.9)"
  ],
  "requires_python": "",
  "summary": "an easy solution to design reports using libreoffice",
  "version": "0.10.0",
  "releases": [],
  "developers": [
    "florent.aide@gmail.com",
    "florent_aide"
  ],
  "kwds": "libreoffice openoffice odf py3o_example_template template",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_py3o.template",
  "homepage": "http://bitbucket.org/faide/py3o.template",
  "release_count": 24,
  "dependency_ids": [
    "pypi_babel",
    "pypi_genshi",
    "pypi_lxml",
    "pypi_pillow",
    "pypi_pyjon.utils",
    "pypi_setuptools",
    "pypi_six"
  ]
}
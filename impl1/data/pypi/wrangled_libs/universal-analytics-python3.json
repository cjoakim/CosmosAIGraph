{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# universal analytics for python\n\n[![build status](https://travis-ci.com/dmvass/universal-analytics-python3.svg?branch=master)](https://travis-ci.com/dmvass/universal-analytics-python3)\n[![image](https://img.shields.io/pypi/v/universal-analytics-python3.svg)](https://pypi.python.org/pypi/universal-analytics-python3)\n[![codecov](https://codecov.io/gh/dmvass/universal-analytics-python3/branch/master/graph/badge.svg)](https://codecov.io/gh/dmvass/universal-analytics-python3)\n[![license](https://img.shields.io/badge/license-mit-blue.svg)](https://github.com/dmvass/universal-analytics-python3/blob/master/license)\n\nit's a fork of [universal-analytics-python](https://github.com/adswerve/universal-analytics-python)\nwhith support for python 3, batch requests, synchronous and asynchronous api calls.\n\nthis library provides a python interface to google analytics, supporting the\nuniversal analytics measurement protocol, with an interface modeled (loosely)\nafter google's `analytics.js`.\n\n**note** this project is reasonably feature-complete for most use-cases, covering\nall relevant features of the measurement protocol, however we still consider it\n_beta_. please feel free to file issues for feature requests.\n\n## installation\n\nthe easiest way to install universal-analytics is directly from pypi using `pip`\nby running the following command:\n\n```bash\npip install universal-analytics-python3\n```\n\n## usage\n\nfor the most accurate data in your reports, analytics pros recommends establishing\na distinct id for each of your users, and integrating that id on your front-end web\ntracking, as well as back-end tracking calls. this provides for a consistent, correct\nrepresentation of user engagement, without skewing overall visit metrics (and others).\n\na simple example for synchronous usage:\n\n```python\nfrom universal_analytics import tracker, httprequest, httpbatchrequest\n\nwith httprequest() as http:\n    tracker = tracker(\"ua-xxxxx-y\", http, client_id=\"unique-id\")\n    tracker.send(\"event\", \"subscription\", \"billing\")\n\nwith httpbatchrequest() as http:\n    tracker = tracker(\"ua-xxxxx-y\", http, client_id=\"unique-id\")\n    tracker.send(\"event\", \"subscription\", \"billing\")\n```\n\na simple example for asynchronous usage:\n\n```python\nimport asyncio\nfrom universal_analytics import tracker, asynchttprequest, asynchttpbatchrequest\n\nasync def main():\n    async with asynchttprequest() as http:\n        tracker = tracker(\"ua-xxxxx-y\", http, client_id=\"unique-id\")\n        await tracker.send(\"event\", \"subscription\", \"billing\")\n\n    async with asynchttpbatchrequest() as http:\n        tracker = tracker(\"ua-xxxxx-y\", http, client_id=\"unique-id\")\n        await tracker.send(\"event\", \"subscription\", \"billing\")\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n```\n\nthis library support the following tracking types, with corresponding (optional) arguments:\n\n* pageview: [ page path ]\n* event: category, action, [ label [, value ] ]\n* social: network, action [, target ]\n* timing: category, variable, time [, label ]\n\nadditional tracking types supported with property dictionaries:\n\n* transaction\n* item\n* screenview\n* exception\n\nproperty dictionaries permit the same naming conventions given in the [analytics.js field reference](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference),\nwith the addition of common spelling variations, abbreviations, and hyphenated names\n(rather than camel-case).\n\nfurther, the property dictionaries support names as per the [measurement protocol parameter reference](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters),\nand properties/parameters can be passed as named arguments.\n\nexample:\n\n```python\n# as python named-arguments\ntracker.send(\"pageview\", path=\"/test\", title=\"test page\")\n\n# as property dictionary\ntracker.send(\"pageview\", {\"path\": \"/test\", \"title\": \"test page\"})\n```\n\nserver-side experiments:\n\n```python\n# set the experiment id and variation id\ntracker.set(\"exp\", \"$experimentid.$variationid\")\n\n# send a pageview hit to google analytics\ntracker.send(\"pageview\", path=\"/test\", title=\"test page\")\n```\n\n## license\n\nthis code is distributed under the terms of the mit license.\n\n## changes\n\na full changelog is maintained in the [changelog](https://github.com/dmvass/universal-analytics-python3/blob/master/changelog.md) file.\n\n## contributing\n\n**universal-analytics-python3** is an open source project and contributions are\nwelcome! check out the [issues](https://github.com/dmvass/universal-analytics-python3/issues)\npage to see if your idea for a contribution has already been mentioned, and feel\nfree to raise an issue or submit a pull request.\n\n\n",
  "docs_url": null,
  "keywords": "python,analytics,google-analytics",
  "license": "",
  "name": "universal-analytics-python3",
  "package_url": "https://pypi.org/project/universal-analytics-python3/",
  "project_url": "https://pypi.org/project/universal-analytics-python3/",
  "project_urls": {
    "Homepage": "https://github.com/dmvass/universal-analytics-python3"
  },
  "release_url": "https://pypi.org/project/universal-analytics-python3/1.1.1/",
  "requires_dist": [
    "httpx (>=0.10.0)"
  ],
  "requires_python": "",
  "summary": "universal analytics python library",
  "version": "1.1.1",
  "releases": [],
  "developers": [
    "dmitri_vasilishin",
    "vasilishin.d.o@gmail.com"
  ],
  "kwds": "universal_analytics analyticsjs analytics badge python3",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_universal_analytics_python3",
  "homepage": "https://github.com/dmvass/universal-analytics-python3",
  "release_count": 5,
  "dependency_ids": [
    "pypi_httpx"
  ]
}
{
  "libtype": "pypi",
  "libname": "xlutils",
  "url": "http://www.python-excel.org",
  "html": "<!DOCTYPE html><html lang=\"en\"><head>          <title>Python Resources for working with Excel - Working with Excel Files in Python</title>        <meta charset=\"utf-8\" />        <meta name=\"generator\" content=\"Pelican\" />        <link rel=\"stylesheet\" href=\"./theme/css/style.min.css?014e7e65\"></head><body id=\"index\" class=\"home\">    <div class=\"content\">        <nav id=\"menu\"><ul>        </ul></nav><!-- /#menu -->    <h1>Working with Excel Files in Python</h1>        <p>This site contains pointers to the best information available about working with <a href=\"https://products.office.com/en-us/excel\">Excel</a> files in the <a href=\"https://www.python.org/\">Python</a> programming language.</p><h2>Reading and Writing Excel Files</h2><p>There are python packages available to work with Excel files that will run on any Python platform and that do not require either Windows or Excel to be used. They are fast, reliable and open source:</p><h3>openpyxl</h3><p>The recommended package for reading and writing Excel 2010 files (ie: .xlsx)</p><p><a href=\"https://pypi.python.org/pypi/openpyxl\">Download</a> | <a href=\"https://openpyxl.readthedocs.org/\">Documentation</a> | <a href=\"https://bitbucket.org/openpyxl/openpyxl\">Bitbucket</a></p><h3>xlsxwriter</h3><p>An alternative package for writing data, formatting information and, in particular, charts in the Excel 2010 format (ie: .xlsx)</p><p><a href=\"https://pypi.python.org/pypi/XlsxWriter\">Download</a> | <a href=\"https://xlsxwriter.readthedocs.org/\">Documentation</a> | <a href=\"https://github.com/jmcnamara/XlsxWriter\">GitHub</a></p><h3>pyxlsb</h3><p>This package allows you to read Excel files in the <code>xlsb</code> format.</p><p><a href=\"https://pypi.org/project/pyxlsb\">Download</a> | <a href=\"https://github.com/willtrnr/pyxlsb\">GitHub</a></p><h3>pylightxl</h3><p>This package allows you to read <code>xlsx</code> and <code>xlsm</code> files and write <code>xlsx</code> files.</p><p><a href=\"https://pypi.org/project/pylightxl\">Download</a> | <a href=\"https://pylightxl.readthedocs.io/en/latest/\">Documentation</a> | <a href=\"https://github.com/PydPiper/pylightxl\">GitHub</a></p><h3>xlrd</h3><p>This package is for reading data and formatting information from older Excel files (ie: .xls)</p><p><a href=\"https://pypi.python.org/pypi/xlrd\">Download</a> | <a href=\"http://xlrd.readthedocs.io/en/latest/\">Documentation</a> | <a href=\"https://github.com/python-excel/xlrd\">GitHub</a></p><h3>xlwt</h3><p>This package is for writing data and formatting information to older Excel files (ie: .xls)</p><p><a href=\"https://pypi.python.org/pypi/xlwt\">Download</a> | <a href=\"http://xlwt.readthedocs.io/en/latest/\">Documentation</a> | <a href=\"https://github.com/python-excel/xlwt/tree/master/examples\">Examples</a> | <a href=\"https://github.com/python-excel/xlwt\">GitHub</a></p><h3>xlutils</h3><p>This package collects utilities that require both <code>xlrd</code> and <code>xlwt</code>, including the ability to copy and modify or filter existing excel files.</p><p><em><strong>NB:</strong> In general, these use cases are now covered by openpyxl!</em></p><p><a href=\"https://pypi.python.org/pypi/xlutils\">Download</a> | <a href=\"http://xlutils.readthedocs.io/en/latest/\">Documentation</a> | <a href=\"https://github.com/python-excel/xlutils\">GitHub</a></p><h2>Writing Excel Add-Ins</h2><p>The following products can be used to write Excel add-ins in Python. Unlike the reader and writer packages, they require an installation of Microsoft Excel.</p><h3>PyXLL</h3><p>PyXLL is a commercial product that enables writing Excel add-ins in Python with no VBA. Python functions can be exposed asworksheet functions (UDFs), macros, menus and ribbon tool bars.</p><p><a href=\"https://www.pyxll.com\">Homepage</a> | <a href=\"https://www.pyxll.com/features.html\">Features</a> | <a href=\"https://www.pyxll.com/docs/index.html\">Documentation</a> | <a href=\"https://www.pyxll.com/download.html\">Download</a></p><h3>xlwings</h3><p>xlwings is an open-source library to automate Excel with Python instead of VBA and works on Windows and macOS: you can call Python from Excel and vice versa and write UDFs in Python (Windows only). xlwings PRO is a commercial add-on with additional functionality.</p><p><a href=\"https://www.xlwings.org\">Homepage</a> | <a href=\"https://docs.xlwings.org/en/stable/\">Documentation</a> | <a href=\"https://github.com/xlwings/xlwings\">GitHub</a> | <a href=\"https://pypi.org/project/xlwings/\">Download</a></p><h2>The Mailing List / Discussion Group</h2><p>There is a <a href=\"https://groups.google.com/group/python-excel\">Google Group</a> dedicated to working with Excel files in Python, including the libraries listed above along with manipulating the Excel application via COM. </p><h2>Commercial Development</h2><p>The following companies can provide commercial software development and consultancy and are specialists in working with Excel files in Python:</p><div class=\"affiliate-links\"></div><table><thead><tr><th><a href=\"http://www.clark-consulting.eu/\"><img alt=\"Clark Consulting &amp; Research\" src=\"images/ccr_python_excel.png\"></a></th></tr></thead><tbody><tr><td><a href=\"http://www.clark-consulting.eu/\">Clark Consulting &amp; Research</a></td></tr></tbody></table>    </div>    <div class=\"footer\">        <footer id=\"contentinfo\" class=\"body\">                <address id=\"about\" class=\"vcard body\">                Proudly powered by <a href=\"https://getpelican.com/\">Pelican</a>,                which takes great advantage of <a href=\"https://www.python.org/\">Python</a>.                </address><!-- /#about -->        </footer><!-- /#contentinfo -->    </div></body></html>",
  "embeddings": []
}
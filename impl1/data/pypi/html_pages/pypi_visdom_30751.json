{
  "libtype": "pypi",
  "libname": "visdom",
  "url": "https://pypi.org/project/visdom/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>visdom \u00b7 PyPI</title>    <meta name=\"description\" content=\"A tool for visualizing live, rich data for Torch and Numpy\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for visdom\" href=\"/rss/project/visdom/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/visdom/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/visdom/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"visdom\">    <meta property=\"og:description\" content=\"A tool for visualizing live, rich data for Torch and Numpy\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/facebookresearch/visdom\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:facebookresearch/visdom+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        visdom 0.2.4      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install visdom</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/visdom/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2023-02-08T17:42:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 8, 2023</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/visdom\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">A tool for visualizing live, rich data for Torch and Numpy</p><div data-html-include=\"/_includes/edit-project-button/visdom\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for visdom\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/facebookresearch/visdom\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/visdom\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> Apache-2.0</p>    <p><strong>Author:</strong> <a href=\"mailto:jju@fb.com\">Jack Urbanek, Allan Jabri, Laurens van der Maaten</a></p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/ajabri/\" aria-label=\"ajabri\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/2297ab7869e0b72d644a9a4143d862f0cadc0110/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f62393066653364316466663962313331353866376538623138326530393130333f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for ajabri from gravatar.com\" title=\"Avatar for ajabri from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            ajabri          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/fossasia/\" aria-label=\"fossasia\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/404ad13b3f03d89e0977da10a8ea0526a93db977/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f30653364653136316265653038303361613062313536646665333234333266633f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for fossasia from gravatar.com\" title=\"Avatar for fossasia from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            fossasia          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/jju/\" aria-label=\"jju\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/0e6ddf9426fe28f69559f12edc755b7738d417cb/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f33326564633738323662383639316164333332383736633136636436393861313f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for jju from gravatar.com\" title=\"Avatar for jju from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            jju          </span>        </a>      </span></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for visdom\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <h3 align=center>    <br>    <img src=\"https://pypi-camo.freetls.fastly.net/5c7c2a0636dcdb9a86f8ccd348467d5fb2117644/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383734363139352d35373462623832382d303236662d343163622d383261392d3235306663626334653039302e706e67\" width=300 alt=Logo><br><br>    Creating, organizing &amp; sharing visualizations of live, rich data. Supports <a href=\"https://pypi.org/project/visdom/\" rel=nofollow>Python</a>.</h3><p align=center> Jump To: <a href=#setup rel=nofollow>Setup</a>, <a href=#usage rel=nofollow>Usage</a>, <a href=#api rel=nofollow>API</a>, <a href=#customizing-visdom rel=nofollow>Customizing</a>, <a href=#contributing rel=nofollow>Contributing</a>, <a href=#license rel=nofollow>License</a></p><p align=center>    <a href=\"https://github.com/fossasia/visdom/releases\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/6a26cf7589664810a9c64c36e8810370f6457d2c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f666f7373617369612f766973646f6d3f636f6c6f72413d33363361346626636f6c6f72423d613664613935267374796c653d666f722d7468652d6261646765\"></a>    <a href=\"https://pypi.org/project/visdom\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/4555229fe7d2e6651cc498d45a1fd55b90330bc7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f64642f766973646f6d3f636f6c6f72413d33363361346626636f6c6f72423d313536646631267374796c653d666f722d7468652d6261646765\"></a>    <a href=\"https://github.com/fossasia/visdom/commits\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/8bd1c174473cfd81c6fd9356038b4a24b2811d1a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f6d2f666f7373617369612f766973646f6d3f636f6c6f72413d33363361346626636f6c6f72423d303039396666267374796c653d666f722d7468652d6261646765\"></a>    <a href=\"https://github.com/fossasia/visdom/contributors\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/d59d403b419e7eaa4725780e289932f6b0158708/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f666f7373617369612f766973646f6d3f636f6c6f72413d33363361346626636f6c6f72423d363062396634267374796c653d666f722d7468652d6261646765\"></a></p><p align=center>Visdom aims to facilitate visualization of (remote) data with an emphasis on supporting scientific experimentation.<br>Broadcast visualizations of plots, images, and text for yourself and your collaborators.Organize your visualization space programmatically or through the UI to create dashboards for live data, inspect results of experiments, or debug experimental code.</p><p align=center>  <img src=\"https://pypi-camo.freetls.fastly.net/c34ce83ed030a4026efe2d908f2db29f98d0e896/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383734373930342d37613861353830662d383531612d343566622d386634352d3934653534613931306565322e706e67\"></p><p align=center>  <img width=49.5% src=\"https://pypi-camo.freetls.fastly.net/ad8c3ec7e7ace6c5bb997cf5fd7e7f1897296c12/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383734383137372d63393733663338372d633339322d346636652d396533642d3237646665353738656235392e676966\">  <img width=49.5% src=\"https://pypi-camo.freetls.fastly.net/ec18bd8501af2d04dc24442e7d58b8a23b89cb6a/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383734383138392d39313730393162362d393563342d343431352d623936352d6261336537653831653166382e706e67\"></p><h2>Concepts</h2><p>Visdom has a simple set of features that can be composed for various use-cases.</p><details><summary><b>Windows</b></summary><p align=center><img width=500 align=center src=\"https://pypi-camo.freetls.fastly.net/7557f18b61bb672de39436d9448abe01b9caea14/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383832313036352d36363636636232322d643334612d343833392d616531392d6636663661346131626165342e706e67\"></p><p>The UI begins as a blank slate \u2013 you can populate it with plots, images, and text. These appear in windows that you can drag, drop, resize, and destroy. The windows live in <code>envs</code> and the state of <code>envs</code> is stored across sessions. You can download the content of windows \u2013 including your plots in <code>svg</code>.</p><blockquote><p><strong>Tip</strong>: You can use the zoom of your browser to adjust the scale of the UI.</p></blockquote></details><details><summary><b>Callbacks</b></summary><p>The python Visdom implementation supports callbacks on a window. The demo shows an example of this in the form of an editable text pad. The functionality of these callbacks allows the Visdom object to receive and react to events that happen in the frontend.</p><p>You can subscribe a window to events by adding a function to the event handlers dict for the window id you want to subscribe by calling <code>viz.register_event_handler(handler, win_id)</code> with your handler and the window id. Multiple handlers can be registered to the same window. You can remove all event handlers from a window using <code>viz.clear_event_handlers(win_id)</code>. When an event occurs to that window, your callbacks will be called on a dict containing:</p><ul><li><code>event_type</code>: one of the below event types</li><li><code>pane_data</code>: all of the stored contents for that window including layout and content.</li><li><code>eid</code>: the current environment id</li><li><code>target</code>: the window id the event is called on</li></ul><p>Additional parameters are defined below.</p><p>Right now the following callback events are supported:</p><ol><li><code>Close</code> - Triggers when a window is closed. Returns a dict with only the aforementioned fields.</li><li><code>KeyPress</code> - Triggers when a key is pressed. Contains additional parameters:<ul><li><code>key</code> - A string representation of the key pressed (applying state modifiers such as SHIFT)</li><li><code>key_code</code> - The javascript event keycode for the pressed key (no modifiers)</li></ul></li><li><code>PropertyUpdate</code> - Triggers when a property is updated in Property pane<ul><li><code>propertyId</code> - Position in properties list</li><li><code>value</code> - New property value</li></ul></li><li><code>Click</code> - Triggers when Image pane is clicked on, has a parameter:<ul><li><code>image_coord</code> - dictionary with the fields <code>x</code> and <code>y</code> for the click coordinates in the coordinate frame of the possibly zoomed/panned image (<em>not</em> the enclosing pane).</li></ul></li></ol></details><details><summary><b>Editable Plot Parameters</b></summary>Use the top-right *edit*-Button to inspect all parameters used for plot in the respective window.  The visdom client supports dynamic change of plot parameters as well. Just change one of the listed parameters, the plot will be altered on-the-fly.  Click the button again to close the property list.<p align=center><img align=center src=\"https://pypi-camo.freetls.fastly.net/711aebebc16b215f0f2fd0720b931de2ed39ef15/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3135363735313937302d30393135373537642d386266302d346136642d613531302d3164333461393138653437612e676966\" width=400></p></details><details><summary><b>Environments</b></summary><p align=center><img align=center src=\"https://pypi-camo.freetls.fastly.net/a60721db82970051198aa4ce0a9abeb1a7b1dfae/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383832313238312d65613163656131612d363663332d343935652d626535322d6364306631613333303066372e706e67\" width=300></p><p>You can partition your visualization space with <code>envs</code>. By default, every user will have an env called <code>main</code>. New envs can be created in the UI or programmatically. The state of envs is chronically saved. Environments are able to keep entirely different pools of plots.</p><p>You can access a specific env via url: <code>http://localhost.com:8097/env/main</code>. If your server is hosted, you can share this url so others can see your visualizations too.</p><p>Environments are automatically hierarchically organized by the first <code>_</code>.</p><h4>Selecting Environments</h4><p align=center><img align=center src=\"https://pypi-camo.freetls.fastly.net/53a3b273d6175b29171bec1bfef1116f5fea9686/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383832313239392d36363032643535372d376130322d346239662d623164352d6435373631356364633135632e706e67\" width=300></p><p>From the main page it is possible to toggle between different environments using the environment selector. Selecting a new environment will query the server for the plots that exist in that environment. The environment selector allows for searching and filtering for the new enironment.</p><h4>Comparing Environments</h4><p>From the main page it is possible to compare different environments using the environment selector. Selecting multiple environments in the check box will query the server for the plots with the same titles in all environments and plot them in a single plot. An additional compare legend pane is created with a number corresponding to each selected environment. Individual plots are updated with legends corresponding to \"x_name\" where <code>x</code> is a number corresponding with the compare legend pane and <code>name</code> is the original name in the legend.</p><blockquote><p><strong>Note</strong>: The compare envs view is not robust to high throughput data, as the server is responsible for generating the compared content. Do not compare an environment that is receiving a high quantity of updates on any plot, as every update will request regenerating the comparison. If you need to compare two plots that are receiving high quantities of data, have them share the same window on a singular env.</p></blockquote><h4>Clearing Environments</h4><p>You can use the eraser button to remove all of the current contents of an environment. This closes the plot windows for that environment but keeps the empty environment for new plots.</p><h4>Managing Environments</h4><p align=center><img align=center src=\"https://pypi-camo.freetls.fastly.net/095c0a76fbb6315e63771298dd8870f3fc6ec3af/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383832313330392d34633634343966642d393738612d343632612d616133352d6535396438373262363162642e706e67\" width=400></p><p>Pressing the folder icon opens a dialog that allows you to fork or force save the current environment, or delete any of your existing environments. Use of this feature is fully described in the <strong>State</strong> section.</p><blockquote><p><strong>Env Files:</strong>Your envs are loaded upon request by the user, by default from <code>$HOME/.visdom/</code>. Custom paths can be passed as a cmd-line argument. Envs are removed by using the delete button or by deleting the corresponding <code>.json</code> file from the env dir. In case you want the server to pre-load all files into cache, use the flag <code>-eager_data_loading</code>.</p></blockquote></details><details><summary><b>State</b></summary><p>Once you've created a few visualizations, state is maintained. The server automatically caches your visualizations -- if you reload the page, your visualizations reappear.</p><p align=center><img align=center src=\"https://pypi-camo.freetls.fastly.net/499d708702bdd670d34a5683671872fd39bd3472/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383832313334342d63623863343234652d343535632d343234392d623362342d3535353433303961356563372e676966\" width=400></p><ul><li><p><strong>Save:</strong> You can manually do so with the <code>save</code> button. This will serialize the env's state (to disk, in JSON), including window positions. You can save an <code>env</code> programmatically.<br>This is helpful for more sophisticated visualizations in which configuration is meaningful, e.g. a data-rich demo, a model training dashboard, or systematic experimentation. This also makes them easy to share and reuse.</p></li><li><p><strong>Fork:</strong> If you enter a new env name, saving will create a new env -- effectively <strong>forking</strong> the previous env.</p></li></ul><blockquote><p><strong>Tip</strong>: Fork an environment before you begin to make edits to ensure that your changes are saved seperately.</p></blockquote><h3>Filter</h3><p>You can use the <code>filter</code> to dynamically sift through windows present in an env -- just provide a regular expression with which to match titles of window you want to show. This can be helpful in use cases involving an env with many windows e.g. when systematically checking experimental results.</p><p align=center><img align=center src=\"https://pypi-camo.freetls.fastly.net/f252ea90830e9d834f1ff3cf745d56acea83eb6e/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383832313337392d65656562643861322d626361622d343037612d623437662d3962326430323930633233652e706e67\" width=300></p><blockquote><p><strong>Note</strong>: If you have saved your current view, the view will be restored after clearing the filter.</p><p align=center><img align=center src=\"https://pypi-camo.freetls.fastly.net/05ba0b9c94adae416943878a493114d38211368b/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383832313430322d34373032363131652d313033382d343039332d386364352d3963383132303434343231312e676966\" width=500></p></blockquote><h3>Views</h3><p align=center><img align=center src=\"https://pypi-camo.freetls.fastly.net/0c02e45cfc76ebf74b56f7d41cb2e6a1e6374dec/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383832313432302d34353863383633622d633330342d346431302d383930362d3063633266306332303234312e706e67\" width=300></p><p>It is possible to manage the views simply by dragging the tops of windows around, however additional features exist to keep views organized and save common views. View management can be useful for saving and switching between multiple common organizations of your windows.</p><h4>Saving/Deleting Views</h4><p>Using the folder icon, a dialog window opens where views can be forked in the same way that envs can be. Saving a view will retain the position and sizes of all of the windows in a given environment. Views are saved in <code>$HOME/.visdom/view/layouts.json</code> in the visdom filepath.</p><blockquote><p><strong>Note</strong>: Saved views are static, and editing a saved view copies that view over to the <code>current</code> view where editing can occur.</p></blockquote><h4>Re-Packing</h4><p>Using the repack icon (9 boxes), visdom will attempt to pack your windows in a way that they best fit while retaining row/column ordering.</p><blockquote><p><strong>Note</strong>: Due to the reliance on row/column ordering and <code>ReactGridLayout</code> the final layout might be slightly different than what might be expected. We're working on improving that experience or providing alternatives that give more fine-tuned control.</p></blockquote><h4>Reloading Views</h4><p align=center><img align=center src=\"https://pypi-camo.freetls.fastly.net/d2184a795abf251de6cfe3d3d40dd4278bcb94ef/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383832313433362d36633739353762352d646436372d346166632d396663332d3462663037343133373032322e676966\" width=600></p><p>Using the view dropdown it is possible to select previously saved views, restoring the locations and sizes of all of the windows within the current environment to the places they were when that view was saved last.</p></details><h2>Setup</h2><p>Python and web clients come bundled with the python server.</p><p>Install from pip</p><pre lang=bash>&gt;<span class=w> </span>pip<span class=w> </span>install<span class=w> </span>visdom</pre><p>Install from source</p><pre lang=bash>&gt;<span class=w> </span>pip<span class=w> </span>install<span class=w> </span>git+https://github.com/fossasia/visdom</pre><h2>Usage</h2><p>Start the server (probably in a  <code>screen</code> or <code>tmux</code>) from the command line:</p><pre lang=bash>&gt;<span class=w> </span>visdom</pre><p>Visdom now can be accessed by going to <code>http://localhost:8097</code> in your browser, or your own host address if specified.</p><blockquote><p>The <code>visdom</code> command is equivalent to running <code>python -m visdom.server</code>.</p></blockquote><blockquote><p>If the above does not work, try using an SSH tunnel to your server by adding the following line to your local  <code>~/.ssh/config</code>:<code>LocalForward 127.0.0.1:8097 127.0.0.1:8097</code>.</p></blockquote><h4>Command Line Options</h4><p>The following options can be provided to the server:</p><ol><li><code>-port</code> : The port to run the server on.</li><li><code>-hostname</code> : The hostname to run the server on.</li><li><code>-base_url</code> : The base server url (default = /).</li><li><code>-env_path</code> : The path to the serialized session to reload.</li><li><code>-logging_level</code> : Logging level (default = INFO). Accepts both standard text and numeric logging values.</li><li><code>-readonly</code> : Flag to start server in readonly mode.</li><li><code>-enable_login</code> : Flag to setup authentication for the sever, requiring a username and password to login.</li><li><code>-force_new_cookie</code> : Flag to reset the secure cookie used by the server, invalidating current login cookies.Requires <code>-enable_login</code>.</li><li><code>-bind_local</code> : Flag to make the server accessible only from localhost.</li><li><code>-eager_data_loading</code> : By default visdom loads environments lazily upon user request. Setting this flag lets visdom pre-fetch all environments upon startup.</li></ol><p>When <code>-enable_login</code> flag is provided, the server asks user to input credentials using terminal prompt. Alternatively,you can setup <code>VISDOM_USE_ENV_CREDENTIALS</code> env variable, and then provide your username and password via<code>VISDOM_USERNAME</code> and <code>VISDOM_PASSWORD</code> env variables without manually interacting with the terminal. This setupis useful in case if you would like to launch <code>visdom</code> server from bash script, or from Jupyter notebook.</p><pre lang=bash><span class=nv>VISDOM_USERNAME</span><span class=o>=</span>username<span class=nv>VISDOM_PASSWORD</span><span class=o>=</span>password<span class=nv>VISDOM_USE_ENV_CREDENTIALS</span><span class=o>=</span><span class=m>1</span><span class=w> </span>visdom<span class=w> </span>-enable_login</pre><p>You can also use <code>VISDOM_COOKIE</code> variable to provide cookies value if the cookie file wasn't generated, or theflag <code>-force_new_cookie</code> was set.</p><h4>Python example</h4><pre lang=python3><span class=kn>import</span> <span class=nn>visdom</span><span class=kn>import</span> <span class=nn>numpy</span> <span class=k>as</span> <span class=nn>np</span><span class=n>vis</span> <span class=o>=</span> <span class=n>visdom</span><span class=o>.</span><span class=n>Visdom</span><span class=p>()</span><span class=n>vis</span><span class=o>.</span><span class=n>text</span><span class=p>(</span><span class=s1>'Hello, world!'</span><span class=p>)</span><span class=n>vis</span><span class=o>.</span><span class=n>image</span><span class=p>(</span><span class=n>np</span><span class=o>.</span><span class=n>ones</span><span class=p>((</span><span class=mi>3</span><span class=p>,</span> <span class=mi>10</span><span class=p>,</span> <span class=mi>10</span><span class=p>)))</span></pre><h3>Demos</h3><p>If you have cloned this repository, you can run our demo showcase.</p><pre lang=bash>python<span class=w> </span>example/demo.py</pre><h2>API</h2><p>For a quick introduction into the capabilities of <code>visdom</code>, have a look at the <code>example</code> directory, or read the details below.</p><h3>Visdom Arguments (Python only)</h3><p>The python visdom client takes a few options:</p><ul><li><code>server</code>: the hostname of your visdom server (default: <code>'http://localhost'</code>)</li><li><code>port</code>: the port for your visdom server (default: <code>8097</code>)</li><li><code>base_url</code>: the base visdom server url (default: <code>/</code>)</li><li><code>env</code>: Default environment to plot to when no <code>env</code> is provided (default: <code>main</code>)</li><li><code>raise_exceptions</code>: Raise exceptions upon failure rather than printing them (default: <code>True</code> (soon))</li><li><code>log_to_filename</code>: If not none, log all plotting and updating events to the given file (append mode) so that they can be replayed later using <code>replay_log</code> (default: <code>None</code>)</li><li><code>use_incoming_socket</code>: enable use of the socket for receiving events from the web client, allowing user to register callbacks (default: <code>True</code>)</li><li><code>http_proxy_host</code>: Deprecated. Use Proxies argument for complete proxy support.</li><li><code>http_proxy_port</code>: Deprecated. Use Proxies argument for complete proxy support.</li><li><code>username</code>: username to use for authentication, if server started with <code>-enable_login</code> (default: <code>None</code>)</li><li><code>password</code>: password to use for authentication, if server started with <code>-enable_login</code> (default: <code>None</code>)</li><li><code>proxies</code>: Dictionary mapping protocol to the URL of the proxy (e.g. {<code>http</code>: <code>foo.bar:3128</code>}) to be used on each Request. (default: <code>None</code>)</li><li><code>offline</code>: Flag to run visdom in offline mode, where all requests are logged to file rather than to the server. Requires <code>log_to_filename</code> is set. In offline mode, all visdom commands that don't create or update plots will simply return <code>True</code>. (default: <code>False</code>)</li></ul><p>Other options are either currently unused (endpoint, ipv6) or used for internal functionality.</p><h3>Basics</h3><p>Visdom offers the following basic visualization functions:</p><ul><li><a href=#visimage rel=nofollow><code>vis.image</code></a>    : image</li><li><a href=#visimages rel=nofollow><code>vis.images</code></a>   : list of images</li><li><a href=#vistext rel=nofollow><code>vis.text</code></a>     : arbitrary HTML</li><li><a href=#visproperties rel=nofollow><code>vis.properties</code></a>     : properties grid</li><li><a href=#visaudio rel=nofollow><code>vis.audio</code></a>    : audio</li><li><a href=#visvideo rel=nofollow><code>vis.video</code></a>    : videos</li><li><a href=#vissvg rel=nofollow><code>vis.svg</code></a>      : SVG object</li><li><a href=#vismatplot rel=nofollow><code>vis.matplot</code></a>  : matplotlib plot</li><li><a href=#vissave rel=nofollow><code>vis.save</code></a>     : serialize state server-side</li></ul><h3>Plotting</h3><p>We have wrapped several common plot types to make creating basic visualizations easily. These visualizations are powered by <a href=\"https://plot.ly/\" rel=nofollow>Plotly</a>.</p><p>The following API is currently supported:</p><ul><li><a href=#visscatter rel=nofollow><code>vis.scatter</code></a>  : 2D or 3D scatter plots</li><li><a href=#visline rel=nofollow><code>vis.line</code></a>     : line plots</li><li><a href=#visstem rel=nofollow><code>vis.stem</code></a>     : stem plots</li><li><a href=#visheatmap rel=nofollow><code>vis.heatmap</code></a>  : heatmap plots</li><li><a href=#visbar rel=nofollow><code>vis.bar</code></a>  : bar graphs</li><li><a href=#vishistogram rel=nofollow><code>vis.histogram</code></a> : histograms</li><li><a href=#visboxplot rel=nofollow><code>vis.boxplot</code></a>  : boxplots</li><li><a href=#vissurf rel=nofollow><code>vis.surf</code></a>     : surface plots</li><li><a href=#viscontour rel=nofollow><code>vis.contour</code></a>  : contour plots</li><li><a href=#visquiver rel=nofollow><code>vis.quiver</code></a>   : quiver plots</li><li><a href=#vismesh rel=nofollow><code>vis.mesh</code></a>     : mesh plots</li><li><a href=#visdual_axis_lines rel=nofollow><code>vis.dual_axis_lines</code></a>     : double y axis line plots</li></ul><h3>Generic Plots</h3><p>Note that the server API adheres to the Plotly convention of <code>data</code> and <code>layout</code> objects, such that you can produce your own arbitrary <code>Plotly</code> visualizations:</p><pre lang=python3><span class=kn>import</span> <span class=nn>visdom</span><span class=n>vis</span> <span class=o>=</span> <span class=n>visdom</span><span class=o>.</span><span class=n>Visdom</span><span class=p>()</span><span class=n>trace</span> <span class=o>=</span> <span class=nb>dict</span><span class=p>(</span><span class=n>x</span><span class=o>=</span><span class=p>[</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>],</span> <span class=n>y</span><span class=o>=</span><span class=p>[</span><span class=mi>4</span><span class=p>,</span> <span class=mi>5</span><span class=p>,</span> <span class=mi>6</span><span class=p>],</span> <span class=n>mode</span><span class=o>=</span><span class=s2>\"markers+lines\"</span><span class=p>,</span> <span class=nb>type</span><span class=o>=</span><span class=s1>'custom'</span><span class=p>,</span>             <span class=n>marker</span><span class=o>=</span><span class=p>{</span><span class=s1>'color'</span><span class=p>:</span> <span class=s1>'red'</span><span class=p>,</span> <span class=s1>'symbol'</span><span class=p>:</span> <span class=mi>104</span><span class=p>,</span> <span class=s1>'size'</span><span class=p>:</span> <span class=s2>\"10\"</span><span class=p>},</span>             <span class=n>text</span><span class=o>=</span><span class=p>[</span><span class=s2>\"one\"</span><span class=p>,</span> <span class=s2>\"two\"</span><span class=p>,</span> <span class=s2>\"three\"</span><span class=p>],</span> <span class=n>name</span><span class=o>=</span><span class=s1>'1st Trace'</span><span class=p>)</span><span class=n>layout</span> <span class=o>=</span> <span class=nb>dict</span><span class=p>(</span><span class=n>title</span><span class=o>=</span><span class=s2>\"First Plot\"</span><span class=p>,</span> <span class=n>xaxis</span><span class=o>=</span><span class=p>{</span><span class=s1>'title'</span><span class=p>:</span> <span class=s1>'x1'</span><span class=p>},</span> <span class=n>yaxis</span><span class=o>=</span><span class=p>{</span><span class=s1>'title'</span><span class=p>:</span> <span class=s1>'x2'</span><span class=p>})</span><span class=n>vis</span><span class=o>.</span><span class=n>_send</span><span class=p>({</span><span class=s1>'data'</span><span class=p>:</span> <span class=p>[</span><span class=n>trace</span><span class=p>],</span> <span class=s1>'layout'</span><span class=p>:</span> <span class=n>layout</span><span class=p>,</span> <span class=s1>'win'</span><span class=p>:</span> <span class=s1>'mywin'</span><span class=p>})</span></pre><h3>Others</h3><ul><li><a href=#visclose rel=nofollow><code>vis.close</code></a>    : close a window by id</li><li><a href=#visdelete_env rel=nofollow><code>vis.delete_env</code></a> : delete an environment by env_id</li><li><a href=#viswin_exists rel=nofollow><code>vis.win_exists</code></a> : check if a window already exists by id</li><li><a href=#visget_env_list rel=nofollow><code>vis.get_env_list</code></a> : get a list of all of the environments on your server</li><li><a href=#viswin_hash rel=nofollow><code>vis.win_hash</code></a>: get md5 hash of window's contents</li><li><a href=#visget_window_data rel=nofollow><code>vis.get_window_data</code></a>: get current data for a window</li><li><a href=#vischeck_connection rel=nofollow><code>vis.check_connection</code></a>: check if the server is connected</li><li><a href=#visreplay_log rel=nofollow><code>vis.replay_log</code></a>: replay the actions from the provided log file</li></ul><h2>Details</h2><img src=\"https://pypi-camo.freetls.fastly.net/c34ce83ed030a4026efe2d908f2db29f98d0e896/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383734373930342d37613861353830662d383531612d343566622d386634352d3934653534613931306565322e706e67\"><h3>Basics</h3><h4>vis.image</h4><p>This function draws an <code>img</code>. It takes as input an <code>CxHxW</code> tensor <code>img</code>that contains the image.</p><p>The following <code>opts</code> are supported:</p><ul><li><code>jpgquality</code>: JPG quality (<code>number</code> 0-100). If defined image will be saved as JPG to reduce file size. If not defined image will be saved as PNG.</li><li><code>caption</code>: Caption for the image</li><li><code>store_history</code>: Keep all images stored to the same window and attach a slider to the bottom that will let you select the image to view. You must always provide this opt when sending new images to an image with history.</li></ul><blockquote><p><strong>Note</strong> You can use alt on an image pane to view the x/y coordinates of the cursor. You can also ctrl-scroll to zoom, alt scroll to pan vertically, and alt-shift scroll to pan horizontally. Double click inside the pane to restore the image to default.</p></blockquote><h4>vis.images</h4><p>This function draws a list of <code>images</code>. It takes an input <code>B x C x H x W</code> tensor or a <code>list of images</code> all of the same size. It makes a grid of images of size (B / nrow, nrow).</p><p>The following arguments and <code>opts</code> are supported:</p><ul><li><code>nrow</code>: Number of images in a row</li><li><code>padding</code>: Padding around the image, equal padding around all 4 sides</li><li><code>opts.jpgquality</code>: JPG quality (<code>number</code> 0-100). If defined image will be saved as JPG to reduce file size. If not defined image will be saved as PNG.</li><li><code>opts.caption</code>: Caption for the image</li></ul><h4>vis.text</h4><p>This function prints text in a  box. You can use this to embed arbitrary HTML.It takes as input a <code>text</code> string.No specific <code>opts</code> are currently supported.</p><h4>vis.properties</h4><p>This function shows editable properties in a pane. Properties are expected to be a List of Dicts e.g.:</p><pre><code>    properties = [        {'type': 'text', 'name': 'Text input', 'value': 'initial'},        {'type': 'number', 'name': 'Number input', 'value': '12'},        {'type': 'button', 'name': 'Button', 'value': 'Start'},        {'type': 'checkbox', 'name': 'Checkbox', 'value': True},        {'type': 'select', 'name': 'Select', 'value': 1, 'values': ['Red', 'Green', 'Blue']},    ]</code></pre><p>Supported types:</p><ul><li>text: string</li><li>number: decimal number</li><li>button: button labeled with \"value\"</li><li>checkbox: boolean value rendered as a checkbox</li><li>select: multiple values select box<ul><li><code>value</code>: id of selected value (zero based)</li><li><code>values</code>: list of possible values</li></ul></li></ul><p>Callback are called on property value update:</p><ul><li><code>event_type</code>: <code>\"PropertyUpdate\"</code></li><li><code>propertyId</code>: position in the <code>properties</code> list</li><li><code>value</code>: new value</li></ul><p>No specific <code>opts</code> are currently supported.</p><h4>vis.audio</h4><p>This function plays audio. It takes as input the filename of the audiofile or an <code>N</code> tensor containing the waveform (use an <code>Nx2</code> matrix for stereoaudio). The function does not support any plot-specific <code>opts</code>.</p><p>The following <code>opts</code> are supported:</p><ul><li><code>opts.sample_frequency</code>: sample frequency (<code>integer</code> &gt; 0; default = 44100)</li></ul><p>Known issue: Visdom uses scipy to convert tensor inputs to wave files. Someversions of Chrome are known not to play these wave files (Firefox and Safari work fine).</p><h4>vis.video</h4><p>This function plays a video. It takes as input the filename of the video<code>videofile</code> or a <code>LxHxWxC</code>-sized<code>tensor</code> containing all the frames of the video as input. Thefunction does not support any plot-specific <code>opts</code>.</p><p>The following <code>opts</code> are supported:</p><ul><li><code>opts.fps</code>: FPS for the video (<code>integer</code> &gt; 0; default = 25)</li></ul><p>Note: Using <code>tensor</code> input requires that ffmpeg is installed and working.Your ability to play video may depend on the browser you use: your browser hasto support the Theano codec in an OGG container (Chrome supports this).</p><h4>vis.svg</h4><p>This function draws an SVG object. It takes as input a SVG string <code>svgstr</code> orthe name of an SVG file <code>svgfile</code>. The function does not support any specific<code>opts</code>.</p><h4>vis.matplot</h4><p>This function draws a Matplotlib <code>plot</code>. The function supportsone plot-specific option: <code>resizable</code>.</p><blockquote><p><strong>Note</strong> When set to <code>True</code> the plot is resized with thepane. You need <code>beautifulsoup4</code> and <code>lxml</code>packages installed to use this option.</p></blockquote><blockquote><p><strong>Note</strong>: <code>matplot</code> is not rendered using the same backend as plotly plots, and is somewhat less efficient. Using too many matplot windows may degrade visdom performance.</p></blockquote><h4>vis.plotlyplot</h4><p>This function draws a Plotly <code>Figure</code> object. It does not explicitly take options as it assumes you have already explicitly configured the figure's <code>layout</code>.</p><blockquote><p><strong>Note</strong> You must have the <code>plotly</code> Python package installed to use this function. It can typically be installed by running <code>pip install plotly</code>.</p></blockquote><h4>vis.embeddings</h4><p>This function visualizes a collection of features using the <a href=\"https://github.com/lvdmaaten/bhtsne\" rel=nofollow>Barnes-Hut t-SNE algorithm</a>.</p><p>The function accepts the following arguments:</p><ul><li><code>features</code>: a list of tensors</li><li><code>labels</code>: a list of corresponding labels for the tensors provided for <code>features</code></li><li><code>data_getter=fn</code>: (optional) a function that takes as a parameter an index into the features array and returns a summary representation of the tensor. If this is set, <code>data_type</code> must also be set.</li><li><code>data_type=str</code>: (optional) currently the only acceptable value here is <code>\"html\"</code></li></ul><p>We currently assume that there are no more than 10 unique labels, in the future we hope to provide a colormap in opts for other cases.</p><p>From the UI you can also draw a lasso around a subset of features. This will rerun the t-SNE visualization on the selected subset.</p><h4>vis.save</h4><p>This function saves the <code>envs</code> that are alive on the visdom server. It takes input a list of env ids to be saved.</p><h3>Plotting</h3><p>Further details on the wrapped plotting functions are given below.</p><p>The exact inputs into the plotting functions vary, although most of them take as input a tensor <code>X</code> than contains the data and an (optional) tensor <code>Y</code> that contains optional data variables (such as labels or timestamps). All plotting functions take as input an optional <code>win</code> that can be used to plot into a specific window; each plotting function also returns the <code>win</code> of the window it plotted in. One can also specify the <code>env</code>  to which the visualization should be added.</p><h4>vis.scatter</h4><p>This function draws a 2D or 3D scatter plot. It takes as input an <code>Nx2</code> or<code>Nx3</code> tensor <code>X</code> that specifies the locations of the <code>N</code> points in thescatter plot. An optional <code>N</code> tensor <code>Y</code> containing discrete labels thatrange between <code>1</code> and <code>K</code> can be specified as well -- the labels will bereflected in the colors of the markers.</p><p><code>update</code> can be used to efficiently update the data of an existing plot. Use <code>'append'</code> to append data, <code>'replace'</code> to use new data, or <code>'remove'</code> to remove the trace specified by <code>name</code>.Using <code>update='append'</code> will create a plot if it doesn't exist and append to the existing plot otherwise.If updating a single trace, use <code>name</code> to specify the name of the trace to be updated. Update data that is all NaN is ignored (can be used for masking update).</p><p>The following <code>opts</code> are supported:</p><ul><li><code>opts.markersymbol</code>     : marker symbol (<code>string</code>; default = <code>'dot'</code>)</li><li><code>opts.markersize</code>       : marker size (<code>number</code>; default = <code>'10'</code>)</li><li><code>opts.markercolor</code>      : color per marker. (<code>torch.*Tensor</code>; default = <code>nil</code>)</li><li><code>opts.markerborderwidth</code>: marker border line width (<code>float</code>; default = 0.5)</li><li><code>opts.legend</code>           : <code>table</code> containing legend names</li><li><code>opts.textlabels</code>       : text label for each point (<code>list</code>: default = <code>None</code>)</li><li><code>opts.layoutopts</code>       : dict of any additional options that the graph backend accepts for a layout. For example <code>layoutopts = {'plotly': {'legend': {'x':0, 'y':0}}}</code>.</li><li><code>opts.traceopts</code>        : dict mapping trace names or indices to dicts of additional options that the graph backend accepts. For example <code>traceopts = {'plotly': {'myTrace': {'mode': 'markers'}}}</code>.</li><li><code>opts.webgl</code>            : use WebGL for plotting (<code>boolean</code>; default = <code>false</code>). It is faster if a plot contains too many points. Use sparingly as browsers won't allow more than a couple of WebGL contexts on a single page.</li></ul><p><code>opts.markercolor</code> is a Tensor with Integer values. The tensor can be of size <code>N</code> or <code>N x 3</code> or <code>K</code> or <code>K x 3</code>.</p><ul><li>Tensor of size <code>N</code>: Single intensity value per data point. 0 = black, 255 = red</li><li>Tensor of size <code>N x 3</code>: Red, Green and Blue intensities per data point. 0,0,0 = black, 255,255,255 = white</li><li>Tensor of size <code>K</code> and <code>K x 3</code>: Instead of having a unique color per data point, the same color is shared for all points of a particular label.</li></ul><h4>vis.sunburst</h4><p>This function draws a sunburst chart. It takes two inputs: <code>parents</code> and <code>labels</code> array.values from <code>parents</code> array is used as parents object, like it define above which sectorshould the this sector shown. values from <code>labels</code> array is used to define sector's labelor you can say name. keep in mind that lenght of array <code>parents</code> and <code>labels</code> should beequal. There is a third array that you can pass to which is <code>value</code>, it is use to showa value on hovering over a sector, it is optional argument, but if you are passing it thenkeep in mind lenght of <code>values</code> should be equal to <code>parents</code> or <code>labels</code>.</p><p>Following <code>opts</code> are currently supported:</p><ul><li><code>opts.font_size</code>    : define font size of label (<code>int</code>)</li><li><code>opts.font_color</code>    : define font color of label (<code>string</code>)</li><li><code>opts.opacity</code>    : define opacity of chart (<code>float</code>)</li><li><code>opts.line_width</code>    : define distance between two sectors and sector to its parents (<code>int</code>)</li></ul><h4>vis.line</h4><p>This function draws a line plot. It takes as input an <code>N</code> or <code>NxM</code> tensor<code>Y</code> that specifies the values of the <code>M</code> lines (that connect <code>N</code> points)to plot. It also takes an optional <code>X</code> tensor that specifies thecorresponding x-axis values; <code>X</code> can be an <code>N</code> tensor (in which case alllines will share the same x-axis values) or have the same size as <code>Y</code>.</p><p><code>update</code> can be used to efficiently update the data of an existing plot. Use 'append' to append data, 'replace' to use new data, or 'remove' to remove the trace specified by <code>name</code>. If updating a single trace, use <code>name</code> to specify the name of the trace to be updated. Update data that is all NaN is ignored (can be used for masking update).</p><p><strong>Smoothing</strong>: Line plots can be smoothened using <a href=\"https://en.wikipedia.org/wiki/Savitzky%E2%80%93Golay_filter\" rel=nofollow>Savitzky-Golay filtering</a>. This feature can be enabled by clicking the <code>~</code>-symbol in the top right corner of a window that contains a line plot.</p><p><img src=\"https://pypi-camo.freetls.fastly.net/f6431826874c99243a3aa1cead4457473d1243ed/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3135393336363733362d31663564383039392d306561352d346133622d616631372d3439643365323463623332632e676966\" alt=\"Demo of interactive smoothing.\"></p><p>The following <code>opts</code> are supported:</p><ul><li><code>opts.fillarea</code>    : fill area below line (<code>boolean</code>)</li><li><code>opts.markers</code>     : show markers (<code>boolean</code>; default = <code>false</code>)</li><li><code>opts.markersymbol</code>: marker symbol (<code>string</code>; default = <code>'dot'</code>)</li><li><code>opts.markersize</code>  : marker size (<code>number</code>; default = <code>'10'</code>)</li><li><code>opts.linecolor</code>   : line colors (<code>np.array</code>; default = None)</li><li><code>opts.dash</code>        : line dash type for each line (<code>np.array</code>; default = 'solid'), one of <code>solid</code>, <code>dash</code>, <code>dashdot</code> or <code>dash</code>, size should match number of lines being drawn</li><li><code>opts.legend</code>      : <code>table</code> containing legend names</li><li><code>opts.layoutopts</code>  : <code>dict</code> of any additional options that the graph backend accepts for a layout. For example <code>layoutopts = {'plotly': {'legend': {'x':0, 'y':0}}}</code>.</li><li><code>opts.traceopts</code>   : <code>dict</code> mapping trace names or indices to <code>dict</code>s of additional options that plot.ly accepts for a trace.</li><li><code>opts.webgl</code>       : use WebGL for plotting (<code>boolean</code>; default = <code>false</code>). It is faster if a plot contains too many points. Use sparingly as browsers won't allow more than a couple of WebGL contexts on a single page.</li></ul><h4>vis.stem</h4><p>This function draws a stem plot. It takes as input an <code>N</code> or <code>NxM</code> tensor<code>X</code> that specifies the values of the <code>N</code> points in the <code>M</code> time series.An optional <code>N</code> or <code>NxM</code> tensor <code>Y</code> containing timestamps can be specifiedas well; if <code>Y</code> is an <code>N</code> tensor then all <code>M</code> time series are assumed tohave the same timestamps.</p><p>The following <code>opts</code> are supported:</p><ul><li><code>opts.colormap</code>: colormap (<code>string</code>; default = <code>'Viridis'</code>)</li><li><code>opts.legend</code>  : <code>table</code> containing legend names</li><li><code>opts.layoutopts</code>  : <code>dict</code> of any additional options that the graph backend accepts for a layout. For example <code>layoutopts = {'plotly': {'legend': {'x':0, 'y':0}}}</code>.</li></ul><h4>vis.heatmap</h4><p>This function draws a heatmap. It takes as input an <code>NxM</code> tensor <code>X</code> thatspecifies the value at each location in the heatmap.</p><p><code>update</code> can be used to efficiently update the data of an existing plot. Use 'appendRow' to append data row-wise, 'appendColumn' to append data column-wise, 'prependRow' to prepend data row-wise, 'prependColumn' to prepend data column-wise, 'replace' to use new data, or 'remove' to remove the plot specified by <code>win</code>.</p><p>The following <code>opts</code> are supported:</p><ul><li><code>opts.colormap</code>   : colormap (<code>string</code>; default = <code>'Viridis'</code>)</li><li><code>opts.xmin</code>       : clip minimum value (<code>number</code>; default = <code>X:min()</code>)</li><li><code>opts.xmax</code>       : clip maximum value (<code>number</code>; default = <code>X:max()</code>)</li><li><code>opts.columnnames</code>: <code>table</code> containing x-axis labels</li><li><code>opts.rownames</code>   : <code>table</code> containing y-axis labels</li><li><code>opts.layoutopts</code> : <code>dict</code> of any additional options that the graph backend accepts for a layout. For example <code>layoutopts = {'plotly': {'legend': {'x':0, 'y':0}}}</code>.</li><li><code>opts.nancolor</code>   : color for plotting <code>NaN</code>s. If this is <code>None</code>, <code>NaN</code>s will be plotted as transparent. (<code>string</code>; default = <code>None</code>)</li></ul><h4>vis.bar</h4><p>This function draws a regular, stacked, or grouped bar plot. It takes asinput an <code>N</code> or <code>NxM</code> tensor <code>X</code> that specifies the height of each of thebars. If <code>X</code> contains <code>M</code> columns, the values corresponding to each roware either stacked or grouped (depending on how <code>opts.stacked</code> isset). In addition to <code>X</code>, an (optional) <code>N</code> tensor <code>Y</code> can be specifiedthat contains the corresponding x-axis values.</p><p>The following plot-specific <code>opts</code> are currently supported:</p><ul><li><code>opts.rownames</code>: <code>table</code> containing x-axis labels</li><li><code>opts.stacked</code>    : stack multiple columns in <code>X</code></li><li><code>opts.legend</code>     : <code>table</code> containing legend labels</li><li><code>opts.layoutopts</code>  : <code>dict</code> of any additional options that the graph backend accepts for a layout. For example <code>layoutopts = {'plotly': {'legend': {'x':0, 'y':0}}}</code>.</li></ul><h4>vis.histogram</h4><p>This function draws a histogram of the specified data. It takes as inputan <code>N</code> tensor <code>X</code> that specifies the data of which to construct thehistogram.</p><p>The following plot-specific <code>opts</code> are currently supported:</p><ul><li><code>opts.numbins</code>: number of bins (<code>number</code>; default = 30)</li><li><code>opts.layoutopts</code>  : <code>dict</code> of any additional options that the graph backend accepts for a layout. For example <code>layoutopts = {'plotly': {'legend': {'x':0, 'y':0}}}</code>.</li></ul><h4>vis.boxplot</h4><p>This function draws boxplots of the specified data. It takes as inputan <code>N</code> or an <code>NxM</code> tensor <code>X</code> that specifies the <code>N</code> data values of whichto construct the <code>M</code> boxplots.</p><p>The following plot-specific <code>opts</code> are currently supported:</p><ul><li><code>opts.legend</code>: labels for each of the columns in <code>X</code></li><li><code>opts.layoutopts</code>  : <code>dict</code> of any additional options that the graph backend accepts for a layout. For example <code>layoutopts = {'plotly': {'legend': {'x':0, 'y':0}}}</code>.</li></ul><h4>vis.surf</h4><p>This function draws a surface plot. It takes as input an <code>NxM</code> tensor <code>X</code>that specifies the value at each location in the surface plot.</p><p>The following <code>opts</code> are supported:</p><ul><li><code>opts.colormap</code>: colormap (<code>string</code>; default = <code>'Viridis'</code>)</li><li><code>opts.xmin</code>    : clip minimum value (<code>number</code>; default = <code>X:min()</code>)</li><li><code>opts.xmax</code>    : clip maximum value (<code>number</code>; default = <code>X:max()</code>)</li><li><code>opts.layoutopts</code>  : <code>dict</code> of any additional options that the graph backend accepts for a layout. For example <code>layoutopts = {'plotly': {'legend': {'x':0, 'y':0}}}</code>.</li></ul><h4>vis.contour</h4><p>This function draws a contour plot. It takes as input an <code>NxM</code> tensor <code>X</code>that specifies the value at each location in the contour plot.</p><p>The following <code>opts</code> are supported:</p><ul><li><code>opts.colormap</code>: colormap (<code>string</code>; default = <code>'Viridis'</code>)</li><li><code>opts.xmin</code>    : clip minimum value (<code>number</code>; default = <code>X:min()</code>)</li><li><code>opts.xmax</code>    : clip maximum value (<code>number</code>; default = <code>X:max()</code>)</li><li><code>opts.layoutopts</code>  : <code>dict</code> of any additional options that the graph backend accepts for a layout. For example <code>layoutopts = {'plotly': {'legend': {'x':0, 'y':0}}}</code>.</li></ul><h4>vis.quiver</h4><p>This function draws a quiver plot in which the direction and length of thearrows is determined by the <code>NxM</code> tensors <code>X</code> and <code>Y</code>. Two optional <code>NxM</code>tensors <code>gridX</code> and <code>gridY</code> can be provided that specify the offsets ofthe arrows; by default, the arrows will be done on a regular grid.</p><p>The following <code>opts</code> are supported:</p><ul><li><code>opts.normalize</code>:  length of longest arrows (<code>number</code>)</li><li><code>opts.arrowheads</code>: show arrow heads (<code>boolean</code>; default = <code>true</code>)</li><li><code>opts.layoutopts</code>  : <code>dict</code> of any additional options that the graph backend accepts for a layout. For example <code>layoutopts = {'plotly': {'legend': {'x':0, 'y':0}}}</code>.</li></ul><h4>vis.mesh</h4><p>This function draws a mesh plot from a set of vertices defined in an<code>Nx2</code> or <code>Nx3</code> matrix <code>X</code>, and polygons defined in an optional <code>Mx2</code> or<code>Mx3</code> matrix <code>Y</code>.</p><p>The following <code>opts</code> are supported:</p><ul><li><code>opts.color</code>: color (<code>string</code>)</li><li><code>opts.opacity</code>: opacity of polygons (<code>number</code> between 0 and 1)</li><li><code>opts.layoutopts</code>  : <code>dict</code> of any additional options that the graph backend accepts for a layout. For example <code>layoutopts = {'plotly': {'legend': {'x':0, 'y':0}}}</code>.</li></ul><h4>vis.dual_axis_lines</h4><p>This function will create a line plot using plotly with different Y-Axis.</p><p><code>X</code>  = A numpy array of the range.</p><p><code>Y1</code> = A numpy array of the same count as <code>X</code>.</p><p><code>Y2</code> = A numpy array of the same count as <code>X</code>.</p><p>The following <code>opts</code> are supported:</p><ul><li><code>opts.height</code> : Height of the plot</li><li><code>opts.width</code> :  Width of the plot</li><li><code>opts.name_y1</code> : Axis name for Y1 plot</li><li><code>opts.name_y2</code> : Axis name for Y2 plot</li><li><code>opts.title</code> :  Title of the plot</li><li><code>opts.color_title_y1</code> :  Color of the Y1 axis Title</li><li><code>opts.color_tick_y1</code>  :  Color of the Y1 axis Ticks</li><li><code>opts.color_title_y2</code> :  Color of the Y2 axis Title</li><li><code>opts.color_tick_y2</code>  :  Color of the Y2 axis Ticks</li><li><code>opts.side</code> :  side on which the Y2 tick has to be placed. Has values 'right' or <code>left</code>.</li><li><code>opts.showlegend</code> :  Display legends (boolean values)</li><li><code>opts.top</code> :  Set the top margin of the plot</li><li><code>opts.bottom</code> :  Set the bottom margin of the plot</li><li><code>opts.right</code> :  Set the right margin of the plot</li><li><code>opts.left</code> :  Set the left margin of the plot</li></ul><p>This is the image of the output:</p><p align=center><img align=center src=\"https://pypi-camo.freetls.fastly.net/f75998995a346f61673a195d4824185996287c34/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31393635303037342f3139383832323336372d36363663633432652d343335342d346137612d386464332d6438666631343366383835642e676966\" width=400></p><h3>Network Graph</h3><p>This function draws a graph, in which the nodes and edges are taken from a 2-D matrix of size [,2] where each row contains a source and destination node value. The numeric value used to define nodes should be strictly between (0 to n-1), where n is the number of nodes.</p><p>There are two optional arguments :</p><ul><li><code>edgeLabels</code> : list of custom edge labels. If not provided each edge gets a label, \"source-destination\", eg \"1-2\", size should be equal to size of input \"edges\". Optional.</li><li><code>nodeLabels</code> : list of custom node labels. If not provided each node gets a label same as the numeric value defined in the \"edges\". size should be equal to number of nodes present. Optional.</li></ul><p>The following opts are supported:</p><ul><li><code>opts.height</code> : Height of the plot. Default : 500</li><li><code>opts.width</code> : Width of the plot. Default : 500</li><li><code>opts.directed</code> : whether the plot should have a arrow or not. Default : false</li><li><code>opts.showVertexLabels</code> : Whether to show vertex labels. Default : true</li><li><code>opts.showEdgeLabels</code> : Whether to show edge labels. Default : false</li><li><code>opts.scheme</code> : Whether all nodes shoud have \"same\" color or \"different\". Default : \"same\"</li></ul><h3>Customizing plots</h3><p>The plotting functions take an optional <code>opts</code> table as input that can be used to change (generic or plot-specific) properties of the plots.</p><p>All input arguments are specified in a single table; the input arguments are matches based on the keys they have in the input table.</p><p>The following <code>opts</code> are generic in the sense that they are the same for all visualizations (except <code>plot.image</code>, <code>plot.text</code>, <code>plot.video</code>, and <code>plot.audio</code>):</p><ul><li><code>opts.title</code>       : figure title</li><li><code>opts.width</code>       : figure width</li><li><code>opts.height</code>      : figure height</li><li><code>opts.showlegend</code>  : show legend (<code>true</code> or <code>false</code>)</li><li><code>opts.xtype</code>       : type of x-axis (<code>'linear'</code> or <code>'log'</code>)</li><li><code>opts.xlabel</code>      : label of x-axis</li><li><code>opts.xtick</code>       : show ticks on x-axis (<code>boolean</code>)</li><li><code>opts.xtickmin</code>    : first tick on x-axis (<code>number</code>)</li><li><code>opts.xtickmax</code>    : last tick on x-axis (<code>number</code>)</li><li><code>opts.xtickvals</code>   : locations of ticks on x-axis (<code>table</code> of <code>number</code>s)</li><li><code>opts.xticklabels</code> : ticks labels on x-axis (<code>table</code> of <code>string</code>s)</li><li><code>opts.xtickstep</code>   : distances between ticks on x-axis (<code>number</code>)</li><li><code>opts.xtickfont</code>   : font for x-axis labels (dict of <a href=\"https://plot.ly/javascript/reference/#layout-font\" rel=nofollow>font information</a>)</li><li><code>opts.ytype</code>       : type of y-axis (<code>'linear'</code> or <code>'log'</code>)</li><li><code>opts.ylabel</code>      : label of y-axis</li><li><code>opts.ytick</code>       : show ticks on y-axis (<code>boolean</code>)</li><li><code>opts.ytickmin</code>    : first tick on y-axis (<code>number</code>)</li><li><code>opts.ytickmax</code>    : last tick on y-axis (<code>number</code>)</li><li><code>opts.ytickvals</code>   : locations of ticks on y-axis (<code>table</code> of <code>number</code>s)</li><li><code>opts.yticklabels</code> : ticks labels on y-axis (<code>table</code> of <code>string</code>s)</li><li><code>opts.ytickstep</code>   : distances between ticks on y-axis (<code>number</code>)</li><li><code>opts.ytickfont</code>   : font for y-axis labels (dict of <a href=\"https://plot.ly/javascript/reference/#layout-font\" rel=nofollow>font information</a>)</li><li><code>opts.marginleft</code>  : left margin (in pixels)</li><li><code>opts.marginright</code> : right margin (in pixels)</li><li><code>opts.margintop</code>   : top margin (in pixels)</li><li><code>opts.marginbottom</code>: bottom margin (in pixels)</li></ul><p><code>opts</code> are passed as dictionary in python scripts.You can pass <code>opts</code> like:</p><pre><code>opts=dict(title=\"my title\", xlabel=\"x axis\",ylabel=\"y axis\")</code></pre><p>OR</p><pre><code>opts={\"title\":\"my title\", \"xlabel\":\"x axis\",\"ylabel\":\"y axis\"}</code></pre><p>The other options are visualization-specific, and are described in thedocumentation of the functions.</p><h3>Others</h3><h4>vis.close</h4><p>This function closes a specific window. It takes input window id <code>win</code> and environment id <code>eid</code>. Use <code>win</code> as <code>None</code> to close all windows in an environment.</p><h4>vis.delete_env</h4><p>This function deletes a specified env entirely. It takes env id <code>eid</code> as input.</p><blockquote><p><strong>Note</strong>: <code>delete_env</code> is deletes all data for an environment and is IRREVERSIBLE. Do not use unless you absolutely want to remove an environment.</p></blockquote><h4>vis.fork_env</h4><p>This function forks an environment, similiar to the UI feature.</p><p>Arguments:</p><ul><li><code>prev_eid</code>: Environment ID that we want to fork.</li><li><code>eid</code>: New Environment ID that will be created with the fork.</li></ul><blockquote><p><strong>Note</strong>: <code>fork_env</code> an exception will occur if an env that doesn't exist is forked.</p></blockquote><h4>vis.win_exists</h4><p>This function returns a bool indicating whether or not a window <code>win</code> exists on the server already. Returns None if something went wrong.</p><p>Optional arguments:</p><ul><li><code>env</code>: Environment to search for the window in. Default is <code>None</code>.</li></ul><h4>vis.get_env_list</h4><p>This function returns a list of all of the environments on the server at the time of calling. It takes no arguments.</p><h4>vis.win_hash</h4><p>This function returns md5 hash of the contents of a window <code>win</code> if it exists on the server. Returns None otherwise.</p><p>Optional arguments:</p><ul><li><code>env</code> : Environment to search for the window in. Default is <code>None</code>.</li></ul><h4>vis.get_window_data</h4><p>This function returns the window data for the given window. Returns data for all windows in an env if win is None.</p><p>Arguments:</p><ul><li><code>env</code>: Environment to search for the window in.</li><li><code>win</code>: Window to return data for. Set to <code>None</code> to retrieve all the windows in an environment.</li></ul><h4>vis.check_connection</h4><p>This function returns a bool indicating whether or not the server is connected. It accepts an optional argument <code>timeout_seconds</code> for a number of seconds to wait for the server to come up.</p><h4>vis.replay_log</h4><p>This function takes the contents of a visdom log and replays them to the current server to restore a state or handle any missing entries.</p><p>Arguments:</p><ul><li><code>log_filename</code>: log file to replay the contents of.</li></ul><h2>Customizing Visdom</h2><p>The user config directory for visdom is</p><ul><li><code>~/.config/visdom</code> for Linux</li><li><code>~/Library/Preferences/visdom</code> for OSX</li><li><code>%APPDATA%/visdom</code> for Windows</li></ul><p>By placing a <code>style.css</code> in you user config directory, visdom will serve the customized css file along with the default style-file.In addition, it is also possible to create a project-specific file; just place the file <code>style.css</code> in your <code>env_path</code>.</p><h2>License</h2><p>visdom is Apache 2.0 licensed, as found in the LICENSE file.</p><h2>Note on Lua Torch Support</h2><p>Support for Lua Torch was deprecated following <code>v0.1.8.4</code>. If you'd like to use torch support, you'll need to download that release. You can follow the usage instructions there, but it is no longer officially supported.</p><h2>Contributing</h2><p>See guidelines for contributing <a href=\"./CONTRIBUTING.md\" rel=nofollow>here.</a></p><h2>Acknowledgments</h2><p>Visdom was inspired by tools like <a href=\"https://github.com/szym/display\" rel=nofollow>display</a> and relies on <a href=\"https://plot.ly/\" rel=nofollow>Plotly</a> as a plotting front-end.</p>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/facebookresearch/visdom\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/visdom\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> Apache-2.0</p>    <p><strong>Author:</strong> <a href=\"mailto:jju@fb.com\">Jack Urbanek, Allan Jabri, Laurens van der Maaten</a></p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/ajabri/\" aria-label=\"ajabri\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/2297ab7869e0b72d644a9a4143d862f0cadc0110/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f62393066653364316466663962313331353866376538623138326530393130333f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for ajabri from gravatar.com\" title=\"Avatar for ajabri from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            ajabri          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/fossasia/\" aria-label=\"fossasia\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/404ad13b3f03d89e0977da10a8ea0526a93db977/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f30653364653136316265653038303361613062313536646665333234333266633f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for fossasia from gravatar.com\" title=\"Avatar for fossasia from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            fossasia          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/jju/\" aria-label=\"jju\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/0e6ddf9426fe28f69559f12edc755b7738d417cb/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f33326564633738323662383639316164333332383736633136636436393861313f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for jju from gravatar.com\" title=\"Avatar for jju from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            jju          </span>        </a>      </span></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/visdom/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.2.4/\">                <p class=\"release__version\">                  0.2.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-02-08T17:42:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 8, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.2.3/\">                <p class=\"release__version\">                  0.2.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-21T15:18:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 21, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.2.2.post1/\">                <p class=\"release__version\">                  0.2.2.post1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-21T14:23:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 21, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.2.2/\">                <p class=\"release__version\">                  0.2.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-19T18:38:20+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 19, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.2.1/\">                <p class=\"release__version\">                  0.2.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-06T16:58:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 6, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.8.9/\">                <p class=\"release__version\">                  0.1.8.9                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-09-12T22:04:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 12, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.8.8/\">                <p class=\"release__version\">                  0.1.8.8                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-01-15T16:51:35+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 15, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.8.7/\">                <p class=\"release__version\">                  0.1.8.7                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-01-14T21:35:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 14, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.8.6/\">                <p class=\"release__version\">                  0.1.8.6                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-01-12T00:55:06+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 12, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.8.5/\">                <p class=\"release__version\">                  0.1.8.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-08-10T16:59:27+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 10, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.8.4/\">                <p class=\"release__version\">                  0.1.8.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-07-03T17:14:23+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 3, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.8.3/\">                <p class=\"release__version\">                  0.1.8.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-05-15T15:57:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 15, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.8.2/\">                <p class=\"release__version\">                  0.1.8.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-05-14T17:36:12+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 14, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.8.1/\">                <p class=\"release__version\">                  0.1.8.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-05-11T23:36:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 11, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.8/\">                <p class=\"release__version\">                  0.1.8                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-05-11T23:31:54+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 11, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.7/\">                <p class=\"release__version\">                  0.1.7                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-01-10T20:50:34+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 10, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.6.5/\">                <p class=\"release__version\">                  0.1.6.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-12-18T15:53:58+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 18, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.6.3/\">                <p class=\"release__version\">                  0.1.6.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-11-17T16:49:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 17, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.6.1/\">                <p class=\"release__version\">                  0.1.6.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-10-27T14:56:24+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 27, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.6/\">                <p class=\"release__version\">                  0.1.6                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-10-27T13:34:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 27, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.05/\">                <p class=\"release__version\">                  0.1.05                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-07-25T20:07:33+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 25, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.04/\">                <p class=\"release__version\">                  0.1.04                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-04-21T21:32:24+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 21, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.03/\">                <p class=\"release__version\">                  0.1.03                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-04-21T21:12:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 21, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.02/\">                <p class=\"release__version\">                  0.1.02                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-03-25T15:19:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 25, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.1/\">                <p class=\"release__version\">                  0.1.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-03-19T23:25:40+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 19, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.1.01/\">                <p class=\"release__version\">                  0.1.01                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-03-19T23:26:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 19, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.0.9/\">                <p class=\"release__version\">                  0.0.9                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-03-16T15:09:37+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 16, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.0.4/\">                <p class=\"release__version\">                  0.0.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-03-10T08:12:45+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 10, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.0.3/\">                <p class=\"release__version\">                  0.0.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-03-10T05:50:10+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 10, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.0.2/\">                <p class=\"release__version\">                  0.0.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-03-10T05:38:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 10, 2017</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/visdom/0.0.1/\">                <p class=\"release__version\">                  0.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-03-10T05:27:21+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 10, 2017</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/31/ab/6a8df57477ea6bb65b828f0b6725255982dfcd02f7ed353b895393616875/visdom-0.2.4.tar.gz\">          visdom-0.2.4.tar.gz        </a>        (1.4 MB        <a href=\"#copy-hash-modal-22cc42ee-2857-431d-971b-b5cd635c02ff\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-02-08T17:42:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 8, 2023</time>          <code>source</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-22cc42ee-2857-431d-971b-b5cd635c02ff\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for visdom-0.2.4.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for visdom-0.2.4.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">84a911d3c8814a056d54812b381bd938cb44bcfc503a85fe0f701502bb720574</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">268d08eef1e498c5fbeca4795b26d0e3</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">31ab6a8df57477ea6bb65b828f0b6725255982dfcd02f7ed353b895393616875</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "mleap",
  "url": "https://github.com/combust/mleap/tree/master/python",
  "html": "{\"payload\":{\"allShortcutsEnabled\":false,\"path\":\"python\",\"repo\":{\"id\":66331305,\"defaultBranch\":\"master\",\"name\":\"mleap\",\"ownerLogin\":\"combust\",\"currentUserCanPush\":false,\"isFork\":false,\"isEmpty\":false,\"createdAt\":\"2016-08-23T03:51:03.000Z\",\"ownerAvatar\":\"https://avatars.githubusercontent.com/u/16053266?v=4\",\"public\":true,\"private\":false,\"isOrgOwned\":true},\"currentUser\":null,\"refInfo\":{\"name\":\"master\",\"listCacheKey\":\"v0:1699981173.0\",\"canEdit\":false,\"refType\":\"branch\",\"currentOid\":\"8784e8eec1a5adf2164e1cb3e18f4d853d94fe36\"},\"tree\":{\"items\":[{\"name\":\"mleap\",\"path\":\"python/mleap\",\"contentType\":\"directory\"},{\"name\":\"tests\",\"path\":\"python/tests\",\"contentType\":\"directory\"},{\"name\":\".gitignore\",\"path\":\"python/.gitignore\",\"contentType\":\"file\"},{\"name\":\"AUTHORS.md\",\"path\":\"python/AUTHORS.md\",\"contentType\":\"file\"},{\"name\":\"Makefile\",\"path\":\"python/Makefile\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"python/README.md\",\"contentType\":\"file\"},{\"name\":\"requirements-dev.txt\",\"path\":\"python/requirements-dev.txt\",\"contentType\":\"file\"},{\"name\":\"requirements.txt\",\"path\":\"python/requirements.txt\",\"contentType\":\"file\"},{\"name\":\"setup.cfg\",\"path\":\"python/setup.cfg\",\"contentType\":\"file\"},{\"name\":\"setup.py\",\"path\":\"python/setup.py\",\"contentType\":\"file\"},{\"name\":\"tox.ini\",\"path\":\"python/tox.ini\",\"contentType\":\"file\"}],\"templateDirectorySuggestionUrl\":null,\"readme\":{\"displayName\":\"README.md\",\"richText\":\"<article class=\\\"markdown-body entry-content container-lg\\\" itemprop=\\\"text\\\"><div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h1 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Python integration package for MLeap</h1><a id=\\\"user-content-python-integration-package-for-mleap\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Python integration package for MLeap\\\" href=\\\"#python-integration-package-for-mleap\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">This package contains libraries to integrate MLeap with:</p>\\n<ul dir=\\\"auto\\\">\\n<li>PySpark</li>\\n<li>Scikit-Learn</li>\\n<li>TensorFlow (coming soon)</li>\\n</ul>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h1 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Installation</h1><a id=\\\"user-content-installation\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Installation\\\" href=\\\"#installation\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<div class=\\\"highlight highlight-source-shell notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"$ pip install mleap\\\"><pre>$ pip install mleap</pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">PySpark Integration</h2><a id=\\\"user-content-pyspark-integration\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: PySpark Integration\\\" href=\\\"#pyspark-integration\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">MLeap's PySpark library provides serialization and deserialization functionality to/from Bundle.ML. There is 100% parity between MLeap's PySpark and Scala/Spark support and all of the supported transformers can be found <a href=\\\"https://combust.github.io/mleap-docs/core-concepts/transformers/support.html\\\" rel=\\\"nofollow\\\">here</a>.</p>\\n<p dir=\\\"auto\\\">We have both a <a href=\\\"https://combust.github.io/mleap-docs/py-spark/\\\" rel=\\\"nofollow\\\">basic tutorial</a> and an <a href=\\\"https://github.com/combust/mleap-demo/blob/master/notebooks/PySpark%20-%20AirBnb.ipynb\\\">advance demo</a> of serializing and de-serializing using PySpark, but in short you can continue to write ML Pipelines as you normally would and we provide the following interface for serialization/de-serialization:</p>\\n<div class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# Define your pipeline\\nfeature_pipeline = [string_indexer, feature_assembler]\\n\\nfeaturePipeline = Pipeline(stages=feature_pipeline)\\n\\n# Fit your pipeline\\nfittedPipeline = featurePipeline.fit(df)\\n\\n# Serialize your pipeline\\nfittedPipeline.serializeToBundle(&quot;jar:file:/tmp/pyspark.example.zip&quot;, fittedPipeline.transform(df))\\\"><pre><span class=\\\"pl-c\\\"># Define your pipeline</span>\\n<span class=\\\"pl-s1\\\">feature_pipeline</span> <span class=\\\"pl-c1\\\">=</span> [<span class=\\\"pl-s1\\\">string_indexer</span>, <span class=\\\"pl-s1\\\">feature_assembler</span>]\\n\\n<span class=\\\"pl-s1\\\">featurePipeline</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-v\\\">Pipeline</span>(<span class=\\\"pl-s1\\\">stages</span><span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-s1\\\">feature_pipeline</span>)\\n\\n<span class=\\\"pl-c\\\"># Fit your pipeline</span>\\n<span class=\\\"pl-s1\\\">fittedPipeline</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">featurePipeline</span>.<span class=\\\"pl-en\\\">fit</span>(<span class=\\\"pl-s1\\\">df</span>)\\n\\n<span class=\\\"pl-c\\\"># Serialize your pipeline</span>\\n<span class=\\\"pl-s1\\\">fittedPipeline</span>.<span class=\\\"pl-en\\\">serializeToBundle</span>(<span class=\\\"pl-s\\\">\\\"jar:file:/tmp/pyspark.example.zip\\\"</span>, <span class=\\\"pl-s1\\\">fittedPipeline</span>.<span class=\\\"pl-en\\\">transform</span>(<span class=\\\"pl-s1\\\">df</span>))</pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">StringMap transformer</h3><a id=\\\"user-content-stringmap-transformer\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: StringMap transformer\\\" href=\\\"#stringmap-transformer\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<div class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# dict of label mappings\\nlabels = {'a': 1.0}\\n\\nstring_map_transformer = StringMap(\\n    labels, 'key_col', 'value_col', handleInvalid='keep', defaultValue=0.0)\\\"><pre><span class=\\\"pl-c\\\"># dict of label mappings</span>\\n<span class=\\\"pl-s1\\\">labels</span> <span class=\\\"pl-c1\\\">=</span> {<span class=\\\"pl-s\\\">'a'</span>: <span class=\\\"pl-c1\\\">1.0</span>}\\n\\n<span class=\\\"pl-s1\\\">string_map_transformer</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-v\\\">StringMap</span>(\\n    <span class=\\\"pl-s1\\\">labels</span>, <span class=\\\"pl-s\\\">'key_col'</span>, <span class=\\\"pl-s\\\">'value_col'</span>, <span class=\\\"pl-s1\\\">handleInvalid</span><span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-s\\\">'keep'</span>, <span class=\\\"pl-s1\\\">defaultValue</span><span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-c1\\\">0.0</span>)</pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">MathUnary transformer</h3><a id=\\\"user-content-mathunary-transformer\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: MathUnary transformer\\\" href=\\\"#mathunary-transformer\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">Example usage:</p>\\n<div class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# dict of label mappings\\ninput_dataframe = pd.DataFrame([[0.1, 0.2, 0.3]], columns=['f1'])\\n\\nsin_transformer = MathUnary(\\n    operation=UnaryOperation.Sin,\\n    inputCol=&quot;f1&quot;,\\n    outputCol=&quot;sin(f1)&quot;,\\n)\\n\\nsin_transformer.transform(input_dataframe)\\\"><pre><span class=\\\"pl-c\\\"># dict of label mappings</span>\\n<span class=\\\"pl-s1\\\">input_dataframe</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">pd</span>.<span class=\\\"pl-v\\\">DataFrame</span>([[<span class=\\\"pl-c1\\\">0.1</span>, <span class=\\\"pl-c1\\\">0.2</span>, <span class=\\\"pl-c1\\\">0.3</span>]], <span class=\\\"pl-s1\\\">columns</span><span class=\\\"pl-c1\\\">=</span>[<span class=\\\"pl-s\\\">'f1'</span>])\\n\\n<span class=\\\"pl-s1\\\">sin_transformer</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-v\\\">MathUnary</span>(\\n    <span class=\\\"pl-s1\\\">operation</span><span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-v\\\">UnaryOperation</span>.<span class=\\\"pl-v\\\">Sin</span>,\\n    <span class=\\\"pl-s1\\\">inputCol</span><span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-s\\\">\\\"f1\\\"</span>,\\n    <span class=\\\"pl-s1\\\">outputCol</span><span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-s\\\">\\\"sin(f1)\\\"</span>,\\n)\\n\\n<span class=\\\"pl-s1\\\">sin_transformer</span>.<span class=\\\"pl-en\\\">transform</span>(<span class=\\\"pl-s1\\\">input_dataframe</span>)</pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Scikit-Learn Integration</h2><a id=\\\"user-content-scikit-learn-integration\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Scikit-Learn Integration\\\" href=\\\"#scikit-learn-integration\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">MLeap's Scikit-Learn library provides serialization (de-serialization coming soon) functionality to Bundle.ML. There is already parity between the math that Scikit and Spark transformers execute, and MLeap takes advantage of that to provide a common serialization format for the two technologies.</p>\\n<p dir=\\\"auto\\\">A simple example is the <code>StandardScaler</code> transformer that normalizes the data given the mean and standard deviation. Both Spark and Scikit perform the standard normal transform on the data, and can both be serialized to the following format:</p>\\n<div class=\\\"highlight highlight-source-json notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"{\\n    &quot;op&quot;: &quot;standard_scaler&quot;,\\n    &quot;attributes&quot;: {\\n        &quot;mean&quot;: {\\n              &quot;double&quot;: [0.2354223, 1.34502332],\\n              &quot;shape&quot;: {\\n                &quot;dimensions&quot;: [{\\n                  &quot;size&quot;: 2,\\n                  &quot;name&quot;: &quot;&quot;\\n                }]\\n              },\\n             &quot;type&quot;: &quot;tensor&quot;             \\n        },\\n        &quot;std&quot;: {\\n              &quot;double&quot;: [0.13842223, 0.78320249],\\n              &quot;shape&quot;: {\\n                &quot;dimensions&quot;: [{\\n                  &quot;size&quot;: 2,\\n                  &quot;name&quot;: &quot;&quot;\\n                }]\\n              },\\n             &quot;type&quot;: &quot;tensor&quot;\\n        }\\n    }\\n}\\\"><pre>{\\n    <span class=\\\"pl-ent\\\">\\\"op\\\"</span>: <span class=\\\"pl-s\\\"><span class=\\\"pl-pds\\\">\\\"</span>standard_scaler<span class=\\\"pl-pds\\\">\\\"</span></span>,\\n    <span class=\\\"pl-ent\\\">\\\"attributes\\\"</span>: {\\n        <span class=\\\"pl-ent\\\">\\\"mean\\\"</span>: {\\n              <span class=\\\"pl-ent\\\">\\\"double\\\"</span>: [<span class=\\\"pl-c1\\\">0.2354223</span>, <span class=\\\"pl-c1\\\">1.34502332</span>],\\n              <span class=\\\"pl-ent\\\">\\\"shape\\\"</span>: {\\n                <span class=\\\"pl-ent\\\">\\\"dimensions\\\"</span>: [{\\n                  <span class=\\\"pl-ent\\\">\\\"size\\\"</span>: <span class=\\\"pl-c1\\\">2</span>,\\n                  <span class=\\\"pl-ent\\\">\\\"name\\\"</span>: <span class=\\\"pl-s\\\"><span class=\\\"pl-pds\\\">\\\"</span><span class=\\\"pl-pds\\\">\\\"</span></span>\\n                }]\\n              },\\n             <span class=\\\"pl-ent\\\">\\\"type\\\"</span>: <span class=\\\"pl-s\\\"><span class=\\\"pl-pds\\\">\\\"</span>tensor<span class=\\\"pl-pds\\\">\\\"</span></span>             \\n        },\\n        <span class=\\\"pl-ent\\\">\\\"std\\\"</span>: {\\n              <span class=\\\"pl-ent\\\">\\\"double\\\"</span>: [<span class=\\\"pl-c1\\\">0.13842223</span>, <span class=\\\"pl-c1\\\">0.78320249</span>],\\n              <span class=\\\"pl-ent\\\">\\\"shape\\\"</span>: {\\n                <span class=\\\"pl-ent\\\">\\\"dimensions\\\"</span>: [{\\n                  <span class=\\\"pl-ent\\\">\\\"size\\\"</span>: <span class=\\\"pl-c1\\\">2</span>,\\n                  <span class=\\\"pl-ent\\\">\\\"name\\\"</span>: <span class=\\\"pl-s\\\"><span class=\\\"pl-pds\\\">\\\"</span><span class=\\\"pl-pds\\\">\\\"</span></span>\\n                }]\\n              },\\n             <span class=\\\"pl-ent\\\">\\\"type\\\"</span>: <span class=\\\"pl-s\\\"><span class=\\\"pl-pds\\\">\\\"</span>tensor<span class=\\\"pl-pds\\\">\\\"</span></span>\\n        }\\n    }\\n}</pre></div>\\n<p dir=\\\"auto\\\">Scikit-Learn pipelines, just like Spark Pipelines, can be serialized to an MLeap Bundle and deployed to an <a href=\\\"https://combust.github.io/mleap-docs/mleap-runtime/\\\" rel=\\\"nofollow\\\">MLeap runtime environment</a>.</p>\\n<p dir=\\\"auto\\\">You can also take your scikit pipelines and deploy them to your Spark cluster, because MLeap can de-serialize them into a Spark ML Pipeline and execute them on data frames.</p>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Documentation</h2><a id=\\\"user-content-documentation\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Documentation\\\" href=\\\"#documentation\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">Documentation can be found on our mleap docs page:</p>\\n<ul dir=\\\"auto\\\">\\n<li><a href=\\\"https://combust.github.io/mleap-docs/getting-started/py-spark.html\\\" rel=\\\"nofollow\\\">PySpark</a></li>\\n<li><a href=\\\"https://combust.github.io/mleap-docs/getting-started/scikit-learn.html\\\" rel=\\\"nofollow\\\">Scikit-Learn</a></li>\\n</ul>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Contributions</h2><a id=\\\"user-content-contributions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Contributions\\\" href=\\\"#contributions\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">Contributions are welcome! Make sure all python tests pass.\\nYou can run them from the top-level makefile:</p>\\n<div class=\\\"highlight highlight-source-shell notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"make py37_test\\\"><pre>make py37_test</pre></div>\\n<p dir=\\\"auto\\\">If you'd rather use the inner <code>python/Makefile</code>, remember to source SCALA_CLASS_PATH by running:</p>\\n<div class=\\\"highlight highlight-source-shell notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"source scripts/scala_classpath_for_python.sh\\ncd python/ &amp;&amp; make test\\\"><pre><span class=\\\"pl-c1\\\">source</span> scripts/scala_classpath_for_python.sh\\n<span class=\\\"pl-c1\\\">cd</span> python/ <span class=\\\"pl-k\\\">&amp;&amp;</span> make <span class=\\\"pl-c1\\\">test</span></pre></div>\\n</article>\",\"errorMessage\":null,\"headerInfo\":{\"toc\":[{\"level\":1,\"text\":\"Python integration package for MLeap\",\"anchor\":\"python-integration-package-for-mleap\",\"htmlText\":\"Python integration package for MLeap\"},{\"level\":1,\"text\":\"Installation\",\"anchor\":\"installation\",\"htmlText\":\"Installation\"},{\"level\":2,\"text\":\"PySpark Integration\",\"anchor\":\"pyspark-integration\",\"htmlText\":\"PySpark Integration\"},{\"level\":3,\"text\":\"StringMap transformer\",\"anchor\":\"stringmap-transformer\",\"htmlText\":\"StringMap transformer\"},{\"level\":3,\"text\":\"MathUnary transformer\",\"anchor\":\"mathunary-transformer\",\"htmlText\":\"MathUnary transformer\"},{\"level\":2,\"text\":\"Scikit-Learn Integration\",\"anchor\":\"scikit-learn-integration\",\"htmlText\":\"Scikit-Learn Integration\"},{\"level\":2,\"text\":\"Documentation\",\"anchor\":\"documentation\",\"htmlText\":\"Documentation\"},{\"level\":2,\"text\":\"Contributions\",\"anchor\":\"contributions\",\"htmlText\":\"Contributions\"}],\"siteNavLoginPath\":\"/login?return_to=https%3A%2F%2Fgithub.com%2Fcombust%2Fmleap%2Ftree%2Fmaster%2Fpython\"}},\"totalCount\":11,\"showBranchInfobar\":false},\"fileTree\":{\"\":{\"items\":[{\"name\":\"bundle-hdfs\",\"path\":\"bundle-hdfs\",\"contentType\":\"directory\"},{\"name\":\"bundle-ml\",\"path\":\"bundle-ml\",\"contentType\":\"directory\"},{\"name\":\"bundle-protobuf\",\"path\":\"bundle-protobuf\",\"contentType\":\"submodule\",\"submoduleUrl\":\"/combust/bundle-protobuf/tree/b02e8bbae5fbc7d27abd81d5122874bab8ef0836\",\"submoduleDisplayName\":\"bundle-protobuf @ b02e8bb\"},{\"name\":\"examples\",\"path\":\"examples\",\"contentType\":\"directory\"},{\"name\":\"mleap-avro\",\"path\":\"mleap-avro\",\"contentType\":\"directory\"},{\"name\":\"mleap-base\",\"path\":\"mleap-base\",\"contentType\":\"directory\"},{\"name\":\"mleap-benchmark\",\"path\":\"mleap-benchmark\",\"contentType\":\"directory\"},{\"name\":\"mleap-core\",\"path\":\"mleap-core\",\"contentType\":\"directory\"},{\"name\":\"mleap-databricks-runtime-fat\",\"path\":\"mleap-databricks-runtime-fat\",\"contentType\":\"directory\"},{\"name\":\"mleap-databricks-runtime-testkit\",\"path\":\"mleap-databricks-runtime-testkit\",\"contentType\":\"directory\"},{\"name\":\"mleap-databricks-runtime\",\"path\":\"mleap-databricks-runtime\",\"contentType\":\"directory\"},{\"name\":\"mleap-executor-testkit\",\"path\":\"mleap-executor-testkit\",\"contentType\":\"directory\"},{\"name\":\"mleap-executor-tests\",\"path\":\"mleap-executor-tests\",\"contentType\":\"directory\"},{\"name\":\"mleap-executor\",\"path\":\"mleap-executor\",\"contentType\":\"directory\"},{\"name\":\"mleap-grpc-server\",\"path\":\"mleap-grpc-server\",\"contentType\":\"directory\"},{\"name\":\"mleap-grpc\",\"path\":\"mleap-grpc\",\"contentType\":\"directory\"},{\"name\":\"mleap-repository-s3\",\"path\":\"mleap-repository-s3\",\"contentType\":\"directory\"},{\"name\":\"mleap-runtime\",\"path\":\"mleap-runtime\",\"contentType\":\"directory\"},{\"name\":\"mleap-serving\",\"path\":\"mleap-serving\",\"contentType\":\"directory\"},{\"name\":\"mleap-spark-base\",\"path\":\"mleap-spark-base\",\"contentType\":\"directory\"},{\"name\":\"mleap-spark-extension\",\"path\":\"mleap-spark-extension\",\"contentType\":\"directory\"},{\"name\":\"mleap-spark-testkit\",\"path\":\"mleap-spark-testkit\",\"contentType\":\"directory\"},{\"name\":\"mleap-spark\",\"path\":\"mleap-spark\",\"contentType\":\"directory\"},{\"name\":\"mleap-spring-boot\",\"path\":\"mleap-spring-boot\",\"contentType\":\"directory\"},{\"name\":\"mleap-tensor\",\"path\":\"mleap-tensor\",\"contentType\":\"directory\"},{\"name\":\"mleap-tensorflow\",\"path\":\"mleap-tensorflow\",\"contentType\":\"directory\"},{\"name\":\"mleap-xgboost-runtime\",\"path\":\"mleap-xgboost-runtime\",\"contentType\":\"directory\"},{\"name\":\"mleap-xgboost-spark\",\"path\":\"mleap-xgboost-spark\",\"contentType\":\"directory\"},{\"name\":\"project\",\"path\":\"project\",\"contentType\":\"directory\"},{\"name\":\"python\",\"path\":\"python\",\"contentType\":\"directory\"},{\"name\":\"scripts\",\"path\":\"scripts\",\"contentType\":\"directory\"},{\"name\":\"travis\",\"path\":\"travis\",\"contentType\":\"directory\"},{\"name\":\".gitignore\",\"path\":\".gitignore\",\"contentType\":\"file\"},{\"name\":\".gitmodules\",\"path\":\".gitmodules\",\"contentType\":\"file\"},{\"name\":\".travis.yml\",\"path\":\".travis.yml\",\"contentType\":\"file\"},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"contentType\":\"file\"},{\"name\":\"Makefile\",\"path\":\"Makefile\",\"contentType\":\"file\"},{\"name\":\"NOTICE\",\"path\":\"NOTICE\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"README.md\",\"contentType\":\"file\"},{\"name\":\"RELEASE_NOTES.md\",\"path\":\"RELEASE_NOTES.md\",\"contentType\":\"file\"},{\"name\":\"build.sbt\",\"path\":\"build.sbt\",\"contentType\":\"file\"},{\"name\":\"logo.png\",\"path\":\"logo.png\",\"contentType\":\"file\"},{\"name\":\"version.sbt\",\"path\":\"version.sbt\",\"contentType\":\"file\"}],\"totalCount\":43}},\"fileTreeProcessingTime\":9.620291,\"foldersToFetch\":[],\"treeExpanded\":true,\"symbolsExpanded\":false,\"csrf_tokens\":{\"/combust/mleap/branches\":{\"post\":\"7xB2YAfkVocCLPTg0RQPft-SqlrOEYPAPCx9cvpPx7lM3Iy0UeFEL14dRnx9i_dAXCQDR9rkTZL6trtynkx2DA\"},\"/combust/mleap/branches/fetch_and_merge/master\":{\"post\":\"cLHZ6_8xSbr7s8Hdpy3RY_nRkB6WgU4thFumTtDGeZ03La5QBZa2RBs2Cljv-5_FspcKSyuiCmzbAH5__r9-Hg\"},\"/combust/mleap/branches/fetch_and_merge/master?discard_changes=true\":{\"post\":\"6f7lrrgvZfWHW5kzG-FH2HVwh4WNDZvrzajoRZP-OxKuYpIVQoiaC2feUrZTNwl-PjYd0DAu36qS8zB0vYc8kQ\"}}},\"title\":\"mleap/python at master \u00b7 combust/mleap\"}",
  "embeddings": []
}
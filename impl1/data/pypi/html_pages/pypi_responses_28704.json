{
  "libtype": "pypi",
  "libname": "responses",
  "url": "https://pypi.org/project/responses/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>responses \u00b7 PyPI</title>    <meta name=\"description\" content=\"A utility library for mocking out the `requests` Python library.\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for responses\" href=\"/rss/project/responses/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/responses/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/responses/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"responses\">    <meta property=\"og:description\" content=\"A utility library for mocking out the `requests` Python library.\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/getsentry/responses\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:getsentry/responses+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        responses 0.25.0      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install responses</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/responses/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2024-02-13T21:15:42+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 13, 2024</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/responses\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">A utility library for mocking out the `requests` Python library.</p><div data-html-include=\"/_includes/edit-project-button/responses\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for responses\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/getsentry/responses\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/getsentry/responses/issues\" rel=\"nofollow\">        <i class=\"fas fa-bug\" aria-hidden=\"true\"></i>Bug Tracker      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/getsentry/responses/blob/master/CHANGES\" rel=\"nofollow\">        <i class=\"fas fa-scroll\" aria-hidden=\"true\"></i>Changes      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/getsentry/responses/blob/master/README.rst\" rel=\"nofollow\">        <i class=\"fas fa-book\" aria-hidden=\"true\"></i>Documentation      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/getsentry/responses\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>Source Code      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/responses\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> Apache 2.0</p>    <p><strong>Author:</strong> David Cramer</p>  <p>    <strong>Requires:</strong> Python &gt;=3.8  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/dcramer/\" aria-label=\"dcramer\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/5919ab90b620089ba7af38a8869f03bd8135f403/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f35313536376134663738366364386132633431633531336235393264653966393f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for dcramer from gravatar.com\" title=\"Avatar for dcramer from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            dcramer          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/getsentry/\" aria-label=\"getsentry\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/d1522420c87ac027811a8098205c675bab4847e6/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f61653532646339386263393634363434613633643139633032396433663031323f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for getsentry from gravatar.com\" title=\"Avatar for getsentry from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            getsentry          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+System+Administrators\">            System Administrators          </a>        </li>      </ul>    </li>    <li>      <strong>Operating System</strong>      <ul>        <li>          <a href=\"/search/?c=Operating+System+%3A%3A+OS+Independent\">            OS Independent          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.12\">            Python :: 3.12          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development\">            Software Development          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for responses\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <a href=\"https://pypi.python.org/pypi/responses/\" rel=nofollow><img alt=\"https://img.shields.io/pypi/v/responses.svg\" src=\"https://pypi-camo.freetls.fastly.net/850fce350f36fc4022df4bc5af7b7df623c39d7e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f726573706f6e7365732e737667\"></a><a href=\"https://pypi.org/project/responses/\" rel=nofollow><img alt=\"https://img.shields.io/pypi/pyversions/responses.svg\" src=\"https://pypi-camo.freetls.fastly.net/fd3b040f97e32e02209b37e09c85da41357bb63a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f726573706f6e7365732e737667\"></a><a href=\"https://pypi.python.org/pypi/responses/\" rel=nofollow><img alt=\"https://img.shields.io/pypi/dm/responses\" src=\"https://pypi-camo.freetls.fastly.net/e59921b67440d116502ca63c8494c2a1de6d6b0f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f726573706f6e736573\"></a><a href=\"https://codecov.io/gh/getsentry/responses/\" rel=nofollow><img alt=\"https://codecov.io/gh/getsentry/responses/branch/master/graph/badge.svg\" src=\"https://pypi-camo.freetls.fastly.net/bd4affbe28382eb3914d18f0e44a44ed0af63de8/68747470733a2f2f636f6465636f762e696f2f67682f67657473656e7472792f726573706f6e7365732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a><p>A utility library for mocking out the <span class=\"docutils literal\">requests</span> Python library.</p><aside class=\"admonition note\"><p class=admonition-title>Note</p><p>Responses requires Python 3.8 or newer, and requests &gt;= 2.30.0</p></aside><section id=table-of-contents><h2><a href=#toc-entry-1 rel=nofollow>Table of Contents</a></h2><nav class=contents id=contents><p class=topic-title>Contents</p><ul class=simple><li><p><a href=#table-of-contents id=toc-entry-1 rel=nofollow>Table of Contents</a></li><li><p><a href=#installing id=toc-entry-2 rel=nofollow>Installing</a></li><li><p><a href=#deprecations-and-migration-path id=toc-entry-3 rel=nofollow>Deprecations and Migration Path</a></li><li><p><a href=#beta-features id=toc-entry-4 rel=nofollow>BETA Features</a></p><ul><li><p><a href=#record-responses-to-files id=toc-entry-5 rel=nofollow>Record Responses to files</a></li><li><p><a href=#replay-responses-populate-registry-from-files id=toc-entry-6 rel=nofollow>Replay responses (populate registry) from files</a></li></ul></li><li><p><a href=#basics id=toc-entry-7 rel=nofollow>Basics</a></p><ul><li><p><a href=#main-interface id=toc-entry-8 rel=nofollow>Main Interface</a></li><li><p><a href=#shortcuts id=toc-entry-9 rel=nofollow>Shortcuts</a></li><li><p><a href=#responses-as-a-context-manager id=toc-entry-10 rel=nofollow>Responses as a context manager</a></li></ul></li><li><p><a href=#response-parameters id=toc-entry-11 rel=nofollow>Response Parameters</a></li><li><p><a href=#exception-as-response-body id=toc-entry-12 rel=nofollow>Exception as Response body</a></li><li><p><a href=#matching-requests id=toc-entry-13 rel=nofollow>Matching Requests</a></p><ul><li><p><a href=#matching-request-body-contents id=toc-entry-14 rel=nofollow>Matching Request Body Contents</a></p><ul><li><p><a href=#url-encoded-data id=toc-entry-15 rel=nofollow>URL-encoded data</a></li><li><p><a href=#json-encoded-data id=toc-entry-16 rel=nofollow>JSON encoded data</a></li></ul></li><li><p><a href=#query-parameters-matcher id=toc-entry-17 rel=nofollow>Query Parameters Matcher</a></p><ul><li><p><a href=#query-parameters-as-a-dictionary id=toc-entry-18 rel=nofollow>Query Parameters as a Dictionary</a></li><li><p><a href=#query-parameters-as-a-string id=toc-entry-19 rel=nofollow>Query Parameters as a String</a></li></ul></li><li><p><a href=#request-keyword-arguments-matcher id=toc-entry-20 rel=nofollow>Request Keyword Arguments Matcher</a></li><li><p><a href=#request-multipart-form-data-data-validation id=toc-entry-21 rel=nofollow>Request multipart/form-data Data Validation</a></li><li><p><a href=#request-fragment-identifier-validation id=toc-entry-22 rel=nofollow>Request Fragment Identifier Validation</a></li><li><p><a href=#request-headers-validation id=toc-entry-23 rel=nofollow>Request Headers Validation</a></li><li><p><a href=#creating-custom-matcher id=toc-entry-24 rel=nofollow>Creating Custom Matcher</a></li></ul></li><li><p><a href=#response-registry id=toc-entry-25 rel=nofollow>Response Registry</a></p><ul><li><p><a href=#default-registry id=toc-entry-26 rel=nofollow>Default Registry</a></li><li><p><a href=#ordered-registry id=toc-entry-27 rel=nofollow>Ordered Registry</a></li><li><p><a href=#custom-registry id=toc-entry-28 rel=nofollow>Custom Registry</a></li></ul></li><li><p><a href=#dynamic-responses id=toc-entry-29 rel=nofollow>Dynamic Responses</a></li><li><p><a href=#integration-with-unit-test-frameworks id=toc-entry-30 rel=nofollow>Integration with unit test frameworks</a></p><ul><li><p><a href=#responses-as-a-pytest-fixture id=toc-entry-31 rel=nofollow>Responses as a <span class=\"docutils literal\">pytest</span> fixture</a></li><li><p><a href=#add-default-responses-for-each-test id=toc-entry-32 rel=nofollow>Add default responses for each test</a></li><li><p><a href=#requestmock-methods-start-stop-reset id=toc-entry-33 rel=nofollow>RequestMock methods: start, stop, reset</a></li></ul></li><li><p><a href=#assertions-on-declared-responses id=toc-entry-34 rel=nofollow>Assertions on declared responses</a></li><li><p><a href=#assert-request-call-count id=toc-entry-35 rel=nofollow>Assert Request Call Count</a></p><ul><li><p><a href=#assert-based-on-response-object id=toc-entry-36 rel=nofollow>Assert based on <span class=\"docutils literal\">Response</span> object</a></li><li><p><a href=#assert-based-on-the-exact-url id=toc-entry-37 rel=nofollow>Assert based on the exact URL</a></li></ul></li><li><p><a href=#assert-request-calls-data id=toc-entry-38 rel=nofollow>Assert Request Calls data</a></li><li><p><a href=#multiple-responses id=toc-entry-39 rel=nofollow>Multiple Responses</a></li><li><p><a href=#url-redirection id=toc-entry-40 rel=nofollow>URL Redirection</a></li><li><p><a href=#validate-retry-mechanism id=toc-entry-41 rel=nofollow>Validate <span class=\"docutils literal\">Retry</span> mechanism</a></li><li><p><a href=#using-a-callback-to-modify-the-response id=toc-entry-42 rel=nofollow>Using a callback to modify the response</a></li><li><p><a href=#passing-through-real-requests id=toc-entry-43 rel=nofollow>Passing through real requests</a></li><li><p><a href=#viewing-modifying-registered-responses id=toc-entry-44 rel=nofollow>Viewing/Modifying registered responses</a></li><li><p><a href=#coroutines-and-multithreading id=toc-entry-45 rel=nofollow>Coroutines and Multithreading</a></li><li><p><a href=#contributing id=toc-entry-46 rel=nofollow>Contributing</a></p><ul><li><p><a href=#environment-configuration id=toc-entry-47 rel=nofollow>Environment Configuration</a></li><li><p><a href=#tests-and-code-quality-validation id=toc-entry-48 rel=nofollow>Tests and Code Quality Validation</a></p><ul><li><p><a href=#unit-tests id=toc-entry-49 rel=nofollow>Unit tests</a></li><li><p><a href=#type-validation id=toc-entry-50 rel=nofollow>Type Validation</a></li><li><p><a href=#code-quality-and-style id=toc-entry-51 rel=nofollow>Code Quality and Style</a></li></ul></li></ul></li></ul></nav></section><section id=installing><h2><a href=#toc-entry-2 rel=nofollow>Installing</a></h2><p><span class=\"docutils literal\">pip install responses</span></p></section><section id=deprecations-and-migration-path><h2><a href=#toc-entry-3 rel=nofollow>Deprecations and Migration Path</a></h2><p>Here you will find a list of deprecated functionality and a migration path for each.Please ensure to update your code according to the guidance.</p><table><caption>Deprecation and Migration</caption><colgroup><col><col><col></colgroup><thead><tr><th class=head><p>Deprecated Functionality</th><th class=head><p>Deprecated in Version</th><th class=head><p>Migration Path</th></tr></thead><tbody><tr><td><p><span class=\"docutils literal\">responses.json_params_matcher</span></td><td><p>0.14.0</td><td><p><span class=\"docutils literal\">responses.matchers.json_params_matcher</span></td></tr><tr><td><p><span class=\"docutils literal\">responses.urlencoded_params_matcher</span></td><td><p>0.14.0</td><td><p><span class=\"docutils literal\">responses.matchers.urlencoded_params_matcher</span></td></tr><tr><td><p><span class=\"docutils literal\">stream</span> argument in <span class=\"docutils literal\">Response</span> and <span class=\"docutils literal\">CallbackResponse</span></td><td><p>0.15.0</td><td><p>Use <span class=\"docutils literal\">stream</span> argument in request directly.</td></tr><tr><td><p><span class=\"docutils literal\">match_querystring</span> argument in <span class=\"docutils literal\">Response</span> and <span class=\"docutils literal\">CallbackResponse</span>.</td><td><p>0.17.0</td><td><p>Use <span class=\"docutils literal\">responses.matchers.query_param_matcher</span> or <span class=\"docutils literal\">responses.matchers.query_string_matcher</span></td></tr><tr><td><p><span class=\"docutils literal\">responses.assert_all_requests_are_fired</span>, <span class=\"docutils literal\">responses.passthru_prefixes</span>, <span class=\"docutils literal\">responses.target</span></td><td><p>0.20.0</td><td><p>Use <span class=\"docutils literal\">responses.mock.assert_all_requests_are_fired</span>,<span class=\"docutils literal\">responses.mock.passthru_prefixes</span>, <span class=\"docutils literal\">responses.mock.target</span> instead.</td></tr></tbody></table></section><section id=beta-features><h2><a href=#toc-entry-4 rel=nofollow>BETA Features</a></h2><p>Below you can find a list of BETA features. Although we will try to keep the API backwards compatiblewith released version, we reserve the right to change these APIs before they are considered stable. Please share your feedback via<a href=\"https://github.com/getsentry/responses/issues\" rel=nofollow>GitHub Issues</a>.</p><section id=record-responses-to-files><h3><a href=#toc-entry-5 rel=nofollow>Record Responses to files</a></h3><p>You can perform real requests to the server and <span class=\"docutils literal\">responses</span> will automatically record the output to thefile. Recorded data is stored in <a href=\"https://yaml.org\" rel=nofollow>YAML</a> format.</p><p>Apply <span class=\"docutils literal\"><span class=pre>@responses._recorder.record(file_path=\"out.yaml\")</span></span> decorator to any function where you performrequests to record responses to <span class=\"docutils literal\">out.yaml</span> file.</p><p>Following code</p><pre><code><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>from</span> <span class=nn>responses</span> <span class=kn>import</span> <span class=n>_recorder</span><span class=w></span><span class=k>def</span> <span class=nf>another</span><span class=p>():</span><span class=w></span>    <span class=n>rsp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://httpstat.us/500\"</span><span class=p>)</span><span class=w></span>    <span class=n>rsp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://httpstat.us/202\"</span><span class=p>)</span><span class=w></span><span class=nd>@_recorder</span><span class=o>.</span><span class=n>record</span><span class=p>(</span><span class=n>file_path</span><span class=o>=</span><span class=s2>\"out.yaml\"</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>test_recorder</span><span class=p>():</span><span class=w></span>    <span class=n>rsp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://httpstat.us/404\"</span><span class=p>)</span><span class=w></span>    <span class=n>rsp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://httpbin.org/status/wrong\"</span><span class=p>)</span><span class=w></span>    <span class=n>another</span><span class=p>()</span></code></pre><p>will produce next output:</p><pre><code><span class=nt>responses</span><span class=p>:</span><span class=w></span><span class=p-Indicator>-</span><span class=w> </span><span class=nt>response</span><span class=p>:</span><span class=w>    </span><span class=nt>auto_calculate_content_length</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>false</span><span class=w>    </span><span class=nt>body</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>404 Not Found</span><span class=w>    </span><span class=nt>content_type</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>text/plain</span><span class=w>    </span><span class=nt>method</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>GET</span><span class=w>    </span><span class=nt>status</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>404</span><span class=w>    </span><span class=nt>url</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>https://httpstat.us/404</span><span class=w></span><span class=p-Indicator>-</span><span class=w> </span><span class=nt>response</span><span class=p>:</span><span class=w>    </span><span class=nt>auto_calculate_content_length</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>false</span><span class=w>    </span><span class=nt>body</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>Invalid status code</span><span class=w>    </span><span class=nt>content_type</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>text/plain</span><span class=w>    </span><span class=nt>method</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>GET</span><span class=w>    </span><span class=nt>status</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>400</span><span class=w>    </span><span class=nt>url</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>https://httpbin.org/status/wrong</span><span class=w></span><span class=p-Indicator>-</span><span class=w> </span><span class=nt>response</span><span class=p>:</span><span class=w>    </span><span class=nt>auto_calculate_content_length</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>false</span><span class=w>    </span><span class=nt>body</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>500 Internal Server Error</span><span class=w>    </span><span class=nt>content_type</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>text/plain</span><span class=w>    </span><span class=nt>method</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>GET</span><span class=w>    </span><span class=nt>status</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>500</span><span class=w>    </span><span class=nt>url</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>https://httpstat.us/500</span><span class=w></span><span class=p-Indicator>-</span><span class=w> </span><span class=nt>response</span><span class=p>:</span><span class=w>    </span><span class=nt>auto_calculate_content_length</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>false</span><span class=w>    </span><span class=nt>body</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>202 Accepted</span><span class=w>    </span><span class=nt>content_type</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>text/plain</span><span class=w>    </span><span class=nt>method</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>GET</span><span class=w>    </span><span class=nt>status</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>202</span><span class=w>    </span><span class=nt>url</span><span class=p>:</span><span class=w> </span><span class=l-Scalar-Plain>https://httpstat.us/202</span></code></pre></section><section id=replay-responses-populate-registry-from-files><h3><a href=#toc-entry-6 rel=nofollow>Replay responses (populate registry) from files</a></h3><p>You can populate your active registry from a <span class=\"docutils literal\">yaml</span> file with recorded responses.(See <a href=#record-responses-to-files rel=nofollow>Record Responses to files</a> to understand how to obtain a file).To do that you need to execute <span class=\"docutils literal\"><span class=pre>responses._add_from_file(file_path=\"out.yaml\")</span></span> withinan activated decorator or a context manager.</p><p>The following code example registers a <span class=\"docutils literal\">patch</span> response, then all responses present in<span class=\"docutils literal\">out.yaml</span> file and a <span class=\"docutils literal\">post</span> response at the end.</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>run</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>patch</span><span class=p>(</span><span class=s2>\"http://httpbin.org\"</span><span class=p>)</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>_add_from_file</span><span class=p>(</span><span class=n>file_path</span><span class=o>=</span><span class=s2>\"out.yaml\"</span><span class=p>)</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=s2>\"http://httpbin.org/form\"</span><span class=p>)</span><span class=w></span><span class=n>run</span><span class=p>()</span></code></pre></section></section><section id=basics><h2><a href=#toc-entry-7 rel=nofollow>Basics</a></h2><p>The core of <span class=\"docutils literal\">responses</span> comes from registering mock responses and covering test functionwith <span class=\"docutils literal\">responses.activate</span> decorator. <span class=\"docutils literal\">responses</span> provides similar interface as <span class=\"docutils literal\">requests</span>.</p><section id=main-interface><h3><a href=#toc-entry-8 rel=nofollow>Main Interface</a></h3><ul class=simple><li><p>responses.add(<span class=\"docutils literal\">Response</span> or <span class=\"docutils literal\">Response args</span>) - allows either to register <span class=\"docutils literal\">Response</span> object or directlyprovide arguments of <span class=\"docutils literal\">Response</span> object. See <a href=#response-parameters rel=nofollow>Response Parameters</a></li></ul><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_simple</span><span class=p>():</span><span class=w></span>    <span class=c1># Register via 'Response' object</span><span class=w></span>    <span class=n>rsp1</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>Response</span><span class=p>(</span><span class=w></span>        <span class=n>method</span><span class=o>=</span><span class=s2>\"PUT\"</span><span class=p>,</span><span class=w></span>        <span class=n>url</span><span class=o>=</span><span class=s2>\"http://example.com\"</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>add</span><span class=p>(</span><span class=n>rsp1</span><span class=p>)</span><span class=w></span>    <span class=c1># register via direct arguments</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>add</span><span class=p>(</span><span class=w></span>        <span class=n>responses</span><span class=o>.</span><span class=n>GET</span><span class=p>,</span><span class=w></span>        <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span><span class=w></span>        <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"error\"</span><span class=p>:</span> <span class=s2>\"not found\"</span><span class=p>},</span><span class=w></span>        <span class=n>status</span><span class=o>=</span><span class=mi>404</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>    <span class=n>resp2</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>put</span><span class=p>(</span><span class=s2>\"http://example.com\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>json</span><span class=p>()</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"error\"</span><span class=p>:</span> <span class=s2>\"not found\"</span><span class=p>}</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>404</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp2</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>200</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp2</span><span class=o>.</span><span class=n>request</span><span class=o>.</span><span class=n>method</span> <span class=o>==</span> <span class=s2>\"PUT\"</span></code></pre><p>If you attempt to fetch a url which doesn\u2019t hit a match, <span class=\"docutils literal\">responses</span> will raisea <span class=\"docutils literal\">ConnectionError</span>:</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>from</span> <span class=nn>requests.exceptions</span> <span class=kn>import</span> <span class=ne>ConnectionError</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_simple</span><span class=p>():</span><span class=w></span>    <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=ne>ConnectionError</span><span class=p>):</span><span class=w></span>        <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span></code></pre></section><section id=shortcuts><h3><a href=#toc-entry-9 rel=nofollow>Shortcuts</a></h3><p>Shortcuts provide a shorten version of <span class=\"docutils literal\">responses.add()</span> where method argument is prefilled</p><ul class=simple><li><p>responses.delete(<span class=\"docutils literal\">Response args</span>) - register DELETE response</li><li><p>responses.get(<span class=\"docutils literal\">Response args</span>) - register GET response</li><li><p>responses.head(<span class=\"docutils literal\">Response args</span>) - register HEAD response</li><li><p>responses.options(<span class=\"docutils literal\">Response args</span>) - register OPTIONS response</li><li><p>responses.patch(<span class=\"docutils literal\">Response args</span>) - register PATCH response</li><li><p>responses.post(<span class=\"docutils literal\">Response args</span>) - register POST response</li><li><p>responses.put(<span class=\"docutils literal\">Response args</span>) - register PUT response</li></ul><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_simple</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span><span class=w></span>        <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"type\"</span><span class=p>:</span> <span class=s2>\"get\"</span><span class=p>},</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=w></span>        <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span><span class=w></span>        <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"type\"</span><span class=p>:</span> <span class=s2>\"post\"</span><span class=p>},</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>patch</span><span class=p>(</span><span class=w></span>        <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span><span class=w></span>        <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"type\"</span><span class=p>:</span> <span class=s2>\"patch\"</span><span class=p>},</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>resp_get</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>    <span class=n>resp_post</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>    <span class=n>resp_patch</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>patch</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp_get</span><span class=o>.</span><span class=n>json</span><span class=p>()</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"type\"</span><span class=p>:</span> <span class=s2>\"get\"</span><span class=p>}</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp_post</span><span class=o>.</span><span class=n>json</span><span class=p>()</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"type\"</span><span class=p>:</span> <span class=s2>\"post\"</span><span class=p>}</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp_patch</span><span class=o>.</span><span class=n>json</span><span class=p>()</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"type\"</span><span class=p>:</span> <span class=s2>\"patch\"</span><span class=p>}</span></code></pre></section><section id=responses-as-a-context-manager><h3><a href=#toc-entry-10 rel=nofollow>Responses as a context manager</a></h3><p>Instead of wrapping the whole function with decorator you can use a context manager.</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=k>def</span> <span class=nf>test_my_api</span><span class=p>():</span><span class=w></span>    <span class=k>with</span> <span class=n>responses</span><span class=o>.</span><span class=n>RequestsMock</span><span class=p>()</span> <span class=k>as</span> <span class=n>rsps</span><span class=p>:</span><span class=w></span>        <span class=n>rsps</span><span class=o>.</span><span class=n>add</span><span class=p>(</span><span class=w></span>            <span class=n>responses</span><span class=o>.</span><span class=n>GET</span><span class=p>,</span><span class=w></span>            <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span><span class=w></span>            <span class=n>body</span><span class=o>=</span><span class=s2>\"</span><span class=si>{}</span><span class=s2>\"</span><span class=p>,</span><span class=w></span>            <span class=n>status</span><span class=o>=</span><span class=mi>200</span><span class=p>,</span><span class=w></span>            <span class=n>content_type</span><span class=o>=</span><span class=s2>\"application/json\"</span><span class=p>,</span><span class=w></span>        <span class=p>)</span><span class=w></span>        <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>        <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>200</span><span class=w></span>    <span class=c1># outside the context manager requests will hit the remote server</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>    <span class=n>resp</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>404</span></code></pre></section></section><section id=response-parameters><h2><a href=#toc-entry-11 rel=nofollow>Response Parameters</a></h2><p>The following attributes can be passed to a Response mock:</p><dl><dt>method (<span class=\"docutils literal\">str</span>)</dt><dd><p>The HTTP method (GET, POST, etc).</p></dd><dt>url (<span class=\"docutils literal\">str</span> or <span class=\"docutils literal\">compiled regular expression</span>)</dt><dd><p>The full resource URL.</p></dd><dt>match_querystring (<span class=\"docutils literal\">bool</span>)</dt><dd><p>DEPRECATED: Use <span class=\"docutils literal\">responses.matchers.query_param_matcher</span> or<span class=\"docutils literal\">responses.matchers.query_string_matcher</span></p><p>Include the query string when matching requests.Enabled by default if the response URL contains a query string,disabled if it doesn\u2019t or the URL is a regular expression.</p></dd><dt>body (<span class=\"docutils literal\">str</span> or <span class=\"docutils literal\">BufferedReader</span> or <span class=\"docutils literal\">Exception</span>)</dt><dd><p>The response body. Read more <a href=#exception-as-response-body rel=nofollow>Exception as Response body</a></p></dd><dt>json</dt><dd><p>A Python object representing the JSON response body. Automatically configuresthe appropriate Content-Type.</p></dd><dt>status (<span class=\"docutils literal\">int</span>)</dt><dd><p>The HTTP status code.</p></dd><dt>content_type (<span class=\"docutils literal\">content_type</span>)</dt><dd><p>Defaults to <span class=\"docutils literal\">text/plain</span>.</p></dd><dt>headers (<span class=\"docutils literal\">dict</span>)</dt><dd><p>Response headers.</p></dd><dt>stream (<span class=\"docutils literal\">bool</span>)</dt><dd><p>DEPRECATED: use <span class=\"docutils literal\">stream</span> argument in request directly</p></dd><dt>auto_calculate_content_length (<span class=\"docutils literal\">bool</span>)</dt><dd><p>Disabled by default. Automatically calculates the length of a supplied string or JSON body.</p></dd><dt>match (<span class=\"docutils literal\">tuple</span>)</dt><dd><p>An iterable (<span class=\"docutils literal\">tuple</span> is recommended) of callbacks to match requestsbased on request attributes.Current module provides multiple matchers that you can use to match:</p><ul class=simple><li><p>body contents in JSON format</li><li><p>body contents in URL encoded data format</li><li><p>request query parameters</li><li><p>request query string (similar to query parameters but takes string as input)</li><li><p>kwargs provided to request e.g. <span class=\"docutils literal\">stream</span>, <span class=\"docutils literal\">verify</span></li><li><p>\u2018multipart/form-data\u2019 content and headers in request</li><li><p>request headers</li><li><p>request fragment identifier</li></ul><p>Alternatively user can create custom matcher.Read more <a href=#matching-requests rel=nofollow>Matching Requests</a></p></dd></dl></section><section id=exception-as-response-body><h2><a href=#toc-entry-12 rel=nofollow>Exception as Response body</a></h2><p>You can pass an <span class=\"docutils literal\">Exception</span> as the body to trigger an error on the request:</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_simple</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span> <span class=n>body</span><span class=o>=</span><span class=ne>Exception</span><span class=p>(</span><span class=s2>\"...\"</span><span class=p>))</span><span class=w></span>    <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=ne>Exception</span><span class=p>):</span><span class=w></span>        <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span></code></pre></section><section id=matching-requests><h2><a href=#toc-entry-13 rel=nofollow>Matching Requests</a></h2><section id=matching-request-body-contents><h3><a href=#toc-entry-14 rel=nofollow>Matching Request Body Contents</a></h3><p>When adding responses for endpoints that are sent request data you can addmatchers to ensure your code is sending the right parameters and providedifferent responses based on the request body contents. <span class=\"docutils literal\">responses</span> providesmatchers for JSON and URL-encoded request bodies.</p><section id=url-encoded-data><h4><a href=#toc-entry-15 rel=nofollow>URL-encoded data</a></h4><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>from</span> <span class=nn>responses</span> <span class=kn>import</span> <span class=n>matchers</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_calc_api</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=w></span>        <span class=n>url</span><span class=o>=</span><span class=s2>\"http://calc.com/sum\"</span><span class=p>,</span><span class=w></span>        <span class=n>body</span><span class=o>=</span><span class=s2>\"4\"</span><span class=p>,</span><span class=w></span>        <span class=n>match</span><span class=o>=</span><span class=p>[</span><span class=n>matchers</span><span class=o>.</span><span class=n>urlencoded_params_matcher</span><span class=p>({</span><span class=s2>\"left\"</span><span class=p>:</span> <span class=s2>\"1\"</span><span class=p>,</span> <span class=s2>\"right\"</span><span class=p>:</span> <span class=s2>\"3\"</span><span class=p>})],</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>requests</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=s2>\"http://calc.com/sum\"</span><span class=p>,</span> <span class=n>data</span><span class=o>=</span><span class=p>{</span><span class=s2>\"left\"</span><span class=p>:</span> <span class=mi>1</span><span class=p>,</span> <span class=s2>\"right\"</span><span class=p>:</span> <span class=mi>3</span><span class=p>})</span></code></pre></section><section id=json-encoded-data><h4><a href=#toc-entry-16 rel=nofollow>JSON encoded data</a></h4><p>Matching JSON encoded data can be done with <span class=\"docutils literal\">matchers.json_params_matcher()</span>.</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>from</span> <span class=nn>responses</span> <span class=kn>import</span> <span class=n>matchers</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_calc_api</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=w></span>        <span class=n>url</span><span class=o>=</span><span class=s2>\"http://example.com/\"</span><span class=p>,</span><span class=w></span>        <span class=n>body</span><span class=o>=</span><span class=s2>\"one\"</span><span class=p>,</span><span class=w></span>        <span class=n>match</span><span class=o>=</span><span class=p>[</span><span class=w></span>            <span class=n>matchers</span><span class=o>.</span><span class=n>json_params_matcher</span><span class=p>({</span><span class=s2>\"page\"</span><span class=p>:</span> <span class=p>{</span><span class=s2>\"name\"</span><span class=p>:</span> <span class=s2>\"first\"</span><span class=p>,</span> <span class=s2>\"type\"</span><span class=p>:</span> <span class=s2>\"json\"</span><span class=p>}})</span><span class=w></span>        <span class=p>],</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>request</span><span class=p>(</span><span class=w></span>        <span class=s2>\"POST\"</span><span class=p>,</span><span class=w></span>        <span class=s2>\"http://example.com/\"</span><span class=p>,</span><span class=w></span>        <span class=n>headers</span><span class=o>=</span><span class=p>{</span><span class=s2>\"Content-Type\"</span><span class=p>:</span> <span class=s2>\"application/json\"</span><span class=p>},</span><span class=w></span>        <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"page\"</span><span class=p>:</span> <span class=p>{</span><span class=s2>\"name\"</span><span class=p>:</span> <span class=s2>\"first\"</span><span class=p>,</span> <span class=s2>\"type\"</span><span class=p>:</span> <span class=s2>\"json\"</span><span class=p>}},</span><span class=w></span>    <span class=p>)</span></code></pre></section></section><section id=query-parameters-matcher><h3><a href=#toc-entry-17 rel=nofollow>Query Parameters Matcher</a></h3><section id=query-parameters-as-a-dictionary><h4><a href=#toc-entry-18 rel=nofollow>Query Parameters as a Dictionary</a></h4><p>You can use the <span class=\"docutils literal\">matchers.query_param_matcher</span> function to matchagainst the <span class=\"docutils literal\">params</span> request parameter. Just use the same dictionary as youwill use in <span class=\"docutils literal\">params</span> argument in <span class=\"docutils literal\">request</span>.</p><p>Note, do not use query parameters as part of the URL. Avoid using <span class=\"docutils literal\">match_querystring</span>deprecated argument.</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>from</span> <span class=nn>responses</span> <span class=kn>import</span> <span class=n>matchers</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_calc_api</span><span class=p>():</span><span class=w></span>    <span class=n>url</span> <span class=o>=</span> <span class=s2>\"http://example.com/test\"</span><span class=w></span>    <span class=n>params</span> <span class=o>=</span> <span class=p>{</span><span class=s2>\"hello\"</span><span class=p>:</span> <span class=s2>\"world\"</span><span class=p>,</span> <span class=s2>\"I am\"</span><span class=p>:</span> <span class=s2>\"a big test\"</span><span class=p>}</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=n>url</span><span class=o>=</span><span class=n>url</span><span class=p>,</span><span class=w></span>        <span class=n>body</span><span class=o>=</span><span class=s2>\"test\"</span><span class=p>,</span><span class=w></span>        <span class=n>match</span><span class=o>=</span><span class=p>[</span><span class=n>matchers</span><span class=o>.</span><span class=n>query_param_matcher</span><span class=p>(</span><span class=n>params</span><span class=p>)],</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>url</span><span class=p>,</span> <span class=n>params</span><span class=o>=</span><span class=n>params</span><span class=p>)</span><span class=w></span>    <span class=n>constructed_url</span> <span class=o>=</span> <span class=sa>r</span><span class=s2>\"http://example.com/test?I+am=a+big+test&amp;hello=world\"</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>url</span> <span class=o>==</span> <span class=n>constructed_url</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>request</span><span class=o>.</span><span class=n>url</span> <span class=o>==</span> <span class=n>constructed_url</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>request</span><span class=o>.</span><span class=n>params</span> <span class=o>==</span> <span class=n>params</span></code></pre><p>By default, matcher will validate that all parameters match strictly.To validate that only parameters specified in the matcher are present in original requestuse <span class=\"docutils literal\">strict_match=False</span>.</p></section><section id=query-parameters-as-a-string><h4><a href=#toc-entry-19 rel=nofollow>Query Parameters as a String</a></h4><p>As alternative, you can use query string value in <span class=\"docutils literal\">matchers.query_string_matcher</span> to matchquery parameters in your request</p><pre><code><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>from</span> <span class=nn>responses</span> <span class=kn>import</span> <span class=n>matchers</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>my_func</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=s2>\"https://httpbin.org/get\"</span><span class=p>,</span><span class=w></span>        <span class=n>match</span><span class=o>=</span><span class=p>[</span><span class=n>matchers</span><span class=o>.</span><span class=n>query_string_matcher</span><span class=p>(</span><span class=s2>\"didi=pro&amp;test=1\"</span><span class=p>)],</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://httpbin.org/get\"</span><span class=p>,</span> <span class=n>params</span><span class=o>=</span><span class=p>{</span><span class=s2>\"test\"</span><span class=p>:</span> <span class=mi>1</span><span class=p>,</span> <span class=s2>\"didi\"</span><span class=p>:</span> <span class=s2>\"pro\"</span><span class=p>})</span><span class=w></span><span class=n>my_func</span><span class=p>()</span></code></pre></section></section><section id=request-keyword-arguments-matcher><h3><a href=#toc-entry-20 rel=nofollow>Request Keyword Arguments Matcher</a></h3><p>To validate request arguments use the <span class=\"docutils literal\">matchers.request_kwargs_matcher</span> function to matchagainst the request kwargs.</p><p>Only following arguments are supported: <span class=\"docutils literal\">timeout</span>, <span class=\"docutils literal\">verify</span>, <span class=\"docutils literal\">proxies</span>, <span class=\"docutils literal\">stream</span>, <span class=\"docutils literal\">cert</span>.</p><p>Note, only arguments provided to <span class=\"docutils literal\">matchers.request_kwargs_matcher</span> will be validated.</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>from</span> <span class=nn>responses</span> <span class=kn>import</span> <span class=n>matchers</span><span class=w></span><span class=k>with</span> <span class=n>responses</span><span class=o>.</span><span class=n>RequestsMock</span><span class=p>(</span><span class=n>assert_all_requests_are_fired</span><span class=o>=</span><span class=kc>False</span><span class=p>)</span> <span class=k>as</span> <span class=n>rsps</span><span class=p>:</span><span class=w></span>    <span class=n>req_kwargs</span> <span class=o>=</span> <span class=p>{</span><span class=w></span>        <span class=s2>\"stream\"</span><span class=p>:</span> <span class=kc>True</span><span class=p>,</span><span class=w></span>        <span class=s2>\"verify\"</span><span class=p>:</span> <span class=kc>False</span><span class=p>,</span><span class=w></span>    <span class=p>}</span><span class=w></span>    <span class=n>rsps</span><span class=o>.</span><span class=n>add</span><span class=p>(</span><span class=w></span>        <span class=s2>\"GET\"</span><span class=p>,</span><span class=w></span>        <span class=s2>\"http://111.com\"</span><span class=p>,</span><span class=w></span>        <span class=n>match</span><span class=o>=</span><span class=p>[</span><span class=n>matchers</span><span class=o>.</span><span class=n>request_kwargs_matcher</span><span class=p>(</span><span class=n>req_kwargs</span><span class=p>)],</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://111.com\"</span><span class=p>,</span> <span class=n>stream</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=w></span>    <span class=c1># &gt;&gt;&gt;  Arguments don't match: {stream: True, verify: True} doesn't match {stream: True, verify: False}</span></code></pre></section><section id=request-multipart-form-data-data-validation><h3><a href=#toc-entry-21 rel=nofollow>Request multipart/form-data Data Validation</a></h3><p>To validate request body and headers for <span class=\"docutils literal\"><span class=pre>multipart/form-data</span></span> data you can use<span class=\"docutils literal\">matchers.multipart_matcher</span>. The <span class=\"docutils literal\">data</span>, and <span class=\"docutils literal\">files</span> parameters provided will be comparedto the request:</p><pre><code><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>from</span> <span class=nn>responses.matchers</span> <span class=kn>import</span> <span class=n>multipart_matcher</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>my_func</span><span class=p>():</span><span class=w></span>    <span class=n>req_data</span> <span class=o>=</span> <span class=p>{</span><span class=s2>\"some\"</span><span class=p>:</span> <span class=s2>\"other\"</span><span class=p>,</span> <span class=s2>\"data\"</span><span class=p>:</span> <span class=s2>\"fields\"</span><span class=p>}</span><span class=w></span>    <span class=n>req_files</span> <span class=o>=</span> <span class=p>{</span><span class=s2>\"file_name\"</span><span class=p>:</span> <span class=sa>b</span><span class=s2>\"Old World!\"</span><span class=p>}</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=w></span>        <span class=n>url</span><span class=o>=</span><span class=s2>\"http://httpbin.org/post\"</span><span class=p>,</span><span class=w></span>        <span class=n>match</span><span class=o>=</span><span class=p>[</span><span class=n>multipart_matcher</span><span class=p>(</span><span class=n>req_files</span><span class=p>,</span> <span class=n>data</span><span class=o>=</span><span class=n>req_data</span><span class=p>)],</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=s2>\"http://httpbin.org/post\"</span><span class=p>,</span> <span class=n>files</span><span class=o>=</span><span class=p>{</span><span class=s2>\"file_name\"</span><span class=p>:</span> <span class=sa>b</span><span class=s2>\"New World!\"</span><span class=p>})</span><span class=w></span><span class=n>my_func</span><span class=p>()</span><span class=w></span><span class=c1># &gt;&gt;&gt; raises ConnectionError: multipart/form-data doesn't match. Request body differs.</span></code></pre></section><section id=request-fragment-identifier-validation><h3><a href=#toc-entry-22 rel=nofollow>Request Fragment Identifier Validation</a></h3><p>To validate request URL fragment identifier you can use <span class=\"docutils literal\">matchers.fragment_identifier_matcher</span>.The matcher takes fragment string (everything after <span class=\"docutils literal\">#</span> sign) as input for comparison:</p><pre><code><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>from</span> <span class=nn>responses.matchers</span> <span class=kn>import</span> <span class=n>fragment_identifier_matcher</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>run</span><span class=p>():</span><span class=w></span>    <span class=n>url</span> <span class=o>=</span> <span class=s2>\"http://example.com?ab=xy&amp;zed=qwe#test=1&amp;foo=bar\"</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=n>url</span><span class=p>,</span><span class=w></span>        <span class=n>match</span><span class=o>=</span><span class=p>[</span><span class=n>fragment_identifier_matcher</span><span class=p>(</span><span class=s2>\"test=1&amp;foo=bar\"</span><span class=p>)],</span><span class=w></span>        <span class=n>body</span><span class=o>=</span><span class=sa>b</span><span class=s2>\"test\"</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=c1># two requests to check reversed order of fragment identifier</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://example.com?ab=xy&amp;zed=qwe#test=1&amp;foo=bar\"</span><span class=p>)</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://example.com?zed=qwe&amp;ab=xy#foo=bar&amp;test=1\"</span><span class=p>)</span><span class=w></span><span class=n>run</span><span class=p>()</span></code></pre></section><section id=request-headers-validation><h3><a href=#toc-entry-23 rel=nofollow>Request Headers Validation</a></h3><p>When adding responses you can specify matchers to ensure that your code issending the right headers and provide different responses based on the requestheaders.</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>from</span> <span class=nn>responses</span> <span class=kn>import</span> <span class=n>matchers</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_content_type</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=n>url</span><span class=o>=</span><span class=s2>\"http://example.com/\"</span><span class=p>,</span><span class=w></span>        <span class=n>body</span><span class=o>=</span><span class=s2>\"hello world\"</span><span class=p>,</span><span class=w></span>        <span class=n>match</span><span class=o>=</span><span class=p>[</span><span class=n>matchers</span><span class=o>.</span><span class=n>header_matcher</span><span class=p>({</span><span class=s2>\"Accept\"</span><span class=p>:</span> <span class=s2>\"text/plain\"</span><span class=p>})],</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=n>url</span><span class=o>=</span><span class=s2>\"http://example.com/\"</span><span class=p>,</span><span class=w></span>        <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"content\"</span><span class=p>:</span> <span class=s2>\"hello world\"</span><span class=p>},</span><span class=w></span>        <span class=n>match</span><span class=o>=</span><span class=p>[</span><span class=n>matchers</span><span class=o>.</span><span class=n>header_matcher</span><span class=p>({</span><span class=s2>\"Accept\"</span><span class=p>:</span> <span class=s2>\"application/json\"</span><span class=p>})],</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=c1># request in reverse order to how they were added!</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://example.com/\"</span><span class=p>,</span> <span class=n>headers</span><span class=o>=</span><span class=p>{</span><span class=s2>\"Accept\"</span><span class=p>:</span> <span class=s2>\"application/json\"</span><span class=p>})</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>json</span><span class=p>()</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"content\"</span><span class=p>:</span> <span class=s2>\"hello world\"</span><span class=p>}</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://example.com/\"</span><span class=p>,</span> <span class=n>headers</span><span class=o>=</span><span class=p>{</span><span class=s2>\"Accept\"</span><span class=p>:</span> <span class=s2>\"text/plain\"</span><span class=p>})</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>text</span> <span class=o>==</span> <span class=s2>\"hello world\"</span></code></pre><p>Because <span class=\"docutils literal\">requests</span> will send several standard headers in addition to what wasspecified by your code, request headers that are additional to the onespassed to the matcher are ignored by default. You can change this behaviour bypassing <span class=\"docutils literal\">strict_match=True</span> to the matcher to ensure that only the headersthat you\u2019re expecting are sent and no others. Note that you will probably haveto use a <span class=\"docutils literal\">PreparedRequest</span> in your code to ensure that <span class=\"docutils literal\">requests</span> doesn\u2019tinclude any additional headers.</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>from</span> <span class=nn>responses</span> <span class=kn>import</span> <span class=n>matchers</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_content_type</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=n>url</span><span class=o>=</span><span class=s2>\"http://example.com/\"</span><span class=p>,</span><span class=w></span>        <span class=n>body</span><span class=o>=</span><span class=s2>\"hello world\"</span><span class=p>,</span><span class=w></span>        <span class=n>match</span><span class=o>=</span><span class=p>[</span><span class=n>matchers</span><span class=o>.</span><span class=n>header_matcher</span><span class=p>({</span><span class=s2>\"Accept\"</span><span class=p>:</span> <span class=s2>\"text/plain\"</span><span class=p>},</span> <span class=n>strict_match</span><span class=o>=</span><span class=kc>True</span><span class=p>)],</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=c1># this will fail because requests adds its own headers</span><span class=w></span>    <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=ne>ConnectionError</span><span class=p>):</span><span class=w></span>        <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://example.com/\"</span><span class=p>,</span> <span class=n>headers</span><span class=o>=</span><span class=p>{</span><span class=s2>\"Accept\"</span><span class=p>:</span> <span class=s2>\"text/plain\"</span><span class=p>})</span><span class=w></span>    <span class=c1># a prepared request where you overwrite the headers before sending will work</span><span class=w></span>    <span class=n>session</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>Session</span><span class=p>()</span><span class=w></span>    <span class=n>prepped</span> <span class=o>=</span> <span class=n>session</span><span class=o>.</span><span class=n>prepare_request</span><span class=p>(</span><span class=w></span>        <span class=n>requests</span><span class=o>.</span><span class=n>Request</span><span class=p>(</span><span class=w></span>            <span class=n>method</span><span class=o>=</span><span class=s2>\"GET\"</span><span class=p>,</span><span class=w></span>            <span class=n>url</span><span class=o>=</span><span class=s2>\"http://example.com/\"</span><span class=p>,</span><span class=w></span>        <span class=p>)</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>prepped</span><span class=o>.</span><span class=n>headers</span> <span class=o>=</span> <span class=p>{</span><span class=s2>\"Accept\"</span><span class=p>:</span> <span class=s2>\"text/plain\"</span><span class=p>}</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>session</span><span class=o>.</span><span class=n>send</span><span class=p>(</span><span class=n>prepped</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>text</span> <span class=o>==</span> <span class=s2>\"hello world\"</span></code></pre></section><section id=creating-custom-matcher><h3><a href=#toc-entry-24 rel=nofollow>Creating Custom Matcher</a></h3><p>If your application requires other encodings or different data validation you can buildyour own matcher that returns <span class=\"docutils literal\">Tuple[matches: bool, reason: str]</span>.Where boolean represents <span class=\"docutils literal\">True</span> or <span class=\"docutils literal\">False</span> if the request parameters match andthe string is a reason in case of match failure. Your matcher canexpect a <span class=\"docutils literal\">PreparedRequest</span> parameter to be provided by <span class=\"docutils literal\">responses</span>.</p><p>Note, <span class=\"docutils literal\">PreparedRequest</span> is customized and has additional attributes <span class=\"docutils literal\">params</span> and <span class=\"docutils literal\">req_kwargs</span>.</p></section></section><section id=response-registry><h2><a href=#toc-entry-25 rel=nofollow>Response Registry</a></h2><section id=default-registry><h3><a href=#toc-entry-26 rel=nofollow>Default Registry</a></h3><p>By default, <span class=\"docutils literal\">responses</span> will search all registered <span class=\"docutils literal\">Response</span> objects andreturn a match. If only one <span class=\"docutils literal\">Response</span> is registered, the registry is kept unchanged.However, if multiple matches are found for the same request, then first match is returned andremoved from registry.</p></section><section id=ordered-registry><h3><a href=#toc-entry-27 rel=nofollow>Ordered Registry</a></h3><p>In some scenarios it is important to preserve the order of the requests and responses.You can use <span class=\"docutils literal\">registries.OrderedRegistry</span> to force all <span class=\"docutils literal\">Response</span> objects to be dependenton the insertion order and invocation index.In following example we add multiple <span class=\"docutils literal\">Response</span> objects that target the same URL. However,you can see, that status code will depend on the invocation order.</p><pre><code><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>from</span> <span class=nn>responses.registries</span> <span class=kn>import</span> <span class=n>OrderedRegistry</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=p>(</span><span class=n>registry</span><span class=o>=</span><span class=n>OrderedRegistry</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>test_invocation_index</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span><span class=w></span>        <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"msg\"</span><span class=p>:</span> <span class=s2>\"not found\"</span><span class=p>},</span><span class=w></span>        <span class=n>status</span><span class=o>=</span><span class=mi>404</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span><span class=w></span>        <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"msg\"</span><span class=p>:</span> <span class=s2>\"OK\"</span><span class=p>},</span><span class=w></span>        <span class=n>status</span><span class=o>=</span><span class=mi>200</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span><span class=w></span>        <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"msg\"</span><span class=p>:</span> <span class=s2>\"OK\"</span><span class=p>},</span><span class=w></span>        <span class=n>status</span><span class=o>=</span><span class=mi>200</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span><span class=w></span>        <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"msg\"</span><span class=p>:</span> <span class=s2>\"not found\"</span><span class=p>},</span><span class=w></span>        <span class=n>status</span><span class=o>=</span><span class=mi>404</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>404</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>200</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>200</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>404</span></code></pre></section><section id=custom-registry><h3><a href=#toc-entry-28 rel=nofollow>Custom Registry</a></h3><p>Built-in <span class=\"docutils literal\">registries</span> are suitable for most of use cases, but to handle special conditions, you canimplement custom registry which must follow interface of <span class=\"docutils literal\">registries.FirstMatchRegistry</span>.Redefining the <span class=\"docutils literal\">find</span> method will allow you to create custom search logic and returnappropriate <span class=\"docutils literal\">Response</span></p><p>Example that shows how to set custom registry</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>from</span> <span class=nn>responses</span> <span class=kn>import</span> <span class=n>registries</span><span class=w></span><span class=k>class</span> <span class=nc>CustomRegistry</span><span class=p>(</span><span class=n>registries</span><span class=o>.</span><span class=n>FirstMatchRegistry</span><span class=p>):</span><span class=w></span>    <span class=k>pass</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=s2>\"Before tests:\"</span><span class=p>,</span> <span class=n>responses</span><span class=o>.</span><span class=n>mock</span><span class=o>.</span><span class=n>get_registry</span><span class=p>())</span><span class=w></span><span class=sd>\"\"\" Before tests: &lt;responses.registries.FirstMatchRegistry object&gt; \"\"\"</span><span class=w></span><span class=c1># using function decorator</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=p>(</span><span class=n>registry</span><span class=o>=</span><span class=n>CustomRegistry</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>run</span><span class=p>():</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=s2>\"Within test:\"</span><span class=p>,</span> <span class=n>responses</span><span class=o>.</span><span class=n>mock</span><span class=o>.</span><span class=n>get_registry</span><span class=p>())</span><span class=w>    </span><span class=sd>\"\"\" Within test: &lt;__main__.CustomRegistry object&gt; \"\"\"</span><span class=w></span><span class=n>run</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=s2>\"After test:\"</span><span class=p>,</span> <span class=n>responses</span><span class=o>.</span><span class=n>mock</span><span class=o>.</span><span class=n>get_registry</span><span class=p>())</span><span class=w></span><span class=sd>\"\"\" After test: &lt;responses.registries.FirstMatchRegistry object&gt; \"\"\"</span><span class=w></span><span class=c1># using context manager</span><span class=w></span><span class=k>with</span> <span class=n>responses</span><span class=o>.</span><span class=n>RequestsMock</span><span class=p>(</span><span class=n>registry</span><span class=o>=</span><span class=n>CustomRegistry</span><span class=p>)</span> <span class=k>as</span> <span class=n>rsps</span><span class=p>:</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=s2>\"In context manager:\"</span><span class=p>,</span> <span class=n>rsps</span><span class=o>.</span><span class=n>get_registry</span><span class=p>())</span><span class=w>    </span><span class=sd>\"\"\" In context manager: &lt;__main__.CustomRegistry object&gt; \"\"\"</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=s2>\"After exit from context manager:\"</span><span class=p>,</span> <span class=n>responses</span><span class=o>.</span><span class=n>mock</span><span class=o>.</span><span class=n>get_registry</span><span class=p>())</span><span class=w></span><span class=sd>\"\"\"After exit from context manager: &lt;responses.registries.FirstMatchRegistry object&gt;\"\"\"</span></code></pre></section></section><section id=dynamic-responses><h2><a href=#toc-entry-29 rel=nofollow>Dynamic Responses</a></h2><p>You can utilize callbacks to provide dynamic responses. The callback must returna tuple of (<span class=\"docutils literal\">status</span>, <span class=\"docutils literal\">headers</span>, <span class=\"docutils literal\">body</span>).</p><pre><code><span class=kn>import</span> <span class=nn>json</span><span class=w></span><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_calc_api</span><span class=p>():</span><span class=w></span>    <span class=k>def</span> <span class=nf>request_callback</span><span class=p>(</span><span class=n>request</span><span class=p>):</span><span class=w></span>        <span class=n>payload</span> <span class=o>=</span> <span class=n>json</span><span class=o>.</span><span class=n>loads</span><span class=p>(</span><span class=n>request</span><span class=o>.</span><span class=n>body</span><span class=p>)</span><span class=w></span>        <span class=n>resp_body</span> <span class=o>=</span> <span class=p>{</span><span class=s2>\"value\"</span><span class=p>:</span> <span class=nb>sum</span><span class=p>(</span><span class=n>payload</span><span class=p>[</span><span class=s2>\"numbers\"</span><span class=p>])}</span><span class=w></span>        <span class=n>headers</span> <span class=o>=</span> <span class=p>{</span><span class=s2>\"request-id\"</span><span class=p>:</span> <span class=s2>\"728d329e-0e86-11e4-a748-0c84dc037c13\"</span><span class=p>}</span><span class=w></span>        <span class=k>return</span> <span class=p>(</span><span class=mi>200</span><span class=p>,</span> <span class=n>headers</span><span class=p>,</span> <span class=n>json</span><span class=o>.</span><span class=n>dumps</span><span class=p>(</span><span class=n>resp_body</span><span class=p>))</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>add_callback</span><span class=p>(</span><span class=w></span>        <span class=n>responses</span><span class=o>.</span><span class=n>POST</span><span class=p>,</span><span class=w></span>        <span class=s2>\"http://calc.com/sum\"</span><span class=p>,</span><span class=w></span>        <span class=n>callback</span><span class=o>=</span><span class=n>request_callback</span><span class=p>,</span><span class=w></span>        <span class=n>content_type</span><span class=o>=</span><span class=s2>\"application/json\"</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=w></span>        <span class=s2>\"http://calc.com/sum\"</span><span class=p>,</span><span class=w></span>        <span class=n>json</span><span class=o>.</span><span class=n>dumps</span><span class=p>({</span><span class=s2>\"numbers\"</span><span class=p>:</span> <span class=p>[</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>]}),</span><span class=w></span>        <span class=n>headers</span><span class=o>=</span><span class=p>{</span><span class=s2>\"content-type\"</span><span class=p>:</span> <span class=s2>\"application/json\"</span><span class=p>},</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>json</span><span class=p>()</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"value\"</span><span class=p>:</span> <span class=mi>6</span><span class=p>}</span><span class=w></span>    <span class=k>assert</span> <span class=nb>len</span><span class=p>(</span><span class=n>responses</span><span class=o>.</span><span class=n>calls</span><span class=p>)</span> <span class=o>==</span> <span class=mi>1</span><span class=w></span>    <span class=k>assert</span> <span class=n>responses</span><span class=o>.</span><span class=n>calls</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>request</span><span class=o>.</span><span class=n>url</span> <span class=o>==</span> <span class=s2>\"http://calc.com/sum\"</span><span class=w></span>    <span class=k>assert</span> <span class=n>responses</span><span class=o>.</span><span class=n>calls</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>response</span><span class=o>.</span><span class=n>text</span> <span class=o>==</span> <span class=s1>'{\"value\": 6}'</span><span class=w></span>    <span class=k>assert</span> <span class=p>(</span><span class=w></span>        <span class=n>responses</span><span class=o>.</span><span class=n>calls</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>response</span><span class=o>.</span><span class=n>headers</span><span class=p>[</span><span class=s2>\"request-id\"</span><span class=p>]</span><span class=w></span>        <span class=o>==</span> <span class=s2>\"728d329e-0e86-11e4-a748-0c84dc037c13\"</span><span class=w></span>    <span class=p>)</span></code></pre><p>You can also pass a compiled regex to <span class=\"docutils literal\">add_callback</span> to match multiple urls:</p><pre><code><span class=kn>import</span> <span class=nn>re</span><span class=o>,</span> <span class=nn>json</span><span class=w></span><span class=kn>from</span> <span class=nn>functools</span> <span class=kn>import</span> <span class=n>reduce</span><span class=w></span><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=n>operators</span> <span class=o>=</span> <span class=p>{</span><span class=w></span>    <span class=s2>\"sum\"</span><span class=p>:</span> <span class=k>lambda</span> <span class=n>x</span><span class=p>,</span> <span class=n>y</span><span class=p>:</span> <span class=n>x</span> <span class=o>+</span> <span class=n>y</span><span class=p>,</span><span class=w></span>    <span class=s2>\"prod\"</span><span class=p>:</span> <span class=k>lambda</span> <span class=n>x</span><span class=p>,</span> <span class=n>y</span><span class=p>:</span> <span class=n>x</span> <span class=o>*</span> <span class=n>y</span><span class=p>,</span><span class=w></span>    <span class=s2>\"pow\"</span><span class=p>:</span> <span class=k>lambda</span> <span class=n>x</span><span class=p>,</span> <span class=n>y</span><span class=p>:</span> <span class=n>x</span><span class=o>**</span><span class=n>y</span><span class=p>,</span><span class=w></span><span class=p>}</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_regex_url</span><span class=p>():</span><span class=w></span>    <span class=k>def</span> <span class=nf>request_callback</span><span class=p>(</span><span class=n>request</span><span class=p>):</span><span class=w></span>        <span class=n>payload</span> <span class=o>=</span> <span class=n>json</span><span class=o>.</span><span class=n>loads</span><span class=p>(</span><span class=n>request</span><span class=o>.</span><span class=n>body</span><span class=p>)</span><span class=w></span>        <span class=n>operator_name</span> <span class=o>=</span> <span class=n>request</span><span class=o>.</span><span class=n>path_url</span><span class=p>[</span><span class=mi>1</span><span class=p>:]</span><span class=w></span>        <span class=n>operator</span> <span class=o>=</span> <span class=n>operators</span><span class=p>[</span><span class=n>operator_name</span><span class=p>]</span><span class=w></span>        <span class=n>resp_body</span> <span class=o>=</span> <span class=p>{</span><span class=s2>\"value\"</span><span class=p>:</span> <span class=n>reduce</span><span class=p>(</span><span class=n>operator</span><span class=p>,</span> <span class=n>payload</span><span class=p>[</span><span class=s2>\"numbers\"</span><span class=p>])}</span><span class=w></span>        <span class=n>headers</span> <span class=o>=</span> <span class=p>{</span><span class=s2>\"request-id\"</span><span class=p>:</span> <span class=s2>\"728d329e-0e86-11e4-a748-0c84dc037c13\"</span><span class=p>}</span><span class=w></span>        <span class=k>return</span> <span class=p>(</span><span class=mi>200</span><span class=p>,</span> <span class=n>headers</span><span class=p>,</span> <span class=n>json</span><span class=o>.</span><span class=n>dumps</span><span class=p>(</span><span class=n>resp_body</span><span class=p>))</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>add_callback</span><span class=p>(</span><span class=w></span>        <span class=n>responses</span><span class=o>.</span><span class=n>POST</span><span class=p>,</span><span class=w></span>        <span class=n>re</span><span class=o>.</span><span class=n>compile</span><span class=p>(</span><span class=s2>\"http://calc.com/(sum|prod|pow|unsupported)\"</span><span class=p>),</span><span class=w></span>        <span class=n>callback</span><span class=o>=</span><span class=n>request_callback</span><span class=p>,</span><span class=w></span>        <span class=n>content_type</span><span class=o>=</span><span class=s2>\"application/json\"</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=w></span>        <span class=s2>\"http://calc.com/prod\"</span><span class=p>,</span><span class=w></span>        <span class=n>json</span><span class=o>.</span><span class=n>dumps</span><span class=p>({</span><span class=s2>\"numbers\"</span><span class=p>:</span> <span class=p>[</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>]}),</span><span class=w></span>        <span class=n>headers</span><span class=o>=</span><span class=p>{</span><span class=s2>\"content-type\"</span><span class=p>:</span> <span class=s2>\"application/json\"</span><span class=p>},</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>json</span><span class=p>()</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"value\"</span><span class=p>:</span> <span class=mi>24</span><span class=p>}</span><span class=w></span><span class=n>test_regex_url</span><span class=p>()</span></code></pre><p>If you want to pass extra keyword arguments to the callback function, for example when reusinga callback function to give a slightly different result, you can use <span class=\"docutils literal\">functools.partial</span>:</p><pre><code><span class=kn>from</span> <span class=nn>functools</span> <span class=kn>import</span> <span class=n>partial</span><span class=w></span><span class=k>def</span> <span class=nf>request_callback</span><span class=p>(</span><span class=n>request</span><span class=p>,</span> <span class=nb>id</span><span class=o>=</span><span class=kc>None</span><span class=p>):</span><span class=w></span>    <span class=n>payload</span> <span class=o>=</span> <span class=n>json</span><span class=o>.</span><span class=n>loads</span><span class=p>(</span><span class=n>request</span><span class=o>.</span><span class=n>body</span><span class=p>)</span><span class=w></span>    <span class=n>resp_body</span> <span class=o>=</span> <span class=p>{</span><span class=s2>\"value\"</span><span class=p>:</span> <span class=nb>sum</span><span class=p>(</span><span class=n>payload</span><span class=p>[</span><span class=s2>\"numbers\"</span><span class=p>])}</span><span class=w></span>    <span class=n>headers</span> <span class=o>=</span> <span class=p>{</span><span class=s2>\"request-id\"</span><span class=p>:</span> <span class=nb>id</span><span class=p>}</span><span class=w></span>    <span class=k>return</span> <span class=p>(</span><span class=mi>200</span><span class=p>,</span> <span class=n>headers</span><span class=p>,</span> <span class=n>json</span><span class=o>.</span><span class=n>dumps</span><span class=p>(</span><span class=n>resp_body</span><span class=p>))</span><span class=w></span><span class=n>responses</span><span class=o>.</span><span class=n>add_callback</span><span class=p>(</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>POST</span><span class=p>,</span><span class=w></span>    <span class=s2>\"http://calc.com/sum\"</span><span class=p>,</span><span class=w></span>    <span class=n>callback</span><span class=o>=</span><span class=n>partial</span><span class=p>(</span><span class=n>request_callback</span><span class=p>,</span> <span class=nb>id</span><span class=o>=</span><span class=s2>\"728d329e-0e86-11e4-a748-0c84dc037c13\"</span><span class=p>),</span><span class=w></span>    <span class=n>content_type</span><span class=o>=</span><span class=s2>\"application/json\"</span><span class=p>,</span><span class=w></span><span class=p>)</span></code></pre></section><section id=integration-with-unit-test-frameworks><h2><a href=#toc-entry-30 rel=nofollow>Integration with unit test frameworks</a></h2><section id=responses-as-a-pytest-fixture><h3><a href=#toc-entry-31 rel=nofollow>Responses as a <span class=\"docutils literal\">pytest</span> fixture</a></h3><pre><code><span class=nd>@pytest</span><span class=o>.</span><span class=n>fixture</span><span class=w></span><span class=k>def</span> <span class=nf>mocked_responses</span><span class=p>():</span><span class=w></span>    <span class=k>with</span> <span class=n>responses</span><span class=o>.</span><span class=n>RequestsMock</span><span class=p>()</span> <span class=k>as</span> <span class=n>rsps</span><span class=p>:</span><span class=w></span>        <span class=k>yield</span> <span class=n>rsps</span><span class=w></span><span class=k>def</span> <span class=nf>test_api</span><span class=p>(</span><span class=n>mocked_responses</span><span class=p>):</span><span class=w></span>    <span class=n>mocked_responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span><span class=w></span>        <span class=n>body</span><span class=o>=</span><span class=s2>\"</span><span class=si>{}</span><span class=s2>\"</span><span class=p>,</span><span class=w></span>        <span class=n>status</span><span class=o>=</span><span class=mi>200</span><span class=p>,</span><span class=w></span>        <span class=n>content_type</span><span class=o>=</span><span class=s2>\"application/json\"</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>200</span></code></pre></section><section id=add-default-responses-for-each-test><h3><a href=#toc-entry-32 rel=nofollow>Add default responses for each test</a></h3><p>When run with <span class=\"docutils literal\">unittest</span> tests, this can be used to set up somegeneric class-level responses, that may be complemented by each test.Similar interface could be applied in <span class=\"docutils literal\">pytest</span> framework.</p><pre><code><span class=k>class</span> <span class=nc>TestMyApi</span><span class=p>(</span><span class=n>unittest</span><span class=o>.</span><span class=n>TestCase</span><span class=p>):</span><span class=w></span>    <span class=k>def</span> <span class=nf>setUp</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://example.com\"</span><span class=p>,</span> <span class=n>body</span><span class=o>=</span><span class=s2>\"within setup\"</span><span class=p>)</span><span class=w></span>        <span class=c1># here go other self.responses.add(...)</span><span class=w></span>    <span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span>    <span class=k>def</span> <span class=nf>test_my_func</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>            <span class=s2>\"https://httpbin.org/get\"</span><span class=p>,</span><span class=w></span>            <span class=n>match</span><span class=o>=</span><span class=p>[</span><span class=n>matchers</span><span class=o>.</span><span class=n>query_param_matcher</span><span class=p>({</span><span class=s2>\"test\"</span><span class=p>:</span> <span class=s2>\"1\"</span><span class=p>,</span> <span class=s2>\"didi\"</span><span class=p>:</span> <span class=s2>\"pro\"</span><span class=p>})],</span><span class=w></span>            <span class=n>body</span><span class=o>=</span><span class=s2>\"within test\"</span><span class=p>,</span><span class=w></span>        <span class=p>)</span><span class=w></span>        <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://example.com\"</span><span class=p>)</span><span class=w></span>        <span class=n>resp2</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>            <span class=s2>\"https://httpbin.org/get\"</span><span class=p>,</span> <span class=n>params</span><span class=o>=</span><span class=p>{</span><span class=s2>\"test\"</span><span class=p>:</span> <span class=s2>\"1\"</span><span class=p>,</span> <span class=s2>\"didi\"</span><span class=p>:</span> <span class=s2>\"pro\"</span><span class=p>}</span><span class=w></span>        <span class=p>)</span><span class=w></span>        <span class=nb>print</span><span class=p>(</span><span class=n>resp</span><span class=o>.</span><span class=n>text</span><span class=p>)</span><span class=w></span>        <span class=c1># &gt;&gt;&gt; within setup</span><span class=w></span>        <span class=nb>print</span><span class=p>(</span><span class=n>resp2</span><span class=o>.</span><span class=n>text</span><span class=p>)</span><span class=w></span>        <span class=c1># &gt;&gt;&gt; within test</span></code></pre></section><section id=requestmock-methods-start-stop-reset><h3><a href=#toc-entry-33 rel=nofollow>RequestMock methods: start, stop, reset</a></h3><p><span class=\"docutils literal\">responses</span> has <span class=\"docutils literal\">start</span>, <span class=\"docutils literal\">stop</span>, <span class=\"docutils literal\">reset</span> methods very analogous to<a href=\"https://docs.python.org/3/library/unittest.mock.html#patch-methods-start-and-stop\" rel=nofollow>unittest.mock.patch</a>.These make it simpler to do requests mocking in <span class=\"docutils literal\">setup</span> methods or whereyou want to do multiple patches without nesting decorators or with statements.</p><pre><code><span class=k>class</span> <span class=nc>TestUnitTestPatchSetup</span><span class=p>:</span><span class=w></span>    <span class=k>def</span> <span class=nf>setup</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w>        </span><span class=sd>\"\"\"Creates ``RequestsMock`` instance and starts it.\"\"\"</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>r_mock</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>RequestsMock</span><span class=p>(</span><span class=n>assert_all_requests_are_fired</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>r_mock</span><span class=o>.</span><span class=n>start</span><span class=p>()</span><span class=w></span>        <span class=c1># optionally some default responses could be registered</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>r_mock</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://example.com\"</span><span class=p>,</span> <span class=n>status</span><span class=o>=</span><span class=mi>505</span><span class=p>)</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>r_mock</span><span class=o>.</span><span class=n>put</span><span class=p>(</span><span class=s2>\"https://example.com\"</span><span class=p>,</span> <span class=n>status</span><span class=o>=</span><span class=mi>506</span><span class=p>)</span><span class=w></span>    <span class=k>def</span> <span class=nf>teardown</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w>        </span><span class=sd>\"\"\"Stops and resets RequestsMock instance.        If ``assert_all_requests_are_fired`` is set to ``True``, will raise an error        if some requests were not processed.        \"\"\"</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>r_mock</span><span class=o>.</span><span class=n>stop</span><span class=p>()</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>r_mock</span><span class=o>.</span><span class=n>reset</span><span class=p>()</span><span class=w></span>    <span class=k>def</span> <span class=nf>test_function</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://example.com\"</span><span class=p>)</span><span class=w></span>        <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>505</span><span class=w></span>        <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>put</span><span class=p>(</span><span class=s2>\"https://example.com\"</span><span class=p>)</span><span class=w></span>        <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>506</span></code></pre></section></section><section id=assertions-on-declared-responses><h2><a href=#toc-entry-34 rel=nofollow>Assertions on declared responses</a></h2><p>When used as a context manager, Responses will, by default, raise an assertionerror if a url was registered but not accessed. This can be disabled by passingthe <span class=\"docutils literal\">assert_all_requests_are_fired</span> value:</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=k>def</span> <span class=nf>test_my_api</span><span class=p>():</span><span class=w></span>    <span class=k>with</span> <span class=n>responses</span><span class=o>.</span><span class=n>RequestsMock</span><span class=p>(</span><span class=n>assert_all_requests_are_fired</span><span class=o>=</span><span class=kc>False</span><span class=p>)</span> <span class=k>as</span> <span class=n>rsps</span><span class=p>:</span><span class=w></span>        <span class=n>rsps</span><span class=o>.</span><span class=n>add</span><span class=p>(</span><span class=w></span>            <span class=n>responses</span><span class=o>.</span><span class=n>GET</span><span class=p>,</span><span class=w></span>            <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span><span class=w></span>            <span class=n>body</span><span class=o>=</span><span class=s2>\"</span><span class=si>{}</span><span class=s2>\"</span><span class=p>,</span><span class=w></span>            <span class=n>status</span><span class=o>=</span><span class=mi>200</span><span class=p>,</span><span class=w></span>            <span class=n>content_type</span><span class=o>=</span><span class=s2>\"application/json\"</span><span class=p>,</span><span class=w></span>        <span class=p>)</span></code></pre></section><section id=assert-request-call-count><h2><a href=#toc-entry-35 rel=nofollow>Assert Request Call Count</a></h2><section id=assert-based-on-response-object><h3><a href=#toc-entry-36 rel=nofollow>Assert based on <span class=\"docutils literal\">Response</span> object</a></h3><p>Each <span class=\"docutils literal\">Response</span> object has <span class=\"docutils literal\">call_count</span> attribute that could be inspectedto check how many times each request was matched.</p><pre><code><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_call_count_with_matcher</span><span class=p>():</span><span class=w></span>    <span class=n>rsp</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=s2>\"http://www.example.com\"</span><span class=p>,</span><span class=w></span>        <span class=n>match</span><span class=o>=</span><span class=p>(</span><span class=n>matchers</span><span class=o>.</span><span class=n>query_param_matcher</span><span class=p>({}),),</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>rsp2</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=s2>\"http://www.example.com\"</span><span class=p>,</span><span class=w></span>        <span class=n>match</span><span class=o>=</span><span class=p>(</span><span class=n>matchers</span><span class=o>.</span><span class=n>query_param_matcher</span><span class=p>({</span><span class=s2>\"hello\"</span><span class=p>:</span> <span class=s2>\"world\"</span><span class=p>}),),</span><span class=w></span>        <span class=n>status</span><span class=o>=</span><span class=mi>777</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://www.example.com\"</span><span class=p>)</span><span class=w></span>    <span class=n>resp1</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://www.example.com\"</span><span class=p>)</span><span class=w></span>    <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://www.example.com?hello=world\"</span><span class=p>)</span><span class=w></span>    <span class=n>resp2</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://www.example.com?hello=world\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp1</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>200</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp2</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>777</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp</span><span class=o>.</span><span class=n>call_count</span> <span class=o>==</span> <span class=mi>2</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp2</span><span class=o>.</span><span class=n>call_count</span> <span class=o>==</span> <span class=mi>2</span></code></pre></section><section id=assert-based-on-the-exact-url><h3><a href=#toc-entry-37 rel=nofollow>Assert based on the exact URL</a></h3><p>Assert that the request was called exactly n times.</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_assert_call_count</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://example.com\"</span><span class=p>)</span><span class=w></span>    <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://example.com\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>responses</span><span class=o>.</span><span class=n>assert_call_count</span><span class=p>(</span><span class=s2>\"http://example.com\"</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=ow>is</span> <span class=kc>True</span><span class=w></span>    <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://example.com\"</span><span class=p>)</span><span class=w></span>    <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=ne>AssertionError</span><span class=p>)</span> <span class=k>as</span> <span class=n>excinfo</span><span class=p>:</span><span class=w></span>        <span class=n>responses</span><span class=o>.</span><span class=n>assert_call_count</span><span class=p>(</span><span class=s2>\"http://example.com\"</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=p>(</span><span class=w></span>        <span class=s2>\"Expected URL 'http://example.com' to be called 1 times. Called 2 times.\"</span><span class=w></span>        <span class=ow>in</span> <span class=nb>str</span><span class=p>(</span><span class=n>excinfo</span><span class=o>.</span><span class=n>value</span><span class=p>)</span><span class=w></span>    <span class=p>)</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_assert_call_count_always_match_qs</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://www.example.com\"</span><span class=p>)</span><span class=w></span>    <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://www.example.com\"</span><span class=p>)</span><span class=w></span>    <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://www.example.com?hello=world\"</span><span class=p>)</span><span class=w></span>    <span class=c1># One call on each url, querystring is matched by default</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>assert_call_count</span><span class=p>(</span><span class=s2>\"http://www.example.com\"</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=ow>is</span> <span class=kc>True</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>assert_call_count</span><span class=p>(</span><span class=s2>\"http://www.example.com?hello=world\"</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=ow>is</span> <span class=kc>True</span></code></pre></section></section><section id=assert-request-calls-data><h2><a href=#toc-entry-38 rel=nofollow>Assert Request Calls data</a></h2><p><span class=\"docutils literal\">Request</span> object has <span class=\"docutils literal\">calls</span> list which elements correspond to <span class=\"docutils literal\">Call</span> objectsin the global list of <span class=\"docutils literal\">Registry</span>. This can be useful when the order of requests is notguaranteed, but you need to check their correctness, for example in multithreadedapplications.</p><pre><code><span class=kn>import</span> <span class=nn>concurrent.futures</span><span class=w></span><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_assert_calls_on_resp</span><span class=p>():</span><span class=w></span>    <span class=n>rsp1</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>patch</span><span class=p>(</span><span class=s2>\"http://www.foo.bar/1/\"</span><span class=p>,</span> <span class=n>status</span><span class=o>=</span><span class=mi>200</span><span class=p>)</span><span class=w></span>    <span class=n>rsp2</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>patch</span><span class=p>(</span><span class=s2>\"http://www.foo.bar/2/\"</span><span class=p>,</span> <span class=n>status</span><span class=o>=</span><span class=mi>400</span><span class=p>)</span><span class=w></span>    <span class=n>rsp3</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>patch</span><span class=p>(</span><span class=s2>\"http://www.foo.bar/3/\"</span><span class=p>,</span> <span class=n>status</span><span class=o>=</span><span class=mi>200</span><span class=p>)</span><span class=w></span>    <span class=k>def</span> <span class=nf>update_user</span><span class=p>(</span><span class=n>uid</span><span class=p>,</span> <span class=n>is_active</span><span class=p>):</span><span class=w></span>        <span class=n>url</span> <span class=o>=</span> <span class=sa>f</span><span class=s2>\"http://www.foo.bar/</span><span class=si>{</span><span class=n>uid</span><span class=si>}</span><span class=s2>/\"</span><span class=w></span>        <span class=n>response</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>patch</span><span class=p>(</span><span class=n>url</span><span class=p>,</span> <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"is_active\"</span><span class=p>:</span> <span class=n>is_active</span><span class=p>})</span><span class=w></span>        <span class=k>return</span> <span class=n>response</span><span class=w></span>    <span class=k>with</span> <span class=n>concurrent</span><span class=o>.</span><span class=n>futures</span><span class=o>.</span><span class=n>ThreadPoolExecutor</span><span class=p>(</span><span class=n>max_workers</span><span class=o>=</span><span class=mi>3</span><span class=p>)</span> <span class=k>as</span> <span class=n>executor</span><span class=p>:</span><span class=w></span>        <span class=n>future_to_uid</span> <span class=o>=</span> <span class=p>{</span><span class=w></span>            <span class=n>executor</span><span class=o>.</span><span class=n>submit</span><span class=p>(</span><span class=n>update_user</span><span class=p>,</span> <span class=n>uid</span><span class=p>,</span> <span class=n>is_active</span><span class=p>):</span> <span class=n>uid</span><span class=w></span>            <span class=k>for</span> <span class=p>(</span><span class=n>uid</span><span class=p>,</span> <span class=n>is_active</span><span class=p>)</span> <span class=ow>in</span> <span class=p>[(</span><span class=s2>\"3\"</span><span class=p>,</span> <span class=kc>True</span><span class=p>),</span> <span class=p>(</span><span class=s2>\"2\"</span><span class=p>,</span> <span class=kc>True</span><span class=p>),</span> <span class=p>(</span><span class=s2>\"1\"</span><span class=p>,</span> <span class=kc>False</span><span class=p>)]</span><span class=w></span>        <span class=p>}</span><span class=w></span>        <span class=k>for</span> <span class=n>future</span> <span class=ow>in</span> <span class=n>concurrent</span><span class=o>.</span><span class=n>futures</span><span class=o>.</span><span class=n>as_completed</span><span class=p>(</span><span class=n>future_to_uid</span><span class=p>):</span><span class=w></span>            <span class=n>uid</span> <span class=o>=</span> <span class=n>future_to_uid</span><span class=p>[</span><span class=n>future</span><span class=p>]</span><span class=w></span>            <span class=n>response</span> <span class=o>=</span> <span class=n>future</span><span class=o>.</span><span class=n>result</span><span class=p>()</span><span class=w></span>            <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s2>\"</span><span class=si>{</span><span class=n>uid</span><span class=si>}</span><span class=s2> updated with </span><span class=si>{</span><span class=n>response</span><span class=o>.</span><span class=n>status_code</span><span class=si>}</span><span class=s2> status code\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=nb>len</span><span class=p>(</span><span class=n>responses</span><span class=o>.</span><span class=n>calls</span><span class=p>)</span> <span class=o>==</span> <span class=mi>3</span>  <span class=c1># total calls count</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp1</span><span class=o>.</span><span class=n>call_count</span> <span class=o>==</span> <span class=mi>1</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp1</span><span class=o>.</span><span class=n>calls</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span> <span class=ow>in</span> <span class=n>responses</span><span class=o>.</span><span class=n>calls</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp1</span><span class=o>.</span><span class=n>calls</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>response</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>200</span><span class=w></span>    <span class=k>assert</span> <span class=n>json</span><span class=o>.</span><span class=n>loads</span><span class=p>(</span><span class=n>rsp1</span><span class=o>.</span><span class=n>calls</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>request</span><span class=o>.</span><span class=n>body</span><span class=p>)</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"is_active\"</span><span class=p>:</span> <span class=kc>False</span><span class=p>}</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp2</span><span class=o>.</span><span class=n>call_count</span> <span class=o>==</span> <span class=mi>1</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp2</span><span class=o>.</span><span class=n>calls</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span> <span class=ow>in</span> <span class=n>responses</span><span class=o>.</span><span class=n>calls</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp2</span><span class=o>.</span><span class=n>calls</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>response</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>400</span><span class=w></span>    <span class=k>assert</span> <span class=n>json</span><span class=o>.</span><span class=n>loads</span><span class=p>(</span><span class=n>rsp2</span><span class=o>.</span><span class=n>calls</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>request</span><span class=o>.</span><span class=n>body</span><span class=p>)</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"is_active\"</span><span class=p>:</span> <span class=kc>True</span><span class=p>}</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp3</span><span class=o>.</span><span class=n>call_count</span> <span class=o>==</span> <span class=mi>1</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp3</span><span class=o>.</span><span class=n>calls</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span> <span class=ow>in</span> <span class=n>responses</span><span class=o>.</span><span class=n>calls</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp3</span><span class=o>.</span><span class=n>calls</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>response</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>200</span><span class=w></span>    <span class=k>assert</span> <span class=n>json</span><span class=o>.</span><span class=n>loads</span><span class=p>(</span><span class=n>rsp3</span><span class=o>.</span><span class=n>calls</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>request</span><span class=o>.</span><span class=n>body</span><span class=p>)</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"is_active\"</span><span class=p>:</span> <span class=kc>True</span><span class=p>}</span></code></pre></section><section id=multiple-responses><h2><a href=#toc-entry-39 rel=nofollow>Multiple Responses</a></h2><p>You can also add multiple responses for the same url:</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_my_api</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span> <span class=n>status</span><span class=o>=</span><span class=mi>500</span><span class=p>)</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>        <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span><span class=w></span>        <span class=n>body</span><span class=o>=</span><span class=s2>\"</span><span class=si>{}</span><span class=s2>\"</span><span class=p>,</span><span class=w></span>        <span class=n>status</span><span class=o>=</span><span class=mi>200</span><span class=p>,</span><span class=w></span>        <span class=n>content_type</span><span class=o>=</span><span class=s2>\"application/json\"</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>500</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>200</span></code></pre></section><section id=url-redirection><h2><a href=#toc-entry-40 rel=nofollow>URL Redirection</a></h2><p>In the following example you can see how to create a redirection chain and add custom exception that will be raisedin the execution chain and contain the history of redirects.</p><pre><code>A -&gt; 301 redirect -&gt; BB -&gt; 301 redirect -&gt; CC -&gt; connection issue</code></pre><pre><code><span class=kn>import</span> <span class=nn>pytest</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_redirect</span><span class=p>():</span><span class=w></span>    <span class=c1># create multiple Response objects where first two contain redirect headers</span><span class=w></span>    <span class=n>rsp1</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>Response</span><span class=p>(</span><span class=w></span>        <span class=n>responses</span><span class=o>.</span><span class=n>GET</span><span class=p>,</span><span class=w></span>        <span class=s2>\"http://example.com/1\"</span><span class=p>,</span><span class=w></span>        <span class=n>status</span><span class=o>=</span><span class=mi>301</span><span class=p>,</span><span class=w></span>        <span class=n>headers</span><span class=o>=</span><span class=p>{</span><span class=s2>\"Location\"</span><span class=p>:</span> <span class=s2>\"http://example.com/2\"</span><span class=p>},</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>rsp2</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>Response</span><span class=p>(</span><span class=w></span>        <span class=n>responses</span><span class=o>.</span><span class=n>GET</span><span class=p>,</span><span class=w></span>        <span class=s2>\"http://example.com/2\"</span><span class=p>,</span><span class=w></span>        <span class=n>status</span><span class=o>=</span><span class=mi>301</span><span class=p>,</span><span class=w></span>        <span class=n>headers</span><span class=o>=</span><span class=p>{</span><span class=s2>\"Location\"</span><span class=p>:</span> <span class=s2>\"http://example.com/3\"</span><span class=p>},</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>rsp3</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>Response</span><span class=p>(</span><span class=n>responses</span><span class=o>.</span><span class=n>GET</span><span class=p>,</span> <span class=s2>\"http://example.com/3\"</span><span class=p>,</span> <span class=n>status</span><span class=o>=</span><span class=mi>200</span><span class=p>)</span><span class=w></span>    <span class=c1># register above generated Responses in ``response`` module</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>add</span><span class=p>(</span><span class=n>rsp1</span><span class=p>)</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>add</span><span class=p>(</span><span class=n>rsp2</span><span class=p>)</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>add</span><span class=p>(</span><span class=n>rsp3</span><span class=p>)</span><span class=w></span>    <span class=c1># do the first request in order to generate genuine ``requests`` response</span><span class=w></span>    <span class=c1># this object will contain genuine attributes of the response, like ``history``</span><span class=w></span>    <span class=n>rsp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://example.com/1\"</span><span class=p>)</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>calls</span><span class=o>.</span><span class=n>reset</span><span class=p>()</span><span class=w></span>    <span class=c1># customize exception with ``response`` attribute</span><span class=w></span>    <span class=n>my_error</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>ConnectionError</span><span class=p>(</span><span class=s2>\"custom error\"</span><span class=p>)</span><span class=w></span>    <span class=n>my_error</span><span class=o>.</span><span class=n>response</span> <span class=o>=</span> <span class=n>rsp</span><span class=w></span>    <span class=c1># update body of the 3rd response with Exception, this will be raised during execution</span><span class=w></span>    <span class=n>rsp3</span><span class=o>.</span><span class=n>body</span> <span class=o>=</span> <span class=n>my_error</span><span class=w></span>    <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=n>requests</span><span class=o>.</span><span class=n>ConnectionError</span><span class=p>)</span> <span class=k>as</span> <span class=n>exc_info</span><span class=p>:</span><span class=w></span>        <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://example.com/1\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>exc_info</span><span class=o>.</span><span class=n>value</span><span class=o>.</span><span class=n>args</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span> <span class=o>==</span> <span class=s2>\"custom error\"</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp1</span><span class=o>.</span><span class=n>url</span> <span class=ow>in</span> <span class=n>exc_info</span><span class=o>.</span><span class=n>value</span><span class=o>.</span><span class=n>response</span><span class=o>.</span><span class=n>history</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>url</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp2</span><span class=o>.</span><span class=n>url</span> <span class=ow>in</span> <span class=n>exc_info</span><span class=o>.</span><span class=n>value</span><span class=o>.</span><span class=n>response</span><span class=o>.</span><span class=n>history</span><span class=p>[</span><span class=mi>1</span><span class=p>]</span><span class=o>.</span><span class=n>url</span></code></pre></section><section id=validate-retry-mechanism><h2><a href=#toc-entry-41 rel=nofollow>Validate <span class=\"docutils literal\">Retry</span> mechanism</a></h2><p>If you are using the <span class=\"docutils literal\">Retry</span> features of <span class=\"docutils literal\">urllib3</span> and want to cover scenarios that test your retry limits, you can test those scenarios with <span class=\"docutils literal\">responses</span> as well. The best approach will be to use an <a href=#ordered-registry rel=nofollow>Ordered Registry</a></p><pre><code><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>from</span> <span class=nn>responses</span> <span class=kn>import</span> <span class=n>registries</span><span class=w></span><span class=kn>from</span> <span class=nn>urllib3.util</span> <span class=kn>import</span> <span class=n>Retry</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=p>(</span><span class=n>registry</span><span class=o>=</span><span class=n>registries</span><span class=o>.</span><span class=n>OrderedRegistry</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>test_max_retries</span><span class=p>():</span><span class=w></span>    <span class=n>url</span> <span class=o>=</span> <span class=s2>\"https://example.com\"</span><span class=w></span>    <span class=n>rsp1</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>url</span><span class=p>,</span> <span class=n>body</span><span class=o>=</span><span class=s2>\"Error\"</span><span class=p>,</span> <span class=n>status</span><span class=o>=</span><span class=mi>500</span><span class=p>)</span><span class=w></span>    <span class=n>rsp2</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>url</span><span class=p>,</span> <span class=n>body</span><span class=o>=</span><span class=s2>\"Error\"</span><span class=p>,</span> <span class=n>status</span><span class=o>=</span><span class=mi>500</span><span class=p>)</span><span class=w></span>    <span class=n>rsp3</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>url</span><span class=p>,</span> <span class=n>body</span><span class=o>=</span><span class=s2>\"Error\"</span><span class=p>,</span> <span class=n>status</span><span class=o>=</span><span class=mi>500</span><span class=p>)</span><span class=w></span>    <span class=n>rsp4</span> <span class=o>=</span> <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>url</span><span class=p>,</span> <span class=n>body</span><span class=o>=</span><span class=s2>\"OK\"</span><span class=p>,</span> <span class=n>status</span><span class=o>=</span><span class=mi>200</span><span class=p>)</span><span class=w></span>    <span class=n>session</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>Session</span><span class=p>()</span><span class=w></span>    <span class=n>adapter</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>adapters</span><span class=o>.</span><span class=n>HTTPAdapter</span><span class=p>(</span><span class=w></span>        <span class=n>max_retries</span><span class=o>=</span><span class=n>Retry</span><span class=p>(</span><span class=w></span>            <span class=n>total</span><span class=o>=</span><span class=mi>4</span><span class=p>,</span><span class=w></span>            <span class=n>backoff_factor</span><span class=o>=</span><span class=mf>0.1</span><span class=p>,</span><span class=w></span>            <span class=n>status_forcelist</span><span class=o>=</span><span class=p>[</span><span class=mi>500</span><span class=p>],</span><span class=w></span>            <span class=n>method_whitelist</span><span class=o>=</span><span class=p>[</span><span class=s2>\"GET\"</span><span class=p>,</span> <span class=s2>\"POST\"</span><span class=p>,</span> <span class=s2>\"PATCH\"</span><span class=p>],</span><span class=w></span>        <span class=p>)</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>session</span><span class=o>.</span><span class=n>mount</span><span class=p>(</span><span class=s2>\"https://\"</span><span class=p>,</span> <span class=n>adapter</span><span class=p>)</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>session</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>url</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>200</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp1</span><span class=o>.</span><span class=n>call_count</span> <span class=o>==</span> <span class=mi>1</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp2</span><span class=o>.</span><span class=n>call_count</span> <span class=o>==</span> <span class=mi>1</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp3</span><span class=o>.</span><span class=n>call_count</span> <span class=o>==</span> <span class=mi>1</span><span class=w></span>    <span class=k>assert</span> <span class=n>rsp4</span><span class=o>.</span><span class=n>call_count</span> <span class=o>==</span> <span class=mi>1</span></code></pre></section><section id=using-a-callback-to-modify-the-response><h2><a href=#toc-entry-42 rel=nofollow>Using a callback to modify the response</a></h2><p>If you use customized processing in <span class=\"docutils literal\">requests</span> via subclassing/mixins, or if youhave library tools that interact with <span class=\"docutils literal\">requests</span> at a low level, you may needto add extended processing to the mocked Response object to fully simulate theenvironment for your tests.  A <span class=\"docutils literal\">response_callback</span> can be used, which will bewrapped by the library before being returned to the caller.  The callbackaccepts a <span class=\"docutils literal\">response</span> as it\u2019s single argument, and is expected to return asingle <span class=\"docutils literal\">response</span> object.</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=k>def</span> <span class=nf>response_callback</span><span class=p>(</span><span class=n>resp</span><span class=p>):</span><span class=w></span>    <span class=n>resp</span><span class=o>.</span><span class=n>callback_processed</span> <span class=o>=</span> <span class=kc>True</span><span class=w></span>    <span class=k>return</span> <span class=n>resp</span><span class=w></span><span class=k>with</span> <span class=n>responses</span><span class=o>.</span><span class=n>RequestsMock</span><span class=p>(</span><span class=n>response_callback</span><span class=o>=</span><span class=n>response_callback</span><span class=p>)</span> <span class=k>as</span> <span class=n>m</span><span class=p>:</span><span class=w></span>    <span class=n>m</span><span class=o>.</span><span class=n>add</span><span class=p>(</span><span class=n>responses</span><span class=o>.</span><span class=n>GET</span><span class=p>,</span> <span class=s2>\"http://example.com\"</span><span class=p>,</span> <span class=n>body</span><span class=o>=</span><span class=sa>b</span><span class=s2>\"test\"</span><span class=p>)</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://example.com\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>text</span> <span class=o>==</span> <span class=s2>\"test\"</span><span class=w></span>    <span class=k>assert</span> <span class=nb>hasattr</span><span class=p>(</span><span class=n>resp</span><span class=p>,</span> <span class=s2>\"callback_processed\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>callback_processed</span> <span class=ow>is</span> <span class=kc>True</span></code></pre></section><section id=passing-through-real-requests><h2><a href=#toc-entry-43 rel=nofollow>Passing through real requests</a></h2><p>In some cases you may wish to allow for certain requests to pass through responsesand hit a real server. This can be done with the <span class=\"docutils literal\">add_passthru</span> methods:</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_my_api</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>add_passthru</span><span class=p>(</span><span class=s2>\"https://percy.io\"</span><span class=p>)</span></code></pre><p>This will allow any requests matching that prefix, that is otherwise notregistered as a mock response, to passthru using the standard behavior.</p><p>Pass through endpoints can be configured with regex patterns if youneed to allow an entire domain or path subtree to send requests:</p><pre><code><span class=n>responses</span><span class=o>.</span><span class=n>add_passthru</span><span class=p>(</span><span class=n>re</span><span class=o>.</span><span class=n>compile</span><span class=p>(</span><span class=s2>\"https://percy.io/</span><span class=se>\\\\</span><span class=s2>w+\"</span><span class=p>))</span></code></pre><p>Lastly, you can use the <span class=\"docutils literal\">passthrough</span> argument of the <span class=\"docutils literal\">Response</span> objectto force a response to behave as a pass through.</p><pre><code><span class=c1># Enable passthrough for a single response</span><span class=w></span><span class=n>response</span> <span class=o>=</span> <span class=n>Response</span><span class=p>(</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>GET</span><span class=p>,</span><span class=w></span>    <span class=s2>\"http://example.com\"</span><span class=p>,</span><span class=w></span>    <span class=n>body</span><span class=o>=</span><span class=s2>\"not used\"</span><span class=p>,</span><span class=w></span>    <span class=n>passthrough</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span><span class=w></span><span class=p>)</span><span class=w></span><span class=n>responses</span><span class=o>.</span><span class=n>add</span><span class=p>(</span><span class=n>response</span><span class=p>)</span><span class=w></span><span class=c1># Use PassthroughResponse</span><span class=w></span><span class=n>response</span> <span class=o>=</span> <span class=n>PassthroughResponse</span><span class=p>(</span><span class=n>responses</span><span class=o>.</span><span class=n>GET</span><span class=p>,</span> <span class=s2>\"http://example.com\"</span><span class=p>)</span><span class=w></span><span class=n>responses</span><span class=o>.</span><span class=n>add</span><span class=p>(</span><span class=n>response</span><span class=p>)</span></code></pre></section><section id=viewing-modifying-registered-responses><h2><a href=#toc-entry-44 rel=nofollow>Viewing/Modifying registered responses</a></h2><p>Registered responses are available as a public method of the RequestMockinstance. It is sometimes useful for debugging purposes to view the stack ofregistered responses which can be accessed via <span class=\"docutils literal\">responses.registered()</span>.</p><p>The <span class=\"docutils literal\">replace</span> function allows a previously registered <span class=\"docutils literal\">response</span> to bechanged. The method signature is identical to <span class=\"docutils literal\">add</span>. <span class=\"docutils literal\">response</span> s areidentified using <span class=\"docutils literal\">method</span> and <span class=\"docutils literal\">url</span>. Only the first matched <span class=\"docutils literal\">response</span> isreplaced.</p><pre><code><span class=kn>import</span> <span class=nn>responses</span><span class=w></span><span class=kn>import</span> <span class=nn>requests</span><span class=w></span><span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span><span class=k>def</span> <span class=nf>test_replace</span><span class=p>():</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://example.org\"</span><span class=p>,</span> <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"data\"</span><span class=p>:</span> <span class=mi>1</span><span class=p>})</span><span class=w></span>    <span class=n>responses</span><span class=o>.</span><span class=n>replace</span><span class=p>(</span><span class=n>responses</span><span class=o>.</span><span class=n>GET</span><span class=p>,</span> <span class=s2>\"http://example.org\"</span><span class=p>,</span> <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"data\"</span><span class=p>:</span> <span class=mi>2</span><span class=p>})</span><span class=w></span>    <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://example.org\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>json</span><span class=p>()</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"data\"</span><span class=p>:</span> <span class=mi>2</span><span class=p>}</span></code></pre><p>The <span class=\"docutils literal\">upsert</span> function allows a previously registered <span class=\"docutils literal\">response</span> to bechanged like <span class=\"docutils literal\">replace</span>. If the response is registered, the <span class=\"docutils literal\">upsert</span> functionwill registered it like <span class=\"docutils literal\">add</span>.</p><p><span class=\"docutils literal\">remove</span> takes a <span class=\"docutils literal\">method</span> and <span class=\"docutils literal\">url</span> argument and will remove <strong>all</strong>matched responses from the registered list.</p><p>Finally, <span class=\"docutils literal\">reset</span> will reset all registered responses.</p></section><section id=coroutines-and-multithreading><h2><a href=#toc-entry-45 rel=nofollow>Coroutines and Multithreading</a></h2><p><span class=\"docutils literal\">responses</span> supports both Coroutines and Multithreading out of the box.Note, <span class=\"docutils literal\">responses</span> locks threading on <span class=\"docutils literal\">RequestMock</span> object allowing onlysingle thread to access it.</p><pre><code><span class=k>async</span> <span class=k>def</span> <span class=nf>test_async_calls</span><span class=p>():</span><span class=w></span>    <span class=nd>@responses</span><span class=o>.</span><span class=n>activate</span><span class=w></span>    <span class=k>async</span> <span class=k>def</span> <span class=nf>run</span><span class=p>():</span><span class=w></span>        <span class=n>responses</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=w></span>            <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>,</span><span class=w></span>            <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"error\"</span><span class=p>:</span> <span class=s2>\"not found\"</span><span class=p>},</span><span class=w></span>            <span class=n>status</span><span class=o>=</span><span class=mi>404</span><span class=p>,</span><span class=w></span>        <span class=p>)</span><span class=w></span>        <span class=n>resp</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=p>)</span><span class=w></span>        <span class=k>assert</span> <span class=n>resp</span><span class=o>.</span><span class=n>json</span><span class=p>()</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"error\"</span><span class=p>:</span> <span class=s2>\"not found\"</span><span class=p>}</span><span class=w></span>        <span class=k>assert</span> <span class=n>responses</span><span class=o>.</span><span class=n>calls</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>request</span><span class=o>.</span><span class=n>url</span> <span class=o>==</span> <span class=s2>\"http://twitter.com/api/1/foobar\"</span><span class=w></span>    <span class=k>await</span> <span class=n>run</span><span class=p>()</span></code></pre></section><section id=contributing><h2><a href=#toc-entry-46 rel=nofollow>Contributing</a></h2><section id=environment-configuration><h3><a href=#toc-entry-47 rel=nofollow>Environment Configuration</a></h3><p>Responses uses several linting and autoformatting utilities, so it\u2019s important that whensubmitting patches you use the appropriate toolchain:</p><p>Clone the repository:</p><pre><code>git<span class=w> </span>clone<span class=w> </span>https://github.com/getsentry/responses.git</code></pre><p>Create an environment (e.g. with <span class=\"docutils literal\">virtualenv</span>):</p><pre><code>virtualenv<span class=w> </span>.env<span class=w> </span><span class=o>&amp;&amp;</span><span class=w> </span><span class=nb>source</span><span class=w> </span>.env/bin/activate</code></pre><p>Configure development requirements:</p><pre><code>make<span class=w> </span>develop</code></pre></section><section id=tests-and-code-quality-validation><h3><a href=#toc-entry-48 rel=nofollow>Tests and Code Quality Validation</a></h3><p>The easiest way to validate your code is to run tests via <span class=\"docutils literal\">tox</span>.Current <span class=\"docutils literal\">tox</span> configuration runs the same checks that are used inGitHub Actions CI/CD pipeline.</p><p>Please execute the following command line from the project root to validateyour code against:</p><ul class=simple><li><p>Unit tests in all Python versions that are supported by this project</li><li><p>Type validation via <span class=\"docutils literal\">mypy</span></li><li><p>All <span class=\"docutils literal\"><span class=pre>pre-commit</span></span> hooks</li></ul><pre><code>tox</code></pre><p>Alternatively, you can always run a single test. See documentation below.</p><section id=unit-tests><h4><a href=#toc-entry-49 rel=nofollow>Unit tests</a></h4><p>Responses uses <a href=\"https://docs.pytest.org/en/latest/\" rel=nofollow>Pytest</a> fortesting. You can run all tests by:</p><pre><code>tox<span class=w> </span>-e<span class=w> </span>py37<span class=w></span>tox<span class=w> </span>-e<span class=w> </span>py310</code></pre><p>OR manually activate required version of Python and run</p><pre><code>pytest</code></pre><p>And run a single test by:</p><pre><code>pytest<span class=w> </span>-k<span class=w> </span><span class=s1>'&lt;test_function_name&gt;'</span></code></pre></section><section id=type-validation><h4><a href=#toc-entry-50 rel=nofollow>Type Validation</a></h4><p>To verify <span class=\"docutils literal\">type</span> compliance, run <a href=\"https://github.com/python/mypy\" rel=nofollow>mypy</a> linter:</p><pre><code>tox<span class=w> </span>-e<span class=w> </span>mypy</code></pre><p>OR</p><pre><code>mypy<span class=w> </span>--config-file<span class=o>=</span>./mypy.ini<span class=w> </span>-p<span class=w> </span>responses</code></pre></section><section id=code-quality-and-style><h4><a href=#toc-entry-51 rel=nofollow>Code Quality and Style</a></h4><p>To check code style and reformat it run:</p><pre><code>tox<span class=w> </span>-e<span class=w> </span>precom</code></pre><p>OR</p><pre><code>pre-commit<span class=w> </span>run<span class=w> </span>--all-files</code></pre></section></section></section>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/getsentry/responses\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/getsentry/responses/issues\" rel=\"nofollow\">        <i class=\"fas fa-bug\" aria-hidden=\"true\"></i>Bug Tracker      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/getsentry/responses/blob/master/CHANGES\" rel=\"nofollow\">        <i class=\"fas fa-scroll\" aria-hidden=\"true\"></i>Changes      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/getsentry/responses/blob/master/README.rst\" rel=\"nofollow\">        <i class=\"fas fa-book\" aria-hidden=\"true\"></i>Documentation      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/getsentry/responses\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>Source Code      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/responses\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> Apache 2.0</p>    <p><strong>Author:</strong> David Cramer</p>  <p>    <strong>Requires:</strong> Python &gt;=3.8  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/dcramer/\" aria-label=\"dcramer\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/5919ab90b620089ba7af38a8869f03bd8135f403/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f35313536376134663738366364386132633431633531336235393264653966393f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for dcramer from gravatar.com\" title=\"Avatar for dcramer from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            dcramer          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/getsentry/\" aria-label=\"getsentry\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/d1522420c87ac027811a8098205c675bab4847e6/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f61653532646339386263393634363434613633643139633032396433663031323f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for getsentry from gravatar.com\" title=\"Avatar for getsentry from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            getsentry          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+System+Administrators\">            System Administrators          </a>        </li>      </ul>    </li>    <li>      <strong>Operating System</strong>      <ul>        <li>          <a href=\"/search/?c=Operating+System+%3A%3A+OS+Independent\">            OS Independent          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.12\">            Python :: 3.12          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development\">            Software Development          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/responses/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.25.0/\">                <p class=\"release__version\">                  0.25.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2024-02-13T21:15:42+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 13, 2024</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.24.1/\">                <p class=\"release__version\">                  0.24.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-11-14T22:56:52+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 14, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.24.0/\">                <p class=\"release__version\">                  0.24.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-11-03T13:52:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 3, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.23.3/\">                <p class=\"release__version\">                  0.23.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-08-01T14:19:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 1, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.23.2/\">                <p class=\"release__version\">                  0.23.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-07-25T16:41:02+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 25, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.23.1/\">                <p class=\"release__version\">                  0.23.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-03-10T21:27:35+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 10, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.23.0/\">                <p class=\"release__version\">                  0.23.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-03-10T16:47:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 10, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.22.0/\">                <p class=\"release__version\">                  0.22.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-11T16:34:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 11, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.21.0/\">                <p class=\"release__version\">                  0.21.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-05-25T14:20:48+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 25, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.20.0/\">                <p class=\"release__version\">                  0.20.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-03-18T08:28:33+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 18, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.19.0/\">                <p class=\"release__version\">                  0.19.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-03-07T07:16:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 7, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.18.0/\">                <p class=\"release__version\">                  0.18.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-02-02T19:59:52+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 2, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.17.0/\">                <p class=\"release__version\">                  0.17.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-01-10T16:01:55+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 10, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.16.0/\">                <p class=\"release__version\">                  0.16.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-16T15:29:52+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 16, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.15.0/\">                <p class=\"release__version\">                  0.15.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-10-26T20:13:19+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 26, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.14.0/\">                <p class=\"release__version\">                  0.14.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-09-10T16:04:29+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 10, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.13.4/\">                <p class=\"release__version\">                  0.13.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-09T09:41:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 9, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.13.3/\">                <p class=\"release__version\">                  0.13.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-04-27T19:45:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 27, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.13.2/\">                <p class=\"release__version\">                  0.13.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-03-29T13:34:29+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 29, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.13.1/\">                <p class=\"release__version\">                  0.13.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-03-17T15:48:15+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 17, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.13.0/\">                <p class=\"release__version\">                  0.13.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-03-17T00:28:47+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 17, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.12.1/\">                <p class=\"release__version\">                  0.12.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-11-12T06:51:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 12, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.12.0/\">                <p class=\"release__version\">                  0.12.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-08-30T01:27:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 30, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.11.0/\">                <p class=\"release__version\">                  0.11.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-08-24T01:19:30+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 24, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.16/\">                <p class=\"release__version\">                  0.10.16                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-08-11T02:50:37+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 11, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.15/\">                <p class=\"release__version\">                  0.10.15                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-06-12T02:20:34+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 12, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.14/\">                <p class=\"release__version\">                  0.10.14                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-04-20T02:26:48+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 20, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.12/\">                <p class=\"release__version\">                  0.10.12                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-03-03T02:51:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 3, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.11/\">                <p class=\"release__version\">                  0.10.11                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-02-25T02:59:29+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 25, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.9/\">                <p class=\"release__version\">                  0.10.9                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-12-20T01:54:56+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 20, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.8/\">                <p class=\"release__version\">                  0.10.8                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-12-12T16:35:06+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 12, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.7/\">                <p class=\"release__version\">                  0.10.7                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-11-25T16:14:02+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 25, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.6/\">                <p class=\"release__version\">                  0.10.6                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-03-15T16:01:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 15, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.5/\">                <p class=\"release__version\">                  0.10.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-12-17T19:42:55+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 17, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.4/\">                <p class=\"release__version\">                  0.10.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-11-15T02:29:38+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 15, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.3/\">                <p class=\"release__version\">                  0.10.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-11-08T16:20:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 8, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.2/\">                <p class=\"release__version\">                  0.10.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-10-25T15:08:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 25, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.1/\">                <p class=\"release__version\">                  0.10.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-10-18T17:55:15+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 18, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.10.0/\">                <p class=\"release__version\">                  0.10.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-10-18T14:04:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 18, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.9.0/\">                <p class=\"release__version\">                  0.9.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-04-04T16:59:33+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 4, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.8.1/\">                <p class=\"release__version\">                  0.8.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-10-02T17:02:40+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 2, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.8.0/\">                <p class=\"release__version\">                  0.8.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-09-26T22:03:08+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 26, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.7.0/\">                <p class=\"release__version\">                  0.7.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-08-08T22:03:22+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 8, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.6.2/\">                <p class=\"release__version\">                  0.6.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-08-08T17:24:45+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 8, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.6.1/\">                <p class=\"release__version\">                  0.6.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-08-03T18:24:23+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 3, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.6.0/\">                <p class=\"release__version\">                  0.6.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-07-25T21:46:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 25, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.5.1/\">                <p class=\"release__version\">                  0.5.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-01-25T21:17:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 25, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.5.0/\">                <p class=\"release__version\">                  0.5.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-10-14T21:39:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 14, 2015</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.4.0/\">                <p class=\"release__version\">                  0.4.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-05-27T13:58:22+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 27, 2015</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.3.0/\">                <p class=\"release__version\">                  0.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2014-10-13T13:01:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 13, 2014</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.2.2/\">                <p class=\"release__version\">                  0.2.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2014-05-24T23:57:49+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 24, 2014</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.2.1/\">                <p class=\"release__version\">                  0.2.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2014-05-13T18:26:39+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 13, 2014</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.2.0/\">                <p class=\"release__version\">                  0.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-12-16T19:53:18+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 16, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.1.1/\">                <p class=\"release__version\">                  0.1.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-12-16T19:35:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 16, 2013</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/responses/0.1.0/\">                <p class=\"release__version\">                  0.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-11-25T19:51:38+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 25, 2013</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/ea/d5/a7300764f8350420815b2c1abf30ebb78a7edd6eea586af784babdc2e9b0/responses-0.25.0.tar.gz\">          responses-0.25.0.tar.gz        </a>        (77.7 kB        <a href=\"#copy-hash-modal-f3ac321c-b0ca-45b4-bc59-29d7c092e9d7\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2024-02-13T21:15:42+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 13, 2024</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/30/0b/bff1e6a5b646e6ff770deb6a292a96bd844ea13fb523ccbd9209fc4b90b8/responses-0.25.0-py3-none-any.whl\">          responses-0.25.0-py3-none-any.whl        </a>        (55.2 kB        <a href=\"#copy-hash-modal-e58df8f7-000e-417e-80cf-1721e0094ce9\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2024-02-13T21:15:42+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 13, 2024</time>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-f3ac321c-b0ca-45b4-bc59-29d7c092e9d7\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for responses-0.25.0.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for responses-0.25.0.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">01ae6a02b4f34e39bffceb0fc6786b67a25eae919c6368d05eabc8d9576c2a66</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">57858a56abc12209bebf297e0f2b07f0</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">ead5a7300764f8350420815b2c1abf30ebb78a7edd6eea586af784babdc2e9b0</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-e58df8f7-000e-417e-80cf-1721e0094ce9\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for responses-0.25.0-py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for responses-0.25.0-py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">2f0b9c2b6437db4b528619a77e5d565e4ec2a9532162ac1a131a83529db7be1a</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">b1d2e110cc1a81ca53d5c2e70e7b6dbe</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">300bbff1e6a5b646e6ff770deb6a292a96bd844ea13fb523ccbd9209fc4b90b8</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
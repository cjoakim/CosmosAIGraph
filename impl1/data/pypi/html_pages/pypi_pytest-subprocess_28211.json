{
  "libtype": "pypi",
  "libname": "pytest-subprocess",
  "url": "https://pypi.org/project/pytest-subprocess/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>pytest-subprocess \u00b7 PyPI</title>    <meta name=\"description\" content=\"A plugin to fake subprocess for pytest\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for pytest-subprocess\" href=\"/rss/project/pytest-subprocess/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/pytest-subprocess/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/pytest-subprocess/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"pytest-subprocess\">    <meta property=\"og:description\" content=\"A plugin to fake subprocess for pytest\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/aklajnert/pytest-subprocess\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:aklajnert/pytest-subprocess+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        pytest-subprocess 1.5.0      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install pytest-subprocess</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/pytest-subprocess/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2023-01-28T10:18:40+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 28, 2023</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/pytest-subprocess\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">A plugin to fake subprocess for pytest</p><div data-html-include=\"/_includes/edit-project-button/pytest-subprocess\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for pytest-subprocess\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://pytest-subprocess.readthedocs.io\" rel=\"nofollow\">        <i class=\"fas fa-book\" aria-hidden=\"true\"></i>Documentation      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/aklajnert/pytest-subprocess\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>Source      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/aklajnert/pytest-subprocess/issues\" rel=\"nofollow\">        <i class=\"fas fa-bug\" aria-hidden=\"true\"></i>Tracker      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/pytest-subprocess\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (MIT)</p>    <p><strong>Author:</strong> <a href=\"mailto:python@aklajnert.pl\">Andrzej Klajnert</a></p>    <p><strong>Maintainer:</strong> <a href=\"mailto:python@aklajnert.pl\">Andrzej Klajnert</a></p>  <p>    <strong>Requires:</strong> Python &gt;=3.6  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/aklajnert/\" aria-label=\"aklajnert\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/dd30dd97d156a0b9827f697f0cc1c7d8c8aeb386/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f31633562656233373866643464316166353764633430326362653036316232633f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for aklajnert from gravatar.com\" title=\"Avatar for aklajnert from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            aklajnert          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Framework</strong>      <ul>        <li>          <a href=\"/search/?c=Framework+%3A%3A+Pytest\">            Pytest          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Operating System</strong>      <ul>        <li>          <a href=\"/search/?c=Operating+System+%3A%3A+OS+Independent\">            OS Independent          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.6\">            Python :: 3.6          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+CPython\">            Python :: Implementation :: CPython          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+PyPy\">            Python :: Implementation :: PyPy          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Testing\">            Software Development :: Testing          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for pytest-subprocess\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <section id=pytest-subprocess><h2>pytest-subprocess</h2><a href=\"https://pypi.org/project/pytest-subprocess\" rel=nofollow><img alt=\"PyPI version\" src=\"https://pypi-camo.freetls.fastly.net/a02de5b5d6d272f6f64c9a822a7400ec4175a912/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079746573742d73756270726f636573732e737667\"></a><a href=\"https://pypi.org/project/pytest-subprocess\" rel=nofollow><img alt=\"Python versions\" src=\"https://pypi-camo.freetls.fastly.net/e1e58ace5b4ce5b067a50557387930227dcd9722/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079746573742d73756270726f636573732e737667\"></a><a href=\"https://codecov.io/gh/aklajnert/pytest-subprocess\" rel=nofollow><img alt=\"https://codecov.io/gh/aklajnert/pytest-subprocess/branch/master/graph/badge.svg?token=JAU1cGoYL8\" src=\"https://pypi-camo.freetls.fastly.net/51871dc8ee6a58b98d4ddecd496e855f4ac3d160/68747470733a2f2f636f6465636f762e696f2f67682f616b6c616a6e6572742f7079746573742d73756270726f636573732f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d4a41553163476f594c38\"></a><a href=\"https://pytest-subprocess.readthedocs.io/en/latest/?badge=latest\" rel=nofollow><img alt=\"Documentation Status\" src=\"https://pypi-camo.freetls.fastly.net/6f9b602f8beb330aa211fc2eb6c9276867426222/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7079746573742d73756270726f636573732f62616467652f3f76657273696f6e3d6c6174657374\"></a><p>Pytest plugin to fake subprocess.</p></section><section id=usage><h2>Usage</h2><p>The plugin adds the <span class=\"docutils literal\">fake_process</span> fixture (and <span class=\"docutils literal\">fp</span> as an alias).It can be used it to register subprocess results so you won\u2019t need to rely onthe real processes. The plugin hooks on the <span class=\"docutils literal\">subprocess.Popen()</span>, which isthe base for other subprocess functions. That makes the <span class=\"docutils literal\">subprocess.run()</span>,<span class=\"docutils literal\">subprocess.call()</span>, <span class=\"docutils literal\">subprocess.check_call()</span> and<span class=\"docutils literal\">subprocess.check_output()</span> methods also functional.</p><section id=installation><h3>Installation</h3><p>You can install <span class=\"docutils literal\"><span class=pre>pytest-subprocess</span></span> via <a href=\"https://pypi.org/project/pip/\" rel=nofollow>pip</a> from <a href=\"https://pypi.org/project\" rel=nofollow>PyPI</a>:</p><pre>$ pip install pytest-subprocess</pre></section><section id=basic-usage><h3>Basic usage</h3><p>The most important method is <span class=\"docutils literal\">fp.register()</span>(or <span class=\"docutils literal\">register_subprocess</span> if you prefer to be more verbose), whichallows defining the fake processes behavior.</p><pre><code><span class=k>def</span> <span class=nf>test_echo_null_byte</span><span class=p>(</span><span class=n>fp</span><span class=p>):</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>([</span><span class=s2>\"echo\"</span><span class=p>,</span> <span class=s2>\"-ne\"</span><span class=p>,</span> <span class=s2>\"</span><span class=se>\\x00</span><span class=s2>\"</span><span class=p>],</span> <span class=n>stdout</span><span class=o>=</span><span class=nb>bytes</span><span class=o>.</span><span class=n>fromhex</span><span class=p>(</span><span class=s2>\"00\"</span><span class=p>))</span><span class=w></span>    <span class=n>process</span> <span class=o>=</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>Popen</span><span class=p>(</span><span class=w></span>        <span class=p>[</span><span class=s2>\"echo\"</span><span class=p>,</span> <span class=s2>\"-ne\"</span><span class=p>,</span> <span class=s2>\"</span><span class=se>\\x00</span><span class=s2>\"</span><span class=p>],</span><span class=w></span>        <span class=n>stdout</span><span class=o>=</span><span class=n>subprocess</span><span class=o>.</span><span class=n>PIPE</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>out</span><span class=p>,</span> <span class=n>_</span> <span class=o>=</span> <span class=n>process</span><span class=o>.</span><span class=n>communicate</span><span class=p>()</span><span class=w></span>    <span class=k>assert</span> <span class=n>process</span><span class=o>.</span><span class=n>returncode</span> <span class=o>==</span> <span class=mi>0</span><span class=w></span>    <span class=k>assert</span> <span class=n>out</span> <span class=o>==</span> <span class=sa>b</span><span class=s2>\"</span><span class=se>\\x00</span><span class=s2>\"</span></code></pre><p>Optionally, the <span class=\"docutils literal\">stdout</span> and <span class=\"docutils literal\">stderr</span> parameters can be a list (or tuple)of lines to be joined together with a trailing <span class=\"docutils literal\">os.linesep</span> on each line.</p><pre><code><span class=k>def</span> <span class=nf>test_git</span><span class=p>(</span><span class=n>fp</span><span class=p>):</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>([</span><span class=s2>\"git\"</span><span class=p>,</span> <span class=s2>\"branch\"</span><span class=p>],</span> <span class=n>stdout</span><span class=o>=</span><span class=p>[</span><span class=s2>\"* fake_branch\"</span><span class=p>,</span> <span class=s2>\"  master\"</span><span class=p>])</span><span class=w></span>    <span class=n>process</span> <span class=o>=</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>Popen</span><span class=p>(</span><span class=w></span>        <span class=p>[</span><span class=s2>\"git\"</span><span class=p>,</span> <span class=s2>\"branch\"</span><span class=p>],</span><span class=w></span>        <span class=n>stdout</span><span class=o>=</span><span class=n>subprocess</span><span class=o>.</span><span class=n>PIPE</span><span class=p>,</span><span class=w></span>        <span class=n>universal_newlines</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>out</span><span class=p>,</span> <span class=n>_</span> <span class=o>=</span> <span class=n>process</span><span class=o>.</span><span class=n>communicate</span><span class=p>()</span><span class=w></span>    <span class=k>assert</span> <span class=n>process</span><span class=o>.</span><span class=n>returncode</span> <span class=o>==</span> <span class=mi>0</span><span class=w></span>    <span class=k>assert</span> <span class=n>out</span> <span class=o>==</span> <span class=s2>\"* fake_branch</span><span class=se>\\n</span><span class=s2>  master</span><span class=se>\\n</span><span class=s2>\"</span></code></pre></section><section id=passing-input><h3>Passing input</h3><p>By default, if you use <span class=\"docutils literal\">input</span> argument to the <span class=\"docutils literal\">Popen.communicate()</span>method, it won\u2019t crash, but also won\u2019t do anything useful. By passinga function as <span class=\"docutils literal\">stdin_callable</span> argument for the<span class=\"docutils literal\">fp.register()</span> method you can specify the behaviorbased on the input. The function shall accept one argument, which will bethe input data. If the function will return a dictionary with <span class=\"docutils literal\">stdout</span> or<span class=\"docutils literal\">stderr</span> keys, its value will be appended to according stream.</p><pre><code><span class=k>def</span> <span class=nf>test_pass_input</span><span class=p>(</span><span class=n>fp</span><span class=p>):</span><span class=w></span>    <span class=k>def</span> <span class=nf>stdin_function</span><span class=p>(</span><span class=nb>input</span><span class=p>):</span><span class=w></span>        <span class=k>return</span> <span class=p>{</span><span class=w></span>            <span class=s2>\"stdout\"</span><span class=p>:</span> <span class=s2>\"This input was added: </span><span class=si>{data}</span><span class=s2>\"</span><span class=o>.</span><span class=n>format</span><span class=p>(</span><span class=w></span>                <span class=n>data</span><span class=o>=</span><span class=nb>input</span><span class=o>.</span><span class=n>decode</span><span class=p>()</span><span class=w></span>            <span class=p>)</span><span class=w></span>        <span class=p>}</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>(</span><span class=w></span>        <span class=p>[</span><span class=s2>\"command\"</span><span class=p>],</span><span class=w></span>        <span class=n>stdout</span><span class=o>=</span><span class=p>[</span><span class=sa>b</span><span class=s2>\"Just stdout\"</span><span class=p>],</span><span class=w></span>        <span class=n>stdin_callable</span><span class=o>=</span><span class=n>stdin_function</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>process</span> <span class=o>=</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>Popen</span><span class=p>(</span><span class=w></span>        <span class=p>[</span><span class=s2>\"command\"</span><span class=p>],</span><span class=w></span>        <span class=n>stdin</span><span class=o>=</span><span class=n>subprocess</span><span class=o>.</span><span class=n>PIPE</span><span class=p>,</span><span class=w></span>        <span class=n>stdout</span><span class=o>=</span><span class=n>subprocess</span><span class=o>.</span><span class=n>PIPE</span><span class=p>,</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>out</span><span class=p>,</span> <span class=n>_</span> <span class=o>=</span> <span class=n>process</span><span class=o>.</span><span class=n>communicate</span><span class=p>(</span><span class=nb>input</span><span class=o>=</span><span class=sa>b</span><span class=s2>\"sample input</span><span class=se>\\n</span><span class=s2>\"</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>out</span><span class=o>.</span><span class=n>splitlines</span><span class=p>()</span> <span class=o>==</span> <span class=p>[</span><span class=w></span>        <span class=sa>b</span><span class=s2>\"Just stdout\"</span><span class=p>,</span><span class=w></span>        <span class=sa>b</span><span class=s2>\"This input was added: sample input\"</span><span class=p>,</span><span class=w></span>    <span class=p>]</span></code></pre></section><section id=unregistered-commands><h3>Unregistered commands</h3><p>By default, when the <span class=\"docutils literal\">fp</span> fixture is being used, any attempt torun subprocess that has not been registered will raisethe <span class=\"docutils literal\">ProcessNotRegisteredError</span> exception. To allow it, use<span class=\"docutils literal\">fp.allow_unregistered(True)</span>, which will execute all unregisteredprocesses with real <span class=\"docutils literal\">subprocess</span>, or use<span class=\"docutils literal\"><span class=pre>fp.pass_command(\"command\")</span></span> to allow just a single command.</p><pre><code><span class=k>def</span> <span class=nf>test_real_process</span><span class=p>(</span><span class=n>fp</span><span class=p>):</span><span class=w></span>    <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=n>fp</span><span class=o>.</span><span class=n>exceptions</span><span class=o>.</span><span class=n>ProcessNotRegisteredError</span><span class=p>):</span><span class=w></span>        <span class=c1># this will fail, as \"ls\" command is not registered</span><span class=w></span>        <span class=n>subprocess</span><span class=o>.</span><span class=n>call</span><span class=p>(</span><span class=s2>\"ls\"</span><span class=p>)</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>pass_command</span><span class=p>(</span><span class=s2>\"ls\"</span><span class=p>)</span><span class=w></span>    <span class=c1># now it should be fine</span><span class=w></span>    <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>call</span><span class=p>(</span><span class=s2>\"ls\"</span><span class=p>)</span> <span class=o>==</span> <span class=mi>0</span><span class=w></span>    <span class=c1># allow all commands to be called by real subprocess</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>allow_unregistered</span><span class=p>(</span><span class=kc>True</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>call</span><span class=p>([</span><span class=s2>\"ls\"</span><span class=p>,</span> <span class=s2>\"-l\"</span><span class=p>])</span> <span class=o>==</span> <span class=mi>0</span></code></pre></section><section id=differing-results><h3>Differing results</h3><p>Each <span class=\"docutils literal\">register()</span> or <span class=\"docutils literal\">pass_command()</span> method call will registeronly one command execution. You can call those methods multiple times, tochange the faked output on each subprocess run. When you call subprocess morewill be raised. To prevent that, call <span class=\"docutils literal\">fp.keep_last_process(True)</span>,which will keep the last registered process forever.</p><pre><code><span class=k>def</span> <span class=nf>test_different_output</span><span class=p>(</span><span class=n>fp</span><span class=p>):</span><span class=w></span>    <span class=c1># register process with output changing each execution</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>,</span> <span class=n>stdout</span><span class=o>=</span><span class=s2>\"first execution\"</span><span class=p>)</span><span class=w></span>    <span class=c1># the second execution will return non-zero exit code</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>,</span> <span class=n>stdout</span><span class=o>=</span><span class=s2>\"second execution\"</span><span class=p>,</span> <span class=n>returncode</span><span class=o>=</span><span class=mi>1</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>check_output</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>)</span> <span class=o>==</span> <span class=sa>b</span><span class=s2>\"first execution\"</span><span class=w></span>    <span class=n>second_process</span> <span class=o>=</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>run</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>,</span> <span class=n>stdout</span><span class=o>=</span><span class=n>subprocess</span><span class=o>.</span><span class=n>PIPE</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>second_process</span><span class=o>.</span><span class=n>stdout</span> <span class=o>==</span> <span class=sa>b</span><span class=s2>\"second execution\"</span><span class=w></span>    <span class=k>assert</span> <span class=n>second_process</span><span class=o>.</span><span class=n>returncode</span> <span class=o>==</span> <span class=mi>1</span><span class=w></span>    <span class=c1># 3rd time shall raise an exception</span><span class=w></span>    <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=n>fp</span><span class=o>.</span><span class=n>exceptions</span><span class=o>.</span><span class=n>ProcessNotRegisteredError</span><span class=p>):</span><span class=w></span>        <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>)</span><span class=w></span>    <span class=c1># now, register two processes once again,</span><span class=w></span>    <span class=c1># but the last one will be kept forever</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>,</span> <span class=n>stdout</span><span class=o>=</span><span class=s2>\"first execution\"</span><span class=p>)</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>,</span> <span class=n>stdout</span><span class=o>=</span><span class=s2>\"second execution\"</span><span class=p>)</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>keep_last_process</span><span class=p>(</span><span class=kc>True</span><span class=p>)</span><span class=w></span>    <span class=c1># now the processes can be called forever</span><span class=w></span>    <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>check_output</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>)</span> <span class=o>==</span> <span class=sa>b</span><span class=s2>\"first execution\"</span><span class=w></span>    <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>check_output</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>)</span> <span class=o>==</span> <span class=sa>b</span><span class=s2>\"second execution\"</span><span class=w></span>    <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>check_output</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>)</span> <span class=o>==</span> <span class=sa>b</span><span class=s2>\"second execution\"</span><span class=w></span>    <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>check_output</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>)</span> <span class=o>==</span> <span class=sa>b</span><span class=s2>\"second execution\"</span></code></pre></section><section id=using-callbacks><h3>Using callbacks</h3><p>You can pass a function as <span class=\"docutils literal\">callback</span> argument to the <span class=\"docutils literal\">register()</span>method which will be executed instead of the real subprocess. The callback functioncan raise exceptions which will be interpreted in tests as an exception raisedby the subprocess. The fixture will pass <span class=\"docutils literal\">FakePopen</span> class instance into thecallback function, that can be used to change the return code or modify outputstreams.</p><pre><code><span class=k>def</span> <span class=nf>callback_function</span><span class=p>(</span><span class=n>process</span><span class=p>):</span><span class=w></span>    <span class=n>process</span><span class=o>.</span><span class=n>returncode</span> <span class=o>=</span> <span class=mi>1</span><span class=w></span>    <span class=k>raise</span> <span class=ne>PermissionError</span><span class=p>(</span><span class=s2>\"exception raised by subprocess\"</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>test_raise_exception</span><span class=p>(</span><span class=n>fp</span><span class=p>):</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>([</span><span class=s2>\"test\"</span><span class=p>],</span> <span class=n>callback</span><span class=o>=</span><span class=n>callback_function</span><span class=p>)</span><span class=w></span>    <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=w></span>        <span class=ne>PermissionError</span><span class=p>,</span> <span class=n>match</span><span class=o>=</span><span class=s2>\"exception raised by subprocess\"</span><span class=w></span>    <span class=p>):</span><span class=w></span>        <span class=n>process</span> <span class=o>=</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>Popen</span><span class=p>([</span><span class=s2>\"test\"</span><span class=p>])</span><span class=w></span>        <span class=n>process</span><span class=o>.</span><span class=n>wait</span><span class=p>()</span><span class=w></span>    <span class=k>assert</span> <span class=n>process</span><span class=o>.</span><span class=n>returncode</span> <span class=o>==</span> <span class=mi>1</span></code></pre><p>It is possible to pass additional keyword arguments into <span class=\"docutils literal\">callback</span> by usingthe <span class=\"docutils literal\">callback_kwargs</span> argument:</p><pre><code><span class=k>def</span> <span class=nf>callback_function_with_kwargs</span><span class=p>(</span><span class=n>process</span><span class=p>,</span> <span class=n>return_code</span><span class=p>):</span><span class=w></span>    <span class=n>process</span><span class=o>.</span><span class=n>returncode</span> <span class=o>=</span> <span class=n>return_code</span><span class=w></span><span class=k>def</span> <span class=nf>test_callback_with_arguments</span><span class=p>(</span><span class=n>fp</span><span class=p>):</span><span class=w></span>    <span class=n>return_code</span> <span class=o>=</span> <span class=mi>127</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>(</span><span class=w></span>        <span class=p>[</span><span class=s2>\"test\"</span><span class=p>],</span><span class=w></span>        <span class=n>callback</span><span class=o>=</span><span class=n>callback_function_with_kwargs</span><span class=p>,</span><span class=w></span>        <span class=n>callback_kwargs</span><span class=o>=</span><span class=p>{</span><span class=s2>\"return_code\"</span><span class=p>:</span> <span class=n>return_code</span><span class=p>},</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>process</span> <span class=o>=</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>Popen</span><span class=p>([</span><span class=s2>\"test\"</span><span class=p>])</span><span class=w></span>    <span class=n>process</span><span class=o>.</span><span class=n>wait</span><span class=p>()</span><span class=w></span>    <span class=k>assert</span> <span class=n>process</span><span class=o>.</span><span class=n>returncode</span> <span class=o>==</span> <span class=n>return_code</span></code></pre></section><section id=as-a-context-manager><h3>As a context manager</h3><p>The <span class=\"docutils literal\">fp</span> fixture provides <span class=\"docutils literal\">context()</span> method that allows us touse it as a context manager. It can be used to limit the scope when a certaincommand is allowed, e.g. to make sure that the code doesn\u2019t want to executeit somewhere else.</p><pre><code><span class=k>def</span> <span class=nf>test_context_manager</span><span class=p>(</span><span class=n>fp</span><span class=p>):</span><span class=w></span>    <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=n>fp</span><span class=o>.</span><span class=n>exceptions</span><span class=o>.</span><span class=n>ProcessNotRegisteredError</span><span class=p>):</span><span class=w></span>        <span class=c1># command not registered, so will raise an exception</span><span class=w></span>        <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>)</span><span class=w></span>    <span class=k>with</span> <span class=n>fp</span><span class=o>.</span><span class=n>context</span><span class=p>()</span> <span class=k>as</span> <span class=n>nested_process</span><span class=p>:</span><span class=w></span>        <span class=n>nested_process</span><span class=o>.</span><span class=n>register</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>,</span> <span class=n>occurrences</span><span class=o>=</span><span class=mi>3</span><span class=p>)</span><span class=w></span>        <span class=c1># now, we can call the command 3 times without error</span><span class=w></span>        <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>)</span> <span class=o>==</span> <span class=mi>0</span><span class=w></span>        <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>)</span> <span class=o>==</span> <span class=mi>0</span><span class=w></span>    <span class=c1># the command was called 2 times, so one occurrence left, but since the</span><span class=w></span>    <span class=c1># context manager has been left, it is not registered anymore</span><span class=w></span>    <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=n>fp</span><span class=o>.</span><span class=n>exceptions</span><span class=o>.</span><span class=n>ProcessNotRegisteredError</span><span class=p>):</span><span class=w></span>        <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>)</span></code></pre></section><section id=non-exact-command-matching><h3>Non-exact command matching</h3><p>If you need to catch a command with some non-predictable elements, like a pathto a randomly-generated file name, you can use <span class=\"docutils literal\">fake_subprocess.any()</span> forthat purpose. The number of arguments that should be matched can be controlledby <span class=\"docutils literal\">min</span> and <span class=\"docutils literal\">max</span> arguments. To use <span class=\"docutils literal\">fake_subprocess.any()</span> you needto define the command as a <span class=\"docutils literal\">tuple</span> or <span class=\"docutils literal\">list</span>. The matching will work evenif the subprocess command will be called with a string argument.</p><pre><code><span class=k>def</span> <span class=nf>test_non_exact_matching</span><span class=p>(</span><span class=n>fp</span><span class=p>):</span><span class=w></span>    <span class=c1># define a command that will take any number of arguments</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>([</span><span class=s2>\"ls\"</span><span class=p>,</span> <span class=n>fp</span><span class=o>.</span><span class=n>any</span><span class=p>()])</span><span class=w></span>    <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>(</span><span class=s2>\"ls -lah\"</span><span class=p>)</span> <span class=o>==</span> <span class=mi>0</span><span class=w></span>    <span class=c1># `fake_subprocess.any()` is OK even with no arguments</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>([</span><span class=s2>\"ls\"</span><span class=p>,</span> <span class=n>fp</span><span class=o>.</span><span class=n>any</span><span class=p>()])</span><span class=w></span>    <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>(</span><span class=s2>\"ls\"</span><span class=p>)</span> <span class=o>==</span> <span class=mi>0</span><span class=w></span>    <span class=c1># but it can force a minimum amount of arguments</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>([</span><span class=s2>\"cp\"</span><span class=p>,</span> <span class=n>fp</span><span class=o>.</span><span class=n>any</span><span class=p>(</span><span class=nb>min</span><span class=o>=</span><span class=mi>2</span><span class=p>)])</span><span class=w></span>    <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=n>fp</span><span class=o>.</span><span class=n>exceptions</span><span class=o>.</span><span class=n>ProcessNotRegisteredError</span><span class=p>):</span><span class=w></span>        <span class=c1># only one argument is used, so registered command won't match</span><span class=w></span>        <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>(</span><span class=s2>\"cp /source/dir\"</span><span class=p>)</span><span class=w></span>    <span class=c1># but two arguments will be fine</span><span class=w></span>    <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>(</span><span class=s2>\"cp /source/dir /tmp/random-dir\"</span><span class=p>)</span> <span class=o>==</span> <span class=mi>0</span><span class=w></span>    <span class=c1># the `max` argument can be used to limit maximum amount of arguments</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>([</span><span class=s2>\"cd\"</span><span class=p>,</span> <span class=n>fp</span><span class=o>.</span><span class=n>any</span><span class=p>(</span><span class=nb>max</span><span class=o>=</span><span class=mi>1</span><span class=p>)])</span><span class=w></span>    <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=n>fp</span><span class=o>.</span><span class=n>exceptions</span><span class=o>.</span><span class=n>ProcessNotRegisteredError</span><span class=p>):</span><span class=w></span>        <span class=c1># cd with two arguments won't match with max=1</span><span class=w></span>        <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>(</span><span class=s2>\"cd ~/ /tmp\"</span><span class=p>)</span><span class=w></span>    <span class=c1># but any single argument is fine</span><span class=w></span>    <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>(</span><span class=s2>\"cd ~/\"</span><span class=p>)</span> <span class=o>==</span> <span class=mi>0</span><span class=w></span>    <span class=c1># `min` and `max` can be used together</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>([</span><span class=s2>\"my_app\"</span><span class=p>,</span> <span class=n>fp</span><span class=o>.</span><span class=n>any</span><span class=p>(</span><span class=nb>min</span><span class=o>=</span><span class=mi>1</span><span class=p>,</span> <span class=nb>max</span><span class=o>=</span><span class=mi>2</span><span class=p>)])</span><span class=w></span>    <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>([</span><span class=s2>\"my_app\"</span><span class=p>,</span> <span class=s2>\"--help\"</span><span class=p>])</span> <span class=o>==</span> <span class=mi>0</span></code></pre><p>You can also specify just the command name, and have it match any command withthe same name, regardless of the location. This is accomplished with<span class=\"docutils literal\"><span class=pre>fake_subprocess.program(\"name\")</span></span>.</p><pre><code><span class=k>def</span> <span class=nf>test_any_matching_program</span><span class=p>(</span><span class=n>fp</span><span class=p>):</span><span class=w></span>    <span class=c1># define a command that can come from anywhere</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>([</span><span class=n>fp</span><span class=o>.</span><span class=n>program</span><span class=p>(</span><span class=s2>\"ls\"</span><span class=p>)])</span><span class=w></span>    <span class=k>assert</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>(</span><span class=s2>\"/bin/ls\"</span><span class=p>)</span> <span class=o>==</span> <span class=mi>0</span></code></pre></section><section id=check-if-process-was-called><h3>Check if process was called</h3><p>You may want to simply check if a certain command was called, you can do thisby accessing <span class=\"docutils literal\">fp.calls</span>, where all commands are stored as-called.You can also use a utility function <span class=\"docutils literal\">fp.call_count()</span> to seehow many a command has been called. The latter supports <span class=\"docutils literal\">fp.any()</span>.</p><pre><code><span class=k>def</span> <span class=nf>test_check_if_called</span><span class=p>(</span><span class=n>fp</span><span class=p>):</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>keep_last_process</span><span class=p>(</span><span class=kc>True</span><span class=p>)</span><span class=w></span>    <span class=c1># any command can be called</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>([</span><span class=n>fp</span><span class=o>.</span><span class=n>any</span><span class=p>()])</span><span class=w></span>    <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>([</span><span class=s2>\"cp\"</span><span class=p>,</span> <span class=s2>\"/tmp/source\"</span><span class=p>,</span> <span class=s2>\"/source\"</span><span class=p>])</span><span class=w></span>    <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>([</span><span class=s2>\"cp\"</span><span class=p>,</span> <span class=s2>\"/source\"</span><span class=p>,</span> <span class=s2>\"/destination\"</span><span class=p>])</span><span class=w></span>    <span class=n>subprocess</span><span class=o>.</span><span class=n>check_call</span><span class=p>([</span><span class=s2>\"cp\"</span><span class=p>,</span> <span class=s2>\"/source\"</span><span class=p>,</span> <span class=s2>\"/other/destination\"</span><span class=p>])</span><span class=w></span>    <span class=c1># you can check if command is in ``fp.calls``</span><span class=w></span>    <span class=k>assert</span> <span class=p>[</span><span class=s2>\"cp\"</span><span class=p>,</span> <span class=s2>\"/tmp/source\"</span><span class=p>,</span> <span class=s2>\"/source\"</span><span class=p>]</span> <span class=ow>in</span> <span class=n>fp</span><span class=o>.</span><span class=n>calls</span><span class=w></span>    <span class=k>assert</span> <span class=p>[</span><span class=s2>\"cp\"</span><span class=p>,</span> <span class=s2>\"/source\"</span><span class=p>,</span> <span class=s2>\"/destination\"</span><span class=p>]</span> <span class=ow>in</span> <span class=n>fp</span><span class=o>.</span><span class=n>calls</span><span class=w></span>    <span class=k>assert</span> <span class=p>[</span><span class=s2>\"cp\"</span><span class=p>,</span> <span class=s2>\"/source\"</span><span class=p>,</span> <span class=s2>\"/other/destination\"</span><span class=p>]</span> <span class=ow>in</span> <span class=n>fp</span><span class=o>.</span><span class=n>calls</span><span class=w></span>    <span class=c1># or check how many it was called, possibly with wildcard arguments</span><span class=w></span>    <span class=k>assert</span> <span class=n>fp</span><span class=o>.</span><span class=n>call_count</span><span class=p>([</span><span class=s2>\"cp\"</span><span class=p>,</span> <span class=s2>\"/source\"</span><span class=p>,</span> <span class=s2>\"/destination\"</span><span class=p>])</span> <span class=o>==</span> <span class=mi>1</span><span class=w></span>    <span class=c1># with ``call_count()`` you don't need to use the same type as</span><span class=w></span>    <span class=c1># the subprocess was called</span><span class=w></span>    <span class=k>assert</span> <span class=n>fp</span><span class=o>.</span><span class=n>call_count</span><span class=p>(</span><span class=s2>\"cp /tmp/source /source\"</span><span class=p>)</span> <span class=o>==</span> <span class=mi>1</span><span class=w></span>    <span class=c1># can be used with ``fp.any()`` to match more calls</span><span class=w></span>    <span class=k>assert</span> <span class=n>fp</span><span class=o>.</span><span class=n>call_count</span><span class=p>([</span><span class=s2>\"cp\"</span><span class=p>,</span> <span class=n>fp</span><span class=o>.</span><span class=n>any</span><span class=p>()])</span> <span class=o>==</span> <span class=mi>3</span></code></pre></section><section id=handling-signals><h3>Handling signals</h3><p>You can use standard <span class=\"docutils literal\">kill()</span>, <span class=\"docutils literal\">terminate()</span> or <span class=\"docutils literal\">send_signal()</span> methodsin <span class=\"docutils literal\">Popen</span> instances. There is an additional <span class=\"docutils literal\">received_signals()</span> methodto get a tuple of all signals received by the process. It is also possible toset up an optional callback function for signals.</p><pre><code><span class=kn>import</span> <span class=nn>signal</span><span class=w></span><span class=k>def</span> <span class=nf>test_signal_callback</span><span class=p>(</span><span class=n>fp</span><span class=p>):</span><span class=w>    </span><span class=sd>\"\"\"Test that signal callbacks work.\"\"\"</span><span class=w></span>    <span class=k>def</span> <span class=nf>callback</span><span class=p>(</span><span class=n>process</span><span class=p>,</span> <span class=n>sig</span><span class=p>):</span><span class=w></span>        <span class=k>if</span> <span class=n>sig</span> <span class=o>==</span> <span class=n>signal</span><span class=o>.</span><span class=n>SIGTERM</span><span class=p>:</span><span class=w></span>            <span class=n>process</span><span class=o>.</span><span class=n>returncode</span> <span class=o>=</span> <span class=o>-</span><span class=mi>1</span><span class=w></span>    <span class=c1># the `register()` method returns a ProgressRecorder object, where</span><span class=w></span>    <span class=c1># all future matching `Popen()` instances will be appended</span><span class=w></span>    <span class=n>process_recorder</span> <span class=o>=</span> <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>,</span> <span class=n>signal_callback</span><span class=o>=</span><span class=n>callback</span><span class=p>)</span><span class=w></span>    <span class=n>process</span> <span class=o>=</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>Popen</span><span class=p>(</span><span class=s2>\"test\"</span><span class=p>)</span><span class=w></span>    <span class=n>process</span><span class=o>.</span><span class=n>send_signal</span><span class=p>(</span><span class=n>signal</span><span class=o>.</span><span class=n>SIGTERM</span><span class=p>)</span><span class=w></span>    <span class=n>process</span><span class=o>.</span><span class=n>wait</span><span class=p>()</span><span class=w></span>    <span class=k>assert</span> <span class=n>process</span><span class=o>.</span><span class=n>returncode</span> <span class=o>==</span> <span class=o>-</span><span class=mi>1</span><span class=w></span>    <span class=k>assert</span> <span class=n>process</span><span class=o>.</span><span class=n>received_signals</span><span class=p>()</span> <span class=o>==</span> <span class=p>(</span><span class=n>signal</span><span class=o>.</span><span class=n>SIGTERM</span><span class=p>,)</span><span class=w></span>    <span class=c1># the instance appended to `register()` output is the `Popen` instance</span><span class=w></span>    <span class=c1># created later</span><span class=w></span>    <span class=k>assert</span> <span class=n>process_recorder</span><span class=o>.</span><span class=n>first_call</span> <span class=ow>is</span> <span class=n>process</span></code></pre></section><section id=asyncio-support><h3>Asyncio support</h3><p>The plugin now supports asyncio and works for <span class=\"docutils literal\">asyncio.create_subprocess_shell</span>and <span class=\"docutils literal\">asyncio.create_subprocess_exec</span>:</p><pre><code><span class=nd>@pytest</span><span class=o>.</span><span class=n>mark</span><span class=o>.</span><span class=n>asyncio</span><span class=w></span><span class=k>async</span> <span class=k>def</span> <span class=nf>test_basic_usage</span><span class=p>(</span><span class=w></span>    <span class=n>fp</span><span class=p>,</span><span class=w></span><span class=p>):</span><span class=w></span>    <span class=n>fp</span><span class=o>.</span><span class=n>register</span><span class=p>(</span><span class=w></span>        <span class=p>[</span><span class=s2>\"some-command-that-is-definitely-unavailable\"</span><span class=p>],</span> <span class=n>returncode</span><span class=o>=</span><span class=mi>500</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>process</span> <span class=o>=</span> <span class=k>await</span> <span class=n>asyncio</span><span class=o>.</span><span class=n>create_subprocess_shell</span><span class=p>(</span><span class=w></span>        <span class=s2>\"some-command-that-is-definitely-unavailable\"</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>returncode</span> <span class=o>=</span> <span class=k>await</span> <span class=n>process</span><span class=o>.</span><span class=n>wait</span><span class=p>()</span><span class=w></span>    <span class=k>assert</span> <span class=n>process</span><span class=o>.</span><span class=n>returncode</span> <span class=o>==</span> <span class=n>returncode</span><span class=w></span>    <span class=k>assert</span> <span class=n>process</span><span class=o>.</span><span class=n>returncode</span> <span class=o>==</span> <span class=mi>500</span></code></pre></section><section id=documentation><h3>Documentation</h3><p>For full documentation, including API reference, please see <a href=\"https://pytest-subprocess.readthedocs.io/en/latest/\" rel=nofollow>https://pytest-subprocess.readthedocs.io/en/latest/</a>.</p></section><section id=contributing><h3>Contributing</h3><p>Contributions are very welcome. Tests can be run with <a href=\"https://tox.readthedocs.io/en/latest/\" rel=nofollow>tox</a>, please ensurethe coverage at least stays the same before you submit a pull request.</p></section><section id=license><h3>License</h3><p>Distributed under the terms of the <a href=\"http://opensource.org/licenses/MIT\" rel=nofollow>MIT</a> license, \u201cpytest-subprocess\u201d is free and open source software</p></section><section id=issues><h3>Issues</h3><p>If you encounter any problems, please <a href=\"https://github.com/aklajnert/pytest-subprocess/issues\" rel=nofollow>file an issue</a> along with a detailed description.</p><hr class=docutils><p>This <a href=\"https://github.com/pytest-dev/pytest\" rel=nofollow>pytest</a> plugin was generated with <a href=\"https://github.com/audreyr/cookiecutter\" rel=nofollow>Cookiecutter</a> along with <a href=\"https://github.com/hackebrot\" rel=nofollow>@hackebrot</a>\u2019s <a href=\"https://github.com/pytest-dev/cookiecutter-pytest-plugin\" rel=nofollow>cookiecutter-pytest-plugin</a> template.</p></section></section><section id=history><h2>History</h2><section id=section-1><h3>1.5.0 (2023-01-28)</h3><section id=features><h4>Features</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/109\" rel=nofollow>#109</a>: Match also <cite>os.PathLike</cite>.</li><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/105\" rel=nofollow>#105</a>: Add program matcher.</li></ul></section><section id=other-changes><h4>Other changes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/110\" rel=nofollow>#110</a>: Produce TypeError on Win Py&lt;3.8 for Path args.</li></ul></section></section><section id=section-2><h3>1.4.2 (2022-10-02)</h3><section id=features-1><h4>Features</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/87\" rel=nofollow>#87</a>: Add support for Python 3.11.</li><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/80\" rel=nofollow>#80</a>, <a href=\"https://github.com/aklajnert/pytest-subprocess/pull/86\" rel=nofollow>#86</a>: The <cite>register()</cite> method returns an auxiliary object that will contain all matching <cite>FakePopen</cite> instances.</li></ul></section><section id=bug-fixes><h4>Bug fixes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/93\" rel=nofollow>#93</a>: Raise callback exceptions on <cite>communicate()</cite> calls.</li></ul></section><section id=other-changes-1><h4>Other changes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/97\" rel=nofollow>#97</a>: Fixed warnings in tests, treat warnings as errors.</li><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/91\" rel=nofollow>#91</a>: Use <cite>sys.executable</cite> instead just <cite>\u201cpython\u201d</cite> in tests while invoking python subprocess.</li><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/90\" rel=nofollow>#90</a>: Fix documentation build, add CI check for it.</li></ul></section></section><section id=section-3><h3>1.4.1 (2022-02-09)</h3><p class=section-subtitle id=other-changes-2>Other changes</p><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/74\" rel=nofollow>#74</a>: Add <span class=\"docutils literal\">fp</span> alias for the fixture, and <span class=\"docutils literal\">register</span> for the <span class=\"docutils literal\">regisiter_subprocess</span>.</li></ul></section><section id=section-4><h3>1.4.0 (2022-01-23)</h3><section id=features-2><h4>Features</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/71\" rel=nofollow>#71</a>: Add support for stdin with asyncio.</li></ul></section><section id=bug-fixes-1><h4>Bug fixes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/68\" rel=nofollow>#68</a>: Make <cite>stdout</cite> and <cite>stderr</cite> an <cite>asyncio.StreamReader</cite> instance when using asyncio functions.</li><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/63\" rel=nofollow>#63</a>, <a href=\"https://github.com/aklajnert/pytest-subprocess/pull/67\" rel=nofollow>#67</a>: Add missing items to <cite>asyncio.subprocess</cite>.</li></ul></section><section id=other-changes-3><h4>Other changes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/69\" rel=nofollow>#69</a>: Extracted code into separate files to improve navigation.</li></ul></section></section><section id=section-5><h3>1.3.2 (2021-11-07)</h3><p class=section-subtitle id=bug-fixes-2>Bug fixes</p><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/61\" rel=nofollow>#61</a>: Fixed behavior of <span class=\"docutils literal\">asyncio.create_subproess_exec()</span>.</li></ul></section><section id=section-6><h3>1.3.1 (2021-11-01)</h3><p class=section-subtitle id=bug-fixes-3>Bug fixes</p><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/58\" rel=nofollow>#58</a>: Correctly handle file stream output.</li></ul></section><section id=section-7><h3>1.3.0 (2021-10-24)</h3><p class=section-subtitle id=features-3>Features</p><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/55\" rel=nofollow>#55</a>: Add support for <span class=\"docutils literal\">terminate()</span>, <span class=\"docutils literal\">kill()</span>, <span class=\"docutils literal\">send_signal()</span>.</li></ul></section><section id=section-8><h3>1.2.0 (2021-10-09)</h3><section id=features-4><h4>Features</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/49\" rel=nofollow>#49</a>, <a href=\"https://github.com/aklajnert/pytest-subprocess/pull/52\" rel=nofollow>#52</a>: Add support for <span class=\"docutils literal\">asyncio</span>.</li></ul></section><section id=other-changes-4><h4>Other changes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/50\" rel=nofollow>#50</a>: Change docs theme.</li></ul></section></section><section id=section-9><h3>1.1.2 (2021-07-17)</h3><p class=section-subtitle id=bug-fixes-4>Bug fixes</p><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/47\" rel=nofollow>#47</a>: Prevent <cite>allow_unregistered()</cite> and <cite>keep_last_process()</cite> from affecting other tests.</li></ul></section><section id=section-10><h3>1.1.1 (2021-06-18)</h3><section id=bug-fixes-5><h4>Bug fixes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/43\" rel=nofollow>#43</a>: Wait for callback thread to finish when calling <span class=\"docutils literal\">communicate()</span>.</li></ul></section><section id=other-changes-5><h4>Other changes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/42\" rel=nofollow>#42</a>: Fix type annotations for <cite>register_subprocess()</cite>.</li></ul></section></section><section id=section-11><h3>1.1.0 (2021-04-18)</h3><section id=bug-fixes-6><h4>Bug fixes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/37\" rel=nofollow>#37</a>: Preserve original command in <cite>proc.args</cite> to prevent leaking the internal <cite>Command</cite> type.</li></ul></section><section id=other-changes-6><h4>Other changes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/38\" rel=nofollow>#38</a>: Switched CI from Azure Pipelines to GitHub Actions.</li><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/35\" rel=nofollow>#35</a>: Drop support for python 3.4 and 3.5. Move type annotations from <cite>.pyi</cite> files into sources.</li></ul></section></section><section id=section-12><h3>1.0.1 (2021-03-20)</h3><section id=bug-fixes-7><h4>Bug fixes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/34\" rel=nofollow>#34</a>: Prevent appending newlines to outputs unless defined as list/tuple.</li></ul></section><section id=other-changes-7><h4>Other changes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/32\" rel=nofollow>#32</a>: Make the <span class=\"docutils literal\">Command</span> class iterable.</li></ul></section></section><section id=section-13><h3>1.0.0 (2020-08-22)</h3><p class=section-subtitle id=features-5>Features</p><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/29\" rel=nofollow>#29</a>: Remember subprocess calls to check if expected commands were executed.</li><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/28\" rel=nofollow>#28</a>: Allow to match a command with variable arguments (non-exact matching).</li></ul></section><section id=section-14><h3>0.1.5 (2020-06-19)</h3><p class=section-subtitle id=bug-fixes-8>Bug fixes</p><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/26\" rel=nofollow>#26</a>: <cite>encoding</cite> and <cite>errors</cite> arguments will properly trigger <cite>text</cite> mode.</li></ul></section><section id=section-15><h3>0.1.4 (2020-04-28)</h3><p class=section-subtitle id=bug-fixes-9>Bug fixes</p><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/22\" rel=nofollow>#22</a>: The <cite>returncode</cite> will not be ignored when <cite>callback</cite> is used.</li><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/21\" rel=nofollow>#21</a>: The exception raised from callback will take precedence over those from subprocess.</li><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/20\" rel=nofollow>#20</a>: Registering process will be now consistent regardless of the command type.</li><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/19\" rel=nofollow>#19</a>: Fixed crash for stderr redirect with an empty stream definition.</li></ul></section><section id=section-16><h3>0.1.3 (2020-03-04)</h3><section id=features-6><h4>Features</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/13\" rel=nofollow>#13</a>: Allow passing keyword arguments into callbacks.</li></ul></section><section id=bug-fixes-10><h4>Bug fixes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/12\" rel=nofollow>#12</a>: Properly raise exceptions from callback functions.</li></ul></section><section id=documentation-changes><h4>Documentation changes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/15\" rel=nofollow>#15</a>: Add documentation chapter about the callback functions.</li></ul></section></section><section id=section-17><h3>0.1.2 (2020-01-17)</h3><section id=features-7><h4>Features</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/3\" rel=nofollow>#3</a>: Add basic support for process input.</li></ul></section><section id=bug-fixes-11><h4>Bug fixes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/5\" rel=nofollow>#5</a>: Make <span class=\"docutils literal\">wait()</span> method to raise <span class=\"docutils literal\">TimeoutError</span> after the desired time will elapse.</li></ul></section><section id=documentation-changes-1><h4>Documentation changes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/7\" rel=nofollow>#7</a>, <a href=\"https://github.com/aklajnert/pytest-subprocess/pull/8\" rel=nofollow>#8</a>, <a href=\"https://github.com/aklajnert/pytest-subprocess/pull/9\" rel=nofollow>#9</a>: Create Sphinx documentation.</li></ul></section><section id=other-changes-8><h4>Other changes</h4><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/10\" rel=nofollow>#10</a>:  Switch from <span class=\"docutils literal\">tox</span> to <span class=\"docutils literal\">nox</span> for running tests and tasks.</li><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/4\" rel=nofollow>#4</a>: Add classifier for Python 3.9. Update CI config to test also on that interpreter version.</li></ul></section></section><section id=section-18><h3>0.1.1 (2019-11-24)</h3><p class=section-subtitle id=other-changes-9>Other changes</p><ul class=simple><li><p><a href=\"https://github.com/aklajnert/pytest-subprocess/pull/1\" rel=nofollow>#1</a>, <a href=\"https://github.com/aklajnert/pytest-subprocess/pull/2\" rel=nofollow>#2</a>: Enable support for Python 3.4, add CI tests for that version.</li></ul></section><section id=section-19><h3>0.1.0 (2019-11-23)</h3><p>Initial release</p></section></section>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://pytest-subprocess.readthedocs.io\" rel=\"nofollow\">        <i class=\"fas fa-book\" aria-hidden=\"true\"></i>Documentation      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/aklajnert/pytest-subprocess\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>Source      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/aklajnert/pytest-subprocess/issues\" rel=\"nofollow\">        <i class=\"fas fa-bug\" aria-hidden=\"true\"></i>Tracker      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/pytest-subprocess\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (MIT)</p>    <p><strong>Author:</strong> <a href=\"mailto:python@aklajnert.pl\">Andrzej Klajnert</a></p>    <p><strong>Maintainer:</strong> <a href=\"mailto:python@aklajnert.pl\">Andrzej Klajnert</a></p>  <p>    <strong>Requires:</strong> Python &gt;=3.6  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/aklajnert/\" aria-label=\"aklajnert\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/dd30dd97d156a0b9827f697f0cc1c7d8c8aeb386/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f31633562656233373866643464316166353764633430326362653036316232633f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for aklajnert from gravatar.com\" title=\"Avatar for aklajnert from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            aklajnert          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Framework</strong>      <ul>        <li>          <a href=\"/search/?c=Framework+%3A%3A+Pytest\">            Pytest          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Operating System</strong>      <ul>        <li>          <a href=\"/search/?c=Operating+System+%3A%3A+OS+Independent\">            OS Independent          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.6\">            Python :: 3.6          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+CPython\">            Python :: Implementation :: CPython          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+PyPy\">            Python :: Implementation :: PyPy          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Testing\">            Software Development :: Testing          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/pytest-subprocess/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/1.5.0/\">                <p class=\"release__version\">                  1.5.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-01-28T10:18:40+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 28, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/1.4.2/\">                <p class=\"release__version\">                  1.4.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-02T07:17:37+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 2, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/1.4.1/\">                <p class=\"release__version\">                  1.4.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-02-09T06:22:20+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 9, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/1.4.0/\">                <p class=\"release__version\">                  1.4.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-01-23T14:18:37+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 23, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/1.3.2/\">                <p class=\"release__version\">                  1.3.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-07T12:56:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 7, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/1.3.1/\">                <p class=\"release__version\">                  1.3.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-01T12:39:41+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 1, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/1.3.0/\">                <p class=\"release__version\">                  1.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-10-24T14:41:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 24, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/1.2.0/\">                <p class=\"release__version\">                  1.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-10-09T10:10:13+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 9, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/1.1.2/\">                <p class=\"release__version\">                  1.1.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-07-17T12:07:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 17, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/1.1.1/\">                <p class=\"release__version\">                  1.1.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-06-18T15:56:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 18, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/1.1.0/\">                <p class=\"release__version\">                  1.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-04-18T12:09:03+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 18, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/1.0.1/\">                <p class=\"release__version\">                  1.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-03-20T16:52:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 20, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/1.0.0/\">                <p class=\"release__version\">                  1.0.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-08-22T11:10:30+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 22, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/0.1.5/\">                <p class=\"release__version\">                  0.1.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-06-19T06:59:08+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 19, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/0.1.4/\">                <p class=\"release__version\">                  0.1.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-04-28T07:48:12+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 28, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/0.1.3/\">                <p class=\"release__version\">                  0.1.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-03-04T08:03:23+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 4, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/0.1.2/\">                <p class=\"release__version\">                  0.1.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-01-17T17:51:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 17, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/0.1.1/\">                <p class=\"release__version\">                  0.1.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-11-24T09:39:39+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 24, 2019</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-subprocess/0.1.0/\">                <p class=\"release__version\">                  0.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-11-23T19:53:03+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 23, 2019</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/12/24/846b02fd7c56cfa32d89b29cd4745827f683b1e126df56bb78f6937096d2/pytest-subprocess-1.5.0.tar.gz\">          pytest-subprocess-1.5.0.tar.gz        </a>        (24.1 kB        <a href=\"#copy-hash-modal-b082d669-21b6-416f-bdfd-9f1cf8b7cd53\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-01-28T10:18:43+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 28, 2023</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/44/96/de22cf4a31bf5f21e6b74dc57e3628e3bc78847acf7a1752bdb1e36dfaf1/pytest_subprocess-1.5.0-py3-none-any.whl\">          pytest_subprocess-1.5.0-py3-none-any.whl        </a>        (20.5 kB        <a href=\"#copy-hash-modal-b102df49-afd8-4878-a286-f313521d1682\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-01-28T10:18:40+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 28, 2023</time>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-b082d669-21b6-416f-bdfd-9f1cf8b7cd53\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for pytest-subprocess-1.5.0.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for pytest-subprocess-1.5.0.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">d7693b96f588f39b84c7b2b5c04287459246dfae6be1dd4098937a728ad4fbe3</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">7c4df64b4ebec28f795e4a8f1ebf19f0</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">1224846b02fd7c56cfa32d89b29cd4745827f683b1e126df56bb78f6937096d2</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-b102df49-afd8-4878-a286-f313521d1682\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for pytest_subprocess-1.5.0-py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for pytest_subprocess-1.5.0-py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">dfd75b10af6800a89a9b758f2e2eceff9de082a27bd1388521271b6e8bde298b</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">6ca5bb2dec281c3c704b6a9f0d576639</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">4496de22cf4a31bf5f21e6b74dc57e3628e3bc78847acf7a1752bdb1e36dfaf1</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "jsonpath",
  "url": "http://www.ultimate.com/phil/python/#jsonpath",
  "html": "<html><head> <title>Phil's Python Packages</title></head><body><h1>Phil's Python Packages</h1><a name=\"cgiauth\" href=\"http://pypi.python.org/pypi/cgiauth/\"><h2>CGIAUTH</h2></a><blockquote>Framework free Authentication Methods for CGI scripts<br><br>Includes the following classes:<ul><li> `BasicAuth</a>' which depends on web server \"Basic\" authentication<li> cookie based classes `SessionCookieAuth' and `StatelessCookieAuth'<li> Hidden field based classes `SessionHiddenAuth' and `StatelessHiddenAuth'</ul>The Cookie and Hidden classes use JavaScript/SHA1 hashing to avoidsending passwords as clear text.<br><p><a href=\"download/\">Download Directory</a></blockquote><p><a name=\"connect\" href=\"http://pypi.python.org/pypi/connect/\"><h2>CONNECT</h2></a><blockquote>Utility routines to easily make IPv4 and IPv6 TCP and UDP socket connections.<p><a href=\"download/\">Download Directory</a></blockquote><p><a name=\"follow\" href=\"http://pypi.python.org/pypi/follow/\"><h2>FOLLOW</h2></a><blockquote>Follow class implements \"tail -f\" functionality to incrementallyread text and binary files as they grow.<p><a href=\"download/\">Download Directory</a></blockquote><p><a name=\"jsam\" href=\"http://pypi.python.org/pypi/jsam/\"><h2>JSAM</h2></a><blockquote>JSON Storage Access Methods is a library for storage and retrieval ofJavaScript Object Notation (JSON) encoded objects.<p>Backends include:<ul><li>file:   directory of plain text JSON files<li>rcs:    directory of plain text JSON files under RCS<li>cvs:    directory of plain text JSON files under CVS (not tested)<li>svn:    directory of plain text JSON files under SVN (not tested)<li>sqlite: object trees stored in an SQLite3 database<li>mysql:  object trees stored in a MySQL database (lightly tested)<li>pgsql:  object trees stored in a PostgreSQL database (lightly tested)</ul><p>Lookup methods include:<ul><li>Collections: a jQuery-like method-chained interface<li>XPath-like query language (only supported for SQL backends)<li>P4J (E4X-like) query language (only supported for SQL backends)        which allows construction of \"xpath\" queries in Python using        method chaining and operator overload, bridging the lexical divide        between code and query.</ul><p>NOTE:<br>Uses 2.6+ supplied \"json\"; requires \"simplejson\" on Python 2.5.File-based storage depends on POSIX file semantics.<br>Requires \"MySQLdb\" for MySQL.<br>Requires \"psycodb2\" for PostgreSQL.<p>The name is a joke on IBM Mainframe data Access Methods (BDAM, BSAM,VSAM, ISAM, QSAM, BPAM). The obvious name 'jsonstore' was alreadytaken by another package in the Python Package Index (PyPI).<p><a href=\"download/\">Download Directory</a></blockquote><a name=\"jsonpath\" href=\"http://pypi.python.org/pypi/jsonpath/\"><h2>JSONPath</h2></a><blockquote>JSONPath is an XPath-like tool for JSON.See <a href=\"http://goessner.net/articles/JsonPath/\">http://goessner.net/articles/JsonPath/</a> for information on the original (JavaScript) implementation.<p>This version basedBased on JavaScript version by Stefan Goessner at<a href=\"http://code.google.com/p/jsonpath/\">http://code.google.com/p/jsonpath/</a> and the Perl version by Kate Rhodes at<a href=\"http://github.com/masukomi/jsonpath-perl/tree/master\">http://github.com/masukomi/jsonpath-perl/tree/master</a>.<p>NOTE WELL: \"predicates\" are evaluated using thePython <code>eval()</code> function, which is scary-dangerous.  I madean effort to translate JavaScript syntax to Python for common cases,but it's easy to break.  I regard this as a toy.  The \"JSAM\" package(above) takes a different approach, storing JSON objects as trees inan SQL database, and executing XPath queries using SQL.<p><a href=\"download/\">Download Directory</a></blockquote><a name=\"mimeattachment\" href=\"http://pypi.python.org/pypi/mimeattachment/\"><h2>MIMEATTACHMENT</h2></a><blockquote>mimeattachement create a MIME attachment for an arbitrary file.Takes a pathname (or file pointer and filename) and returnsa \"message object model\" object for a MIME Attachment.<p><a href=\"download/\">Download Directory</a></blockquote><p><a name=\"packet\" href=\"http://pypi.python.org/pypi/packet/\"><h2>PACKET</h2></a><blockquote>The packet module is a front-end to the struct module.  It allows theuser to define a packet format, and to create a Python class to representthose packets with named attributes for each packet field.<pre>    # demo: make an IP packet packer/unpacker    # IP Prototype    ipp = Prototype()    ipp.add_uint8('vhl')    ipp.add_uint8('tos')    ipp.add_uint16('len')    ipp.add_uint16('id')    ipp.add_uint16('off')    ipp.add_uint8('ttl')    ipp.add_uint8('p')    ipp.add_uint16('sum')    ipp.add_uint32('src')    ipp.add_uint32('dst')    IP = ipp.klass('IP', NETWORK)    del ipp    # ....    # create an IP packet instance from bytes    packet = IP(bytes)</pre><p><a href=\"download/\">Download Directory</a></blockquote><a name=\"sendmail\" href=\"http://pypi.python.org/pypi/sendmail/\"><h2>SENDMAIL</h2></a><blockquote>sendmail is a package to invoke the POSIX \"sendmail\" programto queue e-mail, with an smtplib compatible API.<p><a href=\"download/\">Download Directory</a></blockquote><a name=\"spipat\" href=\"http://pypi.python.org/pypi/spipat/\"><h2>SPIPAT</h2></a><blockquote>SPIPAT is a package that adds SNOBOL4/SPITBOL style patterns toPython as composable objects.<p>Patterns can be composed with other Patterns and stringsusing the '+' and '|' operators.<p>Based on a C-language translation of the GNU Ada (GNAT)package by the original creator of SPITBOL.<p><a href=\"http://www.regressive.org/snobol4/spipat/\">Download Directory</a></blockquote><img SRC=\"/cgi-bin/count?python\" ALT=\"\" WIDTH=1 HEIGHT=1></body></html>",
  "embeddings": []
}
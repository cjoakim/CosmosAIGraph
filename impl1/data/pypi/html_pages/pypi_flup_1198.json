{
  "libtype": "pypi",
  "libname": "flup",
  "url": "http://www.saddi.com/software/flup/",
  "html": "<!DOCTYPE html  PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"><head>  <title>flup: random Python WSGI stuff</title>  <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"http://www.saddi.com/software/news/feeds/categories/4-flup.rss\" />  <!--<link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"http://www.saddi.com/taxonomy/term/5/0/feed\" />-->  <link rel=\"stylesheet\" type=\"text/css\" href=\"/software/css/default.css\" />  <style type=\"text/css\"><!--body {  padding: 10px;  margin: 0;}.blur {  background-color: lightgray;  color: inherit;  margin-left: 4px;  margin-top: 4px;}.shadow, .content {  position: relative;  bottom: 2px;  right: 2px;}.shadow {  background-color: gray;  color: inherit;}.content {  background-color: beige;  color: black;  border: 1px solid black;  padding: 10px;}h3 {  margin-bottom: 0px;}--></style>  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" /></head><body><div class=\"blur\"><div class=\"shadow\"><div class=\"content\">This Python package is a random collection of<a href=\"http://www.python.org/peps/pep-0333.html\">WSGI</a> modulesI've written. <code>fcgi</code> and <code>publisher</code> have long existedsince I became interested in Python web programming a few years ago.They have been recently cleaned up and retrofitted with WSGI. The othermodules just followed as I explored the possibilities of WSGI.<p>This package has no dependencies and installs with a simple<code>distutils</code> setup script. However, if you are running aversion of Python less than 2.4, the use of forking WSGI servers requiresthe <a href=\"http://www.inoi.fi/open/trac/eunuchs\">eunuchs</a> module.</p><p>The Subversion repository is <code>&lt;http://svn.saddi.com/flup/trunk&gt;</code>.</p><p>You can grab the latest snapshot <a href=\"dist/\">here</a>.</p><!--<p>Here is <a href=\"http://www.saddi.com/taxonomy/term/5\">news</a>relating to flup, as well as an <a href=\"http://www.saddi.com/taxonomy/term/5/0/feed\">RSS feed</a> of the same.</p>--><p>Here is <a href=\"http://www.saddi.com/software/news/categories/4-flup\">news</a>relating to flup, as well as an <a href=\"http://www.saddi.com/software/news/feeds/categories/4-flup.rss\">RSS feed</a> of the same.</p><p>flup is distributed under a BSD-style license.</p><h3>WSGI servers</h3><code>flup.server.ajp</code><br /><code>flup.server.ajp_fork</code><br /><code>flup.server.fcgi</code><br /><code>flup.server.fcgi_fork</code><br /><code>flup.server.scgi</code><br /><code>flup.server.scgi_fork</code><br /><p>Three sets of WSGI servers/gateways, which speak<a href=\"http://jakarta.apache.org/tomcat/connectors-doc/common/ajpv13a.html\">AJP 1.3</a>,<a href=\"http://www.fastcgi.com/\">FastCGI</a>, and<a href=\"http://python.ca/nas/scgi/protocol.txt\">SCGI</a>. Each server comesin two flavors: a threaded version, and a forking version.</p><p>Example usage:</p><div style=\"text-align:left;color:#000000; background-color:#ffffff; border:solid black 1px; padding:0.5em 1em 0.5em 1em; overflow:auto;font-size:small; font-family:monospace; \"><span style=\"color:#881350;\">def</span> myapp(environ, start_response):<br />&nbsp;&nbsp;&nbsp;&nbsp;start_response(<span style=\"color:#760f15;\">'200 OK'</span>, [(<span style=\"color:#760f15;\">'Content-Type'</span>, <span style=\"color:#760f15;\">'text/plain'</span>)])<br />&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#881350;\">return</span> [<span style=\"color:#760f15;\">'Hello World!\\n'</span>]<br /><br /><span style=\"color:#881350;\">if</span> __name__ == <span style=\"color:#760f15;\">'__main__'</span>:<br />&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#881350;\">from</span> flup.server.fcgi <span style=\"color:#881350;\">import</span> WSGIServer<br />&nbsp;&nbsp;&nbsp;&nbsp;WSGIServer(myapp).run()<br /></div><h3>WSGI middleware</h3><code>flup.middleware.error</code><br /><code>flup.middleware.gzip</code><br /><code>flup.middleware.session</code><br /><p>Some WSGI middleware which may or may not be useful to other projects.<code>:)</code></p><p>An example of using all three:</p><div style=\"text-align:left;color:#000000; background-color:#ffffff; border:solid black 1px; padding:0.5em 1em 0.5em 1em; overflow:auto;font-size:small; font-family:monospace; \"><span style=\"color:#881350;\">from</span> flup.middleware.session <span style=\"color:#881350;\">import</span> MemorySessionStore, SessionMiddleware<br /><span style=\"color:#881350;\">from</span> flup.middleware.gzip <span style=\"color:#881350;\">import</span> GzipMiddleware<br /><span style=\"color:#881350;\">from</span> flup.middleware.error <span style=\"color:#881350;\">import</span> ErrorMiddleware<br /><br /><span style=\"color:#881350;\">def</span> myapp(environ, start_response):<br />&nbsp;&nbsp;&nbsp;&nbsp;session = environ[<span style=\"color:#760f15;\">'com.saddi.service.session'</span>].session<br />&nbsp;&nbsp;&nbsp;&nbsp;count = session.get(<span style=\"color:#760f15;\">'count'</span>, <span style=\"color:#0000ff;\">0</span>) + <span style=\"color:#0000ff;\">1</span><br />&nbsp;&nbsp;&nbsp;&nbsp;session[<span style=\"color:#760f15;\">'count'</span>] = count<br />&nbsp;&nbsp;&nbsp;&nbsp;start_response(<span style=\"color:#760f15;\">'200 OK'</span>, [(<span style=\"color:#760f15;\">'Content-Type'</span>, <span style=\"color:#760f15;\">'text/plain'</span>)])<br />&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#881350;\">return</span> [<span style=\"color:#760f15;\">'You have been here %d times!\\n'</span> % count]<br /><br />sessionStore = MemorySessionStore()<br />app = SessionMiddleware(sessionStore, myapp)<br /><br />app = GzipMiddleware(app)<br /><br />app = ErrorMiddleware(app, <span style=\"color:#760f15;\">'wsgi-admin@example.com'</span>)<br /><br /><span style=\"color:#881350;\">if</span> __name__ == <span style=\"color:#760f15;\">'__main__'</span>:<br />&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#881350;\">from</span> flup.server.ajp <span style=\"color:#881350;\">import</span> WSGIServer<br />&nbsp;&nbsp;&nbsp;&nbsp;WSGIServer(app).run()<br /></div><h3>Publisher</h3><code>flup.publisher</code><br /><code>flup.resolver.module</code><br /><code>flup.resolver.importingmodule</code><br /><code>flup.resolver.objectpath</code><br /><p>A lightweight web framework originally inspired by<a href=\"http://www.modpython.org/\">mod_python</a>'s publisher module.</p><p>An unrealistic example (hello.py): <code>;)</code></p><div style=\"text-align:left;color:#000000; background-color:#ffffff; border:solid black 1px; padding:0.5em 1em 0.5em 1em; overflow:auto;font-size:small; font-family:monospace; \"><span style=\"color:#881350;\">from</span> flup.publisher <span style=\"color:#881350;\">import</span> Redirect<br /><br /><span style=\"color:#881350;\">def</span> index(trans):<br />&nbsp;&nbsp;&nbsp;&nbsp;name = trans.session.get(<span style=\"color:#760f15;\">'name'</span>)<br />&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#881350;\">if</span> name <span style=\"color:#881350;\">is</span> <span style=\"color:#881350;\">None</span>:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#881350;\">return</span> <span style=\"color:#760f15;\">'Hello, anonymous!\\n'</span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#881350;\">else</span>:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#881350;\">return</span> <span style=\"color:#760f15;\">'Hello, %s!\\n'</span> % name<br /><br /><span style=\"color:#881350;\">def</span> login(trans, name=<span style=\"color:#881350;\">None</span>):<br />&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#881350;\">if</span> name <span style=\"color:#881350;\">is</span> <span style=\"color:#881350;\">not</span> <span style=\"color:#881350;\">None</span>:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;trans.session[<span style=\"color:#760f15;\">'name'</span>] = name<br />&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#881350;\">raise</span> Redirect(<span style=\"color:#760f15;\">'./'</span>)<br /><br /><span style=\"color:#881350;\">def</span> logout(trans):<br />&nbsp;&nbsp;&nbsp;&nbsp;trans.session.invalidate()<br />&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#881350;\">return</span> <span style=\"color:#760f15;\">'Goodbye!\\n'</span><br /></div><p>And then:</p><div style=\"text-align:left;color:#000000; background-color:#ffffff; border:solid black 1px; padding:0.5em 1em 0.5em 1em; overflow:auto;font-size:small; font-family:monospace; \"><span style=\"color:#881350;\">from</span> flup.resolver.module <span style=\"color:#881350;\">import</span> ModuleResolver<br /><span style=\"color:#881350;\">from</span> flup.publisher <span style=\"color:#881350;\">import</span> Publisher<br /><span style=\"color:#881350;\">from</span> flup.middleware.session <span style=\"color:#881350;\">import</span> ShelveSessionStore, SessionMiddleware<br /><br /><span style=\"color:#881350;\">import</span> hello<br />app = Publisher(ModuleResolver(hello))<br /><br />app = SessionMiddleware(ShelveSessionStore(), app)<br /><br /><span style=\"color:#881350;\">if</span> __name__ == <span style=\"color:#760f15;\">'__main__'</span>:<br />&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#881350;\">from</span> flup.server.scgi <span style=\"color:#881350;\">import</span> WSGIServer<br />&nbsp;&nbsp;&nbsp;&nbsp;WSGIServer(app).run()<br /></div></div></div></div><p style=\"text-align: center\">Copyright &copy; 2005 Allan Saddi. All Rights Reserved.</p></body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "json-stream",
  "url": "https://pypi.org/project/json-stream/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>json-stream \u00b7 PyPI</title>    <meta name=\"description\" content=\"Streaming JSON encoder and decoder\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for json-stream\" href=\"/rss/project/json-stream/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/json-stream/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/json-stream/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"json-stream\">    <meta property=\"og:description\" content=\"Streaming JSON encoder and decoder\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/daggaz/json-stream\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:daggaz/json-stream+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        json-stream 2.3.2      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install json-stream</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/json-stream/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2023-06-30T09:43:14+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 30, 2023</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/json-stream\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">Streaming JSON encoder and decoder</p><div data-html-include=\"/_includes/edit-project-button/json-stream\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for json-stream\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://www.buymeacoffee.com/daggaz\" rel=\"nofollow\">        <i class=\"fas fa-donate\" aria-hidden=\"true\"></i>Funding      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/daggaz/json-stream\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/daggaz/json-stream\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>Repository      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/daggaz/json-stream/issues\" rel=\"nofollow\">        <i class=\"fas fa-bug\" aria-hidden=\"true\"></i>Tracker      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/json-stream\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (Copyright (c) 2020 Jamie Cockburn  Permission is hereby granted, free of charge, to any person obtai...)</p>    <p><strong>Author:</strong> <a href=\"mailto:jamie_cockburn@hotmail.co.uk\">Jamie Cockburn</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      json,    </span>    <span class=\"package-keyword\">      stream,    </span>    <span class=\"package-keyword\">      decoder,    </span>    <span class=\"package-keyword\">      encoder,    </span>    <span class=\"package-keyword\">      parsing    </span>  </p>  <p>    <strong>Requires:</strong> Python &lt;4, &gt;=3.5  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/daggaz/\" aria-label=\"daggaz\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/fc21dba5664c0fd6bc310a232dfa2ca2e4767331/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f30643137303437623033316635653063656564343033396334656536313436303f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for daggaz from gravatar.com\" title=\"Avatar for daggaz from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            daggaz          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3+%3A%3A+Only\">            Python :: 3 :: Only          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries\">            Software Development :: Libraries          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for json-stream\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <h1>json-stream</h1><p><a href=\"https://github.com/daggaz/json-stream/actions/workflows/tests.yml\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/d42b223585e824c70c765464752b974407d4f76c/68747470733a2f2f6769746875622e636f6d2f64616767617a2f6a736f6e2d73747265616d2f616374696f6e732f776f726b666c6f77732f74657374732e796d6c2f62616467652e737667\" alt=Tests></a><a href=\"https://pypi.org/project/json-stream\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/503c2876234e2f652a9783d6fdd310195f931bb7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6a736f6e2d73747265616d\" alt=\"PyPI package and version badge\"></a><a href=\"https://pypi.org/project/json-stream/\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/4b17c4211290e897ba9ccc918016b65449b76a3b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6a736f6e2d73747265616d\" alt=\"Supported Python versions badge\"></a><a href=\"https://www.buymeacoffee.com/daggaz\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/c7191d1e65a9ae6e0bb9ca1216aeb81e26af8e97/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6275792532306d6525323061253230636f666665652d646f6e6174652d626c75652e737667\" alt=Donate></a></p><p>Simple streaming JSON parser and encoder.</p><p>When <a href=#reading rel=nofollow>reading</a> JSON data, <code>json-stream</code> can decode JSON data ina streaming manner, providing a pythonic dict/list-like interface, or a<a href=#visitor rel=nofollow>visitor-based interfeace</a>. Can stream from files, <a href=#urls rel=nofollow>URLs</a>or <a href=#iterators rel=nofollow>iterators</a>.</p><p>When <a href=#writing rel=nofollow>writing</a> JSON data, <code>json-stream</code> can stream JSON objectsas you generate them.</p><p>These techniques allow you to <a href=#standard-json-problems rel=nofollow>reduce memory consumption andlatency</a>.</p><h1><a id=reading rel=nofollow></a> Reading</h1><p><code>json-stream</code> is a JSON parser just like the standard library's<a href=\"https://docs.python.org/3/library/json.html#json.load\" rel=nofollow><code>json.load()</code></a>. Itwill read a JSON document and convert it into native python types.</p><pre lang=python3><span class=kn>import</span> <span class=nn>json_stream</span><span class=n>data</span> <span class=o>=</span> <span class=n>json_stream</span><span class=o>.</span><span class=n>load</span><span class=p>(</span><span class=n>f</span><span class=p>)</span></pre><p>Features:</p><ul><li>stream all JSON data types (objects, lists and simple types)</li><li>stream nested data</li><li>simple pythonic <code>list</code>-like/<code>dict</code>-like interface</li><li>stream truncated or malformed JSON data (up to the first error)</li><li><a href=#rust-tokenizer rel=nofollow>native code parsing speedups</a> for most common platforms</li><li>pure python fallback if native extensions not available</li></ul><p>Unlike <code>json.load()</code>, <code>json-stream</code> can <em>stream</em> JSON data from any file-like or<a href=#iterators rel=nofollow>iterable</a> object. This has the following benefits:</p><ul><li>it does not require the whole json document to be read into memory up-front</li><li>it can start producing data before the entire document has finished loading</li><li>it only requires enough memory to hold the data currently being parsed</li></ul><p>There are specific integrations for streaming JSON data from <a href=#urls rel=nofollow>URLs</a> using the<a href=#requests rel=nofollow><code>requests</code></a>, <a href=#httpx rel=nofollow><code>httpx</code></a>, or <a href=#urllib rel=nofollow><code>urllib</code></a>.</p><p>The objects that <code>json-stream</code> produces can be <a href=#encoding-json-stream-objects rel=nofollow>re-output</a>using <code>json.dump()</code> with a little work.</p><h2>Usage</h2><h3><code>json_stream.load()</code></h3><p><code>json_stream.load()</code> has two modes of operation, controlled bythe <code>persistent</code> argument (default false).</p><p>It is also possible to \"mix\" the modes as you consume the data.</p><h4>Transient mode (default)</h4><p>This mode is appropriate if you can consume the data iteratively. You cannotmove backwards through the stream to read data that has already been skippedover. It is the mode you <strong>must</strong> use if you want to process large amounts ofJSON data without consuming large amounts of memory.</p><p>In transient mode, only the data currently being read is stored in memory. Anydata previously read from the stream is discarded (it's up to you what to dowith it) and attempting to access this data results in a<code>TransientAccessException</code>.</p><pre lang=python3><span class=kn>import</span> <span class=nn>json_stream</span><span class=c1># JSON: {\"count\": 3, \"results\": [\"a\", \"b\", \"c\"]}</span><span class=n>data</span> <span class=o>=</span> <span class=n>json_stream</span><span class=o>.</span><span class=n>load</span><span class=p>(</span><span class=n>f</span><span class=p>)</span>  <span class=c1># data is a transient dict-like object </span><span class=c1># stream has been read up to \"{\"</span><span class=c1># use data like a dict</span><span class=n>results</span> <span class=o>=</span> <span class=n>data</span><span class=p>[</span><span class=s2>\"results\"</span><span class=p>]</span>  <span class=c1># results is a transient list-like object</span><span class=c1># stream has been read up to \"[\", we now cannot read \"count\"</span><span class=c1># iterate transient list</span><span class=k>for</span> <span class=n>result</span> <span class=ow>in</span> <span class=n>results</span><span class=p>:</span>    <span class=nb>print</span><span class=p>(</span><span class=n>result</span><span class=p>)</span>  <span class=c1># prints a, b, c</span><span class=c1># stream has been read up to \"]\"</span><span class=c1># attempt to read \"count\" from earlier in stream</span><span class=n>count</span> <span class=o>=</span> <span class=n>data</span><span class=p>[</span><span class=s2>\"count\"</span><span class=p>]</span>  <span class=c1># will raise exception</span><span class=c1># stream is now exhausted</span><span class=c1># attempt to read from list that has already been iterated</span><span class=k>for</span> <span class=n>result</span> <span class=ow>in</span> <span class=n>results</span><span class=p>:</span>  <span class=c1># will raise exception</span>    <span class=k>pass</span></pre><h4>Persistent mode</h4><p>In persistent mode all previously read data is stored in memory asit is parsed. The returned <code>dict</code>-like or <code>list</code>-like objectscan be used just like normal data structures.</p><p>If you request an index or key that has already been read from the streamthen it is retrieved from memory. If you request an index or key that hasnot yet been read from the stream, then the request blocks until that itemis found in the stream.</p><pre lang=python3><span class=kn>import</span> <span class=nn>json_stream</span><span class=c1># JSON: {\"count\": 1, \"results\": [\"a\", \"b\", \"c\"]}</span><span class=n>data</span> <span class=o>=</span> <span class=n>json_stream</span><span class=o>.</span><span class=n>load</span><span class=p>(</span><span class=n>f</span><span class=p>,</span> <span class=n>persistent</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=c1># data is a streaming  dict-like object </span><span class=c1># stream has been read up to \"{\"</span><span class=c1># use data like a dict</span><span class=n>results</span> <span class=o>=</span> <span class=n>data</span><span class=p>[</span><span class=s2>\"results\"</span><span class=p>]</span>  <span class=c1># results is a streaming list-like object</span><span class=c1># stream has been read up to \"[\"</span><span class=c1># count has been stored data</span><span class=c1># use results like a list</span><span class=n>a_result</span> <span class=o>=</span> <span class=n>results</span><span class=p>[</span><span class=mi>1</span><span class=p>]</span>  <span class=c1># a_result = \"b\"</span><span class=c1># stream has been read up to the middle of list</span><span class=c1># \"a\" and \"b\" have been stored in results</span><span class=c1># read earlier data from memory</span><span class=n>count</span> <span class=o>=</span> <span class=n>data</span><span class=p>[</span><span class=s2>\"count\"</span><span class=p>]</span>  <span class=c1># count = 1</span><span class=c1># consume rest of list</span><span class=n>results</span><span class=o>.</span><span class=n>read_all</span><span class=p>()</span><span class=c1># stream has been read up to \"}\"</span><span class=c1># \"c\" is now stored in results too</span><span class=c1># results.is_streaming() == False</span><span class=c1># consume everything</span><span class=n>data</span><span class=o>.</span><span class=n>read_all</span><span class=p>()</span><span class=c1># stream is now exhausted</span><span class=c1># data.is_streaming() == False</span></pre><p>Persistent mode is not appropriate if you care about memory consumption, butprovides an identical experience compared to <code>json.load()</code>.</p><h4>Mixed mode</h4><p>In some cases you will need to be able to randomly access some part of thedata, but still only have that specific data taking up memory resources.</p><p>For example, you might have a very long list of objects, but you cannot alwaysaccess the keys of the objects in stream order. You want to be able to iteratethe list transiently, but access the result objects persistently.</p><p>This can be achieved using the <code>persistent()</code> method of all the <code>list</code> or<code>dict</code>-like objects json_stream produces. Calling <code>persistent()</code> causes the existingtransient object to produce persistent child objects.</p><p>Note that the <code>persistent()</code> method makes the children of the object itis called on persistent, not the object it is called on.</p><pre lang=python3><span class=kn>import</span> <span class=nn>json_stream</span><span class=c1># JSON: {\"results\": [{\"x\": 1, \"y\": 3}, {\"y\": 4, \"x\": 2}]}</span><span class=c1># note that the keys of the inner objects are not ordered </span><span class=n>data</span> <span class=o>=</span> <span class=n>json_stream</span><span class=o>.</span><span class=n>load</span><span class=p>(</span><span class=n>f</span><span class=p>)</span>  <span class=c1># data is a transient dict-like object </span><span class=c1># iterate transient list, but produce persistent items</span><span class=k>for</span> <span class=n>result</span> <span class=ow>in</span> <span class=n>data</span><span class=p>[</span><span class=s1>'results'</span><span class=p>]</span><span class=o>.</span><span class=n>persistent</span><span class=p>():</span>    <span class=c1># result is a persistent dict-like object</span>    <span class=nb>print</span><span class=p>(</span><span class=n>result</span><span class=p>[</span><span class=s1>'x'</span><span class=p>])</span>  <span class=c1># print x</span>    <span class=nb>print</span><span class=p>(</span><span class=n>result</span><span class=p>[</span><span class=s1>'y'</span><span class=p>])</span>  <span class=c1># print y (error on second result without .persistent())</span>    <span class=nb>print</span><span class=p>(</span><span class=n>result</span><span class=p>[</span><span class=s1>'x'</span><span class=p>])</span>  <span class=c1># print x again (error without .persistent())</span></pre><p>The opposite is also possible, going from persistent mode to transient mode, thoughthe use cases for this are more esoteric.</p><pre lang=python3><span class=c1># JSON: {\"a\": 1, \"x\": [\"long\", \"list\", \"I\", \"don't\", \"want\", \"in\", \"memory\"], \"b\": 2}</span><span class=n>data</span> <span class=o>=</span> <span class=n>load</span><span class=p>(</span><span class=n>StringIO</span><span class=p>(</span><span class=n>json</span><span class=p>),</span> <span class=n>persistent</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=o>.</span><span class=n>transient</span><span class=p>()</span><span class=c1># data is a persistent dict-list object that produces transient children</span><span class=nb>print</span><span class=p>(</span><span class=n>data</span><span class=p>[</span><span class=s2>\"a\"</span><span class=p>])</span>  <span class=c1># prints 1</span><span class=n>x</span> <span class=o>=</span> <span class=n>data</span><span class=p>[</span><span class=s2>\"x\"</span><span class=p>]</span>  <span class=c1># x is a transient list, you can use it accordingly</span><span class=nb>print</span><span class=p>(</span><span class=n>x</span><span class=p>[</span><span class=mi>0</span><span class=p>])</span>  <span class=c1># prints long</span><span class=c1># access earlier data from memory</span><span class=nb>print</span><span class=p>(</span><span class=n>data</span><span class=p>[</span><span class=s2>\"a\"</span><span class=p>])</span>  <span class=c1># this would have raised an exception if data was transient</span><span class=nb>print</span><span class=p>(</span><span class=n>data</span><span class=p>[</span><span class=s2>\"b\"</span><span class=p>])</span>  <span class=c1># prints 2</span><span class=c1># we have now moved past all the data in the transient list</span><span class=nb>print</span><span class=p>(</span><span class=n>x</span><span class=p>[</span><span class=mi>0</span><span class=p>])</span>  <span class=c1># will raise exception</span></pre><h3><a id=visitor rel=nofollow></a>visitor pattern</h3><p>You can also parse using a visitor-style approach where a function you supplyis called for each data item as it is parsed (depth-first).</p><p>This uses a transient parser under the hood, so does not consume memory forthe whole document.</p><pre lang=python3><span class=kn>import</span> <span class=nn>json_stream</span><span class=c1># JSON: {\"x\": 1, \"y\": {}, \"xxxx\": [1,2, {\"yyyy\": 1}, \"z\", 1, []]}</span><span class=k>def</span> <span class=nf>visitor</span><span class=p>(</span><span class=n>item</span><span class=p>,</span> <span class=n>path</span><span class=p>):</span>    <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s2>\"</span><span class=si>{</span><span class=n>item</span><span class=si>}</span><span class=s2> at path </span><span class=si>{</span><span class=n>path</span><span class=si>}</span><span class=s2>\"</span><span class=p>)</span><span class=n>json_stream</span><span class=o>.</span><span class=n>visit</span><span class=p>(</span><span class=n>f</span><span class=p>,</span> <span class=n>visitor</span><span class=p>)</span></pre><p>Output:</p><pre><code>1 at path ('x',){} at path ('y',)1 at path ('xxxx', 0)2 at path ('xxxx', 1)1 at path ('xxxx', 2, 'yyyy')z at path ('xxxx', 3)1 at path ('xxxx', 4)[] at path ('xxxx', 5)</code></pre><h3><a id=urls rel=nofollow></a> Stream a URL</h3><p><code>json_stream</code> knows how to stream directly from a URL using a variety of packages.Supported packages include:</p><ul><li>Python's batteries-included <a href=#urllib rel=nofollow><code>urllib</code></a> package</li><li>The popular <a href=#requests rel=nofollow><code>requests</code></a> library</li><li>The newer <a href=#httpx rel=nofollow><code>httpx</code></a> library</li></ul><h4><a id=urllib rel=nofollow></a> urllib</h4><p><a href=\"https://docs.python.org/3/library/urllib.html\" rel=nofollow><code>urllib</code></a>'s response objects are alreadyfile-like objects, so we can just pass them directly to <code>json-stream</code>.</p><pre lang=python3><span class=kn>import</span> <span class=nn>urllib.request</span><span class=kn>import</span> <span class=nn>json_stream</span><span class=k>with</span> <span class=n>urllib</span><span class=o>.</span><span class=n>request</span><span class=o>.</span><span class=n>urlopen</span><span class=p>(</span><span class=s1>'http://example.com/data.json'</span><span class=p>)</span> <span class=k>as</span> <span class=n>response</span><span class=p>:</span>    <span class=n>data</span> <span class=o>=</span> <span class=n>json_stream</span><span class=o>.</span><span class=n>load</span><span class=p>(</span><span class=n>response</span><span class=p>)</span></pre><h4><a id=requests rel=nofollow></a>requests</h4><p>To stream JSON data from <a href=\"https://requests.readthedocs.io/en/latest/\" rel=nofollow><code>requests</code></a>, you mustpass <code>stream=True</code> when making a request, and call <code>json_stream.requests.load()</code> passing the response.</p><pre lang=python3><span class=kn>import</span> <span class=nn>requests</span><span class=kn>import</span> <span class=nn>json_stream.requests</span><span class=k>with</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s1>'http://example.com/data.json'</span><span class=p>,</span> <span class=n>stream</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span> <span class=k>as</span> <span class=n>response</span><span class=p>:</span>    <span class=n>data</span> <span class=o>=</span> <span class=n>json_stream</span><span class=o>.</span><span class=n>requests</span><span class=o>.</span><span class=n>load</span><span class=p>(</span><span class=n>response</span><span class=p>)</span></pre><p><a id=requests-chunk-size rel=nofollow></a>Note: these functions use<a href=\"https://requests.readthedocs.io/en/latest/api/#requests.Response.iter_content\" rel=nofollow><code>response.iter_content()</code></a> under thehood with a <code>chunk_size</code> of 10k bytes. This default allows us to perform effective reads from the response stream andlower CPU usage. The drawback to this is that <code>requests</code> will buffer each read until up to 10k bytes have been readbefore passing the data back to <code>json_stream</code>. If you need to consume data more responsively the only option is to tune<code>chunk_size</code> back to 1 to disable buffering.</p><h4><a id=httpx rel=nofollow></a> httpx</h4><p>To stream JSON data from <a href=\"https://www.python-httpx.org/\" rel=nofollow><code>httpx</code></a>, you must call<a href=\"https://www.python-httpx.org/quickstart/#streaming-responses\" rel=nofollow><code>stream()</code></a> whenmaking your request, and call <code>json_stream.httpx.load()</code> passing the response.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>import</span> <span class=nn>json_stream.httpx</span><span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>,</span> <span class=n>client</span><span class=o>.</span><span class=n>stream</span><span class=p>(</span><span class=s1>'GET'</span><span class=p>,</span> <span class=s1>'http://example.com/data.json'</span><span class=p>)</span> <span class=k>as</span> <span class=n>response</span><span class=p>:</span>    <span class=n>data</span> <span class=o>=</span> <span class=n>json_stream</span><span class=o>.</span><span class=n>httpx</span><span class=o>.</span><span class=n>load</span><span class=p>(</span><span class=n>response</span><span class=p>)</span></pre><p>Under the hood, this works similarly to the <a href=#requests rel=nofollow><code>requests</code></a> version above, includingthe caveat about <a href=#requests-chunk-size rel=nofollow><code>chunk_size</code></a>.</p><h3>Stream a URL (with visitor)</h3><p>The visitor pattern also works with URL streams.</p><h4>urllib</h4><pre lang=python3><span class=kn>import</span> <span class=nn>urllib.request</span><span class=kn>import</span> <span class=nn>json_stream</span><span class=k>def</span> <span class=nf>visitor</span><span class=p>(</span><span class=n>item</span><span class=p>,</span> <span class=n>path</span><span class=p>):</span>    <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s2>\"</span><span class=si>{</span><span class=n>item</span><span class=si>}</span><span class=s2> at path </span><span class=si>{</span><span class=n>path</span><span class=si>}</span><span class=s2>\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>urllib</span><span class=o>.</span><span class=n>request</span><span class=o>.</span><span class=n>urlopen</span><span class=p>(</span><span class=s1>'http://example.com/data.json'</span><span class=p>)</span> <span class=k>as</span> <span class=n>response</span><span class=p>:</span>    <span class=n>json_stream</span><span class=o>.</span><span class=n>visit</span><span class=p>(</span><span class=n>response</span><span class=p>,</span> <span class=n>visitor</span><span class=p>)</span></pre><h4>requests</h4><pre lang=python3><span class=kn>import</span> <span class=nn>requests</span><span class=kn>import</span> <span class=nn>json_stream.requests</span><span class=k>def</span> <span class=nf>visitor</span><span class=p>(</span><span class=n>item</span><span class=p>,</span> <span class=n>path</span><span class=p>):</span>    <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s2>\"</span><span class=si>{</span><span class=n>item</span><span class=si>}</span><span class=s2> at path </span><span class=si>{</span><span class=n>path</span><span class=si>}</span><span class=s2>\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s1>'http://example.com/data.json'</span><span class=p>,</span> <span class=n>stream</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span> <span class=k>as</span> <span class=n>response</span><span class=p>:</span>    <span class=n>json_stream</span><span class=o>.</span><span class=n>requests</span><span class=o>.</span><span class=n>visit</span><span class=p>(</span><span class=n>response</span><span class=p>,</span> <span class=n>visitor</span><span class=p>)</span></pre><p>The <a href=#requests-chunk-size rel=nofollow><code>chunk_size</code></a> note also applies to <code>visit()</code>.</p><h4>httpx</h4><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>import</span> <span class=nn>json_stream.httpx</span><span class=k>def</span> <span class=nf>visitor</span><span class=p>(</span><span class=n>item</span><span class=p>,</span> <span class=n>path</span><span class=p>):</span>    <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s2>\"</span><span class=si>{</span><span class=n>item</span><span class=si>}</span><span class=s2> at path </span><span class=si>{</span><span class=n>path</span><span class=si>}</span><span class=s2>\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>,</span> <span class=n>client</span><span class=o>.</span><span class=n>stream</span><span class=p>(</span><span class=s1>'GET'</span><span class=p>,</span> <span class=s1>'http://example.com/data.json'</span><span class=p>)</span> <span class=k>as</span> <span class=n>response</span><span class=p>:</span>    <span class=n>json_stream</span><span class=o>.</span><span class=n>httpx</span><span class=o>.</span><span class=n>visit</span><span class=p>(</span><span class=n>response</span><span class=p>,</span> <span class=n>visitor</span><span class=p>)</span></pre><h3><a id=iterators rel=nofollow></a> Stream an iterable</h3><p><code>json-stream</code>'s parsing functions can take any iterable object that produces encoded JSON as<code>byte</code> objects.</p><pre lang=python3><span class=kn>import</span> <span class=nn>json_stream</span><span class=k>def</span> <span class=nf>some_iterator</span><span class=p>():</span>    <span class=k>yield</span> <span class=sa>b</span><span class=s1>'{\"some\":'</span>    <span class=k>yield</span> <span class=sa>b</span><span class=s1>' \"JSON\"}'</span><span class=n>data</span> <span class=o>=</span> <span class=n>json_stream</span><span class=o>.</span><span class=n>load</span><span class=p>(</span><span class=n>some_iterator</span><span class=p>())</span><span class=k>assert</span> <span class=n>data</span><span class=p>[</span><span class=s1>'some'</span><span class=p>]</span> <span class=o>==</span> <span class=s2>\"JSON\"</span></pre><p>This is actually how the <a href=#requests rel=nofollow><code>requests</code></a> and <a href=#httpx rel=nofollow><code>httpx</code></a> extensions work, asboth libraries provide methods to iterate over the response content.</p><h3><a id=encoding-json-stream-objects rel=nofollow></a> Encoding json-stream objects</h3><p>You can re-output (encode) <em>persistent</em> json-stream <code>dict</code>-like and <code>list</code>-like object back to JSON using the built-in<code>json.dump()</code> or <code>json.dumps()</code> functions, but with a little additional work:</p><pre lang=python3><span class=kn>import</span> <span class=nn>json</span><span class=kn>import</span> <span class=nn>json_stream</span><span class=kn>from</span> <span class=nn>json_stream.dump</span> <span class=kn>import</span> <span class=n>JSONStreamEncoder</span><span class=p>,</span> <span class=n>default</span><span class=n>data</span> <span class=o>=</span> <span class=n>json_stream</span><span class=o>.</span><span class=n>load</span><span class=p>(</span><span class=n>f</span><span class=p>,</span> <span class=n>persistent</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=c1># Option 1: supply json_stream.encoding.default as the default argument</span><span class=nb>print</span><span class=p>(</span><span class=n>json</span><span class=o>.</span><span class=n>dumps</span><span class=p>(</span><span class=n>data</span><span class=p>,</span> <span class=n>default</span><span class=o>=</span><span class=n>default</span><span class=p>))</span><span class=c1># Option 2: supply json_stream.encoding.JSONStreamEncoder as the cls argument</span><span class=c1># This allows you to create your own subclass to further customise encoding</span><span class=nb>print</span><span class=p>(</span><span class=n>json</span><span class=o>.</span><span class=n>dumps</span><span class=p>(</span><span class=n>data</span><span class=p>,</span> <span class=bp>cls</span><span class=o>=</span><span class=n>JSONStreamEncoder</span><span class=p>))</span></pre><p>If you are using a library that internally takes data you pass it and encodesit using <code>json.dump()</code>. You can also use JSONStreamEncoder() as a context manager.</p><p>It works by monkey-patching the built-in <code>JSONEncoder.default</code> method during thescope of the <code>with</code> statement.</p><pre lang=python3><span class=c1># library code</span><span class=k>def</span> <span class=nf>some_library_function_out_of_your_control</span><span class=p>(</span><span class=n>arg</span><span class=p>):</span>    <span class=n>json</span><span class=o>.</span><span class=n>dumps</span><span class=p>(</span><span class=n>arg</span><span class=p>)</span><span class=c1># your code</span><span class=k>with</span> <span class=n>JSONStreamEncoder</span><span class=p>():</span>    <span class=n>some_library_function_out_of_your_control</span><span class=p>(</span><span class=n>data</span><span class=p>)</span></pre><h3>Converting to standard Python types</h3><p>To convert a json-stream <code>dict</code>-like or <code>list</code>-like object and all itsdescendants to a standard <code>list</code> and <code>dict</code>, you can use the<code>json_stream.to_standard_types</code> utility:</p><pre lang=python3><span class=c1># JSON: {\"round\": 1, \"results\": [1, 2, 3]}</span><span class=n>data</span> <span class=o>=</span> <span class=n>json_stream</span><span class=o>.</span><span class=n>load</span><span class=p>(</span><span class=n>f</span><span class=p>)</span><span class=n>results</span> <span class=o>=</span> <span class=n>data</span><span class=p>[</span><span class=s2>\"results\"</span><span class=p>]</span><span class=nb>print</span><span class=p>(</span><span class=n>results</span><span class=p>)</span>  <span class=c1># prints &lt;TransientStreamingJSONList: TRANSIENT, STREAMING&gt;</span><span class=n>converted</span> <span class=o>=</span> <span class=n>json_stream</span><span class=o>.</span><span class=n>to_standard_types</span><span class=p>(</span><span class=n>results</span><span class=p>)</span><span class=nb>print</span><span class=p>(</span><span class=n>converted</span><span class=p>)</span>  <span class=c1># prints [1, 2, 3]</span></pre><h4>Thread safety (experimental)</h4><p>There is also a thread-safe version of the <code>json.dump</code> context manager:</p><pre lang=python3><span class=kn>from</span> <span class=nn>json_stream.dump.threading</span> <span class=kn>import</span> <span class=n>ThreadSafeJSONStreamEncoder</span><span class=c1># your code</span><span class=k>with</span> <span class=n>ThreadSafeJSONStreamEncoder</span><span class=p>():</span>   <span class=n>some_library_function_out_of_your_control</span><span class=p>(</span><span class=n>data</span><span class=p>)</span></pre><p>The thread-safe implementation will ensure that concurrent uses of thecontext manager will only apply the patch for the first thread enteringthe patched section(s) and will only remove the patch when the lastthread exits the patched sections(s)</p><p>Additionally, if the patch is somehow called by a thread that is <em>not</em>currently in a patched section (i.e. some other thread calling<code>json.dump</code>) then that thread will block until the patch has beenremoved. While such an un-patched thread is active, any thread attemptingto apply the patch is blocked.</p><h3><a id=rust-tokenizer rel=nofollow></a> Rust tokenizer speedups</h3><p>By default <code>json-stream</code> uses the<a href=\"https://pypi.org/project/json-stream-rs-tokenizer/\" rel=nofollow><code>json-stream-rs-tokenizer</code></a>native extension.</p><p>This is a 3rd party Rust-based tokenizer implementations that providessignificant parsing speedup compared to pure python implementation.</p><p><code>json-stream</code> will fallback to its pure python tokenizer implementationif <code>json-stream-rs-tokenizer</code> is not available.</p><h3>Custom tokenizer</h3><p>You can supply an alternative JSON tokenizer implementation. Simply passa tokenizer to the <code>load()</code> or <code>visit()</code> methods.</p><pre lang=python3><span class=n>json_stream</span><span class=o>.</span><span class=n>load</span><span class=p>(</span><span class=n>f</span><span class=p>,</span> <span class=n>tokenizer</span><span class=o>=</span><span class=n>some_tokenizer</span><span class=p>)</span></pre><p>The requests methods also accept a customer tokenizer parameter.</p><h1>Writing</h1><p>The standard library's <code>json.dump()</code> function can only accept standardpython types such as <code>dict</code>, <code>list</code>, <code>str</code>.</p><p><code>json-stream</code> allows you to write streaming JSON output based on pythongenerators instead.</p><p>For actually encoding and writing to the stream, <code>json-stream</code>still uses the standard library's <code>json.dump()</code> function, but provideswrappers that adapt python generators into <code>dict</code>/<code>list</code> subclassesthat <code>json.dump()</code> can use.</p><p>The means that you do not have to generate all of your data upfrontbefore calling <code>json.dump()</code>.</p><h2>Usage</h2><p>To use <code>json-stream</code> to generate JSON data iteratively, you must firstwrite python generators (or use any other iterable).</p><p>To output JSON objects, the iterable must yield key/value pairs.</p><p>To output JSON lists, the iterable must yield individual items.</p><p>The values yielded can be either be standard python types or another other<code>Streamable</code> object, allowing lists and object to be arbitrarily nested.</p><p><code>streamable_list</code>/<code>streamable_dict</code> can be used to wrap an existingiterable:</p><pre lang=python3><span class=kn>import</span> <span class=nn>sys</span><span class=kn>import</span> <span class=nn>json</span><span class=kn>from</span> <span class=nn>json_stream</span> <span class=kn>import</span> <span class=n>streamable_list</span><span class=c1># wrap existing iterable</span><span class=n>data</span> <span class=o>=</span> <span class=n>streamable_list</span><span class=p>(</span><span class=nb>range</span><span class=p>(</span><span class=mi>10</span><span class=p>))</span><span class=c1># consume iterable with standard json.dump()</span><span class=n>json</span><span class=o>.</span><span class=n>dump</span><span class=p>(</span><span class=n>data</span><span class=p>,</span> <span class=n>sys</span><span class=o>.</span><span class=n>stdout</span><span class=p>)</span></pre><p>Or they can be used as decorators on generator functions:</p><pre lang=python3><span class=kn>import</span> <span class=nn>json</span><span class=kn>import</span> <span class=nn>sys</span><span class=kn>from</span> <span class=nn>json_stream</span> <span class=kn>import</span> <span class=n>streamable_dict</span><span class=c1># declare a new streamable dict generator function</span><span class=nd>@streamable_dict</span><span class=k>def</span> <span class=nf>generate_dict_of_squares</span><span class=p>(</span><span class=n>n</span><span class=p>):</span>    <span class=k>for</span> <span class=n>i</span> <span class=ow>in</span> <span class=nb>range</span><span class=p>(</span><span class=n>n</span><span class=p>):</span>        <span class=c1># this could be some memory intensive operation</span>        <span class=c1># or just a really large value of n</span>        <span class=k>yield</span> <span class=n>i</span><span class=p>,</span> <span class=n>i</span> <span class=o>**</span> <span class=mi>2</span><span class=c1># data is will already be Streamable because</span><span class=c1># of the decorator</span><span class=n>data</span> <span class=o>=</span> <span class=n>generate_dict_of_squares</span><span class=p>(</span><span class=mi>10</span><span class=p>)</span><span class=n>json</span><span class=o>.</span><span class=n>dump</span><span class=p>(</span><span class=n>data</span><span class=p>,</span> <span class=n>sys</span><span class=o>.</span><span class=n>stdout</span><span class=p>)</span></pre><h2>Example</h2><p>The following example generates a JSON object with a nested JSON list.It uses <code>time.sleep()</code> to slow down the generation and show that theoutput is indeed written as the data is created.</p><pre lang=python3><span class=kn>import</span> <span class=nn>sys</span><span class=kn>import</span> <span class=nn>json</span><span class=kn>import</span> <span class=nn>time</span><span class=kn>from</span> <span class=nn>json_stream.writer</span> <span class=kn>import</span> <span class=n>streamable_dict</span><span class=p>,</span> <span class=n>streamable_list</span><span class=c1># define a list data generator that (slowly) yields </span><span class=c1># items that will be written as a JSON list</span><span class=nd>@streamable_list</span><span class=k>def</span> <span class=nf>generate_list</span><span class=p>(</span><span class=n>n</span><span class=p>):</span>    <span class=c1># output n numbers and their squares</span>    <span class=k>for</span> <span class=n>i</span> <span class=ow>in</span> <span class=nb>range</span><span class=p>(</span><span class=n>n</span><span class=p>):</span>  <span class=c1># range is itself a generator</span>        <span class=k>yield</span> <span class=n>i</span>        <span class=n>time</span><span class=o>.</span><span class=n>sleep</span><span class=p>(</span><span class=mi>1</span><span class=p>)</span><span class=c1># define a dictionary data generator that (slowly) yields </span><span class=c1># key/value pairs that will be written as a JSON dict</span><span class=nd>@streamable_dict</span><span class=k>def</span> <span class=nf>generate_dict</span><span class=p>(</span><span class=n>n</span><span class=p>):</span>    <span class=c1># output n numbers and their squares</span>    <span class=k>for</span> <span class=n>i</span> <span class=ow>in</span> <span class=nb>range</span><span class=p>(</span><span class=n>n</span><span class=p>):</span>  <span class=c1># range is itself a generator</span>        <span class=k>yield</span> <span class=n>i</span><span class=p>,</span> <span class=n>i</span> <span class=o>**</span> <span class=mi>2</span>        <span class=n>time</span><span class=o>.</span><span class=n>sleep</span><span class=p>(</span><span class=mi>1</span><span class=p>)</span>    <span class=c1># yield another dictionary item key, with the value</span>    <span class=c1># being a streamed nested list</span>    <span class=k>yield</span> <span class=s2>\"a list\"</span><span class=p>,</span> <span class=n>generate_list</span><span class=p>(</span><span class=n>n</span><span class=p>)</span><span class=c1># get a streamable generator</span><span class=n>data</span> <span class=o>=</span> <span class=n>generate_dict</span><span class=p>(</span><span class=mi>5</span><span class=p>)</span><span class=c1># use json.dump() to write dict generator to stdout</span><span class=n>json</span><span class=o>.</span><span class=n>dump</span><span class=p>(</span><span class=n>data</span><span class=p>,</span> <span class=n>sys</span><span class=o>.</span><span class=n>stdout</span><span class=p>,</span> <span class=n>indent</span><span class=o>=</span><span class=mi>2</span><span class=p>)</span><span class=c1># if you already have an iterable object, you can just</span><span class=c1># call streamable_* on it to make it writable</span><span class=n>data</span> <span class=o>=</span> <span class=n>streamable_list</span><span class=p>(</span><span class=nb>range</span><span class=p>(</span><span class=mi>10</span><span class=p>))</span><span class=n>json</span><span class=o>.</span><span class=n>dump</span><span class=p>(</span><span class=n>data</span><span class=p>,</span> <span class=n>sys</span><span class=o>.</span><span class=n>stdout</span><span class=p>)</span></pre><p>Output:</p><pre lang=json><span class=p>{</span><span class=w>  </span><span class=nt>\"0\"</span><span class=p>:</span><span class=w> </span><span class=mi>0</span><span class=p>,</span><span class=w>  </span><span class=nt>\"1\"</span><span class=p>:</span><span class=w> </span><span class=mi>1</span><span class=p>,</span><span class=w>  </span><span class=nt>\"2\"</span><span class=p>:</span><span class=w> </span><span class=mi>4</span><span class=p>,</span><span class=w>  </span><span class=nt>\"3\"</span><span class=p>:</span><span class=w> </span><span class=mi>9</span><span class=p>,</span><span class=w>  </span><span class=nt>\"4\"</span><span class=p>:</span><span class=w> </span><span class=mi>16</span><span class=p>,</span><span class=w>  </span><span class=nt>\"a list\"</span><span class=p>:</span><span class=w> </span><span class=p>[</span><span class=w>    </span><span class=mi>0</span><span class=p>,</span><span class=w>    </span><span class=mi>1</span><span class=p>,</span><span class=w>    </span><span class=mi>2</span><span class=p>,</span><span class=w>    </span><span class=mi>3</span><span class=p>,</span><span class=w>    </span><span class=mi>4</span><span class=w>  </span><span class=p>]</span><span class=p>}</span></pre><h1><a id=standard-json-problems rel=nofollow></a> What are the problems with the standard <code>json</code> package?</h1><h2>Reading with <code>json.load()</code></h2><p>The problem with the <code>json.load()</code> stem from the fact that it must readthe whole JSON document into memory before parsing it.</p><h3>Memory usage</h3><p><code>json.load()</code> first reads the whole document into memory as a string. Itthen starts parsing that string and converting the whole document into pythontypes again stored in memory. For a very large document, this could be morememory than you have available to your system.</p><p><code>json_stream.load()</code> does not read the whole document into memory, it onlybuffers enough from the stream to produce the next item of data.</p><p>Additionally, in the default transient mode (see below) <code>json-stream</code> doesn't storeup all of the parsed data in memory.</p><h3>Latency</h3><p><code>json.load()</code> produces all the data after parsing the whole document. If youonly care about the first 10 items in a list of 2 million items, then youhave wait until all 2 million items have been parsed first.</p><p><code>json_stream.load()</code> produces data as soon as it is available in the stream.</p><h2><a id=writing rel=nofollow></a> Writing</h2><h3>Memory usage</h3><p>While <code>json.dump()</code> does iteratively write JSON data to the givenfile-like object, you must first produce the entire document to bewritten as standard python types (<code>dict</code>, <code>list</code>, etc). For a verylarge document, this could be more memory than you have availableto your system.</p><p><code>json-stream</code> allows you iteratively generate your data one item ata time, and thus consumes only the memory required to generate thatone item.</p><h3>Latency</h3><p><code>json.dump()</code> can only start writing to the output file once all thedata has been generated up front at standard python types.</p><p>The iterative generation of JSON items provided by <code>json-stream</code>allows the data to be written as it is produced.</p><h1>Future improvements</h1><ul><li>Allow long strings in the JSON to be read as streams themselves</li><li>Allow transient mode on seekable streams to seek to data earlier inthe stream instead of raising a <code>TransientAccessException</code></li><li>A more efficient tokenizer?</li></ul><h1>Alternatives</h1><h2>NAYA</h2><p><a href=\"https://github.com/danielyule/naya\" rel=nofollow>NAYA</a> is a pure python JSON parser forparsing a simple JSON list as a stream.</p><h3>Why not NAYA?</h3><ul><li>It can only stream JSON containing a top-level list</li><li>It does not provide a pythonic <code>dict</code>/<code>list</code>-like interface</li></ul><h2>Yajl-Py</h2><p><a href=\"https://pykler.github.io/yajl-py/\" rel=nofollow>Yajl-Py</a> is a wrapper around the C YAJL JSON library that can be used togenerate SAX style events while parsing JSON.</p><h3>Why not Yajl-Py?</h3><ul><li>No pure python implementation</li><li>It does not provide a pythonic <code>dict</code>/<code>list</code>-like interface</li></ul><h2>jsonslicer</h2><p><a href=\"https://github.com/AMDmi3/jsonslicer\" rel=nofollow>jsonslicer</a> is another wrapper around the YAJL C library with apath lookup based interface.</p><h3>Why not jsonslicer?</h3><ul><li>No pure python implementation</li><li>It does not provide a pythonic <code>dict</code>/<code>list</code>-like interface</li><li>Must know all data paths lookup in advance (or make multiple passes)</li></ul><h1>Contributing</h1><p>See the project <a href=\"https://github.com/daggaz/json-stream/blob/master/CONTRIBUTING.md\" rel=nofollow>contribution guide</a>.</p><h1>Donations</h1><p><a href=\"https://paypal.me/JCockburn307?country.x=GB&amp;locale.x=en_GB\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/19353760395e25484ecc4eeeb7e04b1e21dce535/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f7765627374617469632f6d6b74672f4c6f676f2f70702d6c6f676f2d31303070782e706e67\" alt=PayPal></a></p><p>OR</p><p><a href=\"https://www.buymeacoffee.com/daggaz\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/320bf793359f29544369a3f1ecd7ec6a07a5dcd6/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67\" alt='\"Buy Me A Coffee\"'></a></p><h1>Acknowledgements</h1><p>The JSON tokenizer used in the project was taken from the<a href=\"https://github.com/danielyule/naya\" rel=nofollow>NAYA</a> project.</p>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://www.buymeacoffee.com/daggaz\" rel=\"nofollow\">        <i class=\"fas fa-donate\" aria-hidden=\"true\"></i>Funding      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/daggaz/json-stream\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/daggaz/json-stream\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>Repository      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/daggaz/json-stream/issues\" rel=\"nofollow\">        <i class=\"fas fa-bug\" aria-hidden=\"true\"></i>Tracker      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/json-stream\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (Copyright (c) 2020 Jamie Cockburn  Permission is hereby granted, free of charge, to any person obtai...)</p>    <p><strong>Author:</strong> <a href=\"mailto:jamie_cockburn@hotmail.co.uk\">Jamie Cockburn</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      json,    </span>    <span class=\"package-keyword\">      stream,    </span>    <span class=\"package-keyword\">      decoder,    </span>    <span class=\"package-keyword\">      encoder,    </span>    <span class=\"package-keyword\">      parsing    </span>  </p>  <p>    <strong>Requires:</strong> Python &lt;4, &gt;=3.5  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/daggaz/\" aria-label=\"daggaz\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/fc21dba5664c0fd6bc310a232dfa2ca2e4767331/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f30643137303437623033316635653063656564343033396334656536313436303f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for daggaz from gravatar.com\" title=\"Avatar for daggaz from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            daggaz          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3+%3A%3A+Only\">            Python :: 3 :: Only          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries\">            Software Development :: Libraries          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/json-stream/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/2.3.2/\">                <p class=\"release__version\">                  2.3.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-06-30T09:43:14+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 30, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/2.3.1/\">                <p class=\"release__version\">                  2.3.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-06-14T22:50:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 14, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/2.3.0/\">                <p class=\"release__version\">                  2.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-03-29T21:42:20+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 29, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/2.2.1/\">                <p class=\"release__version\">                  2.2.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-03-17T22:26:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 17, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/2.2.0/\">                <p class=\"release__version\">                  2.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-02-21T10:50:45+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 21, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/2.1.1/\">                <p class=\"release__version\">                  2.1.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-11-24T18:38:02+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 24, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/2.1.0/\">                <p class=\"release__version\">                  2.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-11-04T21:08:18+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 4, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/2.0.3/\">                <p class=\"release__version\">                  2.0.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-26T13:14:57+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 26, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/2.0.2/\">                <p class=\"release__version\">                  2.0.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-13T12:04:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 13, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/2.0.1/\">                <p class=\"release__version\">                  2.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-13T10:47:54+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 13, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/2.0/\">                <p class=\"release__version\">                  2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-09T16:46:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 9, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/1.5.2/\">                <p class=\"release__version\">                  1.5.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-09T16:45:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 9, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/1.5.1/\">                <p class=\"release__version\">                  1.5.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-07T19:33:31+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 7, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/1.5.0/\">                <p class=\"release__version\">                  1.5.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-07T15:58:14+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 7, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/1.4.3/\">                <p class=\"release__version\">                  1.4.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-09-22T17:16:10+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 22, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/1.4.2/\">                <p class=\"release__version\">                  1.4.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-09-15T15:15:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 15, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/1.4.1/\">                <p class=\"release__version\">                  1.4.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-09-14T13:42:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 14, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/1.4.0/\">                <p class=\"release__version\">                  1.4.0                  <span class=\"badge badge--danger\">yanked                  </span>                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-08-06T08:31:33+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 6, 2022</time>                </p>                  <div class=\"callout-block callout-block--danger release__yanked-reason\">                    <p>Reason this release was yanked:</p>                    <p>missing the actual features</p>                  </div>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/1.3.0/\">                <p class=\"release__version\">                  1.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-06T15:11:52+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 6, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/1.2.0/\">                <p class=\"release__version\">                  1.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-06T12:10:48+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 6, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/1.1.0/\">                <p class=\"release__version\">                  1.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-07-06T13:59:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 6, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/1.0.2/\">                <p class=\"release__version\">                  1.0.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-07-05T13:50:13+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 5, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/1.0.1/\">                <p class=\"release__version\">                  1.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-07-01T11:35:31+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 1, 2021</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-stream/1.0.0/\">                <p class=\"release__version\">                  1.0.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-11-09T18:06:13+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 9, 2020</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/6a/0c/8d654a510a43e4a5ec8a8ac523a1d225daa81afaccd69e974577c9cfb18b/json-stream-2.3.2.tar.gz\">          json-stream-2.3.2.tar.gz        </a>        (31.5 kB        <a href=\"#copy-hash-modal-d7a34af8-800d-48a9-8021-ac5dd31b3053\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-06-30T09:43:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 30, 2023</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/da/11/861be54b293856d054a1129202d6393801190b5fd6c599c70a47d4c174b2/json_stream-2.3.2-py3-none-any.whl\">          json_stream-2.3.2-py3-none-any.whl        </a>        (30.7 kB        <a href=\"#copy-hash-modal-e55504ea-7ce3-463d-9b97-90770c86fe5c\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-06-30T09:43:14+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 30, 2023</time>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-d7a34af8-800d-48a9-8021-ac5dd31b3053\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for json-stream-2.3.2.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for json-stream-2.3.2.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">b8b450ea8e8e3c239e9e7e38d12fed934e77a353c14b297f8ee345a5ceb25b91</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">71cbb1197380c6a16591cf5dc587f394</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">6a0c8d654a510a43e4a5ec8a8ac523a1d225daa81afaccd69e974577c9cfb18b</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-e55504ea-7ce3-463d-9b97-90770c86fe5c\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for json_stream-2.3.2-py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for json_stream-2.3.2-py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">236b8e08e2761b209816452a3527355e757913d833e6802b68a034a13b8bd3ac</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">5510a35b1f352abf65eaeacc3bb4c29c</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">da11861be54b293856d054a1129202d6393801190b5fd6c599c70a47d4c174b2</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "dohq-artifactory",
  "url": "https://devopshq.github.io/artifactory/",
  "html": "<!DOCTYPE html><html lang=\"en-US\">  <head>    <meta charset=\"UTF-8\"><!-- Begin Jekyll SEO tag v2.8.0 --><title>Python interface library for JFrog Artifactory | artifactory</title><meta name=\"generator\" content=\"Jekyll v3.9.5\" /><meta property=\"og:title\" content=\"Python interface library for JFrog Artifactory\" /><meta property=\"og:locale\" content=\"en_US\" /><meta name=\"description\" content=\"dohq-artifactory: a Python client for Artifactory\" /><meta property=\"og:description\" content=\"dohq-artifactory: a Python client for Artifactory\" /><link rel=\"canonical\" href=\"https://devopshq.github.io/artifactory/\" /><meta property=\"og:url\" content=\"https://devopshq.github.io/artifactory/\" /><meta property=\"og:site_name\" content=\"artifactory\" /><meta property=\"og:type\" content=\"website\" /><meta name=\"twitter:card\" content=\"summary\" /><meta property=\"twitter:title\" content=\"Python interface library for JFrog Artifactory\" /><script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"WebSite\",\"description\":\"dohq-artifactory: a Python client for Artifactory\",\"headline\":\"Python interface library for JFrog Artifactory\",\"name\":\"artifactory\",\"url\":\"https://devopshq.github.io/artifactory/\"}</script><!-- End Jekyll SEO tag -->    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">    <link rel=\"preload\" href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,700&display=swap\" as=\"style\" type=\"text/css\" crossorigin>    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"theme-color\" content=\"#157878\">    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\">    <link rel=\"stylesheet\" href=\"/artifactory/assets/css/style.css?v=b1169024750ee7a3e567d5493d2d9652d5c47918\">    <!-- start custom head snippets, customize with your own _includes/head-custom.html file --><!-- Setup Google Analytics --><!-- You can set your favicon here --><!-- link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/artifactory/favicon.ico\" --><!-- end custom head snippets -->  </head>  <body>    <a id=\"skip-to-content\" href=\"#content\">Skip to the content.</a>    <header class=\"page-header\" role=\"banner\">      <h1 class=\"project-name\">Python interface library for JFrog Artifactory</h1>      <h2 class=\"project-tagline\">dohq-artifactory: a Python client for Artifactory</h2>              <a href=\"https://github.com/devopshq/artifactory\" class=\"btn\">View on GitHub</a>                </header>    <main id=\"content\" class=\"main-content\" role=\"main\">      <h1 id=\"python-interface-library-for-jfrog-artifactory-\">Python interface library for JFrog Artifactory <img src=\"https://img.shields.io/badge/status-supported-green.svg\" alt=\"\" /></h1><p><a href=\"https://devopshq.github.io/artifactory/\"><img src=\"https://img.shields.io/readthedocs/pip.svg\" alt=\"docs\" /></a><a href=\"https://github.com/devopshq/artifactory/actions/workflows/ci.yml\"><img src=\"https://github.com/devopshq/artifactory/workflows/CI/badge.svg?branch=master\" alt=\"dohq-artifactory build Status\" /></a><a href=\"https://pypi.python.org/pypi/dohq-artifactory\"><img src=\"https://img.shields.io/pypi/v/dohq-artifactory.svg\" alt=\"dohq-artifactory on PyPI\" /></a> <a href=\"https://github.com/devopshq/artifactory/blob/master/LICENSE\"><img src=\"https://img.shields.io/pypi/l/dohq-artifactory.svg\" alt=\"dohq-artifactory license\" /></a></p><p><code class=\"language-plaintext highlighter-rouge\">dohq-artifactory</code> is a live python package for <a href=\"https://www.jfrog.com/confluence/display/JFROG/JFrog+Artifactory\">JFrog Artifactory</a>. This module is intended to serve as a logical descendant of <a href=\"https://docs.python.org/3/library/pathlib.html\">pathlib</a>, and it implements everything as closely as possible to the origin with few exceptions. Current module was forked from outdated <a href=\"https://github.com/parallels/artifactory\">parallels/artifactory</a> and supports all functionality from the original package.</p><h1 id=\"tables-of-contents\">Tables of Contents</h1><!-- toc --><ul>  <li><a href=\"#install\">Install</a></li>  <li><a href=\"#usage\">Usage</a>    <ul>      <li><a href=\"#authentication\">Authentication</a></li>      <li><a href=\"#artifactory-saas\">Artifactory SaaS</a></li>      <li><a href=\"#walking-directory-tree\">Walking Directory Tree</a></li>      <li><a href=\"#downloading-artifacts\">Downloading Artifacts</a></li>      <li><a href=\"#downloading-artifacts-in-chunks\">Downloading Artifacts in chunks</a></li>      <li><a href=\"#downloading-artifacts-folder-as-archive\">Downloading Artifacts folder as archive</a></li>      <li><a href=\"#uploading-artifacts\">Uploading Artifacts</a></li>      <li><a href=\"#copy-artifacts\">Copy Artifacts</a></li>      <li><a href=\"#move-artifacts\">Move Artifacts</a></li>      <li><a href=\"#remove-artifacts\">Remove Artifacts</a></li>      <li><a href=\"#artifact-properties\">Artifact properties</a></li>      <li><a href=\"#repository-scheduled-replication-status\">Repository Scheduled Replication Status</a></li>      <li><a href=\"#artifactory-query-language\">Artifactory Query Language</a></li>      <li><a href=\"#artifact-stat\">Artifact Stat</a>        <ul>          <li><a href=\"#filefolder-statistics\">File/Folder Statistics</a></li>          <li><a href=\"#get-download-statistics\">Get Download Statistics</a></li>        </ul>      </li>      <li><a href=\"#promote-docker-image\">Promote Docker image</a></li>      <li><a href=\"#builds\">Builds</a></li>      <li><a href=\"#exception-handling\">Exception handling</a></li>    </ul>  </li>  <li><a href=\"#admin-area\">Admin area</a>    <ul>      <li><a href=\"#user\">User</a>        <ul>          <li><a href=\"#api-keys\">API Keys</a></li>        </ul>      </li>      <li><a href=\"#group\">Group</a>        <ul>          <li><a href=\"#internal\">Internal</a></li>          <li><a href=\"#groupldap\">GroupLDAP</a></li>        </ul>      </li>      <li><a href=\"#repositorylocal\">RepositoryLocal</a></li>      <li><a href=\"#repositoryvirtual\">RepositoryVirtual</a></li>      <li><a href=\"#repositoryremote\">RepositoryRemote</a></li>      <li><a href=\"#project\">Project</a></li>      <li><a href=\"#get-repository-of-any-type\">Get repository of any type</a></li>      <li><a href=\"#iterate-over-repository-artifacts\">Iterate over repository artifacts</a></li>      <li><a href=\"#access-repository-child-item\">Access repository child item</a></li>      <li><a href=\"#search-for-certain-package-artifacts\">Search for certain package artifacts</a></li>      <li><a href=\"#permissiontarget\">PermissionTarget</a></li>      <li><a href=\"#token\">Token</a></li>      <li><a href=\"#common\">Common</a></li>    </ul>  </li>  <li><a href=\"#advanced\">Advanced</a>    <ul>      <li><a href=\"#session\">Session</a></li>      <li><a href=\"#ssl-cert-verification-options\">SSL Cert Verification Options</a></li>      <li><a href=\"#timeout-on-requests\">Timeout on requests</a></li>      <li><a href=\"#logging\">Logging</a></li>      <li><a href=\"#global-configuration-file\">Global Configuration File</a></li>    </ul>  </li>  <li><a href=\"#contribute\">Contribute</a></li>  <li><a href=\"#advertising\">Advertising</a></li></ul><!-- tocstop --><h1 id=\"install\">Install</h1><p>Upgrade/install to the newest available version:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip <span class=\"nb\">install </span>dohq-artifactory <span class=\"nt\">--upgrade</span></code></pre></div></div><p>Install latest development version (Warning! It may contains some errors!):</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip <span class=\"nb\">install </span>dohq-artifactory <span class=\"nt\">--upgrade</span> <span class=\"nt\">--pre</span></code></pre></div></div><p>Or specify version, e.g.:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip <span class=\"nb\">install </span>dohq-artifactory<span class=\"o\">==</span>0.5.dev243</code></pre></div></div><h1 id=\"usage\">Usage</h1><h2 id=\"authentication\">Authentication</h2><p><code class=\"language-plaintext highlighter-rouge\">dohq-artifactory</code> supports these ways of authentication:</p><ul>  <li>Username and password (or <a href=\"https://www.jfrog.com/confluence/display/RTF/Updating+Your+Profile#UpdatingYourProfile-APIKey\">API KEY</a>) to access restricted resources, you can pass <code class=\"language-plaintext highlighter-rouge\">auth</code> parameter to ArtifactoryPath.</li>  <li><a href=\"https://www.jfrog.com/confluence/display/RTF/Updating+Your+Profile#UpdatingYourProfile-APIKey\">API KEY</a> can pass with <code class=\"language-plaintext highlighter-rouge\">apikey</code> parameter.</li>  <li><a href=\"https://www.jfrog.com/confluence/display/JFROG/Access+Tokens#AccessTokens-UsingTokens\">Access Token</a> can pass with <code class=\"language-plaintext highlighter-rouge\">token</code> parameter.</li></ul><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"c1\"># API_KEY</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/myrepo/restricted-path\"</span><span class=\"p\">,</span> <span class=\"n\">apikey</span><span class=\"o\">=</span><span class=\"s\">\"MY_API_KEY\"</span><span class=\"p\">)</span><span class=\"c1\"># Access Token</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/myrepo/restricted-path\"</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s\">\"MY_ACCESS_TOKEN\"</span><span class=\"p\">)</span><span class=\"c1\"># User and password OR API_KEY</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/myrepo/restricted-path\"</span><span class=\"p\">,</span>    <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s\">\"USERNAME\"</span><span class=\"p\">,</span> <span class=\"s\">\"PASSWORD or API_KEY\"</span><span class=\"p\">),</span><span class=\"p\">)</span><span class=\"c1\"># Other authentication types</span><span class=\"kn\">from</span> <span class=\"nn\">requests.auth</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPDigestAuth</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/myrepo/restricted-path\"</span><span class=\"p\">,</span>    <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s\">\"USERNAME\"</span><span class=\"p\">,</span> <span class=\"s\">\"PASSWORD\"</span><span class=\"p\">),</span>    <span class=\"n\">auth_type</span><span class=\"o\">=</span><span class=\"n\">HTTPDigestAuth</span><span class=\"p\">,</span><span class=\"p\">)</span><span class=\"kn\">from</span> <span class=\"nn\">requests.auth</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPBasicAuth</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/myrepo/restricted-path\"</span><span class=\"p\">,</span>    <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s\">\"USERNAME\"</span><span class=\"p\">,</span> <span class=\"s\">\"PASSWORD\"</span><span class=\"p\">),</span>    <span class=\"n\">auth_type</span><span class=\"o\">=</span><span class=\"n\">HTTPBasicAuth</span><span class=\"p\">,</span><span class=\"p\">)</span><span class=\"c1\"># Load username, password from global config if exist:</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/myrepo/restricted-path\"</span><span class=\"p\">,</span>    <span class=\"n\">auth_type</span><span class=\"o\">=</span><span class=\"n\">HTTPBasicAuth</span><span class=\"p\">,</span><span class=\"p\">)</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">touch</span><span class=\"p\">()</span></code></pre></div></div><h2 id=\"artifactory-saas\">Artifactory SaaS</h2><p>If you use Artifactory SaaS solution - use <code class=\"language-plaintext highlighter-rouge\">ArtifactorySaaSPath</code> class.<br />SaaS supports all methods and authentication types as <code class=\"language-plaintext highlighter-rouge\">ArtifactoryPath</code>. We have to use other class, because as a SaaS service, the URL is different from an on-prem installation and the REST API endpoints.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactorySaaSPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactorySaaSPath</span><span class=\"p\">(</span>    <span class=\"s\">\"https://myartifactorysaas.jfrog.io/myartifactorysaas/folder/path.xml\"</span><span class=\"p\">,</span>    <span class=\"n\">apikey</span><span class=\"o\">=</span><span class=\"s\">\"MY_API_KEY\"</span><span class=\"p\">,</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"walking-directory-tree\">Walking Directory Tree</h2><p>Get directory listing:</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span><span class=\"s\">\"http://repo.jfrog.org/artifactory/gradle-ivy-local\"</span><span class=\"p\">)</span><span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">path</span><span class=\"p\">:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span></code></pre></div></div><p>Find all <code class=\"language-plaintext highlighter-rouge\">.gz</code> files in current dir, recursively:</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span><span class=\"s\">\"http://repo.jfrog.org/artifactory/distributions/org/\"</span><span class=\"p\">)</span><span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"s\">\"**/*.gz\"</span><span class=\"p\">):</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"downloading-artifacts\">Downloading Artifacts</h2><p>Download artifact to a local filesystem:</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://repo.jfrog.org/artifactory/distributions/org/apache/tomcat/apache-tomcat-7.0.11.tar.gz\"</span><span class=\"p\">)</span><span class=\"k\">with</span> <span class=\"n\">path</span><span class=\"p\">.</span><span class=\"nb\">open</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">fd</span><span class=\"p\">,</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">\"tomcat.tar.gz\"</span><span class=\"p\">,</span> <span class=\"s\">\"wb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">out</span><span class=\"p\">:</span>    <span class=\"n\">out</span><span class=\"p\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">())</span></code></pre></div></div><h2 id=\"downloading-artifacts-in-chunks\">Downloading Artifacts in chunks</h2><p>Download artifact to the local filesystem using chunks (in bytes) to prevent loading the entire response into memory at once.This can help with getting big files or resolve <a href=\"https://github.com/devopshq/artifactory/issues/135\">known issue</a></p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://repo.jfrog.org/artifactory/distributions/org/apache/tomcat/apache-tomcat-7.0.11.tar.gz\"</span><span class=\"p\">)</span><span class=\"c1\"># download by providing path to out file and use default chunk 1024</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">writeto</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">=</span><span class=\"s\">\"tomcat.tar.gz\"</span><span class=\"p\">)</span><span class=\"c1\"># download and suppress progress messages</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">writeto</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">=</span><span class=\"s\">\"tomcat2.tar.gz\"</span><span class=\"p\">,</span> <span class=\"n\">progress_func</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">)</span><span class=\"c1\"># download by providing out as file object and specify chunk size</span><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">\"tomcat3.tar.gz\"</span><span class=\"p\">,</span> <span class=\"s\">\"wb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">out</span><span class=\"p\">:</span>    <span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">writeto</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">chunk_size</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">)</span><span class=\"c1\"># download and use custom print function</span><span class=\"k\">def</span> <span class=\"nf\">custom_print</span><span class=\"p\">(</span><span class=\"n\">bytes_now</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"p\">,</span> <span class=\"n\">custom</span><span class=\"p\">):</span>    <span class=\"s\">\"\"\"    Custom function that accepts first two arguments as [int, int] in its signature    \"\"\"</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">bytes_now</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"p\">,</span> <span class=\"n\">custom</span><span class=\"p\">)</span><span class=\"c1\"># since writeto requires [int, int] in its signature, all custom arguments you have to provide via lambda function or# similar methods</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">writeto</span><span class=\"p\">(</span>    <span class=\"n\">out</span><span class=\"o\">=</span><span class=\"s\">\"tomcat5.tar.gz\"</span><span class=\"p\">,</span>    <span class=\"n\">progress_func</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">custom_print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">custom</span><span class=\"o\">=</span><span class=\"s\">\"test\"</span><span class=\"p\">),</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"downloading-artifacts-folder-as-archive\">Downloading Artifacts folder as archive</h2><p>Download artifact folder to a local filesystem as archive (supports zip/tar/tar.gz/tgz)Allows to specify archive type and request checksum for the folder</p><p>Note: Archiving should be enabled on the server!</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my_url:8080/artifactory/my_repo/winx64/aas\"</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s\">\"user\"</span><span class=\"p\">,</span> <span class=\"s\">\"password\"</span><span class=\"p\">)</span><span class=\"p\">)</span><span class=\"k\">with</span> <span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"n\">archive_type</span><span class=\"o\">=</span><span class=\"s\">\"zip\"</span><span class=\"p\">,</span> <span class=\"n\">check_sum</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">).</span><span class=\"nb\">open</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">archive</span><span class=\"p\">:</span>    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s\">\"D:\\target.zip\"</span><span class=\"p\">,</span> <span class=\"s\">\"wb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">out</span><span class=\"p\">:</span>        <span class=\"n\">out</span><span class=\"p\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">archive</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">())</span><span class=\"c1\"># download folder archive in chunks</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">archive</span><span class=\"p\">().</span><span class=\"n\">writeto</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">=</span><span class=\"s\">\"my.zip\"</span><span class=\"p\">,</span> <span class=\"n\">chunk_size</span><span class=\"o\">=</span><span class=\"mi\">100</span> <span class=\"o\">*</span> <span class=\"mi\">1024</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"uploading-artifacts\">Uploading Artifacts</h2><p>Deploy a regular file <code class=\"language-plaintext highlighter-rouge\">myapp-1.0.tar.gz</code>. This method by default will calculate all available checksums and attachthem to the file</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\"</span><span class=\"p\">)</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">mkdir</span><span class=\"p\">()</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">deploy_file</span><span class=\"p\">(</span><span class=\"s\">\"./myapp-1.0.tar.gz\"</span><span class=\"p\">)</span></code></pre></div></div><p>Deploy artifacts from archive: this will automatically extract the contents of the archive on the server preserving the archive\u2019s paths</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\"</span><span class=\"p\">)</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">mkdir</span><span class=\"p\">()</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">deploy_file</span><span class=\"p\">(</span><span class=\"s\">\"./myapp-1.0.tar.gz\"</span><span class=\"p\">,</span> <span class=\"n\">explode_archive</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span></code></pre></div></div><p>Atomically deploy artifacts from archive: this will automatically extract the contents of the archive on the server preserving the archive\u2019s paths. This is primarily useful when you want Artifactory to see all the artifacts at once, e.g., for indexing purposes.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\"</span><span class=\"p\">)</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">mkdir</span><span class=\"p\">()</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">deploy_file</span><span class=\"p\">(</span>    <span class=\"s\">\"./myapp-1.0.tar.gz\"</span><span class=\"p\">,</span> <span class=\"n\">explode_archive</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">explode_archive_atomic</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span></code></pre></div></div><p><a href=\"https://www.jfrog.com/confluence/display/RTF6X/Artifactory+REST+API#ArtifactoryRESTAPI-DeployArtifactbyChecksum\">Deploy artifact by checksum</a>: deploy an artifact to the specified destination by checking if the artifactcontent already exists in Artifactory. If Artifactory already contains a userreadable artifact with the same checksum the artifact content is copied over tothe new location without requiring content transfer.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span><span class=\"s\">\"http://my-artifactory/artifactory/my_repo/foo\"</span><span class=\"p\">)</span><span class=\"n\">sha1</span> <span class=\"o\">=</span> <span class=\"s\">\"1be5d2dbe52ddee96ef2d17d354e2be0a155a951\"</span><span class=\"n\">sha256</span> <span class=\"o\">=</span> <span class=\"s\">\"00bbf80ccca376893d60183e1a714e707fd929aea3e458f9ffda60f7ae75cc51\"</span><span class=\"c1\"># If you don't know sha value, you can calculate it via# sha1 = artifactory.sha1sum(\"local_path_of_your_file\")# or# sha256 = artifactory.sha256sum(\"local_path_of_your_file\")</span><span class=\"c1\"># Each of the following 4 methods works fine if the artifact content already# exists in Artifactory.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">deploy_by_checksum</span><span class=\"p\">(</span><span class=\"n\">sha1</span><span class=\"o\">=</span><span class=\"n\">sha1</span><span class=\"p\">)</span><span class=\"c1\"># deploy by sha1 via checksum parameter</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">deploy_by_checksum</span><span class=\"p\">(</span><span class=\"n\">checksum</span><span class=\"o\">=</span><span class=\"n\">sha1</span><span class=\"p\">)</span><span class=\"c1\"># deploy by sha256 via sha256 parameter</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">deploy_by_checksum</span><span class=\"p\">(</span><span class=\"n\">sha256</span><span class=\"o\">=</span><span class=\"n\">sha256</span><span class=\"p\">)</span><span class=\"c1\"># deploy by sha256 via checksum parameter</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">deploy_by_checksum</span><span class=\"p\">(</span><span class=\"n\">checksum</span><span class=\"o\">=</span><span class=\"n\">sha256</span><span class=\"p\">)</span></code></pre></div></div><p>Deploy a debian package <code class=\"language-plaintext highlighter-rouge\">myapp-1.0.deb</code> to an <code class=\"language-plaintext highlighter-rouge\">existent</code> folder</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span><span class=\"s\">\"http://my-artifactory/artifactory/ubuntu-local/pool/\"</span><span class=\"p\">)</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">deploy_deb</span><span class=\"p\">(</span>    <span class=\"s\">\"./myapp-1.0.deb\"</span><span class=\"p\">,</span> <span class=\"n\">distribution</span><span class=\"o\">=</span><span class=\"s\">\"trusty\"</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"o\">=</span><span class=\"s\">\"main\"</span><span class=\"p\">,</span> <span class=\"n\">architecture</span><span class=\"o\">=</span><span class=\"s\">\"amd64\"</span><span class=\"p\">)</span></code></pre></div></div><p>Deploy a debian package <code class=\"language-plaintext highlighter-rouge\">myapp-1.0.deb</code> to a <code class=\"language-plaintext highlighter-rouge\">non-existent</code> folder</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/ubuntu-local/pool/myapp-1.0.deb\"</span><span class=\"p\">)</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">deploy_deb</span><span class=\"p\">(</span>    <span class=\"s\">\"./myapp-1.0.deb\"</span><span class=\"p\">,</span> <span class=\"n\">distribution</span><span class=\"o\">=</span><span class=\"s\">\"trusty\"</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"o\">=</span><span class=\"s\">\"main\"</span><span class=\"p\">,</span> <span class=\"n\">architecture</span><span class=\"o\">=</span><span class=\"s\">\"amd64\"</span><span class=\"p\">)</span><span class=\"c1\"># if you want to set multiple values you can use list to set them</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">deploy_deb</span><span class=\"p\">(</span>    <span class=\"s\">\"./myapp-1.0.deb\"</span><span class=\"p\">,</span>    <span class=\"n\">distribution</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"dist1\"</span><span class=\"p\">,</span> <span class=\"s\">\"dist2\"</span><span class=\"p\">],</span>    <span class=\"n\">component</span><span class=\"o\">=</span><span class=\"s\">\"main\"</span><span class=\"p\">,</span>    <span class=\"n\">architecture</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"amd64\"</span><span class=\"p\">,</span> <span class=\"s\">\"i386\"</span><span class=\"p\">],</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"copy-artifacts\">Copy Artifacts</h2><p>Copy artifact from this path to destination.If files are on the same instance of artifactory, lightweight (local)copying will be attempted.</p><p>The suppress_layouts parameter, when set to <code class=\"language-plaintext highlighter-rouge\">True</code>, will allow artifactsfrom one path to be copied directly into another path without enforcingrepository layouts. The default behaviour is to copy to the repositoryroot, but remap the [org], [module], [baseVer], etc. structure to thetarget repository.</p><p>For example, we have a builds repository using the default maven2repository where we publish our builds, and we also have a publishedrepository where a directory for production and a directory forstaging environments should hold the current promoted builds. How dowe copy the contents of a build over to the production folder?</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span><span class=\"s\">\"http://example.com/artifactory/builds/product/product/1.0.0/\"</span><span class=\"p\">)</span><span class=\"n\">dest</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span><span class=\"s\">\"http://example.com/artifactory/published/production/\"</span><span class=\"p\">)</span><span class=\"s\">\"\"\"Using copy with the default, suppress_layouts=False, the artifacts insidebuilds/product/product/1.0.0/ will not end up in the published/productionpath as we intended, but rather the entire structure product/product/1.0.0is placed in the destination repo.\"\"\"</span><span class=\"n\">source</span><span class=\"p\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">dest</span><span class=\"p\">)</span><span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">dest</span><span class=\"p\">:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span><span class=\"c1\"># http://example.com/artifactory/published/production/foo-0.0.1.gz# http://example.com/artifactory/published/production/foo-0.0.1.pom</span><span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://example.com/artifactory/published/product/product/1.0.0.tar\"</span><span class=\"p\">):</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span><span class=\"c1\"># http://example.com/artifactory/published/product/product/1.0.0/product-1.0.0.tar.gz# http://example.com/artifactory/published/product/product/1.0.0/product-1.0.0.tar.pom</span><span class=\"s\">\"\"\"Using copy with suppress_layouts=True, the contents inside our source are copieddirectly inside our dest as we intended.\"\"\"</span><span class=\"n\">source</span><span class=\"p\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">dest</span><span class=\"p\">,</span> <span class=\"n\">suppress_layouts</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span><span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">dest</span><span class=\"p\">:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span><span class=\"s\">\"\"\"http://example.com/artifactory/published/production/foo-0.0.1.gzhttp://example.com/artifactory/published/production/foo-0.0.1.pomhttp://example.com/artifactory/published/production/product-1.0.0.tar.gzhttp://example.com/artifactory/published/production/product-1.0.0.tar.pom\"\"\"</span><span class=\"c1\"># you can use dry run just to check if command will succeed without real change, adds debug message</span><span class=\"n\">source</span><span class=\"p\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">dest</span><span class=\"p\">,</span> <span class=\"n\">dry_run</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"move-artifacts\">Move Artifacts</h2><p>Move artifact from this path to destination.</p><p>The suppress_layouts parameter, when set to <code class=\"language-plaintext highlighter-rouge\">True</code>, will allow artifactsfrom one path to be copied directly into another path without enforcingrepository layouts. The default behaviour is to copy to the repositoryroot, but remap the [org], [module], [baseVer], etc. structure to thetarget repository.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span><span class=\"s\">\"http://example.com/artifactory/builds/product/product/1.0.0/\"</span><span class=\"p\">)</span><span class=\"n\">dest</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span><span class=\"s\">\"http://example.com/artifactory/published/production/\"</span><span class=\"p\">)</span><span class=\"n\">source</span><span class=\"p\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">dest</span><span class=\"p\">)</span><span class=\"c1\"># you can use dry run just to check if command will succeed without real change, adds debug message</span><span class=\"n\">source</span><span class=\"p\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">dest</span><span class=\"p\">,</span> <span class=\"n\">dry_run</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"remove-artifacts\">Remove Artifacts</h2><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://repo.jfrog.org/artifactory/distributions/org/apache/tomcat/apache-tomcat-7.0.11.tar.gz\"</span><span class=\"p\">)</span><span class=\"k\">if</span> <span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>    <span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">unlink</span><span class=\"p\">()</span></code></pre></div></div><h2 id=\"artifact-properties\">Artifact properties</h2><p>You can get and set (or remove) properties from artifact.Following example shows how to manage properties and property sets</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://repo.jfrog.org/artifactory/distributions/org/apache/tomcat/apache-tomcat-7.0.11.tar.gz\"</span><span class=\"p\">)</span><span class=\"c1\"># Get properties</span><span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Update a property or add if does not exist</span><span class=\"n\">properties</span><span class=\"p\">[</span><span class=\"s\">\"qa\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">\"tested\"</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"n\">properties</span><span class=\"c1\"># add/replace set of properties</span><span class=\"n\">new_props</span> <span class=\"o\">=</span> <span class=\"p\">{</span>    <span class=\"s\">\"test\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s\">\"test_property\"</span><span class=\"p\">],</span>    <span class=\"s\">\"time\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s\">\"2018-01-16 12:17:44.135143\"</span><span class=\"p\">],</span>    <span class=\"s\">\"addthis\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s\">\"addthis\"</span><span class=\"p\">],</span><span class=\"p\">}</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"n\">new_props</span><span class=\"c1\"># Remove properties</span><span class=\"n\">properties</span><span class=\"p\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s\">\"release\"</span><span class=\"p\">)</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"n\">properties</span></code></pre></div></div><h2 id=\"repository-scheduled-replication-status\">Repository Scheduled Replication Status</h2><p>Returns the status of scheduled  cron-based replication jobs define via the Artifactory UI on repositories.Supported by local, local-cached and remote repositories.</p><p>Notes: Requires Artifactory Pro</p><p>Security: Requires a user with \u2018read\u2019 permission (can be anonymous)</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"https://repo.jfrog.org/artifactory/repo1-cache/archetype-catalog.xml\"</span><span class=\"p\">)</span><span class=\"n\">rep_status</span> <span class=\"o\">=</span> <span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">replication_status</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"status: \"</span><span class=\"p\">,</span> <span class=\"n\">rep_status</span><span class=\"p\">[</span><span class=\"s\">\"status\"</span><span class=\"p\">])</span></code></pre></div></div><h2 id=\"artifactory-query-language\">Artifactory Query Language</h2><p>You can use <a href=\"https://www.jfrog.com/confluence/display/RTF/Artifactory+Query+Language\">Artifactory Query Language</a> in python.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">arti_path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory\"</span><span class=\"p\">)</span>  <span class=\"c1\"># path to artifactory, NO repo</span><span class=\"c1\"># dict support# Send query:# items.find({\"repo\": \"myrepo\"})</span><span class=\"n\">artifacts</span> <span class=\"o\">=</span> <span class=\"n\">arti_path</span><span class=\"p\">.</span><span class=\"n\">aql</span><span class=\"p\">(</span><span class=\"s\">\"items.find\"</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s\">\"repo\"</span><span class=\"p\">:</span> <span class=\"s\">\"myrepo\"</span><span class=\"p\">})</span><span class=\"c1\"># list support.# Send query:# items.find().include(\"name\", \"repo\")</span><span class=\"n\">artifacts</span> <span class=\"o\">=</span> <span class=\"n\">arti_path</span><span class=\"p\">.</span><span class=\"n\">aql</span><span class=\"p\">(</span><span class=\"s\">\"items.find()\"</span><span class=\"p\">,</span> <span class=\"s\">\".include\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s\">\"name\"</span><span class=\"p\">,</span> <span class=\"s\">\"repo\"</span><span class=\"p\">])</span><span class=\"c1\">#  support complex query# Example 1# items.find(#     {#         \"$and\": [#             {\"repo\": {\"$eq\": \"repo\"}},#             {\"$or\": [{\"path\": {\"$match\": \"*path1\"}}, {\"path\": {\"$match\": \"*path2\"}}]},#         ]#     }# )</span><span class=\"n\">aqlargs</span> <span class=\"o\">=</span> <span class=\"p\">[</span>    <span class=\"s\">\"items.find\"</span><span class=\"p\">,</span>    <span class=\"p\">{</span>        <span class=\"s\">\"$and\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>            <span class=\"p\">{</span><span class=\"s\">\"repo\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s\">\"$eq\"</span><span class=\"p\">:</span> <span class=\"s\">\"repo\"</span><span class=\"p\">}},</span>            <span class=\"p\">{</span>                <span class=\"s\">\"$or\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>                    <span class=\"p\">{</span><span class=\"s\">\"path\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s\">\"$match\"</span><span class=\"p\">:</span> <span class=\"s\">\"*path1\"</span><span class=\"p\">}},</span>                    <span class=\"p\">{</span><span class=\"s\">\"path\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s\">\"$match\"</span><span class=\"p\">:</span> <span class=\"s\">\"*path2\"</span><span class=\"p\">}},</span>                <span class=\"p\">]</span>            <span class=\"p\">},</span>        <span class=\"p\">]</span>    <span class=\"p\">},</span><span class=\"p\">]</span><span class=\"c1\"># artifacts_list contains raw data (list of dict)# Send query</span><span class=\"n\">artifacts_list</span> <span class=\"o\">=</span> <span class=\"n\">arti_path</span><span class=\"p\">.</span><span class=\"n\">aql</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">aqlargs</span><span class=\"p\">)</span><span class=\"c1\"># Example 2# The query will find all items in repo docker-prod that are of type file and were created after timecode. The# query will only display the fields \"repo\", \"path\" and \"name\" and will sort the result ascendingly by those fields.# items.find(#     {#         \"$or\": [{\"repo\": \"docker-prod\"}],#         \"type\": \"file\",#         \"created\": {\"$gt\": \"2019-07-10T19:20:30.45+01:00\"},#     }# ).include(\"repo\", \"path\", \"name\",).sort({\"$asc\": [\"repo\", \"path\", \"name\"]})</span><span class=\"n\">aqlargs</span> <span class=\"o\">=</span> <span class=\"p\">[</span>    <span class=\"s\">\"items.find\"</span><span class=\"p\">,</span>    <span class=\"p\">{</span>        <span class=\"s\">\"$and\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>            <span class=\"p\">{</span><span class=\"s\">\"repo\"</span><span class=\"p\">:</span> <span class=\"s\">\"docker-prod\"</span><span class=\"p\">},</span>            <span class=\"p\">{</span><span class=\"s\">\"type\"</span><span class=\"p\">:</span> <span class=\"s\">\"file\"</span><span class=\"p\">},</span>            <span class=\"p\">{</span><span class=\"s\">\"created\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s\">\"$gt\"</span><span class=\"p\">:</span> <span class=\"s\">\"2019-07-10T19:20:30.45+01:00\"</span><span class=\"p\">}},</span>        <span class=\"p\">]</span>    <span class=\"p\">},</span>    <span class=\"s\">\".include\"</span><span class=\"p\">,</span>    <span class=\"p\">[</span><span class=\"s\">\"repo\"</span><span class=\"p\">,</span> <span class=\"s\">\"path\"</span><span class=\"p\">,</span> <span class=\"s\">\"name\"</span><span class=\"p\">,</span> <span class=\"s\">\"type\"</span><span class=\"p\">],</span>    <span class=\"s\">\".sort\"</span><span class=\"p\">,</span>    <span class=\"p\">{</span><span class=\"s\">\"$asc\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s\">\"repo\"</span><span class=\"p\">,</span> <span class=\"s\">\"path\"</span><span class=\"p\">,</span> <span class=\"s\">\"name\"</span><span class=\"p\">]},</span><span class=\"p\">]</span><span class=\"n\">artifacts_list</span> <span class=\"o\">=</span> <span class=\"n\">arti_path</span><span class=\"p\">.</span><span class=\"n\">aql</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">aqlargs</span><span class=\"p\">)</span><span class=\"c1\"># You can convert to pathlib object:</span><span class=\"n\">artifact_pathlib</span> <span class=\"o\">=</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">arti_path</span><span class=\"p\">.</span><span class=\"n\">from_aql</span><span class=\"p\">,</span> <span class=\"n\">artifacts_list</span><span class=\"p\">)</span><span class=\"n\">artifact_pathlib_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">arti_path</span><span class=\"p\">.</span><span class=\"n\">from_aql</span><span class=\"p\">,</span> <span class=\"n\">artifacts_list</span><span class=\"p\">))</span></code></pre></div></div><h2 id=\"artifact-stat\">Artifact Stat</h2><h3 id=\"filefolder-statistics\">File/Folder Statistics</h3><p>You can get hash (<code class=\"language-plaintext highlighter-rouge\">md5</code>, <code class=\"language-plaintext highlighter-rouge\">sha1</code>, <code class=\"language-plaintext highlighter-rouge\">sha256</code>), creator, create date, and change date:</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://repo.jfrog.org/artifactory/distributions/org/apache/tomcat/apache-tomcat-7.0.11.tar.gz\"</span><span class=\"p\">)</span><span class=\"c1\"># Get FileStat</span><span class=\"n\">stat</span> <span class=\"o\">=</span> <span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">stat</span><span class=\"p\">()</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">ctime</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">mtime</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">created_by</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">modified_by</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">mime_type</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">sha1</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">sha256</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">md5</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">is_dir</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">children</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">repo</span><span class=\"p\">)</span></code></pre></div></div><h3 id=\"get-download-statistics\">Get Download Statistics</h3><p>Information about number of downloads, user that last downloaded and date of last download</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://repo.jfrog.org/artifactory/distributions/org/apache/tomcat/apache-tomcat-7.0.11.tar.gz\"</span><span class=\"p\">)</span><span class=\"c1\"># Get FileStat</span><span class=\"n\">download_stat</span> <span class=\"o\">=</span> <span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">download_stats</span><span class=\"p\">()</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">download_stat</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">download_stat</span><span class=\"p\">.</span><span class=\"n\">last_downloaded</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">download_stat</span><span class=\"p\">.</span><span class=\"n\">last_downloaded_by</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">download_stat</span><span class=\"p\">.</span><span class=\"n\">download_count</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">download_stat</span><span class=\"p\">.</span><span class=\"n\">remote_download_count</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">download_stat</span><span class=\"p\">.</span><span class=\"n\">remote_last_downloaded</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">download_stat</span><span class=\"p\">.</span><span class=\"n\">uri</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"promote-docker-image\">Promote Docker image</h2><p>Promotes a Docker image in a registry to another registry.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span><span class=\"s\">\"http://example.com/artifactory\"</span><span class=\"p\">)</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">promote_docker_image</span><span class=\"p\">(</span><span class=\"s\">\"docker-staging\"</span><span class=\"p\">,</span> <span class=\"s\">\"docker-prod\"</span><span class=\"p\">,</span> <span class=\"s\">\"my-application\"</span><span class=\"p\">,</span> <span class=\"s\">\"0.5.1\"</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"builds\">Builds</h2><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryBuildManager</span><span class=\"n\">arti_build</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryBuildManager</span><span class=\"p\">(</span>    <span class=\"s\">\"https://repo.jfrog.org/artifactory\"</span><span class=\"p\">,</span> <span class=\"n\">project</span><span class=\"o\">=</span><span class=\"s\">\"proj_name\"</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s\">\"admin\"</span><span class=\"p\">,</span> <span class=\"s\">\"admin\"</span><span class=\"p\">)</span><span class=\"p\">)</span><span class=\"c1\"># Get all builds</span><span class=\"n\">all_builds</span> <span class=\"o\">=</span> <span class=\"n\">arti_build</span><span class=\"p\">.</span><span class=\"n\">builds</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">all_builds</span><span class=\"p\">)</span><span class=\"c1\"># Build Runs</span><span class=\"n\">build1</span> <span class=\"o\">=</span> <span class=\"n\">all_builds</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"n\">all_runs</span> <span class=\"o\">=</span> <span class=\"n\">build1</span><span class=\"p\">.</span><span class=\"n\">runs</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">all_runs</span><span class=\"p\">)</span><span class=\"c1\"># Build Info</span><span class=\"n\">build_number1</span> <span class=\"o\">=</span> <span class=\"n\">all_runs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">build_number1</span><span class=\"p\">.</span><span class=\"n\">info</span><span class=\"p\">)</span><span class=\"c1\"># Builds Diff</span><span class=\"s\">\"\"\"  Compare a build artifacts/dependencies/environment with an older build to see what   has changed (new artifacts added, old dependencies deleted etc).  \"\"\"</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">build_number1</span><span class=\"p\">.</span><span class=\"n\">diff</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span><span class=\"c1\"># Build Promotion</span><span class=\"s\">\"\"\"  Change the status of a build, optionally moving or copying the build's artifacts and its dependencies   to a target repository and setting properties on promoted artifacts.    All artifacts from all scopes are included by default while dependencies are not. Scopes are additive (or)\"\"\"</span><span class=\"n\">build_number1</span><span class=\"p\">.</span><span class=\"n\">promote</span><span class=\"p\">(</span>    <span class=\"n\">ci_user</span><span class=\"o\">=</span><span class=\"s\">\"admin\"</span><span class=\"p\">,</span>    <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s\">\"components\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s\">\"c1\"</span><span class=\"p\">,</span> <span class=\"s\">\"c3\"</span><span class=\"p\">,</span> <span class=\"s\">\"c14\"</span><span class=\"p\">],</span> <span class=\"s\">\"release-name\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s\">\"fb3-ga\"</span><span class=\"p\">]},</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"exception-handling\">Exception handling</h2><p>Exceptions in this library are represented by <code class=\"language-plaintext highlighter-rouge\">dohq_artifactory.exception.ArtifactoryException</code> or by <code class=\"language-plaintext highlighter-rouge\">OSError</code>If exception was caused by HTTPError you can always drill down the root cause by using following example:</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"kn\">from</span> <span class=\"nn\">dohq_artifactory.exception</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryException</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my_arti:8080/artifactory/installer/\"</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s\">\"wrong_user\"</span><span class=\"p\">,</span> <span class=\"s\">\"wrong_pass\"</span><span class=\"p\">)</span><span class=\"p\">)</span><span class=\"k\">try</span><span class=\"p\">:</span>    <span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">stat</span><span class=\"p\">()</span><span class=\"k\">except</span> <span class=\"n\">ArtifactoryException</span> <span class=\"k\">as</span> <span class=\"n\">exc</span><span class=\"p\">:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">exc</span><span class=\"p\">)</span>  <span class=\"c1\"># clean artifactory error message</span>    <span class=\"c1\"># &gt;&gt;&gt; Bad credentials</span>    <span class=\"k\">print</span><span class=\"p\">(</span>        <span class=\"n\">exc</span><span class=\"p\">.</span><span class=\"n\">__cause__</span>    <span class=\"p\">)</span>  <span class=\"c1\"># HTTP error that triggered exception, you can use this object for more info</span>    <span class=\"c1\"># &gt;&gt;&gt; 401 Client Error: Unauthorized for url: http://my_arti:8080/artifactory/installer/</span></code></pre></div></div><h1 id=\"admin-area\">Admin area</h1><p>You can manipulate with user\\group\\repository and permission. First, create <code class=\"language-plaintext highlighter-rouge\">ArtifactoryPath</code> object without a repository</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">artifactory_</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"https://artifactory.example.com/artifactory\"</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s\">\"user\"</span><span class=\"p\">,</span> <span class=\"s\">\"password\"</span><span class=\"p\">)</span><span class=\"p\">)</span></code></pre></div></div><p>You can see detailed use of <code class=\"language-plaintext highlighter-rouge\">AdminObject</code> in file <code class=\"language-plaintext highlighter-rouge\">.\\tests\\integration\\test_admin.py</code></p><h2 id=\"user\">User</h2><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Find or create first way</span><span class=\"kn\">from</span> <span class=\"nn\">dohq_artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">generate_password</span><span class=\"p\">,</span> <span class=\"n\">User</span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_user</span><span class=\"p\">(</span><span class=\"s\">\"username\"</span><span class=\"p\">)</span><span class=\"k\">if</span> <span class=\"n\">user</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span><span class=\"p\">:</span>    <span class=\"c1\"># User does not exist</span>    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"p\">(</span>        <span class=\"n\">artifactory_</span><span class=\"p\">,</span> <span class=\"s\">\"username\"</span><span class=\"p\">,</span> <span class=\"s\">\"username@example.com\"</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">generate_password</span><span class=\"p\">()</span>    <span class=\"p\">)</span>    <span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"c1\"># Find or create - second way</span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"p\">(</span><span class=\"n\">artifactory_</span><span class=\"p\">,</span> <span class=\"s\">\"username\"</span><span class=\"p\">)</span><span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">():</span>  <span class=\"c1\"># Return True if user exist</span>    <span class=\"c1\"># User does not exist</span>    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"p\">(</span>        <span class=\"n\">artifactory_</span><span class=\"p\">,</span> <span class=\"s\">\"username\"</span><span class=\"p\">,</span> <span class=\"s\">\"username@example.com\"</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">generate_password</span><span class=\"p\">()</span>    <span class=\"p\">)</span>    <span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"c1\"># Add to group</span><span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">add_to_group</span><span class=\"p\">(</span><span class=\"s\">\"byname\"</span><span class=\"p\">)</span><span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_group</span><span class=\"p\">(</span><span class=\"s\">\"groupname\"</span><span class=\"p\">)</span><span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">add_to_group</span><span class=\"p\">(</span><span class=\"n\">group</span><span class=\"p\">)</span><span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>  <span class=\"c1\"># Don't forget update :)</span><span class=\"n\">enc_pwd</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">encrypted_password</span><span class=\"c1\"># You can re-read from Artifactory</span><span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span></code></pre></div></div><h3 id=\"api-keys\">API Keys</h3><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">dohq_artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">User</span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"p\">(</span><span class=\"n\">artifactory_</span><span class=\"p\">,</span> <span class=\"s\">\"username\"</span><span class=\"p\">)</span><span class=\"c1\"># create an API key</span><span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">api_key</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"c1\"># get API key</span><span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">api_key</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">()</span><span class=\"c1\"># or using str() method</span><span class=\"n\">my_key</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">api_key</span><span class=\"p\">)</span><span class=\"c1\"># or using repr method</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">api_key</span><span class=\"p\">)</span><span class=\"c1\"># regenerate API key if one already exists</span><span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">api_key</span><span class=\"p\">.</span><span class=\"n\">regenerate</span><span class=\"p\">()</span><span class=\"c1\"># remove API key for current user</span><span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">api_key</span><span class=\"p\">.</span><span class=\"n\">revoke</span><span class=\"p\">()</span><span class=\"c1\"># remove all API keys in system, only if user has admin rights</span><span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">api_key</span><span class=\"p\">.</span><span class=\"n\">revoke_for_all_users</span><span class=\"p\">()</span></code></pre></div></div><h2 id=\"group\">Group</h2><h3 id=\"internal\">Internal</h3><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Find</span><span class=\"kn\">from</span> <span class=\"nn\">dohq_artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">generate_password</span><span class=\"p\">,</span> <span class=\"n\">Group</span><span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_group</span><span class=\"p\">(</span><span class=\"s\">\"groupname\"</span><span class=\"p\">)</span><span class=\"c1\"># Create</span><span class=\"k\">if</span> <span class=\"n\">group</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span><span class=\"p\">:</span>    <span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"n\">artifactory_</span><span class=\"p\">,</span> <span class=\"s\">\"groupname\"</span><span class=\"p\">)</span>    <span class=\"n\">group</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"c1\"># You can re-read from Artifactory</span><span class=\"n\">group</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"c1\"># You can add multiple users at once to Group</span><span class=\"n\">group</span><span class=\"p\">.</span><span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"admin\"</span><span class=\"p\">,</span> <span class=\"s\">\"anonymous\"</span><span class=\"p\">]</span><span class=\"n\">group</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"c1\"># You can remove all users from a Group</span><span class=\"n\">group</span><span class=\"p\">.</span><span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"n\">group</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"n\">group</span><span class=\"p\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span></code></pre></div></div><h3 id=\"groupldap\">GroupLDAP</h3><p>https://www.jfrog.com/confluence/display/RTF/LDAP+Groups#LDAPGroups-UsingtheRESTAPI</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Full DN path in artifactory</span><span class=\"n\">dn</span> <span class=\"o\">=</span> <span class=\"s\">\"cn=R.DevOps.TestArtifactory,ou=Groups,dc=example,dc=com\"</span><span class=\"n\">attr</span> <span class=\"o\">=</span> <span class=\"s\">\"ldapGroupName=r.devops.testartifactory;groupsStrategy=STATIC;groupDn={}\"</span><span class=\"p\">.</span><span class=\"nb\">format</span><span class=\"p\">(</span>    <span class=\"n\">dn</span><span class=\"p\">)</span><span class=\"n\">test_group</span> <span class=\"o\">=</span> <span class=\"n\">GroupLDAP</span><span class=\"p\">(</span>    <span class=\"n\">artifactory</span><span class=\"o\">=</span><span class=\"n\">artifactory_</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">\"r.devops.testartifactory\"</span><span class=\"p\">,</span> <span class=\"n\">realm_attributes</span><span class=\"o\">=</span><span class=\"n\">attr</span><span class=\"p\">)</span><span class=\"n\">test_group</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span></code></pre></div></div><h2 id=\"repositorylocal\">RepositoryLocal</h2><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Find</span><span class=\"kn\">from</span> <span class=\"nn\">dohq_artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">generate_password</span><span class=\"p\">,</span> <span class=\"n\">RepositoryLocal</span><span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_repository_local</span><span class=\"p\">(</span><span class=\"s\">\"reponame\"</span><span class=\"p\">)</span><span class=\"c1\"># Create</span><span class=\"k\">if</span> <span class=\"n\">repo</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span><span class=\"p\">:</span>    <span class=\"c1\"># or RepositoryLocal.PYPI, RepositoryLocal.NUGET, etc</span>    <span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">RepositoryLocal</span><span class=\"p\">(</span><span class=\"n\">artifactory_</span><span class=\"p\">,</span> <span class=\"s\">\"reponame\"</span><span class=\"p\">,</span> <span class=\"n\">packageType</span><span class=\"o\">=</span><span class=\"n\">RepositoryLocal</span><span class=\"p\">.</span><span class=\"n\">DEBIAN</span><span class=\"p\">)</span>    <span class=\"n\">repo</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"c1\"># You can re-read from Artifactory</span><span class=\"n\">repo</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"n\">repo</span><span class=\"p\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span></code></pre></div></div><h2 id=\"repositoryvirtual\">RepositoryVirtual</h2><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Find</span><span class=\"kn\">from</span> <span class=\"nn\">dohq_artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">RepositoryVirtual</span><span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_repository_virtual</span><span class=\"p\">(</span><span class=\"s\">\"pypi.all\"</span><span class=\"p\">)</span><span class=\"c1\"># Create</span><span class=\"k\">if</span> <span class=\"n\">repo</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span><span class=\"p\">:</span>    <span class=\"c1\"># or RepositoryVirtual.PYPI, RepositoryLocal.NUGET, etc</span>    <span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">RepositoryVirtual</span><span class=\"p\">(</span>        <span class=\"n\">artifactory_</span><span class=\"p\">,</span>        <span class=\"s\">\"pypi.all\"</span><span class=\"p\">,</span>        <span class=\"n\">repositories</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">\"pypi.snapshot\"</span><span class=\"p\">,</span> <span class=\"s\">\"pypi.release\"</span><span class=\"p\">],</span>        <span class=\"n\">packageType</span><span class=\"o\">=</span><span class=\"n\">RepositoryVirtual</span><span class=\"p\">.</span><span class=\"n\">PYPI</span><span class=\"p\">,</span>    <span class=\"p\">)</span>    <span class=\"n\">repo</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"c1\"># You can re-read from Artifactory</span><span class=\"n\">repo</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"n\">local_repos</span> <span class=\"o\">=</span> <span class=\"n\">repo</span><span class=\"p\">.</span><span class=\"n\">repositories</span>  <span class=\"c1\"># return List&lt;RepositoryLocal&gt;</span><span class=\"n\">repo</span><span class=\"p\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span></code></pre></div></div><h2 id=\"repositoryremote\">RepositoryRemote</h2><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Find</span><span class=\"kn\">from</span> <span class=\"nn\">dohq_artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">RepositoryRemote</span><span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_repository_virtual</span><span class=\"p\">(</span><span class=\"s\">\"pypi.all\"</span><span class=\"p\">)</span><span class=\"c1\"># Create</span><span class=\"k\">if</span> <span class=\"n\">repo</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span><span class=\"p\">:</span>    <span class=\"c1\"># or RepositoryRemote.PYPI, RepositoryRemote.NUGET, etc</span>    <span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">RepositoryRemote</span><span class=\"p\">(</span>        <span class=\"n\">artifactory_</span><span class=\"p\">,</span>        <span class=\"s\">\"pypi.all\"</span><span class=\"p\">,</span>        <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s\">\"https://files.pythonhosted.org\"</span><span class=\"p\">,</span>        <span class=\"n\">packageType</span><span class=\"o\">=</span><span class=\"n\">RepositoryVirtual</span><span class=\"p\">.</span><span class=\"n\">PYPI</span><span class=\"p\">,</span>    <span class=\"p\">)</span>    <span class=\"n\">repo</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"c1\"># You can re-read from Artifactory</span><span class=\"n\">repo</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"n\">repo</span><span class=\"p\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span></code></pre></div></div><h2 id=\"project\">Project</h2><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Find</span><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"kn\">from</span> <span class=\"nn\">dohq_artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">Project</span><span class=\"n\">artifactory_</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/myrepo/restricted-path\"</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s\">\"MY_TOKEN\"</span><span class=\"p\">)</span><span class=\"n\">project</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_project</span><span class=\"p\">(</span><span class=\"s\">\"t1k1\"</span><span class=\"p\">)</span><span class=\"c1\"># Create</span><span class=\"k\">if</span> <span class=\"n\">project</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span><span class=\"p\">:</span>    <span class=\"n\">project</span> <span class=\"o\">=</span> <span class=\"n\">Project</span><span class=\"p\">(</span><span class=\"n\">artifactory_</span><span class=\"p\">,</span> <span class=\"s\">\"t1k1\"</span><span class=\"p\">,</span> <span class=\"s\">\"t1k1_display_name\"</span><span class=\"p\">)</span>    <span class=\"n\">project</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"c1\"># You can re-read from Artifactory</span><span class=\"n\">project</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"n\">project</span><span class=\"p\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span></code></pre></div></div><h2 id=\"get-repository-of-any-type\">Get repository of any type</h2><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Find any repo by name</span><span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_repository</span><span class=\"p\">(</span><span class=\"s\">\"pypi.all\"</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"iterate-over-repository-artifacts\">Iterate over repository artifacts</h2><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Get repo</span><span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_repository</span><span class=\"p\">(</span><span class=\"s\">\"pypi.all\"</span><span class=\"p\">)</span><span class=\"c1\"># Iterate over repo</span><span class=\"k\">for</span> <span class=\"n\">artifact</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Result:# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.0.0-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.0.0\"]}# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.0.1.dev5-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.0.1.dev5\"]}# http://my.artifactory.com/artifactory/pypi.all/other_package/other_package-0.0.1-py3.whl# {\"pypi.name\": [\"other_package\"], \"pypy_version\": [\"0.0.1\"]}# ...</span></code></pre></div></div><h2 id=\"access-repository-child-item\">Access repository child item</h2><p>Repo can bee accessed just like any other <code class=\"language-plaintext highlighter-rouge\">ArtifactPath</code>:</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Get repo</span><span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_repository</span><span class=\"p\">(</span><span class=\"s\">\"pypi.all\"</span><span class=\"p\">)</span><span class=\"c1\"># Access a folder within the repo</span><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">repo</span> <span class=\"o\">/</span> <span class=\"s\">\"my_package\"</span><span class=\"c1\"># Result:# ArtifactPath('http://my.artifactory.com/artifactory/pypi.all/my_package')</span><span class=\"c1\"># Access a file within the repo</span><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">repo</span> <span class=\"o\">/</span> <span class=\"s\">\"my_package\"</span> <span class=\"o\">/</span> <span class=\"s\">\"my_artifact.tar.gz\"</span><span class=\"c1\"># Result:# ArtifactPath('http://my.artifactory.com/artifactory/pypi.all/my_package/my_artifact.tar.gz')</span></code></pre></div></div><h2 id=\"search-for-certain-package-artifacts\">Search for certain package artifacts</h2><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Get repo</span><span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_repository</span><span class=\"p\">(</span><span class=\"s\">\"pypi.all\"</span><span class=\"p\">)</span><span class=\"c1\"># Will generate and perform AQL query for getting artifacts by path or name</span><span class=\"k\">for</span> <span class=\"n\">artifacts</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">[</span><span class=\"s\">\"my_package\"</span><span class=\"p\">]:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Result:# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.0.0-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.0.0\"], ...}# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.0.1.dev5-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.0.1.dev5\"], ...}# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.1.0-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.1.0\"], ...}# ...</span><span class=\"c1\"># Using partial match</span><span class=\"k\">for</span> <span class=\"n\">artifacts</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">[</span><span class=\"s\">\"my_pack*\"</span><span class=\"p\">]:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Result:# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.0.0-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.0.0\"], ...}# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.0.1.dev5-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.0.1.dev5\"], ...}# http://my.artifactory.com/artifactory/pypi.all/my_package_new_/my_package_new-0.0.1-py3.whl# {\"pypi.name\": [\"my_package_new\"], \"pypy_version\": [\"0.0.1\"], ...}# ...</span></code></pre></div></div><p>Some types of repositories support specific ways of searching artifacts.</p><ul>  <li>    <p>PyPi</p>    <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Get repo</span><span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_repository</span><span class=\"p\">(</span><span class=\"s\">\"pypi.all\"</span><span class=\"p\">)</span><span class=\"c1\"># Get artifacts by package name</span><span class=\"k\">for</span> <span class=\"n\">artifacts</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">[</span><span class=\"s\">\"my_package\"</span><span class=\"p\">]:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Result:# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.0.0-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.0.0\"], ...}# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.0.1.dev5-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.0.1.dev5\"], ...}# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.1.0-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.1.0\"], ...}# ...</span><span class=\"c1\"># Get artifacts by specific version</span><span class=\"k\">for</span> <span class=\"n\">artifacts</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">[</span><span class=\"s\">\"my_package==1.0.0\"</span><span class=\"p\">]:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Result:# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.0.0-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.0.0\"], ...}</span><span class=\"c1\"># Using other pip operators (result should be additionaly checked!)</span><span class=\"k\">for</span> <span class=\"n\">artifacts</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">[</span><span class=\"s\">\"my_package!=1.0.0\"</span><span class=\"p\">]:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Result:# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.0.1.dev5-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.0.1.dev5\"], ...}# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.1.0-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.1.0\"], ...}# ...</span><span class=\"c1\"># In case of using &gt; or &lt; operators, the result should be additionaly checked# because Artifactory compares strings, not versions</span><span class=\"k\">for</span> <span class=\"n\">artifacts</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">[</span><span class=\"s\">\"my_package&gt;=1.0.0\"</span><span class=\"p\">]:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Result:# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.0.1.dev5-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.0.1.dev5\"], ...}# http://my.artifactory.com/artifactory/pypi.all/my_package/my_package-1.1.0-py3.whl# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.1.0\"], ...}# ...</span></code></pre></div>    </div>  </li>  <li>    <p>Docker</p>    <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Get repo</span><span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_repository</span><span class=\"p\">(</span><span class=\"s\">\"docker.all\"</span><span class=\"p\">)</span><span class=\"c1\"># Get artifacts by image name</span><span class=\"k\">for</span> <span class=\"n\">artifacts</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">[</span><span class=\"s\">\"my_image\"</span><span class=\"p\">]:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Result:# http://my.artifactory.com/artifactory/docker.all/my_image/latest/manifest.json# {\"docker.repoName\": [\"my_image\"], \"docker.manifest\": [\"latest\"], ...}# http://my.artifactory.com/artifactory/docker.all/my_image/1.0.0/manifest.json# {\"docker.repoName\": [\"my_image\"], \"docker.manifest\": [\"1.0.0\"], ...}# http://my.artifactory.com/artifactory/docker.all/my_image/1.1.0/manifest.json# {\"docker.repoName\": [\"my_image\"], \"docker.manifest\": [\"1.1.0\"], ...}# ...</span><span class=\"c1\"># Get artifacts by specific version</span><span class=\"k\">for</span> <span class=\"n\">artifacts</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">[</span><span class=\"s\">\"my_image:1.0.0\"</span><span class=\"p\">]:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Result:# http://my.artifactory.com/artifactory/docker.all/my_image/1.0.0/manifest.json# {\"docker.repoName\": [\"my_image\"], \"docker.manifest\": [\"1.0.0\"], ...}# ...</span><span class=\"k\">for</span> <span class=\"n\">artifacts</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">[</span><span class=\"s\">\"my_image:latest\"</span><span class=\"p\">]:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Result:# http://my.artifactory.com/artifactory/docker.all/my_image/latest/manifest.json# {\"docker.repoName\": [\"my_image\"], \"docker.manifest\": [\"latest\"], ...}# ...</span><span class=\"c1\"># Partial search</span><span class=\"k\">for</span> <span class=\"n\">artifacts</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">[</span><span class=\"s\">\"my_package:*dev*\"</span><span class=\"p\">]:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># http://my.artifactory.com/artifactory/docker.all/my_image/dev/manifest.json# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"dev\"]}# http://my.artifactory.com/artifactory/docker.all/my_image/1.0.1-dev5/manifest.json# {\"pypi.name\": [\"my_package\"], \"pypy_version\": [\"1.0.1-dev5\"]}# ...</span></code></pre></div>    </div>  </li>  <li>    <p>Maven</p>    <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Get repo</span><span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_repository</span><span class=\"p\">(</span><span class=\"s\">\"maven.all\"</span><span class=\"p\">)</span><span class=\"c1\"># Get artifacts by group name</span><span class=\"k\">for</span> <span class=\"n\">artifacts</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">[</span><span class=\"s\">\"my.group\"</span><span class=\"p\">]:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Result:# http://my.artifactory.com/artifactory/maven.all/my/group/package/1.0.0/maven-metadata.xml# ...# http://my.artifactory.com/artifactory/maven.all/my/group/another_package/1.2.3/maven-metadata.xml# ...</span><span class=\"c1\"># Get artifacts by group and package name</span><span class=\"k\">for</span> <span class=\"n\">artifacts</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">[</span><span class=\"s\">\"my.group:package\"</span><span class=\"p\">]:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Result:# http://my.artifactory.com/artifactory/maven.all/my/group/package/1.0.0/maven-metadata.xml# http://my.artifactory.com/artifactory/maven.all/my/group/package/1.0.0/package-1.0.0-source.jar# http://my.artifactory.com/artifactory/maven.all/my/group/package/1.0.0/package-1.0.0-javadoc.jar# http://my.artifactory.com/artifactory/maven.all/my/group/package/1.0.0/package-1.0.0.pom# http://my.artifactory.com/artifactory/maven.all/my/group/package/1.0.0/package-1.0.0.jar# {\"build.number\": [\"123\"], \"build.name\": [\"1.0.0\"], ...}</span><span class=\"c1\"># http://my.artifactory.com/artifactory/maven.all/my/group/package/1.0.1/maven-metadata.xml# ...</span><span class=\"c1\"># Get artifacts by group, package name and version</span><span class=\"k\">for</span> <span class=\"n\">artifacts</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"p\">[</span><span class=\"s\">\"my.group:package:1.0.0\"</span><span class=\"p\">]:</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">)</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">artifact</span><span class=\"p\">.</span><span class=\"n\">properties</span><span class=\"p\">)</span><span class=\"c1\"># Result:# http://my.artifactory.com/artifactory/maven.all/my/group/package/1.0.0/maven-metadata.xml# http://my.artifactory.com/artifactory/maven.all/my/group/package/1.0.0/package-1.0.0-source.jar# http://my.artifactory.com/artifactory/maven.all/my/group/package/1.0.0/package-1.0.0-javadoc.jar# http://my.artifactory.com/artifactory/maven.all/my/group/package/1.0.0/package-1.0.0.pom# http://my.artifactory.com/artifactory/maven.all/my/group/package/1.0.0/package-1.0.0.jar# {\"build.number\": [\"123\"], \"build.name\": [\"1.0.0\"], ...}</span></code></pre></div>    </div>  </li></ul><h2 id=\"permissiontarget\">PermissionTarget</h2><p>Docs: https://www.jfrog.com/confluence/display/RTF/Managing+Permissions</p><p>Supports these roles:</p><ul>  <li><code class=\"language-plaintext highlighter-rouge\">PermissionTarget.ROLE_ADMIN</code> = <code class=\"language-plaintext highlighter-rouge\">ADMIN + DELETE + DEPLOY + ANNOTATE + READ</code></li>  <li><code class=\"language-plaintext highlighter-rouge\">PermissionTarget.ROLE_DELETE</code> = <code class=\"language-plaintext highlighter-rouge\">DELETE + DEPLOY + ANNOTATE + READ</code></li>  <li><code class=\"language-plaintext highlighter-rouge\">PermissionTarget.ROLE_DEPLOY</code> = <code class=\"language-plaintext highlighter-rouge\">DEPLOY + ANNOTATE + READ</code></li>  <li><code class=\"language-plaintext highlighter-rouge\">PermissionTarget.ROLE_ANNOTATE</code> = <code class=\"language-plaintext highlighter-rouge\">ANNOTATE + READ</code></li>  <li><code class=\"language-plaintext highlighter-rouge\">PermissionTarget.ROLE_READ</code> = <code class=\"language-plaintext highlighter-rouge\">READ</code></li></ul><p>And for more modular control:</p><ul>  <li><code class=\"language-plaintext highlighter-rouge\">PermissionTarget.ADMIN</code> - Allows changing the permission settings for other users on this permission target</li>  <li><code class=\"language-plaintext highlighter-rouge\">PermissionTarget.DELETE</code> - Allows deletion or overwriting of artifacts</li>  <li><code class=\"language-plaintext highlighter-rouge\">PermissionTarget.DEPLOY</code> - Allows deploying artifacts and deploying to caches (i.e. populating caches with remote artifacts)</li>  <li><code class=\"language-plaintext highlighter-rouge\">PermissionTarget.ANNOTATE</code> - Allows annotating artifacts and folders with metadata and properties</li>  <li><code class=\"language-plaintext highlighter-rouge\">PermissionTarget.READ</code> - Allows reading and downloading of artifacts</li></ul><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">dohq_artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">PermissionTarget</span><span class=\"n\">permission</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_permission_target</span><span class=\"p\">(</span><span class=\"s\">\"rule\"</span><span class=\"p\">)</span><span class=\"c1\"># See repositories, users or groups</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">repositories</span><span class=\"c1\"># Result:# &lt;RepositiryLocal repo1&gt;# &lt;RepositiryLocal repo2&gt;</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">users</span><span class=\"c1\"># Result:# &lt;User user1&gt;# &lt;User user2&gt;</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">groups</span><span class=\"c1\"># Result:# &lt;Group group1&gt;# &lt;Group group2&gt;</span><span class=\"c1\"># Add repo (string or Repository) object</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">add_repository</span><span class=\"p\">(</span><span class=\"s\">\"repo3\"</span><span class=\"p\">,</span> <span class=\"s\">\"repo4\"</span><span class=\"p\">)</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">add_repository</span><span class=\"p\">(</span><span class=\"n\">repo5_object</span><span class=\"p\">)</span><span class=\"c1\"># Or remove</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">remove_repository</span><span class=\"p\">(</span><span class=\"s\">\"repo1\"</span><span class=\"p\">,</span> <span class=\"s\">\"repo2\"</span><span class=\"p\">)</span><span class=\"c1\"># Add user (string or User object) with specific permission</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">add_user</span><span class=\"p\">(</span><span class=\"s\">\"user3\"</span><span class=\"p\">,</span> <span class=\"n\">PermissionTarget</span><span class=\"p\">.</span><span class=\"n\">ROLE_ADMIN</span><span class=\"p\">)</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">add_user</span><span class=\"p\">(</span>    <span class=\"n\">user4_object</span><span class=\"p\">,</span> <span class=\"n\">PermissionTarget</span><span class=\"p\">.</span><span class=\"n\">ROLE_READ</span> <span class=\"o\">+</span> <span class=\"n\">PermissionTarget</span><span class=\"p\">.</span><span class=\"n\">ROLE_WRITE</span><span class=\"p\">)</span>  <span class=\"c1\"># You can add sum of permissions</span><span class=\"c1\"># Or remove</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">remove_user</span><span class=\"p\">(</span><span class=\"s\">\"user1\"</span><span class=\"p\">,</span> <span class=\"s\">\"user2\"</span><span class=\"p\">)</span><span class=\"c1\"># Add group (string or Group object) with permission</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">add_group</span><span class=\"p\">(</span><span class=\"s\">\"group3\"</span><span class=\"p\">,</span> <span class=\"n\">PermissionTarget</span><span class=\"p\">.</span><span class=\"n\">ROLE_ADMIN</span><span class=\"p\">)</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">add_group</span><span class=\"p\">(</span>    <span class=\"n\">group4_object</span><span class=\"p\">,</span> <span class=\"n\">PermissionTarget</span><span class=\"p\">.</span><span class=\"n\">ROLE_READ</span> <span class=\"o\">+</span> <span class=\"n\">PermissionTarget</span><span class=\"p\">.</span><span class=\"n\">ROLE_WRITE</span><span class=\"p\">)</span>  <span class=\"c1\"># You can add sum of permissions</span><span class=\"c1\"># Or remove</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">remove_group</span><span class=\"p\">(</span><span class=\"s\">\"group1\"</span><span class=\"p\">,</span> <span class=\"s\">\"group2\"</span><span class=\"p\">)</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>  <span class=\"c1\"># Update!!</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">repositories</span><span class=\"c1\"># Result:# &lt;RepositiryLocal repo3&gt;# &lt;RepositiryLocal repo4&gt;# &lt;RepositiryLocal repo5&gt;</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">users</span><span class=\"c1\"># Result:# &lt;User user3&gt;# &lt;User user4&gt;</span><span class=\"n\">permission</span><span class=\"p\">.</span><span class=\"n\">groups</span><span class=\"c1\"># Result:# &lt;Group group3&gt;# &lt;Group group4&gt;</span></code></pre></div></div><h2 id=\"token\">Token</h2><p>https://www.jfrog.com/confluence/display/RTF5X/Access+Tokens#AccessTokens-RESTAPI</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">requests.auth</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPBasicAuth</span><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"kn\">from</span> <span class=\"nn\">dohq_artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">Token</span><span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"https://artifactory_dns/artifactory\"</span><span class=\"p\">,</span>    <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s\">\"admin\"</span><span class=\"p\">,</span> <span class=\"s\">\"admin_password\"</span><span class=\"p\">),</span>    <span class=\"n\">auth_type</span><span class=\"o\">=</span><span class=\"n\">HTTPBasicAuth</span><span class=\"p\">,</span>    <span class=\"n\">verify</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span><span class=\"p\">)</span><span class=\"c1\"># Read token for readers group</span><span class=\"n\">group_name</span> <span class=\"o\">=</span> <span class=\"s\">\"readers\"</span><span class=\"n\">scope</span> <span class=\"o\">=</span> <span class=\"s\">\"api:* member-of-groups:\"</span> <span class=\"o\">+</span> <span class=\"n\">group_name</span><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">Token</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"n\">scope</span><span class=\"p\">)</span><span class=\"n\">token</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"c1\"># Create token for member of the readers</span><span class=\"n\">group_name</span> <span class=\"o\">=</span> <span class=\"s\">\"readers\"</span><span class=\"n\">scope</span> <span class=\"o\">=</span> <span class=\"s\">\"api:* member-of-groups:\"</span> <span class=\"o\">+</span> <span class=\"n\">group_name</span><span class=\"n\">subject</span> <span class=\"o\">=</span> <span class=\"n\">group_name</span><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">Token</span><span class=\"p\">(</span>    <span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"n\">scope</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">subject</span><span class=\"p\">,</span> <span class=\"n\">expires_in</span><span class=\"o\">=</span><span class=\"mi\">31557600</span><span class=\"p\">,</span> <span class=\"n\">refreshable</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">token</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Readonly token:\"</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Username: \"</span> <span class=\"o\">+</span> <span class=\"n\">token</span><span class=\"p\">.</span><span class=\"n\">username</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Token: \"</span> <span class=\"o\">+</span> <span class=\"n\">token</span><span class=\"p\">.</span><span class=\"n\">token</span><span class=\"p\">[</span><span class=\"s\">\"access_token\"</span><span class=\"p\">])</span></code></pre></div></div><h2 id=\"common\">Common</h2><p>All <code class=\"language-plaintext highlighter-rouge\">AdminObject</code>  support:</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_user</span><span class=\"p\">(</span><span class=\"s\">\"username\"</span><span class=\"p\">)</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">.</span><span class=\"n\">raw</span><span class=\"p\">)</span>  <span class=\"c1\"># JSON response from Artifactory</span><span class=\"n\">new_repo</span> <span class=\"o\">=</span> <span class=\"n\">RepositoryLocal</span><span class=\"p\">(</span><span class=\"n\">artifactory</span><span class=\"p\">,</span> <span class=\"s\">\"reponame\"</span><span class=\"p\">)</span><span class=\"c1\"># If some key you can't find in object, you can use this:</span><span class=\"n\">new_repo</span><span class=\"p\">.</span><span class=\"n\">additional_params</span><span class=\"p\">[</span><span class=\"s\">\"property_sets\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"my\"</span><span class=\"p\">,</span> <span class=\"s\">\"properties_sets\"</span><span class=\"p\">]</span><span class=\"n\">new_repo</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"c1\"># All object support CRUD operations:</span><span class=\"n\">obj</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>  <span class=\"c1\"># Return True if user exist (and read from Artifactory), else return False</span><span class=\"n\">obj</span><span class=\"p\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"n\">obj</span><span class=\"p\">.</span><span class=\"n\">update</span><span class=\"p\">()</span><span class=\"n\">obj</span><span class=\"p\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span><span class=\"c1\"># ArtifactoryPath have different find_ method:</span><span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_user</span><span class=\"p\">(</span><span class=\"s\">\"name\"</span><span class=\"p\">)</span><span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_group</span><span class=\"p\">(</span><span class=\"s\">\"name\"</span><span class=\"p\">)</span><span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_repository_local</span><span class=\"p\">(</span><span class=\"s\">\"name\"</span><span class=\"p\">)</span><span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_permission_target</span><span class=\"p\">(</span><span class=\"s\">\"name\"</span><span class=\"p\">)</span><span class=\"n\">artifactory_</span><span class=\"p\">.</span><span class=\"n\">find_project</span><span class=\"p\">(</span><span class=\"s\">\"project_key\"</span><span class=\"p\">)</span></code></pre></div></div><h1 id=\"advanced\">Advanced</h1><h2 id=\"session\">Session</h2><p>To re-use the established connection, you can pass <code class=\"language-plaintext highlighter-rouge\">session</code> parameter to ArtifactoryPath:</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"kn\">import</span> <span class=\"nn\">requests</span><span class=\"n\">ses</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"p\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span><span class=\"n\">ses</span><span class=\"p\">.</span><span class=\"n\">auth</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">\"username\"</span><span class=\"p\">,</span> <span class=\"s\">\"password\"</span><span class=\"p\">)</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/myrepo/my-path-1\"</span><span class=\"p\">,</span> <span class=\"n\">sesssion</span><span class=\"o\">=</span><span class=\"n\">ses</span><span class=\"p\">)</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">touch</span><span class=\"p\">()</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/myrepo/my-path-2\"</span><span class=\"p\">,</span> <span class=\"n\">sesssion</span><span class=\"o\">=</span><span class=\"n\">ses</span><span class=\"p\">)</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">touch</span><span class=\"p\">()</span></code></pre></div></div><h2 id=\"ssl-cert-verification-options\">SSL Cert Verification Options</h2><p>See <a href=\"http://docs.python-requests.org/en/latest/user/advanced/#ssl-cert-verification\">Requests - SSL verification</a> for more details.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\"</span><span class=\"p\">)</span></code></pre></div></div><p>\u2026 is the same as</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\"</span><span class=\"p\">,</span> <span class=\"n\">verify</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span></code></pre></div></div><p>Specify a local cert to use as client side certificate</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\"</span><span class=\"p\">,</span>    <span class=\"n\">cert</span><span class=\"o\">=</span><span class=\"s\">\"/path_to_file/server.pem\"</span><span class=\"p\">,</span><span class=\"p\">)</span></code></pre></div></div><p>Disable host cert verification</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\"</span><span class=\"p\">,</span> <span class=\"n\">verify</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span></code></pre></div></div><p><strong>Note:</strong> If host cert verification is disabled, <code class=\"language-plaintext highlighter-rouge\">urllib3</code> will throw a <a href=\"https://urllib3.readthedocs.org/en/latest/security.html#insecurerequestwarning\">InsecureRequestWarning</a>.To disable these warning, one needs to call <code class=\"language-plaintext highlighter-rouge\">urllib3.disable_warnings()</code>.</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">requests.packages.urllib3</span> <span class=\"k\">as</span> <span class=\"n\">urllib3</span><span class=\"n\">urllib3</span><span class=\"p\">.</span><span class=\"n\">disable_warnings</span><span class=\"p\">()</span></code></pre></div></div><h2 id=\"timeout-on-requests\">Timeout on requests</h2><p>The library supports <code class=\"language-plaintext highlighter-rouge\">timeout</code> argument in the same meaner as <a href=\"https://requests.readthedocs.io/en/master/user/advanced/#timeouts\">requests does</a></p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\"</span><span class=\"p\">)</span></code></pre></div></div><p>\u2026 is the same as</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\"</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">)</span></code></pre></div></div><p>Set 5 seconds timeout to your requests after which it will be terminated:</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/libs-snapshot-local/myapp/1.0\"</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"logging\">Logging</h2><p>The library can be configured to emit logging that will give you better insight into what it\u2019s doing.Just configure <a href=\"https://docs.python.org/3/library/logging.html\">logging</a> module in your python script. Simplest example to add debug messages to a console:</p><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">logging</span><span class=\"kn\">from</span> <span class=\"nn\">artifactory</span> <span class=\"kn\">import</span> <span class=\"n\">ArtifactoryPath</span><span class=\"n\">logging</span><span class=\"p\">.</span><span class=\"n\">basicConfig</span><span class=\"p\">()</span><span class=\"c1\"># set level only for artifactory module, if omitted, then global log level is used, eg from basicConfig</span><span class=\"n\">logging</span><span class=\"p\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s\">\"artifactory\"</span><span class=\"p\">).</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"p\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">ArtifactoryPath</span><span class=\"p\">(</span>    <span class=\"s\">\"http://my-artifactory/artifactory/myrepo/restricted-path\"</span><span class=\"p\">,</span> <span class=\"n\">apikey</span><span class=\"o\">=</span><span class=\"s\">\"MY_API_KEY\"</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"global-configuration-file\">Global Configuration File</h2><p>Artifactory Python module also can specify all connection-related settings in a central file, given by environmentvariable <code class=\"language-plaintext highlighter-rouge\">$DOHQ_ARTIFACTORY_PYTHON_CFG</code> (default if not set: <code class=\"language-plaintext highlighter-rouge\">~/.artifactory_python.cfg</code>) that is read uponthe creation of first <code class=\"language-plaintext highlighter-rouge\">ArtifactoryPath</code> object and is stored globally. For instance, you can specify per-instancesettings of authentication tokens, so that you won\u2019t need to explicitly pass <code class=\"language-plaintext highlighter-rouge\">auth</code> parameter to <code class=\"language-plaintext highlighter-rouge\">ArtifactoryPath</code>.</p><p>Example:</p><div class=\"language-ini highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">[DEFAULT]</span><span class=\"py\">username</span> <span class=\"p\">=</span> <span class=\"s\">nameforallinstances</span><span class=\"nn\">[http://artifactory-instance.com/artifactory]</span><span class=\"py\">password</span> <span class=\"p\">=</span> <span class=\"s\">ilikerandompasswords</span><span class=\"py\">verify</span> <span class=\"p\">=</span> <span class=\"s\">false</span><span class=\"nn\">[another-artifactory-instance.com/artifactory]</span><span class=\"py\">password</span> <span class=\"p\">=</span> <span class=\"s\">@dmin</span><span class=\"py\">cert</span> <span class=\"p\">=</span> <span class=\"s\">~/mycert</span></code></pre></div></div><p>Whether or not you specify <code class=\"language-plaintext highlighter-rouge\">http://</code> or <code class=\"language-plaintext highlighter-rouge\">https://</code>, the prefix is not essential. The module will first try to locate the best match and then try to match URLs without prefixes. So in the config, if you specify<code class=\"language-plaintext highlighter-rouge\">https://my-instance.local</code> and call <code class=\"language-plaintext highlighter-rouge\">ArtifactoryPath</code> with <code class=\"language-plaintext highlighter-rouge\">http://my-instance.local</code>, it will still do the right thing.</p><h1 id=\"contribute\">Contribute</h1><p><a href=\"/artifactory/docs/CONTRIBUTE.html\">About contributing and testing</a></p><h1 id=\"advertising\">Advertising</h1><ul>  <li><a href=\"https://github.com/devopshq/artifactory-du\">artifactory-du</a> - estimate file space usage. Summarize disk usage in JFrog Artifactory of the set of FILEs, recursively for directories.</li>  <li><a href=\"https://github.com/devopshq/artifactory-cleanup\">artifactory-cleanup</a> - is an extended and flexible cleanup tool for JFrog Artifactory.</li></ul>      <footer class=\"site-footer\">                  <span class=\"site-footer-owner\"><a href=\"https://github.com/devopshq/artifactory\">artifactory</a> is maintained by <a href=\"https://github.com/devopshq\">devopshq</a>.</span>                <span class=\"site-footer-credits\">This page was generated by <a href=\"https://pages.github.com\">GitHub Pages</a>.</span>      </footer>    </main>  </body></html>",
  "embeddings": []
}
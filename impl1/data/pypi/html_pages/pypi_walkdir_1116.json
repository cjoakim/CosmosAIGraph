{
  "libtype": "pypi",
  "libname": "walkdir",
  "url": "http://walkdir.readthedocs.org",
  "html": "<!DOCTYPE html><!--[if IE 8]><html class=\"no-js lt-ie9\" lang=\"en\" > <![endif]--><!--[if gt IE 8]><!--> <html class=\"no-js\" lang=\"en\" > <!--<![endif]--><head>  <meta charset=\"utf-8\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">    <title>WalkDir &mdash; WalkDir 0.4.1.post1 documentation</title>                            <link rel=\"stylesheet\" href=\"https://media.readthedocs.org/css/sphinx_rtd_theme.css\" type=\"text/css\" />        <link rel=\"top\" title=\"WalkDir 0.4.1.post1 documentation\" href=\"#\"/>     <script src=\"_static/js/modernizr.min.js\"></script><!-- RTD Extra Head --><!-- Always link to the latest version, as canonical.http://docs.readthedocs.org/en/latest/canonical.html--><link rel=\"canonical\" href=\"http://walkdir.readthedocs.io/en/stable/\" /><link rel=\"stylesheet\" href=\"https://media.readthedocs.org/css/readthedocs-doc-embed.css\" type=\"text/css\" /><script type=\"text/javascript\" src=\"_static/readthedocs-data.js\"></script><!-- Add page-specific data, which must exist in the page js, not global --><script type=\"text/javascript\">READTHEDOCS_DATA['page'] = 'index'</script><script type=\"text/javascript\" src=\"_static/readthedocs-dynamic-include.js\"></script><!-- end RTD <extrahead> --></head><body class=\"wy-body-for-nav\" role=\"document\">  <div class=\"wy-grid-for-nav\">        <nav data-toggle=\"wy-nav-shift\" class=\"wy-nav-side\">      <div class=\"wy-side-scroll\">        <div class=\"wy-side-nav-search\">                                <a href=\"#\" class=\"icon icon-home\"> WalkDir                              </a>                                                            <div class=\"version\">                stable              </div>                                <div role=\"search\">  <form id=\"rtd-search-form\" class=\"wy-form\" action=\"search.html\" method=\"get\">    <input type=\"text\" name=\"q\" placeholder=\"Search docs\" />    <input type=\"hidden\" name=\"check_keywords\" value=\"yes\" />    <input type=\"hidden\" name=\"area\" value=\"default\" />  </form></div>                  </div>        <div class=\"wy-menu wy-menu-vertical\" data-spy=\"affix\" role=\"navigation\" aria-label=\"main navigation\">                                                  <!-- Local TOC -->                <div class=\"local-toc\"><ul><li><a class=\"reference internal\" href=\"#\">WalkDir</a><ul><li><a class=\"reference internal\" href=\"#walk-iterables\">Walk Iterables</a></li><li><a class=\"reference internal\" href=\"#path-iteration\">Path Iteration</a></li><li><a class=\"reference internal\" href=\"#directory-walking\">Directory Walking</a></li></ul></li><li><a class=\"reference internal\" href=\"#examples\">Examples</a></li><li><a class=\"reference internal\" href=\"#obtaining-the-module\">Obtaining the Module</a><ul><li><a class=\"reference internal\" href=\"#development-and-support\">Development and Support</a></li><li><a class=\"reference internal\" href=\"#release-history\">Release History</a><ul><li><a class=\"reference internal\" href=\"#id1\">0.4.1 (2016-05-10)</a></li><li><a class=\"reference internal\" href=\"#id2\">0.4 (2016-05-10)</a></li><li><a class=\"reference internal\" href=\"#id3\">0.3 (2012-01-31)</a></li><li><a class=\"reference internal\" href=\"#id4\">0.2.1 (2012-01-17)</a></li><li><a class=\"reference internal\" href=\"#id5\">0.2 (2012-01-04)</a></li><li><a class=\"reference internal\" href=\"#id6\">0.1 (2011-11-13)</a></li></ul></li></ul></li><li><a class=\"reference internal\" href=\"#indices-and-tables\">Indices and tables</a></li></ul></div>                              </div>      </div>    </nav>    <section data-toggle=\"wy-nav-shift\" class=\"wy-nav-content-wrap\">            <nav class=\"wy-nav-top\" role=\"navigation\" aria-label=\"top navigation\">        <i data-toggle=\"wy-nav-top\" class=\"fa fa-bars\"></i>        <a href=\"#\">WalkDir</a>      </nav>            <div class=\"wy-nav-content\">        <div class=\"rst-content\">          <div role=\"navigation\" aria-label=\"breadcrumbs navigation\">  <ul class=\"wy-breadcrumbs\">    <li><a href=\"#\">Docs</a> &raquo;</li>          <li>WalkDir</li>      <li class=\"wy-breadcrumbs-aside\">                              <a href=\"https://github.com/ncoghlan/walkdir/blob/aa680a675ada00b0105f5ae396ced544228fa5c4/docs/index.rst\" class=\"fa fa-github\"> Edit on GitHub</a>                        </li>  </ul>  <hr/></div>          <div role=\"main\" class=\"document\" itemscope=\"itemscope\" itemtype=\"http://schema.org/Article\">           <div itemprop=\"articleBody\">              <div class=\"section\" id=\"module-walkdir\"><span id=\"walkdir\"></span><h1>WalkDir<a class=\"headerlink\" href=\"#module-walkdir\" title=\"Permalink to this headline\">\u00b6</a></h1><p><em>Module author: Nick Coghlan &lt;<a class=\"reference external\" href=\"mailto:ncoghlan&#37;&#52;&#48;gmail&#46;com\">ncoghlan<span>&#64;</span>gmail<span>&#46;</span>com</a>&gt;</em></p><p>The standard libary&#8217;s <a class=\"reference external\" href=\"http://docs.python.org/library/os.html#os.walk\" title=\"(in Python v2.7)\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">os.walk()</span></code></a> iterator provides a convenient way toprocess the contents of a filesystem directory. This module provides higherlevel tools based on the same interface that support filtering, depthlimiting and handling of symlink loops. The module also offers tools thatflatten the <a class=\"reference external\" href=\"http://docs.python.org/library/os.html#os.walk\" title=\"(in Python v2.7)\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">os.walk()</span></code></a> API into a simple iteration over filesystem paths.</p><div class=\"section\" id=\"walk-iterables\"><h2>Walk Iterables<a class=\"headerlink\" href=\"#walk-iterables\" title=\"Permalink to this headline\">\u00b6</a></h2><p>In this module, <code class=\"docutils literal\"><span class=\"pre\">walk_iter</span></code> refers to any iterable that produces<code class=\"docutils literal\"><span class=\"pre\">path,</span> <span class=\"pre\">subdirs,</span> <span class=\"pre\">files</span></code> triples sufficiently compatible with those producedby <a class=\"reference external\" href=\"http://docs.python.org/library/os.html#os.walk\" title=\"(in Python v2.7)\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">os.walk()</span></code></a>.</p><p>The module is designed so that all purely filtering operations <em>preserve</em>the output of the underlying iterable. This means that named tuples, tuplescontaining more than 3 values (such as those produced by <code class=\"xref py py-func docutils literal\"><span class=\"pre\">os.fwalk()</span></code>),and objects that aren&#8217;t tuples at all but are still defined such that<code class=\"docutils literal\"><span class=\"pre\">x[0],</span> <span class=\"pre\">x[1],</span> <span class=\"pre\">x[2]</span> <span class=\"pre\">=&gt;</span> <span class=\"pre\">dirpath,</span> <span class=\"pre\">subdirs,</span> <span class=\"pre\">files</span></code>, can be filtered without beingconverted to ordinary 3-tuples.</p><div class=\"versionchanged\"><p><span class=\"versionmodified\">Changed in version 0.3: </span>Objects produced by underlying iterables are now preserved instead ofbeing coerced to ordinary 3-tuples by filtering operations</p></div></div><div class=\"section\" id=\"path-iteration\"><h2>Path Iteration<a class=\"headerlink\" href=\"#path-iteration\" title=\"Permalink to this headline\">\u00b6</a></h2><p>Four iterators are provided for iteration over filesystem paths:</p><dl class=\"function\"><dt id=\"walkdir.file_paths\"><code class=\"descname\">file_paths</code><span class=\"sig-paren\">(</span><em>walk_iter</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/walkdir.html#file_paths\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#walkdir.file_paths\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Iterate over the files in directories visited by the underlying walk</p><p>Directory contents are emitted in the order visited, so the underlying walkmay be either top-down or bottom-up.</p></dd></dl><dl class=\"function\"><dt id=\"walkdir.dir_paths\"><code class=\"descname\">dir_paths</code><span class=\"sig-paren\">(</span><em>walk_iter</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/walkdir.html#dir_paths\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#walkdir.dir_paths\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Iterate over the directories visited by the underlying walk</p><p>Directories are emitted in the order visited, so the underlying walk maybe either top-down or bottom-up.</p></dd></dl><dl class=\"function\"><dt id=\"walkdir.all_dir_paths\"><code class=\"descname\">all_dir_paths</code><span class=\"sig-paren\">(</span><em>walk_iter</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/walkdir.html#all_dir_paths\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#walkdir.all_dir_paths\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Iterate over all directories reachable through the underlying walk</p><p>This covers:</p><blockquote><div><ul class=\"simple\"><li>all visited directories (similar to dir_paths)</li><li>all reported subdirectories of visited directories (even if nototherwise visited)</li></ul></div></blockquote><p>Example cases where the output may differ from dir_paths:</p><blockquote><div><ul class=\"simple\"><li>all_dir_paths always includes symlinks to directories even when theunderlying iterator doesn&#8217;t follow symlinks</li><li>all_dir_paths will include subdirectories of directories at the maximumdepth in a depth limited walk</li></ul></div></blockquote><p>This iterator expects new root directories to be emitted by the underlyingwalk before any of their contents, and hence requires a top-down traversalof the directory hierarchy.</p><div class=\"versionadded\"><p><span class=\"versionmodified\">New in version 0.4.</span></p></div></dd></dl><dl class=\"function\"><dt id=\"walkdir.all_paths\"><code class=\"descname\">all_paths</code><span class=\"sig-paren\">(</span><em>walk_iter</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/walkdir.html#all_paths\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#walkdir.all_paths\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Iterate over all paths reachable through the underlying walk</p><p>This covers:</p><blockquote><div><ul class=\"simple\"><li>all visited directories</li><li>all files in visited directories</li><li>all reported subdirectories of visited directories (even if nototherwise visited)</li></ul></div></blockquote><p>This iterator expects new root directories to be emitted by the underlyingwalk before any of their contents, and hence requires a top-down traversalof the directory hierarchy.</p><div class=\"versionchanged\"><p><span class=\"versionmodified\">Changed in version 0.4: </span>This function now combines the output of <a class=\"reference internal\" href=\"#walkdir.file_paths\" title=\"walkdir.file_paths\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">file_paths()</span></code></a> with thatof <a class=\"reference internal\" href=\"#walkdir.all_dir_paths\" title=\"walkdir.all_dir_paths\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">all_dir_paths()</span></code></a> (previously it was the combination of<a class=\"reference internal\" href=\"#walkdir.file_paths\" title=\"walkdir.file_paths\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">file_paths()</span></code></a> with <a class=\"reference internal\" href=\"#walkdir.dir_paths\" title=\"walkdir.dir_paths\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">dir_paths()</span></code></a>)</p></div></dd></dl><p>Except when the underlying iterable switches to a new root directory, the lasttwo functions yield subdirectory paths when visiting the parent directory,rather than when visiting the subdirectory.</p><p>For example, given the following directory tree:</p><div class=\"highlight-python\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tree</span> <span class=\"n\">test</span><span class=\"go\">test</span><span class=\"go\">\u251c\u2500\u2500 file1.txt</span><span class=\"go\">\u251c\u2500\u2500 file2.txt</span><span class=\"go\">\u251c\u2500\u2500 test2</span><span class=\"go\">\u2502   \u251c\u2500\u2500 file1.txt</span><span class=\"go\">\u2502   \u251c\u2500\u2500 file2.txt</span><span class=\"go\">\u2502   \u2514\u2500\u2500 test3</span><span class=\"go\">\u2514\u2500\u2500 test4</span><span class=\"go\">    \u251c\u2500\u2500 file1.txt</span><span class=\"go\">    \u2514\u2500\u2500 test5</span></pre></div></div><p><code class=\"docutils literal\"><span class=\"pre\">all_paths</span></code> will produce:</p><div class=\"highlight-python\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">walkdir</span> <span class=\"kn\">import</span> <span class=\"n\">filtered_walk</span><span class=\"p\">,</span> <span class=\"n\">all_paths</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">paths</span> <span class=\"o\">=</span> <span class=\"n\">all_paths</span><span class=\"p\">(</span><span class=\"n\">filtered_walk</span><span class=\"p\">(</span><span class=\"s1\">&#39;test&#39;</span><span class=\"p\">))</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">paths</span><span class=\"p\">))</span><span class=\"go\">test</span><span class=\"go\">test/file1.txt</span><span class=\"go\">test/file2.txt</span><span class=\"go\">test/test2</span><span class=\"go\">test/test4</span><span class=\"go\">test/test2/file1.txt</span><span class=\"go\">test/test2/file2.txt</span><span class=\"go\">test/test2/test3</span><span class=\"go\">test/test4/file1.txt</span><span class=\"go\">test/test4/test5</span></pre></div></div><p><code class=\"docutils literal\"><span class=\"pre\">all_dir_paths</span></code> will produce:</p><div class=\"highlight-python\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">walkdir</span> <span class=\"kn\">import</span> <span class=\"n\">filtered_walk</span><span class=\"p\">,</span> <span class=\"n\">all_dir_paths</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">paths</span> <span class=\"o\">=</span> <span class=\"n\">all_dir_paths</span><span class=\"p\">(</span><span class=\"n\">filtered_walk</span><span class=\"p\">(</span><span class=\"s1\">&#39;test&#39;</span><span class=\"p\">))</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">paths</span><span class=\"p\">))</span><span class=\"go\">test</span><span class=\"go\">test/test2</span><span class=\"go\">test/test4</span><span class=\"go\">test/test2/test3</span><span class=\"go\">test/test4/test5</span></pre></div></div><p><code class=\"docutils literal\"><span class=\"pre\">dir_paths</span></code> will produce:</p><div class=\"highlight-python\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">walkdir</span> <span class=\"kn\">import</span> <span class=\"n\">filtered_walk</span><span class=\"p\">,</span> <span class=\"n\">dir_paths</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">paths</span> <span class=\"o\">=</span> <span class=\"n\">dir_paths</span><span class=\"p\">(</span><span class=\"n\">filtered_walk</span><span class=\"p\">(</span><span class=\"s1\">&#39;test&#39;</span><span class=\"p\">))</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">paths</span><span class=\"p\">))</span><span class=\"go\">test</span><span class=\"go\">test/test2</span><span class=\"go\">test/test2/test3</span><span class=\"go\">test/test4</span><span class=\"go\">test/test4/test5</span></pre></div></div><p>And <code class=\"docutils literal\"><span class=\"pre\">file_paths</span></code> will produce:</p><div class=\"highlight-python\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">walkdir</span> <span class=\"kn\">import</span> <span class=\"n\">filtered_walk</span><span class=\"p\">,</span> <span class=\"n\">file_paths</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">paths</span> <span class=\"o\">=</span> <span class=\"n\">file_paths</span><span class=\"p\">(</span><span class=\"n\">filtered_walk</span><span class=\"p\">(</span><span class=\"s1\">&#39;test&#39;</span><span class=\"p\">))</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">paths</span><span class=\"p\">))</span><span class=\"go\">test/file1.txt</span><span class=\"go\">test/file2.txt</span><span class=\"go\">test/test2/file1.txt</span><span class=\"go\">test/test2/file2.txt</span><span class=\"go\">test/test4/file1.txt</span></pre></div></div><div class=\"admonition note\"><p class=\"first admonition-title\">Note</p><p class=\"last\">When used with <a class=\"reference internal\" href=\"#walkdir.min_depth\" title=\"walkdir.min_depth\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">min_depth()</span></code></a> the output will be produced as multipleindependent walks of each directory bigger than given <em>min_depth</em>.</p></div><div class=\"versionchanged\"><p><span class=\"versionmodified\">Changed in version 0.4: </span>Subdirectories are now emitted when visiting the parent directory, ratherthan when visiting the subdirectory itself. This means that subdirectoriesmay now be emitted without being visited (e.g. subdirectories of directoriesvisited by a depth-limited walk, symlinks to subdirectories when notfollowing links), and all subdirectories of a given parent directory areemitted as a contiguous block, rather than being interleaved with theirrespective file listings.</p></div></div><div class=\"section\" id=\"directory-walking\"><h2>Directory Walking<a class=\"headerlink\" href=\"#directory-walking\" title=\"Permalink to this headline\">\u00b6</a></h2><p>A convenience API for walking directories with various options is provided:</p><dl class=\"function\"><dt id=\"walkdir.filtered_walk\"><code class=\"descname\">filtered_walk</code><span class=\"sig-paren\">(</span><em>top</em>, <em>included_files=None</em>, <em>included_dirs=None</em>, <em>excluded_files=None</em>, <em>excluded_dirs=None</em>, <em>depth=None</em>, <em>followlinks=False</em>, <em>min_depth=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/walkdir.html#filtered_walk\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#walkdir.filtered_walk\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>This is a wrapper around <code class=\"docutils literal\"><span class=\"pre\">os.walk()</span></code> and other filesystem traversaliterators, with these additional features:</p><blockquote><div><ul class=\"simple\"><li><em>top</em> may be either a string (which will be passed to <code class=\"docutils literal\"><span class=\"pre\">os.walk()</span></code>)or any iterable that produces sequences with <code class=\"docutils literal\"><span class=\"pre\">path,</span> <span class=\"pre\">subdirs,</span> <span class=\"pre\">files</span></code>as the first three elements in the sequence</li><li>allows independent glob-style filters for filenames and subdirectories</li><li>allows a recursion depth limit to be specified</li><li>allows a minimum depth to be specified to report only subdirectorycontents</li><li>emits a message to stderr and skips the directory if a symlink loopis encountered when following links</li></ul></div></blockquote><p>Filtered walks created by passing in a string are always top down, asthe subdirectory listings must be altered to provide a number of theabove features.</p><p><em>include_files</em>, <em>include_dirs</em>, <em>exclude_files</em> and <em>exclude_dirs</em> areused to apply the relevant filtering steps to the walk.</p><p>A <em>depth</em> of <code class=\"docutils literal\"><span class=\"pre\">None</span></code> (the default) disables depth limiting. Otherwise,<em>depth</em> must be at least zero and indicates how far to descend into thedirectory hierarchy. A depth of zero is useful to get separate filteredsubdirectory and file listings for <em>top</em>.</p><p>Setting <em>min_depth</em> allows directories higher in the tree to beexcluded from the walk (e.g. a <em>min_depth</em> of 1 excludes <em>top</em>, butany subdirectories will still be processed)</p><p><em>followlinks</em> enables symbolic loop detection (when set to <code class=\"docutils literal\"><span class=\"pre\">True</span></code>)and is also passed to <code class=\"docutils literal\"><span class=\"pre\">os.walk()</span></code> when top is a string</p></dd></dl><p>The individual operations that support the convenience API are exposed usingan <a class=\"reference external\" href=\"http://docs.python.org/library/itertools.html#module-itertools\" title=\"(in Python v2.7)\"><code class=\"xref py py-mod docutils literal\"><span class=\"pre\">itertools</span></code></a> style iterator pipeline model:</p><dl class=\"function\"><dt id=\"walkdir.include_dirs\"><code class=\"descname\">include_dirs</code><span class=\"sig-paren\">(</span><em>walk_iter</em>, <em>*include_filters</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/walkdir.html#include_dirs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#walkdir.include_dirs\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Use <a class=\"reference external\" href=\"http://docs.python.org/library/fnmatch.html#fnmatch.fnmatch\" title=\"(in Python v2.7)\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">fnmatch.fnmatch()</span></code></a> patterns to select directories of interest</p><p>Inclusion filters are passed directly as arguments.</p><p>This filter works by modifying the subdirectory lists produced by theunderlying iterator, and hence requires a top-down traversal of thedirectory hierarchy.</p></dd></dl><dl class=\"function\"><dt id=\"walkdir.include_files\"><code class=\"descname\">include_files</code><span class=\"sig-paren\">(</span><em>walk_iter</em>, <em>*include_filters</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/walkdir.html#include_files\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#walkdir.include_files\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Use <a class=\"reference external\" href=\"http://docs.python.org/library/fnmatch.html#fnmatch.fnmatch\" title=\"(in Python v2.7)\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">fnmatch.fnmatch()</span></code></a> patterns to select files of interest</p><p>Inclusion filters are passed directly as arguments</p><p>This filter does not modify the subdirectory lists produced by theunderlying iterator, and hence supports both top-down and bottom-uptraversal of the directory hierarchy.</p></dd></dl><dl class=\"function\"><dt id=\"walkdir.exclude_dirs\"><code class=\"descname\">exclude_dirs</code><span class=\"sig-paren\">(</span><em>walk_iter</em>, <em>*exclude_filters</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/walkdir.html#exclude_dirs\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#walkdir.exclude_dirs\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Use <a class=\"reference external\" href=\"http://docs.python.org/library/fnmatch.html#fnmatch.fnmatch\" title=\"(in Python v2.7)\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">fnmatch.fnmatch()</span></code></a> patterns to skip irrelevant directories</p><p>Exclusion filters are passed directly as arguments</p><p>This filter works by modifying the subdirectory lists produced by theunderlying iterator, and hence requires a top-down traversal of thedirectory hierarchy.</p></dd></dl><dl class=\"function\"><dt id=\"walkdir.exclude_files\"><code class=\"descname\">exclude_files</code><span class=\"sig-paren\">(</span><em>walk_iter</em>, <em>*exclude_filters</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/walkdir.html#exclude_files\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#walkdir.exclude_files\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Use <a class=\"reference external\" href=\"http://docs.python.org/library/fnmatch.html#fnmatch.fnmatch\" title=\"(in Python v2.7)\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">fnmatch.fnmatch()</span></code></a> patterns to skip irrelevant files</p><p>Exclusion filters are passed directly as arguments</p><p>This filter does not modify the subdirectory lists produced by theunderlying iterator, and hence supports both top-down and bottom-uptraversal of the directory hierarchy.</p></dd></dl><dl class=\"function\"><dt id=\"walkdir.limit_depth\"><code class=\"descname\">limit_depth</code><span class=\"sig-paren\">(</span><em>walk_iter</em>, <em>depth</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/walkdir.html#limit_depth\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#walkdir.limit_depth\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Limit the depth of recursion into subdirectories.</p><p>A <em>depth</em> of 0 limits the walk to the top level directory, a <em>depth</em> of 1includes subdirectories, etc.</p><p>Path depth is calculated by counting directory separators, using thedepth of the first path produced by the underlying iterator as areference point.</p><p>This filter works by modifying the subdirectory lists produced by theunderlying iterator, and hence requires a top-down traversal of thedirectory hierarchy.</p></dd></dl><dl class=\"function\"><dt id=\"walkdir.min_depth\"><code class=\"descname\">min_depth</code><span class=\"sig-paren\">(</span><em>walk_iter</em>, <em>depth</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/walkdir.html#min_depth\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#walkdir.min_depth\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Only process subdirectories beyond a minimum depth</p><p>A <em>depth</em> of 1 omits the top level directory, a <em>depth</em> of 2starts with subdirectories 2 levels down, etc.</p><p>Path depth is calculated by counting directory separators, using thedepth of the first path produced by the underlying iterator as areference point.</p><div class=\"admonition note\"><p class=\"first admonition-title\">Note</p><p class=\"last\">Since this filter <em>doesn&#8217;t yield</em> higher level directories, anysubsequent directory filtering that relies on updating the subdirectorylist will have no effect at the minimum depth. Accordingly, this filtershould only be applied <em>after</em> any directory filtering operations.</p></div><div class=\"admonition note\"><p class=\"first admonition-title\">Note</p><p>The result of using this filter is effectively the same aschaining multiple independent <a class=\"reference external\" href=\"http://docs.python.org/library/os.html#os.walk\" title=\"(in Python v2.7)\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">os.walk()</span></code></a> iterators using<a class=\"reference external\" href=\"http://docs.python.org/library/itertools.html#itertools.chain\" title=\"(in Python v2.7)\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">itertools.chain()</span></code></a>. For example, given the following directory tree:</p><div class=\"highlight-python\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tree</span> <span class=\"n\">test</span><span class=\"go\">test</span><span class=\"go\">\u251c\u2500\u2500 file1.txt</span><span class=\"go\">\u251c\u2500\u2500 file2.txt</span><span class=\"go\">\u251c\u2500\u2500 test2</span><span class=\"go\">\u2502   \u251c\u2500\u2500 file1.txt</span><span class=\"go\">\u2502   \u251c\u2500\u2500 file2.txt</span><span class=\"go\">\u2502   \u2514\u2500\u2500 test3</span><span class=\"go\">\u2514\u2500\u2500 test4</span><span class=\"go\">    \u251c\u2500\u2500 file1.txt</span><span class=\"go\">    \u2514\u2500\u2500 test5</span></pre></div></div><p class=\"last\">Then <code class=\"docutils literal\"><span class=\"pre\">min_depth(os.walk(&quot;test&quot;),</span> <span class=\"pre\">depth=1)</span></code> will produce the same outputas <code class=\"docutils literal\"><span class=\"pre\">itertools.chain(os.walk(&quot;test/test2&quot;),</span> <span class=\"pre\">os.walk(&quot;test/test4&quot;)).</span></code></p></div><p>This filter works by modifying the subdirectory lists produced by theunderlying iterator, and hence requires a top-down traversal of thedirectory hierarchy.</p></dd></dl><dl class=\"function\"><dt id=\"walkdir.handle_symlink_loops\"><code class=\"descname\">handle_symlink_loops</code><span class=\"sig-paren\">(</span><em>walk_iter</em>, <em>onloop=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/walkdir.html#handle_symlink_loops\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#walkdir.handle_symlink_loops\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Handle symlink loops when following symlinks during a walk</p><p>By default, prints a warning and then skips processingthe directory a second time.</p><p>This can be overridden by providing the <cite>onloop</cite> callback, whichaccepts the offending symlink as a parameter. Returning a true valuefrom this callback will mean that the directory is still processed,otherwise it will be skipped.</p><p>This filter skips processing subdirectories by modifying the subdirectorylists produced by the underlying iterator, and hence requires atop-down traversal of the directory hierarchy.</p></dd></dl></div></div><div class=\"section\" id=\"examples\"><h1>Examples<a class=\"headerlink\" href=\"#examples\" title=\"Permalink to this headline\">\u00b6</a></h1><p>Here are some examples of the module being used to explore the contentsof its own source tree:</p><div class=\"highlight-python\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">walkdir</span> <span class=\"kn\">import</span> <span class=\"n\">filtered_walk</span><span class=\"p\">,</span> <span class=\"n\">dir_paths</span><span class=\"p\">,</span> <span class=\"n\">all_paths</span><span class=\"p\">,</span> <span class=\"n\">file_paths</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">files</span> <span class=\"o\">=</span> <span class=\"n\">file_paths</span><span class=\"p\">(</span><span class=\"n\">filtered_walk</span><span class=\"p\">(</span><span class=\"s1\">&#39;.&#39;</span><span class=\"p\">,</span> <span class=\"n\">depth</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"gp\">... </span>                   <span class=\"n\">included_files</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;*.py&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;*.txt&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;*.rst&#39;</span><span class=\"p\">]))</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">print</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">files</span><span class=\"p\">)</span><span class=\"go\">./setup.py</span><span class=\"go\">./walkdir.py</span><span class=\"go\">./NEWS.rst</span><span class=\"go\">./test_walkdir.py</span><span class=\"go\">./LICENSE.txt</span><span class=\"go\">./VERSION.txt</span><span class=\"go\">./README.txt</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dirs</span> <span class=\"o\">=</span> <span class=\"n\">dir_paths</span><span class=\"p\">(</span><span class=\"n\">filtered_walk</span><span class=\"p\">(</span><span class=\"s1\">&#39;.&#39;</span><span class=\"p\">,</span> <span class=\"n\">depth</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">min_depth</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"gp\">... </span>                 <span class=\"n\">excluded_dirs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;__pycache__&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;.git&#39;</span><span class=\"p\">]))</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">print</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dirs</span><span class=\"p\">)</span><span class=\"go\">./docs</span><span class=\"go\">./dist</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">paths</span> <span class=\"o\">=</span> <span class=\"n\">all_paths</span><span class=\"p\">(</span><span class=\"n\">filtered_walk</span><span class=\"p\">(</span><span class=\"s1\">&#39;.&#39;</span><span class=\"p\">,</span> <span class=\"n\">depth</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"gp\">... </span>                  <span class=\"n\">included_files</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;*.py&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;*.txt&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;*.rst&#39;</span><span class=\"p\">],</span><span class=\"gp\">... </span>                  <span class=\"n\">excluded_dirs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;__pycache__&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;.git&#39;</span><span class=\"p\">]))</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">print</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">paths</span><span class=\"p\">)</span><span class=\"go\">.</span><span class=\"go\">./setup.py</span><span class=\"go\">./walkdir.py</span><span class=\"go\">./NEWS.rst</span><span class=\"go\">./test_walkdir.py</span><span class=\"go\">./LICENSE.txt</span><span class=\"go\">./VERSION.txt</span><span class=\"go\">./README.txt</span><span class=\"go\">./docs</span><span class=\"go\">./docs/index.rst</span><span class=\"go\">./docs/conf.py</span><span class=\"go\">./dist</span></pre></div></div></div><div class=\"section\" id=\"obtaining-the-module\"><h1>Obtaining the Module<a class=\"headerlink\" href=\"#obtaining-the-module\" title=\"Permalink to this headline\">\u00b6</a></h1><p>This module can be installed directly from the <a class=\"reference external\" href=\"http://pypi.python.org\">Python Package Index</a> with<a class=\"reference external\" href=\"http://www.pip-installer.org\">pip</a>:</p><div class=\"highlight-python\"><div class=\"highlight\"><pre><span></span>pip install walkdir</pre></div></div><p>Alternatively, you can download and unpack it manually from the <a class=\"reference external\" href=\"http://pypi.python.org/pypi/walkdir\">walkdirPyPI page</a>.</p><p>There are no operating system or distribution specific versions of thismodule - it is a pure Python module that should work on all platforms.</p><p>Supported Python versions are 2.6, 2.7 and 3.1+.</p><div class=\"section\" id=\"development-and-support\"><h2>Development and Support<a class=\"headerlink\" href=\"#development-and-support\" title=\"Permalink to this headline\">\u00b6</a></h2><p>WalkDir is developed and maintained on <a class=\"reference external\" href=\"https://github.com/ncoghlan/walkdir\">Gitub</a>, with continuousintegration services provided by <a class=\"reference external\" href=\"https://travis-ci.org/ncoghlan/walkdir\">Travis-CI</a>.</p><p>Problems and suggested improvements can be posted to the <a class=\"reference external\" href=\"https://github.com/ncoghlan/walkdir/issues\">issue tracker</a>.</p></div><div class=\"section\" id=\"release-history\"><h2>Release History<a class=\"headerlink\" href=\"#release-history\" title=\"Permalink to this headline\">\u00b6</a></h2><div class=\"section\" id=\"id1\"><h3>0.4.1 (2016-05-10)<a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this headline\">\u00b6</a></h3><ul class=\"simple\"><li>Include release date in release history</li></ul></div><div class=\"section\" id=\"id2\"><h3>0.4 (2016-05-10)<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this headline\">\u00b6</a></h3><ul><li><p class=\"first\"><em>SEMANTIC CHANGE</em>: to implement some of the fixes noted below, the<code class=\"docutils literal\"><span class=\"pre\">all_paths</span></code> iterator has been updated to emit paths in the followingorder for each directory produced by the underling iterator:</p><blockquote><div><ul class=\"simple\"><li>given directory if it appears to be a new root directory (i.e. it isnot a subdirectory of the current root directory)</li><li>files in the given directory</li><li>subdirectories of the given directory</li></ul></div></blockquote><p>Previously, directories were only emitted when walked by the underlingiterator, which resulted in paths being missed in some cases.</p></li><li><p class=\"first\">Thanks go to Aviv Palivoda for being the driving force behind this release,especially in addressing a variety of issues in the way directory filteringand symlinks to directories are handled.</p></li><li><p class=\"first\">Issue #12: a new API, <code class=\"docutils literal\"><span class=\"pre\">all_dir_paths</span></code> has been added which, in addition tothe directories visited by the underlying walk, also emits:</p><blockquote><div><ul class=\"simple\"><li>symlinks to directories when <code class=\"docutils literal\"><span class=\"pre\">followlinks</span></code> is disabled in theunderlying iterator</li><li>subdirectories of leaf directories when the directory tree depth ofthe underlying iterator has been limited (for example, with the<code class=\"docutils literal\"><span class=\"pre\">limit_depth</span></code> filter)</li></ul></div></blockquote></li><li><p class=\"first\">Issue #3: <code class=\"docutils literal\"><span class=\"pre\">all_paths</span></code> now correctly reports symlinks to directories asdirectory paths, even when <code class=\"docutils literal\"><span class=\"pre\">followlinks</span></code> is disabled in the underlyingiterator (fix contributed by Aviv Palivoda)</p></li><li><p class=\"first\">Issue #4: <code class=\"docutils literal\"><span class=\"pre\">all_paths</span></code> now correctly reports subdirectories at the maximumdepth when the <code class=\"docutils literal\"><span class=\"pre\">limit_depth</span></code> filter is used to trim nested subdirectories(fix contributed by Aviv Palivoda)</p></li><li><p class=\"first\">Issue #6: <code class=\"docutils literal\"><span class=\"pre\">min_depth</span></code>, <code class=\"docutils literal\"><span class=\"pre\">all_paths</span></code>, <code class=\"docutils literal\"><span class=\"pre\">dir_paths</span></code>, and <code class=\"docutils literal\"><span class=\"pre\">file_paths</span></code>all now work correctly with <code class=\"docutils literal\"><span class=\"pre\">os.fwalk</span></code> and other underlying iteratorsthat produce a sequence with more than 3 elements for each directory(fix contributed by Aviv Palivoda)</p></li><li><p class=\"first\">Issue #7: all filters now explicitly indicate in their documentation whetheror not they support being used with bottom-up traversal of the underlyingdirectory hierarchy</p></li><li><p class=\"first\">A temporary generated filesystem is now used to test symlink loop handlingand other behaviours that require a real filesystem (patch contributed byAviv Palivoda)</p></li><li><p class=\"first\">The correct error message is now emitted when an invalid maximum depth ispassed to <code class=\"docutils literal\"><span class=\"pre\">limit_depth</span></code> on Python 2.6 (fix contributed by Aviv Palivoda)</p></li><li><p class=\"first\">The correct error message is now emitted when an invalid minimum depth ispassed to <code class=\"docutils literal\"><span class=\"pre\">min_depth</span></code> on Python 2.6 (fix contributed by Aviv Palivoda)</p></li><li><p class=\"first\">development has migrated from BitBucket to GitHub</p></li></ul></div><div class=\"section\" id=\"id3\"><h3>0.3 (2012-01-31)<a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this headline\">\u00b6</a></h3><ul class=\"simple\"><li>(BitBucket) Issue #7: filter functions now pass the tuples created by underlyingiterators through without modification, using indexing rather thantuple unpacking to access values of interest. This means WalkDir nowsupports any underlying iterable that produces items where <code class=\"docutils literal\"><span class=\"pre\">x[0],</span> <span class=\"pre\">x[1],</span><span class=\"pre\">x[2]</span></code> refers to <code class=\"docutils literal\"><span class=\"pre\">dirpath,</span> <span class=\"pre\">subdirs,</span> <span class=\"pre\">files</span></code>. For example, if thethe iterable produces <code class=\"docutils literal\"><span class=\"pre\">collections.namedtuple</span></code> instances, those will bepassed through to the output of a filtered walk.</li></ul></div><div class=\"section\" id=\"id4\"><h3>0.2.1 (2012-01-17)<a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this headline\">\u00b6</a></h3><ul class=\"simple\"><li>Add MANIFEST.in so PyPI package contains all relevant files</li></ul></div><div class=\"section\" id=\"id5\"><h3>0.2 (2012-01-04)<a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this headline\">\u00b6</a></h3><ul><li><p class=\"first\">(BitBucket) Issue #6: Added a <code class=\"docutils literal\"><span class=\"pre\">min_depth</span></code> option to <code class=\"docutils literal\"><span class=\"pre\">filtered_walk</span></code> and a new<code class=\"docutils literal\"><span class=\"pre\">min_depth</span></code> filter function to make it easier to produce a list of fullsubdirectory paths</p></li><li><dl class=\"first docutils\"><dt>(BitBucket) Issue #5: Renamed path iteration convenience APIs:</dt><dd><ul class=\"first last simple\"><li><code class=\"docutils literal\"><span class=\"pre\">iter_paths</span></code> -&gt; <code class=\"docutils literal\"><span class=\"pre\">all_paths</span></code></li><li><code class=\"docutils literal\"><span class=\"pre\">iter_dir_paths</span></code> -&gt; <code class=\"docutils literal\"><span class=\"pre\">dir_paths</span></code></li><li><code class=\"docutils literal\"><span class=\"pre\">iter_file_paths</span></code> -&gt; <code class=\"docutils literal\"><span class=\"pre\">file_paths</span></code></li></ul></dd></dl></li><li><p class=\"first\">Moved version number to a VERSION.txt file (read by both docs and setup.py)</p></li><li><p class=\"first\">Added NEWS.rst (and incorporated into documentation)</p></li></ul></div><div class=\"section\" id=\"id6\"><h3>0.1 (2011-11-13)<a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this headline\">\u00b6</a></h3><ul class=\"simple\"><li>Initial release</li></ul></div></div></div><div class=\"section\" id=\"indices-and-tables\"><h1>Indices and tables<a class=\"headerlink\" href=\"#indices-and-tables\" title=\"Permalink to this headline\">\u00b6</a></h1><ul class=\"simple\"><li><a class=\"reference internal\" href=\"genindex.html\"><span>Index</span></a></li><li><a class=\"reference internal\" href=\"py-modindex.html\"><span>Module Index</span></a></li><li><a class=\"reference internal\" href=\"search.html\"><span>Search Page</span></a></li></ul></div>           </div>          </div>          <footer>    <hr/>  <div role=\"contentinfo\">    <p>        &copy; Copyright 2011, Nick Coghlan.              <span class=\"commit\">          Revision <code>aa680a67</code>.        </span>          </p>  </div>  Built with <a href=\"http://sphinx-doc.org/\">Sphinx</a> using a <a href=\"https://github.com/snide/sphinx_rtd_theme\">theme</a> provided by <a href=\"https://readthedocs.org\">Read the Docs</a>. </footer>        </div>      </div>    </section>  </div>    <div class=\"rst-versions\" data-toggle=\"rst-versions\" role=\"note\" aria-label=\"versions\">    <span class=\"rst-current-version\" data-toggle=\"rst-current-version\">      <span class=\"fa fa-book\"> Read the Docs</span>      v: stable      <span class=\"fa fa-caret-down\"></span>    </span>    <div class=\"rst-other-versions\">      <dl>        <dt>Versions</dt>                  <dd><a href=\"/en/latest/\">latest</a></dd>                  <dd><a href=\"/en/stable/\">stable</a></dd>              </dl>      <dl>        <dt>Downloads</dt>                  <dd><a href=\"//readthedocs.org/projects/walkdir/downloads/pdf/stable/\">pdf</a></dd>                  <dd><a href=\"//readthedocs.org/projects/walkdir/downloads/htmlzip/stable/\">htmlzip</a></dd>                  <dd><a href=\"//readthedocs.org/projects/walkdir/downloads/epub/stable/\">epub</a></dd>              </dl>      <dl>        <dt>On Read the Docs</dt>          <dd>            <a href=\"//readthedocs.org/projects/walkdir/?fromdocs=walkdir\">Project Home</a>          </dd>          <dd>            <a href=\"//readthedocs.org/builds/walkdir/?fromdocs=walkdir\">Builds</a>          </dd>      </dl>      <hr/>      Free document hosting provided by <a href=\"http://www.readthedocs.org\">Read the Docs</a>.    </div>  </div>      <script type=\"text/javascript\">        var DOCUMENTATION_OPTIONS = {            URL_ROOT:'./',            VERSION:'0.4.1.post1',            COLLAPSE_INDEX:false,            FILE_SUFFIX:'.html',            HAS_SOURCE:  true        };    </script>      <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/jquery/jquery-2.0.3.min.js\"></script>      <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/jquery/jquery-migrate-1.2.1.min.js\"></script>      <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/underscore.js\"></script>      <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/doctools.js\"></script>      <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/readthedocs-doc-embed.js\"></script>            <script type=\"text/javascript\">      jQuery(function () {          SphinxRtdTheme.StickyNav.enable();      });  </script>   </body></html>",
  "embeddings": []
}
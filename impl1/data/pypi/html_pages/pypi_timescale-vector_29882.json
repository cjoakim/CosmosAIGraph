{
  "libtype": "pypi",
  "libname": "timescale-vector",
  "url": "https://pypi.org/project/timescale-vector/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>timescale-vector \u00b7 PyPI</title>    <meta name=\"description\" content=\"Python library for storing vector data in Postgres\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for timescale-vector\" href=\"/rss/project/timescale-vector/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/timescale-vector/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/timescale-vector/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"timescale-vector\">    <meta property=\"og:description\" content=\"Python library for storing vector data in Postgres\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/timescale/python-vector\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:timescale/python-vector+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        timescale-vector 0.0.4      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install timescale-vector</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/timescale-vector/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2023-11-30T22:17:14+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 30, 2023</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/timescale-vector\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">Python library for storing vector data in Postgres</p><div data-html-include=\"/_includes/edit-project-button/timescale-vector\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for timescale-vector\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/timescale/python-vector\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/timescale-vector\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> Apache Software License (Apache Software License 2.0)</p>    <p><strong>Author:</strong> <a href=\"mailto:mat@timescale.com\">Matvey Arye</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      nbdev,    </span>    <span class=\"package-keyword\">      jupyter,    </span>    <span class=\"package-keyword\">      notebook,    </span>    <span class=\"package-keyword\">      python    </span>  </p>  <p>    <strong>Requires:</strong> Python &gt;=3.7  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/cevian/\" aria-label=\"cevian\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/55b5dcaf32417da22f1d4f45612c6c11a1f6194c/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f35653564363639663236366537323339373565316662383533353065623633633f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for cevian from gravatar.com\" title=\"Avatar for cevian from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            cevian          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+4+-+Beta\">            4 - Beta          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+Apache+Software+License\">            OSI Approved :: Apache Software License          </a>        </li>      </ul>    </li>    <li>      <strong>Natural Language</strong>      <ul>        <li>          <a href=\"/search/?c=Natural+Language+%3A%3A+English\">            English          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for timescale-vector\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <h1>Timescale Vector</h1><p>PostgreSQL++ for AI Applications.</p><ul><li><a href=\"https://console.cloud.timescale.com/signup?utm_campaign=vectorlaunch&amp;utm_source=github&amp;utm_medium=direct\" rel=nofollow>Signup for TimescaleVector</a>:Get 90 days free to try Timescale Vector on the Timescale cloud dataplatform. There is no self-managed version at this time.</li><li><a href=\"https://timescale.github.io/python-vector/\" rel=nofollow>Documentation</a>: Learn thekey features of Timescale Vector and how to use them.</li><li><a href=\"https://timescale.github.io/python-vector/tsv_python_getting_started_tutorial.html\" rel=nofollow>Getting StartedTutorial</a>:Learn how to use Timescale Vector for semantic search on a real-worlddataset.</li><li><a href=\"https://www.timescale.com/blog/how-we-made-postgresql-the-best-vector-database/?utm_campaign=vectorlaunch&amp;utm_source=github&amp;utm_medium=direct\" rel=nofollow>Learnmore</a>:Learn more about Timescale Vector, how it works and why we built it.</li></ul><p>If you prefer to use an LLM development or data framework, see TimescaleVector\u2019s integrations with<a href=\"https://python.langchain.com/docs/integrations/vectorstores/timescalevector\" rel=nofollow>LangChain</a>and<a href=\"https://gpt-index.readthedocs.io/en/stable/examples/vector_stores/Timescalevector.html\" rel=nofollow>LlamaIndex</a></p><h2>Install</h2><p>To install the main library use:</p><pre lang=sh>pip<span class=w> </span>install<span class=w> </span>timescale_vector</pre><p>We also use <code>dotenv</code> in our examples for passing around secrets andkeys. You can install that with:</p><pre lang=sh>pip<span class=w> </span>install<span class=w> </span>python-dotenv</pre><h2>Basic usage</h2><p>First, import all the necessary libraries:</p><pre lang=python3><span class=kn>from</span> <span class=nn>dotenv</span> <span class=kn>import</span> <span class=n>load_dotenv</span><span class=p>,</span> <span class=n>find_dotenv</span><span class=kn>import</span> <span class=nn>os</span><span class=kn>from</span> <span class=nn>timescale_vector</span> <span class=kn>import</span> <span class=n>client</span><span class=kn>import</span> <span class=nn>uuid</span><span class=kn>from</span> <span class=nn>datetime</span> <span class=kn>import</span> <span class=n>datetime</span><span class=p>,</span> <span class=n>timedelta</span></pre><p>Load up your PostgreSQL credentials. Safest way is with a .env file:</p><pre lang=python3><span class=n>_</span> <span class=o>=</span> <span class=n>load_dotenv</span><span class=p>(</span><span class=n>find_dotenv</span><span class=p>(),</span> <span class=n>override</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span> <span class=n>service_url</span>  <span class=o>=</span> <span class=n>os</span><span class=o>.</span><span class=n>environ</span><span class=p>[</span><span class=s1>'TIMESCALE_SERVICE_URL'</span><span class=p>]</span></pre><p>Next, create the client. In this tutorial, we will use the sync client.But we have an async client as well (with an identical interface thatuses async functions).</p><p>The client constructor takes three required arguments:</p><table><thead><tr><th>name</th><th>description</th></tr></thead><tbody><tr><td>service_url</td><td>Timescale service URL / connection string</td></tr><tr><td>table_name</td><td>Name of the table to use for storing the embeddings. Think of this as the collection name</td></tr><tr><td>num_dimensions</td><td>Number of dimensions in the vector</td></tr></tbody></table><pre lang=python3><span class=n>vec</span>  <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>Sync</span><span class=p>(</span><span class=n>service_url</span><span class=p>,</span> <span class=s2>\"my_data\"</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span></pre><p>Next, create the tables for the collection:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>create_tables</span><span class=p>()</span></pre><p>Next, insert some data. The data record contains:</p><ul><li>A UUID to uniquely identify the embedding</li><li>A JSON blob of metadata about the embedding</li><li>The text the embedding represents</li><li>The embedding itself</li></ul><p>Because this data includes UUIDs which become primary keys, we ingestwith upserts.</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>upsert</span><span class=p>([</span>\\    <span class=p>(</span><span class=n>uuid</span><span class=o>.</span><span class=n>uuid1</span><span class=p>(),</span> <span class=p>{</span><span class=s2>\"animal\"</span><span class=p>:</span> <span class=s2>\"fox\"</span><span class=p>},</span> <span class=s2>\"the brown fox\"</span><span class=p>,</span> <span class=p>[</span><span class=mf>1.0</span><span class=p>,</span><span class=mf>1.3</span><span class=p>]),</span>\\    <span class=p>(</span><span class=n>uuid</span><span class=o>.</span><span class=n>uuid1</span><span class=p>(),</span> <span class=p>{</span><span class=s2>\"animal\"</span><span class=p>:</span> <span class=s2>\"fox\"</span><span class=p>,</span> <span class=s2>\"action\"</span><span class=p>:</span><span class=s2>\"jump\"</span><span class=p>},</span> <span class=s2>\"jumped over the\"</span><span class=p>,</span> <span class=p>[</span><span class=mf>1.0</span><span class=p>,</span><span class=mf>10.8</span><span class=p>]),</span>\\<span class=p>])</span></pre><p>You can now create a vector index to speed up similarity search:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>create_embedding_index</span><span class=p>(</span><span class=n>client</span><span class=o>.</span><span class=n>TimescaleVectorIndex</span><span class=p>())</span></pre><p>Now, you can query for similar items:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>])</span></pre><pre><code>[[UUID('73d05df0-84c1-11ee-98da-6ee10b77fd08'),  {'action': 'jump', 'animal': 'fox'},  'jumped over the',  array([ 1. , 10.8], dtype=float32),  0.00016793422934946456], [UUID('73d05d6e-84c1-11ee-98da-6ee10b77fd08'),  {'animal': 'fox'},  'the brown fox',  array([1. , 1.3], dtype=float32),  0.14489260377438218]]</code></pre><p>There are many search options which we will cover below in the<code>Advanced search</code> section.</p><p>As one example, we will return one item using a similarity searchconstrained by a metadata filter.</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>1</span><span class=p>,</span> <span class=nb>filter</span><span class=o>=</span><span class=p>{</span><span class=s2>\"action\"</span><span class=p>:</span> <span class=s2>\"jump\"</span><span class=p>})</span></pre><pre><code>[[UUID('73d05df0-84c1-11ee-98da-6ee10b77fd08'),  {'action': 'jump', 'animal': 'fox'},  'jumped over the',  array([ 1. , 10.8], dtype=float32),  0.00016793422934946456]]</code></pre><p>The returned records contain 5 fields:</p><table><thead><tr><th>name</th><th>description</th></tr></thead><tbody><tr><td>id</td><td>The UUID of the record</td></tr><tr><td>metadata</td><td>The JSON metadata associated with the record</td></tr><tr><td>contents</td><td>the text content that was embedded</td></tr><tr><td>embedding</td><td>The vector embedding</td></tr><tr><td>distance</td><td>The distance between the query embedding and the vector</td></tr></tbody></table><p>You can access the fields by simply using the record as a dictionarykeyed on the field name:</p><pre lang=python3><span class=n>records</span> <span class=o>=</span> <span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>1</span><span class=p>,</span> <span class=nb>filter</span><span class=o>=</span><span class=p>{</span><span class=s2>\"action\"</span><span class=p>:</span> <span class=s2>\"jump\"</span><span class=p>})</span><span class=p>(</span><span class=n>records</span><span class=p>[</span><span class=mi>0</span><span class=p>][</span><span class=s2>\"id\"</span><span class=p>],</span><span class=n>records</span><span class=p>[</span><span class=mi>0</span><span class=p>][</span><span class=s2>\"metadata\"</span><span class=p>],</span> <span class=n>records</span><span class=p>[</span><span class=mi>0</span><span class=p>][</span><span class=s2>\"contents\"</span><span class=p>],</span> <span class=n>records</span><span class=p>[</span><span class=mi>0</span><span class=p>][</span><span class=s2>\"embedding\"</span><span class=p>],</span> <span class=n>records</span><span class=p>[</span><span class=mi>0</span><span class=p>][</span><span class=s2>\"distance\"</span><span class=p>])</span></pre><pre><code>(UUID('73d05df0-84c1-11ee-98da-6ee10b77fd08'), {'action': 'jump', 'animal': 'fox'}, 'jumped over the', array([ 1. , 10.8], dtype=float32), 0.00016793422934946456)</code></pre><p>You can delete by ID:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>delete_by_ids</span><span class=p>([</span><span class=n>records</span><span class=p>[</span><span class=mi>0</span><span class=p>][</span><span class=s2>\"id\"</span><span class=p>]])</span></pre><p>Or you can delete by metadata filters:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>delete_by_metadata</span><span class=p>({</span><span class=s2>\"action\"</span><span class=p>:</span> <span class=s2>\"jump\"</span><span class=p>})</span></pre><p>To delete all records use:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>delete_all</span><span class=p>()</span></pre><h2>Advanced usage</h2><p>In this section, we will go into more detail about our feature. We willcover:</p><ol><li>Search filter options - how to narrow your search by additionalconstraints</li><li>Indexing - how to speed up your similarity queries</li><li>Time-based partitioning - how to optimize similarity queries thatfilter on time</li><li>Setting different distance types to use in distance calculations</li></ol><h3>Search options</h3><p>The <code>search</code> function is very versatile and allows you to search for theright vector in a wide variety of ways. We\u2019ll describe the search optionin 3 parts:</p><ol><li>We\u2019ll cover basic similarity search.</li><li>Then, we\u2019ll describe how to filter your search based on theassociated metadata.</li><li>Finally, we\u2019ll talk about filtering on time when time-partitioningis enabled.</li></ol><p>Let\u2019s use the following data for our example:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>upsert</span><span class=p>([</span>\\    <span class=p>(</span><span class=n>uuid</span><span class=o>.</span><span class=n>uuid1</span><span class=p>(),</span> <span class=p>{</span><span class=s2>\"animal\"</span><span class=p>:</span><span class=s2>\"fox\"</span><span class=p>,</span> <span class=s2>\"action\"</span><span class=p>:</span> <span class=s2>\"sit\"</span><span class=p>,</span> <span class=s2>\"times\"</span><span class=p>:</span><span class=mi>1</span><span class=p>},</span> <span class=s2>\"the brown fox\"</span><span class=p>,</span> <span class=p>[</span><span class=mf>1.0</span><span class=p>,</span><span class=mf>1.3</span><span class=p>]),</span>\\    <span class=p>(</span><span class=n>uuid</span><span class=o>.</span><span class=n>uuid1</span><span class=p>(),</span>  <span class=p>{</span><span class=s2>\"animal\"</span><span class=p>:</span><span class=s2>\"fox\"</span><span class=p>,</span> <span class=s2>\"action\"</span><span class=p>:</span> <span class=s2>\"jump\"</span><span class=p>,</span> <span class=s2>\"times\"</span><span class=p>:</span><span class=mi>100</span><span class=p>},</span> <span class=s2>\"jumped over the\"</span><span class=p>,</span> <span class=p>[</span><span class=mf>1.0</span><span class=p>,</span><span class=mf>10.8</span><span class=p>]),</span>\\<span class=p>])</span></pre><p>The basic query looks like:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>])</span></pre><pre><code>[[UUID('7487af96-84c1-11ee-98da-6ee10b77fd08'),  {'times': 100, 'action': 'jump', 'animal': 'fox'},  'jumped over the',  array([ 1. , 10.8], dtype=float32),  0.00016793422934946456], [UUID('7487af14-84c1-11ee-98da-6ee10b77fd08'),  {'times': 1, 'action': 'sit', 'animal': 'fox'},  'the brown fox',  array([1. , 1.3], dtype=float32),  0.14489260377438218]]</code></pre><p>You could provide a limit for the number of items returned:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>1</span><span class=p>)</span></pre><pre><code>[[UUID('7487af96-84c1-11ee-98da-6ee10b77fd08'),  {'times': 100, 'action': 'jump', 'animal': 'fox'},  'jumped over the',  array([ 1. , 10.8], dtype=float32),  0.00016793422934946456]]</code></pre><h4>Narrowing your search by metadata</h4><p>We have two main ways to filter results by metadata: - <code>filters</code> forequality matches on metadata. - <code>predicates</code> for complex conditions onmetadata.</p><p>Filters are more likely to be performant but are more limited in whatthey can express, so we suggest using those if your use case allows it.</p><h5>Filters</h5><p>You could specify a match on the metadata as a dictionary where all keyshave to match the provided values (keys not in the filter areunconstrained):</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>1</span><span class=p>,</span> <span class=nb>filter</span><span class=o>=</span><span class=p>{</span><span class=s2>\"action\"</span><span class=p>:</span> <span class=s2>\"sit\"</span><span class=p>})</span></pre><pre><code>[[UUID('7487af14-84c1-11ee-98da-6ee10b77fd08'),  {'times': 1, 'action': 'sit', 'animal': 'fox'},  'the brown fox',  array([1. , 1.3], dtype=float32),  0.14489260377438218]]</code></pre><p>You can also specify a list of filter dictionaries, where an item isreturned if it matches any dict:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>2</span><span class=p>,</span> <span class=nb>filter</span><span class=o>=</span><span class=p>[{</span><span class=s2>\"action\"</span><span class=p>:</span> <span class=s2>\"jump\"</span><span class=p>},</span> <span class=p>{</span><span class=s2>\"animal\"</span><span class=p>:</span> <span class=s2>\"fox\"</span><span class=p>}])</span></pre><pre><code>[[UUID('7487af96-84c1-11ee-98da-6ee10b77fd08'),  {'times': 100, 'action': 'jump', 'animal': 'fox'},  'jumped over the',  array([ 1. , 10.8], dtype=float32),  0.00016793422934946456], [UUID('7487af14-84c1-11ee-98da-6ee10b77fd08'),  {'times': 1, 'action': 'sit', 'animal': 'fox'},  'the brown fox',  array([1. , 1.3], dtype=float32),  0.14489260377438218]]</code></pre><h5>Predicates</h5><p>Predicates allow for more complex search conditions. For example, youcould use greater than and less than conditions on numeric values.</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>2</span><span class=p>,</span> <span class=n>predicates</span><span class=o>=</span><span class=n>client</span><span class=o>.</span><span class=n>Predicates</span><span class=p>(</span><span class=s2>\"times\"</span><span class=p>,</span> <span class=s2>\"&gt;\"</span><span class=p>,</span> <span class=mi>1</span><span class=p>))</span></pre><pre><code>[[UUID('7487af96-84c1-11ee-98da-6ee10b77fd08'),  {'times': 100, 'action': 'jump', 'animal': 'fox'},  'jumped over the',  array([ 1. , 10.8], dtype=float32),  0.00016793422934946456]]</code></pre><p><a href=\"https://timescale.github.io/python-vector/vector.html#predicates\" rel=nofollow><code>Predicates</code></a>objects are defined by the name of the metadata key, an operator, and avalue.</p><p>The supported operators are: <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code></p><p>The type of the values determines the type of comparison to perform. Forexample, passing in <code>\"Sam\"</code> (a string) will do a string comparison whilea <code>10</code> (an int) will perform an integer comparison while a <code>10.0</code>(float) will do a float comparison. It is important to note that using avalue of <code>\"10\"</code> will do a string comparison as well so it\u2019s important touse the right type. Supported Python types are: <code>str</code>, <code>int</code>, and<code>float</code>. One more example with a string comparison:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>2</span><span class=p>,</span> <span class=n>predicates</span><span class=o>=</span><span class=n>client</span><span class=o>.</span><span class=n>Predicates</span><span class=p>(</span><span class=s2>\"action\"</span><span class=p>,</span> <span class=s2>\"==\"</span><span class=p>,</span> <span class=s2>\"jump\"</span><span class=p>))</span></pre><pre><code>[[UUID('7487af96-84c1-11ee-98da-6ee10b77fd08'),  {'times': 100, 'action': 'jump', 'animal': 'fox'},  'jumped over the',  array([ 1. , 10.8], dtype=float32),  0.00016793422934946456]]</code></pre><p>The real power of predicates is that they can also be combined using the<code>&amp;</code> operator (for combining predicates with AND semantics) and <code>|</code>(forcombining using OR semantic). So you can do:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>2</span><span class=p>,</span> <span class=n>predicates</span><span class=o>=</span><span class=n>client</span><span class=o>.</span><span class=n>Predicates</span><span class=p>(</span><span class=s2>\"action\"</span><span class=p>,</span> <span class=s2>\"==\"</span><span class=p>,</span> <span class=s2>\"jump\"</span><span class=p>)</span> <span class=o>&amp;</span> <span class=n>client</span><span class=o>.</span><span class=n>Predicates</span><span class=p>(</span><span class=s2>\"times\"</span><span class=p>,</span> <span class=s2>\"&gt;\"</span><span class=p>,</span> <span class=mi>1</span><span class=p>))</span></pre><pre><code>[[UUID('7487af96-84c1-11ee-98da-6ee10b77fd08'),  {'times': 100, 'action': 'jump', 'animal': 'fox'},  'jumped over the',  array([ 1. , 10.8], dtype=float32),  0.00016793422934946456]]</code></pre><p>Just for sanity, let\u2019s show a case where no results are returned becauseor predicates:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>2</span><span class=p>,</span> <span class=n>predicates</span><span class=o>=</span><span class=n>client</span><span class=o>.</span><span class=n>Predicates</span><span class=p>(</span><span class=s2>\"action\"</span><span class=p>,</span> <span class=s2>\"==\"</span><span class=p>,</span> <span class=s2>\"jump\"</span><span class=p>)</span> <span class=o>&amp;</span> <span class=n>client</span><span class=o>.</span><span class=n>Predicates</span><span class=p>(</span><span class=s2>\"times\"</span><span class=p>,</span> <span class=s2>\"==\"</span><span class=p>,</span> <span class=mi>1</span><span class=p>))</span></pre><pre><code>[]</code></pre><p>And one more example where we define the predicates as a variable anduse grouping with parenthesis:</p><pre lang=python3><span class=n>my_predicates</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>Predicates</span><span class=p>(</span><span class=s2>\"action\"</span><span class=p>,</span> <span class=s2>\"==\"</span><span class=p>,</span> <span class=s2>\"jump\"</span><span class=p>)</span> <span class=o>&amp;</span> <span class=p>(</span><span class=n>client</span><span class=o>.</span><span class=n>Predicates</span><span class=p>(</span><span class=s2>\"times\"</span><span class=p>,</span> <span class=s2>\"==\"</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>client</span><span class=o>.</span><span class=n>Predicates</span><span class=p>(</span><span class=s2>\"times\"</span><span class=p>,</span> <span class=s2>\"&gt;\"</span><span class=p>,</span> <span class=mi>1</span><span class=p>))</span><span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>2</span><span class=p>,</span> <span class=n>predicates</span><span class=o>=</span><span class=n>my_predicates</span><span class=p>)</span></pre><pre><code>[[UUID('7487af96-84c1-11ee-98da-6ee10b77fd08'),  {'times': 100, 'action': 'jump', 'animal': 'fox'},  'jumped over the',  array([ 1. , 10.8], dtype=float32),  0.00016793422934946456]]</code></pre><p>We also have some semantic sugar for combining many predicates with ANDsemantics. You can pass in multiple 3-tuples to<a href=\"https://timescale.github.io/python-vector/vector.html#predicates\" rel=nofollow><code>Predicates</code></a>:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>2</span><span class=p>,</span> <span class=n>predicates</span><span class=o>=</span><span class=n>client</span><span class=o>.</span><span class=n>Predicates</span><span class=p>((</span><span class=s2>\"action\"</span><span class=p>,</span> <span class=s2>\"==\"</span><span class=p>,</span> <span class=s2>\"jump\"</span><span class=p>),</span> <span class=p>(</span><span class=s2>\"times\"</span><span class=p>,</span> <span class=s2>\"&gt;\"</span><span class=p>,</span> <span class=mi>10</span><span class=p>)))</span></pre><pre><code>[[UUID('7487af96-84c1-11ee-98da-6ee10b77fd08'),  {'times': 100, 'action': 'jump', 'animal': 'fox'},  'jumped over the',  array([ 1. , 10.8], dtype=float32),  0.00016793422934946456]]</code></pre><h4>Filter your search by time</h4><p>When using <code>time-partitioning</code>(see below). You can very efficientlyfilter your search by time. Time-partitioning makes a timestamp embeddedas part of the UUID-based ID associated with an embedding. Let us firstcreate a collection with time partitioning and insert some data (oneitem from January 2018 and another in January 2019):</p><pre lang=python3><span class=n>tpvec</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>Sync</span><span class=p>(</span><span class=n>service_url</span><span class=p>,</span> <span class=s2>\"time_partitioned_table\"</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=n>time_partition_interval</span><span class=o>=</span><span class=n>timedelta</span><span class=p>(</span><span class=n>hours</span><span class=o>=</span><span class=mi>6</span><span class=p>))</span><span class=n>tpvec</span><span class=o>.</span><span class=n>create_tables</span><span class=p>()</span><span class=n>specific_datetime</span> <span class=o>=</span> <span class=n>datetime</span><span class=p>(</span><span class=mi>2018</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>12</span><span class=p>,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>)</span><span class=n>tpvec</span><span class=o>.</span><span class=n>upsert</span><span class=p>([</span>\\    <span class=p>(</span><span class=n>client</span><span class=o>.</span><span class=n>uuid_from_time</span><span class=p>(</span><span class=n>specific_datetime</span><span class=p>),</span> <span class=p>{</span><span class=s2>\"animal\"</span><span class=p>:</span><span class=s2>\"fox\"</span><span class=p>,</span> <span class=s2>\"action\"</span><span class=p>:</span> <span class=s2>\"sit\"</span><span class=p>,</span> <span class=s2>\"times\"</span><span class=p>:</span><span class=mi>1</span><span class=p>},</span> <span class=s2>\"the brown fox\"</span><span class=p>,</span> <span class=p>[</span><span class=mf>1.0</span><span class=p>,</span><span class=mf>1.3</span><span class=p>]),</span>\\    <span class=p>(</span><span class=n>client</span><span class=o>.</span><span class=n>uuid_from_time</span><span class=p>(</span><span class=n>specific_datetime</span><span class=o>+</span><span class=n>timedelta</span><span class=p>(</span><span class=n>days</span><span class=o>=</span><span class=mi>365</span><span class=p>)),</span>  <span class=p>{</span><span class=s2>\"animal\"</span><span class=p>:</span><span class=s2>\"fox\"</span><span class=p>,</span> <span class=s2>\"action\"</span><span class=p>:</span> <span class=s2>\"jump\"</span><span class=p>,</span> <span class=s2>\"times\"</span><span class=p>:</span><span class=mi>100</span><span class=p>},</span> <span class=s2>\"jumped over the\"</span><span class=p>,</span> <span class=p>[</span><span class=mf>1.0</span><span class=p>,</span><span class=mf>10.8</span><span class=p>]),</span>\\<span class=p>])</span></pre><p>Then, you can filter using the timestamps by specifing a<code>uuid_time_filter</code>:</p><pre lang=python3><span class=n>tpvec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>4</span><span class=p>,</span> <span class=n>uuid_time_filter</span><span class=o>=</span><span class=n>client</span><span class=o>.</span><span class=n>UUIDTimeRange</span><span class=p>(</span><span class=n>specific_datetime</span><span class=p>,</span> <span class=n>specific_datetime</span><span class=o>+</span><span class=n>timedelta</span><span class=p>(</span><span class=n>days</span><span class=o>=</span><span class=mi>1</span><span class=p>)))</span></pre><pre><code>[[UUID('33c52800-ef15-11e7-be03-4f1f9a1bde5a'),  {'times': 1, 'action': 'sit', 'animal': 'fox'},  'the brown fox',  array([1. , 1.3], dtype=float32),  0.14489260377438218]]</code></pre><p>A<a href=\"https://timescale.github.io/python-vector/vector.html#uuidtimerange\" rel=nofollow><code>UUIDTimeRange</code></a>can specify a start_date or end_date or both(as in the example above).Specifying only the start_date or end_date leaves the other endunconstrained.</p><pre lang=python3><span class=n>tpvec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>4</span><span class=p>,</span> <span class=n>uuid_time_filter</span><span class=o>=</span><span class=n>client</span><span class=o>.</span><span class=n>UUIDTimeRange</span><span class=p>(</span><span class=n>start_date</span><span class=o>=</span><span class=n>specific_datetime</span><span class=p>))</span></pre><pre><code>[[UUID('ac8be800-0de6-11e9-889a-5eec84ba8a7b'),  {'times': 100, 'action': 'jump', 'animal': 'fox'},  'jumped over the',  array([ 1. , 10.8], dtype=float32),  0.00016793422934946456], [UUID('33c52800-ef15-11e7-be03-4f1f9a1bde5a'),  {'times': 1, 'action': 'sit', 'animal': 'fox'},  'the brown fox',  array([1. , 1.3], dtype=float32),  0.14489260377438218]]</code></pre><p>You have the option to define the inclusivity of the start and end dateswith the <code>start_inclusive</code> and <code>end_inclusive</code> parameters. Setting<code>start_inclusive</code> to true results in comparisons using the <code>&gt;=</code>operator, whereas setting it to false applies the <code>&gt;</code> operator. Bydefault, the start date is inclusive, while the end date is exclusive.One example:</p><pre lang=python3><span class=n>tpvec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>4</span><span class=p>,</span> <span class=n>uuid_time_filter</span><span class=o>=</span><span class=n>client</span><span class=o>.</span><span class=n>UUIDTimeRange</span><span class=p>(</span><span class=n>start_date</span><span class=o>=</span><span class=n>specific_datetime</span><span class=p>,</span> <span class=n>start_inclusive</span><span class=o>=</span><span class=kc>False</span><span class=p>))</span></pre><pre><code>[[UUID('ac8be800-0de6-11e9-889a-5eec84ba8a7b'),  {'times': 100, 'action': 'jump', 'animal': 'fox'},  'jumped over the',  array([ 1. , 10.8], dtype=float32),  0.00016793422934946456]]</code></pre><p>Notice how the results are different when we use the<code>start_inclusive=False</code> option because the first row has the exacttimestamp specified by <code>start_date</code>.</p><p>We\u2019ve also made it easy to integrate time filters using the <code>filter</code> and<code>predicates</code> parameters described above using special reserved key namesto make it appear that the timestamps are part of your metadata. Wefound this useful when integrating with other systems that just want tospecify a set of filters (often these are \u201cauto retriever\u201d typesystems). The reserved key names are <code>__start_date</code> and <code>__end_date</code> forfilters and <code>__uuid_timestamp</code> for predicates. Some examples below:</p><pre lang=python3><span class=n>tpvec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>4</span><span class=p>,</span> <span class=nb>filter</span><span class=o>=</span><span class=p>{</span> <span class=s2>\"__start_date\"</span><span class=p>:</span> <span class=n>specific_datetime</span><span class=p>,</span> <span class=s2>\"__end_date\"</span><span class=p>:</span> <span class=n>specific_datetime</span><span class=o>+</span><span class=n>timedelta</span><span class=p>(</span><span class=n>days</span><span class=o>=</span><span class=mi>1</span><span class=p>)})</span></pre><pre><code>[[UUID('33c52800-ef15-11e7-be03-4f1f9a1bde5a'),  {'times': 1, 'action': 'sit', 'animal': 'fox'},  'the brown fox',  array([1. , 1.3], dtype=float32),  0.14489260377438218]]</code></pre><pre lang=python3><span class=n>tpvec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>9.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>4</span><span class=p>,</span>              <span class=n>predicates</span><span class=o>=</span><span class=n>client</span><span class=o>.</span><span class=n>Predicates</span><span class=p>(</span><span class=s2>\"__uuid_timestamp\"</span><span class=p>,</span> <span class=s2>\"&gt;\"</span><span class=p>,</span> <span class=n>specific_datetime</span><span class=p>)</span> <span class=o>&amp;</span> <span class=n>client</span><span class=o>.</span><span class=n>Predicates</span><span class=p>(</span><span class=s2>\"__uuid_timestamp\"</span><span class=p>,</span> <span class=s2>\"&lt;\"</span><span class=p>,</span> <span class=n>specific_datetime</span><span class=o>+</span><span class=n>timedelta</span><span class=p>(</span><span class=n>days</span><span class=o>=</span><span class=mi>1</span><span class=p>)))</span></pre><pre><code>[[UUID('33c52800-ef15-11e7-be03-4f1f9a1bde5a'),  {'times': 1, 'action': 'sit', 'animal': 'fox'},  'the brown fox',  array([1. , 1.3], dtype=float32),  0.14489260377438218]]</code></pre><h3>Indexing</h3><p>Indexing speeds up queries over your data. By default, we set up indexesto query your data by the UUID and the metadata.</p><p>But to speed up similarity search based on the embeddings, you have tocreate additional indexes.</p><p>Note that if performing a query without an index, you will always get anexact result, but the query will be slow (it has to read all of the datayou store for every query). With an index, your queries will beorder-of-magnitude faster, but the results are approximate (becausethere are no known indexing techniques that are exact).</p><p>Nevertheless, there are excellent approximate algorithms. There are 3different indexing algorithms available on the Timescale platform:Timescale Vector index, pgvector HNSW, and pgvector ivfflat. Below arethe trade-offs between these algorithms:</p><table><thead><tr><th>Algorithm</th><th>Build speed</th><th>Query speed</th><th>Need to rebuild after updates</th></tr></thead><tbody><tr><td>timescale vector</td><td>Slow</td><td>Fastest</td><td>No</td></tr><tr><td>pgvector hnsw</td><td>Slowest</td><td>Faster</td><td>No</td></tr><tr><td>pgvector ivfflat</td><td>Fastest</td><td>Slowest</td><td>Yes</td></tr></tbody></table><p>You can see<a href=\"https://www.timescale.com/blog/how-we-made-postgresql-the-best-vector-database/\" rel=nofollow>benchmarks</a>on our blog.</p><p>We recommend using the Timescale Vector index for most use cases. Thiscan be created with:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>create_embedding_index</span><span class=p>(</span><span class=n>client</span><span class=o>.</span><span class=n>TimescaleVectorIndex</span><span class=p>())</span></pre><p>Indexes are created for a particular distance metric type. So it isimportant that the same distance metric is set on the client duringindex creation as it is during queries. See the <code>distance type</code> sectionbelow.</p><p>Each of these indexes has a set of build-time options for controllingthe speed/accuracy trade-off when creating the index and an additionalquery-time option for controlling accuracy during a particular query. Wehave smart defaults for all of these options but will also describe thedetails below so that you can adjust these options manually.</p><h4>Timescale Vector index</h4><p>The Timescale Vector index is a graph-based algorithm that uses the<a href=\"https://github.com/microsoft/DiskANN\" rel=nofollow>DiskANN</a> algorithm. You can readmore about it on our<a href=\"https://www.timescale.com/blog/how-we-made-postgresql-the-best-vector-database/\" rel=nofollow>blog</a>announcing its release.</p><p>To create this index, run:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>create_embedding_index</span><span class=p>(</span><span class=n>client</span><span class=o>.</span><span class=n>TimescaleVectorIndex</span><span class=p>())</span></pre><p>The above command will create the index using smart defaults. There area number of parameters you could tune to adjust the accuracy/speedtrade-off.</p><p>The parameters you can set at index build time are:</p><table><thead><tr><th>Parameter name</th><th>Description</th><th>Default value</th></tr></thead><tbody><tr><td>num_neighbors</td><td>Sets the maximum number of neighbors per node. Higher values increase accuracy but make the graph traversal slower.</td><td>50</td></tr><tr><td>search_list_size</td><td>This is the S parameter used in the greedy search algorithm used during construction. Higher values improve graph quality at the cost of slower index builds.</td><td>100</td></tr><tr><td>max_alpha</td><td>Is the alpha parameter in the algorithm. Higher values improve graph quality at the cost of slower index builds.</td><td>1.0</td></tr></tbody></table><p>To set these parameters, you could run:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>create_embedding_index</span><span class=p>(</span><span class=n>client</span><span class=o>.</span><span class=n>TimescaleVectorIndex</span><span class=p>(</span><span class=n>num_neighbors</span><span class=o>=</span><span class=mi>50</span><span class=p>,</span> <span class=n>search_list_size</span><span class=o>=</span><span class=mi>100</span><span class=p>,</span> <span class=n>max_alpha</span><span class=o>=</span><span class=mf>1.0</span><span class=p>))</span></pre><p>You can also set a parameter to control the accuracy vs.\u00a0query speedtrade-off at query time. The parameter is set in the <code>search()</code> functionusing the <code>query_params</code> argment. You can set the<code>search_list_size</code>(default: 100). This is the number of additionalcandidates considered during the graph search at query time. Highervalues improve query accuracy while making the query slower.</p><p>You can specify this value during search as follows:</p><pre lang=python3><span class=c1># vec.search([1.0, 9.0], limit=4, query_params=TimescaleVectorIndexParams(search_list_size=10))</span></pre><p>To drop the index, run:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>drop_embedding_index</span><span class=p>()</span></pre><h4>pgvector HNSW index</h4><p>Pgvector provides a graph-based indexing algorithm based on the popular<a href=\"https://arxiv.org/abs/1603.09320\" rel=nofollow>HNSW algorithm</a>.</p><p>To create this index, run:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>create_embedding_index</span><span class=p>(</span><span class=n>client</span><span class=o>.</span><span class=n>HNSWIndex</span><span class=p>())</span></pre><p>The above command will create the index using smart defaults. There area number of parameters you could tune to adjust the accuracy/speedtrade-off.</p><p>The parameters you can set at index build time are:</p><table><thead><tr><th>Parameter name</th><th>Description</th><th>Default value</th></tr></thead><tbody><tr><td>m</td><td>Represents the maximum number of connections per layer. Think of these connections as edges created for each node during graph construction. Increasing m increases accuracy but also increases index build time and size.</td><td>16</td></tr><tr><td>ef_construction</td><td>Represents the size of the dynamic candidate list for constructing the graph. It influences the trade-off between index quality and construction speed. Increasing ef_construction enables more accurate search results at the expense of lengthier index build times.</td><td>64</td></tr></tbody></table><p>To set these parameters, you could run:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>create_embedding_index</span><span class=p>(</span><span class=n>client</span><span class=o>.</span><span class=n>HNSWIndex</span><span class=p>(</span><span class=n>m</span><span class=o>=</span><span class=mi>16</span><span class=p>,</span> <span class=n>ef_construction</span><span class=o>=</span><span class=mi>64</span><span class=p>))</span></pre><p>You can also set a parameter to control the accuracy vs.\u00a0query speedtrade-off at query time. The parameter is set in the <code>search()</code> functionusing the <code>query_params</code> argument. You can set the <code>ef_search</code>(default:40). This parameter specifies the size of the dynamic candidate listused during search. Higher values improve query accuracy while makingthe query slower.</p><p>You can specify this value during search as follows:</p><pre lang=python3><span class=c1># vec.search([1.0, 9.0], limit=4, query_params=HNSWIndexParams(ef_search=10))</span></pre><p>To drop the index run:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>drop_embedding_index</span><span class=p>()</span></pre><h4>pgvector ivfflat index</h4><p>Pgvector provides a clustering-based indexing algorithm. Our <a href=\"https://www.timescale.com/blog/nearest-neighbor-indexes-what-are-ivfflat-indexes-in-pgvector-and-how-do-they-work/\" rel=nofollow>blogpost</a>describes how it works in detail. It provides the fastest index-buildspeed but the slowest query speeds of any indexing algorithm.</p><p>To create this index, run:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>create_embedding_index</span><span class=p>(</span><span class=n>client</span><span class=o>.</span><span class=n>IvfflatIndex</span><span class=p>())</span></pre><p>Note: <em>ivfflat should never be created on empty tables</em> because it needsto cluster data, and that only happens when an index is first created,not when new rows are inserted or modified. Also, if your tableundergoes a lot of modifications, you will need to rebuild this indexoccasionally to maintain good accuracy. See our <a href=\"https://www.timescale.com/blog/nearest-neighbor-indexes-what-are-ivfflat-indexes-in-pgvector-and-how-do-they-work/\" rel=nofollow>blogpost</a>for details.</p><p>Pgvector ivfflat has a <code>lists</code> index parameter that is automatically setwith a smart default based on the number of rows in your table. If youknow that you\u2019ll have a different table size, you can specify the numberof records to use for calculating the <code>lists</code> parameter as follows:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>create_embedding_index</span><span class=p>(</span><span class=n>client</span><span class=o>.</span><span class=n>IvfflatIndex</span><span class=p>(</span><span class=n>num_records</span><span class=o>=</span><span class=mi>1000000</span><span class=p>))</span></pre><p>You can also set the <code>lists</code> parameter directly:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>create_embedding_index</span><span class=p>(</span><span class=n>client</span><span class=o>.</span><span class=n>IvfflatIndex</span><span class=p>(</span><span class=n>num_lists</span><span class=o>=</span><span class=mi>100</span><span class=p>))</span></pre><p>You can also set a parameter to control the accuracy vs.\u00a0query speedtrade-off at query time. The parameter is set in the <code>search()</code> functionusing the <code>query_params</code> argument. You can set the <code>probes</code>. Thisparameter specifies the number of clusters searched during a query. Itis recommended to set this parameter to <code>sqrt(lists)</code> where lists is the<code>num_list</code> parameter used above during index creation. Higher valuesimprove query accuracy while making the query slower.</p><p>You can specify this value during search as follows:</p><pre lang=python3><span class=c1># vec.search([1.0, 9.0], limit=4, query_params=IvfflatIndexParams(probes=10))</span></pre><p>To drop the index, run:</p><pre lang=python3><span class=n>vec</span><span class=o>.</span><span class=n>drop_embedding_index</span><span class=p>()</span></pre><h3>Time partitioning</h3><p>In many use cases where you have many embeddings, time is an importantcomponent associated with the embeddings. For example, when embeddingnews stories, you often search by time as well as similarity (e.g.,stories related to Bitcoin in the past week or stories about Clinton inNovember 2016).</p><p>Yet, traditionally, searching by two components \u201csimilarity\u201d and \u201ctime\u201dis challenging for Approximate Nearest Neighbor (ANN) indexes and makesthe similarity-search index less effective.</p><p>One approach to solving this is partitioning the data by time andcreating ANN indexes on each partition individually. Then, duringsearch, you can:</p><ul><li>Step 1: filter our partitions that don\u2019t match the time predicate.</li><li>Step 2: perform the similarity search on all matching partitions.</li><li>Step 3: combine all the results from each partition in step 2, rerank,and filter out results by time.</li></ul><p>Step 1 makes the search a lot more efficient by filtering out wholeswaths of data in one go.</p><p>Timescale-vector supports time partitioning using TimescaleDB\u2019shypertables. To use this feature, simply indicate the length of time foreach partition when creating the client:</p><pre lang=python3><span class=kn>from</span> <span class=nn>datetime</span> <span class=kn>import</span> <span class=n>timedelta</span><span class=kn>from</span> <span class=nn>datetime</span> <span class=kn>import</span> <span class=n>datetime</span></pre><pre lang=python3><span class=n>vec</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>Async</span><span class=p>(</span><span class=n>service_url</span><span class=p>,</span> <span class=s2>\"my_data_with_time_partition\"</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=n>time_partition_interval</span><span class=o>=</span><span class=n>timedelta</span><span class=p>(</span><span class=n>hours</span><span class=o>=</span><span class=mi>6</span><span class=p>))</span><span class=k>await</span> <span class=n>vec</span><span class=o>.</span><span class=n>create_tables</span><span class=p>()</span></pre><p>Then, insert data where the IDs use UUIDs v1 and the time component ofthe UUID specifies the time of the embedding. For example, to create anembedding for the current time, simply do:</p><pre lang=python3><span class=nb>id</span> <span class=o>=</span> <span class=n>uuid</span><span class=o>.</span><span class=n>uuid1</span><span class=p>()</span><span class=k>await</span> <span class=n>vec</span><span class=o>.</span><span class=n>upsert</span><span class=p>([(</span><span class=nb>id</span><span class=p>,</span> <span class=p>{</span><span class=s2>\"key\"</span><span class=p>:</span> <span class=s2>\"val\"</span><span class=p>},</span> <span class=s2>\"the brown fox\"</span><span class=p>,</span> <span class=p>[</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>1.2</span><span class=p>])])</span></pre><p>To insert data for a specific time in the past, create the UUID usingour<a href=\"https://timescale.github.io/python-vector/vector.html#uuid_from_time\" rel=nofollow><code>uuid_from_time</code></a>function</p><pre lang=python3><span class=n>specific_datetime</span> <span class=o>=</span> <span class=n>datetime</span><span class=p>(</span><span class=mi>2018</span><span class=p>,</span> <span class=mi>8</span><span class=p>,</span> <span class=mi>10</span><span class=p>,</span> <span class=mi>15</span><span class=p>,</span> <span class=mi>30</span><span class=p>,</span> <span class=mi>0</span><span class=p>)</span><span class=k>await</span> <span class=n>vec</span><span class=o>.</span><span class=n>upsert</span><span class=p>([(</span><span class=n>client</span><span class=o>.</span><span class=n>uuid_from_time</span><span class=p>(</span><span class=n>specific_datetime</span><span class=p>),</span> <span class=p>{</span><span class=s2>\"key\"</span><span class=p>:</span> <span class=s2>\"val\"</span><span class=p>},</span> <span class=s2>\"the brown fox\"</span><span class=p>,</span> <span class=p>[</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>1.2</span><span class=p>])])</span></pre><p>You can then query the data by specifying a <code>uuid_time_filter</code> in thesearch call:</p><pre lang=python3><span class=n>rec</span> <span class=o>=</span> <span class=k>await</span> <span class=n>vec</span><span class=o>.</span><span class=n>search</span><span class=p>([</span><span class=mf>1.0</span><span class=p>,</span> <span class=mf>2.0</span><span class=p>],</span> <span class=n>limit</span><span class=o>=</span><span class=mi>4</span><span class=p>,</span> <span class=n>uuid_time_filter</span><span class=o>=</span><span class=n>client</span><span class=o>.</span><span class=n>UUIDTimeRange</span><span class=p>(</span><span class=n>specific_datetime</span><span class=o>-</span><span class=n>timedelta</span><span class=p>(</span><span class=n>days</span><span class=o>=</span><span class=mi>7</span><span class=p>),</span> <span class=n>specific_datetime</span><span class=o>+</span><span class=n>timedelta</span><span class=p>(</span><span class=n>days</span><span class=o>=</span><span class=mi>7</span><span class=p>)))</span></pre><h3>Distance metrics</h3><p>By default, we use cosine distance to measure how similarly an embeddingis to a given query. In addition to cosine distance, we also supportEuclidean/L2 distance. The distance type is set when creating the clientusing the <code>distance_type</code> parameter. For example, to use the Euclideandistance metric, you can create the client with:</p><pre lang=python3><span class=n>vec</span>  <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>Sync</span><span class=p>(</span><span class=n>service_url</span><span class=p>,</span> <span class=s2>\"my_data\"</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=n>distance_type</span><span class=o>=</span><span class=s2>\"euclidean\"</span><span class=p>)</span></pre><p>Valid values for <code>distance_type</code> are <code>cosine</code> and <code>euclidean</code>.</p><p>It is important to note that you should use consistent distance types onclients that create indexes and perform queries. That is because anindex is only valid for one particular type of distance measure.</p><p>Please note the Timescale Vector index only supports cosine distance atthis time.</p><h1>LangChain integration</h1><p><a href=\"https://www.langchain.com/\" rel=nofollow>LangChain</a> is a popular framework fordevelopment applications powered by LLMs. Timescale Vector has a nativeLangChain integration, enabling you to use Timescale Vector as avectorstore and leverage all its capabilities in your applications builtwith LangChain.</p><p>Here are resources about using Timescale Vector with LangChain:</p><ul><li><a href=\"https://python.langchain.com/docs/integrations/vectorstores/timescalevector\" rel=nofollow>Getting started with LangChain and TimescaleVector</a>:You\u2019ll learn how to use Timescale Vector for (1) semantic search, (2)time-based vector search, (3) self-querying, and (4) how to createindexes to speed up queries.</li><li><a href=\"https://python.langchain.com/docs/integrations/retrievers/self_query/timescalevector_self_query\" rel=nofollow>PostgreSQL SelfQuerying</a>:Learn how to use Timescale Vector with self-querying in LangChain.</li><li><a href=\"https://github.com/langchain-ai/langchain/tree/master/templates/rag-timescale-conversation\" rel=nofollow>LangChain template: RAG with conversationalretrieval</a>:This template is used for conversational retrieval, which is one ofthe most popular LLM use-cases. It passes both a conversation historyand retrieved documents into an LLM for synthesis.</li><li><a href=\"https://github.com/langchain-ai/langchain/tree/master/templates/rag-timescale-hybrid-search-time\" rel=nofollow>LangChain template: RAG with time-based search and self-queryretrieval</a>:Thistemplate shows how to use timescale-vector with the self-queryretriver to perform hybrid search on similarity and time. This isuseful any time your data has a strong time-based component.</li><li><a href=\"https://blog.langchain.dev/timescale-vector-x-langchain-making-postgresql-a-better-vector-database-for-ai-applications/\" rel=nofollow>Learn more about Timescale Vector andLangChain</a></li></ul><h1>LlamaIndex integration</h1><p>[LlamaIndex] is a popular data framework for connecting custom datasources to large language models (LLMs). Timescale Vector has a nativeLlamaIndex integration, enabling you to use Timescale Vector as avectorstore and leverage all its capabilities in your applications builtwith LlamaIndex.</p><p>Here are resources about using Timescale Vector with LlamaIndex:</p><ul><li><a href=\"https://docs.llamaindex.ai/en/stable/examples/vector_stores/Timescalevector.html\" rel=nofollow>Getting started with LlamaIndex and TimescaleVector</a>:You\u2019ll learn how to use Timescale Vector for (1) similaritysearch, (2) time-based vector search, (3) faster search with indexes,and (4) retrieval and query engine.</li><li><a href=\"https://youtu.be/EYMZVfKcRzM?si=I0H3uUPgzKbQw__W\" rel=nofollow>Time-basedretrieval</a>: Learnhow to power RAG applications with time-based retrieval.</li><li><a href=\"https://github.com/run-llama/llama-hub/tree/main/llama_hub/llama_packs/timescale_vector_autoretrieval\" rel=nofollow>Llama Pack: Auto Retrieval with time-basedsearch</a>:This pack demonstrates performing auto-retrieval for hybrid searchbased on both similarity and time, using the timescale-vector(PostgreSQL) vectorstore.</li><li><a href=\"https://www.timescale.com/blog/timescale-vector-x-llamaindex-making-postgresql-a-better-vector-database-for-ai-applications/\" rel=nofollow>Learn more about Timescale Vector andLlamaIndex</a></li></ul><h1>PgVectorize</h1><p>PgVectorize enables you to create vector embeddings from any data thatyou already have stored in PostgreSQL. You can get more backgroundinformation in our <a href=\"https://www.timescale.com/blog/a-complete-guide-to-creating-and-storing-embeddings-for-postgresql-data/\" rel=nofollow>blogpost</a>announcing this feature, as well as a <a href=\"https://www.timescale.com/blog/how-we-designed-a-resilient-vector-embedding-creation-system-for-postgresql-data/\" rel=nofollow>\u201chow we builtin\u201d</a>post going into the details of the design.</p><p>To create vector embeddings, simply attach PgVectorize to any PostgreSQLtable, and it will automatically sync that table\u2019s data with a set ofembeddings stored in Timescale Vector. For example, let\u2019s say you have ablog table defined in the following way:</p><pre lang=python3><span class=kn>import</span> <span class=nn>psycopg2</span><span class=kn>from</span> <span class=nn>langchain.docstore.document</span> <span class=kn>import</span> <span class=n>Document</span><span class=kn>from</span> <span class=nn>langchain.text_splitter</span> <span class=kn>import</span> <span class=n>CharacterTextSplitter</span><span class=kn>from</span> <span class=nn>timescale_vector</span> <span class=kn>import</span> <span class=n>client</span><span class=p>,</span> <span class=n>pgvectorizer</span><span class=kn>from</span> <span class=nn>langchain.embeddings.openai</span> <span class=kn>import</span> <span class=n>OpenAIEmbeddings</span><span class=kn>from</span> <span class=nn>langchain.vectorstores.timescalevector</span> <span class=kn>import</span> <span class=n>TimescaleVector</span><span class=kn>from</span> <span class=nn>datetime</span> <span class=kn>import</span> <span class=n>timedelta</span></pre><pre lang=python3><span class=k>with</span> <span class=n>psycopg2</span><span class=o>.</span><span class=n>connect</span><span class=p>(</span><span class=n>service_url</span><span class=p>)</span> <span class=k>as</span> <span class=n>conn</span><span class=p>:</span>    <span class=k>with</span> <span class=n>conn</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span> <span class=k>as</span> <span class=n>cursor</span><span class=p>:</span>        <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s1>'''</span><span class=s1>        CREATE TABLE IF NOT EXISTS blog (</span><span class=s1>            id              SERIAL PRIMARY KEY NOT NULL,</span><span class=s1>            title           TEXT NOT NULL,</span><span class=s1>            author          TEXT NOT NULL,</span><span class=s1>            contents        TEXT NOT NULL,</span><span class=s1>            category        TEXT NOT NULL,</span><span class=s1>            published_time  TIMESTAMPTZ NULL --NULL if not yet published</span><span class=s1>        );</span><span class=s1>        '''</span><span class=p>)</span></pre><p>You can insert some data as follows:</p><pre lang=python3><span class=k>with</span> <span class=n>psycopg2</span><span class=o>.</span><span class=n>connect</span><span class=p>(</span><span class=n>service_url</span><span class=p>)</span> <span class=k>as</span> <span class=n>conn</span><span class=p>:</span>    <span class=k>with</span> <span class=n>conn</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span> <span class=k>as</span> <span class=n>cursor</span><span class=p>:</span>        <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s1>'''</span><span class=s1>            INSERT INTO blog (title, author, contents, category, published_time) VALUES ('First Post', 'Matvey Arye', 'some super interesting content about cats.', 'AI', '2021-01-01');</span><span class=s1>        '''</span><span class=p>)</span></pre><p>Now, say you want to embed these blogs in Timescale Vector. First, youneed to define an <code>embed_and_write</code> function that takes a set of blogposts, creates the embeddings, and writes them into TimescaleVector. Forexample, if using LangChain, it could look something like the following.</p><pre lang=python3><span class=k>def</span> <span class=nf>get_document</span><span class=p>(</span><span class=n>blog</span><span class=p>):</span>    <span class=n>text_splitter</span> <span class=o>=</span> <span class=n>CharacterTextSplitter</span><span class=p>(</span>        <span class=n>chunk_size</span><span class=o>=</span><span class=mi>1000</span><span class=p>,</span>        <span class=n>chunk_overlap</span><span class=o>=</span><span class=mi>200</span><span class=p>,</span>    <span class=p>)</span>    <span class=n>docs</span> <span class=o>=</span> <span class=p>[]</span>    <span class=k>for</span> <span class=n>chunk</span> <span class=ow>in</span> <span class=n>text_splitter</span><span class=o>.</span><span class=n>split_text</span><span class=p>(</span><span class=n>blog</span><span class=p>[</span><span class=s1>'contents'</span><span class=p>]):</span>        <span class=n>content</span> <span class=o>=</span> <span class=sa>f</span><span class=s2>\"Author </span><span class=si>{</span><span class=n>blog</span><span class=p>[</span><span class=s1>'author'</span><span class=p>]</span><span class=si>}</span><span class=s2>, title: </span><span class=si>{</span><span class=n>blog</span><span class=p>[</span><span class=s1>'title'</span><span class=p>]</span><span class=si>}</span><span class=s2>, contents:</span><span class=si>{</span><span class=n>chunk</span><span class=si>}</span><span class=s2>\"</span>        <span class=n>metadata</span> <span class=o>=</span> <span class=p>{</span>            <span class=s2>\"id\"</span><span class=p>:</span> <span class=nb>str</span><span class=p>(</span><span class=n>client</span><span class=o>.</span><span class=n>uuid_from_time</span><span class=p>(</span><span class=n>blog</span><span class=p>[</span><span class=s1>'published_time'</span><span class=p>])),</span>            <span class=s2>\"blog_id\"</span><span class=p>:</span> <span class=n>blog</span><span class=p>[</span><span class=s1>'id'</span><span class=p>],</span>             <span class=s2>\"author\"</span><span class=p>:</span> <span class=n>blog</span><span class=p>[</span><span class=s1>'author'</span><span class=p>],</span>             <span class=s2>\"category\"</span><span class=p>:</span> <span class=n>blog</span><span class=p>[</span><span class=s1>'category'</span><span class=p>],</span>            <span class=s2>\"published_time\"</span><span class=p>:</span> <span class=n>blog</span><span class=p>[</span><span class=s1>'published_time'</span><span class=p>]</span><span class=o>.</span><span class=n>isoformat</span><span class=p>(),</span>        <span class=p>}</span>        <span class=n>docs</span><span class=o>.</span><span class=n>append</span><span class=p>(</span><span class=n>Document</span><span class=p>(</span><span class=n>page_content</span><span class=o>=</span><span class=n>content</span><span class=p>,</span> <span class=n>metadata</span><span class=o>=</span><span class=n>metadata</span><span class=p>))</span>    <span class=k>return</span> <span class=n>docs</span><span class=k>def</span> <span class=nf>embed_and_write</span><span class=p>(</span><span class=n>blog_instances</span><span class=p>,</span> <span class=n>vectorizer</span><span class=p>):</span>    <span class=n>embedding</span> <span class=o>=</span> <span class=n>OpenAIEmbeddings</span><span class=p>()</span>    <span class=n>vector_store</span> <span class=o>=</span> <span class=n>TimescaleVector</span><span class=p>(</span>        <span class=n>collection_name</span><span class=o>=</span><span class=s2>\"blog_embedding\"</span><span class=p>,</span>        <span class=n>service_url</span><span class=o>=</span><span class=n>service_url</span><span class=p>,</span>        <span class=n>embedding</span><span class=o>=</span><span class=n>embedding</span><span class=p>,</span>        <span class=n>time_partition_interval</span><span class=o>=</span><span class=n>timedelta</span><span class=p>(</span><span class=n>days</span><span class=o>=</span><span class=mi>30</span><span class=p>),</span>    <span class=p>)</span>    <span class=c1># delete old embeddings for all ids in the work queue. locked_id is a special column that is set to the primary key of the table being</span>    <span class=c1># embedded. For items that are deleted, it is the only key that is set.</span>    <span class=n>metadata_for_delete</span> <span class=o>=</span> <span class=p>[{</span><span class=s2>\"blog_id\"</span><span class=p>:</span> <span class=n>blog</span><span class=p>[</span><span class=s1>'locked_id'</span><span class=p>]}</span> <span class=k>for</span> <span class=n>blog</span> <span class=ow>in</span> <span class=n>blog_instances</span><span class=p>]</span>    <span class=n>vector_store</span><span class=o>.</span><span class=n>delete_by_metadata</span><span class=p>(</span><span class=n>metadata_for_delete</span><span class=p>)</span>    <span class=n>documents</span> <span class=o>=</span> <span class=p>[]</span>    <span class=k>for</span> <span class=n>blog</span> <span class=ow>in</span> <span class=n>blog_instances</span><span class=p>:</span>        <span class=c1># skip blogs that are not published yet, or are deleted (in which case it will be NULL)</span>        <span class=k>if</span> <span class=n>blog</span><span class=p>[</span><span class=s1>'published_time'</span><span class=p>]</span> <span class=o>!=</span> <span class=kc>None</span><span class=p>:</span>            <span class=n>documents</span><span class=o>.</span><span class=n>extend</span><span class=p>(</span><span class=n>get_document</span><span class=p>(</span><span class=n>blog</span><span class=p>))</span>    <span class=k>if</span> <span class=nb>len</span><span class=p>(</span><span class=n>documents</span><span class=p>)</span> <span class=o>==</span> <span class=mi>0</span><span class=p>:</span>        <span class=k>return</span>        <span class=n>texts</span> <span class=o>=</span> <span class=p>[</span><span class=n>d</span><span class=o>.</span><span class=n>page_content</span> <span class=k>for</span> <span class=n>d</span> <span class=ow>in</span> <span class=n>documents</span><span class=p>]</span>    <span class=n>metadatas</span> <span class=o>=</span> <span class=p>[</span><span class=n>d</span><span class=o>.</span><span class=n>metadata</span> <span class=k>for</span> <span class=n>d</span> <span class=ow>in</span> <span class=n>documents</span><span class=p>]</span>    <span class=n>ids</span> <span class=o>=</span> <span class=p>[</span><span class=n>d</span><span class=o>.</span><span class=n>metadata</span><span class=p>[</span><span class=s2>\"id\"</span><span class=p>]</span> <span class=k>for</span> <span class=n>d</span> <span class=ow>in</span> <span class=n>documents</span><span class=p>]</span>    <span class=n>vector_store</span><span class=o>.</span><span class=n>add_texts</span><span class=p>(</span><span class=n>texts</span><span class=p>,</span> <span class=n>metadatas</span><span class=p>,</span> <span class=n>ids</span><span class=p>)</span></pre><p>Then, all you have to do is run the following code in a scheduled job(cron job, Lambda job, etc):</p><pre lang=python3><span class=c1># this job should be run on a schedule</span><span class=n>vectorizer</span> <span class=o>=</span> <span class=n>pgvectorizer</span><span class=o>.</span><span class=n>Vectorize</span><span class=p>(</span><span class=n>service_url</span><span class=p>,</span> <span class=s1>'blog'</span><span class=p>)</span><span class=k>while</span> <span class=n>vectorizer</span><span class=o>.</span><span class=n>process</span><span class=p>(</span><span class=n>embed_and_write</span><span class=p>)</span> <span class=o>&gt;</span> <span class=mi>0</span><span class=p>:</span>    <span class=k>pass</span></pre><p>Every time that job runs, it will sync the table with your embeddings.It will sync all inserts, updates, and deletes to an embeddings tablecalled <code>blog_embedding</code>.</p><p>Now, you can simply search the embeddings as follows (again, usingLangChain in the example):</p><pre lang=python3><span class=n>embedding</span> <span class=o>=</span> <span class=n>OpenAIEmbeddings</span><span class=p>()</span><span class=n>vector_store</span> <span class=o>=</span> <span class=n>TimescaleVector</span><span class=p>(</span>    <span class=n>collection_name</span><span class=o>=</span><span class=s2>\"blog_embedding\"</span><span class=p>,</span>    <span class=n>service_url</span><span class=o>=</span><span class=n>service_url</span><span class=p>,</span>    <span class=n>embedding</span><span class=o>=</span><span class=n>embedding</span><span class=p>,</span>    <span class=n>time_partition_interval</span><span class=o>=</span><span class=n>timedelta</span><span class=p>(</span><span class=n>days</span><span class=o>=</span><span class=mi>30</span><span class=p>),</span><span class=p>)</span><span class=n>res</span> <span class=o>=</span> <span class=n>vector_store</span><span class=o>.</span><span class=n>similarity_search_with_score</span><span class=p>(</span><span class=s2>\"Blogs about cats\"</span><span class=p>)</span><span class=n>res</span></pre><pre><code>[(Document(page_content='Author Matvey Arye, title: First Post, contents:some super interesting content about cats.', metadata={'id': '4a784000-4bc4-11eb-855a-06302dbc8ce7', 'author': 'Matvey Arye', 'blog_id': 1, 'category': 'AI', 'published_time': '2021-01-01T00:00:00+00:00'}),  0.12595687795193833)]</code></pre><h2>Development</h2><p>This project is developed with <a href=\"https://nbdev.fast.ai/\" rel=nofollow>nbdev</a>. Pleasesee that website for the development process.</p>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/timescale/python-vector\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/timescale-vector\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> Apache Software License (Apache Software License 2.0)</p>    <p><strong>Author:</strong> <a href=\"mailto:mat@timescale.com\">Matvey Arye</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      nbdev,    </span>    <span class=\"package-keyword\">      jupyter,    </span>    <span class=\"package-keyword\">      notebook,    </span>    <span class=\"package-keyword\">      python    </span>  </p>  <p>    <strong>Requires:</strong> Python &gt;=3.7  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/cevian/\" aria-label=\"cevian\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/55b5dcaf32417da22f1d4f45612c6c11a1f6194c/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f35653564363639663236366537323339373565316662383533353065623633633f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for cevian from gravatar.com\" title=\"Avatar for cevian from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            cevian          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+4+-+Beta\">            4 - Beta          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+Apache+Software+License\">            OSI Approved :: Apache Software License          </a>        </li>      </ul>    </li>    <li>      <strong>Natural Language</strong>      <ul>        <li>          <a href=\"/search/?c=Natural+Language+%3A%3A+English\">            English          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/timescale-vector/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/timescale-vector/0.0.4/\">                <p class=\"release__version\">                  0.0.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-11-30T22:17:14+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 30, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/timescale-vector/0.0.3/\">                <p class=\"release__version\">                  0.0.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-10-31T19:20:52+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 31, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/timescale-vector/0.0.2/\">                <p class=\"release__version\">                  0.0.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-10-12T01:38:48+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 12, 2023</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/timescale-vector/0.0.1/\">                <p class=\"release__version\">                  0.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-09-14T17:46:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 14, 2023</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/00/a6/b3b3ac44eced8c26543de4aaeea050c63af6949212abb58867c4a847e46b/timescale-vector-0.0.4.tar.gz\">          timescale-vector-0.0.4.tar.gz        </a>        (49.4 kB        <a href=\"#copy-hash-modal-29d1503a-3b19-44c0-b80f-1abf05b2046e\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-11-30T22:17:15+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 30, 2023</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/2c/3c/caa00ecdb1ecf0952733b992e2cce10ba7c47cfdac3c2d75c020b75b92bc/timescale_vector-0.0.4-py3-none-any.whl\">          timescale_vector-0.0.4-py3-none-any.whl        </a>        (30.3 kB        <a href=\"#copy-hash-modal-02c3a73b-ac6d-4988-a7a5-5b7b0728bd28\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-11-30T22:17:14+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 30, 2023</time>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-29d1503a-3b19-44c0-b80f-1abf05b2046e\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for timescale-vector-0.0.4.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for timescale-vector-0.0.4.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">7c34adacd59d6bbb13b2fe6907c969a276afb2cfd9226d504df6d1299b87258a</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">02c1bcc8c3518b51f41ecbd10e277c94</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">00a6b3b3ac44eced8c26543de4aaeea050c63af6949212abb58867c4a847e46b</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-02c3a73b-ac6d-4988-a7a5-5b7b0728bd28\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for timescale_vector-0.0.4-py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for timescale_vector-0.0.4-py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">e8968cfe645549c3cdbc99c700428a32c783584dca15ffd6eb41d95c1371470a</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">e8fb2dc9cb8d1203a77185370e3c5e2f</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">2c3ccaa00ecdb1ecf0952733b992e2cce10ba7c47cfdac3c2d75c020b75b92bc</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
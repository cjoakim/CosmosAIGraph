{
  "libtype": "pypi",
  "libname": "influxdb-client",
  "url": "https://pypi.org/project/influxdb-client/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>influxdb-client \u00b7 PyPI</title>    <meta name=\"description\" content=\"InfluxDB 2.0 Python client library\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for influxdb-client\" href=\"/rss/project/influxdb-client/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/influxdb-client/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/influxdb-client/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"influxdb-client\">    <meta property=\"og:description\" content=\"InfluxDB 2.0 Python client library\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/influxdata/influxdb-client-python\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:influxdata/influxdb-client-python+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        influxdb-client 1.41.0      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install influxdb-client</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/influxdb-client/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2024-03-01T08:25:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 1, 2024</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/influxdb-client\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">InfluxDB 2.0 Python client library</p><div data-html-include=\"/_includes/edit-project-button/influxdb-client\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for influxdb-client\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/influxdata/influxdb-client-python\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/influxdb-client\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License</p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      InfluxDB,    </span>    <span class=\"package-keyword\">      InfluxDB Python Client    </span>  </p>  <p>    <strong>Requires:</strong> Python &gt;=3.7  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/bednar/\" aria-label=\"bednar\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/9894f45f217312a35f27c1ff2a97645ee939c361/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f61323437613634616636313634343837326564613065336530363161346335393f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for bednar from gravatar.com\" title=\"Avatar for bednar from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            bednar          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/InfluxData/\" aria-label=\"InfluxData\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/4143f55709c8db2af3b384d7518f27def22079de/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f34633330353838333531376431663234356336373364336530626330346635383f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for InfluxData from gravatar.com\" title=\"Avatar for InfluxData from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            InfluxData          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/powersj/\" aria-label=\"powersj\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/719da7c4c85995b5ac2f4bcde92c0f17f6495ffc/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f30626336323362653433323139613864383337613463383564383235346332653f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for powersj from gravatar.com\" title=\"Avatar for powersj from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            powersj          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/srebhan/\" aria-label=\"srebhan\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/f2657d57640348c609cda8b455eff8cf7b0d9cf7/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f38616263313362336166376435363832346565366230336439636364313065653f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for srebhan from gravatar.com\" title=\"Avatar for srebhan from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            srebhan          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+4+-+Beta\">            4 - Beta          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.12\">            Python :: 3.12          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Database\">            Database          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries\">            Software Development :: Libraries          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries+%3A%3A+Python+Modules\">            Software Development :: Libraries :: Python Modules          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for influxdb-client\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <h1>influxdb-client-python</h1><p><a href=\"https://circleci.com/gh/influxdata/influxdb-client-python\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/6833f85b2f20e182c72bb247182f9fd8554b73f2/68747470733a2f2f636972636c6563692e636f6d2f67682f696e666c7578646174612f696e666c757864622d636c69656e742d707974686f6e2e7376673f7374796c653d737667\" alt=CircleCI></a><a href=\"https://codecov.io/gh/influxdata/influxdb-client-python\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/b3a48656c78f8d62c00f1b7761e16fe50c7becac/68747470733a2f2f636f6465636f762e696f2f67682f696e666c7578646174612f696e666c757864622d636c69656e742d707974686f6e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\" alt=codecov></a><a href=\"https://circleci.com/gh/influxdata/influxdb-client-python\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/1f8dcf66e51c226bd27bcdb2ac49d236c02e6203/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f696e666c7578646174612f696e666c757864622d636c69656e742d707974686f6e2f6d61737465722e737667\" alt=\"CI status\"></a><a href=\"https://pypi.org/project/influxdb-client/\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/21c314aa92064420f6d666880ef0923b44ebeaac/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f696e666c757864622d636c69656e742e737667\" alt=\"PyPI package\"></a><a href=\"https://anaconda.org/influxdata/influxdb_client\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/0695eae5771c7bade43784653ba5c7126def252b/68747470733a2f2f616e61636f6e64612e6f72672f696e666c7578646174612f696e666c757864625f636c69656e742f6261646765732f76657273696f6e2e737667\" alt=\"Anaconda.org package\"></a><a href=\"https://pypi.python.org/pypi/influxdb-client\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/50a4bbb835b62e16793dd4bd209aa2f519cc9ab9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f696e666c757864622d636c69656e742e737667\" alt=\"Supported Python versions\"></a><a href=\"https://influxdb-client.readthedocs.io/en/stable/\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/b81f449ef860127dc21c5270a94a5bf2adb7c123/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f696e666c757864622d636c69656e742f62616467652f3f76657273696f6e3d737461626c65\" alt=\"Documentation status\"></a><a href=\"https://www.influxdata.com/slack\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/8c01bf4f74a7c882bcfcd47e4924618eb70cfcd6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d6a6f696e5f636861742d77686974652e7376673f6c6f676f3d736c61636b267374796c653d736f6369616c\" alt=\"Slack Status\"></a></p><p>This repository contains the Python client library for use with InfluxDB 2.x and Flux. InfluxDB 3.x users should instead use the lightweight <a href=\"https://github.com/InfluxCommunity/influxdb3-python\" rel=nofollow>v3 client library</a>.InfluxDB 1.x users should use the <a href=\"https://github.com/influxdata/influxdb-python\" rel=nofollow>v1 client library</a>.</p><p>For ease of migration and a consistent query and write experience, v2 users should consider using InfluxQL and the <a href=\"https://github.com/influxdata/influxdb-python\" rel=nofollow>v1 client library</a>.</p><p>The API of the <strong>influxdb-client-python</strong> is not the backwards-compatible with the old one - <strong>influxdb-python</strong>.</p><h2>Documentation</h2><p>This section contains links to the client library documentation.</p><ul><li><a href=\"https://docs.influxdata.com/influxdb/v2.0/tools/client-libraries/\" rel=nofollow>Product documentation</a>, <a href=#getting-started rel=nofollow>Getting Started</a></li><li><a href=\"https://github.com/influxdata/influxdb-client-python/tree/master/examples\" rel=nofollow>Examples</a></li><li><a href=\"https://influxdb-client.readthedocs.io/en/stable/api.html\" rel=nofollow>API Reference</a></li><li><a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/CHANGELOG.md\" rel=nofollow>Changelog</a></li></ul><h2>InfluxDB 2.0 client features</h2><ul><li>Querying data<ul><li>using the Flux language</li><li>into csv, raw data, <a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/flux_table.py#L33\" rel=nofollow>flux_table</a> structure, <a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html\" rel=nofollow>Pandas DataFrame</a></li><li><a href=#queries rel=nofollow>How to query</a></li></ul></li><li>Writing data using</li><li><a href=\"https://docs.influxdata.com/influxdb/latest/reference/syntax/line-protocol\" rel=nofollow>Line Protocol</a></li><li><a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/write/point.py#L47\" rel=nofollow>Data Point</a></li><li><a href=\"https://rxpy.readthedocs.io/en/latest/\" rel=nofollow>RxPY</a> Observable</li><li><a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html\" rel=nofollow>Pandas DataFrame</a></li><li><a href=#writes rel=nofollow>How to write</a></li><li><a href=\"https://github.com/influxdata/influxdb/blob/master/http/swagger.yml\" rel=nofollow>InfluxDB 2.0 API</a> client for management<ul><li>the client is generated from the <a href=\"https://github.com/influxdata/influxdb/blob/master/http/swagger.yml\" rel=nofollow>swagger</a> by using the <a href=\"https://github.com/OpenAPITools/openapi-generator\" rel=nofollow>openapi-generator</a></li><li>organizations &amp; users management</li><li>buckets management</li><li>tasks management</li><li>authorizations</li><li>health check</li><li>...</li></ul></li><li><a href=#influxdb-18-api-compatibility rel=nofollow>InfluxDB 1.8 API compatibility</a></li><li>Examples<ul><li><a href=#connect-to-influxdb-cloud rel=nofollow>Connect to InfluxDB Cloud</a></li><li><a href=#how-to-efficiently-import-large-dataset rel=nofollow>How to efficiently import large dataset</a></li><li><a href=#efficiency-write-data-from-iot-sensor rel=nofollow>Efficiency write data from IOT sensor</a></li><li><a href=#how-to-use-jupyter--pandas--influxdb-2 rel=nofollow>How to use Jupyter + Pandas + InfluxDB 2</a></li></ul></li><li><a href=#advanced-usage rel=nofollow>Advanced Usage</a><ul><li><a href=#gzip-support rel=nofollow>Gzip support</a></li><li><a href=#proxy-configuration rel=nofollow>Proxy configuration</a></li><li><a href=#nanosecond-precision rel=nofollow>Nanosecond precision</a></li><li><a href=#delete-data rel=nofollow>Delete data</a></li><li><a href=#handling-errors rel=nofollow>Handling Errors</a></li><li><a href=#logging rel=nofollow>Logging</a></li></ul></li></ul><h2>Installation</h2><p>InfluxDB python library uses <a href=\"https://github.com/ReactiveX/RxPY\" rel=nofollow>RxPY</a> - The Reactive Extensions for Python (RxPY).</p><p><strong>Python 3.7</strong> or later is required.</p><p>:warning:</p><blockquote><p>It is recommended to use <code>ciso8601</code> with client for parsing dates. <code>ciso8601</code> is much faster than built-in Python datetime. Since it's written as a <code>C</code> module the best way is build it from sources:</p></blockquote><p><strong>Windows</strong>:</p><p>You have to install <a href=\"http://go.microsoft.com/fwlink/?LinkId=691126&amp;fixForIE=.exe\" rel=nofollow>Visual C++ Build Tools 2015</a> to build <code>ciso8601</code> by <code>pip</code>.</p><p><strong>conda</strong>:</p><p>Install from sources: <code>conda install -c conda-forge/label/cf202003 ciso8601</code>.</p><h3>pip install</h3><p>The python package is hosted on <a href=\"https://pypi.org/project/influxdb-client/\" rel=nofollow>PyPI</a>, you can install latest version directly:</p><pre lang=sh>pip<span class=w> </span>install<span class=w> </span><span class=s1>'influxdb-client[ciso]'</span></pre><p>Then import the package:</p><pre lang=python3><span class=kn>import</span> <span class=nn>influxdb_client</span></pre><p>If your application uses async/await in Python you can install with the <code>async</code> extra:</p><pre lang=sh>$<span class=w> </span>pip<span class=w> </span>install<span class=w> </span>influxdb-client<span class=o>[</span>async<span class=o>]</span></pre><p>For more info see <a href=#how-to-use-asyncio rel=nofollow>How to use Asyncio</a>.</p><h3>Setuptools</h3><p>Install via <a href=\"http://pypi.python.org/pypi/setuptools\" rel=nofollow>Setuptools</a>.</p><pre lang=sh>python<span class=w> </span>setup.py<span class=w> </span>install<span class=w> </span>--user</pre><p>(or <code>sudo python setup.py install</code> to install the package for all users)</p><h2>Getting Started</h2><p>Please follow the <a href=#installation rel=nofollow>Installation</a> and then run the following:</p><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=p>,</span> <span class=n>Point</span><span class=kn>from</span> <span class=nn>influxdb_client.client.write_api</span> <span class=kn>import</span> <span class=n>SYNCHRONOUS</span><span class=n>bucket</span> <span class=o>=</span> <span class=s2>\"my-bucket\"</span><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>)</span><span class=n>write_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>write_api</span><span class=p>(</span><span class=n>write_options</span><span class=o>=</span><span class=n>SYNCHRONOUS</span><span class=p>)</span><span class=n>query_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>query_api</span><span class=p>()</span><span class=n>p</span> <span class=o>=</span> <span class=n>Point</span><span class=p>(</span><span class=s2>\"my_measurement\"</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"Prague\"</span><span class=p>)</span><span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"temperature\"</span><span class=p>,</span> <span class=mf>25.3</span><span class=p>)</span><span class=n>write_api</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=n>bucket</span><span class=o>=</span><span class=n>bucket</span><span class=p>,</span> <span class=n>record</span><span class=o>=</span><span class=n>p</span><span class=p>)</span><span class=c1>## using Table structure</span><span class=n>tables</span> <span class=o>=</span> <span class=n>query_api</span><span class=o>.</span><span class=n>query</span><span class=p>(</span><span class=s1>'from(bucket:\"my-bucket\") |&gt; range(start: -10m)'</span><span class=p>)</span><span class=k>for</span> <span class=n>table</span> <span class=ow>in</span> <span class=n>tables</span><span class=p>:</span>    <span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=p>)</span>    <span class=k>for</span> <span class=n>row</span> <span class=ow>in</span> <span class=n>table</span><span class=o>.</span><span class=n>records</span><span class=p>:</span>        <span class=nb>print</span> <span class=p>(</span><span class=n>row</span><span class=o>.</span><span class=n>values</span><span class=p>)</span><span class=c1>## using csv library</span><span class=n>csv_result</span> <span class=o>=</span> <span class=n>query_api</span><span class=o>.</span><span class=n>query_csv</span><span class=p>(</span><span class=s1>'from(bucket:\"my-bucket\") |&gt; range(start: -10m)'</span><span class=p>)</span><span class=n>val_count</span> <span class=o>=</span> <span class=mi>0</span><span class=k>for</span> <span class=n>row</span> <span class=ow>in</span> <span class=n>csv_result</span><span class=p>:</span>    <span class=k>for</span> <span class=n>cell</span> <span class=ow>in</span> <span class=n>row</span><span class=p>:</span>        <span class=n>val_count</span> <span class=o>+=</span> <span class=mi>1</span></pre><h2>Client configuration</h2><h3>Via File</h3><p>A client can be configured via <code>*.ini</code> file in segment <code>influx2</code>.</p><p>The following options are supported:</p><ul><li><code>url</code> - the url to connect to InfluxDB</li><li><code>org</code> - default destination organization for writes and queries</li><li><code>token</code> - the token to use for the authorization</li><li><code>timeout</code> - socket timeout in ms (default value is 10000)</li><li><code>verify_ssl</code> - set this to false to skip verifying SSL certificate when calling API from https server</li><li><code>ssl_ca_cert</code> - set this to customize the certificate file to verify the peer</li><li><code>cert_file</code> - path to the certificate that will be used for mTLS authentication</li><li><code>cert_key_file</code> - path to the file contains private key for mTLS certificate</li><li><code>cert_key_password</code> - string or function which returns password for decrypting the mTLS private key</li><li><code>connection_pool_maxsize</code> - set the number of connections to save that can be reused by urllib3</li><li><code>auth_basic</code> - enable http basic authentication when talking to a InfluxDB 1.8.x without authentication but is accessed via reverse proxy with basic authentication (defaults to false)</li><li><code>profilers</code> - set the list of enabled <a href=\"https://docs.influxdata.com/influxdb/v2.0/reference/flux/stdlib/profiler/\" rel=nofollow>Flux profilers</a></li></ul><pre lang=python3><span class=bp>self</span><span class=o>.</span><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=o>.</span><span class=n>from_config_file</span><span class=p>(</span><span class=s2>\"config.ini\"</span><span class=p>)</span></pre><pre lang=ini><span class=k>[influx2]</span><span class=na>url</span><span class=o>=</span><span class=s>http://localhost:8086</span><span class=na>org</span><span class=o>=</span><span class=s>my-org</span><span class=na>token</span><span class=o>=</span><span class=s>my-token</span><span class=na>timeout</span><span class=o>=</span><span class=s>6000</span><span class=na>verify_ssl</span><span class=o>=</span><span class=s>False</span></pre><h3>Via Environment Properties</h3><p>A client can be configured via environment properties.</p><p>Supported properties are:</p><ul><li><code>INFLUXDB_V2_URL</code> - the url to connect to InfluxDB</li><li><code>INFLUXDB_V2_ORG</code> - default destination organization for writes and queries</li><li><code>INFLUXDB_V2_TOKEN</code> - the token to use for the authorization</li><li><code>INFLUXDB_V2_TIMEOUT</code> - socket timeout in ms (default value is  10000)</li><li><code>INFLUXDB_V2_VERIFY_SSL</code> - set this to false to skip verifying SSL certificate when calling API from https server</li><li><code>INFLUXDB_V2_SSL_CA_CERT</code> - set this to customize the certificate file to verify the peer</li><li><code>INFLUXDB_V2_CERT_FILE</code> - path to the certificate that will be used for mTLS authentication</li><li><code>INFLUXDB_V2_CERT_KEY_FILE</code> - path to the file contains private key for mTLS certificate</li><li><code>INFLUXDB_V2_CERT_KEY_PASSWORD</code> - string or function which returns password for decrypting the mTLS private key</li><li><code>INFLUXDB_V2_CONNECTION_POOL_MAXSIZE</code> - set the number of connections to save that can be reused by urllib3</li><li><code>INFLUXDB_V2_AUTH_BASIC</code> - enable http basic authentication when talking to a InfluxDB 1.8.x without authentication but is accessed via reverse proxy with basic authentication (defaults to false)</li><li><code>INFLUXDB_V2_PROFILERS</code> - set the list of enabled <a href=\"https://docs.influxdata.com/influxdb/v2.0/reference/flux/stdlib/profiler/\" rel=nofollow>Flux profilers</a></li></ul><pre lang=python3><span class=bp>self</span><span class=o>.</span><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=o>.</span><span class=n>from_env_properties</span><span class=p>()</span></pre><h3>Profile query</h3><p>The <a href=\"https://docs.influxdata.com/influxdb/v2.0/reference/flux/stdlib/profiler/\" rel=nofollow>Flux Profiler package</a> provides performance profiling tools for Flux queries and operations.</p><p>You can enable printing profiler information of the Flux query in clientlibrary by:</p><ul><li>set QueryOptions.profilers in QueryApi,</li><li>set <code>INFLUXDB_V2_PROFILERS</code> environment variable,</li><li>set <code>profilers</code> option in configuration file.</li></ul><p>When the profiler is enabled, the result of flux query contains additional tables \"profiler/\". In order to have consistent behaviour with enabled/disabled profiler, <code>FluxCSVParser</code> excludes \"profiler/\" measurements from result.</p><p>Example how to enable profilers using API:</p><pre lang=python3><span class=n>q</span> <span class=o>=</span> <span class=s1>'''</span><span class=s1>    from(bucket: stringParam)</span><span class=s1>      |&gt; range(start: -5m, stop: now())</span><span class=s1>      |&gt; filter(fn: (r) =&gt; r._measurement == \"mem\")</span><span class=s1>      |&gt; filter(fn: (r) =&gt; r._field == \"available\" or r._field == \"free\" or r._field == \"used\")</span><span class=s1>      |&gt; aggregateWindow(every: 1m, fn: mean)</span><span class=s1>      |&gt; pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")</span><span class=s1>'''</span><span class=n>p</span> <span class=o>=</span> <span class=p>{</span>    <span class=s2>\"stringParam\"</span><span class=p>:</span> <span class=s2>\"my-bucket\"</span><span class=p>,</span><span class=p>}</span><span class=n>query_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>query_api</span><span class=p>(</span><span class=n>query_options</span><span class=o>=</span><span class=n>QueryOptions</span><span class=p>(</span><span class=n>profilers</span><span class=o>=</span><span class=p>[</span><span class=s2>\"query\"</span><span class=p>,</span> <span class=s2>\"operator\"</span><span class=p>]))</span><span class=n>csv_result</span> <span class=o>=</span> <span class=n>query_api</span><span class=o>.</span><span class=n>query</span><span class=p>(</span><span class=n>query</span><span class=o>=</span><span class=n>q</span><span class=p>,</span> <span class=n>params</span><span class=o>=</span><span class=n>p</span><span class=p>)</span></pre><p>Example of a profiler output:</p><pre lang=text>===============Profiler: query===============from(bucket: stringParam)  |&gt; range(start: -5m, stop: now())  |&gt; filter(fn: (r) =&gt; r._measurement == \"mem\")  |&gt; filter(fn: (r) =&gt; r._field == \"available\" or r._field == \"free\" or r._field == \"used\")  |&gt; aggregateWindow(every: 1m, fn: mean)  |&gt; pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")========================Profiler: profiler/query========================result              : _profilertable               : 0_measurement        : profiler/queryTotalDuration       : 8924700CompileDuration     : 350900QueueDuration       : 33800PlanDuration        : 0RequeueDuration     : 0ExecuteDuration     : 8486500Concurrency         : 0MaxAllocated        : 2072TotalAllocated      : 0flux/query-plan     :digraph {  ReadWindowAggregateByTime11  // every = 1m, aggregates = [mean], createEmpty = true, timeColumn = \"_stop\"  pivot8  generated_yield  ReadWindowAggregateByTime11 -&gt; pivot8  pivot8 -&gt; generated_yield}influxdb/scanned-bytes: 0influxdb/scanned-values: 0===========================Profiler: profiler/operator===========================result              : _profilertable               : 1_measurement        : profiler/operatorType                : *universe.pivotTransformationLabel               : pivot8Count               : 3MinDuration         : 32600MaxDuration         : 126200DurationSum         : 193400MeanDuration        : 64466.666666666664===========================Profiler: profiler/operator===========================result              : _profilertable               : 1_measurement        : profiler/operatorType                : *influxdb.readWindowAggregateSourceLabel               : ReadWindowAggregateByTime11Count               : 1MinDuration         : 940500MaxDuration         : 940500DurationSum         : 940500MeanDuration        : 940500.0</pre><p>You can also use callback function to get profilers output. Return value of this callback is type of FluxRecord.</p><p>Example how to use profilers with callback:</p><pre lang=python3><span class=k>class</span> <span class=nc>ProfilersCallback</span><span class=p>(</span><span class=nb>object</span><span class=p>):</span>   <span class=k>def</span> <span class=fm>__init__</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span>       <span class=bp>self</span><span class=o>.</span><span class=n>records</span> <span class=o>=</span> <span class=p>[]</span>   <span class=k>def</span> <span class=fm>__call__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>flux_record</span><span class=p>):</span>       <span class=bp>self</span><span class=o>.</span><span class=n>records</span><span class=o>.</span><span class=n>append</span><span class=p>(</span><span class=n>flux_record</span><span class=o>.</span><span class=n>values</span><span class=p>)</span><span class=n>callback</span> <span class=o>=</span> <span class=n>ProfilersCallback</span><span class=p>()</span><span class=n>query_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>query_api</span><span class=p>(</span><span class=n>query_options</span><span class=o>=</span><span class=n>QueryOptions</span><span class=p>(</span><span class=n>profilers</span><span class=o>=</span><span class=p>[</span><span class=s2>\"query\"</span><span class=p>,</span> <span class=s2>\"operator\"</span><span class=p>],</span> <span class=n>profiler_callback</span><span class=o>=</span><span class=n>callback</span><span class=p>))</span><span class=n>tables</span> <span class=o>=</span> <span class=n>query_api</span><span class=o>.</span><span class=n>query</span><span class=p>(</span><span class=s1>'from(bucket:\"my-bucket\") |&gt; range(start: -10m)'</span><span class=p>)</span><span class=k>for</span> <span class=n>profiler</span> <span class=ow>in</span> <span class=n>callback</span><span class=o>.</span><span class=n>records</span><span class=p>:</span>   <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s1>'Custom processing of profiler result: </span><span class=si>{</span><span class=n>profiler</span><span class=si>}</span><span class=s1>'</span><span class=p>)</span></pre><p>Example output of this callback:</p><pre lang=text>Custom processing of profiler result: {'result': '_profiler', 'table': 0, '_measurement': 'profiler/query', 'TotalDuration': 18843792, 'CompileDuration': 1078666, 'QueueDuration': 93375, 'PlanDuration': 0, 'RequeueDuration': 0, 'ExecuteDuration': 17371000, 'Concurrency': 0, 'MaxAllocated': 448, 'TotalAllocated': 0, 'RuntimeErrors': None, 'flux/query-plan': 'digraph {\\r\\n  ReadRange2\\r\\n  generated_yield\\r\\n\\r\\n  ReadRange2 -&gt; generated_yield\\r\\n}\\r\\n\\r\\n', 'influxdb/scanned-bytes': 0, 'influxdb/scanned-values': 0}Custom processing of profiler result: {'result': '_profiler', 'table': 1, '_measurement': 'profiler/operator', 'Type': '*influxdb.readFilterSource', 'Label': 'ReadRange2', 'Count': 1, 'MinDuration': 3274084, 'MaxDuration': 3274084, 'DurationSum': 3274084, 'MeanDuration': 3274084.0}</pre><h2>How to use</h2><h3>Writes</h3><p>The <a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/write_api.py\" rel=nofollow>WriteApi</a> supports synchronous, asynchronous and batching writes into InfluxDB 2.0. The data should be passed as a <a href=\"https://docs.influxdata.com/influxdb/latest/write_protocols/line_protocol_tutorial/\" rel=nofollow>InfluxDB Line Protocol</a>, <a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/write/point.py\" rel=nofollow>Data Point</a> or Observable stream.</p><p>:warning:</p><blockquote><p>The <code>WriteApi</code> in batching mode (default mode) is supposed to run as asingleton. To flush all your data you should wrap the execution using<code>with client.write_api(...) as write_api:</code> statement or call<code>write_api.close()</code> at the end of your script.</p></blockquote><p><em>The default instance of WriteApi use batching.</em></p><h4>The data could be written as</h4><ol><li><code>string</code> or <code>bytes</code> that is formatted as a InfluxDB's line protocol</li><li><a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/write/point.py#L16\" rel=nofollow>Data Point</a> structure</li><li>Dictionary style mapping with keys: <code>measurement</code>, <code>tags</code>, <code>fields</code> and <code>time</code> or custom structure</li><li><a href=\"https://docs.python.org/3/library/collections.html#collections.namedtuple\" rel=nofollow>NamedTuple</a></li><li><a href=\"https://docs.python.org/3/library/dataclasses.html\" rel=nofollow>Data Classes</a></li><li><a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html\" rel=nofollow>Pandas DataFrame</a></li><li>List of above items</li><li>A <code>batching</code> type of write also supports an <code>Observable</code> that produce one of an above item</li></ol><p>You can find write examples at GitHub: <a href=\"https://github.com/influxdata/influxdb-client-python/tree/master/examples#writes\" rel=nofollow>influxdb-client-python/examples</a>.</p><h4>Batching</h4><p>The batching is configurable by <code>write_options</code>:</p><table><thead><tr><th>Property</th><th>Description</th><th>Default Value</th></tr></thead><tbody><tr><td><strong>batch_size</strong></td><td>the number of data point to collect in a batch</td><td><code>1000</code></td></tr><tr><td><strong>flush_interval</strong></td><td>the number of milliseconds before the batch is written</td><td><code>1000</code></td></tr><tr><td><strong>jitter_interval</strong></td><td>the number of milliseconds to increase the batch flush interval by a random amount</td><td><code>0</code></td></tr><tr><td><strong>retry_interval</strong></td><td>the number of milliseconds to retry first unsuccessful write. The next retry delay is computed using exponential random backoff. The retry interval is used when the InfluxDB server does not specify \"Retry-After\" header.</td><td><code>5000</code></td></tr><tr><td><strong>max_retry_time</strong></td><td>maximum total retry timeout in milliseconds.</td><td><code>180_000</code></td></tr><tr><td><strong>max_retries</strong></td><td>the number of max retries when write fails</td><td><code>5</code></td></tr><tr><td><strong>max_retry_delay</strong></td><td>the maximum delay between each retry attempt in milliseconds</td><td><code>125_000</code></td></tr><tr><td><strong>max_close_wait</strong></td><td>the maximum amount of time to wait for batches to flush when <code>.close()</code> is called</td><td><code>300_000</code></td></tr><tr><td><strong>exponential_base</strong></td><td>the base for the exponential retry delay, the next delay is computed using random exponential backoff as a random value within the interval <code>retry_interval * exponential_base^(attempts-1)</code> and <code>retry_interval * exponential_base^(attempts)</code>. Example for <code>retry_interval=5_000, exponential_base=2, max_retry_delay=125_000, total=5</code> Retry delays are random distributed values within the ranges of <code>[5_000-10_000, 10_000-20_000, 20_000-40_000, 40_000-80_000, 80_000-125_000]</code></td><td><code>2</code></td></tr></tbody></table><pre lang=python3><span class=kn>from</span> <span class=nn>datetime</span> <span class=kn>import</span> <span class=n>datetime</span><span class=p>,</span> <span class=n>timedelta</span><span class=kn>import</span> <span class=nn>pandas</span> <span class=k>as</span> <span class=nn>pd</span><span class=kn>import</span> <span class=nn>reactivex</span> <span class=k>as</span> <span class=nn>rx</span><span class=kn>from</span> <span class=nn>reactivex</span> <span class=kn>import</span> <span class=n>operators</span> <span class=k>as</span> <span class=n>ops</span><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=p>,</span> <span class=n>Point</span><span class=p>,</span> <span class=n>WriteOptions</span><span class=k>with</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>_client</span><span class=p>:</span>    <span class=k>with</span> <span class=n>_client</span><span class=o>.</span><span class=n>write_api</span><span class=p>(</span><span class=n>write_options</span><span class=o>=</span><span class=n>WriteOptions</span><span class=p>(</span><span class=n>batch_size</span><span class=o>=</span><span class=mi>500</span><span class=p>,</span>                                                      <span class=n>flush_interval</span><span class=o>=</span><span class=mi>10_000</span><span class=p>,</span>                                                      <span class=n>jitter_interval</span><span class=o>=</span><span class=mi>2_000</span><span class=p>,</span>                                                      <span class=n>retry_interval</span><span class=o>=</span><span class=mi>5_000</span><span class=p>,</span>                                                      <span class=n>max_retries</span><span class=o>=</span><span class=mi>5</span><span class=p>,</span>                                                      <span class=n>max_retry_delay</span><span class=o>=</span><span class=mi>30_000</span><span class=p>,</span>                                                      <span class=n>max_close_wait</span><span class=o>=</span><span class=mi>300_000</span><span class=p>,</span>                                                      <span class=n>exponential_base</span><span class=o>=</span><span class=mi>2</span><span class=p>))</span> <span class=k>as</span> <span class=n>_write_client</span><span class=p>:</span><span class=w>        </span><span class=sd>\"\"\"</span><span class=sd>        Write Line Protocol formatted as string</span><span class=sd>        \"\"\"</span>        <span class=n>_write_client</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=s2>\"my-org\"</span><span class=p>,</span> <span class=s2>\"h2o_feet,location=coyote_creek water_level=1.0 1\"</span><span class=p>)</span>        <span class=n>_write_client</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=s2>\"my-org\"</span><span class=p>,</span> <span class=p>[</span><span class=s2>\"h2o_feet,location=coyote_creek water_level=2.0 2\"</span><span class=p>,</span>                                                    <span class=s2>\"h2o_feet,location=coyote_creek water_level=3.0 3\"</span><span class=p>])</span><span class=w>        </span><span class=sd>\"\"\"</span><span class=sd>        Write Line Protocol formatted as byte array</span><span class=sd>        \"\"\"</span>        <span class=n>_write_client</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=s2>\"my-org\"</span><span class=p>,</span> <span class=s2>\"h2o_feet,location=coyote_creek water_level=1.0 1\"</span><span class=o>.</span><span class=n>encode</span><span class=p>())</span>        <span class=n>_write_client</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=s2>\"my-org\"</span><span class=p>,</span> <span class=p>[</span><span class=s2>\"h2o_feet,location=coyote_creek water_level=2.0 2\"</span><span class=o>.</span><span class=n>encode</span><span class=p>(),</span>                                                    <span class=s2>\"h2o_feet,location=coyote_creek water_level=3.0 3\"</span><span class=o>.</span><span class=n>encode</span><span class=p>()])</span><span class=w>        </span><span class=sd>\"\"\"</span><span class=sd>        Write Dictionary-style object</span><span class=sd>        \"\"\"</span>        <span class=n>_write_client</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=s2>\"my-org\"</span><span class=p>,</span> <span class=p>{</span><span class=s2>\"measurement\"</span><span class=p>:</span> <span class=s2>\"h2o_feet\"</span><span class=p>,</span> <span class=s2>\"tags\"</span><span class=p>:</span> <span class=p>{</span><span class=s2>\"location\"</span><span class=p>:</span> <span class=s2>\"coyote_creek\"</span><span class=p>},</span>                                                    <span class=s2>\"fields\"</span><span class=p>:</span> <span class=p>{</span><span class=s2>\"water_level\"</span><span class=p>:</span> <span class=mf>1.0</span><span class=p>},</span> <span class=s2>\"time\"</span><span class=p>:</span> <span class=mi>1</span><span class=p>})</span>        <span class=n>_write_client</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=s2>\"my-org\"</span><span class=p>,</span> <span class=p>[{</span><span class=s2>\"measurement\"</span><span class=p>:</span> <span class=s2>\"h2o_feet\"</span><span class=p>,</span> <span class=s2>\"tags\"</span><span class=p>:</span> <span class=p>{</span><span class=s2>\"location\"</span><span class=p>:</span> <span class=s2>\"coyote_creek\"</span><span class=p>},</span>                                                     <span class=s2>\"fields\"</span><span class=p>:</span> <span class=p>{</span><span class=s2>\"water_level\"</span><span class=p>:</span> <span class=mf>2.0</span><span class=p>},</span> <span class=s2>\"time\"</span><span class=p>:</span> <span class=mi>2</span><span class=p>},</span>                                                    <span class=p>{</span><span class=s2>\"measurement\"</span><span class=p>:</span> <span class=s2>\"h2o_feet\"</span><span class=p>,</span> <span class=s2>\"tags\"</span><span class=p>:</span> <span class=p>{</span><span class=s2>\"location\"</span><span class=p>:</span> <span class=s2>\"coyote_creek\"</span><span class=p>},</span>                                                     <span class=s2>\"fields\"</span><span class=p>:</span> <span class=p>{</span><span class=s2>\"water_level\"</span><span class=p>:</span> <span class=mf>3.0</span><span class=p>},</span> <span class=s2>\"time\"</span><span class=p>:</span> <span class=mi>3</span><span class=p>}])</span><span class=w>        </span><span class=sd>\"\"\"</span><span class=sd>        Write Data Point</span><span class=sd>        \"\"\"</span>        <span class=n>_write_client</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=s2>\"my-org\"</span><span class=p>,</span>                            <span class=n>Point</span><span class=p>(</span><span class=s2>\"h2o_feet\"</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"coyote_creek\"</span><span class=p>)</span><span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"water_level\"</span><span class=p>,</span> <span class=mf>4.0</span><span class=p>)</span><span class=o>.</span><span class=n>time</span><span class=p>(</span><span class=mi>4</span><span class=p>))</span>        <span class=n>_write_client</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=s2>\"my-org\"</span><span class=p>,</span>                            <span class=p>[</span><span class=n>Point</span><span class=p>(</span><span class=s2>\"h2o_feet\"</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"coyote_creek\"</span><span class=p>)</span><span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"water_level\"</span><span class=p>,</span> <span class=mf>5.0</span><span class=p>)</span><span class=o>.</span><span class=n>time</span><span class=p>(</span><span class=mi>5</span><span class=p>),</span>                             <span class=n>Point</span><span class=p>(</span><span class=s2>\"h2o_feet\"</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"coyote_creek\"</span><span class=p>)</span><span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"water_level\"</span><span class=p>,</span> <span class=mf>6.0</span><span class=p>)</span><span class=o>.</span><span class=n>time</span><span class=p>(</span><span class=mi>6</span><span class=p>)])</span><span class=w>        </span><span class=sd>\"\"\"</span><span class=sd>        Write Observable stream</span><span class=sd>        \"\"\"</span>        <span class=n>_data</span> <span class=o>=</span> <span class=n>rx</span> \\            <span class=o>.</span><span class=n>range</span><span class=p>(</span><span class=mi>7</span><span class=p>,</span> <span class=mi>11</span><span class=p>)</span> \\            <span class=o>.</span><span class=n>pipe</span><span class=p>(</span><span class=n>ops</span><span class=o>.</span><span class=n>map</span><span class=p>(</span><span class=k>lambda</span> <span class=n>i</span><span class=p>:</span> <span class=s2>\"h2o_feet,location=coyote_creek water_level=</span><span class=si>{0}</span><span class=s2>.0 </span><span class=si>{0}</span><span class=s2>\"</span><span class=o>.</span><span class=n>format</span><span class=p>(</span><span class=n>i</span><span class=p>)))</span>        <span class=n>_write_client</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=s2>\"my-org\"</span><span class=p>,</span> <span class=n>_data</span><span class=p>)</span><span class=w>        </span><span class=sd>\"\"\"</span><span class=sd>        Write Pandas DataFrame</span><span class=sd>        \"\"\"</span>        <span class=n>_now</span> <span class=o>=</span> <span class=n>datetime</span><span class=o>.</span><span class=n>utcnow</span><span class=p>()</span>        <span class=n>_data_frame</span> <span class=o>=</span> <span class=n>pd</span><span class=o>.</span><span class=n>DataFrame</span><span class=p>(</span><span class=n>data</span><span class=o>=</span><span class=p>[[</span><span class=s2>\"coyote_creek\"</span><span class=p>,</span> <span class=mf>1.0</span><span class=p>],</span> <span class=p>[</span><span class=s2>\"coyote_creek\"</span><span class=p>,</span> <span class=mf>2.0</span><span class=p>]],</span>                                   <span class=n>index</span><span class=o>=</span><span class=p>[</span><span class=n>_now</span><span class=p>,</span> <span class=n>_now</span> <span class=o>+</span> <span class=n>timedelta</span><span class=p>(</span><span class=n>hours</span><span class=o>=</span><span class=mi>1</span><span class=p>)],</span>                                   <span class=n>columns</span><span class=o>=</span><span class=p>[</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"water_level\"</span><span class=p>])</span>        <span class=n>_write_client</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=s2>\"my-org\"</span><span class=p>,</span> <span class=n>record</span><span class=o>=</span><span class=n>_data_frame</span><span class=p>,</span> <span class=n>data_frame_measurement_name</span><span class=o>=</span><span class=s1>'h2o_feet'</span><span class=p>,</span>                            <span class=n>data_frame_tag_columns</span><span class=o>=</span><span class=p>[</span><span class=s1>'location'</span><span class=p>])</span></pre><h4>Default Tags</h4><p>Sometimes is useful to store same information in every measurement e.g. <code>hostname</code>, <code>location</code>, <code>customer</code>. The client is able to use static value or env property as a tag value.</p><p>The expressions:</p><ul><li><code>California Miner</code> - static value</li><li><code>${env.hostname}</code> - environment property</li></ul><h5>Via API</h5><pre lang=python3><span class=n>point_settings</span> <span class=o>=</span> <span class=n>PointSettings</span><span class=p>()</span><span class=n>point_settings</span><span class=o>.</span><span class=n>add_default_tag</span><span class=p>(</span><span class=s2>\"id\"</span><span class=p>,</span> <span class=s2>\"132-987-655\"</span><span class=p>)</span><span class=n>point_settings</span><span class=o>.</span><span class=n>add_default_tag</span><span class=p>(</span><span class=s2>\"customer\"</span><span class=p>,</span> <span class=s2>\"California Miner\"</span><span class=p>)</span><span class=n>point_settings</span><span class=o>.</span><span class=n>add_default_tag</span><span class=p>(</span><span class=s2>\"data_center\"</span><span class=p>,</span> <span class=s2>\"$</span><span class=si>{env.data_center}</span><span class=s2>\"</span><span class=p>)</span><span class=bp>self</span><span class=o>.</span><span class=n>write_client</span> <span class=o>=</span> <span class=bp>self</span><span class=o>.</span><span class=n>client</span><span class=o>.</span><span class=n>write_api</span><span class=p>(</span><span class=n>write_options</span><span class=o>=</span><span class=n>SYNCHRONOUS</span><span class=p>,</span> <span class=n>point_settings</span><span class=o>=</span><span class=n>point_settings</span><span class=p>)</span></pre><pre lang=python3><span class=bp>self</span><span class=o>.</span><span class=n>write_client</span> <span class=o>=</span> <span class=bp>self</span><span class=o>.</span><span class=n>client</span><span class=o>.</span><span class=n>write_api</span><span class=p>(</span><span class=n>write_options</span><span class=o>=</span><span class=n>SYNCHRONOUS</span><span class=p>,</span>                                              <span class=n>point_settings</span><span class=o>=</span><span class=n>PointSettings</span><span class=p>(</span><span class=o>**</span><span class=p>{</span><span class=s2>\"id\"</span><span class=p>:</span> <span class=s2>\"132-987-655\"</span><span class=p>,</span>                                                                              <span class=s2>\"customer\"</span><span class=p>:</span> <span class=s2>\"California Miner\"</span><span class=p>}))</span></pre><h5>Via Configuration file</h5><p>In an <a href=\"https://docs.python.org/3/library/configparser.html\" rel=nofollow>init</a> configuration file you are able to specify default tags by <code>tags</code> segment.</p><pre lang=python3><span class=bp>self</span><span class=o>.</span><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=o>.</span><span class=n>from_config_file</span><span class=p>(</span><span class=s2>\"config.ini\"</span><span class=p>)</span></pre><pre><code>[influx2]url=http://localhost:8086org=my-orgtoken=my-tokentimeout=6000[tags]id = 132-987-655customer = California Minerdata_center = ${env.data_center}</code></pre><p>You can also use a <a href=\"https://toml.io/en/\" rel=nofollow>TOML</a> or a<a href=\"https://www.json.org/json-en.html\" rel=nofollow>JSON</a> format for the configuration file.</p><h5>Via Environment Properties</h5><p>You are able to specify default tags by environment properties with prefix <code>INFLUXDB_V2_TAG_</code>.</p><p>Examples:</p><ul><li><code>INFLUXDB_V2_TAG_ID</code></li><li><code>INFLUXDB_V2_TAG_HOSTNAME</code></li></ul><pre lang=python3><span class=bp>self</span><span class=o>.</span><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=o>.</span><span class=n>from_env_properties</span><span class=p>()</span></pre><h4>Synchronous client</h4><p>Data are writes in a synchronous HTTP request.</p><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=p>,</span> <span class=n>Point</span><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=o>.</span><span class=n>client</span><span class=o>.</span><span class=n>write_api</span> <span class=kn>import</span> <span class=nn>SYNCHRONOUS</span><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>)</span><span class=n>write_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>write_api</span><span class=p>(</span><span class=n>write_options</span><span class=o>=</span><span class=n>SYNCHRONOUS</span><span class=p>)</span><span class=n>_point1</span> <span class=o>=</span> <span class=n>Point</span><span class=p>(</span><span class=s2>\"my_measurement\"</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"Prague\"</span><span class=p>)</span><span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"temperature\"</span><span class=p>,</span> <span class=mf>25.3</span><span class=p>)</span><span class=n>_point2</span> <span class=o>=</span> <span class=n>Point</span><span class=p>(</span><span class=s2>\"my_measurement\"</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"New York\"</span><span class=p>)</span><span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"temperature\"</span><span class=p>,</span> <span class=mf>24.3</span><span class=p>)</span><span class=n>write_api</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=n>bucket</span><span class=o>=</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=n>record</span><span class=o>=</span><span class=p>[</span><span class=n>_point1</span><span class=p>,</span> <span class=n>_point2</span><span class=p>])</span><span class=n>client</span><span class=o>.</span><span class=n>close</span><span class=p>()</span></pre><h3>Queries</h3><p>The result retrieved by <a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/query_api.py\" rel=nofollow>QueryApi</a> could be formatted as a:</p><ol><li>Flux data structure: <a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/flux_table.py#L5\" rel=nofollow>FluxTable</a>, <a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/flux_table.py#L22\" rel=nofollow>FluxColumn</a> and <a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/flux_table.py#L31\" rel=nofollow>FluxRecord</a></li><li><code>influxdb_client.client.flux_table.CSVIterator</code> which will iterate over CSV lines</li><li>Raw unprocessed results as a <code>str</code> iterator</li><li><a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html\" rel=nofollow>Pandas DataFrame</a></li></ol><p>The API also support streaming <code>FluxRecord</code> via <a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/query_api.py#L77\" rel=nofollow>query_stream</a>, see example below:</p><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=p>,</span> <span class=n>Point</span><span class=p>,</span> <span class=n>Dialect</span><span class=kn>from</span> <span class=nn>influxdb_client.client.write_api</span> <span class=kn>import</span> <span class=n>SYNCHRONOUS</span><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>)</span><span class=n>write_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>write_api</span><span class=p>(</span><span class=n>write_options</span><span class=o>=</span><span class=n>SYNCHRONOUS</span><span class=p>)</span><span class=n>query_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>query_api</span><span class=p>()</span><span class=sd>\"\"\"</span><span class=sd>Prepare data</span><span class=sd>\"\"\"</span><span class=n>_point1</span> <span class=o>=</span> <span class=n>Point</span><span class=p>(</span><span class=s2>\"my_measurement\"</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"Prague\"</span><span class=p>)</span><span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"temperature\"</span><span class=p>,</span> <span class=mf>25.3</span><span class=p>)</span><span class=n>_point2</span> <span class=o>=</span> <span class=n>Point</span><span class=p>(</span><span class=s2>\"my_measurement\"</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"New York\"</span><span class=p>)</span><span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"temperature\"</span><span class=p>,</span> <span class=mf>24.3</span><span class=p>)</span><span class=n>write_api</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=n>bucket</span><span class=o>=</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=n>record</span><span class=o>=</span><span class=p>[</span><span class=n>_point1</span><span class=p>,</span> <span class=n>_point2</span><span class=p>])</span><span class=sd>\"\"\"</span><span class=sd>Query: using Table structure</span><span class=sd>\"\"\"</span><span class=n>tables</span> <span class=o>=</span> <span class=n>query_api</span><span class=o>.</span><span class=n>query</span><span class=p>(</span><span class=s1>'from(bucket:\"my-bucket\") |&gt; range(start: -10m)'</span><span class=p>)</span><span class=k>for</span> <span class=n>table</span> <span class=ow>in</span> <span class=n>tables</span><span class=p>:</span>    <span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=p>)</span>    <span class=k>for</span> <span class=n>record</span> <span class=ow>in</span> <span class=n>table</span><span class=o>.</span><span class=n>records</span><span class=p>:</span>        <span class=nb>print</span><span class=p>(</span><span class=n>record</span><span class=o>.</span><span class=n>values</span><span class=p>)</span><span class=nb>print</span><span class=p>()</span><span class=nb>print</span><span class=p>()</span><span class=sd>\"\"\"</span><span class=sd>Query: using Bind parameters</span><span class=sd>\"\"\"</span><span class=n>p</span> <span class=o>=</span> <span class=p>{</span><span class=s2>\"_start\"</span><span class=p>:</span> <span class=n>datetime</span><span class=o>.</span><span class=n>timedelta</span><span class=p>(</span><span class=n>hours</span><span class=o>=-</span><span class=mi>1</span><span class=p>),</span>     <span class=s2>\"_location\"</span><span class=p>:</span> <span class=s2>\"Prague\"</span><span class=p>,</span>     <span class=s2>\"_desc\"</span><span class=p>:</span> <span class=kc>True</span><span class=p>,</span>     <span class=s2>\"_floatParam\"</span><span class=p>:</span> <span class=mf>25.1</span><span class=p>,</span>     <span class=s2>\"_every\"</span><span class=p>:</span> <span class=n>datetime</span><span class=o>.</span><span class=n>timedelta</span><span class=p>(</span><span class=n>minutes</span><span class=o>=</span><span class=mi>5</span><span class=p>)</span>     <span class=p>}</span><span class=n>tables</span> <span class=o>=</span> <span class=n>query_api</span><span class=o>.</span><span class=n>query</span><span class=p>(</span><span class=s1>'''</span><span class=s1>    from(bucket:\"my-bucket\") |&gt; range(start: _start)</span><span class=s1>        |&gt; filter(fn: (r) =&gt; r[\"_measurement\"] == \"my_measurement\")</span><span class=s1>        |&gt; filter(fn: (r) =&gt; r[\"_field\"] == \"temperature\")</span><span class=s1>        |&gt; filter(fn: (r) =&gt; r[\"location\"] == _location and r[\"_value\"] &gt; _floatParam)</span><span class=s1>        |&gt; aggregateWindow(every: _every, fn: mean, createEmpty: true)</span><span class=s1>        |&gt; sort(columns: [\"_time\"], desc: _desc)</span><span class=s1>'''</span><span class=p>,</span> <span class=n>params</span><span class=o>=</span><span class=n>p</span><span class=p>)</span><span class=k>for</span> <span class=n>table</span> <span class=ow>in</span> <span class=n>tables</span><span class=p>:</span>    <span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=p>)</span>    <span class=k>for</span> <span class=n>record</span> <span class=ow>in</span> <span class=n>table</span><span class=o>.</span><span class=n>records</span><span class=p>:</span>        <span class=nb>print</span><span class=p>(</span><span class=nb>str</span><span class=p>(</span><span class=n>record</span><span class=p>[</span><span class=s2>\"_time\"</span><span class=p>])</span> <span class=o>+</span> <span class=s2>\" - \"</span> <span class=o>+</span> <span class=n>record</span><span class=p>[</span><span class=s2>\"location\"</span><span class=p>]</span> <span class=o>+</span> <span class=s2>\": \"</span> <span class=o>+</span> <span class=nb>str</span><span class=p>(</span><span class=n>record</span><span class=p>[</span><span class=s2>\"_value\"</span><span class=p>]))</span><span class=nb>print</span><span class=p>()</span><span class=nb>print</span><span class=p>()</span><span class=sd>\"\"\"</span><span class=sd>Query: using Stream</span><span class=sd>\"\"\"</span><span class=n>records</span> <span class=o>=</span> <span class=n>query_api</span><span class=o>.</span><span class=n>query_stream</span><span class=p>(</span><span class=s1>'from(bucket:\"my-bucket\") |&gt; range(start: -10m)'</span><span class=p>)</span><span class=k>for</span> <span class=n>record</span> <span class=ow>in</span> <span class=n>records</span><span class=p>:</span>    <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s1>'Temperature in </span><span class=si>{</span><span class=n>record</span><span class=p>[</span><span class=s2>\"location\"</span><span class=p>]</span><span class=si>}</span><span class=s1> is </span><span class=si>{</span><span class=n>record</span><span class=p>[</span><span class=s2>\"_value\"</span><span class=p>]</span><span class=si>}</span><span class=s1>'</span><span class=p>)</span><span class=sd>\"\"\"</span><span class=sd>Interrupt a stream after retrieve a required data</span><span class=sd>\"\"\"</span><span class=n>large_stream</span> <span class=o>=</span> <span class=n>query_api</span><span class=o>.</span><span class=n>query_stream</span><span class=p>(</span><span class=s1>'from(bucket:\"my-bucket\") |&gt; range(start: -100d)'</span><span class=p>)</span><span class=k>for</span> <span class=n>record</span> <span class=ow>in</span> <span class=n>large_stream</span><span class=p>:</span>    <span class=k>if</span> <span class=n>record</span><span class=p>[</span><span class=s2>\"location\"</span><span class=p>]</span> <span class=o>==</span> <span class=s2>\"New York\"</span><span class=p>:</span>        <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s1>'New York temperature: </span><span class=si>{</span><span class=n>record</span><span class=p>[</span><span class=s2>\"_value\"</span><span class=p>]</span><span class=si>}</span><span class=s1>'</span><span class=p>)</span>        <span class=k>break</span><span class=n>large_stream</span><span class=o>.</span><span class=n>close</span><span class=p>()</span><span class=nb>print</span><span class=p>()</span><span class=nb>print</span><span class=p>()</span><span class=sd>\"\"\"</span><span class=sd>Query: using csv library</span><span class=sd>\"\"\"</span><span class=n>csv_result</span> <span class=o>=</span> <span class=n>query_api</span><span class=o>.</span><span class=n>query_csv</span><span class=p>(</span><span class=s1>'from(bucket:\"my-bucket\") |&gt; range(start: -10m)'</span><span class=p>,</span>                                 <span class=n>dialect</span><span class=o>=</span><span class=n>Dialect</span><span class=p>(</span><span class=n>header</span><span class=o>=</span><span class=kc>False</span><span class=p>,</span> <span class=n>delimiter</span><span class=o>=</span><span class=s2>\",\"</span><span class=p>,</span> <span class=n>comment_prefix</span><span class=o>=</span><span class=s2>\"#\"</span><span class=p>,</span> <span class=n>annotations</span><span class=o>=</span><span class=p>[],</span>                                                 <span class=n>date_time_format</span><span class=o>=</span><span class=s2>\"RFC3339\"</span><span class=p>))</span><span class=k>for</span> <span class=n>csv_line</span> <span class=ow>in</span> <span class=n>csv_result</span><span class=p>:</span>    <span class=k>if</span> <span class=ow>not</span> <span class=nb>len</span><span class=p>(</span><span class=n>csv_line</span><span class=p>)</span> <span class=o>==</span> <span class=mi>0</span><span class=p>:</span>        <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s1>'Temperature in </span><span class=si>{</span><span class=n>csv_line</span><span class=p>[</span><span class=mi>9</span><span class=p>]</span><span class=si>}</span><span class=s1> is </span><span class=si>{</span><span class=n>csv_line</span><span class=p>[</span><span class=mi>6</span><span class=p>]</span><span class=si>}</span><span class=s1>'</span><span class=p>)</span><span class=sd>\"\"\"</span><span class=sd>Close client</span><span class=sd>\"\"\"</span><span class=n>client</span><span class=o>.</span><span class=n>close</span><span class=p>()</span></pre><h4>Pandas DataFrame</h4><p>:warning:</p><blockquote><p>For DataFrame querying you should install Pandas dependency via <code>pip install 'influxdb-client[extra]'</code>.</p></blockquote><p>:warning:</p><blockquote><p>Note that if a query returns more then one table than the client generates a <code>DataFrame</code> for each of them.</p></blockquote><p>The <code>client</code> is able to retrieve data in <a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html\" rel=nofollow>Pandas DataFrame</a> format thought <code>query_data_frame</code>:</p><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=p>,</span> <span class=n>Point</span><span class=p>,</span> <span class=n>Dialect</span><span class=kn>from</span> <span class=nn>influxdb_client.client.write_api</span> <span class=kn>import</span> <span class=n>SYNCHRONOUS</span><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>)</span><span class=n>write_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>write_api</span><span class=p>(</span><span class=n>write_options</span><span class=o>=</span><span class=n>SYNCHRONOUS</span><span class=p>)</span><span class=n>query_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>query_api</span><span class=p>()</span><span class=sd>\"\"\"</span><span class=sd>Prepare data</span><span class=sd>\"\"\"</span><span class=n>_point1</span> <span class=o>=</span> <span class=n>Point</span><span class=p>(</span><span class=s2>\"my_measurement\"</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"Prague\"</span><span class=p>)</span><span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"temperature\"</span><span class=p>,</span> <span class=mf>25.3</span><span class=p>)</span><span class=n>_point2</span> <span class=o>=</span> <span class=n>Point</span><span class=p>(</span><span class=s2>\"my_measurement\"</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"New York\"</span><span class=p>)</span><span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"temperature\"</span><span class=p>,</span> <span class=mf>24.3</span><span class=p>)</span><span class=n>write_api</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=n>bucket</span><span class=o>=</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=n>record</span><span class=o>=</span><span class=p>[</span><span class=n>_point1</span><span class=p>,</span> <span class=n>_point2</span><span class=p>])</span><span class=sd>\"\"\"</span><span class=sd>Query: using Pandas DataFrame</span><span class=sd>\"\"\"</span><span class=n>data_frame</span> <span class=o>=</span> <span class=n>query_api</span><span class=o>.</span><span class=n>query_data_frame</span><span class=p>(</span><span class=s1>'from(bucket:\"my-bucket\") '</span>                                        <span class=s1>'|&gt; range(start: -10m) '</span>                                        <span class=s1>'|&gt; pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\") '</span>                                        <span class=s1>'|&gt; keep(columns: [\"location\", \"temperature\"])'</span><span class=p>)</span><span class=nb>print</span><span class=p>(</span><span class=n>data_frame</span><span class=o>.</span><span class=n>to_string</span><span class=p>())</span><span class=sd>\"\"\"</span><span class=sd>Close client</span><span class=sd>\"\"\"</span><span class=n>client</span><span class=o>.</span><span class=n>close</span><span class=p>()</span></pre><p>Output:</p><pre lang=text>result table  location  temperature0  _result     0  New York         24.31  _result     1    Prague         25.3</pre><h3>Examples</h3><h4>How to efficiently import large dataset</h4><p>The following example shows how to import dataset with a dozen megabytes. If you would like to import gigabytes of data thenuse our multiprocessing example: <a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/examples/import_data_set_multiprocessing.py\" rel=nofollow>import_data_set_multiprocessing.py</a> for use a full capability of your hardware.</p><ul><li>sources -  <a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/examples/import_data_set.py\" rel=nofollow>import_data_set.py</a></li></ul><pre lang=python3><span class=sd>\"\"\"</span><span class=sd>Import VIX - CBOE Volatility Index - from \"vix-daily.csv\" file into InfluxDB 2.0</span><span class=sd>https://datahub.io/core/finance-vix#data</span><span class=sd>\"\"\"</span><span class=kn>from</span> <span class=nn>collections</span> <span class=kn>import</span> <span class=n>OrderedDict</span><span class=kn>from</span> <span class=nn>csv</span> <span class=kn>import</span> <span class=n>DictReader</span><span class=kn>import</span> <span class=nn>reactivex</span> <span class=k>as</span> <span class=nn>rx</span><span class=kn>from</span> <span class=nn>reactivex</span> <span class=kn>import</span> <span class=n>operators</span> <span class=k>as</span> <span class=n>ops</span><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=p>,</span> <span class=n>Point</span><span class=p>,</span> <span class=n>WriteOptions</span><span class=k>def</span> <span class=nf>parse_row</span><span class=p>(</span><span class=n>row</span><span class=p>:</span> <span class=n>OrderedDict</span><span class=p>):</span><span class=w>    </span><span class=sd>\"\"\"Parse row of CSV file into Point with structure:</span><span class=sd>        financial-analysis,type=ily close=18.47,high=19.82,low=18.28,open=19.82 1198195200000000000</span><span class=sd>    CSV format:</span><span class=sd>        Date,VIX Open,VIX High,VIX Low,VIX Close\\n</span><span class=sd>        2004-01-02,17.96,18.68,17.54,18.22\\n</span><span class=sd>        2004-01-05,18.45,18.49,17.44,17.49\\n</span><span class=sd>        2004-01-06,17.66,17.67,16.19,16.73\\n</span><span class=sd>        2004-01-07,16.72,16.75,15.5,15.5\\n</span><span class=sd>        2004-01-08,15.42,15.68,15.32,15.61\\n</span><span class=sd>        2004-01-09,16.15,16.88,15.57,16.75\\n</span><span class=sd>        ...</span><span class=sd>    :param row: the row of CSV file</span><span class=sd>    :return: Parsed csv row to [Point]</span><span class=sd>    \"\"\"</span><span class=w>    </span><span class=sd>\"\"\"</span><span class=sd>     For better performance is sometimes useful directly create a LineProtocol to avoid unnecessary escaping overhead:</span><span class=sd>     \"\"\"</span>     <span class=c1># from datetime import timezone</span>     <span class=c1># import ciso8601</span>     <span class=c1># from influxdb_client.client.write.point import EPOCH</span>     <span class=c1>#</span>     <span class=c1># time = (ciso8601.parse_datetime(row[\"Date\"]).replace(tzinfo=timezone.utc) - EPOCH).total_seconds() * 1e9</span>     <span class=c1># return f\"financial-analysis,type=vix-daily\" \\</span>     <span class=c1>#        f\" close={float(row['VIX Close'])},high={float(row['VIX High'])},low={float(row['VIX Low'])},open={float(row['VIX Open'])} \" \\</span>     <span class=c1>#        f\" {int(time)}\"</span>    <span class=k>return</span> <span class=n>Point</span><span class=p>(</span><span class=s2>\"financial-analysis\"</span><span class=p>)</span> \\        <span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"type\"</span><span class=p>,</span> <span class=s2>\"vix-daily\"</span><span class=p>)</span> \\        <span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"open\"</span><span class=p>,</span> <span class=nb>float</span><span class=p>(</span><span class=n>row</span><span class=p>[</span><span class=s1>'VIX Open'</span><span class=p>]))</span> \\        <span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"high\"</span><span class=p>,</span> <span class=nb>float</span><span class=p>(</span><span class=n>row</span><span class=p>[</span><span class=s1>'VIX High'</span><span class=p>]))</span> \\        <span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"low\"</span><span class=p>,</span> <span class=nb>float</span><span class=p>(</span><span class=n>row</span><span class=p>[</span><span class=s1>'VIX Low'</span><span class=p>]))</span> \\        <span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"close\"</span><span class=p>,</span> <span class=nb>float</span><span class=p>(</span><span class=n>row</span><span class=p>[</span><span class=s1>'VIX Close'</span><span class=p>]))</span> \\        <span class=o>.</span><span class=n>time</span><span class=p>(</span><span class=n>row</span><span class=p>[</span><span class=s1>'Date'</span><span class=p>])</span><span class=sd>\"\"\"</span><span class=sd>Converts vix-daily.csv into sequence of datad point</span><span class=sd>\"\"\"</span><span class=n>data</span> <span class=o>=</span> <span class=n>rx</span> \\    <span class=o>.</span><span class=n>from_iterable</span><span class=p>(</span><span class=n>DictReader</span><span class=p>(</span><span class=nb>open</span><span class=p>(</span><span class=s1>'vix-daily.csv'</span><span class=p>,</span> <span class=s1>'r'</span><span class=p>)))</span> \\    <span class=o>.</span><span class=n>pipe</span><span class=p>(</span><span class=n>ops</span><span class=o>.</span><span class=n>map</span><span class=p>(</span><span class=k>lambda</span> <span class=n>row</span><span class=p>:</span> <span class=n>parse_row</span><span class=p>(</span><span class=n>row</span><span class=p>)))</span><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>,</span> <span class=n>debug</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=sd>\"\"\"</span><span class=sd>Create client that writes data in batches with 50_000 items.</span><span class=sd>\"\"\"</span><span class=n>write_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>write_api</span><span class=p>(</span><span class=n>write_options</span><span class=o>=</span><span class=n>WriteOptions</span><span class=p>(</span><span class=n>batch_size</span><span class=o>=</span><span class=mi>50_000</span><span class=p>,</span> <span class=n>flush_interval</span><span class=o>=</span><span class=mi>10_000</span><span class=p>))</span><span class=sd>\"\"\"</span><span class=sd>Write data into InfluxDB</span><span class=sd>\"\"\"</span><span class=n>write_api</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=n>bucket</span><span class=o>=</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=n>record</span><span class=o>=</span><span class=n>data</span><span class=p>)</span><span class=n>write_api</span><span class=o>.</span><span class=n>close</span><span class=p>()</span><span class=sd>\"\"\"</span><span class=sd>Querying max value of CBOE Volatility Index</span><span class=sd>\"\"\"</span><span class=n>query</span> <span class=o>=</span> <span class=s1>'from(bucket:\"my-bucket\")'</span> \\        <span class=s1>' |&gt; range(start: 0, stop: now())'</span> \\        <span class=s1>' |&gt; filter(fn: (r) =&gt; r._measurement == \"financial-analysis\")'</span> \\        <span class=s1>' |&gt; max()'</span><span class=n>result</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>query_api</span><span class=p>()</span><span class=o>.</span><span class=n>query</span><span class=p>(</span><span class=n>query</span><span class=o>=</span><span class=n>query</span><span class=p>)</span><span class=sd>\"\"\"</span><span class=sd>Processing results</span><span class=sd>\"\"\"</span><span class=nb>print</span><span class=p>()</span><span class=nb>print</span><span class=p>(</span><span class=s2>\"=== results ===\"</span><span class=p>)</span><span class=nb>print</span><span class=p>()</span><span class=k>for</span> <span class=n>table</span> <span class=ow>in</span> <span class=n>result</span><span class=p>:</span>    <span class=k>for</span> <span class=n>record</span> <span class=ow>in</span> <span class=n>table</span><span class=o>.</span><span class=n>records</span><span class=p>:</span>        <span class=nb>print</span><span class=p>(</span><span class=s1>'max </span><span class=si>{0:5}</span><span class=s1> = </span><span class=si>{1}</span><span class=s1>'</span><span class=o>.</span><span class=n>format</span><span class=p>(</span><span class=n>record</span><span class=o>.</span><span class=n>get_field</span><span class=p>(),</span> <span class=n>record</span><span class=o>.</span><span class=n>get_value</span><span class=p>()))</span><span class=sd>\"\"\"</span><span class=sd>Close client</span><span class=sd>\"\"\"</span><span class=n>client</span><span class=o>.</span><span class=n>close</span><span class=p>()</span></pre><h4>Efficiency write data from IOT sensor</h4><ul><li>sources - <a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/examples/iot_sensor.py\" rel=nofollow>iot_sensor.py</a></li></ul><pre lang=python3><span class=sd>\"\"\"</span><span class=sd>Efficiency write data from IOT sensor - write changed temperature every minute</span><span class=sd>\"\"\"</span><span class=kn>import</span> <span class=nn>atexit</span><span class=kn>import</span> <span class=nn>platform</span><span class=kn>from</span> <span class=nn>datetime</span> <span class=kn>import</span> <span class=n>timedelta</span><span class=kn>import</span> <span class=nn>psutil</span> <span class=k>as</span> <span class=nn>psutil</span><span class=kn>import</span> <span class=nn>reactivex</span> <span class=k>as</span> <span class=nn>rx</span><span class=kn>from</span> <span class=nn>reactivex</span> <span class=kn>import</span> <span class=n>operators</span> <span class=k>as</span> <span class=n>ops</span><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=p>,</span> <span class=n>WriteApi</span><span class=p>,</span> <span class=n>WriteOptions</span><span class=k>def</span> <span class=nf>on_exit</span><span class=p>(</span><span class=n>db_client</span><span class=p>:</span> <span class=n>InfluxDBClient</span><span class=p>,</span> <span class=n>write_api</span><span class=p>:</span> <span class=n>WriteApi</span><span class=p>):</span><span class=w>    </span><span class=sd>\"\"\"Close clients after terminate a script.</span><span class=sd>    :param db_client: InfluxDB client</span><span class=sd>    :param write_api: WriteApi</span><span class=sd>    :return: nothing</span><span class=sd>    \"\"\"</span>    <span class=n>write_api</span><span class=o>.</span><span class=n>close</span><span class=p>()</span>    <span class=n>db_client</span><span class=o>.</span><span class=n>close</span><span class=p>()</span><span class=k>def</span> <span class=nf>sensor_temperature</span><span class=p>():</span><span class=w>    </span><span class=sd>\"\"\"Read a CPU temperature. The [psutil] doesn't support MacOS so we use [sysctl].</span><span class=sd>    :return: actual CPU temperature</span><span class=sd>    \"\"\"</span>    <span class=n>os_name</span> <span class=o>=</span> <span class=n>platform</span><span class=o>.</span><span class=n>system</span><span class=p>()</span>    <span class=k>if</span> <span class=n>os_name</span> <span class=o>==</span> <span class=s1>'Darwin'</span><span class=p>:</span>        <span class=kn>from</span> <span class=nn>subprocess</span> <span class=kn>import</span> <span class=n>check_output</span>        <span class=n>output</span> <span class=o>=</span> <span class=n>check_output</span><span class=p>([</span><span class=s2>\"sysctl\"</span><span class=p>,</span> <span class=s2>\"machdep.xcpm.cpu_thermal_level\"</span><span class=p>])</span>        <span class=kn>import</span> <span class=nn>re</span>        <span class=k>return</span> <span class=n>re</span><span class=o>.</span><span class=n>findall</span><span class=p>(</span><span class=sa>r</span><span class=s1>'\\d+'</span><span class=p>,</span> <span class=nb>str</span><span class=p>(</span><span class=n>output</span><span class=p>))[</span><span class=mi>0</span><span class=p>]</span>    <span class=k>else</span><span class=p>:</span>        <span class=k>return</span> <span class=n>psutil</span><span class=o>.</span><span class=n>sensors_temperatures</span><span class=p>()[</span><span class=s2>\"coretemp\"</span><span class=p>][</span><span class=mi>0</span><span class=p>]</span><span class=k>def</span> <span class=nf>line_protocol</span><span class=p>(</span><span class=n>temperature</span><span class=p>):</span><span class=w>    </span><span class=sd>\"\"\"Create a InfluxDB line protocol with structure:</span><span class=sd>        iot_sensor,hostname=mine_sensor_12,type=temperature value=68</span><span class=sd>    :param temperature: the sensor temperature</span><span class=sd>    :return: Line protocol to write into InfluxDB</span><span class=sd>    \"\"\"</span>    <span class=kn>import</span> <span class=nn>socket</span>    <span class=k>return</span> <span class=s1>'iot_sensor,hostname=</span><span class=si>{}</span><span class=s1>,type=temperature value=</span><span class=si>{}</span><span class=s1>'</span><span class=o>.</span><span class=n>format</span><span class=p>(</span><span class=n>socket</span><span class=o>.</span><span class=n>gethostname</span><span class=p>(),</span> <span class=n>temperature</span><span class=p>)</span><span class=sd>\"\"\"</span><span class=sd>Read temperature every minute; distinct_until_changed - produce only if temperature change</span><span class=sd>\"\"\"</span><span class=n>data</span> <span class=o>=</span> <span class=n>rx</span>\\    <span class=o>.</span><span class=n>interval</span><span class=p>(</span><span class=n>period</span><span class=o>=</span><span class=n>timedelta</span><span class=p>(</span><span class=n>seconds</span><span class=o>=</span><span class=mi>60</span><span class=p>))</span>\\    <span class=o>.</span><span class=n>pipe</span><span class=p>(</span><span class=n>ops</span><span class=o>.</span><span class=n>map</span><span class=p>(</span><span class=k>lambda</span> <span class=n>t</span><span class=p>:</span> <span class=n>sensor_temperature</span><span class=p>()),</span>          <span class=n>ops</span><span class=o>.</span><span class=n>distinct_until_changed</span><span class=p>(),</span>          <span class=n>ops</span><span class=o>.</span><span class=n>map</span><span class=p>(</span><span class=k>lambda</span> <span class=n>temperature</span><span class=p>:</span> <span class=n>line_protocol</span><span class=p>(</span><span class=n>temperature</span><span class=p>)))</span><span class=n>_db_client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>,</span> <span class=n>debug</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=sd>\"\"\"</span><span class=sd>Create client that writes data into InfluxDB</span><span class=sd>\"\"\"</span><span class=n>_write_api</span> <span class=o>=</span> <span class=n>_db_client</span><span class=o>.</span><span class=n>write_api</span><span class=p>(</span><span class=n>write_options</span><span class=o>=</span><span class=n>WriteOptions</span><span class=p>(</span><span class=n>batch_size</span><span class=o>=</span><span class=mi>1</span><span class=p>))</span><span class=n>_write_api</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=n>bucket</span><span class=o>=</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=n>record</span><span class=o>=</span><span class=n>data</span><span class=p>)</span><span class=sd>\"\"\"</span><span class=sd>Call after terminate a script</span><span class=sd>\"\"\"</span><span class=n>atexit</span><span class=o>.</span><span class=n>register</span><span class=p>(</span><span class=n>on_exit</span><span class=p>,</span> <span class=n>_db_client</span><span class=p>,</span> <span class=n>_write_api</span><span class=p>)</span><span class=nb>input</span><span class=p>()</span></pre><h4>Connect to InfluxDB Cloud</h4><p>The following example demonstrate the simplest way how to write and query date with the InfluxDB Cloud.</p><p>At first point you should create an authentication token as is described <a href=\"https://v2.docs.influxdata.com/v2.0/security/tokens/create-token/\" rel=nofollow>here</a>.</p><p>After that you should configure properties: <code>influx_cloud_url</code>,<code>influx_cloud_token</code>, <code>bucket</code> and <code>org</code> in a <code>influx_cloud.py</code> example.</p><p>The last step is run a python script via: <code>python3 influx_cloud.py</code>.</p><ul><li>sources -     <a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/examples/influx_cloud.py\" rel=nofollow>influx_cloud.py</a></li></ul><pre lang=python3><span class=sd>\"\"\"</span><span class=sd>Connect to InfluxDB 2.0 - write data and query them</span><span class=sd>\"\"\"</span><span class=kn>from</span> <span class=nn>datetime</span> <span class=kn>import</span> <span class=n>datetime</span><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>Point</span><span class=p>,</span> <span class=n>InfluxDBClient</span><span class=kn>from</span> <span class=nn>influxdb_client.client.write_api</span> <span class=kn>import</span> <span class=n>SYNCHRONOUS</span><span class=sd>\"\"\"</span><span class=sd>Configure credentials</span><span class=sd>\"\"\"</span><span class=n>influx_cloud_url</span> <span class=o>=</span> <span class=s1>'https://us-west-2-1.aws.cloud2.influxdata.com'</span><span class=n>influx_cloud_token</span> <span class=o>=</span> <span class=s1>'...'</span><span class=n>bucket</span> <span class=o>=</span> <span class=s1>'...'</span><span class=n>org</span> <span class=o>=</span> <span class=s1>'...'</span><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=n>influx_cloud_url</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=n>influx_cloud_token</span><span class=p>)</span><span class=k>try</span><span class=p>:</span>    <span class=n>kind</span> <span class=o>=</span> <span class=s1>'temperature'</span>    <span class=n>host</span> <span class=o>=</span> <span class=s1>'host1'</span>    <span class=n>device</span> <span class=o>=</span> <span class=s1>'opt-123'</span><span class=w>    </span><span class=sd>\"\"\"</span><span class=sd>    Write data by Point structure</span><span class=sd>    \"\"\"</span>    <span class=n>point</span> <span class=o>=</span> <span class=n>Point</span><span class=p>(</span><span class=n>kind</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s1>'host'</span><span class=p>,</span> <span class=n>host</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s1>'device'</span><span class=p>,</span> <span class=n>device</span><span class=p>)</span><span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s1>'value'</span><span class=p>,</span> <span class=mf>25.3</span><span class=p>)</span><span class=o>.</span><span class=n>time</span><span class=p>(</span><span class=n>time</span><span class=o>=</span><span class=n>datetime</span><span class=o>.</span><span class=n>utcnow</span><span class=p>())</span>    <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s1>'Writing to InfluxDB cloud: </span><span class=si>{</span><span class=n>point</span><span class=o>.</span><span class=n>to_line_protocol</span><span class=p>()</span><span class=si>}</span><span class=s1> ...'</span><span class=p>)</span>    <span class=n>write_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>write_api</span><span class=p>(</span><span class=n>write_options</span><span class=o>=</span><span class=n>SYNCHRONOUS</span><span class=p>)</span>    <span class=n>write_api</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=n>bucket</span><span class=o>=</span><span class=n>bucket</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=n>org</span><span class=p>,</span> <span class=n>record</span><span class=o>=</span><span class=n>point</span><span class=p>)</span>    <span class=nb>print</span><span class=p>()</span>    <span class=nb>print</span><span class=p>(</span><span class=s1>'success'</span><span class=p>)</span>    <span class=nb>print</span><span class=p>()</span>    <span class=nb>print</span><span class=p>()</span><span class=w>    </span><span class=sd>\"\"\"</span><span class=sd>    Query written data</span><span class=sd>    \"\"\"</span>    <span class=n>query</span> <span class=o>=</span> <span class=sa>f</span><span class=s1>'from(bucket: \"</span><span class=si>{</span><span class=n>bucket</span><span class=si>}</span><span class=s1>\") |&gt; range(start: -1d) |&gt; filter(fn: (r) =&gt; r._measurement == \"</span><span class=si>{</span><span class=n>kind</span><span class=si>}</span><span class=s1>\")'</span>    <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s1>'Querying from InfluxDB cloud: \"</span><span class=si>{</span><span class=n>query</span><span class=si>}</span><span class=s1>\" ...'</span><span class=p>)</span>    <span class=nb>print</span><span class=p>()</span>    <span class=n>query_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>query_api</span><span class=p>()</span>    <span class=n>tables</span> <span class=o>=</span> <span class=n>query_api</span><span class=o>.</span><span class=n>query</span><span class=p>(</span><span class=n>query</span><span class=o>=</span><span class=n>query</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=n>org</span><span class=p>)</span>    <span class=k>for</span> <span class=n>table</span> <span class=ow>in</span> <span class=n>tables</span><span class=p>:</span>        <span class=k>for</span> <span class=n>row</span> <span class=ow>in</span> <span class=n>table</span><span class=o>.</span><span class=n>records</span><span class=p>:</span>            <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s1>'</span><span class=si>{</span><span class=n>row</span><span class=o>.</span><span class=n>values</span><span class=p>[</span><span class=s2>\"_time\"</span><span class=p>]</span><span class=si>}</span><span class=s1>: host=</span><span class=si>{</span><span class=n>row</span><span class=o>.</span><span class=n>values</span><span class=p>[</span><span class=s2>\"host\"</span><span class=p>]</span><span class=si>}</span><span class=s1>,device=</span><span class=si>{</span><span class=n>row</span><span class=o>.</span><span class=n>values</span><span class=p>[</span><span class=s2>\"device\"</span><span class=p>]</span><span class=si>}</span><span class=s1> '</span>                  <span class=sa>f</span><span class=s1>'</span><span class=si>{</span><span class=n>row</span><span class=o>.</span><span class=n>values</span><span class=p>[</span><span class=s2>\"_value\"</span><span class=p>]</span><span class=si>}</span><span class=s1> \u00b0C'</span><span class=p>)</span>    <span class=nb>print</span><span class=p>()</span>    <span class=nb>print</span><span class=p>(</span><span class=s1>'success'</span><span class=p>)</span><span class=k>except</span> <span class=ne>Exception</span> <span class=k>as</span> <span class=n>e</span><span class=p>:</span>    <span class=nb>print</span><span class=p>(</span><span class=n>e</span><span class=p>)</span><span class=k>finally</span><span class=p>:</span>    <span class=n>client</span><span class=o>.</span><span class=n>close</span><span class=p>()</span></pre><h4>How to use Jupyter + Pandas + InfluxDB 2</h4><p>The first example shows how to use client capabilities to predict stock price via <a href=\"https://keras.io\" rel=nofollow>Keras</a>, <a href=\"https://www.tensorflow.org\" rel=nofollow>TensorFlow</a>, <a href=\"https://scikit-learn.org/stable/\" rel=nofollow>sklearn</a>:</p><p>The example is taken from <a href=\"https://www.kaggle.com/chaitanyacc4/predicting-stock-prices-of-apple-inc\" rel=nofollow>Kaggle</a>.</p><ul><li>sources -     <a href=\"notebooks/stock-predictions.ipynb\" rel=nofollow>stock-predictions.ipynb</a></li></ul><p><img src=\"https://pypi-camo.freetls.fastly.net/626c9f6897af00efe540629f6b0bde736c38bf13/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f696e666c7578646174612f696e666c757864622d636c69656e742d707974686f6e2f6d61737465722f646f63732f696d616765732f73746f636b2d70726963652d70726564696374696f6e2e676966\" alt=image></p><p>Result:</p><p><img src=\"https://pypi-camo.freetls.fastly.net/7532eace9132012a64fbb8cb90c1cca8dbea10f4/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f696e666c7578646174612f696e666c757864622d636c69656e742d707974686f6e2f6d61737465722f646f63732f696d616765732f73746f636b2d70726963652d70726564696374696f6e2d726573756c74732e706e67\" alt=image></p><p>The second example shows how to use client capabilities to realtime visualization via <a href=\"https://hvplot.pyviz.org\" rel=nofollow>hvPlot</a>, <a href=\"https://streamz.readthedocs.io/en/latest/\" rel=nofollow>Streamz</a>, <a href=\"https://rxpy.readthedocs.io/en/latest/\" rel=nofollow>RxPY</a>:</p><ul><li>sources - <a href=\"notebooks/realtime-stream.ipynb\" rel=nofollow>realtime-stream.ipynb</a></li></ul><p><img src=\"https://pypi-camo.freetls.fastly.net/6ffc5f30023a2393bac1d8dccbdb9575ded69b72/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f696e666c7578646174612f696e666c757864622d636c69656e742d707974686f6e2f6d61737465722f646f63732f696d616765732f7265616c74696d652d726573756c742e676966\" alt=image></p><h4>Other examples</h4><p>You can find all examples at GitHub: <a href=\"https://github.com/influxdata/influxdb-client-python/tree/master/examples#examples\" rel=nofollow>influxdb-client-python/examples</a>.</p><h2>Advanced Usage</h2><h3>Gzip support</h3><p><code>InfluxDBClient</code> does not enable gzip compression for http requests by default. If you want to enable gzip to reduce transfer data's size, you can call:</p><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=n>_db_client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>,</span> <span class=n>enable_gzip</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span></pre><h3>Authenticate to the InfluxDB</h3><p><code>InfluxDBClient</code> supports three options how to authorize a connection:</p><ul><li><em>Token</em></li><li><em>Username &amp; Password</em></li><li><em>HTTP Basic</em></li></ul><h4>Token</h4><p>Use the <code>token</code> to authenticate to the InfluxDB API. In your API requests, an <em>Authorization</em> header will be sent. The header value, provide the word <em>Token</em> followed by a space and an InfluxDB API token. The word <em>token</em> is case-sensitive.</p><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=k>with</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span></pre><p>:warning:</p><blockquote><p>Note that this is a preferred way how to authenticate to InfluxDB API.</p></blockquote><h4>Username &amp; Password</h4><p>Authenticates via username and password credentials. If successful,  creates a new session for the user.</p><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=k>with</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>username</span><span class=o>=</span><span class=s2>\"my-user\"</span><span class=p>,</span> <span class=n>password</span><span class=o>=</span><span class=s2>\"my-password\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span></pre><p>:warning:</p><blockquote><p>The <code>username/password</code> auth is based on the HTTP \"Basic\" authentication. The authorization expires when the <a href=\"https://docs.influxdata.com/influxdb/latest/reference/config-options/#session-length\" rel=nofollow>time-to-live (TTL)</a> (default 60 minutes) is reached and client produces <code>unauthorized exception</code>.</p></blockquote><h4>HTTP Basic</h4><p>Use this to enable basic authentication when talking to a InfluxDB 1.8.x that does not use auth-enabled but is protected by a reverse proxy with basic authentication.</p><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=k>with</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>auth_basic</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-proxy-secret\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span></pre><p>:warning:</p><blockquote><p>Don't use this when directly talking to InfluxDB 2.</p></blockquote><h3>Proxy configuration</h3><p>You can configure the client to tunnel requests through an HTTP proxy. The following proxy options are supported:</p><ul><li><code>proxy</code> - Set this to configure the http proxy to be used, ex. <code>http://localhost:3128</code></li><li><code>proxy_headers</code> - A dictionary containing headers that will be sent to the proxy. Could be used for proxy authentication.</li></ul><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=k>with</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span>                    <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span>                    <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>,</span>                    <span class=n>proxy</span><span class=o>=</span><span class=s2>\"http://localhost:3128\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span></pre><p>If your proxy notify the client with permanent redirect (<code>HTTP 301</code>) to <strong>different host</strong>. The client removes <code>Authorization</code> header, because otherwise the contents of <code>Authorization</code> is sent to third parties which is a security vulnerability.</p><p>You can change this behaviour by:</p><pre lang=python3><span class=kn>from</span> <span class=nn>urllib3</span> <span class=kn>import</span> <span class=n>Retry</span><span class=n>Retry</span><span class=o>.</span><span class=n>DEFAULT_REMOVE_HEADERS_ON_REDIRECT</span> <span class=o>=</span> <span class=nb>frozenset</span><span class=p>()</span><span class=n>Retry</span><span class=o>.</span><span class=n>DEFAULT</span><span class=o>.</span><span class=n>remove_headers_on_redirect</span> <span class=o>=</span> <span class=n>Retry</span><span class=o>.</span><span class=n>DEFAULT_REMOVE_HEADERS_ON_REDIRECT</span></pre><h3>Delete data</h3><p>The <a href=\"influxdb_client/client/delete_api.py\" rel=nofollow>delete_api.py</a> supports deletes <a href=\"https://v2.docs.influxdata.com/v2.0/reference/glossary/#point\" rel=nofollow>points</a> from an InfluxDB bucket.</p><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>)</span><span class=n>delete_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>delete_api</span><span class=p>()</span><span class=sd>\"\"\"</span><span class=sd>Delete Data</span><span class=sd>\"\"\"</span><span class=n>start</span> <span class=o>=</span> <span class=s2>\"1970-01-01T00:00:00Z\"</span><span class=n>stop</span> <span class=o>=</span> <span class=s2>\"2021-02-01T00:00:00Z\"</span><span class=n>delete_api</span><span class=o>.</span><span class=n>delete</span><span class=p>(</span><span class=n>start</span><span class=p>,</span> <span class=n>stop</span><span class=p>,</span> <span class=s1>'_measurement=\"my_measurement\"'</span><span class=p>,</span> <span class=n>bucket</span><span class=o>=</span><span class=s1>'my-bucket'</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s1>'my-org'</span><span class=p>)</span><span class=sd>\"\"\"</span><span class=sd>Close client</span><span class=sd>\"\"\"</span><span class=n>client</span><span class=o>.</span><span class=n>close</span><span class=p>()</span></pre><h3>InfluxDB 1.8 API compatibility</h3><p><a href=\"https://docs.influxdata.com/influxdb/v1.8/tools/api/#influxdb-2-0-api-compatibility-endpoints\" rel=nofollow>InfluxDB 1.8.0 introduced forward compatibility APIs</a> for InfluxDB 2.0. This allows you to easily move from InfluxDB 1.x to InfluxDB 2.0 Cloud or open source.</p><p>The following forward compatible APIs are available:</p><table><thead><tr><th>API</th><th>Endpoint</th><th>Description</th></tr></thead><tbody><tr><td><a href=\"influxdb_client/client/query_api.py\" rel=nofollow>query_api.py</a></td><td><a href=\"https://docs.influxdata.com/influxdb/v1.8/tools/api/#apiv2query-http-endpoint\" rel=nofollow>/api/v2/query</a></td><td>Query data in InfluxDB 1.8.0+ using the InfluxDB 2.0 API and <a href=\"https://docs.influxdata.com/flux/latest/\" rel=nofollow>Flux</a> (endpoint should be enabled by <a href=\"https://docs.influxdata.com/influxdb/v1.8/administration/config/#flux-enabled-false\" rel=nofollow>flux-enabled option</a>)</td></tr><tr><td><a href=\"influxdb_client/client/write_api.py\" rel=nofollow>write_api.py</a></td><td><a href=\"https://docs.influxdata.com/influxdb/v1.8/tools/api/#apiv2write-http-endpoint\" rel=nofollow>/api/v2/write</a></td><td>Write data to InfluxDB 1.8.0+ using the InfluxDB 2.0 API</td></tr><tr><td><a href=\"influxdb_client/client/influxdb_client.py\" rel=nofollow>ping()</a></td><td><a href=\"https://docs.influxdata.com/influxdb/v1.8/tools/api/#ping-http-endpoint\" rel=nofollow>/ping</a></td><td>Check the status of your InfluxDB instance</td></tr></tbody></table><p>For detail info see <a href=\"examples/influxdb_18_example.py\" rel=nofollow>InfluxDB 1.8 example</a>.</p><h3>Handling Errors</h3><p>Errors happen, and it's important that your code is prepared for them. All client related exceptions are delivered from <code>InfluxDBError</code>.If the exception cannot be recovered in the client it is returned to the application. These exceptions are left for the developer to handle.</p><p>Almost all APIs directly return unrecoverable exceptions to be handled this way:</p><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=kn>from</span> <span class=nn>influxdb_client.client.exceptions</span> <span class=kn>import</span> <span class=n>InfluxDBError</span><span class=kn>from</span> <span class=nn>influxdb_client.client.write_api</span> <span class=kn>import</span> <span class=n>SYNCHRONOUS</span><span class=k>with</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>    <span class=k>try</span><span class=p>:</span>        <span class=n>client</span><span class=o>.</span><span class=n>write_api</span><span class=p>(</span><span class=n>write_options</span><span class=o>=</span><span class=n>SYNCHRONOUS</span><span class=p>)</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=n>record</span><span class=o>=</span><span class=s2>\"mem,tag=a value=86\"</span><span class=p>)</span>    <span class=k>except</span> <span class=n>InfluxDBError</span> <span class=k>as</span> <span class=n>e</span><span class=p>:</span>        <span class=k>if</span> <span class=n>e</span><span class=o>.</span><span class=n>response</span><span class=o>.</span><span class=n>status</span> <span class=o>==</span> <span class=mi>401</span><span class=p>:</span>            <span class=k>raise</span> <span class=ne>Exception</span><span class=p>(</span><span class=sa>f</span><span class=s2>\"Insufficient write permissions to 'my-bucket'.\"</span><span class=p>)</span> <span class=kn>from</span> <span class=nn>e</span>        <span class=k>raise</span></pre><p>The only exception is <strong>batching</strong> <code>WriteAPI</code> (for more info see <a href=#batching rel=nofollow>Batching</a>) where you need to register custom callbacks to handle batch events.This is because this API runs in the <code>background</code> in a <code>separate</code> thread and isn't possible to directly return underlying exceptions.</p><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=kn>from</span> <span class=nn>influxdb_client.client.exceptions</span> <span class=kn>import</span> <span class=n>InfluxDBError</span><span class=k>class</span> <span class=nc>BatchingCallback</span><span class=p>(</span><span class=nb>object</span><span class=p>):</span>    <span class=k>def</span> <span class=nf>success</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>conf</span><span class=p>:</span> <span class=p>(</span><span class=nb>str</span><span class=p>,</span> <span class=nb>str</span><span class=p>,</span> <span class=nb>str</span><span class=p>),</span> <span class=n>data</span><span class=p>:</span> <span class=nb>str</span><span class=p>):</span>        <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s2>\"Written batch: </span><span class=si>{</span><span class=n>conf</span><span class=si>}</span><span class=s2>, data: </span><span class=si>{</span><span class=n>data</span><span class=si>}</span><span class=s2>\"</span><span class=p>)</span>    <span class=k>def</span> <span class=nf>error</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>conf</span><span class=p>:</span> <span class=p>(</span><span class=nb>str</span><span class=p>,</span> <span class=nb>str</span><span class=p>,</span> <span class=nb>str</span><span class=p>),</span> <span class=n>data</span><span class=p>:</span> <span class=nb>str</span><span class=p>,</span> <span class=n>exception</span><span class=p>:</span> <span class=n>InfluxDBError</span><span class=p>):</span>        <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s2>\"Cannot write batch: </span><span class=si>{</span><span class=n>conf</span><span class=si>}</span><span class=s2>, data: </span><span class=si>{</span><span class=n>data</span><span class=si>}</span><span class=s2> due: </span><span class=si>{</span><span class=n>exception</span><span class=si>}</span><span class=s2>\"</span><span class=p>)</span>    <span class=k>def</span> <span class=nf>retry</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>conf</span><span class=p>:</span> <span class=p>(</span><span class=nb>str</span><span class=p>,</span> <span class=nb>str</span><span class=p>,</span> <span class=nb>str</span><span class=p>),</span> <span class=n>data</span><span class=p>:</span> <span class=nb>str</span><span class=p>,</span> <span class=n>exception</span><span class=p>:</span> <span class=n>InfluxDBError</span><span class=p>):</span>        <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s2>\"Retryable error occurs for batch: </span><span class=si>{</span><span class=n>conf</span><span class=si>}</span><span class=s2>, data: </span><span class=si>{</span><span class=n>data</span><span class=si>}</span><span class=s2> retry: </span><span class=si>{</span><span class=n>exception</span><span class=si>}</span><span class=s2>\"</span><span class=p>)</span><span class=k>with</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>    <span class=n>callback</span> <span class=o>=</span> <span class=n>BatchingCallback</span><span class=p>()</span>    <span class=k>with</span> <span class=n>client</span><span class=o>.</span><span class=n>write_api</span><span class=p>(</span><span class=n>success_callback</span><span class=o>=</span><span class=n>callback</span><span class=o>.</span><span class=n>success</span><span class=p>,</span>                          <span class=n>error_callback</span><span class=o>=</span><span class=n>callback</span><span class=o>.</span><span class=n>error</span><span class=p>,</span>                          <span class=n>retry_callback</span><span class=o>=</span><span class=n>callback</span><span class=o>.</span><span class=n>retry</span><span class=p>)</span> <span class=k>as</span> <span class=n>write_api</span><span class=p>:</span>        <span class=k>pass</span></pre><h4>HTTP Retry Strategy</h4><p>By default, the client uses a retry strategy only for batching writes (for more info see <a href=#batching rel=nofollow>Batching</a>).For other HTTP requests there is no one retry strategy, but it could be configured by <code>retries</code> parameter of <code>InfluxDBClient</code>.</p><p>For more info about how configure HTTP retry see details in <a href=\"https://urllib3.readthedocs.io/en/latest/reference/index.html?highlight=retry#urllib3.Retry\" rel=nofollow>urllib3 documentation</a>.</p><pre lang=python3><span class=kn>from</span> <span class=nn>urllib3</span> <span class=kn>import</span> <span class=n>Retry</span><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=n>retries</span> <span class=o>=</span> <span class=n>Retry</span><span class=p>(</span><span class=n>connect</span><span class=o>=</span><span class=mi>5</span><span class=p>,</span> <span class=n>read</span><span class=o>=</span><span class=mi>2</span><span class=p>,</span> <span class=n>redirect</span><span class=o>=</span><span class=mi>5</span><span class=p>)</span><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>,</span> <span class=n>retries</span><span class=o>=</span><span class=n>retries</span><span class=p>)</span></pre><h3>Nanosecond precision</h3><p>The Python's <a href=\"https://docs.python.org/3/library/datetime.html\" rel=nofollow>datetime</a> doesn't support precision with nanoseconds so the library during writes and queries ignores everything after microseconds.</p><p>If you would like to use <code>datetime</code> with nanosecond precision you should use <a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Timestamp.html#pandas.Timestamp\" rel=nofollow>pandas.Timestamp</a> that is replacement for python <code>datetime.datetime</code> object, and also you should set a proper <code>DateTimeHelper</code> to the client.</p><ul><li>sources -  <a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/examples/nanosecond_precision.py\" rel=nofollow>nanosecond_precision.py</a></li></ul><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>Point</span><span class=p>,</span> <span class=n>InfluxDBClient</span><span class=kn>from</span> <span class=nn>influxdb_client.client.util.date_utils_pandas</span> <span class=kn>import</span> <span class=n>PandasDateTimeHelper</span><span class=kn>from</span> <span class=nn>influxdb_client.client.write_api</span> <span class=kn>import</span> <span class=n>SYNCHRONOUS</span><span class=sd>\"\"\"</span><span class=sd>Set PandasDate helper which supports nanoseconds.</span><span class=sd>\"\"\"</span><span class=kn>import</span> <span class=nn>influxdb_client.client.util.date_utils</span> <span class=k>as</span> <span class=nn>date_utils</span><span class=n>date_utils</span><span class=o>.</span><span class=n>date_helper</span> <span class=o>=</span> <span class=n>PandasDateTimeHelper</span><span class=p>()</span><span class=sd>\"\"\"</span><span class=sd>Prepare client.</span><span class=sd>\"\"\"</span><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>)</span><span class=n>write_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>write_api</span><span class=p>(</span><span class=n>write_options</span><span class=o>=</span><span class=n>SYNCHRONOUS</span><span class=p>)</span><span class=n>query_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>query_api</span><span class=p>()</span><span class=sd>\"\"\"</span><span class=sd>Prepare data</span><span class=sd>\"\"\"</span><span class=n>point</span> <span class=o>=</span> <span class=n>Point</span><span class=p>(</span><span class=s2>\"h2o_feet\"</span><span class=p>)</span> \\    <span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"water_level\"</span><span class=p>,</span> <span class=mi>10</span><span class=p>)</span> \\    <span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"pacific\"</span><span class=p>)</span> \\    <span class=o>.</span><span class=n>time</span><span class=p>(</span><span class=s1>'1996-02-25T21:20:00.001001231Z'</span><span class=p>)</span><span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s1>'Time serialized with nanosecond precision: </span><span class=si>{</span><span class=n>point</span><span class=o>.</span><span class=n>to_line_protocol</span><span class=p>()</span><span class=si>}</span><span class=s1>'</span><span class=p>)</span><span class=nb>print</span><span class=p>()</span><span class=n>write_api</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=n>bucket</span><span class=o>=</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=n>record</span><span class=o>=</span><span class=n>point</span><span class=p>)</span><span class=sd>\"\"\"</span><span class=sd>Query: using Stream</span><span class=sd>\"\"\"</span><span class=n>query</span> <span class=o>=</span> <span class=s1>'''</span><span class=s1>from(bucket:\"my-bucket\")</span><span class=s1>        |&gt; range(start: 0, stop: now())</span><span class=s1>        |&gt; filter(fn: (r) =&gt; r._measurement == \"h2o_feet\")</span><span class=s1>'''</span><span class=n>records</span> <span class=o>=</span> <span class=n>query_api</span><span class=o>.</span><span class=n>query_stream</span><span class=p>(</span><span class=n>query</span><span class=p>)</span><span class=k>for</span> <span class=n>record</span> <span class=ow>in</span> <span class=n>records</span><span class=p>:</span>    <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s1>'Temperature in </span><span class=si>{</span><span class=n>record</span><span class=p>[</span><span class=s2>\"location\"</span><span class=p>]</span><span class=si>}</span><span class=s1> is </span><span class=si>{</span><span class=n>record</span><span class=p>[</span><span class=s2>\"_value\"</span><span class=p>]</span><span class=si>}</span><span class=s1> at time: </span><span class=si>{</span><span class=n>record</span><span class=p>[</span><span class=s2>\"_time\"</span><span class=p>]</span><span class=si>}</span><span class=s1>'</span><span class=p>)</span><span class=sd>\"\"\"</span><span class=sd>Close client</span><span class=sd>\"\"\"</span><span class=n>client</span><span class=o>.</span><span class=n>close</span><span class=p>()</span></pre><h3>How to use Asyncio</h3><p>Starting from version 1.27.0 for Python 3.7+ the <code>influxdb-client</code> package supports <code>async/await</code> based on <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=nofollow>asyncio</a>, <a href=\"https://docs.aiohttp.org\" rel=nofollow>aiohttp</a> and <a href=\"https://pypi.org/project/aiocsv/\" rel=nofollow>aiocsv</a>.You can install <code>aiohttp</code> and <code>aiocsv</code> directly:</p><blockquote><pre lang=bash>$<span class=w> </span>python<span class=w> </span>-m<span class=w> </span>pip<span class=w> </span>install<span class=w> </span>influxdb-client<span class=w> </span>aiohttp<span class=w> </span>aiocsv</pre></blockquote><p>or use the <code>[async]</code> extra:</p><blockquote><pre lang=bash>$<span class=w> </span>python<span class=w> </span>-m<span class=w> </span>pip<span class=w> </span>install<span class=w> </span>influxdb-client<span class=o>[</span>async<span class=o>]</span></pre></blockquote><p>:warning:</p><blockquote><p>The <code>InfluxDBClientAsync</code> should be initialised inside <code>async coroutine</code> otherwise there can be unexpected behaviour. For more info see: <a href=\"https://docs.aiohttp.org/en/stable/faq.html#why-is-creating-a-clientsession-outside-of-an-event-loop-dangerous\" rel=nofollow>Why is creating a ClientSession outside an event loop dangerous?</a>.</p></blockquote><h4>Async APIs</h4><p>All async APIs are available via <code>influxdb_client.client.influxdb_client_async.InfluxDBClientAsync</code>. The <code>async</code> version of the client supports following asynchronous APIs:</p><ul><li><code>influxdb_client.client.write_api_async.WriteApiAsync</code></li><li><code>influxdb_client.client.query_api_async.QueryApiAsync</code></li><li><code>influxdb_client.client.delete_api_async.DeleteApiAsync</code></li><li>Management services into <code>influxdb_client.service</code> supports asyncoperation</li></ul><p>and also check to readiness of the InfluxDB via <code>/ping</code> endpoint:</p><blockquote><pre lang=python3><span class=kn>import</span> <span class=nn>asyncio</span><span class=kn>from</span> <span class=nn>influxdb_client.client.influxdb_client_async</span> <span class=kn>import</span> <span class=n>InfluxDBClientAsync</span><span class=k>async</span> <span class=k>def</span> <span class=nf>main</span><span class=p>():</span>    <span class=k>async</span> <span class=k>with</span> <span class=n>InfluxDBClientAsync</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>ready</span> <span class=o>=</span> <span class=k>await</span> <span class=n>client</span><span class=o>.</span><span class=n>ping</span><span class=p>()</span>        <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s2>\"InfluxDB: </span><span class=si>{</span><span class=n>ready</span><span class=si>}</span><span class=s2>\"</span><span class=p>)</span><span class=k>if</span> <span class=vm>__name__</span> <span class=o>==</span> <span class=s2>\"__main__\"</span><span class=p>:</span>    <span class=n>asyncio</span><span class=o>.</span><span class=n>run</span><span class=p>(</span><span class=n>main</span><span class=p>())</span></pre></blockquote><h4>Async Write API</h4><p>The <code>influxdb_client.client.write_api_async.WriteApiAsync</code> supports ingesting data as:</p><ul><li><code>string</code> or <code>bytes</code> that is formatted as a InfluxDB's line protocol</li><li><a href=\"https://github.com/influxdata/influxdb-client-python/blob/master/influxdb_client/client/write/point.py#L16\" rel=nofollow>Data Point</a> structure</li><li>Dictionary style mapping with keys: <code>measurement</code>, <code>tags</code>, <code>fields</code> and <code>time</code> or custom structure</li><li><a href=\"https://docs.python.org/3/library/collections.html#collections.namedtuple\" rel=nofollow>NamedTuple</a></li><li><a href=\"https://docs.python.org/3/library/dataclasses.html\" rel=nofollow>Data Classes</a></li><li><a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html\" rel=nofollow>Pandas DataFrame</a></li><li>List of above items</li></ul><blockquote><pre lang=python3><span class=kn>import</span> <span class=nn>asyncio</span><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>Point</span><span class=kn>from</span> <span class=nn>influxdb_client.client.influxdb_client_async</span> <span class=kn>import</span> <span class=n>InfluxDBClientAsync</span><span class=k>async</span> <span class=k>def</span> <span class=nf>main</span><span class=p>():</span>    <span class=k>async</span> <span class=k>with</span> <span class=n>InfluxDBClientAsync</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>write_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>write_api</span><span class=p>()</span>        <span class=n>_point1</span> <span class=o>=</span> <span class=n>Point</span><span class=p>(</span><span class=s2>\"async_m\"</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"Prague\"</span><span class=p>)</span><span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"temperature\"</span><span class=p>,</span> <span class=mf>25.3</span><span class=p>)</span>        <span class=n>_point2</span> <span class=o>=</span> <span class=n>Point</span><span class=p>(</span><span class=s2>\"async_m\"</span><span class=p>)</span><span class=o>.</span><span class=n>tag</span><span class=p>(</span><span class=s2>\"location\"</span><span class=p>,</span> <span class=s2>\"New York\"</span><span class=p>)</span><span class=o>.</span><span class=n>field</span><span class=p>(</span><span class=s2>\"temperature\"</span><span class=p>,</span> <span class=mf>24.3</span><span class=p>)</span>        <span class=n>successfully</span> <span class=o>=</span> <span class=k>await</span> <span class=n>write_api</span><span class=o>.</span><span class=n>write</span><span class=p>(</span><span class=n>bucket</span><span class=o>=</span><span class=s2>\"my-bucket\"</span><span class=p>,</span> <span class=n>record</span><span class=o>=</span><span class=p>[</span><span class=n>_point1</span><span class=p>,</span> <span class=n>_point2</span><span class=p>])</span>        <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s2>\" &gt; successfully: </span><span class=si>{</span><span class=n>successfully</span><span class=si>}</span><span class=s2>\"</span><span class=p>)</span><span class=k>if</span> <span class=vm>__name__</span> <span class=o>==</span> <span class=s2>\"__main__\"</span><span class=p>:</span>    <span class=n>asyncio</span><span class=o>.</span><span class=n>run</span><span class=p>(</span><span class=n>main</span><span class=p>())</span></pre></blockquote><h4>Async Query API</h4><p>The <code>influxdb_client.client.query_api_async.QueryApiAsync</code> supports retrieve data as:</p><ul><li>List of <code>influxdb_client.client.flux_table.FluxTable</code></li><li>Stream of <code>influxdb_client.client.flux_table.FluxRecord</code> via <code>typing.AsyncGenerator</code></li><li><a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html\" rel=nofollow>Pandas DataFrame</a></li><li>Stream of <a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html\" rel=nofollow>Pandas DataFrame</a> via <code>typing.AsyncGenerator</code></li><li>Raw <code>str</code> output</li></ul><blockquote><pre lang=python3><span class=kn>import</span> <span class=nn>asyncio</span><span class=kn>from</span> <span class=nn>influxdb_client.client.influxdb_client_async</span> <span class=kn>import</span> <span class=n>InfluxDBClientAsync</span><span class=k>async</span> <span class=k>def</span> <span class=nf>main</span><span class=p>():</span>    <span class=k>async</span> <span class=k>with</span> <span class=n>InfluxDBClientAsync</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=c1># Stream of FluxRecords</span>        <span class=n>query_api</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>query_api</span><span class=p>()</span>        <span class=n>records</span> <span class=o>=</span> <span class=k>await</span> <span class=n>query_api</span><span class=o>.</span><span class=n>query_stream</span><span class=p>(</span><span class=s1>'from(bucket:\"my-bucket\") '</span>                                               <span class=s1>'|&gt; range(start: -10m) '</span>                                               <span class=s1>'|&gt; filter(fn: (r) =&gt; r[\"_measurement\"] == \"async_m\")'</span><span class=p>)</span>        <span class=k>async</span> <span class=k>for</span> <span class=n>record</span> <span class=ow>in</span> <span class=n>records</span><span class=p>:</span>            <span class=nb>print</span><span class=p>(</span><span class=n>record</span><span class=p>)</span><span class=k>if</span> <span class=vm>__name__</span> <span class=o>==</span> <span class=s2>\"__main__\"</span><span class=p>:</span>    <span class=n>asyncio</span><span class=o>.</span><span class=n>run</span><span class=p>(</span><span class=n>main</span><span class=p>())</span></pre></blockquote><h4>Async Delete API</h4><blockquote><pre lang=python3><span class=kn>import</span> <span class=nn>asyncio</span><span class=kn>from</span> <span class=nn>datetime</span> <span class=kn>import</span> <span class=n>datetime</span><span class=kn>from</span> <span class=nn>influxdb_client.client.influxdb_client_async</span> <span class=kn>import</span> <span class=n>InfluxDBClientAsync</span><span class=k>async</span> <span class=k>def</span> <span class=nf>main</span><span class=p>():</span>    <span class=k>async</span> <span class=k>with</span> <span class=n>InfluxDBClientAsync</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>start</span> <span class=o>=</span> <span class=n>datetime</span><span class=o>.</span><span class=n>utcfromtimestamp</span><span class=p>(</span><span class=mi>0</span><span class=p>)</span>        <span class=n>stop</span> <span class=o>=</span> <span class=n>datetime</span><span class=o>.</span><span class=n>now</span><span class=p>()</span>        <span class=c1># Delete data with location = 'Prague'</span>        <span class=n>successfully</span> <span class=o>=</span> <span class=k>await</span> <span class=n>client</span><span class=o>.</span><span class=n>delete_api</span><span class=p>()</span><span class=o>.</span><span class=n>delete</span><span class=p>(</span><span class=n>start</span><span class=o>=</span><span class=n>start</span><span class=p>,</span> <span class=n>stop</span><span class=o>=</span><span class=n>stop</span><span class=p>,</span> <span class=n>bucket</span><span class=o>=</span><span class=s2>\"my-bucket\"</span><span class=p>,</span>                                                        <span class=n>predicate</span><span class=o>=</span><span class=s2>\"location = </span><span class=se>\\\"</span><span class=s2>Prague</span><span class=se>\\\"</span><span class=s2>\"</span><span class=p>)</span>        <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s2>\" &gt; successfully: </span><span class=si>{</span><span class=n>successfully</span><span class=si>}</span><span class=s2>\"</span><span class=p>)</span><span class=k>if</span> <span class=vm>__name__</span> <span class=o>==</span> <span class=s2>\"__main__\"</span><span class=p>:</span>    <span class=n>asyncio</span><span class=o>.</span><span class=n>run</span><span class=p>(</span><span class=n>main</span><span class=p>())</span></pre></blockquote><h4>Management API</h4><blockquote><pre lang=python3><span class=kn>import</span> <span class=nn>asyncio</span><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>OrganizationsService</span><span class=kn>from</span> <span class=nn>influxdb_client.client.influxdb_client_async</span> <span class=kn>import</span> <span class=n>InfluxDBClientAsync</span><span class=k>async</span> <span class=k>def</span> <span class=nf>main</span><span class=p>():</span>    <span class=k>async</span> <span class=k>with</span> <span class=n>InfluxDBClientAsync</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s1>'http://localhost:8086'</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s1>'my-token'</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s1>'my-org'</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=c1># Initialize async OrganizationsService</span>        <span class=n>organizations_service</span> <span class=o>=</span> <span class=n>OrganizationsService</span><span class=p>(</span><span class=n>api_client</span><span class=o>=</span><span class=n>client</span><span class=o>.</span><span class=n>api_client</span><span class=p>)</span>        <span class=c1># Find organization with name 'my-org'</span>        <span class=n>organizations</span> <span class=o>=</span> <span class=k>await</span> <span class=n>organizations_service</span><span class=o>.</span><span class=n>get_orgs</span><span class=p>(</span><span class=n>org</span><span class=o>=</span><span class=s1>'my-org'</span><span class=p>)</span>        <span class=k>for</span> <span class=n>organization</span> <span class=ow>in</span> <span class=n>organizations</span><span class=o>.</span><span class=n>orgs</span><span class=p>:</span>            <span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s1>'name: </span><span class=si>{</span><span class=n>organization</span><span class=o>.</span><span class=n>name</span><span class=si>}</span><span class=s1>, id: </span><span class=si>{</span><span class=n>organization</span><span class=o>.</span><span class=n>id</span><span class=si>}</span><span class=s1>'</span><span class=p>)</span><span class=k>if</span> <span class=vm>__name__</span> <span class=o>==</span> <span class=s2>\"__main__\"</span><span class=p>:</span>    <span class=n>asyncio</span><span class=o>.</span><span class=n>run</span><span class=p>(</span><span class=n>main</span><span class=p>())</span></pre></blockquote><h4>Proxy and redirects</h4><p>You can configure the client to tunnel requests through an HTTP proxy.The following proxy options are supported:</p><ul><li><code>proxy</code> - Set this to configure the http proxy to be used, ex. <code>http://localhost:3128</code></li><li><code>proxy_headers</code> - A dictionary containing headers that will be sent to the proxy. Could be used for proxy authentication.</li></ul><pre lang=python3><span class=kn>from</span> <span class=nn>influxdb_client.client.influxdb_client_async</span> <span class=kn>import</span> <span class=n>InfluxDBClientAsync</span><span class=k>async</span> <span class=k>with</span> <span class=n>InfluxDBClientAsync</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span>                               <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span>                               <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>,</span>                               <span class=n>proxy</span><span class=o>=</span><span class=s2>\"http://localhost:3128\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span></pre><p>If your proxy notify the client with permanent redirect (<code>HTTP 301</code>) to <strong>different host</strong>.The client removes <code>Authorization</code> header, because otherwise the contents of <code>Authorization</code> is sent to third parties which is a security vulnerability.</p><p>Client automatically follows HTTP redirects. The default redirect policy is to follow up to <code>10</code> consecutive requests.The redirects can be configured via:</p><ul><li><code>allow_redirects</code> - If set to <code>False</code>, do not follow HTTP redirects.<code>True</code> by default.</li><li><code>max_redirects</code> - Maximum number of HTTP redirects to follow. <code>10</code>by default.</li></ul><h3>Logging</h3><p>The client uses Python's <a href=\"https://docs.python.org/3/library/logging.html\" rel=nofollow>logging</a> facility for logging the library activity. The following logger categories areexposed:</p><ul><li><code>influxdb_client.client.influxdb_client</code></li><li><code>influxdb_client.client.influxdb_client_async</code></li><li><code>influxdb_client.client.write_api</code></li><li><code>influxdb_client.client.write_api_async</code></li><li><code>influxdb_client.client.write.retry</code></li><li><code>influxdb_client.client.write.dataframe_serializer</code></li><li><code>influxdb_client.client.util.multiprocessing_helper</code></li><li><code>influxdb_client.client.http</code></li><li><code>influxdb_client.client.exceptions</code></li></ul><p>The default logging level is <code>warning</code> without configured logger output. You can use the standard logger interface to change the log level and handler:</p><pre lang=python3><span class=kn>import</span> <span class=nn>logging</span><span class=kn>import</span> <span class=nn>sys</span><span class=kn>from</span> <span class=nn>influxdb_client</span> <span class=kn>import</span> <span class=n>InfluxDBClient</span><span class=k>with</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>org</span><span class=o>=</span><span class=s2>\"my-org\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>    <span class=k>for</span> <span class=n>_</span><span class=p>,</span> <span class=n>logger</span> <span class=ow>in</span> <span class=n>client</span><span class=o>.</span><span class=n>conf</span><span class=o>.</span><span class=n>loggers</span><span class=o>.</span><span class=n>items</span><span class=p>():</span>        <span class=n>logger</span><span class=o>.</span><span class=n>setLevel</span><span class=p>(</span><span class=n>logging</span><span class=o>.</span><span class=n>DEBUG</span><span class=p>)</span>        <span class=n>logger</span><span class=o>.</span><span class=n>addHandler</span><span class=p>(</span><span class=n>logging</span><span class=o>.</span><span class=n>StreamHandler</span><span class=p>(</span><span class=n>sys</span><span class=o>.</span><span class=n>stdout</span><span class=p>))</span></pre><h4>Debugging</h4><p>For debug purpose you can enable verbose logging of HTTP requests and set the <code>debug</code> level to all client's logger categories by:</p><pre lang=python3><span class=n>client</span> <span class=o>=</span> <span class=n>InfluxDBClient</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"http://localhost:8086\"</span><span class=p>,</span> <span class=n>token</span><span class=o>=</span><span class=s2>\"my-token\"</span><span class=p>,</span> <span class=n>debug</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span></pre><p>Both HTTP request headers and body will be logged to standard output.</p><h2>Local tests</h2><pre lang=console><span class=gp># </span>start/restart<span class=w> </span>InfluxDB2<span class=w> </span>on<span class=w> </span><span class=nb>local</span><span class=w> </span>machine<span class=w> </span>using<span class=w> </span>docker<span class=go>./scripts/influxdb-restart.sh</span><span class=gp># </span>install<span class=w> </span>requirements<span class=go>pip install -e . --user</span><span class=go>pip install -e .\\[extra\\] --user</span><span class=go>pip install -e .\\[test\\] --user</span><span class=gp># </span>run<span class=w> </span>unit<span class=w> </span><span class=p>&amp;</span><span class=w> </span>integration<span class=w> </span>tests<span class=go>pytest tests</span></pre><h2>Contributing</h2><p>Bug reports and pull requests are welcome on GitHub at <a href=\"https://github.com/influxdata/influxdb-client-python\" rel=nofollow>https://github.com/influxdata/influxdb-client-python</a>.</p><h2>License</h2><p>The gem is available as open source under the terms of the <a href=\"https://opensource.org/licenses/MIT\" rel=nofollow>MIT License</a>.</p>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/influxdata/influxdb-client-python\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/influxdb-client\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License</p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      InfluxDB,    </span>    <span class=\"package-keyword\">      InfluxDB Python Client    </span>  </p>  <p>    <strong>Requires:</strong> Python &gt;=3.7  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/bednar/\" aria-label=\"bednar\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/9894f45f217312a35f27c1ff2a97645ee939c361/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f61323437613634616636313634343837326564613065336530363161346335393f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for bednar from gravatar.com\" title=\"Avatar for bednar from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            bednar          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/InfluxData/\" aria-label=\"InfluxData\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/4143f55709c8db2af3b384d7518f27def22079de/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f34633330353838333531376431663234356336373364336530626330346635383f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for InfluxData from gravatar.com\" title=\"Avatar for InfluxData from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            InfluxData          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/powersj/\" aria-label=\"powersj\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/719da7c4c85995b5ac2f4bcde92c0f17f6495ffc/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f30626336323362653433323139613864383337613463383564383235346332653f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for powersj from gravatar.com\" title=\"Avatar for powersj from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            powersj          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/srebhan/\" aria-label=\"srebhan\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/f2657d57640348c609cda8b455eff8cf7b0d9cf7/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f38616263313362336166376435363832346565366230336439636364313065653f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for srebhan from gravatar.com\" title=\"Avatar for srebhan from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            srebhan          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+4+-+Beta\">            4 - Beta          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.12\">            Python :: 3.12          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Database\">            Database          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries\">            Software Development :: Libraries          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries+%3A%3A+Python+Modules\">            Software Development :: Libraries :: Python Modules          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/influxdb-client/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.41.0/\">                <p class=\"release__version\">                  1.41.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2024-03-01T08:25:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 1, 2024</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.40.0/\">                <p class=\"release__version\">                  1.40.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2024-01-30T07:47:13+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 30, 2024</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.39.0/\">                <p class=\"release__version\">                  1.39.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-12-05T07:48:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 5, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.38.0/\">                <p class=\"release__version\">                  1.38.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-10-02T09:23:19+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 2, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.37.0/\">                <p class=\"release__version\">                  1.37.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-07-28T05:26:30+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 28, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.36.1/\">                <p class=\"release__version\">                  1.36.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-02-23T20:58:07+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 23, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.36.0/\">                <p class=\"release__version\">                  1.36.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-01-26T18:23:48+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 26, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.35.0/\">                <p class=\"release__version\">                  1.35.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-12-01T17:57:45+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 1, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.34.0/\">                <p class=\"release__version\">                  1.34.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-27T20:32:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 27, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.33.0/\">                <p class=\"release__version\">                  1.33.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-09-29T15:22:27+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 29, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.32.0/\">                <p class=\"release__version\">                  1.32.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-08-25T15:26:08+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 25, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.31.0/\">                <p class=\"release__version\">                  1.31.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-07-29T14:11:39+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 29, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.30.0/\">                <p class=\"release__version\">                  1.30.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-06-24T06:18:07+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 24, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.29.1/\">                <p class=\"release__version\">                  1.29.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-05-23T11:23:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 23, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.29.0/\">                <p class=\"release__version\">                  1.29.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-05-20T06:17:02+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 20, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.28.0/\">                <p class=\"release__version\">                  1.28.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-04-19T06:03:58+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 19, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.27.0/\">                <p class=\"release__version\">                  1.27.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-03-18T07:21:36+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 18, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.26.0/\">                <p class=\"release__version\">                  1.26.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-02-18T07:27:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 18, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.25.0/\">                <p class=\"release__version\">                  1.25.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-01-20T08:49:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 20, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.24.0/\">                <p class=\"release__version\">                  1.24.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-26T07:42:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 26, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.23.0/\">                <p class=\"release__version\">                  1.23.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-10-26T12:15:51+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 26, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.22.0/\">                <p class=\"release__version\">                  1.22.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-10-22T07:12:51+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 22, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.21.0/\">                <p class=\"release__version\">                  1.21.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-09-17T06:44:39+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 17, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.20.0/\">                <p class=\"release__version\">                  1.20.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-20T06:12:23+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 20, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.19.0/\">                <p class=\"release__version\">                  1.19.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-07-09T06:17:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 9, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.18.0/\">                <p class=\"release__version\">                  1.18.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-06-04T05:23:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 4, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.17.0/\">                <p class=\"release__version\">                  1.17.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-04-30T05:46:12+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 30, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.16.0/\">                <p class=\"release__version\">                  1.16.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-04-01T06:36:18+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 1, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.15.0/\">                <p class=\"release__version\">                  1.15.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-03-05T07:14:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 5, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.14.0/\">                <p class=\"release__version\">                  1.14.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-01-29T06:33:41+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 29, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.13.0/\">                <p class=\"release__version\">                  1.13.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-12-04T07:37:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 4, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.12.0/\">                <p class=\"release__version\">                  1.12.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-10-30T07:09:23+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 30, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.11.0/\">                <p class=\"release__version\">                  1.11.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-10-02T05:37:52+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 2, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.10.0/\">                <p class=\"release__version\">                  1.10.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-08-14T05:55:28+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 14, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.9.0/\">                <p class=\"release__version\">                  1.9.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-07-17T07:33:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 17, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.8.0/\">                <p class=\"release__version\">                  1.8.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-06-19T07:23:12+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 19, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.7.0/\">                <p class=\"release__version\">                  1.7.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-05-15T06:13:38+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 15, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.6.0/\">                <p class=\"release__version\">                  1.6.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-04-17T06:13:45+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 17, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.5.0/\">                <p class=\"release__version\">                  1.5.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-03-13T08:36:41+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 13, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.4.0/\">                <p class=\"release__version\">                  1.4.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-02-14T08:33:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 14, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.3.0/\">                <p class=\"release__version\">                  1.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-01-17T09:24:15+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 17, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.2.0/\">                <p class=\"release__version\">                  1.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-12-06T09:17:14+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 6, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.1.0/\">                <p class=\"release__version\">                  1.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-11-18T09:09:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 18, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/1.0.0/\">                <p class=\"release__version\">                  1.0.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-11-11T09:46:54+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 11, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/0.0.2/\">                <p class=\"release__version\">                  0.0.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-09-26T16:14:06+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 26, 2019</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/influxdb-client/0.0.1/\">                <p class=\"release__version\">                  0.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-09-26T16:04:14+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 26, 2019</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/bf/80/8f5dab7bfe55e65181cbc1e268806ae1ddc935a1b2ae612ed7f41d8bd0c1/influxdb_client-1.41.0.tar.gz\">          influxdb_client-1.41.0.tar.gz        </a>        (382.2 kB        <a href=\"#copy-hash-modal-b9a58c1e-d077-4db5-a6b6-248238ad372e\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2024-03-01T08:25:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 1, 2024</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/7c/84/ec4b6c4393c1fe7c3c774d21f688b0e8c21f91710c61e3f24d31f1fda9c3/influxdb_client-1.41.0-py3-none-any.whl\">          influxdb_client-1.41.0-py3-none-any.whl        </a>        (744.6 kB        <a href=\"#copy-hash-modal-11769396-89b6-4284-bf11-4abdfd1139ee\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2024-03-01T08:25:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 1, 2024</time>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-b9a58c1e-d077-4db5-a6b6-248238ad372e\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for influxdb_client-1.41.0.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for influxdb_client-1.41.0.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">4b85bad3991f3de24818366c87c8868a64917fea2d21bbcc2b579fbe5d904990</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">2685e429b3f12b4a253284b6189be676</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">bf808f5dab7bfe55e65181cbc1e268806ae1ddc935a1b2ae612ed7f41d8bd0c1</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-11769396-89b6-4284-bf11-4abdfd1139ee\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for influxdb_client-1.41.0-py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for influxdb_client-1.41.0-py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">420d7c5b7ed0f778de0eac923aded3ea3a4eb6b247e3fbb7a187e0a577a5a3be</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">495c5c1f5992e1349ae1fa97369555ad</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">7c84ec4b6c4393c1fe7c3c774d21f688b0e8c21f91710c61e3f24d31f1fda9c3</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "pylibmc",
  "url": "https://sendapatch.se/projects/pylibmc/",
  "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\">  <head>    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" />    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />    <title>pylibmc - Python client for memcached &#8212; pylibmc 1.6.0 documentation</title>    <link rel=\"stylesheet\" href=\"_static/main.css\" type=\"text/css\" />    <link rel=\"stylesheet\" href=\"_static/pygments.css\" type=\"text/css\" />        <script type=\"text/javascript\" id=\"documentation_options\" data-url_root=\"./\" src=\"_static/documentation_options.js\"></script>    <script type=\"text/javascript\" src=\"_static/jquery.js\"></script>    <script type=\"text/javascript\" src=\"_static/underscore.js\"></script>    <script type=\"text/javascript\" src=\"_static/doctools.js\"></script>    <script async=\"async\" type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"></script>        <link rel=\"index\" title=\"Index\" href=\"genindex.html\" />    <link rel=\"search\" title=\"Search\" href=\"search.html\" />    <link rel=\"next\" title=\"Change Log\" href=\"changelog.html\" />   </head><body>    <div class=\"related\" role=\"navigation\" aria-label=\"related navigation\">      <h3>Navigation</h3>      <ul>        <li class=\"right\" style=\"margin-right: 10px\">          <a href=\"genindex.html\" title=\"General Index\"             accesskey=\"I\">index</a></li>        <li class=\"right\" >          <a href=\"changelog.html\" title=\"Change Log\"             accesskey=\"N\">next</a> |</li>        <li class=\"nav-item nav-item-0\"><a href=\"#\">pylibmc 1.6.0 documentation</a> &#187;</li>       </ul>    </div>      <div class=\"document\">      <div class=\"documentwrapper\">          <div class=\"body\" role=\"main\">              <div class=\"section\" id=\"pylibmc-python-client-for-memcached\"><h1><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pylibmc</span></code> - Python client for memcached<a class=\"headerlink\" href=\"#pylibmc-python-client-for-memcached\" title=\"Permalink to this headline\">\u00b6</a></h1><p><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pylibmc</span></code> is a client in Python for <a class=\"reference external\" href=\"http://memcached.org/\">memcached</a>. It is a wrapper around<a class=\"reference external\" href=\"http://tangent.org/\">TangentOrg</a>\u2019s <a class=\"reference external\" href=\"http://libmemcached.org/libMemcached.html\">libmemcached</a> library.</p><p>The interface is intentionally made as close to <a class=\"reference external\" href=\"http://www.tummy.com/Community/software/python-memcached/\">python-memcached</a>as possible, so that applications can drop-in replace it.</p><p><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pylibmc</span></code> leverages among other things configurable behaviors, datapickling, data compression, battle-tested GIL retention, consistentdistribution, and the binary memcached protocol.</p><div class=\"section\" id=\"example-usage\"><h2>Example usage<a class=\"headerlink\" href=\"#example-usage\" title=\"Permalink to this headline\">\u00b6</a></h2><p>Create a memcached connection and configure it:</p><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pylibmc</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span> <span class=\"o\">=</span> <span class=\"n\">pylibmc</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">([</span><span class=\"s2\">&quot;127.0.0.1&quot;</span><span class=\"p\">],</span> <span class=\"n\">binary</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span><span class=\"gp\">... </span>                    <span class=\"n\">behaviors</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;tcp_nodelay&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span><span class=\"gp\">... </span>                               <span class=\"s2\">&quot;ketama&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">})</span></pre></div></div><div class=\"admonition hint\"><p class=\"first admonition-title\">Hint</p><p class=\"last\">In earlier versions <code class=\"docutils literal notranslate\"><span class=\"pre\">behaviors</span></code> was no keywordargument, only an attribute. To safe-guard version compatibility use<code class=\"docutils literal notranslate\"><span class=\"pre\">mc.behaviors</span> <span class=\"pre\">=</span> <span class=\"pre\">{...}</span></code></p></div><p>Basic memcached operations can be accomplished with the mapping interface:</p><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"p\">[</span><span class=\"s2\">&quot;some_key&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Some value&quot;</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"p\">[</span><span class=\"s2\">&quot;some_key&quot;</span><span class=\"p\">]</span><span class=\"go\">&#39;Some value&#39;</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">del</span> <span class=\"n\">mc</span><span class=\"p\">[</span><span class=\"s2\">&quot;some_key&quot;</span><span class=\"p\">]</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s2\">&quot;some_key&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">mc</span><span class=\"go\">False</span></pre></div></div><p>\u201cClassic\u201d style memcached operations allow for more control and clarity:</p><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">&quot;some_key&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Some value&quot;</span><span class=\"p\">)</span><span class=\"go\">True</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;some_key&quot;</span><span class=\"p\">)</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">value</span><span class=\"go\">&#39;Some value&#39;</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">&quot;another_key&quot;</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"go\">True</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s2\">&quot;another_key&quot;</span><span class=\"p\">)</span><span class=\"go\">True</span></pre></div></div><p>Automatic pickling of complex Python types:</p><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">&quot;complex_plane=awesome&quot;</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"n\">j</span><span class=\"p\">)</span><span class=\"go\">True</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;complex_plane=awesome&quot;</span><span class=\"p\">)</span><span class=\"go\">(4+3j)</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">fractions</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">&quot;structured&quot;</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s2\">&quot;b&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;c&quot;</span><span class=\"p\">),</span><span class=\"gp\">... </span>                      <span class=\"s2\">&quot;a2&quot;</span><span class=\"p\">:</span> <span class=\"n\">fractions</span><span class=\"o\">.</span><span class=\"n\">Fraction</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)})</span><span class=\"go\">True</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;structured&quot;</span><span class=\"p\">)</span><span class=\"go\">{&#39;a&#39;: (&#39;b&#39;, &#39;c&#39;), &#39;a2&#39;: Fraction(1, 3)}</span></pre></div></div><p>Atomic memcached-side increments and decrements:</p><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">&quot;key&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">)</span>  <span class=\"c1\"># str or int is fine</span><span class=\"go\">True</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">incr</span><span class=\"p\">(</span><span class=\"s2\">&quot;key&quot;</span><span class=\"p\">)</span><span class=\"go\">2L</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">decr</span><span class=\"p\">(</span><span class=\"s2\">&quot;key&quot;</span><span class=\"p\">)</span><span class=\"go\">1L</span></pre></div></div><p>Batch operations lessen GIL contention and thus I/O is faster:</p><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">get_multi</span><span class=\"p\">([</span><span class=\"s2\">&quot;key&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;another_key&quot;</span><span class=\"p\">])</span><span class=\"go\">{&#39;key&#39;: &#39;1&#39;}</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">set_multi</span><span class=\"p\">({</span><span class=\"s2\">&quot;cats&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;on acid&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;furry&quot;</span><span class=\"p\">],</span> <span class=\"s2\">&quot;dogs&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">})</span><span class=\"go\">[]</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">get_multi</span><span class=\"p\">([</span><span class=\"s2\">&quot;cats&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dogs&quot;</span><span class=\"p\">])</span><span class=\"go\">{&#39;cats&#39;: [&#39;on acid&#39;, &#39;furry&#39;], &#39;dogs&#39;: True}</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">delete_multi</span><span class=\"p\">([</span><span class=\"s2\">&quot;cats&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dogs&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;nonextant&quot;</span><span class=\"p\">])</span><span class=\"go\">False</span></pre></div></div></div><div class=\"section\" id=\"further-reading\"><h2>Further Reading<a class=\"headerlink\" href=\"#further-reading\" title=\"Permalink to this headline\">\u00b6</a></h2><div class=\"toctree-wrapper compound\"><ul><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"changelog.html\">Change Log</a><ul><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changelog.html#new-in-version-1-6-0\">New in version 1.6.0</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changelog.html#new-in-version-1-5-0\">New in version 1.5.0</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changelog.html#new-in-version-1-4-0\">New in version 1.4.0</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changelog.html#new-in-version-1-3-0\">New in version 1.3.0</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changelog.html#new-in-version-1-2-0\">New in version 1.2.0</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changelog.html#new-in-version-1-1\">New in version 1.1</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changelog.html#new-in-version-1-0\">New in version 1.0</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changelog.html#new-in-version-0-9\">New in version 0.9</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changelog.html#new-in-version-0-8\">New in version 0.8</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changelog.html#new-in-version-0-7\">New in version 0.7</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changelog.html#new-in-version-0-6\">New in version 0.6</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changelog.html#new-in-version-0-5\">New in version 0.5</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changelog.html#new-in-version-0-4\">New in version 0.4</a></li></ul></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"install.html\">Installing</a><ul><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"install.html#requirements\">Requirements</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"install.html#building\">Building</a></li></ul></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"reference.html\">Reference</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"pooling.html\">Pooling</a><ul><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"pooling.html#an-example-with-werkzeug\">An example with Werkzeug</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"pooling.html#fifo-like-pooling\">FIFO-like pooling</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"pooling.html#thread-mapped-pooling\">Thread-mapped pooling</a></li></ul></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"behaviors.html\">Behaviors</a><ul><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"behaviors.html#hashing\">Hashing</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"behaviors.html#id3\">Distribution</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"behaviors.html#failover\">Failover</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"behaviors.html#non-libmemcached-behaviors\">Non-libmemcached Behaviors</a></li></ul></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"misc.html\">Miscellaneous information</a><ul><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"misc.html#differences-from-python-memcached\">Differences from <code class=\"docutils literal notranslate\"><span class=\"pre\">python-memcached</span></code></a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"misc.html#exceptions\">Exceptions</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"misc.html#compression\">Compression</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"misc.html#threading\">Threading</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"misc.html#python-3-str-vs-bytes-keys\">Python 3 <code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code> vs. <code class=\"docutils literal notranslate\"><span class=\"pre\">bytes</span></code> keys</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"misc.html#verify-keys-verify-keys\"><cite>verify_keys</cite> \u22c1 \u00ac <cite>verify_keys</cite></a></li></ul></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"coders.html\">The List of Honored People</a></li></ul></div></div><div class=\"section\" id=\"links-and-resources\"><h2>Links and resources<a class=\"headerlink\" href=\"#links-and-resources\" title=\"Permalink to this headline\">\u00b6</a></h2><ul class=\"simple\"><li>sendapatch.se: <a class=\"reference external\" href=\"http://sendapatch.se/\">sendapatch.se/</a></li><li>GitHub: <a class=\"reference external\" href=\"http://github.com/lericson/pylibmc\">github.com/lericson/pylibmc</a></li><li>PyPI: <a class=\"reference external\" href=\"http://pypi.python.org/pypi/pylibmc\">pypi.python.org/pypi/pylibmc</a></li><li>libmemcached: <a class=\"reference external\" href=\"http://libmemcached.org/libMemcached.html\">tangent.org/552/libmemcached.html</a></li><li>memcached: <a class=\"reference external\" href=\"http://memcached.org/\">memcached.org/</a></li><li>BitCoin fund: <a class=\"reference external\" href=\"bitcoin:12dveKhqiJWCY8zXT4kaHdHELXPeGAUo9h\">12dveKhqiJWCY8zXT4kaHdHELXPeGAUo9h</a></li></ul></div></div>          </div>      </div>      <div class=\"clearer\"></div>    </div><!-- I hate crud -->    <div class=\"footer\" role=\"contentinfo\">        &#169; Copyright 2018, Ludvig Ericson.      Created using <a href=\"http://sphinx-doc.org/\">Sphinx</a> 1.8.1.    </div>  </body></html>",
  "embeddings": []
}
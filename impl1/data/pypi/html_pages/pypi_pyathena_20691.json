{
  "libtype": "pypi",
  "libname": "pyathena",
  "url": "https://pypi.org/project/PyAthena/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>PyAthena \u00b7 PyPI</title>    <meta name=\"description\" content=\"Python DB API 2.0 (PEP 249) client for Amazon Athena\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for PyAthena\" href=\"/rss/project/pyathena/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/PyAthena/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/PyAthena/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"PyAthena\">    <meta property=\"og:description\" content=\"Python DB API 2.0 (PEP 249) client for Amazon Athena\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/laughingman7743/PyAthena\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:laughingman7743/PyAthena+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        PyAthena 3.3.0      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install PyAthena</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/PyAthena/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2024-02-11T15:40:39+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 11, 2024</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/pyathena\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">Python DB API 2.0 (PEP 249) client for Amazon Athena</p><div data-html-include=\"/_includes/edit-project-button/pyathena\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for PyAthena\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/laughingman7743/PyAthena/\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>homepage      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/laughingman7743/PyAthena/\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>repository      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/PyAthena\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (Copyright 2017 laughingman7743  Permission is hereby granted, free of charge, to any person obtainin...)</p>    <p><strong>Author:</strong> <a href=\"mailto:laughingman7743@gmail.com\">laughingman7743</a></p>  <p>    <strong>Requires:</strong> Python &gt;=3.8.1  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/laughingman7743/\" aria-label=\"laughingman7743\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/18a898b29bebe25ed7fa61e2c41bfa3a24296226/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f62386162326535303062313332343765646531306233656430363031326233613f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for laughingman7743 from gravatar.com\" title=\"Avatar for laughingman7743 from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            laughingman7743          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+4+-+Beta\">            4 - Beta          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Operating System</strong>      <ul>        <li>          <a href=\"/search/?c=Operating+System+%3A%3A+OS+Independent\">            OS Independent          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.12\">            Python :: 3.12          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Database+%3A%3A+Front-Ends\">            Database :: Front-Ends          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for PyAthena\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <a href=\"https://badge.fury.io/py/pyathena\" rel=nofollow><img alt=\"https://badge.fury.io/py/pyathena.svg\" src=\"https://pypi-camo.freetls.fastly.net/a849b5ea1b6f71c082b3fbdc37f9b6ea8269b459/68747470733a2f2f62616467652e667572792e696f2f70792f7079617468656e612e737667\"></a><a href=\"https://pypi.org/project/PyAthena/\" rel=nofollow><img alt=\"https://img.shields.io/pypi/pyversions/PyAthena.svg\" src=\"https://pypi-camo.freetls.fastly.net/c159b925b0c71071f91ba7a5cc443c87b647464c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f5079417468656e612e737667\"></a><a href=\"https://github.com/laughingman7743/PyAthena/actions/workflows/test.yaml\" rel=nofollow><img alt=\"https://github.com/laughingman7743/PyAthena/actions/workflows/test.yaml/badge.svg\" src=\"https://pypi-camo.freetls.fastly.net/e9077733f2fb34551dcc7445c51a3817dc976842/68747470733a2f2f6769746875622e636f6d2f6c61756768696e676d616e373734332f5079417468656e612f616374696f6e732f776f726b666c6f77732f746573742e79616d6c2f62616467652e737667\"></a><a href=\"https://github.com/laughingman7743/PyAthena/blob/master/LICENSE\" rel=nofollow><img alt=\"https://img.shields.io/pypi/l/PyAthena.svg\" src=\"https://pypi-camo.freetls.fastly.net/adf496117f586a7ac2c62994d169b7dfe77afe3e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f5079417468656e612e737667\"></a><a href=\"https://pepy.tech/project/pyathena\" rel=nofollow><img alt=\"https://static.pepy.tech/badge/pyathena/month\" src=\"https://pypi-camo.freetls.fastly.net/66e606aa1d8cd7b2b6b503f29aaa76de83c96b1d/68747470733a2f2f7374617469632e706570792e746563682f62616467652f7079617468656e612f6d6f6e7468\"></a><a href=\"https://github.com/astral-sh/ruff\" rel=nofollow><img alt=Ruff src=\"https://pypi-camo.freetls.fastly.net/7514d28188ac22939b8c251d96f44c9e33c327cc/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f61737472616c2d73682f727566662f6d61696e2f6173736574732f62616467652f76322e6a736f6e\"></a><section id=pyathena><h2>PyAthena</h2><p>PyAthena is a Python <a href=\"https://www.python.org/dev/peps/pep-0249/\" rel=nofollow>DB API 2.0 (PEP 249)</a> client for <a href=\"https://docs.aws.amazon.com/athena/latest/APIReference/Welcome.html\" rel=nofollow>Amazon Athena</a>.</p><nav class=\"contents local\" id=table-of-contents><p class=topic-title>Table of Contents:</p><ul class=simple><li><p><a href=#requirements id=toc-entry-1 rel=nofollow>Requirements</a></li><li><p><a href=#installation id=toc-entry-2 rel=nofollow>Installation</a></li><li><p><a href=#usage id=toc-entry-3 rel=nofollow>Usage</a></p><ul><li><p><a href=#basic-usage id=toc-entry-4 rel=nofollow>Basic usage</a></li><li><p><a href=#cursor-iteration id=toc-entry-5 rel=nofollow>Cursor iteration</a></li><li><p><a href=#query-with-parameter id=toc-entry-6 rel=nofollow>Query with parameter</a></li><li><p><a href=#sqlalchemy id=toc-entry-7 rel=nofollow>SQLAlchemy</a></li><li><p><a href=#pandas id=toc-entry-8 rel=nofollow>Pandas</a></li><li><p><a href=#dictcursor id=toc-entry-9 rel=nofollow>DictCursor</a></li><li><p><a href=#asynccursor id=toc-entry-10 rel=nofollow>AsyncCursor</a></li><li><p><a href=#asyncdictcursor id=toc-entry-11 rel=nofollow>AsyncDictCursor</a></li><li><p><a href=#pandascursor id=toc-entry-12 rel=nofollow>PandasCursor</a></li><li><p><a href=#asyncpandascursor id=toc-entry-13 rel=nofollow>AsyncPandasCursor</a></li><li><p><a href=#arrowcursor id=toc-entry-14 rel=nofollow>ArrowCursor</a></li><li><p><a href=#asyncarrowcursor id=toc-entry-15 rel=nofollow>AsyncArrowCursor</a></li><li><p><a href=#sparkcursor id=toc-entry-16 rel=nofollow>SparkCursor</a></li><li><p><a href=#asyncsparkcursor id=toc-entry-17 rel=nofollow>AsyncSparkCursor</a></li><li><p><a href=#quickly-re-run-queries id=toc-entry-18 rel=nofollow>Quickly re-run queries</a></li></ul></li><li><p><a href=#credentials id=toc-entry-19 rel=nofollow>Credentials</a></p><ul><li><p><a href=#examples id=toc-entry-20 rel=nofollow>Examples</a></li></ul></li><li><p><a href=#testing id=toc-entry-21 rel=nofollow>Testing</a></p><ul><li><p><a href=#run-test id=toc-entry-22 rel=nofollow>Run test</a></li><li><p><a href=#run-test-multiple-python-versions id=toc-entry-23 rel=nofollow>Run test multiple Python versions</a></li><li><p><a href=#github-actions id=toc-entry-24 rel=nofollow>GitHub Actions</a></li></ul></li><li><p><a href=#code-formatting id=toc-entry-25 rel=nofollow>Code formatting</a></p><ul><li><p><a href=#appy-format id=toc-entry-26 rel=nofollow>Appy format</a></li><li><p><a href=#check-format id=toc-entry-27 rel=nofollow>Check format</a></li></ul></li><li><p><a href=#license id=toc-entry-28 rel=nofollow>License</a></li></ul></nav><section id=requirements><h3><a href=#toc-entry-1 rel=nofollow>Requirements</a></h3><ul class=simple><li><p>Python</p><ul><li><p>CPython 3.8 3.9 3.10, 3.11 3.12</li></ul></li></ul></section><section id=installation><h3><a href=#toc-entry-2 rel=nofollow>Installation</a></h3><pre><code>$<span class=w> </span>pip<span class=w> </span>install<span class=w> </span>PyAthena</code></pre><p>Extra packages:</p><table><thead><tr><th class=head><p>Package</th><th class=head><p>Install command</th><th class=head><p>Version</th></tr></thead><tbody><tr><td><p>SQLAlchemy</td><td><p><span class=\"docutils literal\">pip install PyAthena[SQLAlchemy]</span></td><td><p>&gt;=1.0.0</td></tr><tr><td><p>Pandas</td><td><p><span class=\"docutils literal\">pip install PyAthena[Pandas]</span></td><td><p>&gt;=1.3.0</td></tr><tr><td><p>Arrow</td><td><p><span class=\"docutils literal\">pip install PyAthena[Arrow]</span></td><td><p>&gt;=7.0.0</td></tr><tr><td><p>fastparquet</td><td><p><span class=\"docutils literal\">pip install PyAthena[fastparquet]</span></td><td><p>&gt;=0.4.0</td></tr></tbody></table></section><section id=usage><h3><a href=#toc-entry-3 rel=nofollow>Usage</a></h3><section id=basic-usage><h4><a href=#toc-entry-4 rel=nofollow>Basic usage</a></h4><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM one_row\"</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>description</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>fetchall</span><span class=p>())</span></code></pre></section><section id=cursor-iteration><h4><a href=#toc-entry-5 rel=nofollow>Cursor iteration</a></h4><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows LIMIT 10\"</span><span class=p>)</span><span class=w></span><span class=k>for</span> <span class=n>row</span> <span class=ow>in</span> <span class=n>cursor</span><span class=p>:</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>row</span><span class=p>)</span></code></pre></section><section id=query-with-parameter><h4><a href=#toc-entry-6 rel=nofollow>Query with parameter</a></h4><p>Supported <a href=\"https://www.python.org/dev/peps/pep-0249/#paramstyle\" rel=nofollow>DB API paramstyle</a> is only <span class=\"docutils literal\">PyFormat</span>.<span class=\"docutils literal\">PyFormat</span> only supports <a href=\"https://pyformat.info/#named_placeholders\" rel=nofollow>named placeholders</a> with old <span class=\"docutils literal\">%</span> operator style and parameters specify dictionary format.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"\"\"               SELECT col_string FROM one_row_complex               WHERE col_string = </span><span class=si>%(param)s</span><span class=s2>               \"\"\"</span><span class=p>,</span> <span class=p>{</span><span class=s2>\"param\"</span><span class=p>:</span> <span class=s2>\"a string\"</span><span class=p>})</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>fetchall</span><span class=p>())</span></code></pre><p>if <span class=\"docutils literal\">%</span> character is contained in your query, it must be escaped with <span class=\"docutils literal\">%%</span> like the following:</p><pre><code><span class=k>SELECT</span><span class=w> </span><span class=n>col_string</span><span class=w> </span><span class=k>FROM</span><span class=w> </span><span class=n>one_row_complex</span><span class=w></span><span class=k>WHERE</span><span class=w> </span><span class=n>col_string</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=o>%</span><span class=p>(</span><span class=n>param</span><span class=p>)</span><span class=n>s</span><span class=w> </span><span class=k>OR</span><span class=w> </span><span class=n>col_string</span><span class=w> </span><span class=k>LIKE</span><span class=w> </span><span class=s1>'a%%'</span></code></pre></section><section id=sqlalchemy><h4><a href=#toc-entry-7 rel=nofollow>SQLAlchemy</a></h4><p>Install SQLAlchemy with <span class=\"docutils literal\">pip install <span class=pre>\"SQLAlchemy&gt;=1.0.0\"</span></span> or <span class=\"docutils literal\">pip install PyAthena[SQLAlchemy]</span>.Supported SQLAlchemy is 1.0.0 or higher.</p><pre><code><span class=kn>from</span> <span class=nn>sqlalchemy</span> <span class=kn>import</span> <span class=n>func</span><span class=p>,</span> <span class=n>select</span><span class=w></span><span class=kn>from</span> <span class=nn>sqlalchemy.engine</span> <span class=kn>import</span> <span class=n>create_engine</span><span class=w></span><span class=kn>from</span> <span class=nn>sqlalchemy.sql.schema</span> <span class=kn>import</span> <span class=n>Table</span><span class=p>,</span> <span class=n>MetaData</span><span class=w></span><span class=n>conn_str</span> <span class=o>=</span> <span class=s2>\"awsathena+rest://</span><span class=si>{aws_access_key_id}</span><span class=s2>:</span><span class=si>{aws_secret_access_key}</span><span class=s2>@athena.</span><span class=si>{region_name}</span><span class=s2>.amazonaws.com:443/\"</span>\\           <span class=s2>\"</span><span class=si>{schema_name}</span><span class=s2>?s3_staging_dir=</span><span class=si>{s3_staging_dir}</span><span class=s2>\"</span><span class=w></span><span class=n>engine</span> <span class=o>=</span> <span class=n>create_engine</span><span class=p>(</span><span class=n>conn_str</span><span class=o>.</span><span class=n>format</span><span class=p>(</span><span class=w></span>    <span class=n>aws_access_key_id</span><span class=o>=</span><span class=s2>\"YOUR_ACCESS_KEY_ID\"</span><span class=p>,</span><span class=w></span>    <span class=n>aws_secret_access_key</span><span class=o>=</span><span class=s2>\"YOUR_SECRET_ACCESS_KEY\"</span><span class=p>,</span><span class=w></span>    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>    <span class=n>schema_name</span><span class=o>=</span><span class=s2>\"default\"</span><span class=p>,</span><span class=w></span>    <span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>))</span><span class=w></span><span class=k>with</span> <span class=n>engine</span><span class=o>.</span><span class=n>connect</span><span class=p>()</span> <span class=k>as</span> <span class=n>connection</span><span class=p>:</span><span class=w></span>    <span class=n>many_rows</span> <span class=o>=</span> <span class=n>Table</span><span class=p>(</span><span class=s2>\"many_rows\"</span><span class=p>,</span> <span class=n>MetaData</span><span class=p>(),</span> <span class=n>autoload_with</span><span class=o>=</span><span class=n>connection</span><span class=p>)</span><span class=w></span>    <span class=n>result</span> <span class=o>=</span> <span class=n>connection</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=n>select</span><span class=p>(</span><span class=n>func</span><span class=o>.</span><span class=n>count</span><span class=p>())</span><span class=o>.</span><span class=n>select_from</span><span class=p>(</span><span class=n>many_rows</span><span class=p>))</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>result</span><span class=o>.</span><span class=n>scalar</span><span class=p>())</span></code></pre><p>The connection string has the following format:</p><pre><code>awsathena+rest://{aws_access_key_id}:{aws_secret_access_key}@athena.{region_name}.amazonaws.com:443/{schema_name}?s3_staging_dir={s3_staging_dir}&amp;...</code></pre><p>If you do not specify <span class=\"docutils literal\">aws_access_key_id</span> and <span class=\"docutils literal\">aws_secret_access_key</span> using instance profile or boto3 configuration file:</p><pre><code>awsathena+rest://:@athena.{region_name}.amazonaws.com:443/{schema_name}?s3_staging_dir={s3_staging_dir}&amp;...</code></pre><section id=dialect-driver><h5>Dialect &amp; driver</h5><table><thead><tr><th class=head><p>Dialect</th><th class=head><p>Driver</th><th class=head><p>Schema</th><th class=head><p>Cursor</th></tr></thead><tbody><tr><td><p>awsathena</td><td></td><td><p>awsathena</td><td><p>DefaultCursor</td></tr><tr><td><p>awsathena</td><td><p>rest</td><td><p>awsathena+rest</td><td><p>DefaultCursor</td></tr><tr><td><p>awsathena</td><td><p>pandas</td><td><p>awsathena+pandas</td><td><p><a href=#pandascursor rel=nofollow>PandasCursor</a></td></tr><tr><td><p>awsathena</td><td><p>arrow</td><td><p>awsathena+arrow</td><td><p><a href=#arrowcursor rel=nofollow>ArrowCursor</a></td></tr></tbody></table></section><section id=dialect-options><h5>Dialect options</h5><section id=table-options><h6>Table options</h6><dl><dt>location</dt><dd><dl><dt>Type:</dt><dd><p>str</p></dd><dt>Description:</dt><dd><p>Specifies the location of the underlying data in the Amazon S3 from which the table is created.</p></dd><dt>value:</dt><dd><p>s3://bucket/path/to/</p></dd><dt>Example:</dt><dd><pre><code><span class=n>Table</span><span class=p>(</span><span class=s2>\"some_table\"</span><span class=p>,</span> <span class=n>metadata</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>awsathena_location</span><span class=o>=</span><span class=s2>\"s3://bucket/path/to/\"</span><span class=p>)</span></code></pre></dd></dl></dd><dt>compression</dt><dd><dl><dt>Type:</dt><dd><p>str</p></dd><dt>Description:</dt><dd><p>Specifies the compression format.</p></dd><dt>Value:</dt><dd><ul class=simple><li><p>BZIP2</li><li><p>DEFLATE</li><li><p>GZIP</li><li><p>LZ4</li><li><p>LZO</li><li><p>SNAPPY</li><li><p>ZLIB</li><li><p>ZSTD</li><li><p>NONE|UNCOMPRESSED</li></ul></dd><dt>Example:</dt><dd><pre><code><span class=n>Table</span><span class=p>(</span><span class=s2>\"some_table\"</span><span class=p>,</span> <span class=n>metadata</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>awsathena_compression</span><span class=o>=</span><span class=s2>\"SNAPPY\"</span><span class=p>)</span></code></pre></dd></dl></dd><dt>row_format</dt><dd><dl><dt>Type:</dt><dd><p>str</p></dd><dt>Description:</dt><dd><p>Specifies the row format of the table and its underlying source data if applicable.</p></dd><dt>Value:</dt><dd><ul class=simple><li><p>[DELIMITED FIELDS TERMINATED BY char [ESCAPED BY char]]</li><li><p>[DELIMITED COLLECTION ITEMS TERMINATED BY char]</li><li><p>[MAP KEYS TERMINATED BY char]</li><li><p>[LINES TERMINATED BY char]</li><li><p>[NULL DEFINED AS char]</li><li><p>SERDE \u2018serde_name\u2019</li></ul></dd><dt>Example:</dt><dd><pre><code><span class=n>Table</span><span class=p>(</span><span class=s2>\"some_table\"</span><span class=p>,</span> <span class=n>metadata</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>awsathena_row_format</span><span class=o>=</span><span class=s2>\"SERDE 'org.openx.data.jsonserde.JsonSerDe'\"</span><span class=p>)</span></code></pre></dd></dl></dd><dt>file_format</dt><dd><dl><dt>Type:</dt><dd><p>str</p></dd><dt>Description:</dt><dd><p>Specifies the file format for table data.</p></dd><dt>Value:</dt><dd><ul class=simple><li><p>SEQUENCEFILE</li><li><p>TEXTFILE</li><li><p>RCFILE</li><li><p>ORC</li><li><p>PARQUET</li><li><p>AVRO</li><li><p>ION</li><li><p>INPUTFORMAT input_format_classname OUTPUTFORMAT output_format_classname</li></ul></dd><dt>Example:</dt><dd><pre><code><span class=n>Table</span><span class=p>(</span><span class=s2>\"some_table\"</span><span class=p>,</span> <span class=n>metadata</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>awsathena_file_format</span><span class=o>=</span><span class=s2>\"PARQUET\"</span><span class=p>)</span><span class=w></span><span class=n>Table</span><span class=p>(</span><span class=s2>\"some_table\"</span><span class=p>,</span> <span class=n>metadata</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>awsathena_file_format</span><span class=o>=</span><span class=s2>\"INPUTFORMAT 'org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat' OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat'\"</span><span class=p>)</span></code></pre></dd></dl></dd><dt>serdeproperties</dt><dd><dl><dt>Type:</dt><dd><p>dict[str, str]</p></dd><dt>Description:</dt><dd><p>Specifies one or more custom properties allowed in SerDe.</p></dd><dt>Value:</dt><dd><pre><code><span class=p>{</span> <span class=s2>\"property_name\"</span><span class=p>:</span> <span class=s2>\"property_value\"</span><span class=p>,</span> <span class=s2>\"property_name\"</span><span class=p>:</span> <span class=s2>\"property_value\"</span><span class=p>,</span> <span class=o>...</span> <span class=p>}</span></code></pre></dd><dt>Example:</dt><dd><pre><code><span class=n>Table</span><span class=p>(</span><span class=s2>\"some_table\"</span><span class=p>,</span> <span class=n>metadata</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>awsathena_serdeproperties</span><span class=o>=</span><span class=p>{</span><span class=w></span>    <span class=s2>\"separatorChar\"</span><span class=p>:</span> <span class=s2>\",\"</span><span class=p>,</span> <span class=s2>\"escapeChar\"</span><span class=p>:</span> <span class=s2>\"</span><span class=se>\\\\\\\\</span><span class=s2>\"</span><span class=w></span><span class=p>})</span></code></pre></dd></dl></dd><dt>tblproperties</dt><dd><dl><dt>Type:</dt><dd><p>dict[str, str]</p></dd><dt>Description:</dt><dd><p>Specifies custom metadata key-value pairs for the table definition in addition to predefined table properties.</p></dd><dt>Value:</dt><dd><pre><code><span class=p>{</span> <span class=s2>\"property_name\"</span><span class=p>:</span> <span class=s2>\"property_value\"</span><span class=p>,</span> <span class=s2>\"property_name\"</span><span class=p>:</span> <span class=s2>\"property_value\"</span><span class=p>,</span> <span class=o>...</span> <span class=p>}</span></code></pre></dd><dt>Example:</dt><dd><pre><code><span class=n>Table</span><span class=p>(</span><span class=s2>\"some_table\"</span><span class=p>,</span> <span class=n>metadata</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>awsathena_tblproperties</span><span class=o>=</span><span class=p>{</span><span class=w></span>    <span class=s2>\"projection.enabled\"</span><span class=p>:</span> <span class=s2>\"true\"</span><span class=p>,</span><span class=w></span>    <span class=s2>\"projection.dt.type\"</span><span class=p>:</span> <span class=s2>\"date\"</span><span class=p>,</span><span class=w></span>    <span class=s2>\"projection.dt.range\"</span><span class=p>:</span> <span class=s2>\"NOW-1YEARS,NOW\"</span><span class=p>,</span><span class=w></span>    <span class=s2>\"projection.dt.format\"</span><span class=p>:</span> <span class=s2>\"yyyy-MM-dd\"</span><span class=p>,</span><span class=w></span><span class=p>})</span></code></pre></dd></dl></dd><dt>bucket_count</dt><dd><dl><dt>Type:</dt><dd><p>int</p></dd><dt>Description:</dt><dd><p>The number of buckets for bucketing your data.</p></dd><dt>Value:</dt><dd><p>Integer value greater than or equal to 0</p></dd><dt>Example:</dt><dd><pre><code><span class=n>Table</span><span class=p>(</span><span class=s2>\"some_table\"</span><span class=p>,</span> <span class=n>metadata</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>awsathena_bucket_count</span><span class=o>=</span><span class=mi>5</span><span class=p>)</span></code></pre></dd></dl></dd></dl><p>All table options can also be configured with the connection string as follows:</p><pre><code>awsathena+rest://:@athena.us-west-2.amazonaws.com:443/default?s3_staging_dir=s3%3A%2F%2Fbucket%2Fpath%2Fto%2F&amp;location=s3%3A%2F%2Fbucket%2Fpath%2Fto%2F&amp;file_format=parquet&amp;compression=snappy&amp;...</code></pre><p><span class=\"docutils literal\">serdeproperties</span> and <span class=\"docutils literal\">tblproperties</span> must be converted to strings in the <span class=\"docutils literal\"><span class=pre>'key'='value','key'='value'</span></span> format and url encoded.If single quotes are included, escape them with a backslash.</p><p>For example, if you configure a projection setting <span class=\"docutils literal\"><span class=pre>'projection.enabled'='true','projection.dt.type'='date','projection.dt.range'='NOW-1YEARS,NOW','projection.dt.format'=</span> <span class=pre>'yyyy-MM-dd'</span></span> in tblproperties, it would look like this</p><pre><code>awsathena+rest://:@athena.us-west-2.amazonaws.com:443/default?s3_staging_dir=s3%3A%2F%2Fbucket%2Fpath%2Fto%2F&amp;tblproperties=%27projection.enabled%27%3D%27true%27%2C%27projection.dt.type%27%3D%27date%27%2C%27projection.dt.range%27%3D%27NOW-1YEARS%2CNOW%27%2C%27projection.dt.format%27%3D+%27yyyy-MM-dd%27</code></pre></section><section id=column-options><h6>Column options</h6><dl><dt>partition</dt><dd><dl><dt>Type:</dt><dd><p>bool</p></dd><dt>Description:</dt><dd><p>Specifies a key for partitioning data.</p></dd><dt>Value:</dt><dd><p>True / False</p></dd><dt>Example:</dt><dd><pre><code><span class=n>Column</span><span class=p>(</span><span class=s2>\"some_column\"</span><span class=p>,</span> <span class=n>types</span><span class=o>.</span><span class=n>String</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>awsathena_partition</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span></code></pre></dd></dl></dd><dt>partition_transform</dt><dd><dl><dt>Type:</dt><dd><p>str</p></dd><dt>Description:</dt><dd><p>Specifies a partition transform function for partitioning data.Only has an effect for ICEBERG tables and when partition is set to true for the column.</p></dd><dt>Value:</dt><dd><ul class=simple><li><p>year</li><li><p>month</li><li><p>day</li><li><p>hour</li><li><p>bucket</li><li><p>truncate</li></ul></dd><dt>Example:</dt><dd><pre><code><span class=n>Column</span><span class=p>(</span><span class=s2>\"some_column\"</span><span class=p>,</span> <span class=n>types</span><span class=o>.</span><span class=n>Date</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>awsathena_partition</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span> <span class=n>awsathena_partition_transform</span><span class=o>=</span><span class=s1>'year'</span><span class=p>)</span></code></pre></dd></dl></dd><dt>partition_transform_bucket_count</dt><dd><dl><dt>Type:</dt><dd><p>int</p></dd><dt>Description:</dt><dd><p>Used for N in the bucket partition transform function, partitions by hashed value mod N buckets.Only has an effect for ICEBERG tables and when partition is set to true andwhen the partition transform is set to \u2018bucket\u2019 for the column.</p></dd><dt>Value:</dt><dd><p>Integer value greater than or equal to 0</p></dd><dt>Example:</dt><dd><pre><code><span class=n>Column</span><span class=p>(</span><span class=s2>\"some_column\"</span><span class=p>,</span> <span class=n>types</span><span class=o>.</span><span class=n>String</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>awsathena_partition</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span> <span class=n>awsathena_partition_transform</span><span class=o>=</span><span class=s1>'bucket'</span><span class=p>,</span> <span class=n>awsathena_partition_transform_bucket_count</span><span class=o>=</span><span class=mi>5</span><span class=p>)</span></code></pre></dd></dl></dd><dt>partition_transform_truncate_length</dt><dd><dl><dt>Type:</dt><dd><p>int</p></dd><dt>Description:</dt><dd><p>Used for L in the truncate partition transform function, partitions by value truncated to L.Only has an effect for ICEBERG tables and when partition is set to true andwhen the partition transform is set to \u2018truncate\u2019 for the column.</p></dd><dt>Value:</dt><dd><p>Integer value greater than or equal to 0</p></dd><dt>Example:</dt><dd><pre><code><span class=n>Column</span><span class=p>(</span><span class=s2>\"some_column\"</span><span class=p>,</span> <span class=n>types</span><span class=o>.</span><span class=n>String</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>awsathena_partition</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span> <span class=n>awsathena_partition_transform</span><span class=o>=</span><span class=s1>'truncate'</span><span class=p>,</span> <span class=n>awsathena_partition_transform_truncate_length</span><span class=o>=</span><span class=mi>5</span><span class=p>)</span></code></pre></dd></dl></dd><dt>cluster</dt><dd><dl><dt>Type:</dt><dd><p>bool</p></dd><dt>Description:</dt><dd><p>Divides the data in the specified column into data subsets called buckets, with or without partitioning.</p></dd><dt>Value:</dt><dd><p>True / False</p></dd><dt>Example:</dt><dd><pre><code><span class=n>Column</span><span class=p>(</span><span class=s2>\"some_column\"</span><span class=p>,</span> <span class=n>types</span><span class=o>.</span><span class=n>String</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>awsathena_cluster</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span></code></pre></dd></dl></dd></dl><p>To configure column options from the connection string, specify the column name as a comma-separated string.The options partition_transform, partition_transform_bucket_count, partition_transform_truncate_length are not supportedto be configured from the connection string.</p><pre><code>awsathena+rest://:@athena.us-west-2.amazonaws.com:443/default?partition=column1%2Ccolumn2&amp;cluster=column1%2Ccolumn2&amp;...</code></pre><p>If you want to limit the column options to specific table names only, specify the table and column names connected by dots as a comma-separated string.</p><pre><code>awsathena+rest://:@athena.us-west-2.amazonaws.com:443/default?partition=table1.column1%2Ctable1.column2&amp;cluster=table2.column1%2Ctable2.column2&amp;...</code></pre></section></section></section><section id=pandas><h4><a href=#toc-entry-8 rel=nofollow>Pandas</a></h4><section id=as-dataframe><h5>As DataFrame</h5><p>You can use the <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.read_sql_query.html\" rel=nofollow>pandas.read_sql_query</a> to handle the query results as a <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html\" rel=nofollow>pandas.DataFrame object</a>.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>import</span> <span class=nn>pandas</span> <span class=k>as</span> <span class=nn>pd</span><span class=w></span><span class=n>conn</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>               <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=w></span><span class=n>df</span> <span class=o>=</span> <span class=n>pd</span><span class=o>.</span><span class=n>read_sql_query</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>,</span> <span class=n>conn</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>df</span><span class=o>.</span><span class=n>head</span><span class=p>())</span></code></pre><p>NOTE: <a href=\"https://github.com/laughingman7743/PyAthena/issues/222\" rel=nofollow>Poor performance when using pandas.read_sql #222</a></p><p>The <span class=\"docutils literal\">pyathena.pandas.util</span> package also has helper methods.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.util</span> <span class=kn>import</span> <span class=n>as_pandas</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=n>df</span> <span class=o>=</span> <span class=n>as_pandas</span><span class=p>(</span><span class=n>cursor</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>df</span><span class=o>.</span><span class=n>describe</span><span class=p>())</span></code></pre><p>If you want to use the query results output to S3 directly, you can use <a href=#pandascursor rel=nofollow>PandasCursor</a>.This cursor fetches query results faster than the default cursor. (See <a href=\"benchmarks/\" rel=nofollow>benchmark results</a>.)</p></section><section id=to-sql><h5>To SQL</h5><p>You can use <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_sql.html\" rel=nofollow>pandas.DataFrame.to_sql</a> to write records stored in DataFrame to Amazon Athena.<a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_sql.html\" rel=nofollow>pandas.DataFrame.to_sql</a> uses <a href=#sqlalchemy rel=nofollow>SQLAlchemy</a>, so you need to install it.</p><pre><code><span class=kn>import</span> <span class=nn>pandas</span> <span class=k>as</span> <span class=nn>pd</span><span class=w></span><span class=kn>from</span> <span class=nn>sqlalchemy</span> <span class=kn>import</span> <span class=n>create_engine</span><span class=w></span><span class=n>conn_str</span> <span class=o>=</span> <span class=s2>\"awsathena+rest://:@athena.</span><span class=si>{region_name}</span><span class=s2>.amazonaws.com:443/\"</span>\\           <span class=s2>\"</span><span class=si>{schema_name}</span><span class=s2>?s3_staging_dir=</span><span class=si>{s3_staging_dir}</span><span class=s2>&amp;location=</span><span class=si>{location}</span><span class=s2>&amp;compression=snappy\"</span><span class=w></span><span class=n>engine</span> <span class=o>=</span> <span class=n>create_engine</span><span class=p>(</span><span class=n>conn_str</span><span class=o>.</span><span class=n>format</span><span class=p>(</span><span class=w></span>    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>    <span class=n>schema_name</span><span class=o>=</span><span class=s2>\"YOUR_SCHEMA\"</span><span class=p>,</span><span class=w></span>    <span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>    <span class=n>location</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>))</span><span class=w></span><span class=n>df</span> <span class=o>=</span> <span class=n>pd</span><span class=o>.</span><span class=n>DataFrame</span><span class=p>({</span><span class=s2>\"a\"</span><span class=p>:</span> <span class=p>[</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>,</span> <span class=mi>5</span><span class=p>]})</span><span class=w></span><span class=n>df</span><span class=o>.</span><span class=n>to_sql</span><span class=p>(</span><span class=s2>\"YOUR_TABLE\"</span><span class=p>,</span> <span class=n>engine</span><span class=p>,</span> <span class=n>schema</span><span class=o>=</span><span class=s2>\"YOUR_SCHEMA\"</span><span class=p>,</span> <span class=n>index</span><span class=o>=</span><span class=kc>False</span><span class=p>,</span> <span class=n>if_exists</span><span class=o>=</span><span class=s2>\"replace\"</span><span class=p>,</span> <span class=n>method</span><span class=o>=</span><span class=s2>\"multi\"</span><span class=p>)</span></code></pre><p>The location of the Amazon S3 table is specified by the <span class=\"docutils literal\">location</span> parameter in the connection string.If <span class=\"docutils literal\">location</span> is not specified, <span class=\"docutils literal\">s3_staging_dir</span> parameter will be used. The following rules apply.</p><pre><code>s3://{location or s3_staging_dir}/{schema}/{table}/</code></pre><p>The file format, row format, and compression settings are specified in the connection string, see <a href=#table-options rel=nofollow>Table options</a>.</p><p>The <span class=\"docutils literal\">pyathena.pandas.util</span> package also has helper methods.</p><pre><code><span class=kn>import</span> <span class=nn>pandas</span> <span class=k>as</span> <span class=nn>pd</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.util</span> <span class=kn>import</span> <span class=n>to_sql</span><span class=w></span><span class=n>conn</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>               <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=w></span><span class=n>df</span> <span class=o>=</span> <span class=n>pd</span><span class=o>.</span><span class=n>DataFrame</span><span class=p>({</span><span class=s2>\"a\"</span><span class=p>:</span> <span class=p>[</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>,</span> <span class=mi>5</span><span class=p>]})</span><span class=w></span><span class=n>to_sql</span><span class=p>(</span><span class=n>df</span><span class=p>,</span> <span class=s2>\"YOUR_TABLE\"</span><span class=p>,</span> <span class=n>conn</span><span class=p>,</span> <span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>       <span class=n>schema</span><span class=o>=</span><span class=s2>\"YOUR_SCHEMA\"</span><span class=p>,</span> <span class=n>index</span><span class=o>=</span><span class=kc>False</span><span class=p>,</span> <span class=n>if_exists</span><span class=o>=</span><span class=s2>\"replace\"</span><span class=p>)</span></code></pre><p>This helper method supports partitioning.</p><pre><code><span class=kn>import</span> <span class=nn>pandas</span> <span class=k>as</span> <span class=nn>pd</span><span class=w></span><span class=kn>from</span> <span class=nn>datetime</span> <span class=kn>import</span> <span class=n>date</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.util</span> <span class=kn>import</span> <span class=n>to_sql</span><span class=w></span><span class=n>conn</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>               <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=w></span><span class=n>df</span> <span class=o>=</span> <span class=n>pd</span><span class=o>.</span><span class=n>DataFrame</span><span class=p>({</span><span class=w></span>    <span class=s2>\"a\"</span><span class=p>:</span> <span class=p>[</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>,</span> <span class=mi>5</span><span class=p>],</span><span class=w></span>    <span class=s2>\"dt\"</span><span class=p>:</span> <span class=p>[</span><span class=w></span>        <span class=n>date</span><span class=p>(</span><span class=mi>2020</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>1</span><span class=p>),</span> <span class=n>date</span><span class=p>(</span><span class=mi>2020</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>1</span><span class=p>),</span> <span class=n>date</span><span class=p>(</span><span class=mi>2020</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>1</span><span class=p>),</span><span class=w></span>        <span class=n>date</span><span class=p>(</span><span class=mi>2020</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>),</span><span class=w></span>        <span class=n>date</span><span class=p>(</span><span class=mi>2020</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>3</span><span class=p>)</span><span class=w></span>    <span class=p>],</span><span class=w></span><span class=p>})</span><span class=w></span><span class=n>to_sql</span><span class=p>(</span><span class=n>df</span><span class=p>,</span> <span class=s2>\"YOUR_TABLE\"</span><span class=p>,</span> <span class=n>conn</span><span class=p>,</span> <span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>       <span class=n>schema</span><span class=o>=</span><span class=s2>\"YOUR_SCHEMA\"</span><span class=p>,</span> <span class=n>partitions</span><span class=o>=</span><span class=p>[</span><span class=s2>\"dt\"</span><span class=p>])</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>conn</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SHOW PARTITIONS YOUR_TABLE\"</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>fetchall</span><span class=p>())</span></code></pre><p>Conversion to Parquet and upload to S3 use <a href=\"https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor\" rel=nofollow>ThreadPoolExecutor</a> by default.It is also possible to use <a href=\"https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor\" rel=nofollow>ProcessPoolExecutor</a>.</p><pre><code><span class=kn>import</span> <span class=nn>pandas</span> <span class=k>as</span> <span class=nn>pd</span><span class=w></span><span class=kn>from</span> <span class=nn>concurrent.futures.process</span> <span class=kn>import</span> <span class=n>ProcessPoolExecutor</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.util</span> <span class=kn>import</span> <span class=n>to_sql</span><span class=w></span><span class=n>conn</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>               <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=w></span><span class=n>df</span> <span class=o>=</span> <span class=n>pd</span><span class=o>.</span><span class=n>DataFrame</span><span class=p>({</span><span class=s2>\"a\"</span><span class=p>:</span> <span class=p>[</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>,</span> <span class=mi>5</span><span class=p>]})</span><span class=w></span><span class=n>to_sql</span><span class=p>(</span><span class=n>df</span><span class=p>,</span> <span class=s2>\"YOUR_TABLE\"</span><span class=p>,</span> <span class=n>conn</span><span class=p>,</span> <span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>       <span class=n>schema</span><span class=o>=</span><span class=s2>\"YOUR_SCHEMA\"</span><span class=p>,</span> <span class=n>index</span><span class=o>=</span><span class=kc>False</span><span class=p>,</span> <span class=n>if_exists</span><span class=o>=</span><span class=s2>\"replace\"</span><span class=p>,</span><span class=w></span>       <span class=n>chunksize</span><span class=o>=</span><span class=mi>1</span><span class=p>,</span> <span class=n>executor_class</span><span class=o>=</span><span class=n>ProcessPoolExecutor</span><span class=p>,</span> <span class=n>max_workers</span><span class=o>=</span><span class=mi>5</span><span class=p>)</span></code></pre></section></section><section id=dictcursor><h4><a href=#toc-entry-9 rel=nofollow>DictCursor</a></h4><p>DictCursor retrieve the query execution result as a dictionary type with column names and values.</p><p>You can use the DictCursor by specifying the <span class=\"docutils literal\">cursor_class</span>with the connect method or connection object.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.cursor</span> <span class=kn>import</span> <span class=n>DictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>DictCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.cursor</span> <span class=kn>import</span> <span class=n>DictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                    <span class=n>cursor_class</span><span class=o>=</span><span class=n>DictCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><p>It can also be used by specifying the cursor class when calling the connection object\u2019s cursor method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.cursor</span> <span class=kn>import</span> <span class=n>DictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>DictCursor</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.cursor</span> <span class=kn>import</span> <span class=n>DictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>DictCursor</span><span class=p>)</span></code></pre><p>The basic usage is the same as the Cursor.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.cursor</span> <span class=kn>import</span> <span class=n>DictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>DictCursor</span><span class=p>)</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows LIMIT 10\"</span><span class=p>)</span><span class=w></span><span class=k>for</span> <span class=n>row</span> <span class=ow>in</span> <span class=n>cursor</span><span class=p>:</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>row</span><span class=p>[</span><span class=s2>\"a\"</span><span class=p>])</span></code></pre><p>If you want to change the dictionary type (e.g., use OrderedDict), you can specify like the following.</p><pre><code><span class=kn>from</span> <span class=nn>collections</span> <span class=kn>import</span> <span class=n>OrderedDict</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.cursor</span> <span class=kn>import</span> <span class=n>DictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>DictCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>dict_type</span><span class=o>=</span><span class=n>OrderedDict</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>collections</span> <span class=kn>import</span> <span class=n>OrderedDict</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.cursor</span> <span class=kn>import</span> <span class=n>DictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>cursor</span><span class=o>=</span><span class=n>DictCursor</span><span class=p>,</span> <span class=n>dict_type</span><span class=o>=</span><span class=n>OrderedDict</span><span class=p>)</span></code></pre></section><section id=asynccursor><h4><a href=#toc-entry-10 rel=nofollow>AsyncCursor</a></h4><p>AsyncCursor is a simple implementation using the concurrent.futures package.This cursor does not follow the <a href=\"https://www.python.org/dev/peps/pep-0249/\" rel=nofollow>DB API 2.0 (PEP 249)</a>.</p><p>You can use the AsyncCursor by specifying the <span class=\"docutils literal\">cursor_class</span>with the connect method or connection object.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                    <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><p>It can also be used by specifying the cursor class when calling the connection object\u2019s cursor method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>AsyncCursor</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>AsyncCursor</span><span class=p>)</span></code></pre><p>The default number of workers is 5 or cpu number * 5.If you want to change the number of workers you can specify like the following.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>max_workers</span><span class=o>=</span><span class=mi>10</span><span class=p>)</span></code></pre><p>The execute method of the AsyncCursor returns the tuple of the query ID and the <a href=\"https://docs.python.org/3/library/concurrent.futures.html#future-objects\" rel=nofollow>future object</a>.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span></code></pre><p>The return value of the <a href=\"https://docs.python.org/3/library/concurrent.futures.html#future-objects\" rel=nofollow>future object</a> is an <span class=\"docutils literal\">AthenaResultSet</span> object.This object has an interface that can fetch and iterate query results similar to synchronous cursors.It also has information on the result of query execution.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=n>result_set</span> <span class=o>=</span> <span class=n>future</span><span class=o>.</span><span class=n>result</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>state</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>state_change_reason</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>completion_date_time</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>submission_date_time</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>data_scanned_in_bytes</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>engine_execution_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>query_queue_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>total_execution_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>query_planning_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>service_processing_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>output_location</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>description</span><span class=p>)</span><span class=w></span><span class=k>for</span> <span class=n>row</span> <span class=ow>in</span> <span class=n>result_set</span><span class=p>:</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>row</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=n>result_set</span> <span class=o>=</span> <span class=n>future</span><span class=o>.</span><span class=n>result</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>fetchall</span><span class=p>())</span></code></pre><p>A query ID is required to cancel a query with the AsyncCursor.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>cancel</span><span class=p>(</span><span class=n>query_id</span><span class=p>)</span></code></pre><p>NOTE: The cancel method of the <a href=\"https://docs.python.org/3/library/concurrent.futures.html#future-objects\" rel=nofollow>future object</a> does not cancel the query.</p></section><section id=asyncdictcursor><h4><a href=#toc-entry-11 rel=nofollow>AsyncDictCursor</a></h4><p>AsyncDIctCursor is an AsyncCursor that can retrieve the query execution resultas a dictionary type with column names and values.</p><p>You can use the DictCursor by specifying the <span class=\"docutils literal\">cursor_class</span>with the connect method or connection object.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncDictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncDictCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncDictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                    <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncDictCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><p>It can also be used by specifying the cursor class when calling the connection object\u2019s cursor method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncDictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>AsyncDictCursor</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncDictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>AsyncDictCursor</span><span class=p>)</span></code></pre><p>The basic usage is the same as the AsyncCursor.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.cursor</span> <span class=kn>import</span> <span class=n>DictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>AsyncDictCursor</span><span class=p>)</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows LIMIT 10\"</span><span class=p>)</span><span class=w></span><span class=n>result_set</span> <span class=o>=</span> <span class=n>future</span><span class=o>.</span><span class=n>result</span><span class=p>()</span><span class=w></span><span class=k>for</span> <span class=n>row</span> <span class=ow>in</span> <span class=n>result_set</span><span class=p>:</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>row</span><span class=p>[</span><span class=s2>\"a\"</span><span class=p>])</span></code></pre><p>If you want to change the dictionary type (e.g., use OrderedDict), you can specify like the following.</p><pre><code><span class=kn>from</span> <span class=nn>collections</span> <span class=kn>import</span> <span class=n>OrderedDict</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncDictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncDictCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>dict_type</span><span class=o>=</span><span class=n>OrderedDict</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>collections</span> <span class=kn>import</span> <span class=n>OrderedDict</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncDictCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>cursor</span><span class=o>=</span><span class=n>AsyncDictCursor</span><span class=p>,</span> <span class=n>dict_type</span><span class=o>=</span><span class=n>OrderedDict</span><span class=p>)</span></code></pre></section><section id=pandascursor><h4><a href=#toc-entry-12 rel=nofollow>PandasCursor</a></h4><p>PandasCursor directly handles the CSV file of the query execution result output to S3.This cursor is to download the CSV file after executing the query, and then loaded into <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html\" rel=nofollow>pandas.DataFrame object</a>.Performance is better than fetching data with Cursor.</p><p>You can use the PandasCursor by specifying the <span class=\"docutils literal\">cursor_class</span>with the connect method or connection object.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                    <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><p>It can also be used by specifying the cursor class when calling the connection object\u2019s cursor method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>PandasCursor</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>PandasCursor</span><span class=p>)</span></code></pre><p>The as_pandas method returns a <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html\" rel=nofollow>pandas.DataFrame object</a>.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>df</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=o>.</span><span class=n>as_pandas</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>df</span><span class=o>.</span><span class=n>describe</span><span class=p>())</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>df</span><span class=o>.</span><span class=n>head</span><span class=p>())</span></code></pre><p>Support fetch and iterate query results.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>fetchone</span><span class=p>())</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>fetchmany</span><span class=p>())</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>fetchall</span><span class=p>())</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=k>for</span> <span class=n>row</span> <span class=ow>in</span> <span class=n>cursor</span><span class=p>:</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>row</span><span class=p>)</span></code></pre><p>The DATE and TIMESTAMP of Athena\u2019s data type are returned as <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.Timestamp.html\" rel=nofollow>pandas.Timestamp</a> type.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT col_timestamp FROM one_row_complex\"</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=nb>type</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>fetchone</span><span class=p>()[</span><span class=mi>0</span><span class=p>]))</span>  <span class=c1># &lt;class 'pandas._libs.tslibs.timestamps.Timestamp'&gt;</span></code></pre><p>Execution information of the query can also be retrieved.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>state</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>state_change_reason</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>completion_date_time</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>submission_date_time</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>data_scanned_in_bytes</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>engine_execution_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>query_queue_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>total_execution_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>query_planning_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>service_processing_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>output_location</span><span class=p>)</span></code></pre><p>If you want to customize the pandas.Dataframe object dtypes and converters, create a converter class like this:</p><pre><code><span class=kn>from</span> <span class=nn>pyathena.converter</span> <span class=kn>import</span> <span class=n>Converter</span><span class=w></span><span class=k>class</span> <span class=nc>CustomPandasTypeConverter</span><span class=p>(</span><span class=n>Converter</span><span class=p>):</span><span class=w></span>    <span class=k>def</span> <span class=fm>__init__</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=nb>super</span><span class=p>()</span><span class=o>.</span><span class=fm>__init__</span><span class=p>(</span><span class=w></span>            <span class=n>mappings</span><span class=o>=</span><span class=kc>None</span><span class=p>,</span><span class=w></span>            <span class=n>types</span><span class=o>=</span><span class=p>{</span><span class=w></span>                <span class=s2>\"boolean\"</span><span class=p>:</span> <span class=nb>object</span><span class=p>,</span><span class=w></span>                <span class=s2>\"tinyint\"</span><span class=p>:</span> <span class=nb>float</span><span class=p>,</span><span class=w></span>                <span class=s2>\"smallint\"</span><span class=p>:</span> <span class=nb>float</span><span class=p>,</span><span class=w></span>                <span class=s2>\"integer\"</span><span class=p>:</span> <span class=nb>float</span><span class=p>,</span><span class=w></span>                <span class=s2>\"bigint\"</span><span class=p>:</span> <span class=nb>float</span><span class=p>,</span><span class=w></span>                <span class=s2>\"float\"</span><span class=p>:</span> <span class=nb>float</span><span class=p>,</span><span class=w></span>                <span class=s2>\"real\"</span><span class=p>:</span> <span class=nb>float</span><span class=p>,</span><span class=w></span>                <span class=s2>\"double\"</span><span class=p>:</span> <span class=nb>float</span><span class=p>,</span><span class=w></span>                <span class=s2>\"decimal\"</span><span class=p>:</span> <span class=nb>float</span><span class=p>,</span><span class=w></span>                <span class=s2>\"char\"</span><span class=p>:</span> <span class=nb>str</span><span class=p>,</span><span class=w></span>                <span class=s2>\"varchar\"</span><span class=p>:</span> <span class=nb>str</span><span class=p>,</span><span class=w></span>                <span class=s2>\"array\"</span><span class=p>:</span> <span class=nb>str</span><span class=p>,</span><span class=w></span>                <span class=s2>\"map\"</span><span class=p>:</span> <span class=nb>str</span><span class=p>,</span><span class=w></span>                <span class=s2>\"row\"</span><span class=p>:</span> <span class=nb>str</span><span class=p>,</span><span class=w></span>                <span class=s2>\"varbinary\"</span><span class=p>:</span> <span class=nb>str</span><span class=p>,</span><span class=w></span>                <span class=s2>\"json\"</span><span class=p>:</span> <span class=nb>str</span><span class=p>,</span><span class=w></span>            <span class=p>}</span><span class=w></span>        <span class=p>)</span><span class=w></span>    <span class=k>def</span> <span class=nf>convert</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>type_</span><span class=p>,</span> <span class=n>value</span><span class=p>):</span><span class=w></span>        <span class=c1># Not used in PandasCursor.</span><span class=w></span>        <span class=k>pass</span></code></pre><p>Specify the combination of converter functions in the mappings argument and the dtypes combination in the types argument.</p><p>Then you simply specify an instance of this class in the convertes argument when creating a connection or cursor.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>PandasCursor</span><span class=p>,</span> <span class=n>converter</span><span class=o>=</span><span class=n>CustomPandasTypeConverter</span><span class=p>())</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>converter</span><span class=o>=</span><span class=n>CustomPandasTypeConverter</span><span class=p>())</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>PandasCursor</span><span class=p>)</span></code></pre><p>If the unload option is enabled, the Parquet file itself has a schema, so the conversion is done to the dtypes according to that schema,and the <span class=\"docutils literal\">mappings</span> and <span class=\"docutils literal\">types</span> settings of the Converter class are not used.</p><p>If you want to change the NaN behavior of pandas.Dataframe,you can do so by using the <span class=\"docutils literal\">keep_default_na</span>, <span class=\"docutils literal\">na_values</span> and <span class=\"docutils literal\">quoting</span> arguments of the cursor object\u2019s execute method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>df</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>,</span><span class=w></span>                    <span class=n>keep_default_na</span><span class=o>=</span><span class=kc>False</span><span class=p>,</span><span class=w></span>                    <span class=n>na_values</span><span class=o>=</span><span class=p>[</span><span class=s2>\"\"</span><span class=p>])</span><span class=o>.</span><span class=n>as_pandas</span><span class=p>()</span></code></pre><p>NOTE: PandasCursor handles the CSV file on memory. Pay attention to the memory capacity.</p><section id=pandascursor-chunksize-options><h5>[PandasCursor] Chunksize options</h5><p>The Pandas cursor can read the CSV file for each specified number of rows by using the chunksize option.This option should reduce memory usage.</p><p>The chunksize option can be enabled by specifying an integer value in the <span class=\"docutils literal\">cursor_kwargs</span> argument of the connect method or as an argument to the cursor method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_kwargs</span><span class=o>=</span><span class=p>{</span><span class=w></span>                     <span class=s2>\"chunksize\"</span><span class=p>:</span> <span class=mi>1_000_000</span><span class=w></span>                 <span class=p>})</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>chunksize</span><span class=o>=</span><span class=mi>1_000_000</span><span class=p>)</span></code></pre><p>It can also be specified in the execution method when executing the query.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>,</span> <span class=n>chunksize</span><span class=o>=</span><span class=mi>1_000_000</span><span class=p>)</span></code></pre><p>SQLAlchemy allows this option to be specified in the connection string.</p><pre><code>awsathena+pandas://:@athena.{region_name}.amazonaws.com:443/{schema_name}?s3_staging_dir={s3_staging_dir}&amp;chunksize=1000000...</code></pre><p>When this option is used, the object returned by the as_pandas method is a <span class=\"docutils literal\">DataFrameIterator</span> object.This object has exactly the same interface as the <span class=\"docutils literal\">TextFileReader</span> object and can be handled in the same way.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>df_iter</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>,</span> <span class=n>chunksize</span><span class=o>=</span><span class=mi>1_000_000</span><span class=p>)</span><span class=o>.</span><span class=n>as_pandas</span><span class=p>()</span><span class=w></span><span class=k>for</span> <span class=n>df</span> <span class=ow>in</span> <span class=n>df_iter</span><span class=p>:</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>df</span><span class=o>.</span><span class=n>describe</span><span class=p>())</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>df</span><span class=o>.</span><span class=n>head</span><span class=p>())</span></code></pre><p>You can also concatenate them into a single <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html\" rel=nofollow>pandas.DataFrame object</a> using <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.concat.html\" rel=nofollow>pandas.concat</a>.</p><pre><code><span class=kn>import</span> <span class=nn>pandas</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>df_iter</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>,</span> <span class=n>chunksize</span><span class=o>=</span><span class=mi>1_000_000</span><span class=p>)</span><span class=o>.</span><span class=n>as_pandas</span><span class=p>()</span><span class=w></span><span class=n>df</span> <span class=o>=</span> <span class=n>pandas</span><span class=o>.</span><span class=n>concat</span><span class=p>((</span><span class=n>df</span> <span class=k>for</span> <span class=n>df</span> <span class=ow>in</span> <span class=n>df_iter</span><span class=p>),</span> <span class=n>ignore_index</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span></code></pre><p>You can use the <span class=\"docutils literal\">get_chunk</span> method to retrieve a <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html\" rel=nofollow>pandas.DataFrame object</a> for each specified number of rows.When all rows have been read, calling the <span class=\"docutils literal\">get_chunk</span> method will raise <span class=\"docutils literal\">StopIteration</span>.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>df_iter</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows LIMIT 15\"</span><span class=p>,</span> <span class=n>chunksize</span><span class=o>=</span><span class=mi>1_000_000</span><span class=p>)</span><span class=o>.</span><span class=n>as_pandas</span><span class=p>()</span><span class=w></span><span class=n>df_iter</span><span class=o>.</span><span class=n>get_chunk</span><span class=p>(</span><span class=mi>10</span><span class=p>)</span><span class=w></span><span class=n>df_iter</span><span class=o>.</span><span class=n>get_chunk</span><span class=p>(</span><span class=mi>10</span><span class=p>)</span><span class=w></span><span class=n>df_iter</span><span class=o>.</span><span class=n>get_chunk</span><span class=p>(</span><span class=mi>10</span><span class=p>)</span>  <span class=c1># raise StopIteration</span></code></pre></section><section id=pandascursor-unload-options><h5>[PandasCursor] Unload options</h5><p>PandasCursor also supports the unload option, as does <a href=#arrowcursor rel=nofollow>ArrowCursor</a>.</p><p>See <a href=#arrowcursor-unload-options rel=nofollow>[ArrowCursor] Unload options</a> for more information.</p><p>The unload option can be enabled by specifying it in the <span class=\"docutils literal\">cursor_kwargs</span> argument of the connect method or as an argument to the cursor method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_kwargs</span><span class=o>=</span><span class=p>{</span><span class=w></span>                     <span class=s2>\"unload\"</span><span class=p>:</span> <span class=kc>True</span><span class=w></span>                 <span class=p>})</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>PandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>PandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>unload</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span></code></pre><p>SQLAlchemy allows this option to be specified in the connection string.</p><pre><code>awsathena+pandas://:@athena.{region_name}.amazonaws.com:443/{schema_name}?s3_staging_dir={s3_staging_dir}&amp;unload=true...</code></pre></section></section><section id=asyncpandascursor><h4><a href=#toc-entry-13 rel=nofollow>AsyncPandasCursor</a></h4><p>AsyncPandasCursor is an AsyncCursor that can handle <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html\" rel=nofollow>pandas.DataFrame object</a>.This cursor directly handles the CSV of query results output to S3 in the same way as PandasCursor.</p><p>You can use the AsyncPandasCursor by specifying the <span class=\"docutils literal\">cursor_class</span>with the connect method or connection object.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncPandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncPandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncPandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                    <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncPandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><p>It can also be used by specifying the cursor class when calling the connection object\u2019s cursor method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncPandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>AsyncPandasCursor</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncPandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>AsyncPandasCursor</span><span class=p>)</span></code></pre><p>The default number of workers is 5 or cpu number * 5.If you want to change the number of workers you can specify like the following.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncPandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncPandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>max_workers</span><span class=o>=</span><span class=mi>10</span><span class=p>)</span></code></pre><p>The execute method of the AsyncPandasCursor returns the tuple of the query ID and the <a href=\"https://docs.python.org/3/library/concurrent.futures.html#future-objects\" rel=nofollow>future object</a>.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncPandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncPandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span></code></pre><p>The return value of the <a href=\"https://docs.python.org/3/library/concurrent.futures.html#future-objects\" rel=nofollow>future object</a> is an <span class=\"docutils literal\">AthenaPandasResultSet</span> object.This object has an interface similar to <span class=\"docutils literal\">AthenaResultSetObject</span>.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncPandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncPandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=n>result_set</span> <span class=o>=</span> <span class=n>future</span><span class=o>.</span><span class=n>result</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>state</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>state_change_reason</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>completion_date_time</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>submission_date_time</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>data_scanned_in_bytes</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>engine_execution_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>query_queue_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>total_execution_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>query_planning_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>service_processing_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>output_location</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>description</span><span class=p>)</span><span class=w></span><span class=k>for</span> <span class=n>row</span> <span class=ow>in</span> <span class=n>result_set</span><span class=p>:</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>row</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncPandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncPandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=n>result_set</span> <span class=o>=</span> <span class=n>future</span><span class=o>.</span><span class=n>result</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>fetchall</span><span class=p>())</span></code></pre><p>This object also has an as_pandas method that returns a <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html\" rel=nofollow>pandas.DataFrame object</a> similar to the PandasCursor.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncPandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncPandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=n>result_set</span> <span class=o>=</span> <span class=n>future</span><span class=o>.</span><span class=n>result</span><span class=p>()</span><span class=w></span><span class=n>df</span> <span class=o>=</span> <span class=n>result_set</span><span class=o>.</span><span class=n>as_pandas</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>df</span><span class=o>.</span><span class=n>describe</span><span class=p>())</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>df</span><span class=o>.</span><span class=n>head</span><span class=p>())</span></code></pre><p>The DATE and TIMESTAMP of Athena\u2019s data type are returned as <a href=\"https://pandas.pydata.org/docs/reference/api/pandas.Timestamp.html\" rel=nofollow>pandas.Timestamp</a> type.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncPandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncPandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT col_timestamp FROM one_row_complex\"</span><span class=p>)</span><span class=w></span><span class=n>result_set</span> <span class=o>=</span> <span class=n>future</span><span class=o>.</span><span class=n>result</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=nb>type</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>fetchone</span><span class=p>()[</span><span class=mi>0</span><span class=p>]))</span>  <span class=c1># &lt;class 'pandas._libs.tslibs.timestamps.Timestamp'&gt;</span></code></pre><p>As with AsyncPandasCursor, you need a query ID to cancel a query.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncPandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncPandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>cancel</span><span class=p>(</span><span class=n>query_id</span><span class=p>)</span></code></pre><p>As with AsyncPandasCursor, the unload option is also available.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncPandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncPandasCursor</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_kwargs</span><span class=o>=</span><span class=p>{</span><span class=w></span>                     <span class=s2>\"unload\"</span><span class=p>:</span> <span class=kc>True</span><span class=w></span>                 <span class=p>})</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.pandas.cursor</span> <span class=kn>import</span> <span class=n>AsyncPandasCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncPandasCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>unload</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span></code></pre></section><section id=arrowcursor><h4><a href=#toc-entry-14 rel=nofollow>ArrowCursor</a></h4><p>ArrowCursor directly handles the CSV file of the query execution result output to S3.This cursor is to download the CSV file after executing the query, and then loaded into <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.Table.html\" rel=nofollow>pyarrow.Table object</a>.Performance is better than fetching data with Cursor.</p><p>You can use the ArrowCursor by specifying the <span class=\"docutils literal\">cursor_class</span>with the connect method or connection object.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.cursor</span> <span class=kn>import</span> <span class=n>ArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>ArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.cursor</span> <span class=kn>import</span> <span class=n>ArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                    <span class=n>cursor_class</span><span class=o>=</span><span class=n>ArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><p>It can also be used by specifying the cursor class when calling the connection object\u2019s cursor method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.cursor</span> <span class=kn>import</span> <span class=n>ArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>ArrowCursor</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.cursor</span> <span class=kn>import</span> <span class=n>ArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>ArrowCursor</span><span class=p>)</span></code></pre><p>The as_arrow method returns a <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.Table.html\" rel=nofollow>pyarrow.Table object</a>.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.cursor</span> <span class=kn>import</span> <span class=n>ArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>ArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>table</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=o>.</span><span class=n>as_arrow</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>column_names</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>columns</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>nbytes</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>num_columns</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>num_rows</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>schema</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>shape</span><span class=p>)</span></code></pre><p>Support fetch and iterate query results.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.cursor</span> <span class=kn>import</span> <span class=n>ArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>ArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>fetchone</span><span class=p>())</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>fetchmany</span><span class=p>())</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>fetchall</span><span class=p>())</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.cursor</span> <span class=kn>import</span> <span class=n>ArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>ArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=k>for</span> <span class=n>row</span> <span class=ow>in</span> <span class=n>cursor</span><span class=p>:</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>row</span><span class=p>)</span></code></pre><p>Execution information of the query can also be retrieved.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.cursor</span> <span class=kn>import</span> <span class=n>ArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>ArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>state</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>state_change_reason</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>completion_date_time</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>submission_date_time</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>data_scanned_in_bytes</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>engine_execution_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>query_queue_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>total_execution_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>query_planning_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>service_processing_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>output_location</span><span class=p>)</span></code></pre><p>If you want to customize the <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.Table.html\" rel=nofollow>pyarrow.Table object</a> types, create a converter class like this:</p><pre><code><span class=kn>import</span> <span class=nn>pyarrow</span> <span class=k>as</span> <span class=nn>pa</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.converter</span> <span class=kn>import</span> <span class=n>_to_date</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.converter</span> <span class=kn>import</span> <span class=n>Converter</span><span class=w></span><span class=k>class</span> <span class=nc>CustomArrowTypeConverter</span><span class=p>(</span><span class=n>Converter</span><span class=p>):</span><span class=w></span>    <span class=k>def</span> <span class=fm>__init__</span><span class=p>(</span><span class=bp>self</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=kc>None</span><span class=p>:</span><span class=w></span>        <span class=nb>super</span><span class=p>()</span><span class=o>.</span><span class=fm>__init__</span><span class=p>(</span><span class=w></span>            <span class=n>mappings</span><span class=o>=</span><span class=p>{</span><span class=w></span>                <span class=s2>\"date\"</span><span class=p>:</span> <span class=n>_to_date</span><span class=p>,</span><span class=w></span>            <span class=p>},</span><span class=w></span>            <span class=n>types</span><span class=o>=</span><span class=p>{</span><span class=w></span>                <span class=s2>\"boolean\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>bool_</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"tinyint\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>int8</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"smallint\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>int16</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"integer\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>int32</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"bigint\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>int64</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"float\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>float32</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"real\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>float64</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"double\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>float64</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"char\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>string</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"varchar\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>string</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"string\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>string</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"timestamp\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>timestamp</span><span class=p>(</span><span class=s2>\"ms\"</span><span class=p>),</span><span class=w></span>                <span class=s2>\"date\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>timestamp</span><span class=p>(</span><span class=s2>\"ms\"</span><span class=p>),</span><span class=w></span>                <span class=s2>\"time\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>string</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"varbinary\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>string</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"array\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>string</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"map\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>string</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"row\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>string</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"decimal\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>string</span><span class=p>(),</span><span class=w></span>                <span class=s2>\"json\"</span><span class=p>:</span> <span class=n>pa</span><span class=o>.</span><span class=n>string</span><span class=p>(),</span><span class=w></span>            <span class=p>},</span><span class=w></span>        <span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>convert</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>type_</span><span class=p>,</span> <span class=n>value</span><span class=p>):</span><span class=w></span>    <span class=n>converter</span> <span class=o>=</span> <span class=bp>self</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>type_</span><span class=p>)</span><span class=w></span>    <span class=k>return</span> <span class=n>converter</span><span class=p>(</span><span class=n>value</span><span class=p>)</span></code></pre><p><span class=\"docutils literal\">types</span> is used to explicitly specify the Arrow type when reading CSV files.<span class=\"docutils literal\">mappings</span> is used as a conversion method when fetching data from a cursor object.</p><p>Then you simply specify an instance of this class in the convertes argument when creating a connection or cursor.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.cursor</span> <span class=kn>import</span> <span class=n>ArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>ArrowCursor</span><span class=p>,</span> <span class=n>converter</span><span class=o>=</span><span class=n>CustomArrowTypeConverter</span><span class=p>())</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.cursor</span> <span class=kn>import</span> <span class=n>ArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>converter</span><span class=o>=</span><span class=n>CustomArrowTypeConverter</span><span class=p>())</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>ArrowCursor</span><span class=p>)</span></code></pre><p>If the unload option is enabled, the Parquet file itself has a schema, so the conversion is done to the Arrow type according to that schema,and the <span class=\"docutils literal\">types</span> setting of the Converter class is not used.</p><section id=arrowcursor-unload-options><h5>[ArrowCursor] Unload options</h5><p>ArrowCursor supports the unload option. When this option is enabled,queries with SELECT statements are automatically converted to unload statements and executed to Athena,and the results are output in Parquet format (Snappy compressed) to <span class=\"docutils literal\">s3_staging_dir</span>.The cursor reads the output Parquet file directly.</p><p>The output of query results with the unload statement is faster than normal query execution.In addition, the output Parquet file is split and can be read faster than a CSV file.We recommend trying this option if you are concerned about the time it takes to execute the query and retrieve the results.</p><p>However, unload has some limitations. Please refer to the <a href=\"https://docs.aws.amazon.com/athena/latest/ug/unload.html\" rel=nofollow>official unload documentation</a> for more information on limitations.As per the limitations of the official documentation, the results of unload will be written to multiple files in parallel,and the contents of each file will be in sort order, but the relative order of the files to each other will not be sorted.Note that specifying ORDER BY with this option enabled does not guarantee the sort order of the data.</p><p>The unload option can be enabled by specifying it in the <span class=\"docutils literal\">cursor_kwargs</span> argument of the connect method or as an argument to the cursor method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.cursor</span> <span class=kn>import</span> <span class=n>ArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>ArrowCursor</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_kwargs</span><span class=o>=</span><span class=p>{</span><span class=w></span>                     <span class=s2>\"unload\"</span><span class=p>:</span> <span class=kc>True</span><span class=w></span>                 <span class=p>})</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.cursor</span> <span class=kn>import</span> <span class=n>ArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>ArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>unload</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span></code></pre><p>SQLAlchemy allows this option to be specified in the connection string.</p><pre><code>awsathena+arrow://:@athena.{region_name}.amazonaws.com:443/{schema_name}?s3_staging_dir={s3_staging_dir}&amp;unload=true...</code></pre><p>If a <span class=\"docutils literal\">NOT_SUPPORTED</span> occurs, a type not supported by unload is included in the result of the SELECT.Try converting to another type, such as <span class=\"docutils literal\">SELECT CAST(1 AS VARCHAR) AS name</span>.</p><pre><code>pyathena.error.OperationalError: NOT_SUPPORTED: Unsupported Hive type: time</code></pre><p>In most cases of <span class=\"docutils literal\">SYNTAX_ERROR</span>, you forgot to alias the column in the SELECT result.Try adding an alias to the SELECTed column, such as <span class=\"docutils literal\">SELECT 1 AS name</span>.</p><pre><code>pyathena.error.OperationalError: SYNTAX_ERROR: line 1:1: Column name not specified at position 1</code></pre></section></section><section id=asyncarrowcursor><h4><a href=#toc-entry-15 rel=nofollow>AsyncArrowCursor</a></h4><p>AsyncArrowCursor is an AsyncCursor that can handle <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.Table.html\" rel=nofollow>pyarrow.Table object</a>.This cursor directly handles the CSV of query results output to S3 in the same way as ArrowCursor.</p><p>You can use the AsyncArrowCursor by specifying the <span class=\"docutils literal\">cursor_class</span>with the connect method or connection object.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                    <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><p>It can also be used by specifying the cursor class when calling the connection object\u2019s cursor method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>AsyncArrowCursor</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                    <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>AsyncArrowCursor</span><span class=p>)</span></code></pre><p>The default number of workers is 5 or cpu number * 5.If you want to change the number of workers you can specify like the following.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>max_workers</span><span class=o>=</span><span class=mi>10</span><span class=p>)</span></code></pre><p>The execute method of the AsyncArrowCursor returns the tuple of the query ID and the <a href=\"https://docs.python.org/3/library/concurrent.futures.html#future-objects\" rel=nofollow>future object</a>.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span></code></pre><p>The return value of the <a href=\"https://docs.python.org/3/library/concurrent.futures.html#future-objects\" rel=nofollow>future object</a> is an <span class=\"docutils literal\">AthenaArrowResultSet</span> object.This object has an interface similar to <span class=\"docutils literal\">AthenaResultSetObject</span>.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=n>result_set</span> <span class=o>=</span> <span class=n>future</span><span class=o>.</span><span class=n>result</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>state</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>state_change_reason</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>completion_date_time</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>submission_date_time</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>data_scanned_in_bytes</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>engine_execution_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>query_queue_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>total_execution_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>query_planning_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>service_processing_time_in_millis</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>output_location</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>description</span><span class=p>)</span><span class=w></span><span class=k>for</span> <span class=n>row</span> <span class=ow>in</span> <span class=n>result_set</span><span class=p>:</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>row</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=n>result_set</span> <span class=o>=</span> <span class=n>future</span><span class=o>.</span><span class=n>result</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>result_set</span><span class=o>.</span><span class=n>fetchall</span><span class=p>())</span></code></pre><p>This object also has an as_arrow method that returns a <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.Table.html\" rel=nofollow>pyarrow.Table object</a> similar to the ArrowCursor.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=n>result_set</span> <span class=o>=</span> <span class=n>future</span><span class=o>.</span><span class=n>result</span><span class=p>()</span><span class=w></span><span class=n>table</span> <span class=o>=</span> <span class=n>result_set</span><span class=o>.</span><span class=n>as_arrow</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>column_names</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>columns</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>nbytes</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>num_columns</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>num_rows</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>schema</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>table</span><span class=o>.</span><span class=n>shape</span><span class=p>)</span></code></pre><p>As with AsyncArrowCursor, you need a query ID to cancel a query.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>query_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM many_rows\"</span><span class=p>)</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>cancel</span><span class=p>(</span><span class=n>query_id</span><span class=p>)</span></code></pre><p>As with AsyncArrowCursor, the UNLOAD option is also available.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncArrowCursor</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_kwargs</span><span class=o>=</span><span class=p>{</span><span class=w></span>                     <span class=s2>\"unload\"</span><span class=p>:</span> <span class=kc>True</span><span class=w></span>                 <span class=p>})</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.arrow.cursor</span> <span class=kn>import</span> <span class=n>AsyncArrowCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncArrowCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>unload</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span></code></pre></section><section id=sparkcursor><h4><a href=#toc-entry-16 rel=nofollow>SparkCursor</a></h4><p>SparkCursor can run Spark applications in Athena.This cursor does not follow the <a href=\"https://www.python.org/dev/peps/pep-0249/\" rel=nofollow>DB API 2.0 (PEP 249)</a>. It does not support result set iteration.</p><p>To use this cursor, you must <a href=\"https://docs.aws.amazon.com/athena/latest/ug/notebooks-spark-getting-started.html\" rel=nofollow>create a Spark enabled workgroup in Athena</a> and use that workgroup.</p><p>You can use the SparkCursor by specifying the <span class=\"docutils literal\">cursor_class</span>with the connect method or connection object.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.cursor</span> <span class=kn>import</span> <span class=n>SparkCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>SparkCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.cursor</span> <span class=kn>import</span> <span class=n>SparkCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                    <span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>,</span><span class=w></span>                    <span class=n>cursor_class</span><span class=o>=</span><span class=n>SparkCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><p>It can also be used by specifying the cursor class when calling the connection object\u2019s cursor method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.cursor</span> <span class=kn>import</span> <span class=n>SparkCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=w></span>                 <span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>SparkCursor</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.cursor</span> <span class=kn>import</span> <span class=n>SparkCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=w></span>                    <span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>SparkCursor</span><span class=p>)</span></code></pre><p>This cursor allows you to send PySpark code blocks and use Spark DataFrame and SQL.</p><section id=session-lifecycle><h5>Session lifecycle</h5><p>If session_id is not specified as an argument when creating a Spark cursor, it will start a new session;if session_id is specified, it will check if the session is idle.</p><p>The session idle timeout minutes can be specified with the <span class=\"docutils literal\">session_idle_timeout_minutes</span> argument when creatingthe cursor and the engine DPU and Spark properties can also be specified with the <span class=\"docutils literal\">engine_configuration</span> argument.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.cursor</span> <span class=kn>import</span> <span class=n>SparkCursor</span><span class=w></span><span class=n>conn</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>,</span><span class=w></span>               <span class=n>cursor_class</span><span class=o>=</span><span class=n>SparkCursor</span><span class=p>)</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>conn</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>session_idle_timeout_minutes</span><span class=o>=</span><span class=mi>60</span><span class=p>,</span><span class=w></span>                     <span class=n>engine_configuration</span><span class=o>=</span><span class=p>{</span><span class=w></span>                         <span class=s2>\"CoordinatorDpuSize\"</span><span class=p>:</span> <span class=mi>1</span><span class=p>,</span><span class=w></span>                         <span class=s2>\"MaxConcurrentDpus\"</span><span class=p>:</span> <span class=mi>20</span><span class=p>,</span><span class=w></span>                         <span class=s2>\"DefaultExecutorDpuSize\"</span><span class=p>:</span> <span class=mi>1</span><span class=p>,</span><span class=w></span>                         <span class=s2>\"AdditionalConfigs\"</span><span class=p>:</span> <span class=p>{</span><span class=s2>\"string\"</span><span class=p>:</span> <span class=s2>\"string\"</span><span class=p>},</span><span class=w></span>                         <span class=s2>\"SparkProperties\"</span><span class=p>:</span> <span class=p>{</span><span class=s2>\"string\"</span><span class=p>:</span> <span class=s2>\"string\"</span><span class=p>},</span><span class=w></span>                     <span class=p>})</span></code></pre><p>The session is not terminated until the close method of the cursor is called.You can use the context manager to automatically call the close method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.cursor</span> <span class=kn>import</span> <span class=n>SparkCursor</span><span class=w></span><span class=n>conn</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>,</span><span class=w></span>               <span class=n>cursor_class</span><span class=o>=</span><span class=n>SparkCursor</span><span class=p>)</span><span class=w></span><span class=k>with</span> <span class=n>conn</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span> <span class=k>as</span> <span class=n>cursor</span><span class=p>:</span><span class=w></span>    <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"...\"</span><span class=p>)</span><span class=w></span>    <span class=o>...</span></code></pre></section><section id=spark-dataframes><h5>Spark DataFrames</h5><p>The Spark DataFrames code in the sample notebook that can be enabledwhen creating a workgroup can be executed as follows:</p><pre><code><span class=kn>import</span> <span class=nn>textwrap</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.cursor</span> <span class=kn>import</span> <span class=n>SparkCursor</span><span class=w></span><span class=n>conn</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>,</span> <span class=n>cursor_class</span><span class=o>=</span><span class=n>SparkCursor</span><span class=p>)</span><span class=w></span><span class=k>with</span> <span class=n>conn</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span> <span class=k>as</span> <span class=n>cursor</span><span class=p>:</span><span class=w></span>    <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=w></span>        <span class=n>textwrap</span><span class=o>.</span><span class=n>dedent</span><span class=p>(</span><span class=w>            </span><span class=sd>\"\"\"            file_name = \"s3://athena-examples-us-east-1/notebooks/yellow_tripdata_2016-01.parquet\"            taxi_df = (spark.read.format(\"parquet\")                 .option(\"header\", \"true\")                 .option(\"inferSchema\", \"true\")                 .load(file_name))            \"\"\"</span><span class=w></span>        <span class=p>)</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=w></span>        <span class=n>textwrap</span><span class=o>.</span><span class=n>dedent</span><span class=p>(</span><span class=w>            </span><span class=sd>\"\"\"            taxi1_df=taxi_df.groupBy(\"VendorID\", \"passenger_count\").count()            taxi1_df.show()            \"\"\"</span><span class=w></span>        <span class=p>)</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>get_std_out</span><span class=p>())</span><span class=w></span>    <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=w></span>        <span class=n>textwrap</span><span class=o>.</span><span class=n>dedent</span><span class=p>(</span><span class=w>            </span><span class=sd>\"\"\"            taxi1_df.coalesce(1).write.mode('overwrite').csv(\"s3://YOUR_S3_BUCKET/select_taxi\")            print(\"Write to s3 \" + \"complete\")            \"\"\"</span><span class=w></span>        <span class=p>)</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>get_std_out</span><span class=p>())</span></code></pre><p>The standard output and standard error of a spark application can be retrievedwith the <span class=\"docutils literal\">get_std_out()</span> and <span class=\"docutils literal\">get_std_error()</span> methods in the cursor class.</p></section><section id=spark-sql><h5>Spark SQL</h5><p>The Spark SQL code in the sample notebook can be executed as follows:</p><pre><code><span class=kn>import</span> <span class=nn>textwrap</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.cursor</span> <span class=kn>import</span> <span class=n>SparkCursor</span><span class=w></span><span class=n>conn</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>,</span> <span class=n>cursor_class</span><span class=o>=</span><span class=n>SparkCursor</span><span class=p>)</span><span class=w></span><span class=k>with</span> <span class=n>conn</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span> <span class=k>as</span> <span class=n>cursor</span><span class=p>:</span><span class=w></span>    <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=w></span>        <span class=n>textwrap</span><span class=o>.</span><span class=n>dedent</span><span class=p>(</span><span class=w>            </span><span class=sd>\"\"\"            file_name = \"s3://athena-examples-us-east-1/notebooks/yellow_tripdata_2016-01.parquet\"            taxi_df = (spark.read.format(\"parquet\")                 .option(\"header\", \"true\")                 .option(\"inferSchema\", \"true\")                 .load(file_name))            taxi_df.createOrReplaceTempView(\"taxis\")            sqlDF = spark.sql(\"SELECT DOLocationID, sum(total_amount) as sum_total_amount FROM taxis where DOLocationID &lt; 25 GRoup by DOLocationID ORDER BY DOLocationID\")            sqlDF.show(50)            \"\"\"</span><span class=w></span>        <span class=p>)</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>get_std_out</span><span class=p>())</span><span class=w></span>    <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=w></span>        <span class=n>textwrap</span><span class=o>.</span><span class=n>dedent</span><span class=p>(</span><span class=w>            </span><span class=sd>\"\"\"            spark.sql(\"create database if not exists spark_demo_database\")            spark.sql(\"show databases\").show()            \"\"\"</span><span class=w></span>        <span class=p>)</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>get_std_out</span><span class=p>())</span><span class=w></span>    <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=w></span>        <span class=n>textwrap</span><span class=o>.</span><span class=n>dedent</span><span class=p>(</span><span class=w>            </span><span class=sd>\"\"\"            spark.sql(\"use spark_demo_database\")            taxi1_df=taxi_df.groupBy(\"VendorID\", \"passenger_count\").count()            taxi1_df.write.mode(\"overwrite\").format(\"parquet\").option(\"path\",\"s3://YOUR_S3_BUCKET/select_taxi\").saveAsTable(\"select_taxi_table\")            print(\"Create new table\" + \" complete\")            \"\"\"</span><span class=w></span>        <span class=p>)</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>get_std_out</span><span class=p>())</span><span class=w></span>    <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=w></span>        <span class=n>textwrap</span><span class=o>.</span><span class=n>dedent</span><span class=p>(</span><span class=w>            </span><span class=sd>\"\"\"            spark.sql(\"show tables\").show()            \"\"\"</span><span class=w></span>        <span class=p>)</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>get_std_out</span><span class=p>())</span><span class=w></span>    <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=w></span>        <span class=n>textwrap</span><span class=o>.</span><span class=n>dedent</span><span class=p>(</span><span class=w>            </span><span class=sd>\"\"\"            spark.sql(\"select * from select_taxi_table\").show()            \"\"\"</span><span class=w></span>        <span class=p>)</span><span class=w></span>    <span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>get_std_out</span><span class=p>())</span></code></pre></section></section><section id=asyncsparkcursor><h4><a href=#toc-entry-17 rel=nofollow>AsyncSparkCursor</a></h4><p>AsyncSparkCursor is an AsyncCursor that can handle Spark applications.</p><p>You can use the AsyncSparkCursor by specifying the <span class=\"docutils literal\">cursor_class</span>with the connect method or connection object.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncSparkCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncSparkCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncSparkCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                    <span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>,</span><span class=w></span>                    <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncSparkCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><p>It can also be used by specifying the cursor class when calling the connection object\u2019s cursor method.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncSparkCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=w></span>                 <span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>AsyncSparkCursor</span><span class=p>)</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena.connection</span> <span class=kn>import</span> <span class=n>Connection</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncSparkCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>Connection</span><span class=p>(</span><span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=w></span>                    <span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>AsyncSparkCursor</span><span class=p>)</span></code></pre><p>The default number of workers is 5 or cpu number * 5.If you want to change the number of workers you can specify like the following.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncSparkCursor</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>                 <span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>,</span><span class=w></span>                 <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncSparkCursor</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>(</span><span class=n>max_workers</span><span class=o>=</span><span class=mi>10</span><span class=p>)</span></code></pre><p>The execute method of the AsyncSparkCursor returns the tuple of the calculation ID and the <a href=\"https://docs.python.org/3/library/concurrent.futures.html#future-objects\" rel=nofollow>future object</a>.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncSparkCursor</span><span class=w></span><span class=n>conn</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>,</span> <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncSparkCursor</span><span class=p>)</span><span class=w></span><span class=k>with</span> <span class=n>conn</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span> <span class=k>as</span> <span class=n>cursor</span><span class=p>:</span><span class=w></span>    <span class=n>calculation_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"\"\"spark.sql(\"SELECT * FROM many_rows\")\"\"\"</span><span class=p>)</span></code></pre><p>The return value of the <a href=\"https://docs.python.org/3/library/concurrent.futures.html#future-objects\" rel=nofollow>future object</a> is an <span class=\"docutils literal\">AthenaCalculationExecution</span> object.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncSparkCursor</span><span class=w></span><span class=n>conn</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>,</span> <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncSparkCursor</span><span class=p>)</span><span class=w></span><span class=k>with</span> <span class=n>conn</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span> <span class=k>as</span> <span class=n>cursor</span><span class=p>:</span><span class=w></span>    <span class=n>calculation_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"\"\"spark.sql(\"SELECT * FROM many_rows\")\"\"\"</span><span class=p>)</span><span class=w></span>    <span class=n>calculation_execution</span> <span class=o>=</span> <span class=n>future</span><span class=o>.</span><span class=n>result</span><span class=p>()</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>session_id</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>calculation_id</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>description</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>working_directory</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>state</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>state_change_reason</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>submission_date_time</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>completion_date_time</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>dpu_execution_in_millis</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>progress</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>std_out_s3_uri</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>std_error_s3_uri</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>result_s3_uri</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>calculation_execution</span><span class=o>.</span><span class=n>result_type</span><span class=p>)</span></code></pre><p>Standard output and standard error can be retrieved by passing this object to the cursor class.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncSparkCursor</span><span class=w></span><span class=n>conn</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>,</span> <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncSparkCursor</span><span class=p>)</span><span class=w></span><span class=k>with</span> <span class=n>conn</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span> <span class=k>as</span> <span class=n>cursor</span><span class=p>:</span><span class=w></span>    <span class=n>calculation_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"\"\"spark.sql(\"SELECT * FROM many_rows\")\"\"\"</span><span class=p>)</span><span class=w></span>    <span class=n>calculation_execution</span> <span class=o>=</span> <span class=n>future</span><span class=o>.</span><span class=n>result</span><span class=p>()</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>get_std_out</span><span class=p>(</span><span class=n>calculation_execution</span><span class=p>)</span><span class=o>.</span><span class=n>result</span><span class=p>())</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>get_std_error</span><span class=p>(</span><span class=n>calculation_execution</span><span class=p>)</span><span class=o>.</span><span class=n>result</span><span class=p>())</span></code></pre><p>As with AsyncSparkCursor, you need a calculation ID to cancel a calculation.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=kn>from</span> <span class=nn>pyathena.spark.async_cursor</span> <span class=kn>import</span> <span class=n>AsyncSparkCursor</span><span class=w></span><span class=n>conn</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_SPARK_WORKGROUP\"</span><span class=p>,</span> <span class=n>cursor_class</span><span class=o>=</span><span class=n>AsyncSparkCursor</span><span class=p>)</span><span class=w></span><span class=k>with</span> <span class=n>conn</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span> <span class=k>as</span> <span class=n>cursor</span><span class=p>:</span><span class=w></span>    <span class=n>calculation_id</span><span class=p>,</span> <span class=n>future</span> <span class=o>=</span> <span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"\"\"spark.sql(\"SELECT * FROM many_rows\")\"\"\"</span><span class=p>)</span><span class=w></span>    <span class=n>cursor</span><span class=o>.</span><span class=n>cancel</span><span class=p>(</span><span class=n>calculation_id</span><span class=p>)</span>  <span class=c1># The cancel method future object returns nothing.</span><span class=w></span>    <span class=c1># It is better not to get the result of cursor execution.</span><span class=w></span>    <span class=c1># Because it will be blocked until the session is terminated.</span><span class=w></span>    <span class=c1># future.result()</span></code></pre><p>NOTE: Currently it appears that the calculation is not canceled unless the session is terminated.</p></section><section id=quickly-re-run-queries><h4><a href=#toc-entry-18 rel=nofollow>Quickly re-run queries</a></h4><section id=result-reuse-configuration><h5>Result reuse configuration</h5><p>Athena engine version 3 allows you to <a href=\"https://docs.aws.amazon.com/athena/latest/ug/reusing-query-results.html\" rel=nofollow>reuse the results of previous queries</a>.</p><p>It is available by specifying the arguments <span class=\"docutils literal\">result_reuse_enable</span> and <span class=\"docutils literal\">result_reuse_minutes</span> in the connection object.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>conn</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>               <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>,</span><span class=w></span>               <span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_WORK_GROUP\"</span><span class=p>,</span><span class=w></span>               <span class=n>result_reuse_enable</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span><span class=w></span>               <span class=n>result_reuse_minutes</span><span class=o>=</span><span class=mi>60</span><span class=p>)</span></code></pre><p>You can also specify <span class=\"docutils literal\">result_reuse_enable</span> and <span class=\"docutils literal\">result_reuse_minutes</span> when executing a query.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM one_row\"</span><span class=p>,</span><span class=w></span>               <span class=n>work_group</span><span class=o>=</span><span class=s2>\"YOUR_WORK_GROUP\"</span><span class=p>,</span><span class=w></span>               <span class=n>result_reuse_enable</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span><span class=w></span>               <span class=n>result_reuse_minutes</span><span class=o>=</span><span class=mi>60</span><span class=p>)</span></code></pre><p>If the following error occurs, please use a workgroup configured with Athena engine version 3.</p><pre><code>pyathena.error.DatabaseError: An error occurred (InvalidRequestException) when calling the StartQueryExecution operation: This functionality is not enabled in the selected engine version. Please check the engine version settings or contact AWS support for further assistance.</code></pre><p>If for some reason you cannot use the reuse feature of Athena engine version 3, please use the <a href=#cache-configuration rel=nofollow>Cache configuration</a> implemented by PyAthena.</p></section><section id=cache-configuration><h5>Cache configuration</h5><p><strong>Please use the Result reuse configuration.</strong></p><p>You can attempt to re-use the results from a previously executed query to help save time and money in the cases where your underlying data isn\u2019t changing.Set the <span class=\"docutils literal\">cache_size</span> or <span class=\"docutils literal\">cache_expiration_time</span> parameter of <span class=\"docutils literal\">cursor.execute()</span> to a number larger than 0 to enable caching.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM one_row\"</span><span class=p>)</span>  <span class=c1># run once</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>query_id</span><span class=p>)</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM one_row\"</span><span class=p>,</span> <span class=n>cache_size</span><span class=o>=</span><span class=mi>10</span><span class=p>)</span>  <span class=c1># re-use earlier results</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>cursor</span><span class=o>.</span><span class=n>query_id</span><span class=p>)</span>  <span class=c1># You should expect to see the same Query ID</span></code></pre><p>The unit of <span class=\"docutils literal\">expiration_time</span> is seconds. To use the results of queries executed up to one hour ago, specify like the following.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM one_row\"</span><span class=p>,</span> <span class=n>cache_expiration_time</span><span class=o>=</span><span class=mi>3600</span><span class=p>)</span>  <span class=c1># Use queries executed within 1 hour as cache.</span></code></pre><p>If <span class=\"docutils literal\">cache_size</span> is not specified, the value of <span class=\"docutils literal\">sys.maxsize</span> will be automatically set and all query results executed up to one hour ago will be checked.Therefore, it is recommended to specify <span class=\"docutils literal\">cache_expiration_time</span> together with <span class=\"docutils literal\">cache_size</span> like the following.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span><span class=w></span><span class=n>cursor</span><span class=o>.</span><span class=n>execute</span><span class=p>(</span><span class=s2>\"SELECT * FROM one_row\"</span><span class=p>,</span> <span class=n>cache_size</span><span class=o>=</span><span class=mi>100</span><span class=p>,</span> <span class=n>cache_expiration_time</span><span class=o>=</span><span class=mi>3600</span><span class=p>)</span>  <span class=c1># Use the last 100 queries within 1 hour as cache.</span></code></pre><p>Results will only be re-used if the query strings match <em>exactly</em>,and the query was a DML statement (the assumption being that you always want to re-run queries like <span class=\"docutils literal\">CREATE TABLE</span> and <span class=\"docutils literal\">DROP TABLE</span>).</p><p>The S3 staging directory is not checked, so it\u2019s possible that the location of the results is not in your provided <span class=\"docutils literal\">s3_staging_dir</span>.</p></section></section></section><section id=credentials><h3><a href=#toc-entry-19 rel=nofollow>Credentials</a></h3><p>Support <a href=\"http://boto3.readthedocs.io/en/latest/guide/configuration.html\" rel=nofollow>Boto3 credentials</a>.</p><p>Additional environment variable:</p><pre><code>$<span class=w> </span><span class=nb>export</span><span class=w> </span><span class=nv>AWS_ATHENA_S3_STAGING_DIR</span><span class=o>=</span>s3://YOUR_S3_BUCKET/path/to/<span class=w></span>$<span class=w> </span><span class=nb>export</span><span class=w> </span><span class=nv>AWS_ATHENA_WORK_GROUP</span><span class=o>=</span>YOUR_WORK_GROUP</code></pre><section id=examples><h4><a href=#toc-entry-20 rel=nofollow>Examples</a></h4><section id=passing-credentials-as-parameters><h5>Passing credentials as parameters</h5><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>aws_access_key_id</span><span class=o>=</span><span class=s2>\"YOUR_ACCESS_KEY_ID\"</span><span class=p>,</span><span class=w></span>                 <span class=n>aws_secret_access_key</span><span class=o>=</span><span class=s2>\"YOUR_SECRET_ACCESS_KEY\"</span><span class=p>,</span><span class=w></span>                 <span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>aws_access_key_id</span><span class=o>=</span><span class=s2>\"YOUR_ACCESS_KEY_ID\"</span><span class=p>,</span><span class=w></span>                 <span class=n>aws_secret_access_key</span><span class=o>=</span><span class=s2>\"YOUR_SECRET_ACCESS_KEY\"</span><span class=p>,</span><span class=w></span>                 <span class=n>aws_session_token</span><span class=o>=</span><span class=s2>\"YOUR_SESSION_TOKEN\"</span><span class=p>,</span><span class=w></span>                 <span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre></section><section id=multi-factor-authentication><h5>Multi-factor authentication</h5><p>You will be prompted to enter the MFA code.The program execution will be blocked until the MFA code is entered.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>duration_seconds</span><span class=o>=</span><span class=mi>3600</span><span class=p>,</span><span class=w></span>                 <span class=n>serial_number</span><span class=o>=</span><span class=s2>\"arn:aws:iam::ACCOUNT_NUMBER_WITHOUT_HYPHENS:mfa/MFA_DEVICE_ID\"</span><span class=p>,</span><span class=w></span>                 <span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre></section><section id=shared-credentials-file><h5>Shared credentials file</h5><p>The shared credentials file has a default location of ~/.aws/credentials.</p><p>If you use the default profile, there is no need to specify credential information.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre><p>You can also specify a profile other than the default.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>profile_name</span><span class=o>=</span><span class=s2>\"YOUR_PROFILE_NAME\"</span><span class=p>,</span><span class=w></span>                 <span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre></section><section id=assume-role-provider><h5>Assume role provider</h5><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>role_arn</span><span class=o>=</span><span class=s2>\"YOUR_ASSUME_ROLE_ARN\"</span><span class=p>,</span><span class=w></span>                 <span class=n>role_session_name</span><span class=o>=</span><span class=s2>\"PyAthena-session\"</span><span class=p>,</span><span class=w></span>                 <span class=n>duration_seconds</span><span class=o>=</span><span class=mi>3600</span><span class=p>,</span><span class=w></span>                 <span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre></section><section id=assume-role-provider-with-mfa><h5>Assume role provider with MFA</h5><p>You will be prompted to enter the MFA code.The program execution will be blocked until the MFA code is entered.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>role_arn</span><span class=o>=</span><span class=s2>\"YOUR_ASSUME_ROLE_ARN\"</span><span class=p>,</span><span class=w></span>                 <span class=n>role_session_name</span><span class=o>=</span><span class=s2>\"PyAthena-session\"</span><span class=p>,</span><span class=w></span>                 <span class=n>duration_seconds</span><span class=o>=</span><span class=mi>3600</span><span class=p>,</span><span class=w></span>                 <span class=n>serial_number</span><span class=o>=</span><span class=s2>\"arn:aws:iam::ACCOUNT_NUMBER_WITHOUT_HYPHENS:mfa/MFA_DEVICE_ID\"</span><span class=p>,</span><span class=w></span>                 <span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre></section><section id=instance-profiles><h5>Instance profiles</h5><p>No need to specify credential information.</p><pre><code><span class=kn>from</span> <span class=nn>pyathena</span> <span class=kn>import</span> <span class=n>connect</span><span class=w></span><span class=n>cursor</span> <span class=o>=</span> <span class=n>connect</span><span class=p>(</span><span class=n>s3_staging_dir</span><span class=o>=</span><span class=s2>\"s3://YOUR_S3_BUCKET/path/to/\"</span><span class=p>,</span><span class=w></span>                 <span class=n>region_name</span><span class=o>=</span><span class=s2>\"us-west-2\"</span><span class=p>)</span><span class=o>.</span><span class=n>cursor</span><span class=p>()</span></code></pre></section></section></section><section id=testing><h3><a href=#toc-entry-21 rel=nofollow>Testing</a></h3><p>Depends on the following environment variables:</p><pre><code>$<span class=w> </span><span class=nb>export</span><span class=w> </span><span class=nv>AWS_DEFAULT_REGION</span><span class=o>=</span>us-west-2<span class=w></span>$<span class=w> </span><span class=nb>export</span><span class=w> </span><span class=nv>AWS_ATHENA_S3_STAGING_DIR</span><span class=o>=</span>s3://YOUR_S3_BUCKET/path/to/<span class=w></span>$<span class=w> </span><span class=nb>export</span><span class=w> </span><span class=nv>AWS_ATHENA_WORKGROUP</span><span class=o>=</span>pyathena<span class=w></span>$<span class=w> </span><span class=nb>export</span><span class=w> </span><span class=nv>AWS_ATHENA_SPARK_WORKGROUP</span><span class=o>=</span>pyathena-spark</code></pre><p>In addition, you need to create a workgroup with the <cite>Query result location</cite> set to the name specified in the <cite>AWS_ATHENA_WORKGROUP</cite> environment variable.If primary is not available as the default workgroup, specify an alternative workgroup name for the default in the environment variable <cite>AWS_ATHENA_DEFAULT_WORKGROUP</cite>.</p><pre><code>$<span class=w> </span><span class=nb>export</span><span class=w> </span><span class=nv>AWS_ATHENA_DEFAULT_WORKGROUP</span><span class=o>=</span>DEFAULT_WORKGROUP</code></pre><section id=run-test><h4><a href=#toc-entry-22 rel=nofollow>Run test</a></h4><pre><code>$<span class=w> </span>pip<span class=w> </span>install<span class=w> </span>hatch<span class=w> </span>or<span class=w> </span>pipx<span class=w> </span>install<span class=w> </span>hatch<span class=w> </span>or<span class=w> </span>brew<span class=w> </span>install<span class=w> </span>hatch<span class=w></span>$<span class=w> </span>hatch<span class=w> </span>run<span class=w> </span><span class=nb>test</span><span class=w></span>$<span class=w> </span>hatch<span class=w> </span>run<span class=w> </span>test-sqla</code></pre></section><section id=run-test-multiple-python-versions><h4><a href=#toc-entry-23 rel=nofollow>Run test multiple Python versions</a></h4><pre><code>$<span class=w> </span>pip<span class=w> </span>install<span class=w> </span>hatch<span class=w> </span>or<span class=w> </span>pipx<span class=w> </span>install<span class=w> </span>hatch<span class=w> </span>or<span class=w> </span>brew<span class=w> </span>install<span class=w> </span>hatch<span class=w></span>$<span class=w> </span>hatch<span class=w> </span>-e<span class=w> </span><span class=nb>test</span><span class=w> </span>run<span class=w> </span><span class=nb>test</span><span class=w></span>$<span class=w> </span>hatch<span class=w> </span>-e<span class=w> </span><span class=nb>test</span><span class=w> </span>run<span class=w> </span>test-sqla</code></pre></section><section id=github-actions><h4><a href=#toc-entry-24 rel=nofollow>GitHub Actions</a></h4><p>GitHub Actions uses OpenID Connect (OIDC) to access AWS resources. You will need to refer to the <a href=\"https://docs.github.com/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services\" rel=nofollow>GitHub Actions documentation</a> to configure it.</p><p>The CloudFormation templates for creating GitHub OIDC Provider and IAM Role can be found in the <a href=\"https://github.com/aws-actions/configure-aws-credentials#sample-iam-role-cloudformation-template\" rel=nofollow>aws-actions/configure-aws-credentials repository</a>.</p><p>Under <a href=\"scripts/cloudformation/\" rel=nofollow>scripts/cloudformation</a> you will also find a CloudFormation template with additional permissions and workgroup settings needed for testing.</p><p>The example of the CloudFormation execution command is the following:</p><pre><code>$<span class=w> </span>aws<span class=w> </span>--region<span class=w> </span>us-west-2<span class=w> </span><span class=se>\\</span><span class=w>    </span>cloudformation<span class=w> </span>create-stack<span class=w> </span><span class=se>\\</span><span class=w>    </span>--stack-name<span class=w> </span>github-actions-oidc-pyathena<span class=w> </span><span class=se>\\</span><span class=w>    </span>--capabilities<span class=w> </span>CAPABILITY_NAMED_IAM<span class=w> </span><span class=se>\\</span><span class=w>    </span>--template-body<span class=w> </span>file://./scripts/cloudformation/github_actions_oidc.yaml<span class=w> </span><span class=se>\\</span><span class=w>    </span>--parameters<span class=w> </span><span class=nv>ParameterKey</span><span class=o>=</span>GitHubOrg,ParameterValue<span class=o>=</span>laughingman7743<span class=w> </span><span class=se>\\</span><span class=w>      </span><span class=nv>ParameterKey</span><span class=o>=</span>RepositoryName,ParameterValue<span class=o>=</span>PyAthena<span class=w> </span><span class=se>\\</span><span class=w>      </span><span class=nv>ParameterKey</span><span class=o>=</span>BucketName,ParameterValue<span class=o>=</span>laughingman7743-athena<span class=w> </span><span class=se>\\</span><span class=w>      </span><span class=nv>ParameterKey</span><span class=o>=</span>RoleName,ParameterValue<span class=o>=</span>github-actions-oidc-pyathena-test<span class=w> </span><span class=se>\\</span><span class=w>      </span><span class=nv>ParameterKey</span><span class=o>=</span>WorkGroupName,ParameterValue<span class=o>=</span>pyathena-test</code></pre></section></section><section id=code-formatting><h3><a href=#toc-entry-25 rel=nofollow>Code formatting</a></h3><p>The code formatting uses <a href=\"https://github.com/astral-sh/ruff\" rel=nofollow>ruff</a>.</p><section id=appy-format><h4><a href=#toc-entry-26 rel=nofollow>Appy format</a></h4><pre><code>$<span class=w> </span>make<span class=w> </span>fmt</code></pre></section><section id=check-format><h4><a href=#toc-entry-27 rel=nofollow>Check format</a></h4><pre><code>$<span class=w> </span>make<span class=w> </span>chk</code></pre></section></section><section id=license><h3><a href=#toc-entry-28 rel=nofollow>License</a></h3><p><a href=LICENSE rel=nofollow>MIT license</a></p><p>Many of the implementations in this library are based on <a href=\"https://github.com/dropbox/PyHive\" rel=nofollow>PyHive</a>, thanks for <a href=\"https://github.com/dropbox/PyHive\" rel=nofollow>PyHive</a>.</p></section></section>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/laughingman7743/PyAthena/\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>homepage      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/laughingman7743/PyAthena/\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>repository      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/PyAthena\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (Copyright 2017 laughingman7743  Permission is hereby granted, free of charge, to any person obtainin...)</p>    <p><strong>Author:</strong> <a href=\"mailto:laughingman7743@gmail.com\">laughingman7743</a></p>  <p>    <strong>Requires:</strong> Python &gt;=3.8.1  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/laughingman7743/\" aria-label=\"laughingman7743\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/18a898b29bebe25ed7fa61e2c41bfa3a24296226/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f62386162326535303062313332343765646531306233656430363031326233613f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for laughingman7743 from gravatar.com\" title=\"Avatar for laughingman7743 from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            laughingman7743          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+4+-+Beta\">            4 - Beta          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Operating System</strong>      <ul>        <li>          <a href=\"/search/?c=Operating+System+%3A%3A+OS+Independent\">            OS Independent          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.12\">            Python :: 3.12          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Database+%3A%3A+Front-Ends\">            Database :: Front-Ends          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/pyathena/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.3.0/\">                <p class=\"release__version\">                  3.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2024-02-11T15:40:39+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 11, 2024</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.2.1/\">                <p class=\"release__version\">                  3.2.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2024-02-03T16:49:54+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 3, 2024</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.2.0/\">                <p class=\"release__version\">                  3.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2024-01-26T15:40:33+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 26, 2024</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.1.1/\">                <p class=\"release__version\">                  3.1.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2024-02-03T16:47:42+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 3, 2024</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.1.0/\">                <p class=\"release__version\">                  3.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2024-01-09T05:23:27+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 9, 2024</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.0.10/\">                <p class=\"release__version\">                  3.0.10                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-10-29T08:24:25+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 29, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.0.9/\">                <p class=\"release__version\">                  3.0.9                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-10-11T16:42:23+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 11, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.0.8/\">                <p class=\"release__version\">                  3.0.8                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-09-21T05:14:13+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 21, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.0.7/\">                <p class=\"release__version\">                  3.0.7                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-09-12T15:37:18+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 12, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.0.6/\">                <p class=\"release__version\">                  3.0.6                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-07-16T15:46:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 16, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.0.5/\">                <p class=\"release__version\">                  3.0.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-07-12T05:00:36+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 12, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.0.4/\">                <p class=\"release__version\">                  3.0.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-06-29T14:51:52+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 29, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.0.3/\">                <p class=\"release__version\">                  3.0.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-05-29T14:37:12+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 29, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.0.2/\">                <p class=\"release__version\">                  3.0.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-05-17T14:43:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 17, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.0.1/\">                <p class=\"release__version\">                  3.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-05-14T14:29:29+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 14, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/3.0.0/\">                <p class=\"release__version\">                  3.0.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-05-04T18:42:36+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 4, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.25.2/\">                <p class=\"release__version\">                  2.25.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-23T05:51:47+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 23, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.25.1/\">                <p class=\"release__version\">                  2.25.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-22T13:56:38+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 22, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.25.0/\">                <p class=\"release__version\">                  2.25.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-22T09:49:08+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 22, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.24.2/\">                <p class=\"release__version\">                  2.24.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-23T06:44:06+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 23, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.24.1/\">                <p class=\"release__version\">                  2.24.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-22T16:20:21+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 22, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.24.0/\">                <p class=\"release__version\">                  2.24.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-09T13:46:23+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 9, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.23.2/\">                <p class=\"release__version\">                  2.23.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-23T06:45:02+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 23, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.23.1/\">                <p class=\"release__version\">                  2.23.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-22T16:17:13+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 22, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.23.0/\">                <p class=\"release__version\">                  2.23.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-02-14T02:02:45+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 14, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.22.2/\">                <p class=\"release__version\">                  2.22.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-23T06:55:32+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 23, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.22.1/\">                <p class=\"release__version\">                  2.22.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-22T16:22:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 22, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.22.0/\">                <p class=\"release__version\">                  2.22.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-02-09T16:03:51+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 9, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.21.3/\">                <p class=\"release__version\">                  2.21.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-23T06:42:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 23, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.21.2/\">                <p class=\"release__version\">                  2.21.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-22T16:04:37+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 22, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.21.1/\">                <p class=\"release__version\">                  2.21.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-02-09T17:08:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 9, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.21.0/\">                <p class=\"release__version\">                  2.21.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-02-04T05:52:42+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 4, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.20.3/\">                <p class=\"release__version\">                  2.20.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-23T06:39:36+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 23, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.20.2/\">                <p class=\"release__version\">                  2.20.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-22T16:02:38+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 22, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.20.1/\">                <p class=\"release__version\">                  2.20.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-02-09T16:49:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 9, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.20.0/\">                <p class=\"release__version\">                  2.20.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-01-27T14:16:29+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 27, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.19.4/\">                <p class=\"release__version\">                  2.19.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-23T06:38:02+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 23, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.19.3/\">                <p class=\"release__version\">                  2.19.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-22T15:59:34+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 22, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.19.2/\">                <p class=\"release__version\">                  2.19.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-02-09T16:42:02+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 9, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.19.1/\">                <p class=\"release__version\">                  2.19.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-01-28T07:23:21+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 28, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.19.0/\">                <p class=\"release__version\">                  2.19.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-12-30T13:18:40+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 30, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.18.6/\">                <p class=\"release__version\">                  2.18.6                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-23T06:39:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 23, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.18.5/\">                <p class=\"release__version\">                  2.18.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-22T15:57:29+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 22, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.18.4/\">                <p class=\"release__version\">                  2.18.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-02-09T16:36:43+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 9, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.18.3/\">                <p class=\"release__version\">                  2.18.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-01-28T07:26:08+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 28, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.18.2/\">                <p class=\"release__version\">                  2.18.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-12-30T11:04:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 30, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.18.1/\">                <p class=\"release__version\">                  2.18.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-12-18T09:51:43+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 18, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.18.0/\">                <p class=\"release__version\">                  2.18.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-12-18T06:10:34+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 18, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.17.0/\">                <p class=\"release__version\">                  2.17.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-12-02T06:17:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 2, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.16.1/\">                <p class=\"release__version\">                  2.16.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-11-30T11:53:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 30, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.16.0/\">                <p class=\"release__version\">                  2.16.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-11-26T04:38:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 26, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.15.0/\">                <p class=\"release__version\">                  2.15.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-11-17T15:51:13+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 17, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.14.0/\">                <p class=\"release__version\">                  2.14.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-08-15T15:00:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 15, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.13.0/\">                <p class=\"release__version\">                  2.13.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-07-31T11:54:18+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 31, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.12.0/\">                <p class=\"release__version\">                  2.12.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-07-28T12:35:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 28, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.11.0/\">                <p class=\"release__version\">                  2.11.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-07-26T15:19:43+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 26, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.10.0/\">                <p class=\"release__version\">                  2.10.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-07-17T10:44:57+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 17, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.9.6/\">                <p class=\"release__version\">                  2.9.6                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-07-09T07:08:48+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 9, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.9.5/\">                <p class=\"release__version\">                  2.9.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-06-24T07:38:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 24, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.9.4/\">                <p class=\"release__version\">                  2.9.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-06-21T14:03:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 21, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.9.3/\">                <p class=\"release__version\">                  2.9.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-06-11T06:53:03+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 11, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.9.2/\">                <p class=\"release__version\">                  2.9.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-06-10T16:48:24+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 10, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.9.1/\">                <p class=\"release__version\">                  2.9.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-06-06T07:44:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 6, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.9.0/\">                <p class=\"release__version\">                  2.9.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-06-04T15:58:18+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 4, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.8.0/\">                <p class=\"release__version\">                  2.8.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-05-22T16:34:41+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 22, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.7.0/\">                <p class=\"release__version\">                  2.7.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-05-15T17:49:56+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 15, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.6.1/\">                <p class=\"release__version\">                  2.6.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-05-07T17:03:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 7, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.6.0/\">                <p class=\"release__version\">                  2.6.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-05-05T18:46:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 5, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.5.4/\">                <p class=\"release__version\">                  2.5.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-05-04T12:47:30+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 4, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.5.3/\">                <p class=\"release__version\">                  2.5.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-05-03T16:59:29+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 3, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.5.2/\">                <p class=\"release__version\">                  2.5.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-04-09T10:12:48+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 9, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.5.1/\">                <p class=\"release__version\">                  2.5.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-03-12T18:36:31+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 12, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.5.0/\">                <p class=\"release__version\">                  2.5.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-03-05T05:49:58+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 5, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.4.1/\">                <p class=\"release__version\">                  2.4.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-01-16T15:18:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 16, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.4.0/\">                <p class=\"release__version\">                  2.4.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-01-15T15:24:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 15, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.3.2/\">                <p class=\"release__version\">                  2.3.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-12-05T14:12:15+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 5, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.3.1/\">                <p class=\"release__version\">                  2.3.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-23T10:27:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 23, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.3.0/\">                <p class=\"release__version\">                  2.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-05-29T13:32:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 29, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.2.0/\">                <p class=\"release__version\">                  2.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-03-16T13:55:06+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 16, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.1.2/\">                <p class=\"release__version\">                  2.1.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-02-28T08:48:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 28, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.1.1/\">                <p class=\"release__version\">                  2.1.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-01-16T14:07:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 16, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.1.0/\">                <p class=\"release__version\">                  2.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-12-30T10:24:42+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 30, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.0.2/\">                <p class=\"release__version\">                  2.0.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-12-29T09:29:43+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 29, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.0.1/\">                <p class=\"release__version\">                  2.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-12-28T14:00:18+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 28, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/2.0.0/\">                <p class=\"release__version\">                  2.0.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-11-07T14:47:57+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 7, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.11.5/\">                <p class=\"release__version\">                  1.11.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-02-28T10:08:43+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 28, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.11.4/\">                <p class=\"release__version\">                  1.11.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-01-16T14:03:54+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 16, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.11.3/\">                <p class=\"release__version\">                  1.11.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-12-30T10:44:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 30, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.11.2/\">                <p class=\"release__version\">                  1.11.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-09-22T04:57:51+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 22, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.11.1/\">                <p class=\"release__version\">                  1.11.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-08-22T10:57:32+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 22, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.11.0/\">                <p class=\"release__version\">                  1.11.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-07-12T14:57:34+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 12, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.10.8/\">                <p class=\"release__version\">                  1.10.8                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-06-28T05:43:18+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 28, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.10.7/\">                <p class=\"release__version\">                  1.10.7                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-05-13T14:52:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 13, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.10.6/\">                <p class=\"release__version\">                  1.10.6                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-05-10T12:01:21+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 10, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.10.5/\">                <p class=\"release__version\">                  1.10.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-04-26T06:17:43+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 26, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.10.4/\">                <p class=\"release__version\">                  1.10.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-04-12T09:01:43+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 12, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.10.3/\">                <p class=\"release__version\">                  1.10.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-03-28T06:42:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 28, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.10.2/\">                <p class=\"release__version\">                  1.10.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-02-29T09:30:42+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 29, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.10.1/\">                <p class=\"release__version\">                  1.10.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-02-08T14:45:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 8, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.10.0/\">                <p class=\"release__version\">                  1.10.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-01-13T14:28:29+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 13, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.9.0/\">                <p class=\"release__version\">                  1.9.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-12-14T11:31:36+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 14, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.8.0/\">                <p class=\"release__version\">                  1.8.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-10-13T23:04:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 13, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.7.2/\">                <p class=\"release__version\">                  1.7.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-10-03T12:41:24+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 3, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.7.1/\">                <p class=\"release__version\">                  1.7.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-06-30T05:24:58+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 30, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.7.0/\">                <p class=\"release__version\">                  1.7.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-06-16T09:38:33+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 16, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.6.1/\">                <p class=\"release__version\">                  1.6.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-04-15T14:45:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 15, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.6.0/\">                <p class=\"release__version\">                  1.6.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-04-14T06:51:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 14, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.5.1/\">                <p class=\"release__version\">                  1.5.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-03-23T04:50:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 23, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.5.0/\">                <p class=\"release__version\">                  1.5.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-03-05T15:06:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 5, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.4.6/\">                <p class=\"release__version\">                  1.4.6                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-02-11T00:48:32+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 11, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.4.5/\">                <p class=\"release__version\">                  1.4.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-02-09T14:41:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 9, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.4.4/\">                <p class=\"release__version\">                  1.4.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-12-22T04:09:58+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 22, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.4.3/\">                <p class=\"release__version\">                  1.4.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-12-01T06:32:47+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 1, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.4.2/\">                <p class=\"release__version\">                  1.4.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-10-06T12:39:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 6, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.4.1/\">                <p class=\"release__version\">                  1.4.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-09-25T13:41:31+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 25, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.4.0/\">                <p class=\"release__version\">                  1.4.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-09-25T13:08:49+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 25, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.3.0/\">                <p class=\"release__version\">                  1.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-07-21T13:16:34+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 21, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.2.5/\">                <p class=\"release__version\">                  1.2.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-05-31T05:15:07+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 31, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.2.4/\">                <p class=\"release__version\">                  1.2.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-05-22T06:38:45+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 22, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.2.3/\">                <p class=\"release__version\">                  1.2.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-04-21T13:57:31+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 21, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.2.2/\">                <p class=\"release__version\">                  1.2.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-02-26T14:21:40+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 26, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.2.1/\">                <p class=\"release__version\">                  1.2.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-02-10T11:01:10+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 10, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.2.0/\">                <p class=\"release__version\">                  1.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-09-24T06:06:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 24, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.1.0/\">                <p class=\"release__version\">                  1.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-07-29T02:53:08+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 29, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.0.3/\">                <p class=\"release__version\">                  1.0.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-07-07T22:09:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 7, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.0.2/\">                <p class=\"release__version\">                  1.0.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-06-04T07:16:51+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 4, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.0.1/\">                <p class=\"release__version\">                  1.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-05-28T10:29:52+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 28, 2017</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/PyAthena/1.0.0/\">                <p class=\"release__version\">                  1.0.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-05-20T23:03:20+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 20, 2017</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/02/83/08cddc05d95f4dc4abf4702be18fd2775336a2c2f474baf4a698f73f4f6f/pyathena-3.3.0.tar.gz\">          pyathena-3.3.0.tar.gz        </a>        (73.2 kB        <a href=\"#copy-hash-modal-0d86bf5e-5a50-417c-ace5-8df589fa7b99\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2024-02-11T15:40:43+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 11, 2024</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/35/93/216e24a1eee8feb201abdf2439fbc3a027235b7770ac8a3e2de24cd07c39/pyathena-3.3.0-py3-none-any.whl\">          pyathena-3.3.0-py3-none-any.whl        </a>        (80.6 kB        <a href=\"#copy-hash-modal-11040b53-f2b3-42c0-8c57-b4e653a5bbe9\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2024-02-11T15:40:39+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 11, 2024</time>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-0d86bf5e-5a50-417c-ace5-8df589fa7b99\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for pyathena-3.3.0.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for pyathena-3.3.0.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">dd2e6241e99b85a43531cc40272644806d33eb44b95211161afec1b496e43d37</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">e726a9c529df16d97497ffab46946d56</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">028308cddc05d95f4dc4abf4702be18fd2775336a2c2f474baf4a698f73f4f6f</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-11040b53-f2b3-42c0-8c57-b4e653a5bbe9\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for pyathena-3.3.0-py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for pyathena-3.3.0-py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">2fd46a7615c20caaefecc023590ee788d2639b46541b55724de12126299d7abb</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">7b5e640a6239c44e045ea8b08e4cde84</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">3593216e24a1eee8feb201abdf2439fbc3a027235b7770ac8a3e2de24cd07c39</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "pymatgen",
  "url": "https://pymatgen.org",
  "html": "<!DOCTYPE html> <html lang=\"en-US\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"> <link rel=\"stylesheet\" href=\"/assets/css/just-the-docs-default.css\"> <link rel=\"stylesheet\" href=\"/assets/css/just-the-docs-head-nav.css\" id=\"jtd-head-nav-stylesheet\"> <style id=\"jtd-nav-activation\"> .site-nav > ul.nav-list:first-child > li:not(:nth-child(1)) > a, .site-nav > ul.nav-list:first-child > li > ul > li > a, .site-nav > ul.nav-list:first-child > li > ul > li > ul > li > a { background-image: none; } .site-nav > ul.nav-list:not(:first-child) a, .site-nav li.external a { background-image: none; } .site-nav > ul.nav-list:first-child > li:nth-child(1) > a { font-weight: 600; text-decoration: none; }.site-nav > ul.nav-list:first-child > li:nth-child(1) > button svg { transform: rotate(-90deg); }.site-nav > ul.nav-list:first-child > li.nav-list-item:nth-child(1) > ul.nav-list { display: block; } </style> <script src=\"/assets/js/vendor/lunr.min.js\"></script> <script src=\"/assets/js/just-the-docs.js\"></script> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <link rel=\"icon\" href=\"/assets/favicon.ico\" type=\"image/x-icon\"> <!-- Begin Jekyll SEO tag v2.8.0 --> <title>Home | pymatgen</title> <meta name=\"generator\" content=\"Jekyll v3.9.5\" /> <meta property=\"og:title\" content=\"Home\" /> <meta property=\"og:locale\" content=\"en_US\" /> <meta name=\"description\" content=\"Python Materials Genomics (pymatgen) is a robust materials analysis code that defines classes for structures and molecules with support for many electronic structure codes. It powers the Materials Project.\" /> <meta property=\"og:description\" content=\"Python Materials Genomics (pymatgen) is a robust materials analysis code that defines classes for structures and molecules with support for many electronic structure codes. It powers the Materials Project.\" /> <link rel=\"canonical\" href=\"https://pymatgen.org/\" /> <meta property=\"og:url\" content=\"https://pymatgen.org/\" /> <meta property=\"og:site_name\" content=\"pymatgen\" /> <meta property=\"og:type\" content=\"website\" /> <meta name=\"twitter:card\" content=\"summary\" /> <meta property=\"twitter:title\" content=\"Home\" /> <script type=\"application/ld+json\"> {\"@context\":\"https://schema.org\",\"@type\":\"WebSite\",\"description\":\"Python Materials Genomics (pymatgen) is a robust materials analysis code that defines classes for structures and molecules with support for many electronic structure codes. It powers the Materials Project.\",\"headline\":\"Home\",\"name\":\"pymatgen\",\"url\":\"https://pymatgen.org/\"}</script> <!-- End Jekyll SEO tag --> </head> <body> <a class=\"skip-to-main\" href=\"#main-content\">Skip to main content</a> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"d-none\"> <symbol id=\"svg-link\" viewBox=\"0 0 24 24\"> <title>Link</title> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-link\"> <path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path> </svg> </symbol> <symbol id=\"svg-menu\" viewBox=\"0 0 24 24\"> <title>Menu</title> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-menu\"> <line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\"></line> </svg> </symbol> <symbol id=\"svg-arrow-right\" viewBox=\"0 0 24 24\"> <title>Expand</title> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-right\"> <polyline points=\"9 18 15 12 9 6\"></polyline> </svg> </symbol> <!-- Feather. MIT License: https://github.com/feathericons/feather/blob/master/LICENSE --> <symbol id=\"svg-external-link\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-external-link\"> <title id=\"svg-external-link-title\">(external link)</title> <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path><polyline points=\"15 3 21 3 21 9\"></polyline><line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line> </symbol> <symbol id=\"svg-doc\" viewBox=\"0 0 24 24\"> <title>Document</title> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-file\"> <path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline> </svg> </symbol> <symbol id=\"svg-search\" viewBox=\"0 0 24 24\"> <title>Search</title> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-search\"> <circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line> </svg> </symbol> <!-- Bootstrap Icons. MIT License: https://github.com/twbs/icons/blob/main/LICENSE.md --> <symbol id=\"svg-copy\" viewBox=\"0 0 16 16\"> <title>Copy</title> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-clipboard\" viewBox=\"0 0 16 16\"> <path d=\"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z\"/> <path d=\"M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z\"/> </svg> </symbol> <symbol id=\"svg-copied\" viewBox=\"0 0 16 16\"> <title>Copied</title> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-clipboard-check-fill\" viewBox=\"0 0 16 16\"> <path d=\"M6.5 0A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3Zm3 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3Z\"/> <path d=\"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1A2.5 2.5 0 0 1 9.5 5h-3A2.5 2.5 0 0 1 4 2.5v-1Zm6.854 7.354-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 0 1 .708-.708L7.5 10.793l2.646-2.647a.5.5 0 0 1 .708.708Z\"/> </svg> </symbol> </svg> <div class=\"side-bar\"> <div class=\"site-header\" role=\"banner\"> <a href=\"/\" class=\"site-title lh-tight\"> pymatgen </a> <button id=\"menu-button\" class=\"site-button btn-reset\" aria-label=\"Toggle menu\" aria-pressed=\"false\"> <svg viewBox=\"0 0 24 24\" class=\"icon\" aria-hidden=\"true\"><use xlink:href=\"#svg-menu\"></use></svg> </button> </div> <nav aria-label=\"Main\" id=\"site-nav\" class=\"site-nav\"> <ul class=\"nav-list\"><li class=\"nav-list-item\"><a href=\"/\" class=\"nav-list-link\">Home</a></li><li class=\"nav-list-item\"><a href=\"/installation.html\" class=\"nav-list-link\">Installation</a></li><li class=\"nav-list-item\"><a href=\"/compatibility.html\" class=\"nav-list-link\">Compatibility</a></li><li class=\"nav-list-item\"><a href=\"/CHANGES.html\" class=\"nav-list-link\">Change Log</a></li><li class=\"nav-list-item\"><a href=\"/usage.html\" class=\"nav-list-link\">Usage</a></li><li class=\"nav-list-item\"><a href=\"/contributing.html\" class=\"nav-list-link\">Contributing</a></li><li class=\"nav-list-item\"><a href=\"/pymatgen.html\" class=\"nav-list-link\">API Documentation</a></li><li class=\"nav-list-item\"><a href=\"/addons.html\" class=\"nav-list-link\">Add-ons</a></li><li class=\"nav-list-item\"><a href=\"/team.html\" class=\"nav-list-link\">Development Team</a></li><li class=\"nav-list-item\"><a href=\"/SECURITY.html\" class=\"nav-list-link\">Security Policy</a></li><li class=\"nav-list-item\"><a href=\"/references.html\" class=\"nav-list-link\">References</a></li></ul> </nav> <span class=\"site-footer\">&copy; Copyright 2011, Materials Project</span> </div> <div class=\"main\" id=\"top\"> <div id=\"main-header\" class=\"main-header\"> <div class=\"search\" role=\"search\"> <div class=\"search-input-wrap\"> <input type=\"text\" id=\"search-input\" class=\"search-input\" tabindex=\"0\" placeholder=\"Search pymatgen\" aria-label=\"Search pymatgen\" autocomplete=\"off\"> <label for=\"search-input\" class=\"search-label\"><svg viewBox=\"0 0 24 24\" class=\"search-icon\"><use xlink:href=\"#svg-search\"></use></svg></label> </div> <div id=\"search-results\" class=\"search-results\"></div> </div> <nav aria-label=\"Auxiliary\" class=\"aux-nav\"> <ul class=\"aux-nav-list\"> <li class=\"aux-nav-list-item\"> <a href=\"/pymatgen\" class=\"site-button\" > API docs </a> </li> <li class=\"aux-nav-list-item\"> <a href=\"https://github.com/materialsproject/pymatgen\" class=\"site-button\" > GitHub </a> </li> <li class=\"aux-nav-list-item\"> <a href=\"https://github.com/materialsproject/pymatgen/issues\" class=\"site-button\" > Issues </a> </li> <li class=\"aux-nav-list-item\"> <a href=\"https://matsci.org/pymatgen\" class=\"site-button\" > Discourse </a> </li> <li class=\"aux-nav-list-item\"> <a href=\"https://materialsproject.org\" class=\"site-button\" > Materials Project </a> </li> </ul> </nav> </div> <div class=\"main-content-wrap\"> <div id=\"main-content\" class=\"main-content\"> <main> <h1 align=\"center\"> <img alt=\"pymatgen logo\" src=\"https://raw.githubusercontent.com/materialsproject/pymatgen/master/docs/assets/pymatgen.svg\" width=\"300px\" /> </h1> <p><a href=\"https://github.com/materialsproject/pymatgen/actions/workflows/test.yml\"><img src=\"https://github.com/materialsproject/pymatgen/actions/workflows/test.yml/badge.svg\" alt=\"CI Status\" /></a> <a href=\"https://codecov.io/gh/materialsproject/pymatgen\"><img src=\"https://codecov.io/gh/materialsproject/pymatgen/branch/master/graph/badge.svg?token=XC47Un1LV2\" alt=\"codecov\" /></a> <a href=\"https://pypi.org/project/pymatgen\"><img src=\"https://img.shields.io/pypi/dm/pymatgen?logo=pypi&amp;logoColor=white&amp;color=blue&amp;label=PyPI\" alt=\"PyPI Downloads\" /></a> <a href=\"https://anaconda.org/conda-forge/pymatgen\"><img src=\"https://img.shields.io/conda/dn/conda-forge/pymatgen?logo=condaforge&amp;color=blue&amp;label=Conda\" alt=\"Conda Downloads\" /></a> <a href=\"https://python.org/downloads\"><img src=\"https://img.shields.io/badge/Python-3.9+-blue.svg?logo=python&amp;logoColor=white\" alt=\"Requires Python 3.9+\" /></a> <a href=\"https://doi.org/10.1016/j.commatsci.2012.10.028\"><img src=\"https://img.shields.io/badge/J.ComMatSci-2012.10.028-blue?logo=elsevier&amp;logoColor=white\" alt=\"Paper\" /></a></p> <p>Pymatgen (Python Materials Genomics) is a robust, open-source Python library for materials analysis. These are some of the main features:</p> <ol> <li>Highly flexible classes for the representation of Element, Site, Molecule, Structure objects.</li> <li>Extensive input/output support, including support for <a href=\"http://cms.mpi.univie.ac.at/vasp/\">VASP</a>, <a href=\"http://www.abinit.org/\">ABINIT</a>, CIF, Gaussian, XYZ, and many other file formats.</li> <li>Powerful analysis tools, including generation of phase diagrams, Pourbaix diagrams, diffusion analyses, reactions, etc.</li> <li>Electronic structure analyses, such as density of states and band structure.</li> <li>Integration with the Materials Project REST API, Crystallography Open Database and other external data sources.</li> </ol> <p>As of 2022, pymatgen only supports Python 3.9 and above. Our support schedule follows closely that of the Scientific Python software stack, i.e., when packages such as numpy drops support for Python versions, we will drop support for newer versions. Similarly, support for new Python versions will be adopted only when most of the core dependencies support the new Python versions.</p> <p>Pymatgen is free to use. However, we also welcome your help to improve this library by making your own contributions. These contributions can be in the form of additional tools or modules you develop, or feature requests and bug reports. The following are resources for pymatgen:</p> <ul> <li><a href=\"https://pymatgen.org\">Official documentation</a></li> <li>Bug reports or feature requests: Please submit an issue on <a href=\"https://github.com/materialsproject/pymatgen/issues\">Github Issues</a>.</li> <li>Code contributions via pull requests are welcome.</li> <li>For questions that are not bugs or feature requests, please use the <a href=\"https://matsci.org/pymatgen\">pymatgen MatSci forum</a> or open a <a href=\"https://github.com/materialsproject/pymatgen/discussions\">GitHub discussion</a>.</li> <li><a href=\"https://matgenb.materialsvirtuallab.org/\">matgenb</a> provides some example Jupyter notebooks that demonstrate how to use pymatgen functionality.</li> <li>Follow us on <a href=\"https://twitter.com/pymatgen\">Twitter</a> to get news and tips.</li> </ul> <h2 id=\"why-use-pymatgen\"> <a href=\"#why-use-pymatgen\" class=\"anchor-heading\" aria-labelledby=\"why-use-pymatgen\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Why use pymatgen? </h2> <ol> <li><strong>It is (fairly) robust.</strong> Pymatgen is used by thousands of researchers and is the analysis code powering the <a href=\"https://materialsproject.org\">Materials Project</a>. The analysis it produces survives rigorous scrutiny every single day. Bugs tend to be found and corrected quickly. Pymatgen also uses Github Actions for continuous integration, which ensures that every new code passes a comprehensive suite of unit tests.</li> <li><strong>It is well documented.</strong> A fairly comprehensive documentation has been written to help you get to grips with it quickly.</li> <li><strong>It is open.</strong> You are free to use and contribute to pymatgen. It also means that pymatgen is continuously being improved. We will attribute any code you contribute to any publication you specify. Contributing to pymatgen means your research becomes more visible, which translates to greater impact.</li> <li><strong>It is fast.</strong> Many of the core numerical methods in pymatgen have been optimized by vectorizing in <code class=\"language-plaintext highlighter-rouge\">numpy</code>/<code class=\"language-plaintext highlighter-rouge\">scipy</code>. This means that coordinate manipulations are fast. Pymatgen also comes with a complete system for handling periodic boundary conditions.</li> <li><strong>It will be around.</strong> Pymatgen is not a pet research project. It is used in the well-established Materials Project. It is also actively being developed and maintained by the <a href=\"http://materialsvirtuallab.org\">Materials Virtual Lab</a>, the ABINIT group and many other research groups.</li> <li> <p><strong>A growing ecosystem of developers and add-ons</strong>. Pymatgen has contributions from materials scientists all over the world. We also now have an architecture to support add-ons that expand pymatgen\u2019s functionality even further. Check out the <a href=\"/contributing\">contributing page</a> and <a href=\"/addons\">add-ons page</a> for details and examples.</p> <p><em>The code is mightier than the pen.</em></p> </li> </ol> <h2 id=\"matgenie--examples\"> <a href=\"#matgenie--examples\" class=\"anchor-heading\" aria-labelledby=\"matgenie--examples\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Matgenie &amp; Examples </h2> <p>The <a href=\"http://materialsvirtuallab.org\">Materials Virtual Lab</a> has created a <a href=\"https://matgenb.materialsvirtuallab.org/\">matgenb</a> repository of Jupyter notebooks for common and advanced use cases. One of the ways you can contribute is to fork the matgenb repo and add your own examples.</p> <p>Below are a quick look at some of the graphical output possible.</p> <p><img src=\"/assets/phase_diagram.png\" alt=\"Examples\" /> <em>Top: (left) Phase and (right) Pourbaix diagram from the Materials API. Bottom left: Calculated bandstructure plot using pymatgen\u2019s parsing and plotting utilities. Bottom right: Arrhenius plot using pymatgen\u2019s DiffusionAnalyzer.</em></p> <h2 id=\"getting-pymatgen\"> <a href=\"#getting-pymatgen\" class=\"anchor-heading\" aria-labelledby=\"getting-pymatgen\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Getting pymatgen </h2> <h3 id=\"conda-recommended\"> <a href=\"#conda-recommended\" class=\"anchor-heading\" aria-labelledby=\"conda-recommended\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Conda (recommended) </h3> <p>If you are absolutely new to Python and/or are using Windows, the easiest installation process is using <a href=\"http://conda.pydata.org\">conda</a>. If you already have conda installed, pymatgen can be installed from the <a href=\"https://anaconda.org/conda-forge\">conda-forge channel</a> using the following command:</p> <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>conda <span class=\"nb\">install</span> <span class=\"nt\">--channel</span> conda-forge pymatgen</code></pre></div></div> <p>Note that you might need to ensure a relatively recent version of gcc is available to compile pymatgen. You can use conda to get that::</p> <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>conda <span class=\"nb\">install </span>gcc</code></pre></div></div> <p>Pymatgen is under active development, and new features are added regularly. To upgrade pymatgen to the latest version, use the following command:</p> <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>conda upgrade pymatgen</code></pre></div></div> <p>Step-by-step instructions for all platforms are available at the <a href=\"/installation\">installation page</a>.</p> <h3 id=\"pip\"> <a href=\"#pip\" class=\"anchor-heading\" aria-labelledby=\"pip\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> pip </h3> <p>The version at the Python Package Index (PyPI) is always the latest stable release that is relatively bug-free. The easiest way to install pymatgen on any system is to use pip:</p> <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip <span class=\"nb\">install </span>pymatgen</code></pre></div></div> <p>Wheels for Mac and Windows have been built for convenience. Similarly, you might need to ensure you have a relatively recent version of gcc.</p> <p>To upgrade pymatgen via pip:</p> <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip <span class=\"nb\">install</span> <span class=\"nt\">--upgrade</span> pymatgen</code></pre></div></div> <p>The bleeding edge developmental version is at the pymatgen <a href=\"https://github.com/materialsproject/pymatgen/\">Github repo</a>. The developmental version is likely to be more buggy, but may contain new features. The Github version include complete test files. After cloning the source, you can type in the root of the repo:</p> <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip <span class=\"nb\">install</span> <span class=\"nb\">.</span></code></pre></div></div> <p>or to install the package in developmental mode:</p> <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip <span class=\"nb\">install</span> <span class=\"nt\">-e</span> <span class=\"nb\">.</span></code></pre></div></div> <p>Detailed installation instructions, including installation of optional dependencies, set up for POTCAR generation, Materials Project REST interface usage, setup for developers, etc. are given on this <a href=\"/installation\">page</a>.</p> <p>For some extras, you can also install the optional dependencies using:</p> <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip <span class=\"nb\">install </span>pymatgen[extra]</code></pre></div></div> <p>For an always up-to-date list of extras, consult the <a href=\"https://github.com/materialsproject/pymatgen/blob/master/setup.py\">setup.py\u2019s extras_require</a>.</p> <h3 id=\"shared-cluster-installation\"> <a href=\"#shared-cluster-installation\" class=\"anchor-heading\" aria-labelledby=\"shared-cluster-installation\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Shared cluster installation </h3> <p>If you are installing pymatgen on shared computing clusters, e.g., the XSEDE or NERSC resources in the US, the best way is to use conda to perform a local install. This guarantees the right version of python and all dependencies:</p> <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.shbash Miniconda3-latest-Linux-x86_64.sh <span class=\"nt\">-b</span><span class=\"c\"># Reload bash profile.</span><span class=\"nb\">source</span> <span class=\"nv\">$HOME</span>/.bashrc<span class=\"nb\">source</span> <span class=\"nv\">$HOME</span>/.bash_profile<span class=\"c\"># Install numpy and other pydata stack packages via conda.</span>conda <span class=\"nb\">install</span> <span class=\"nt\">--yes</span> numpy scipy pandasconda <span class=\"nb\">install</span> <span class=\"nt\">--yes</span> <span class=\"nt\">--channel</span> conda-forge pymatgen</code></pre></div></div> <h2 id=\"usage\"> <a href=\"#usage\" class=\"anchor-heading\" aria-labelledby=\"usage\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Usage </h2> <p><img src=\"/assets/overview.jpg\" alt=\"pymatgen overview\" /> <em>Overview of a typical workflow for pymatgen.</em></p> <p>The figure above provides an overview of the functionality in pymatgen. A typical workflow would involve a user converting data (structure, calculations, etc.) from various sources (first principles calculations, crystal and molecule input files, Materials Project, etc.) into Python objects using pymatgen\u2019s io packages, which are then used to perform further structure manipulation or analyses.</p> <h3 id=\"quick-start\"> <a href=\"#quick-start\" class=\"anchor-heading\" aria-labelledby=\"quick-start\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Quick start </h3> <p>Here are some quick examples of the core capabilities and objects:</p> <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">pymatgen.core</span> <span class=\"k\">as</span> <span class=\"n\">pmg</span><span class=\"c1\"># Integrated symmetry analysis tools from spglib</span><span class=\"kn\">from</span> <span class=\"nn\">pymatgen.symmetry.analyzer</span> <span class=\"kn\">import</span> <span class=\"n\">SpacegroupAnalyzer</span><span class=\"n\">si</span> <span class=\"o\">=</span> <span class=\"n\">pmg</span><span class=\"p\">.</span><span class=\"n\">Element</span><span class=\"p\">(</span><span class=\"s\">\"Si\"</span><span class=\"p\">)</span><span class=\"n\">si</span><span class=\"p\">.</span><span class=\"n\">atomic_mass</span>  <span class=\"c1\"># 28.0855</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">si</span><span class=\"p\">.</span><span class=\"n\">melting_point</span><span class=\"p\">)</span><span class=\"c1\"># 1687.0 K</span><span class=\"n\">comp</span> <span class=\"o\">=</span> <span class=\"n\">pmg</span><span class=\"p\">.</span><span class=\"n\">Composition</span><span class=\"p\">(</span><span class=\"s\">\"Fe2O3\"</span><span class=\"p\">)</span><span class=\"n\">comp</span><span class=\"p\">.</span><span class=\"n\">weight</span>  <span class=\"c1\"># 159.6882# Note that Composition conveniently allows strings to be treated just like an Element object.</span><span class=\"n\">comp</span><span class=\"p\">[</span><span class=\"s\">\"Fe\"</span><span class=\"p\">]</span>  <span class=\"c1\"># 2.0</span><span class=\"n\">comp</span><span class=\"p\">.</span><span class=\"n\">get_atomic_fraction</span><span class=\"p\">(</span><span class=\"s\">\"Fe\"</span><span class=\"p\">)</span>  <span class=\"c1\"># 0.4</span><span class=\"n\">lattice</span> <span class=\"o\">=</span> <span class=\"n\">pmg</span><span class=\"p\">.</span><span class=\"n\">Lattice</span><span class=\"p\">.</span><span class=\"n\">cubic</span><span class=\"p\">(</span><span class=\"mf\">4.2</span><span class=\"p\">)</span><span class=\"n\">structure</span> <span class=\"o\">=</span> <span class=\"n\">pmg</span><span class=\"p\">.</span><span class=\"n\">Structure</span><span class=\"p\">(</span><span class=\"n\">lattice</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s\">\"Cs\"</span><span class=\"p\">,</span> <span class=\"s\">\"Cl\"</span><span class=\"p\">],</span> <span class=\"p\">...[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">]])</span><span class=\"c1\"># structure.volume# 74.088000000000008# structure[0]# PeriodicSite: Cs (0.0000, 0.0000, 0.0000) [0.0000, 0.0000, 0.0000]</span><span class=\"c1\"># You can create a Structure using spacegroup symmetry as well.</span><span class=\"n\">li2o</span> <span class=\"o\">=</span> <span class=\"n\">pmg</span><span class=\"p\">.</span><span class=\"n\">Structure</span><span class=\"p\">.</span><span class=\"n\">from_spacegroup</span><span class=\"p\">(</span>    <span class=\"s\">\"Fm-3m\"</span><span class=\"p\">,</span> <span class=\"n\">pmg</span><span class=\"p\">.</span><span class=\"n\">Lattice</span><span class=\"p\">.</span><span class=\"n\">cubic</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"s\">\"Li\"</span><span class=\"p\">,</span> <span class=\"s\">\"O\"</span><span class=\"p\">],</span> <span class=\"p\">[[</span><span class=\"mf\">0.25</span><span class=\"p\">,</span> <span class=\"mf\">0.25</span><span class=\"p\">,</span> <span class=\"mf\">0.25</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]</span><span class=\"p\">)</span><span class=\"n\">finder</span> <span class=\"o\">=</span> <span class=\"n\">SpacegroupAnalyzer</span><span class=\"p\">(</span><span class=\"n\">structure</span><span class=\"p\">)</span><span class=\"n\">finder</span><span class=\"p\">.</span><span class=\"n\">get_space_group_symbol</span><span class=\"p\">()</span><span class=\"s\">\"Pm-3m\"</span><span class=\"c1\"># Convenient IO to various formats. You can specify various formats.# Without a filename, a string is returned. Otherwise,# the output is written to the file. If only the filename is provided,# the format is intelligently determined from a file.</span><span class=\"n\">structure</span><span class=\"p\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">fmt</span><span class=\"o\">=</span><span class=\"s\">\"poscar\"</span><span class=\"p\">)</span><span class=\"n\">structure</span><span class=\"p\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">\"POSCAR\"</span><span class=\"p\">)</span><span class=\"n\">structure</span><span class=\"p\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s\">\"CsCl.cif\"</span><span class=\"p\">)</span><span class=\"c1\"># Reading a structure is similarly easy.</span><span class=\"n\">structure</span> <span class=\"o\">=</span> <span class=\"n\">pmg</span><span class=\"p\">.</span><span class=\"n\">Structure</span><span class=\"p\">.</span><span class=\"n\">from_str</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">\"CsCl.cif\"</span><span class=\"p\">).</span><span class=\"n\">read</span><span class=\"p\">(),</span> <span class=\"n\">fmt</span><span class=\"o\">=</span><span class=\"s\">\"cif\"</span><span class=\"p\">)</span><span class=\"n\">structure</span> <span class=\"o\">=</span> <span class=\"n\">pmg</span><span class=\"p\">.</span><span class=\"n\">Structure</span><span class=\"p\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"s\">\"CsCl.cif\"</span><span class=\"p\">)</span><span class=\"c1\"># Reading and writing a molecule from a file. Supports XYZ and# Gaussian input and output by default. Support for many other# formats via the optional openbabel dependency (if installed).</span><span class=\"n\">methane</span> <span class=\"o\">=</span> <span class=\"n\">pmg</span><span class=\"p\">.</span><span class=\"n\">Molecule</span><span class=\"p\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"s\">\"methane.xyz\"</span><span class=\"p\">)</span><span class=\"n\">methane</span><span class=\"p\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"s\">\"methane.gjf\"</span><span class=\"p\">)</span><span class=\"c1\"># Pythonic API for editing Structures and Molecules (v2.9.1 onwards)# Changing the specie of a site.</span><span class=\"n\">structure</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">\"F\"</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">structure</span><span class=\"p\">)</span><span class=\"c1\"># Structure Summary (Cs1 F1)# Reduced Formula: CsF# abc   :   4.200000   4.200000   4.200000# angles:  90.000000  90.000000  90.000000# Sites (2)# 1 Cs     0.000000     0.000000     0.000000# 2 F     0.500000     0.500000     0.500000</span><span class=\"c1\"># Changes species and coordinates (fractional assumed for structures)</span><span class=\"n\">structure</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">\"Cl\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mf\">0.51</span><span class=\"p\">,</span> <span class=\"mf\">0.51</span><span class=\"p\">,</span> <span class=\"mf\">0.51</span><span class=\"p\">]</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">structure</span><span class=\"p\">)</span><span class=\"c1\"># Structure Summary (Cs1 Cl1)# Reduced Formula: CsCl# abc   :   4.200000   4.200000   4.200000# angles:  90.000000  90.000000  90.000000# Sites (2)# 1 Cs     0.000000     0.000000     0.000000# 2 Cl     0.510000     0.510000     0.510000</span><span class=\"c1\"># Replaces all Cs in the structure with K</span><span class=\"n\">structure</span><span class=\"p\">[</span><span class=\"s\">\"Cs\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">\"K\"</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">structure</span><span class=\"p\">)</span><span class=\"c1\"># Structure Summary (K1 Cl1)# Reduced Formula: KCl# abc   :   4.200000   4.200000   4.200000# angles:  90.000000  90.000000  90.000000# Sites (2)# 1 K     0.000000     0.000000     0.000000# 2 Cl     0.510000     0.510000     0.510000</span><span class=\"c1\"># Replaces all K in the structure with K: 0.5, Na: 0.5, i.e.,# a disordered structure is created.</span><span class=\"n\">structure</span><span class=\"p\">[</span><span class=\"s\">\"K\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">\"K0.5Na0.5\"</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">structure</span><span class=\"p\">)</span><span class=\"c1\"># Full Formula (K0.5 Na0.5 Cl1)# Reduced Formula: K0.5Na0.5Cl1# abc   :   4.209000   4.209000   4.209000# angles:  90.000000  90.000000  90.000000# Sites (2)#   #  SP                   a    b    c# ---  -----------------  ---  ---  ---#   0  K:0.500, Na:0.500  0    0    0#   1  Cl                 0.5  0.5  0.5</span><span class=\"c1\"># Because structure is like a list, it supports most list-like methods# such as sort, reverse, etc.</span><span class=\"n\">structure</span><span class=\"p\">.</span><span class=\"n\">reverse</span><span class=\"p\">()</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">structure</span><span class=\"p\">)</span><span class=\"c1\"># Structure Summary (Cs1 Cl1)# Reduced Formula: CsCl# abc   :   4.200000   4.200000   4.200000# angles:  90.000000  90.000000  90.000000# Sites (2)# 1 Cl     0.510000     0.510000     0.510000# 2 Cs     0.000000     0.000000     0.000000</span><span class=\"c1\"># Molecules function similarly, but with Site and Cartesian coords.# The following changes the C in CH4 to an N and displaces it by 0.01A# in the x-direction.</span><span class=\"n\">methane</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">\"N\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span></code></pre></div></div> <p>The above illustrates only the most basic capabilities of pymatgen. Users are strongly encouraged to explore the <a href=\"/usage\">usage pages</a>.</p> <h3 id=\"api-documentation\"> <a href=\"#api-documentation\" class=\"anchor-heading\" aria-labelledby=\"api-documentation\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> API documentation </h3> <p>For detailed documentation of all modules and classes, please refer to the <a href=\"/pymatgen\">API docs</a>.</p> <h3 id=\"more-resources\"> <a href=\"#more-resources\" class=\"anchor-heading\" aria-labelledby=\"more-resources\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> More resources </h3> <p>The founder and maintainer of pymatgen, Shyue Ping Ong, has conducted several workshops (together with Anubhav Jain) on how to effectively use pymatgen (as well as the extremely useful <a href=\"https://pypi.python.org/pypi/custodian\">custodian</a> error management and <a href=\"https://materialsproject.github.io/fireworks\">FireWorks</a> workflow software. The slides for these workshops are available on the <a href=\"http://materialsvirtuallab.org\">Materials Virtual Lab</a>.</p> <h3 id=\"pmg-command-line-interface\"> <a href=\"#pmg-command-line-interface\" class=\"anchor-heading\" aria-labelledby=\"pmg-command-line-interface\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> <code class=\"language-plaintext highlighter-rouge\">pmg</code> command line interface </h3> <p>To demonstrate the capabilities of pymatgen and to make it easy for users to quickly use the functionality, pymatgen comes with a set of useful scripts that utilize the library to perform all kinds of analyses. These are installed to your path by default when you install pymatgen through the typical installation routes.</p> <p>Here, we will discuss the most versatile of these scripts, known as pmg. The typical usage of pmg is:</p> <div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pmg <span class=\"o\">{</span>setup, config, analyze, plotdos, plotchgint, convert, symm, view, compare<span class=\"o\">}</span> additional_arguments</code></pre></div></div> <p>At any time, you can use <code class=\"language-plaintext highlighter-rouge\">pmg --help</code> or <code class=\"language-plaintext highlighter-rouge\">pmg subcommand --help</code> to bring up a useful help message on how to use these subcommands. Here are a few examples of typical usages:</p> <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># Parses all vasp runs in a directory and display the basic energy</span><span class=\"c\"># information. Saves the data in a file called vasp_data.gz for subsequent</span><span class=\"c\"># reuse.</span>pmg analyze <span class=\"nb\">.</span><span class=\"c\"># Plot the dos from the vasprun.xml file.</span>pmg plot <span class=\"nt\">--dos</span> vasprun.xml<span class=\"c\"># Convert between file formats. The script attempts to intelligently</span><span class=\"c\"># determine the file type. Input file types supported include CIF,</span><span class=\"c\"># vasprun.xml, POSCAR, CSSR. You can force the script to assume certain file</span><span class=\"c\"># types by specifying additional arguments. See pmg convert -h.</span>pmg structure <span class=\"nt\">--convert</span> <span class=\"nt\">--filenames</span> input_filename output_filename.<span class=\"c\"># Obtain spacegroup information using a tolerance of 0.1 angstroms.</span>pmg structure <span class=\"nt\">--symmetry</span> 0.1 <span class=\"nt\">--filenames</span> filename1 filename2<span class=\"c\"># Visualize a structure. Requires VTK to be installed.</span>pmg view filename<span class=\"c\"># Compare two structures for similarity</span>pmg structure <span class=\"nt\">--group</span> element <span class=\"nt\">--filenames</span> filename1 filename2<span class=\"c\"># Generate a POTCAR with symbols Li_sv O and the PBE functional</span>pmg potcar <span class=\"nt\">--symbols</span> Li_sv O <span class=\"nt\">--functional</span> PBE</code></pre></div></div> <h3 id=\"add-ons\"> <a href=\"#add-ons\" class=\"anchor-heading\" aria-labelledby=\"add-ons\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Add-ons </h3> <p>Some add-ons are available for pymatgen today:</p> <ol> <li>The <a href=\"https://pypi.python.org/pypi/pymatgen-db\">pymatgen-db</a> add-on provides tools to create databases of calculated run data using pymatgen.</li> <li>The <a href=\"https://pypi.python.org/pypi/custodian\">custodian</a> package provides a JIT job management and error correction for calculations and is used by the Materials Project for high-throughput calculations.</li> <li><a href=\"http://pypi.org/project/pymatgen-analysis-diffusion/\">pymatgen-analysis-diffusion</a> by the <a href=\"http://materialsvirtuallab.org\">Materials Virtual Lab</a> provides modules for diffusion analysis, including path determination for NEB calculations, analysis of MD trajectories (RDF, van Hove, Arrhenius plots, etc.)</li> </ol> <p>A comprehensive listing is provided at the <a href=\"/addons\">addons page</a>.</p> <h2 id=\"contributing\"> <a href=\"#contributing\" class=\"anchor-heading\" aria-labelledby=\"contributing\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Contributing </h2> <p>Pymatgen is developed by a team of volunteers. It is started by a team comprising of MIT and Lawrence Berkeley National Laboratory staff to be a robust toolkit for materials researchers to perform advanced manipulations of structures and analyses.</p> <p>For pymatgen to continue to grow in functionality and robustness, we rely on other volunteers to develop new analyses and report and fix bugs. We welcome anyone to use our code as-is, but if you could take a few moment to give back to pymatgen in some small way, it would be greatly appreciated. A benefit of contributing is that your code will now be used by other researchers who use pymatgen, and we will include an acknowledgement to you (and any related publications) in pymatgen.</p> <h3 id=\"reporting-bugs\"> <a href=\"#reporting-bugs\" class=\"anchor-heading\" aria-labelledby=\"reporting-bugs\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Reporting bugs </h3> <p>A simple way that anyone can contribute is simply to report bugs and issues to the developing team. Please report any bugs and issues at pymatgen\u2019s <a href=\"https://github.com/materialsproject/pymatgen/issues\">Github Issues</a>. For help with any pymatgen issue, consult <a href=\"https://stackoverflow.com/questions/tagged/pymatgen\">Stack Overflow</a> and if you cannot find an answer, please post a question on the <a href=\"https://matsci.org/pymatgen\">pymatgen MatSci forum</a>.</p> <h3 id=\"developing-new-functionality\"> <a href=\"#developing-new-functionality\" class=\"anchor-heading\" aria-labelledby=\"developing-new-functionality\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Developing new functionality </h3> <p>Another way to contribute is to submit new code/bugfixes to pymatgen. The best way for anyone to develop pymatgen is by adopting the collaborative Github workflow (see <a href=\"/contributing\">contributing page</a>.</p> <h2 id=\"citing-pymatgen\"> <a href=\"#citing-pymatgen\" class=\"anchor-heading\" aria-labelledby=\"citing-pymatgen\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Citing pymatgen </h2> <p>If you use pymatgen in your research, please consider citing the following work:</p><pre><code class=\"language-txt\">Shyue Ping Ong, William Davidson Richards, Anubhav Jain, Geoffroy Hautier,Michael Kocher, Shreyas Cholia, Dan Gunter, Vincent Chevrier, Kristin A.Persson, Gerbrand Ceder. *Python Materials Genomics (pymatgen) : A Robust,Open-Source Python Library for Materials Analysis.* Computational MaterialsScience, 2013, 68, 314\u2013319. https://doi.org/10.1016/j.commatsci.2012.10.028</code></pre><p>In addition, some of pymatgen\u2019s functionality is based on scientific advances / principles developed by various scientists. Please refer to the <a href=\"/references\">references page</a> for citation info.</p> <h3 id=\"soliciting-contributions-to-an-updated-pymatgen-paper\"> <a href=\"#soliciting-contributions-to-an-updated-pymatgen-paper\" class=\"anchor-heading\" aria-labelledby=\"soliciting-contributions-to-an-updated-pymatgen-paper\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Soliciting contributions to an updated pymatgen paper </h3> <p>If you are a long-standing <code class=\"language-plaintext highlighter-rouge\">pymatgen</code> contributor and would like to be involved in working on an updated <code class=\"language-plaintext highlighter-rouge\">pymatgen</code> publication, please contact the maintainers <a href=\"mailto:ongsp@ucsd.edu,m.k.horton@gmail.com,janosh@lbl.gov?subject=Contributing%20to%20updated%20pymatgen%20paper\">@shyuep, @mkhorton and @janosh</a>.</p> <h2 id=\"license\"> <a href=\"#license\" class=\"anchor-heading\" aria-labelledby=\"license\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> License </h2> <p>Pymatgen is released under the MIT License.</p> <h2 id=\"team\"> <a href=\"#team\" class=\"anchor-heading\" aria-labelledby=\"team\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Team </h2> <p>Shyue Ping Ong of the <a href=\"http://materialsvirtuallab.org\">Materials Virtual Lab</a> started Pymatgen in 2011, and is still the project lead.</p> <p>The Pymatgen Development Team is the set of all contributors to the pymatgen project, including all subprojects.</p> <p>The full list of contributors are listed in the <a href=\"/team\">team page</a>.</p> <h2 id=\"copyright-policy\"> <a href=\"#copyright-policy\" class=\"anchor-heading\" aria-labelledby=\"copyright-policy\"><svg viewBox=\"0 0 16 16\" aria-hidden=\"true\"><use xlink:href=\"#svg-link\"></use></svg></a> Copyright Policy </h2> <p>Pymatgen uses a shared copyright model. Each contributor maintains copyright over their contributions to pymatgen. But, it is important to note that these contributions are typically only changes to the repositories. Thus, the pymatgen source code, in its entirety is not the copyright of any single person or institution. Instead, it is the collective copyright of the entire pymatgen Development Team. If individual contributors want to maintain a record of what changes/contributions they have specific copyright on, they should indicate their copyright in the commit message of the change, when they commit the change to one of the pymatgen repositories.</p> </main> <hr> <footer> <small>&copy; Copyright 2011, Materials Project</small> </footer> </div> </div> <div class=\"search-overlay\"></div> </div> </body> </html>",
  "embeddings": []
}
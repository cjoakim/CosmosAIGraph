{
  "libtype": "pypi",
  "libname": "flask-pymongo",
  "url": "http://flask-pymongo.readthedocs.org/",
  "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\">  <head>    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" />    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />    <title>Flask-PyMongo &#8212; Flask-PyMongo 2.3.0 documentation</title>    <link rel=\"stylesheet\" href=\"_static/flasky.css\" type=\"text/css\" />    <link rel=\"stylesheet\" href=\"_static/pygments.css\" type=\"text/css\" />    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://assets.readthedocs.org/static/css/badge_only.css\" />    <script type=\"text/javascript\" id=\"documentation_options\" data-url_root=\"./\" src=\"_static/documentation_options.js\"></script>    <script type=\"text/javascript\" src=\"_static/jquery.js\"></script>    <script type=\"text/javascript\" src=\"_static/underscore.js\"></script>    <script type=\"text/javascript\" src=\"_static/doctools.js\"></script>    <script type=\"text/javascript\" src=\"_static/language_data.js\"></script>    <script type=\"text/javascript\" src=\"https://assets.readthedocs.org/static/javascript/readthedocs-doc-embed.js\"></script>    <link rel=\"index\" title=\"Index\" href=\"genindex.html\" />    <link rel=\"search\" title=\"Search\" href=\"search.html\" />   <!-- RTD Extra Head --><!-- Always link to the latest version, as canonical.http://docs.readthedocs.org/en/latest/canonical.html--><link rel=\"canonical\" href=\"https://flask-pymongo.readthedocs.io/en/latest/\" /><link rel=\"stylesheet\" href=\"https://assets.readthedocs.org/static/css/readthedocs-doc-embed.css\" type=\"text/css\" /><script type=\"text/javascript\" src=\"_static/readthedocs-data.js\"></script><!-- Add page-specific data, which must exist in the page js, not global --><script type=\"text/javascript\">READTHEDOCS_DATA['page'] = 'index'READTHEDOCS_DATA['source_suffix'] = '.rst'</script><script type=\"text/javascript\" src=\"https://assets.readthedocs.org/static/javascript/readthedocs-analytics.js\"></script><!-- end RTD <extrahead> --></head><body>      <div class=indexwrapper>      <div class=\"document\">      <div class=\"documentwrapper\">        <div class=\"bodywrapper\">          <div class=\"body\" role=\"main\">              <div class=\"section\" id=\"flask-pymongo\"><h1>Flask-PyMongo<a class=\"headerlink\" href=\"#flask-pymongo\" title=\"Permalink to this headline\">\u00b6</a></h1><p><a class=\"reference external\" href=\"http://www.mongodb.org/\">MongoDB</a> is an open source database that storesflexible JSON-like \u201cdocuments,\u201d which can have any number, name, orhierarchy of fields within, instead of rows of data as in a relationaldatabase. Python developers can think of MongoDB as a persistent, searchablerepository of Python dictionaries (and, in fact, this is how <a class=\"reference external\" href=\"http://api.mongodb.org/python/current/\">PyMongo</a> represents MongoDB documents).</p><p>Flask-PyMongo bridges Flask and PyMongo and provides some conveniencehelpers.</p><div class=\"section\" id=\"quickstart\"><h2>Quickstart<a class=\"headerlink\" href=\"#quickstart\" title=\"Permalink to this headline\">\u00b6</a></h2><p>First, install Flask-PyMongo:</p><div class=\"highlight-bash notranslate\"><div class=\"highlight\"><pre><span></span>$ pip install Flask-PyMongo</pre></div></div><p>Next, add a <a class=\"reference internal\" href=\"#flask_pymongo.PyMongo\" title=\"flask_pymongo.PyMongo\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PyMongo</span></code></a> to your code:</p><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span><span class=\"kn\">from</span> <span class=\"nn\">flask_pymongo</span> <span class=\"kn\">import</span> <span class=\"n\">PyMongo</span><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;MONGO_URI&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;mongodb://localhost:27017/myDatabase&quot;</span><span class=\"n\">mongo</span> <span class=\"o\">=</span> <span class=\"n\">PyMongo</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span></pre></div></div><p><a class=\"reference internal\" href=\"#flask_pymongo.PyMongo\" title=\"flask_pymongo.PyMongo\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PyMongo</span></code></a> connects to the MongoDB server running onport 27017 on localhost, to the database named <code class=\"docutils literal notranslate\"><span class=\"pre\">myDatabase</span></code>. This databaseis exposed as the <a class=\"reference internal\" href=\"#flask_pymongo.PyMongo.db\" title=\"flask_pymongo.PyMongo.db\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">db</span></code></a> attribute.</p><p>You can use <a class=\"reference internal\" href=\"#flask_pymongo.PyMongo.db\" title=\"flask_pymongo.PyMongo.db\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">db</span></code></a> directly in views:</p><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@app.route</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)</span><span class=\"k\">def</span> <span class=\"nf\">home_page</span><span class=\"p\">():</span>    <span class=\"n\">online_users</span> <span class=\"o\">=</span> <span class=\"n\">mongo</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">({</span><span class=\"s2\">&quot;online&quot;</span><span class=\"p\">:</span> <span class=\"bp\">True</span><span class=\"p\">})</span>    <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s2\">&quot;index.html&quot;</span><span class=\"p\">,</span>        <span class=\"n\">online_users</span><span class=\"o\">=</span><span class=\"n\">online_users</span><span class=\"p\">)</span></pre></div></div><div class=\"admonition note\"><p class=\"first admonition-title\">Note</p><p class=\"last\">Previous versions of Flask-PyMongo required that the MongoDB URIcontained a database name; as of 2.2, this requirement is lifted. Ifthere is no database name, the <a class=\"reference internal\" href=\"#flask_pymongo.PyMongo.db\" title=\"flask_pymongo.PyMongo.db\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">db</span></code></a>attribute will be <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p></div></div><div class=\"section\" id=\"compatibility\"><h2>Compatibility<a class=\"headerlink\" href=\"#compatibility\" title=\"Permalink to this headline\">\u00b6</a></h2><p>Flask-PyMongo depends on recent versions of Flask and PyMongo, where \u201crecent\u201dis defined to mean \u201cwas released in the last 3 years\u201d. Flask-PyMongo <em>may</em>work with older versions, but compatibility fixes for older versions willnot be accepted, and future changes may break compatibility in olderversions.</p><p>Flask-PyMongo is tested against <a class=\"reference external\" href=\"https://www.mongodb.com/support-policy\">supported versions</a> of MongoDB, and Python 2.7and 3.4+. For the exact list of version combinations that are tested andknown to be compatible, see the <cite>envlist</cite> in <a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/blob/master/tox.ini\">tox.ini</a>.</p></div><div class=\"section\" id=\"helpers\"><h2>Helpers<a class=\"headerlink\" href=\"#helpers\" title=\"Permalink to this headline\">\u00b6</a></h2><p>Flask-PyMongo provides helpers for some common tasks:</p><dl class=\"method\"><dt id=\"flask_pymongo.wrappers.Collection.find_one_or_404\"><code class=\"descclassname\">Collection.</code><code class=\"descname\">find_one_or_404</code><span class=\"sig-paren\">(</span><em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#flask_pymongo.wrappers.Collection.find_one_or_404\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Find a single document or raise a 404.</p><p>This is like <a class=\"reference external\" href=\"http://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection.find_one\" title=\"(in PyMongo v3.8.0)\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">find_one()</span></code></a>, butrather than returning <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, cause a 404 Not Found HTTP statuson the request.</p><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@app.route</span><span class=\"p\">(</span><span class=\"s2\">&quot;/user/&lt;username&gt;&quot;</span><span class=\"p\">)</span><span class=\"k\">def</span> <span class=\"nf\">user_profile</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">):</span>    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">mongo</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">find_one_or_404</span><span class=\"p\">({</span><span class=\"s2\">&quot;_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">username</span><span class=\"p\">})</span>    <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s2\">&quot;user.html&quot;</span><span class=\"p\">,</span>        <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"p\">)</span></pre></div></div></dd></dl><dl class=\"method\"><dt id=\"flask_pymongo.PyMongo.send_file\"><code class=\"descclassname\">PyMongo.</code><code class=\"descname\">send_file</code><span class=\"sig-paren\">(</span><em>filename</em>, <em>base='fs'</em>, <em>version=-1</em>, <em>cache_for=31536000</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#flask_pymongo.PyMongo.send_file\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Respond with a file from GridFS.</p><p>Returns an instance of the <a class=\"reference external\" href=\"http://flask.pocoo.org/docs/api/#flask.Flask.response_class\" title=\"(in Flask v1.1)\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">response_class</span></code></a>containing the named file, and implement conditional GET semantics(using <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">make_conditional()</span></code>).</p><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@app.route</span><span class=\"p\">(</span><span class=\"s2\">&quot;/uploads/&lt;path:filename&gt;&quot;</span><span class=\"p\">)</span><span class=\"k\">def</span> <span class=\"nf\">get_upload</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">):</span>    <span class=\"k\">return</span> <span class=\"n\">mongo</span><span class=\"o\">.</span><span class=\"n\">send_file</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span></pre></div></div><table class=\"docutils field-list\" frame=\"void\" rules=\"none\"><col class=\"field-name\" /><col class=\"field-body\" /><tbody valign=\"top\"><tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\"><li><strong>filename</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.7)\"><em>str</em></a>) \u2013 the filename of the file to return</li><li><strong>base</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.7)\"><em>str</em></a>) \u2013 the base name of the GridFS collections to use</li><li><strong>version</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.7)\"><em>bool</em></a>) \u2013 if positive, return the Nth revision of the fileidentified by filename; if negative, return the Nth most recentrevision. If no such version exists, return with HTTP status 404.</li><li><strong>cache_for</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.7)\"><em>int</em></a>) \u2013 number of seconds that browsers should beinstructed to cache responses</li></ul></td></tr></tbody></table></dd></dl><dl class=\"method\"><dt id=\"flask_pymongo.PyMongo.save_file\"><code class=\"descclassname\">PyMongo.</code><code class=\"descname\">save_file</code><span class=\"sig-paren\">(</span><em>filename</em>, <em>fileobj</em>, <em>base='fs'</em>, <em>content_type=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#flask_pymongo.PyMongo.save_file\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Save a file-like object to GridFS using the given filename.</p><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@app.route</span><span class=\"p\">(</span><span class=\"s2\">&quot;/uploads/&lt;path:filename&gt;&quot;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;POST&quot;</span><span class=\"p\">])</span><span class=\"k\">def</span> <span class=\"nf\">save_upload</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">):</span>    <span class=\"n\">mongo</span><span class=\"o\">.</span><span class=\"n\">save_file</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">[</span><span class=\"s2\">&quot;file&quot;</span><span class=\"p\">])</span>    <span class=\"k\">return</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"n\">url_for</span><span class=\"p\">(</span><span class=\"s2\">&quot;get_upload&quot;</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"n\">filename</span><span class=\"p\">))</span></pre></div></div><table class=\"docutils field-list\" frame=\"void\" rules=\"none\"><col class=\"field-name\" /><col class=\"field-body\" /><tbody valign=\"top\"><tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\"><li><strong>filename</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.7)\"><em>str</em></a>) \u2013 the filename of the file to return</li><li><strong>fileobj</strong> (<em>file</em>) \u2013 the file-like object to save</li><li><strong>base</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.7)\"><em>str</em></a>) \u2013 base the base name of the GridFS collections to use</li><li><strong>content_type</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.7)\"><em>str</em></a>) \u2013 the MIME content-type of the file. If<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, the content-type is guessed from the filename using<a class=\"reference external\" href=\"https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_type\" title=\"(in Python v3.7)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">guess_type()</span></code></a></li><li><strong>kwargs</strong> \u2013 extra attributes to be stored in the file\u2019s document,passed directly to <a class=\"reference external\" href=\"http://api.mongodb.com/python/current/api/gridfs/index.html#gridfs.GridFS.put\" title=\"(in PyMongo v3.8.0)\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">gridfs.GridFS.put()</span></code></a></li></ul></td></tr></tbody></table></dd></dl><dl class=\"class\"><dt id=\"flask_pymongo.BSONObjectIdConverter\"><em class=\"property\">class </em><code class=\"descclassname\">flask_pymongo.</code><code class=\"descname\">BSONObjectIdConverter</code><span class=\"sig-paren\">(</span><em>map</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#flask_pymongo.BSONObjectIdConverter\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>A simple converter for the RESTful URL routing system of Flask.</p><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@app.route</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&lt;ObjectId:task_id&gt;&quot;</span><span class=\"p\">)</span><span class=\"k\">def</span> <span class=\"nf\">show_task</span><span class=\"p\">(</span><span class=\"n\">task_id</span><span class=\"p\">):</span>    <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">mongo</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">find_one_or_404</span><span class=\"p\">(</span><span class=\"n\">task_id</span><span class=\"p\">)</span>    <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s2\">&quot;task.html&quot;</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"o\">=</span><span class=\"n\">task</span><span class=\"p\">)</span></pre></div></div><p>Valid object ID strings are converted into<a class=\"reference external\" href=\"http://api.mongodb.com/python/current/api/bson/objectid.html#bson.objectid.ObjectId\" title=\"(in PyMongo v3.8.0)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ObjectId</span></code></a> objects; invalid strings resultin a 404 error. The converter is automatically registered by theinitialization of <a class=\"reference internal\" href=\"#flask_pymongo.PyMongo\" title=\"flask_pymongo.PyMongo\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PyMongo</span></code></a> with keyword<code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ObjectId</span></code>.</p></dd></dl></div><div class=\"section\" id=\"configuration\"><h2>Configuration<a class=\"headerlink\" href=\"#configuration\" title=\"Permalink to this headline\">\u00b6</a></h2><p>You can configure Flask-PyMongo either by passing a <a class=\"reference external\" href=\"https://docs.mongodb.com/manual/reference/connection-string/\">MongoDB URI</a> to the<a class=\"reference internal\" href=\"#flask_pymongo.PyMongo\" title=\"flask_pymongo.PyMongo\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PyMongo</span></code></a> constructor, or assigning it to the<code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_URI</span></code> <a class=\"reference external\" href=\"http://flask.pocoo.org/docs/1.0/config/\">Flask configuration variable</a></p><p>You may also pass additional keyword arguments to the <code class=\"docutils literal notranslate\"><span class=\"pre\">PyMongo</span></code>constructor. These are passed directly through to the underlying<a class=\"reference external\" href=\"http://api.mongodb.com/python/current/api/pymongo/mongo_client.html#pymongo.mongo_client.MongoClient\" title=\"(in PyMongo v3.8.0)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MongoClient</span></code></a> object.</p><div class=\"admonition note\"><p class=\"first admonition-title\">Note</p><p class=\"last\">By default, Flask-PyMongo sets the <code class=\"docutils literal notranslate\"><span class=\"pre\">connect</span></code> keyword argument to<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, to prevent PyMongo from connecting immediately. PyMongoitself <a class=\"reference external\" href=\"http://api.mongodb.com/python/current/faq.html#is-pymongo-fork-safe\">is not fork-safe</a>,and delaying connection until the app is actually used is necessary toavoid issues. If you wish to change this default behavior, pass<code class=\"docutils literal notranslate\"><span class=\"pre\">connect=True</span></code> as a keyword argument to <code class=\"docutils literal notranslate\"><span class=\"pre\">PyMongo</span></code>.</p></div><p>You can create multiple <code class=\"docutils literal notranslate\"><span class=\"pre\">PyMongo</span></code> instances, to connect to multipledatabases or database servers:</p><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span><span class=\"c1\"># connect to MongoDB with the defaults</span><span class=\"n\">mongo1</span> <span class=\"o\">=</span> <span class=\"n\">PyMongo</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"s2\">&quot;mongodb://localhost:27017/databaseOne&quot;</span><span class=\"p\">)</span><span class=\"c1\"># connect to another MongoDB database on the same host</span><span class=\"n\">mongo2</span> <span class=\"o\">=</span> <span class=\"n\">PyMongo</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"s2\">&quot;mongodb://localhost:27017/databaseTwo&quot;</span><span class=\"p\">)</span><span class=\"c1\"># connect to another MongoDB server altogether</span><span class=\"n\">mongo3</span> <span class=\"o\">=</span> <span class=\"n\">PyMongo</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">=</span><span class=\"s2\">&quot;mongodb://another.host:27017/databaseThree&quot;</span><span class=\"p\">)</span></pre></div></div><p>Each instance is independent of the others and shares no state.</p></div></div><div class=\"section\" id=\"api\"><h1>API<a class=\"headerlink\" href=\"#api\" title=\"Permalink to this headline\">\u00b6</a></h1><div class=\"section\" id=\"classes\"><h2>Classes<a class=\"headerlink\" href=\"#classes\" title=\"Permalink to this headline\">\u00b6</a></h2><dl class=\"class\"><dt id=\"flask_pymongo.PyMongo\"><em class=\"property\">class </em><code class=\"descclassname\">flask_pymongo.</code><code class=\"descname\">PyMongo</code><span class=\"sig-paren\">(</span><em>app=None</em>, <em>uri=None</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#flask_pymongo.PyMongo\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Manages MongoDB connections for your Flask app.</p><p>PyMongo objects provide access to the MongoDB server via the <a class=\"reference internal\" href=\"#flask_pymongo.PyMongo.db\" title=\"flask_pymongo.PyMongo.db\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">db</span></code></a>and <a class=\"reference internal\" href=\"#flask_pymongo.PyMongo.cx\" title=\"flask_pymongo.PyMongo.cx\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">cx</span></code></a> attributes. You must either pass the <a class=\"reference external\" href=\"http://flask.pocoo.org/docs/api/#flask.Flask\" title=\"(in Flask v1.1)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Flask</span></code></a>app to the constructor, or call <a class=\"reference internal\" href=\"#flask_pymongo.PyMongo.init_app\" title=\"flask_pymongo.PyMongo.init_app\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">init_app()</span></code></a>.</p><p>PyMongo accepts a MongoDB URI via the <code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_URI</span></code> Flask configurationvariable, or as an argument to the constructor or <code class=\"docutils literal notranslate\"><span class=\"pre\">init_app</span></code>. See<a class=\"reference internal\" href=\"#flask_pymongo.PyMongo.init_app\" title=\"flask_pymongo.PyMongo.init_app\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">init_app()</span></code></a> for more detail.</p><dl class=\"attribute\"><dt id=\"flask_pymongo.PyMongo.cx\"><code class=\"descname\">cx</code><a class=\"headerlink\" href=\"#flask_pymongo.PyMongo.cx\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>The <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MongoClient</span></code> connected to theMongoDB server.</p></dd></dl><dl class=\"attribute\"><dt id=\"flask_pymongo.PyMongo.db\"><code class=\"descname\">db</code><a class=\"headerlink\" href=\"#flask_pymongo.PyMongo.db\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>The <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Database</span></code> if the URI usednamed a database, and <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> otherwise.</p></dd></dl><dl class=\"method\"><dt id=\"flask_pymongo.PyMongo.init_app\"><code class=\"descname\">init_app</code><span class=\"sig-paren\">(</span><em>app</em>, <em>uri=None</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#flask_pymongo.PyMongo.init_app\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Initialize this <a class=\"reference internal\" href=\"#flask_pymongo.PyMongo\" title=\"flask_pymongo.PyMongo\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PyMongo</span></code></a> for use.</p><p>Configure a <a class=\"reference external\" href=\"http://api.mongodb.com/python/current/api/pymongo/mongo_client.html#pymongo.mongo_client.MongoClient\" title=\"(in PyMongo v3.8.0)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MongoClient</span></code></a>in the following scenarios:</p><ol class=\"arabic simple\"><li>If <code class=\"docutils literal notranslate\"><span class=\"pre\">uri</span></code> is not <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, pass the <code class=\"docutils literal notranslate\"><span class=\"pre\">uri</span></code> and any positionalor keyword arguments to <a class=\"reference external\" href=\"http://api.mongodb.com/python/current/api/pymongo/mongo_client.html#pymongo.mongo_client.MongoClient\" title=\"(in PyMongo v3.8.0)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MongoClient</span></code></a></li><li>If <code class=\"docutils literal notranslate\"><span class=\"pre\">uri</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, and a Flask config variable named<code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_URI</span></code> exists, use that as the <code class=\"docutils literal notranslate\"><span class=\"pre\">uri</span></code> as above.</li></ol><p>The caller is responsible for ensuring that additional positionaland keyword arguments result in a valid call.</p><div class=\"versionchanged\"><p><span class=\"versionmodified\">Changed in version 2.2: </span>The <code class=\"docutils literal notranslate\"><span class=\"pre\">uri</span></code> is no longer required to contain a database name. If itdoes not, then the <a class=\"reference internal\" href=\"#flask_pymongo.PyMongo.db\" title=\"flask_pymongo.PyMongo.db\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">db</span></code></a> attribute will be <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p></div><div class=\"versionchanged\"><p><span class=\"versionmodified\">Changed in version 2.0: </span>Flask-PyMongo no longer accepts many of the configuration variablesit did in previous versions. You must now use a MongoDB URI toconfigure Flask-PyMongo.</p></div></dd></dl><dl class=\"method\"><dt><code class=\"descname\">save_file</code><span class=\"sig-paren\">(</span><em>filename</em>, <em>fileobj</em>, <em>base='fs'</em>, <em>content_type=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span></dt><dd><p>Save a file-like object to GridFS using the given filename.</p><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@app.route</span><span class=\"p\">(</span><span class=\"s2\">&quot;/uploads/&lt;path:filename&gt;&quot;</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;POST&quot;</span><span class=\"p\">])</span><span class=\"k\">def</span> <span class=\"nf\">save_upload</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">):</span>    <span class=\"n\">mongo</span><span class=\"o\">.</span><span class=\"n\">save_file</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">[</span><span class=\"s2\">&quot;file&quot;</span><span class=\"p\">])</span>    <span class=\"k\">return</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"n\">url_for</span><span class=\"p\">(</span><span class=\"s2\">&quot;get_upload&quot;</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"n\">filename</span><span class=\"p\">))</span></pre></div></div><table class=\"docutils field-list\" frame=\"void\" rules=\"none\"><col class=\"field-name\" /><col class=\"field-body\" /><tbody valign=\"top\"><tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\"><li><strong>filename</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.7)\"><em>str</em></a>) \u2013 the filename of the file to return</li><li><strong>fileobj</strong> (<em>file</em>) \u2013 the file-like object to save</li><li><strong>base</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.7)\"><em>str</em></a>) \u2013 base the base name of the GridFS collections to use</li><li><strong>content_type</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.7)\"><em>str</em></a>) \u2013 the MIME content-type of the file. If<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, the content-type is guessed from the filename using<a class=\"reference external\" href=\"https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_type\" title=\"(in Python v3.7)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">guess_type()</span></code></a></li><li><strong>kwargs</strong> \u2013 extra attributes to be stored in the file\u2019s document,passed directly to <a class=\"reference external\" href=\"http://api.mongodb.com/python/current/api/gridfs/index.html#gridfs.GridFS.put\" title=\"(in PyMongo v3.8.0)\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">gridfs.GridFS.put()</span></code></a></li></ul></td></tr></tbody></table></dd></dl><dl class=\"method\"><dt><code class=\"descname\">send_file</code><span class=\"sig-paren\">(</span><em>filename</em>, <em>base='fs'</em>, <em>version=-1</em>, <em>cache_for=31536000</em><span class=\"sig-paren\">)</span></dt><dd><p>Respond with a file from GridFS.</p><p>Returns an instance of the <a class=\"reference external\" href=\"http://flask.pocoo.org/docs/api/#flask.Flask.response_class\" title=\"(in Flask v1.1)\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">response_class</span></code></a>containing the named file, and implement conditional GET semantics(using <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">make_conditional()</span></code>).</p><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@app.route</span><span class=\"p\">(</span><span class=\"s2\">&quot;/uploads/&lt;path:filename&gt;&quot;</span><span class=\"p\">)</span><span class=\"k\">def</span> <span class=\"nf\">get_upload</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">):</span>    <span class=\"k\">return</span> <span class=\"n\">mongo</span><span class=\"o\">.</span><span class=\"n\">send_file</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span></pre></div></div><table class=\"docutils field-list\" frame=\"void\" rules=\"none\"><col class=\"field-name\" /><col class=\"field-body\" /><tbody valign=\"top\"><tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\"><li><strong>filename</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.7)\"><em>str</em></a>) \u2013 the filename of the file to return</li><li><strong>base</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.7)\"><em>str</em></a>) \u2013 the base name of the GridFS collections to use</li><li><strong>version</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.7)\"><em>bool</em></a>) \u2013 if positive, return the Nth revision of the fileidentified by filename; if negative, return the Nth most recentrevision. If no such version exists, return with HTTP status 404.</li><li><strong>cache_for</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.7)\"><em>int</em></a>) \u2013 number of seconds that browsers should beinstructed to cache responses</li></ul></td></tr></tbody></table></dd></dl></dd></dl></div><div class=\"section\" id=\"wrappers\"><h2>Wrappers<a class=\"headerlink\" href=\"#wrappers\" title=\"Permalink to this headline\">\u00b6</a></h2><p>Flask-PyMongo wraps PyMongo\u2019s <a class=\"reference external\" href=\"http://api.mongodb.com/python/current/api/pymongo/mongo_client.html#pymongo.mongo_client.MongoClient\" title=\"(in PyMongo v3.8.0)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MongoClient</span></code></a>,<a class=\"reference external\" href=\"http://api.mongodb.com/python/current/api/pymongo/database.html#pymongo.database.Database\" title=\"(in PyMongo v3.8.0)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Database</span></code></a>, and<a class=\"reference external\" href=\"http://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection\" title=\"(in PyMongo v3.8.0)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Collection</span></code></a> classes, and overrides theirattribute and item accessors. Wrapping the PyMongo classes in this way letsFlask-PyMongo add methods to <code class=\"docutils literal notranslate\"><span class=\"pre\">Collection</span></code> while allowing user code to useMongoDB-style dotted expressions.</p><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">mongo</span><span class=\"o\">.</span><span class=\"n\">cx</span><span class=\"p\">)</span><span class=\"go\">&lt;type &#39;flask_pymongo.wrappers.MongoClient&#39;&gt;</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">mongo</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"p\">)</span><span class=\"go\">&lt;type &#39;flask_pymongo.wrappers.Database&#39;&gt;</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">mongo</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">some_collection</span><span class=\"p\">)</span><span class=\"go\">&lt;type &#39;flask_pymongo.wrappers.Collection&#39;&gt;</span></pre></div></div><dl class=\"class\"><dt id=\"flask_pymongo.wrappers.Collection\"><em class=\"property\">class </em><code class=\"descclassname\">flask_pymongo.wrappers.</code><code class=\"descname\">Collection</code><span class=\"sig-paren\">(</span><em>...</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#flask_pymongo.wrappers.Collection\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Sub-class of PyMongo <a class=\"reference external\" href=\"http://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection\" title=\"(in PyMongo v3.8.0)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Collection</span></code></a> with helpers.</p><dl class=\"method\"><dt><code class=\"descname\">find_one_or_404</code><span class=\"sig-paren\">(</span><em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span></dt><dd><p>Find a single document or raise a 404.</p><p>This is like <a class=\"reference external\" href=\"http://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection.find_one\" title=\"(in PyMongo v3.8.0)\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">find_one()</span></code></a>, butrather than returning <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, cause a 404 Not Found HTTP statuson the request.</p><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@app.route</span><span class=\"p\">(</span><span class=\"s2\">&quot;/user/&lt;username&gt;&quot;</span><span class=\"p\">)</span><span class=\"k\">def</span> <span class=\"nf\">user_profile</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">):</span>    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">mongo</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">find_one_or_404</span><span class=\"p\">({</span><span class=\"s2\">&quot;_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">username</span><span class=\"p\">})</span>    <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s2\">&quot;user.html&quot;</span><span class=\"p\">,</span>        <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"p\">)</span></pre></div></div></dd></dl></dd></dl></div><div class=\"section\" id=\"history-and-contributors\"><h2>History and Contributors<a class=\"headerlink\" href=\"#history-and-contributors\" title=\"Permalink to this headline\">\u00b6</a></h2><p>Changes:</p><ul><li><p class=\"first\">2.3.0: April 24, 2019</p><ul class=\"simple\"><li>Update version compatibility matrix in tests, drop official support forPyMongo less than 3.3.x.</li></ul></li><li><p class=\"first\">2.2.0: November 1, 2018</p><ul class=\"simple\"><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/117\">#117</a> Allow URIswithout database name.</li></ul></li><li><p class=\"first\">2.1.0: August 6, 2018</p><ul class=\"simple\"><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/114\">#114</a> Acceptkeyword arguments to <a class=\"reference internal\" href=\"#flask_pymongo.PyMongo.save_file\" title=\"flask_pymongo.PyMongo.save_file\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">save_file()</span></code></a> (Andrew C.Hawkins).</li></ul></li><li><p class=\"first\">2.0.1: July 17, 2018</p><ul class=\"simple\"><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/113\">#113</a> Make the<code class=\"docutils literal notranslate\"><span class=\"pre\">app</span></code> argument to <code class=\"docutils literal notranslate\"><span class=\"pre\">PyMongo</span></code> optional (yarobob).</li></ul></li><li><p class=\"first\">2.0.0: July 2, 2018</p><p><strong>This release is not compatible with Flask-PyMongo 0.5.x or any earlierversion.</strong> You can see an explanation of the reasoning and changes in<a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/110\">issue #110</a>.</p><ul class=\"simple\"><li>Only support configuration via URI.</li><li>Don\u2019t connect to MongoDB by default.</li><li>Clarify version support of Python, Flask, PyMongo, and MongoDB.</li><li>Readability improvement to <code class=\"docutils literal notranslate\"><span class=\"pre\">README.md</span></code> (MinJae Kwon).</li></ul></li><li><p class=\"first\">0.5.2: May 19, 2018</p><ul class=\"simple\"><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/102\">#102</a> Return 404,not 400, when given an invalid input to <cite>BSONObjectIdConverter</cite> (AbrahamToriz Cruz).</li></ul></li><li><p class=\"first\">0.5.1: May 24, 2017</p><ul class=\"simple\"><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/93\">#93</a> Supply adefault <code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_AUTH_MECHANISM</span></code> (Mark Unsworth).</li></ul></li><li><p class=\"first\">0.5.0: May 21, 2017</p><blockquote><div><p><strong>This will be the last 0.x series release.</strong> The next non-bugfixrelease will be Flask-PyMongo 2.0, which will introduce backwardsbreaking changes, and will be the foundation for improvements andchanges going forward. Flask-PyMongo 2.0 will no longer support Python2.6, but will support Python 2.7 and Python 3.3+.</p></div></blockquote><ul class=\"simple\"><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/44\">#44</a>, <a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/51\">#51</a> Redirect <code class=\"docutils literal notranslate\"><span class=\"pre\">/</span></code>to <code class=\"docutils literal notranslate\"><span class=\"pre\">/HomePage</span></code> in the wiki example (David Awad)</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/76\">#76</a> Build on moremodern Python versions (Robson Roberto Souza Peixoto)</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/79\">#79</a>, <a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/84\">#84</a>, <a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/85\">#85</a> Don\u2019t use<code class=\"docutils literal notranslate\"><span class=\"pre\">flask.ext</span></code> import paths any more (ratson, juliascript)</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/40\">#40</a>, <a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/83\">#83</a>, <a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/86\">#86</a> Fix options parsingfrom <code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_URI</span></code> (jobou)</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/72\">#72</a>, <a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/80\">#80</a> Support<code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_SERVER_SELECTION_TIMEOUT_MS</span></code> (Henrik Blidh)</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/34\">#34</a>, <a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/64\">#64</a>, <a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/88\">#88</a> Supportfrom <code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_AUTH_SOURCE</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_AUTH_MECHANISM</span></code> (Craig Davis)</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/74\">#74</a>, <a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/77\">#77</a>, <a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/78\">#78</a> Fixed <code class=\"docutils literal notranslate\"><span class=\"pre\">maxPoolSize</span></code>in PyMongo 3.0+ (Henrik Blidh)</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/82\">#82</a> Fix \u201canotheruser is already authenticated\u201d error message.</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/54\">#54</a> Authenticateagainst \u201cadmin\u201d database if no <code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_DBNAME</span></code> is provided.</li></ul></li><li><p class=\"first\">0.4.1: January 25, 2016</p><ul class=\"simple\"><li>Add the connect keyword:<a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/67\">#67</a>.</li></ul></li><li><p class=\"first\">0.4.0: October 19, 2015</p><ul class=\"simple\"><li>Flask-Pymongo is now compatible with pymongo 3.0+:<a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/63\">#63</a>.</li></ul></li><li><p class=\"first\">0.3.1: April 9, 2015</p><ul class=\"simple\"><li>Flask-PyMongo is now tested against Python 2.6, 2.7, 3.3, and 3.4.</li><li>Flask-PyMongo installation now no longer depends on <a class=\"reference external\" href=\"https://pypi.python.org/pypi/nose/\">nose</a>.</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/58\">#58</a> Updaterequirements for PyMongo 3.x (Emmanuel Valette).</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/43\">#43</a> Ensure erroris raised when URI database name is parsed as \u2018None\u2019 (Ben Jeffrey).</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/50\">#50</a> Fix a bug inread preference handling (Kevin Funk).</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/46\">#46</a> Cannot usemultiple replicaset instances which run on different ports (MarkUnsworth).</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/30\">#30</a>ConfiguationError with MONGO_READ_PREFERENCE (Mark Unsworth).</li></ul></li><li><p class=\"first\">0.3.0: July 4, 2013</p><ul class=\"simple\"><li>This is a minor version bump which introduces backwards breakingchanges! Please read these change notes carefully.</li><li>Removed read preference constants from Flask-PyMongo; to set aread preference, use the string name or import contants directlyfrom <a class=\"reference external\" href=\"http://api.mongodb.com/python/current/api/pymongo/read_preferences.html#pymongo.read_preferences.ReadPreference\" title=\"(in PyMongo v3.8.0)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">pymongo.read_preferences.ReadPreference</span></code></a>.</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/22\">#22 (partial)</a>Add support for <code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_SOCKET_TIMEOUT_MS</span></code> and<code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_CONNECT_TIMEOUT_MS</span></code> options (ultrabug).</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/27\">#27 (partial)</a>Make Flask-PyMongo compatible with Python 3 (Vizzy).</li></ul></li><li><p class=\"first\">0.2.1: December 22, 2012</p><ul class=\"simple\"><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/19\">#19</a> Added<code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_DOCUMENT_CLASS</span></code> config option (jeverling).</li></ul></li><li><p class=\"first\">0.2.0: December 15, 2012</p><ul class=\"simple\"><li>This is a minor version bump which may introduce backwards breakingchanges! Please read these change notes carefully.</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/17\">#17</a> Now usingPyMongo 2.4\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">MongoClient</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">MongoReplicaSetClient</span></code> objectsinstead of <code class=\"docutils literal notranslate\"><span class=\"pre\">Connection</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">ReplicaSetConnection</span></code> classes(tang0th).</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/17\">#17</a> Now requiringat least PyMongo version 2.4 (tang0th).</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/17\">#17</a> The wrapperclass <code class=\"docutils literal notranslate\"><span class=\"pre\">flask_pymongo.wrappers.Connection</span></code> is renamed to<code class=\"docutils literal notranslate\"><span class=\"pre\">flask_pymongo.wrappers.MongoClient</span></code> (tang0th).</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/17\">#17</a> The wrapperclass <code class=\"docutils literal notranslate\"><span class=\"pre\">flask_pymongo.wrappers.ReplicaSetConnection</span></code> is renamed to<code class=\"docutils literal notranslate\"><span class=\"pre\">flask_pymongo.wrappers.MongoReplicaSetClient</span></code> (tang0th).</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/18\">#18</a><code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_AUTO_START_REQUEST</span></code> now defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> whenconnecting using a URI.</li></ul></li><li><p class=\"first\">0.1.4: December 15, 2012</p><ul class=\"simple\"><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/15\">#15</a> Added supportfor <code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_MAX_POOL_SIZE</span></code> (Fabrice Aneche)</li></ul></li><li><p class=\"first\">0.1.3: September 22, 2012</p><ul class=\"simple\"><li>Added support for configuration from MongoDB URI.</li></ul></li><li><p class=\"first\">0.1.2: June 18, 2012</p><ul class=\"simple\"><li>Updated wiki example application</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/issues/14\">#14</a> Addedexamples and docs to PyPI package.</li></ul></li><li><p class=\"first\">0.1.1: May 26, 2012</p><ul class=\"simple\"><li>Added support for PyMongo 2.2\u2019s \u201cauto start request\u201d feature, by wayof the <code class=\"docutils literal notranslate\"><span class=\"pre\">MONGO_AUTO_START_REQUEST</span></code> configuration flag.</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/13\">#13</a> AddedBSONObjectIdConverter (Christoph Herr)</li><li><a class=\"reference external\" href=\"https://github.com/dcrosta/flask-pymongo/pull/12\">#12</a> Correcteddocumentation typo (Thor Adam)</li></ul></li><li><p class=\"first\">0.1: December 21, 2011</p><ul class=\"simple\"><li>Initial Release</li></ul></li></ul><p>Contributors:</p><ul class=\"simple\"><li><a class=\"reference external\" href=\"https://github.com/jeverling\">jeverling</a></li><li><a class=\"reference external\" href=\"https://github.com/tang0th\">tang0th</a></li><li><a class=\"reference external\" href=\"https://github.com/akhenakh\">Fabrice Aneche</a></li><li><a class=\"reference external\" href=\"https://github.com/thoradam\">Thor Adam</a></li><li><a class=\"reference external\" href=\"https://github.com/jarus\">Christoph Herr</a></li><li><a class=\"reference external\" href=\"https://github.com/markunsworth\">Mark Unsworth</a></li><li><a class=\"reference external\" href=\"https://github.com/k-funk\">Kevin Funk</a></li><li><a class=\"reference external\" href=\"https://github.com/jeffbr13\">Ben Jeffrey</a></li><li><a class=\"reference external\" href=\"https://github.com/karec\">Emmanuel Valette</a></li><li><a class=\"reference external\" href=\"https://github.com/DavidAwad\">David Awad</a></li><li><a class=\"reference external\" href=\"https://github.com/robsonpeixoto\">Robson Roberto Souza Peixoto</a></li><li><a class=\"reference external\" href=\"https://github.com/juliascript\">juliascript</a></li><li><a class=\"reference external\" href=\"https://github.com/hbldh\">Henrik Blidh</a></li><li><a class=\"reference external\" href=\"https://github.com/jbouzekri\">jobou</a></li><li><a class=\"reference external\" href=\"https://github.com/blade2005\">Craig Davis</a></li><li><a class=\"reference external\" href=\"https://github.com/ratson\">ratson</a></li><li><a class=\"reference external\" href=\"https://github.com/categulario\">Abraham Toriz Cruz</a></li><li><a class=\"reference external\" href=\"https://github.com/mingrammer\">MinJae Kwon</a></li><li><a class=\"reference external\" href=\"https://github.com/yarobob\">yarobob</a></li><li><a class=\"reference external\" href=\"https://github.com/achawkins\">Andrew C. Hawkins</a></li></ul></div></div>          </div>        </div>      </div>      <div class=\"clearer\"></div>    </div>      <a href=\"http://github.com/dcrosta/flask-pymongo\"><img style=\"position: fixed; top: 0; right: 0; border: 0;\"    src=\"http://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png\" alt=\"Fork me on GitHub\" /></a>      </div>    </body></html>",
  "embeddings": []
}
{
  "libtype": "npm",
  "libname": "cspell-grammar",
  "url": "https://github.com/streetsidesoftware/cspell/tree/main/packages/cspell-grammar#readme",
  "html": "{\"payload\":{\"allShortcutsEnabled\":false,\"path\":\"packages/cspell-grammar\",\"repo\":{\"id\":79033487,\"defaultBranch\":\"main\",\"name\":\"cspell\",\"ownerLogin\":\"streetsidesoftware\",\"currentUserCanPush\":false,\"isFork\":false,\"isEmpty\":false,\"createdAt\":\"2017-01-15T13:11:46.000Z\",\"ownerAvatar\":\"https://avatars.githubusercontent.com/u/50543896?v=4\",\"public\":true,\"private\":false,\"isOrgOwned\":true},\"currentUser\":null,\"refInfo\":{\"name\":\"main\",\"listCacheKey\":\"v0:1709662589.0\",\"canEdit\":false,\"refType\":\"branch\",\"currentOid\":\"ee4c65016939306fd66cd2adfb1bc3afeaa841ec\"},\"tree\":{\"items\":[{\"name\":\".vscode\",\"path\":\"packages/cspell-grammar/.vscode\",\"contentType\":\"directory\"},{\"name\":\"fixtures\",\"path\":\"packages/cspell-grammar/fixtures\",\"contentType\":\"directory\"},{\"name\":\"samples\",\"path\":\"packages/cspell-grammar/samples\",\"contentType\":\"directory\"},{\"name\":\"src\",\"path\":\"packages/cspell-grammar/src\",\"contentType\":\"directory\"},{\"name\":\"CHANGELOG.md\",\"path\":\"packages/cspell-grammar/CHANGELOG.md\",\"contentType\":\"file\"},{\"name\":\"LICENSE\",\"path\":\"packages/cspell-grammar/LICENSE\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"packages/cspell-grammar/README.md\",\"contentType\":\"file\"},{\"name\":\"bin.mjs\",\"path\":\"packages/cspell-grammar/bin.mjs\",\"contentType\":\"file\"},{\"name\":\"package.json\",\"path\":\"packages/cspell-grammar/package.json\",\"contentType\":\"file\"},{\"name\":\"tsconfig.esm.json\",\"path\":\"packages/cspell-grammar/tsconfig.esm.json\",\"contentType\":\"file\"},{\"name\":\"tsconfig.json\",\"path\":\"packages/cspell-grammar/tsconfig.json\",\"contentType\":\"file\"}],\"templateDirectorySuggestionUrl\":null,\"readme\":{\"displayName\":\"README.md\",\"richText\":\"<article class=\\\"markdown-body entry-content container-lg\\\" itemprop=\\\"text\\\"><div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h1 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"><code>cspell-grammar</code></h1><a id=\\\"user-content-cspell-grammar\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: cspell-grammar\\\" href=\\\"#cspell-grammar\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">CSpell Grammar is used to generate a parser. The Parser is used to add context / scope to parts of a document, making it easier to define the parts to spell spell checked.</p>\\n<p dir=\\\"auto\\\">This is to address the issues and limitations related to <code>ignoreRegExpList</code> and <code>includeRegExpList</code>.</p>\\n<p dir=\\\"auto\\\">The parser is use to add <code>scope</code> to sections of a document. The <code>scope</code> can then be used to apply spell checking rules.</p>\\n<p dir=\\\"auto\\\">Example: Only check comments and strings</p>\\n<div class=\\\"highlight highlight-source-yaml notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"rules:\\n  '*': false\\n  comment: true\\n  string: true\\\"><pre><span class=\\\"pl-ent\\\">rules</span>:\\n  <span class=\\\"pl-s\\\"><span class=\\\"pl-pds\\\">'</span><span class=\\\"pl-ent\\\">*</span><span class=\\\"pl-pds\\\">'</span></span>: <span class=\\\"pl-c1\\\">false</span>\\n  <span class=\\\"pl-ent\\\">comment</span>: <span class=\\\"pl-c1\\\">true</span>\\n  <span class=\\\"pl-ent\\\">string</span>: <span class=\\\"pl-c1\\\">true</span></pre></div>\\n<p dir=\\\"auto\\\">It can be even more powerful like controlling the language settings based upon scope.</p>\\n<div class=\\\"highlight highlight-source-yaml notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"rules:\\n  comment:\\n    language: en\\n  string:\\n    language: en,fr\\n    dictionaries: ['marketing-terms'],\\n    caseSensitive: true\\n  string.javascript:\\n    caseSensitive: false\\\"><pre><span class=\\\"pl-ent\\\">rules</span>:\\n  <span class=\\\"pl-ent\\\">comment</span>:\\n    <span class=\\\"pl-ent\\\">language</span>: <span class=\\\"pl-s\\\">en</span>\\n  <span class=\\\"pl-ent\\\">string</span>:\\n    <span class=\\\"pl-ent\\\">language</span>: <span class=\\\"pl-s\\\">en,fr</span>\\n    <span class=\\\"pl-ent\\\">dictionaries</span>: <span class=\\\"pl-s\\\">['marketing-terms'],</span>\\n    <span class=\\\"pl-ent\\\">caseSensitive</span>: <span class=\\\"pl-c1\\\">true</span>\\n  <span class=\\\"pl-ent\\\">string.javascript</span>:\\n    <span class=\\\"pl-ent\\\">caseSensitive</span>: <span class=\\\"pl-c1\\\">false</span></pre></div>\\n<p dir=\\\"auto\\\">Rules are applied in the order they match the scope of the text.</p>\\n<p dir=\\\"auto\\\">When checking JavaScript files with the above example rules:</p>\\n<ul dir=\\\"auto\\\">\\n<li>strings will:\\n<ul dir=\\\"auto\\\">\\n<li>use the locale <code>en,fr</code></li>\\n<li>the <code>marketing-terms</code> dictionary will be enabled</li>\\n<li><code>caseSensitive</code> will be <code>true</code></li>\\n</ul>\\n</li>\\n<li>everything else:\\n<ul dir=\\\"auto\\\">\\n<li>locale: <code>en</code></li>\\n<li><code>caseSensitive</code> will be <code>false</code></li>\\n</ul>\\n</li>\\n</ul>\\n<p dir=\\\"auto\\\">At its core, <code>cspell-grammar</code> uses a simplified form of the TextMate grammar.</p>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Reasoning</h2><a id=\\\"user-content-reasoning\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Reasoning\\\" href=\\\"#reasoning\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">Why use a grammar parser? Couldn't a colorizer / highlighter or a language AST be used?\\nAt one level, needs of the spell checker are simpler and different from colorizers or language AST parsers.\\nThe goal of a spell checker is to spell check <strong><em>relevant</em></strong> text. The spell check does not need to care about\\nthe syntactical correctness of a document or presentation.</p>\\n<p dir=\\\"auto\\\">The goal of a grammar parser for the spell checker is to allow the user to decide:</p>\\n<ol dir=\\\"auto\\\">\\n<li>What text should be checked.</li>\\n<li>Which dictionaries (or languages) should be used.</li>\\n<li>Are accents and case important</li>\\n</ol>\\n<p dir=\\\"auto\\\">Note: CSpell is a pure JavaScript application, so including the Oniguruma is not an option.</p>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Considerations</h3><a id=\\\"user-content-considerations\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Considerations\\\" href=\\\"#considerations\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<ul dir=\\\"auto\\\">\\n<li>Parsing a document should be fast - meaning the grammar should be as simple as possible to meet\\nthe needs of the spell checker and not focus on scope detail. This is where a colorizer grammar is\\nnot a good fit to be used.</li>\\n<li>AST's are a bit of an overkill for a spell checker. They provide too much detail while not bringing much benefit\\nfrom the detail.</li>\\n</ul>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Transformation</h2><a id=\\\"user-content-transformation\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Transformation\\\" href=\\\"#transformation\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">Consider the following bit of LaTeX:</p>\\n<div class=\\\"highlight highlight-text-tex-latex notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"k\\\\&quot;{o}nnen\\nk\u00f6nnen\\\"><pre>k<span class=\\\"pl-cce\\\">\\\\\\\"</span>{o}nnen\\nk\u00f6nnen</pre></div>\\n\\n<p dir=\\\"auto\\\">For the spell checker to work correctly, the <code>\\\\\\\"{o}</code> should be transformed into <code>\u00f6</code> before it is checked against the German dictionary.</p>\\n<p dir=\\\"auto\\\">This creates a few challenges.</p>\\n<p dir=\\\"auto\\\">Possible options:</p>\\n<ol dir=\\\"auto\\\">\\n<li>Simple whole document substitution\\n<ul dir=\\\"auto\\\">\\n<li>Challenges\\n<ul dir=\\\"auto\\\">\\n<li>It is not context aware and might replace the wrong text.</li>\\n<li>It changes the location of the words and messes up issue reporting (some sort of Map would be needed to get the correct line / character offset).</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ol>\\n<ul dir=\\\"auto\\\">\\n<li>Advantages\\n<ul dir=\\\"auto\\\">\\n<li>Easy to implement except for the context and mapping.</li>\\n</ul>\\n</li>\\n</ul>\\n<ol dir=\\\"auto\\\">\\n<li>Scope level substitution\\nTransformations occur at the scope level.\\n<ul dir=\\\"auto\\\">\\n<li>Challenges\\n<ul dir=\\\"auto\\\">\\n<li>offset mapping is still and issue (maybe)</li>\\n<li>need a way to merge text with adjacent scopes after transformation</li>\\n</ul>\\n</li>\\n<li>Advantages\\n<ul dir=\\\"auto\\\">\\n<li>it is context aware</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ol>\\n</article>\",\"errorMessage\":null,\"headerInfo\":{\"toc\":[{\"level\":1,\"text\":\"cspell-grammar\",\"anchor\":\"cspell-grammar\",\"htmlText\":\"cspell-grammar\"},{\"level\":2,\"text\":\"Reasoning\",\"anchor\":\"reasoning\",\"htmlText\":\"Reasoning\"},{\"level\":3,\"text\":\"Considerations\",\"anchor\":\"considerations\",\"htmlText\":\"Considerations\"},{\"level\":2,\"text\":\"Transformation\",\"anchor\":\"transformation\",\"htmlText\":\"Transformation\"}],\"siteNavLoginPath\":\"/login?return_to=https%3A%2F%2Fgithub.com%2Fstreetsidesoftware%2Fcspell%2Ftree%2Fmain%2Fpackages%2Fcspell-grammar\"}},\"totalCount\":11,\"showBranchInfobar\":false},\"fileTree\":{\"packages\":{\"items\":[{\"name\":\"Samples\",\"path\":\"packages/Samples\",\"contentType\":\"directory\"},{\"name\":\"cspell-bundled-dicts\",\"path\":\"packages/cspell-bundled-dicts\",\"contentType\":\"directory\"},{\"name\":\"cspell-code-snippets\",\"path\":\"packages/cspell-code-snippets\",\"contentType\":\"directory\"},{\"name\":\"cspell-config-lib\",\"path\":\"packages/cspell-config-lib\",\"contentType\":\"directory\"},{\"name\":\"cspell-dictionary\",\"path\":\"packages/cspell-dictionary\",\"contentType\":\"directory\"},{\"name\":\"cspell-eslint-plugin\",\"path\":\"packages/cspell-eslint-plugin\",\"contentType\":\"directory\"},{\"name\":\"cspell-gitignore\",\"path\":\"packages/cspell-gitignore\",\"contentType\":\"directory\"},{\"name\":\"cspell-glob\",\"path\":\"packages/cspell-glob\",\"contentType\":\"directory\"},{\"name\":\"cspell-grammar\",\"path\":\"packages/cspell-grammar\",\"contentType\":\"directory\"},{\"name\":\"cspell-io\",\"path\":\"packages/cspell-io\",\"contentType\":\"directory\"},{\"name\":\"cspell-json-reporter\",\"path\":\"packages/cspell-json-reporter\",\"contentType\":\"directory\"},{\"name\":\"cspell-lib\",\"path\":\"packages/cspell-lib\",\"contentType\":\"directory\"},{\"name\":\"cspell-pipe\",\"path\":\"packages/cspell-pipe\",\"contentType\":\"directory\"},{\"name\":\"cspell-resolver\",\"path\":\"packages/cspell-resolver\",\"contentType\":\"directory\"},{\"name\":\"cspell-service-bus\",\"path\":\"packages/cspell-service-bus\",\"contentType\":\"directory\"},{\"name\":\"cspell-strong-weak-map\",\"path\":\"packages/cspell-strong-weak-map\",\"contentType\":\"directory\"},{\"name\":\"cspell-tools\",\"path\":\"packages/cspell-tools\",\"contentType\":\"directory\"},{\"name\":\"cspell-trie-lib\",\"path\":\"packages/cspell-trie-lib\",\"contentType\":\"directory\"},{\"name\":\"cspell-trie\",\"path\":\"packages/cspell-trie\",\"contentType\":\"directory\"},{\"name\":\"cspell-types\",\"path\":\"packages/cspell-types\",\"contentType\":\"directory\"},{\"name\":\"cspell\",\"path\":\"packages/cspell\",\"contentType\":\"directory\"},{\"name\":\"dynamic-import\",\"path\":\"packages/dynamic-import\",\"contentType\":\"directory\"},{\"name\":\"hunspell-reader\",\"path\":\"packages/hunspell-reader\",\"contentType\":\"directory\"}],\"totalCount\":23},\"\":{\"items\":[{\"name\":\".github\",\"path\":\".github\",\"contentType\":\"directory\"},{\"name\":\".vscode\",\"path\":\".vscode\",\"contentType\":\"directory\"},{\"name\":\"doc-generator\",\"path\":\"doc-generator\",\"contentType\":\"directory\"},{\"name\":\"docs\",\"path\":\"docs\",\"contentType\":\"directory\"},{\"name\":\"examples\",\"path\":\"examples\",\"contentType\":\"directory\"},{\"name\":\"integration-tests\",\"path\":\"integration-tests\",\"contentType\":\"directory\"},{\"name\":\"packages\",\"path\":\"packages\",\"contentType\":\"directory\"},{\"name\":\"resources\",\"path\":\"resources\",\"contentType\":\"directory\"},{\"name\":\"rfc\",\"path\":\"rfc\",\"contentType\":\"directory\"},{\"name\":\"scripts\",\"path\":\"scripts\",\"contentType\":\"directory\"},{\"name\":\"static\",\"path\":\"static\",\"contentType\":\"directory\"},{\"name\":\"test-fixtures\",\"path\":\"test-fixtures\",\"contentType\":\"directory\"},{\"name\":\"test-packages\",\"path\":\"test-packages\",\"contentType\":\"directory\"},{\"name\":\"tools\",\"path\":\"tools\",\"contentType\":\"directory\"},{\"name\":\"website\",\"path\":\"website\",\"contentType\":\"directory\"},{\"name\":\".editorconfig\",\"path\":\".editorconfig\",\"contentType\":\"file\"},{\"name\":\".eslintrc.js\",\"path\":\".eslintrc.js\",\"contentType\":\"file\"},{\"name\":\".eslintrc.test.plugin.js\",\"path\":\".eslintrc.test.plugin.js\",\"contentType\":\"file\"},{\"name\":\".gitattributes\",\"path\":\".gitattributes\",\"contentType\":\"file\"},{\"name\":\".gitignore\",\"path\":\".gitignore\",\"contentType\":\"file\"},{\"name\":\".gitpod.yml\",\"path\":\".gitpod.yml\",\"contentType\":\"file\"},{\"name\":\".npmrc\",\"path\":\".npmrc\",\"contentType\":\"file\"},{\"name\":\".prettierignore\",\"path\":\".prettierignore\",\"contentType\":\"file\"},{\"name\":\".prettierrc.json\",\"path\":\".prettierrc.json\",\"contentType\":\"file\"},{\"name\":\".release-please-manifest.json\",\"path\":\".release-please-manifest.json\",\"contentType\":\"file\"},{\"name\":\"CHANGELOG.md\",\"path\":\"CHANGELOG.md\",\"contentType\":\"file\"},{\"name\":\"CODE_OF_CONDUCT.md\",\"path\":\"CODE_OF_CONDUCT.md\",\"contentType\":\"file\"},{\"name\":\"CONTRIBUTING.md\",\"path\":\"CONTRIBUTING.md\",\"contentType\":\"file\"},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"README.md\",\"contentType\":\"file\"},{\"name\":\"SECURITY.md\",\"path\":\"SECURITY.md\",\"contentType\":\"file\"},{\"name\":\"bin.mjs\",\"path\":\"bin.mjs\",\"contentType\":\"file\"},{\"name\":\"codecov.yaml\",\"path\":\"codecov.yaml\",\"contentType\":\"file\"},{\"name\":\"cspell-dict.txt\",\"path\":\"cspell-dict.txt\",\"contentType\":\"file\"},{\"name\":\"cspell-ignore-words.txt\",\"path\":\"cspell-ignore-words.txt\",\"contentType\":\"file\"},{\"name\":\"cspell-tools.mjs\",\"path\":\"cspell-tools.mjs\",\"contentType\":\"file\"},{\"name\":\"cspell.code-workspace\",\"path\":\"cspell.code-workspace\",\"contentType\":\"file\"},{\"name\":\"cspell.json\",\"path\":\"cspell.json\",\"contentType\":\"file\"},{\"name\":\"cspell.schema.json\",\"path\":\"cspell.schema.json\",\"contentType\":\"file\"},{\"name\":\"cspell.test.all.json\",\"path\":\"cspell.test.all.json\",\"contentType\":\"file\"},{\"name\":\"cspell.test.base.json\",\"path\":\"cspell.test.base.json\",\"contentType\":\"file\"},{\"name\":\"cspell.test.json\",\"path\":\"cspell.test.json\",\"contentType\":\"file\"},{\"name\":\"cspell.test.yarn.json\",\"path\":\"cspell.test.yarn.json\",\"contentType\":\"file\"},{\"name\":\"jest.config.js\",\"path\":\"jest.config.js\",\"contentType\":\"file\"},{\"name\":\"lerna.json\",\"path\":\"lerna.json\",\"contentType\":\"file\"},{\"name\":\"package.json\",\"path\":\"package.json\",\"contentType\":\"file\"},{\"name\":\"pnpm-lock.yaml\",\"path\":\"pnpm-lock.yaml\",\"contentType\":\"file\"},{\"name\":\"pnpm-workspace.yaml\",\"path\":\"pnpm-workspace.yaml\",\"contentType\":\"file\"},{\"name\":\"release-please-config.json\",\"path\":\"release-please-config.json\",\"contentType\":\"file\"},{\"name\":\"tsconfig.base.json\",\"path\":\"tsconfig.base.json\",\"contentType\":\"file\"},{\"name\":\"tsconfig.cjs.json\",\"path\":\"tsconfig.cjs.json\",\"contentType\":\"file\"},{\"name\":\"tsconfig.esm.json\",\"path\":\"tsconfig.esm.json\",\"contentType\":\"file\"},{\"name\":\"tsconfig.full.json\",\"path\":\"tsconfig.full.json\",\"contentType\":\"file\"},{\"name\":\"tsconfig.json\",\"path\":\"tsconfig.json\",\"contentType\":\"file\"},{\"name\":\"tsconfig.next.json\",\"path\":\"tsconfig.next.json\",\"contentType\":\"file\"},{\"name\":\"vitest.config.mjs\",\"path\":\"vitest.config.mjs\",\"contentType\":\"file\"}],\"totalCount\":56}},\"fileTreeProcessingTime\":6.916321,\"foldersToFetch\":[],\"treeExpanded\":true,\"symbolsExpanded\":false,\"csrf_tokens\":{\"/streetsidesoftware/cspell/branches\":{\"post\":\"1XdZnOOjrt8jUrRG9_eQL4D5-uhh6IPEWIqiEngH0PCLXQjygISLHZ5towOKK0W6VYrhpj9EB6ngT7xJAhqhng\"},\"/streetsidesoftware/cspell/branches/fetch_and_merge/main\":{\"post\":\"H89B4gyxLfp5c-et4XyKHMm4ZYFqaGBildysVl8tp4oKYY5adisNLWmjgaZZ84Tj_KRLG3fFX9dlZtZ22ZJOLA\"},\"/streetsidesoftware/cspell/branches/fetch_and_merge/main?discard_changes=true\":{\"post\":\"_05eLwkCyXFpDevA3v44NmGKKcwFK9b5K-ofCaEJVfbq4JGXc5jppnndjctmcTbJVJYHVhiG6UzbUGUpJ7a8UA\"}}},\"title\":\"cspell/packages/cspell-grammar at main \u00b7 streetsidesoftware/cspell\"}",
  "embeddings": []
}
{
  "libtype": "npm",
  "libname": "json5",
  "url": "http://json5.org/",
  "html": "<!DOCTYPE html><html lang=\"en-US\">  <head>    <meta charset=\"UTF-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><!-- Begin Jekyll SEO tag v2.8.0 --><title>JSON5 \u2013 JSON for Humans | JSON5</title><meta name=\"generator\" content=\"Jekyll v3.9.2\" /><meta property=\"og:title\" content=\"JSON5 \u2013 JSON for Humans\" /><meta property=\"og:locale\" content=\"en_US\" /><meta name=\"description\" content=\"JSON for Humans\" /><meta property=\"og:description\" content=\"JSON for Humans\" /><link rel=\"canonical\" href=\"https://json5.org/\" /><meta property=\"og:url\" content=\"http://json5.org/\" /><meta property=\"og:site_name\" content=\"JSON5\" /><meta property=\"og:type\" content=\"website\" /><meta name=\"twitter:card\" content=\"summary\" /><meta property=\"twitter:title\" content=\"JSON5 \u2013 JSON for Humans\" /><script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"WebSite\",\"description\":\"JSON for Humans\",\"headline\":\"JSON5 \u2013 JSON for Humans\",\"name\":\"JSON5\",\"url\":\"http://json5.org/\"}</script><!-- End Jekyll SEO tag -->    <link rel=\"stylesheet\" href=\"/assets/css/style.css?v=ed47b317816b70de9a8b55fbeefafb8f95c99e11\">    <!--[if lt IE 9]>    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js\"></script>    <![endif]-->    <!-- start custom head snippets, customize with your own _includes/head-custom.html file --><!-- Setup Google Analytics -->  <script>    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    ga('create', 'UA-32213209-1', 'auto');    ga('send', 'pageview');  </script><!-- You can set your favicon here --><!-- link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico\" --><!-- end custom head snippets -->  </head>  <body>    <div class=\"wrapper\">      <header>        <h1><a href=\"https://json5.org/\">JSON5</a></h1>                <p>JSON for Humans</p>                <p class=\"view\"><a href=\"https://github.com/json5/json5\">View the Project on GitHub <small>json5/json5</small></a></p>                              </header>      <section>      <h1 id=\"json5--json-for-humans\">JSON5 \u2013 JSON for Humans</h1><p><a href=\"https://app.travis-ci.com/json5/json5\"><img src=\"https://app.travis-ci.com/json5/json5.svg?branch=main\" alt=\"Build Status\" /></a> <a href=\"https://coveralls.io/github/json5/json5\"><img src=\"https://coveralls.io/repos/github/json5/json5/badge.svg\" alt=\"CoverageStatus\" /></a></p><p>JSON5 is an extension to the popular <a href=\"https://tools.ietf.org/html/rfc7159\">JSON</a> file format that aims to beeasier to <strong>write and maintain <em>by hand</em> (e.g. for config files)</strong>.It is <em>not intended</em> to be used for machine-to-machine communication.(Keep using JSON or other file formats for that. \ud83d\ude42)</p><p>JSON5 was started in 2012, and as of 2022, now gets <strong><a href=\"https://www.npmjs.com/package/json5\">&gt;65M downloads/week</a></strong>,ranks in the <strong><a href=\"https://gist.github.com/anvaka/8e8fa57c7ee1350e3491\">top 0.1%</a></strong> of the most depended-upon packages on npm,and has been adopted by major projects like<strong><a href=\"https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/platform/runtime_enabled_features.json5;drc=5de823b36e68fd99009a29281b17bc3a1d6b329c\">Chromium</a>,<a href=\"https://github.com/vercel/next.js/blob/b88f20c90bf4659b8ad5cb2a27956005eac2c7e8/packages/next/lib/find-config.ts#L43-L46\">Next.js</a>,<a href=\"https://babeljs.io/docs/en/config-files#supported-file-extensions\">Babel</a>,<a href=\"https://community.retool.com/t/i-am-attempting-to-append-several-text-fields-to-a-google-sheet-but-receiving-a-json5-invalid-character-error/7626\">Retool</a>,<a href=\"https://www.jetbrains.com/help/webstorm/json.html\">WebStorm</a>,and <a href=\"https://github.com/json5/json5/wiki/In-the-Wild\">more</a></strong>.It's also natively supported on <strong><a href=\"https://developer.apple.com/documentation/foundation/jsondecoder/3766916-allowsjson5\">Apple platforms</a></strong>like <strong>MacOS</strong> and <strong>iOS</strong>.</p><p>Formally, the <strong><a href=\"https://spec.json5.org/\">JSON5 Data Interchange Format</a></strong> is a superset of JSON(so valid JSON files will always be valid JSON5 files)that expands its syntax to include some productions from <a href=\"https://www.ecma-international.org/ecma-262/5.1/\">ECMAScript 5.1</a> (ES5).It's also a <em>subset</em> of ES5, so valid JSON5 files will always be valid ES5.<a href=\"#ecmascript-compatibility\">*</a></p><p>This JavaScript library is a reference implementation for JSON5 parsing and serialization,and is directly used in many of the popular projects mentioned above(where e.g. extreme performance isn't necessary),but others have created <a href=\"https://github.com/json5/json5/wiki/In-the-Wild\">many other libraries</a>across many other platforms.</p><h2 id=\"summary-of-features\">Summary of Features</h2><p>The following ECMAScript 5.1 features, which are not supported in JSON, havebeen extended to JSON5.</p><h3 id=\"objects\">Objects</h3><ul><li>Object keys may be an ECMAScript 5.1 <em><a href=\"https://www.ecma-international.org/ecma-262/5.1/#sec-7.6\">IdentifierName</a></em>.</li><li>Objects may have a single trailing comma.</li></ul><h3 id=\"arrays\">Arrays</h3><ul><li>Arrays may have a single trailing comma.</li></ul><h3 id=\"strings\">Strings</h3><ul><li>Strings may be single quoted.</li><li>Strings may span multiple lines by escaping new line characters.</li><li>Strings may include character escapes.</li></ul><h3 id=\"numbers\">Numbers</h3><ul><li>Numbers may be hexadecimal.</li><li>Numbers may have a leading or trailing decimal point.</li><li>Numbers may be <a href=\"http://ieeexplore.ieee.org/servlet/opac?punumber=4610933\">IEEE 754</a> positive infinity, negative infinity, and NaN.</li><li>Numbers may begin with an explicit plus sign.</li></ul><h3 id=\"comments\">Comments</h3><ul><li>Single and multi-line comments are allowed.</li></ul><h3 id=\"white-space\">White Space</h3><ul><li>Additional white space characters are allowed.</li></ul><h2 id=\"example\">Example</h2><p>Kitchen-sink example:</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span>  <span class=\"c1\">// comments</span>  <span class=\"nl\">unquoted</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">and you can quote me on that</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"nx\">singleQuotes</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">I can use \"double quotes\" here</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"nx\">lineBreaks</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Look, Mom! </span><span class=\"se\">\\</span><span class=\"s2\">No </span><span class=\"se\">\\\\</span><span class=\"s2\">n's!</span><span class=\"dl\">\"</span><span class=\"p\">,</span>  <span class=\"nx\">hexadecimal</span><span class=\"p\">:</span> <span class=\"mh\">0xdecaf</span><span class=\"p\">,</span>  <span class=\"nx\">leadingDecimalPoint</span><span class=\"p\">:</span> <span class=\"p\">.</span><span class=\"mi\">8675309</span><span class=\"p\">,</span> <span class=\"nx\">andTrailing</span><span class=\"p\">:</span> <span class=\"mi\">8675309</span><span class=\"p\">.,</span>  <span class=\"nx\">positiveSign</span><span class=\"p\">:</span> <span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span>  <span class=\"nx\">trailingComma</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">in objects</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">andIn</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">'</span><span class=\"s1\">arrays</span><span class=\"dl\">'</span><span class=\"p\">,],</span>  <span class=\"dl\">\"</span><span class=\"s2\">backwardsCompatible</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">with JSON</span><span class=\"dl\">\"</span><span class=\"p\">,</span><span class=\"p\">}</span></code></pre></div></div><p>A more real-world example is <a href=\"https://github.com/chromium/chromium/blob/feb3c9f670515edf9a88f185301cbd7794ee3e52/third_party/blink/renderer/platform/runtime_enabled_features.json5\">this config file</a>from the Chromium/Blink project.</p><h2 id=\"specification\">Specification</h2><p>For a detailed explanation of the JSON5 format, please read the <a href=\"https://json5.github.io/json5-spec/\">officialspecification</a>.</p><h2 id=\"installation-and-usage\">Installation and Usage</h2><h3 id=\"nodejs\">Node.js</h3><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>npm <span class=\"nb\">install </span>json5</code></pre></div></div><h4 id=\"commonjs\">CommonJS</h4><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">const</span> <span class=\"nx\">JSON5</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">json5</span><span class=\"dl\">'</span><span class=\"p\">)</span></code></pre></div></div><h4 id=\"modules\">Modules</h4><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"nx\">JSON5</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">json5</span><span class=\"dl\">'</span></code></pre></div></div><h3 id=\"browsers\">Browsers</h3><h4 id=\"umd\">UMD</h4><div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- This will create a global `JSON5` variable. --&gt;</span><span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://unpkg.com/json5@2/dist/index.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span></code></pre></div></div><h4 id=\"modules-1\">Modules</h4><div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"module\"</span><span class=\"nt\">&gt;</span>  <span class=\"k\">import</span> <span class=\"nx\">JSON5</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">https://unpkg.com/json5@2/dist/index.min.mjs</span><span class=\"dl\">'</span><span class=\"nt\">&lt;/script&gt;</span></code></pre></div></div><h2 id=\"api\">API</h2><p>The JSON5 API is compatible with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON API</a>.</p><h3 id=\"json5parse\">JSON5.parse()</h3><p>Parses a JSON5 string, constructing the JavaScript value or object described bythe string. An optional reviver function can be provided to perform atransformation on the resulting object before it is returned.</p><h4 id=\"syntax\">Syntax</h4><pre><code>JSON5.parse(text[, reviver])</code></pre><h4 id=\"parameters\">Parameters</h4><ul><li><code>text</code>: The string to parse as JSON5.</li><li><code>reviver</code>: If a function, this prescribes how the value originally produced byparsing is transformed, before being returned.</li></ul><h4 id=\"return-value\">Return value</h4><p>The object corresponding to the given JSON5 text.</p><h3 id=\"json5stringify\">JSON5.stringify()</h3><p>Converts a JavaScript value to a JSON5 string, optionally replacing values if areplacer function is specified, or optionally including only the specifiedproperties if a replacer array is specified.</p><h4 id=\"syntax-1\">Syntax</h4><pre><code>JSON5.stringify(value[, replacer[, space]])JSON5.stringify(value[, options])</code></pre><h4 id=\"parameters-1\">Parameters</h4><ul><li><code>value</code>: The value to convert to a JSON5 string.</li><li><code>replacer</code>: A function that alters the behavior of the stringificationprocess, or an array of String and Number objects that serve as a whitelistfor selecting/filtering the properties of the value object to be included inthe JSON5 string. If this value is null or not provided, all properties of theobject are included in the resulting JSON5 string.</li><li><code>space</code>: A String or Number object that's used to insert white space into theoutput JSON5 string for readability purposes. If this is a Number, itindicates the number of space characters to use as white space; this number iscapped at 10 (if it is greater, the value is just 10). Values less than 1indicate that no space should be used. If this is a String, the string (or thefirst 10 characters of the string, if it's longer than that) is used as whitespace. If this parameter is not provided (or is null), no white space is used.If white space is used, trailing commas will be used in objects and arrays.</li><li><code>options</code>: An object with the following properties:<ul><li><code>replacer</code>: Same as the <code>replacer</code> parameter.</li><li><code>space</code>: Same as the <code>space</code> parameter.</li><li><code>quote</code>: A String representing the quote character to use when serializingstrings.</li></ul></li></ul><h4 id=\"return-value-1\">Return value</h4><p>A JSON5 string representing the value.</p><h3 id=\"nodejs-coderequirecode-json5-files\">Node.js <code>require()</code> JSON5 files</h3><p>When using Node.js, you can <code>require()</code> JSON5 files by adding the followingstatement.</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">json5/lib/register</span><span class=\"dl\">'</span><span class=\"p\">)</span></code></pre></div></div><p>Then you can load a JSON5 file with a Node.js <code>require()</code> statement. Forexample:</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">const</span> <span class=\"nx\">config</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">./config.json5</span><span class=\"dl\">'</span><span class=\"p\">)</span></code></pre></div></div><h2 id=\"cli\">CLI</h2><p>Since JSON is more widely used than JSON5, this package includes a CLI forconverting JSON5 to JSON and for validating the syntax of JSON5 documents.</p><h3 id=\"installation\">Installation</h3><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>npm <span class=\"nb\">install</span> <span class=\"nt\">--global</span> json5</code></pre></div></div><h3 id=\"usage\">Usage</h3><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>json5 <span class=\"o\">[</span>options] &lt;file&gt;</code></pre></div></div><p>If <code>&lt;file&gt;</code> is not provided, then STDIN is used.</p><h4 id=\"options\">Options:</h4><ul><li><code>-s</code>, <code>--space</code>: The number of spaces to indent or <code>t</code> for tabs</li><li><code>-o</code>, <code>--out-file [file]</code>: Output to the specified file, otherwise STDOUT</li><li><code>-v</code>, <code>--validate</code>: Validate JSON5 but do not output JSON</li><li><code>-V</code>, <code>--version</code>: Output the version number</li><li><code>-h</code>, <code>--help</code>: Output usage information</li></ul><h2 id=\"contributing\">Contributing</h2><h3 id=\"development\">Development</h3><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git clone https://github.com/json5/json5<span class=\"nb\">cd </span>json5npm <span class=\"nb\">install</span></code></pre></div></div><p>When contributing code, please write relevant tests and run <code>npm test</code> and <code>npm run lint</code> before submitting pull requests. Please use an editor that supports<a href=\"http://editorconfig.org/\">EditorConfig</a>.</p><h3 id=\"issues\">Issues</h3><p>To report bugs or request features regarding the JSON5 <strong>data format</strong>,please submit an issue to the official<strong><a href=\"https://github.com/json5/json5-spec\"><em>specification</em> repository</a></strong>.</p><p>Note that we will never add any features that make JSON5 incompatible with ES5;that compatibility is a fundamental premise of JSON5.<a href=\"#ecmascript-compatibility\">*</a></p><p>To report bugs or request features regarding this <strong>JavaScript implementation</strong>of JSON5, please submit an issue to <strong><em>this</em> repository</strong>.</p><h3 id=\"security-vulnerabilities-and-disclosures\">Security Vulnerabilities and Disclosures</h3><p>To report a security vulnerability, please follow the follow the guidelinesdescribed in our <a href=\"/SECURITY.html\">security policy</a>.</p><h2 id=\"ecmascript-compatibility\">ECMAScript Compatibility</h2><p>While JSON5 aims to be fully compatible with ES5, there is one exception whereboth JSON and JSON5 are not. Both JSON and JSON5 allow unescaped line andparagraph separator characters (U+2028 and U+2029) in strings, however ES5 doesnot. A <a href=\"https://github.com/tc39/proposal-json-superset\">proposal</a> to allow thesecharacters in strings was adopted into ES2019, making JSON and JSON5 fullycompatible with ES2019.</p><h2 id=\"license\">License</h2><p>MIT. See <a href=\"/LICENSE.md\">LICENSE.md</a> for details.</p><h2 id=\"credits\">Credits</h2><p><a href=\"https://github.com/aseemk\">Aseem Kishore</a> founded this project.He wrote a <a href=\"https://aseemk.substack.com/p/ignore-the-f-ing-haters-json5\">blog post</a>about the journey and lessons learned 10 years in.</p><p><a href=\"http://bolinfest.com/\">Michael Bolin</a> independently arrived at and publishedsome of these same ideas with awesome explanations and detail. Recommendedreading: <a href=\"http://bolinfest.com/essays/json.html\">Suggested Improvements to JSON</a></p><p><a href=\"http://www.crockford.com/\">Douglas Crockford</a> of course designed and builtJSON, but his state machine diagrams on the <a href=\"http://json.org/\">JSON website</a>, ascheesy as it may sound, gave us motivation and confidence that building a newparser to implement these ideas was within reach! The originalimplementation of JSON5 was also modeled directly off of Doug\u2019s open-source<a href=\"https://github.com/douglascrockford/JSON-js/blob/03157639c7a7cddd2e9f032537f346f1a87c0f6d/json_parse.js\">json_parse.js</a> parser. We\u2019re grateful for that clean and well-documentedcode.</p><p><a href=\"https://github.com/MaxNanasy\">Max Nanasy</a> has been an early and prolificsupporter, contributing multiple patches and ideas.</p><p><a href=\"https://github.com/aeisenberg\">Andrew Eisenberg</a> contributed the original<code>stringify</code> method.</p><p><a href=\"https://github.com/jordanbtucker\">Jordan Tucker</a> has aligned JSON5 more closelywith ES5, wrote the official JSON5 specification, completely rewrote thecodebase from the ground up, and is actively maintaining this project.</p>      </section>      <footer>                <p>This project is maintained by <a href=\"https://github.com/json5\">json5</a></p>                <p><small>Hosted on GitHub Pages &mdash; Theme by <a href=\"https://github.com/orderedlist\">orderedlist</a></small></p>      </footer>    </div>    <script src=\"/assets/js/scale.fix.js\"></script>  </body></html>",
  "embeddings": []
}
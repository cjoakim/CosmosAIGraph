{
  "libtype": "npm",
  "libname": "jest-fetch-mock",
  "url": "https://github.com/jefflau/jest-fetch-mock#readme",
  "html": "<!DOCTYPE html><html  lang=\"en\"    data-color-mode=\"auto\" data-light-theme=\"light\" data-dark-theme=\"dark\"  data-a11y-animated-images=\"system\" data-a11y-link-underlines=\"true\"  >  <head>    <meta charset=\"utf-8\">  <link rel=\"dns-prefetch\" href=\"https://github.githubassets.com\">  <link rel=\"dns-prefetch\" href=\"https://avatars.githubusercontent.com\">  <link rel=\"dns-prefetch\" href=\"https://github-cloud.s3.amazonaws.com\">  <link rel=\"dns-prefetch\" href=\"https://user-images.githubusercontent.com/\">  <link rel=\"preconnect\" href=\"https://github.githubassets.com\" crossorigin>  <link rel=\"preconnect\" href=\"https://avatars.githubusercontent.com\">    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/light-0eace2597ca3.css\" /><link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/dark-a167e256da9c.css\" /><link data-color-theme=\"dark_dimmed\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/dark_dimmed-d11f2cf8009b.css\" /><link data-color-theme=\"dark_high_contrast\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/dark_high_contrast-ea7373db06c8.css\" /><link data-color-theme=\"dark_colorblind\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/dark_colorblind-afa99dcf40f7.css\" /><link data-color-theme=\"light_colorblind\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/light_colorblind-af6c685139ba.css\" /><link data-color-theme=\"light_high_contrast\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/light_high_contrast-578cdbc8a5a9.css\" /><link data-color-theme=\"light_tritanopia\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/light_tritanopia-5cb699a7e247.css\" /><link data-color-theme=\"dark_tritanopia\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/dark_tritanopia-9b32204967c6.css\" />    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/primer-primitives-2ef2a46b27ee.css\" />    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/primer-711f412bb361.css\" />    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/global-4803cd254267.css\" />    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/github-f4d857cbc96a.css\" />  <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/repository-6247ca238fd4.css\" /><link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/code-6d7b4ef0ea51.css\" />    <script type=\"application/json\" id=\"client-env\">{\"locale\":\"en\",\"featureFlags\":[\"code_vulnerability_scanning\",\"copilot_conversational_ux_history_refs\",\"copilot_chat_attach_knowledge\",\"copilot_chat_knowledge_base_copy\",\"copilot_smell_icebreaker_ux\",\"copilot_implicit_context\",\"docset_management_ui\",\"copilot_chat_settings\",\"failbot_handle_non_errors\",\"geojson_azure_maps\",\"image_metric_tracking\",\"marketing_forms_api_integration_contact_request\",\"marketing_pages_search_explore_provider\",\"turbo_experiment_risky\",\"sample_network_conn_type\",\"no_character_key_shortcuts_in_inputs\",\"custom_inp\",\"remove_child_patch\"]}</script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/wp-runtime-8e89ae260dbb.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_dompurify_dist_purify_js-6890e890956f.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_stacktrace-parser_dist_stack-trace-parser_esm_js-node_modules_github_bro-a4c183-79f9611c275b.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_hydro-analytics-client_dist_analytics-client_js-node_modules_gith-6a10dd-e66ebda625fb.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_failbot_failbot_ts-479802999bcc.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/environment-fe7570f3bc38.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_selector-observer_dist_index_esm_js-9f960d9b217c.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_behaviors_dist_esm_focus-zone_js-086f7a27bac0.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_relative-time-element_dist_index_js-c76945c5961a.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_delegated-events_dist_index_js-node_modules_github_details-dialog-elemen-29dc30-a2a71f11a507.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_auto-complete-element_dist_index_js-12366198e7a5.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_text-expander-element_dist_index_js-8a621df59e80.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_filter-input-element_dist_index_js-node_modules_github_remote-inp-b7d8f4-654130b7cde5.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_file-attachment-element_dist_index_js-node_modules_primer_view-co-5dccdf-e5e2b9fa3c0c.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/github-elements-e4eda4896b4e.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/element-registry-d5234b153a27.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_catalyst_lib_index_js-node_modules_github_hydro-analytics-client_-978abc0-add939c751ce.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_lit-html_lit-html_js-5b376145beff.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_mini-throttle_dist_index_js-node_modules_github_alive-client_dist-bf5aa2-1b562c29ab8e.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_morphdom_dist_morphdom-esm_js-5bff297a06de.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_turbo_dist_turbo_es2017-esm_js-c91f4ad18b62.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_color-convert_index_js-72c9fbde5ad4.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_scroll-anchoring_dist_scro-231ccf-aa129238d13b.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_behaviors_dist_esm_dimensions_js-node_modules_github_jtml_lib_index_js-95b84ee6bc34.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_session-resume_dist_index_js-node_modules_primer_behaviors_dist_e-da6ec6-3f39339c9d98.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_paste-markdown_dist_index_esm_js-node_modules_github_quote-select-67e0dc-1aa35af077a4.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_updatable-content_ts-ee3fc84d7fb0.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_behaviors_task-list_ts-app_assets_modules_github_onfocus_ts-app_ass-421cec-9de4213015af.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_sticky-scroll-into-view_ts-94209c43e6af.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_behaviors_ajax-error_ts-app_assets_modules_github_behaviors_include-467754-f9bd433e9591.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_behaviors_commenting_edit_ts-app_assets_modules_github_behaviors_ht-83c235-9285faa0e011.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_blob-anchor_ts-app_assets_modules_github_filter-sort_ts-app_assets_-c96432-da3733f430b8.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/behaviors-1fb9e5061509.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_delegated-events_dist_index_js-node_modules_github_catalyst_lib_index_js-d0256ebff5cd.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/notifications-global-352d84c6cc82.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_virtualized-list_es_index_js-node_modules_github_template-parts_lib_index_js-878844713bc9.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_delegated-events_dist_inde-c537341-c7f6a41a084c.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_ref-selector_ts-b593b93f23f5.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/codespaces-1a8626dd714a.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_filter-input-element_dist_index_js-node_modules_github_mini-throt-08ab15-3e0517baca99.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_file-attachment-element_dist_index_js-node_modules_github_mini-th-55cf52-e14cb4b719b4.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/repositories-69068e0899f9.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/code-menu-614feb194539.js\"></script>    <title>GitHub - jefflau/jest-fetch-mock: Jest mock for fetch</title>  <meta name=\"route-pattern\" content=\"/:user_id/:repository\" data-turbo-transient>  <meta name=\"route-controller\" content=\"files\" data-turbo-transient>  <meta name=\"route-action\" content=\"disambiguate\" data-turbo-transient>      <meta name=\"current-catalog-service-hash\" content=\"82c569b93da5c18ed649ebd4c2c79437db4611a6a1373e805a3cb001c64130b7\">  <meta name=\"request-id\" content=\"C514:2110FA:BF3BE9:11A5F0E:65E78F21\" data-pjax-transient=\"true\"/><meta name=\"html-safe-nonce\" content=\"4231192b0d6b0a0f5cd53211e9f03fc34e1db1fc461d88ac89e837619b22a3ef\" data-pjax-transient=\"true\"/><meta name=\"visitor-payload\" content=\"eyJyZWZlcnJlciI6IiIsInJlcXVlc3RfaWQiOiJDNTE0OjIxMTBGQTpCRjNCRTk6MTFBNUYwRTo2NUU3OEYyMSIsInZpc2l0b3JfaWQiOiIxMzkzMTU5MTQ5MTAzNTgzMDA5IiwicmVnaW9uX2VkZ2UiOiJpYWQiLCJyZWdpb25fcmVuZGVyIjoiaWFkIn0=\" data-pjax-transient=\"true\"/><meta name=\"visitor-hmac\" content=\"b410e9d992721bbf49f36d8023d66e3f620535a0e71a8c9fa8e93738d580031b\" data-pjax-transient=\"true\"/>    <meta name=\"hovercard-subject-tag\" content=\"repository:66015788\" data-turbo-transient>  <meta name=\"github-keyboard-shortcuts\" content=\"repository,copilot\" data-turbo-transient=\"true\" />    <meta name=\"selected-link\" value=\"repo_source\" data-turbo-transient>  <link rel=\"assets\" href=\"https://github.githubassets.com/\">    <meta name=\"google-site-verification\" content=\"c1kuD-K2HIVF635lypcsWPoD4kilo5-jA_wBFyT4uMY\">  <meta name=\"google-site-verification\" content=\"KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU\">  <meta name=\"google-site-verification\" content=\"ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA\">  <meta name=\"google-site-verification\" content=\"GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc\">  <meta name=\"google-site-verification\" content=\"Apib7-x98H0j5cPqHWwSMm6dNU4GmODRoqxLiDzdx9I\"><meta name=\"octolytics-url\" content=\"https://collector.github.com/github/collect\" />  <meta name=\"analytics-location\" content=\"/&lt;user-name&gt;/&lt;repo-name&gt;\" data-turbo-transient=\"true\" />        <meta name=\"user-login\" content=\"\">      <meta name=\"viewport\" content=\"width=device-width\">          <meta name=\"description\" content=\"Jest mock for fetch. Contribute to jefflau/jest-fetch-mock development by creating an account on GitHub.\">      <link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"/opensearch.xml\" title=\"GitHub\">    <link rel=\"fluid-icon\" href=\"https://github.com/fluidicon.png\" title=\"GitHub\">    <meta property=\"fb:app_id\" content=\"1401488693436528\">    <meta name=\"apple-itunes-app\" content=\"app-id=1477376905, app-argument=https://github.com/jefflau/jest-fetch-mock\" />      <meta name=\"twitter:image:src\" content=\"https://opengraph.githubassets.com/3b21b774bd521a13975f985e07313880b058faff8681009323df113d3c535532/jefflau/jest-fetch-mock\" /><meta name=\"twitter:site\" content=\"@github\" /><meta name=\"twitter:card\" content=\"summary_large_image\" /><meta name=\"twitter:title\" content=\"GitHub - jefflau/jest-fetch-mock: Jest mock for fetch\" /><meta name=\"twitter:description\" content=\"Jest mock for fetch. Contribute to jefflau/jest-fetch-mock development by creating an account on GitHub.\" />      <meta property=\"og:image\" content=\"https://opengraph.githubassets.com/3b21b774bd521a13975f985e07313880b058faff8681009323df113d3c535532/jefflau/jest-fetch-mock\" /><meta property=\"og:image:alt\" content=\"Jest mock for fetch. Contribute to jefflau/jest-fetch-mock development by creating an account on GitHub.\" /><meta property=\"og:image:width\" content=\"1200\" /><meta property=\"og:image:height\" content=\"600\" /><meta property=\"og:site_name\" content=\"GitHub\" /><meta property=\"og:type\" content=\"object\" /><meta property=\"og:title\" content=\"GitHub - jefflau/jest-fetch-mock: Jest mock for fetch\" /><meta property=\"og:url\" content=\"https://github.com/jefflau/jest-fetch-mock\" /><meta property=\"og:description\" content=\"Jest mock for fetch. Contribute to jefflau/jest-fetch-mock development by creating an account on GitHub.\" />              <meta name=\"hostname\" content=\"github.com\">        <meta name=\"expected-hostname\" content=\"github.com\">  <meta http-equiv=\"x-pjax-version\" content=\"b6359021f9f177e6a5b8f790ab4f6d96e8e27e7d43e82b5497fb62aa3684fc01\" data-turbo-track=\"reload\">  <meta http-equiv=\"x-pjax-csp-version\" content=\"5dcfbec3488c5fd5a334e287ce6a17058b7d4beb91db2d4d184e4d55bbf1d7d7\" data-turbo-track=\"reload\">  <meta http-equiv=\"x-pjax-css-version\" content=\"d33c7c2fcff40783f3002896023f41e2c17ec62b12ddbe7434e2001d743fb853\" data-turbo-track=\"reload\">  <meta http-equiv=\"x-pjax-js-version\" content=\"7e44825d814e37051501f7ae57d62db356d7cef9ef4bbb587e9fa29fc554cfb7\" data-turbo-track=\"reload\">  <meta name=\"turbo-cache-control\" content=\"no-preview\" data-turbo-transient=\"\">      <meta data-hydrostats=\"publish\">  <meta name=\"go-import\" content=\"github.com/jefflau/jest-fetch-mock git https://github.com/jefflau/jest-fetch-mock.git\">  <meta name=\"octolytics-dimension-user_id\" content=\"1221141\" /><meta name=\"octolytics-dimension-user_login\" content=\"jefflau\" /><meta name=\"octolytics-dimension-repository_id\" content=\"66015788\" /><meta name=\"octolytics-dimension-repository_nwo\" content=\"jefflau/jest-fetch-mock\" /><meta name=\"octolytics-dimension-repository_public\" content=\"true\" /><meta name=\"octolytics-dimension-repository_is_fork\" content=\"false\" /><meta name=\"octolytics-dimension-repository_network_root_id\" content=\"66015788\" /><meta name=\"octolytics-dimension-repository_network_root_nwo\" content=\"jefflau/jest-fetch-mock\" />    <link rel=\"canonical\" href=\"https://github.com/jefflau/jest-fetch-mock\" data-turbo-transient>  <meta name=\"turbo-body-classes\" content=\"logged-out env-production page-responsive\">  <meta name=\"browser-stats-url\" content=\"https://api.github.com/_private/browser/stats\">  <meta name=\"browser-errors-url\" content=\"https://api.github.com/_private/browser/errors\">  <link rel=\"mask-icon\" href=\"https://github.githubassets.com/assets/pinned-octocat-093da3e6fa40.svg\" color=\"#000000\">  <link rel=\"alternate icon\" class=\"js-site-favicon\" type=\"image/png\" href=\"https://github.githubassets.com/favicons/favicon.png\">  <link rel=\"icon\" class=\"js-site-favicon\" type=\"image/svg+xml\" href=\"https://github.githubassets.com/favicons/favicon.svg\"><meta name=\"theme-color\" content=\"#1e2327\"><meta name=\"color-scheme\" content=\"light dark\" />  <link rel=\"manifest\" href=\"/manifest.json\" crossOrigin=\"use-credentials\">  </head>  <body class=\"logged-out env-production page-responsive\" style=\"word-wrap: break-word;\">    <div data-turbo-body class=\"logged-out env-production page-responsive\" style=\"word-wrap: break-word;\">          <div class=\"position-relative js-header-wrapper \">      <a href=\"#start-of-content\" class=\"px-2 py-4 color-bg-accent-emphasis color-fg-on-emphasis show-on-focus js-skip-to-content\">Skip to content</a>      <span data-view-component=\"true\" class=\"progress-pjax-loader Progress position-fixed width-full\">    <span style=\"width: 0%;\" data-view-component=\"true\" class=\"Progress-item progress-pjax-loader-bar left-0 top-0 color-bg-accent-emphasis\"></span></span>              <script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Button_IconButton_js-node_modules_primer_react_lib--23bcad-a89698f38643.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/keyboard-shortcuts-dialog-a23eda2bcf8d.js\"></script><react-partial  partial-name=\"keyboard-shortcuts-dialog\"  data-ssr=\"false\">    <script type=\"application/json\" data-target=\"react-partial.embeddedData\">{\"props\":{}}</script>  <div data-target=\"react-partial.reactRoot\"></div></react-partial>                          <script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_delegated-events_dist_inde-94fd67-99519581d0f8.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/sessions-585a7232e50a.js\"></script><header class=\"Header-old header-logged-out js-details-container Details position-relative f4 py-3\" role=\"banner\" data-color-mode=light data-light-theme=light data-dark-theme=dark>  <button type=\"button\" class=\"Header-backdrop d-lg-none border-0 position-fixed top-0 left-0 width-full height-full js-details-target\" aria-label=\"Toggle navigation\">    <span class=\"d-none\">Toggle navigation</span>  </button>  <div class=\" d-flex flex-column flex-lg-row flex-items-center p-responsive height-full position-relative z-1\">    <div class=\"d-flex flex-justify-between flex-items-center width-full width-lg-auto\">      <a class=\"mr-lg-3 color-fg-inherit flex-order-2\" href=\"https://github.com/\" aria-label=\"Homepage\" data-ga-click=\"(Logged out) Header, go to homepage, icon:logo-wordmark\">        <svg height=\"32\" aria-hidden=\"true\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" data-view-component=\"true\" class=\"octicon octicon-mark-github\">    <path d=\"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z\"></path></svg>      </a>      <div class=\"flex-1\">        <a href=\"/login?return_to=https%3A%2F%2Fgithub.com%2Fjefflau%2Fjest-fetch-mock\"          class=\"d-inline-block d-lg-none flex-order-1 f5 no-underline border color-border-default rounded-2 px-2 py-1 color-fg-inherit\"          data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/jefflau/jest-fetch-mock&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"95162561e7c1ee0a0441c94c774abae2f32d4059261d2a67b9ffc942a7a40b86\"          data-ga-click=\"(Logged out) Header, clicked Sign in, text:sign-in\">          Sign in        </a>      </div>      <div class=\"flex-1 flex-order-2 text-right\">        <button aria-label=\"Toggle navigation\" aria-expanded=\"false\" type=\"button\" data-view-component=\"true\" class=\"js-details-target Button--link Button--medium Button d-lg-none color-fg-inherit p-1\">  <span class=\"Button-content\">    <span class=\"Button-label\"><div class=\"HeaderMenu-toggle-bar rounded my-1\"></div>            <div class=\"HeaderMenu-toggle-bar rounded my-1\"></div>            <div class=\"HeaderMenu-toggle-bar rounded my-1\"></div></span>  </span></button>      </div>    </div>    <div class=\"HeaderMenu--logged-out p-responsive height-fit position-lg-relative d-lg-flex flex-column flex-auto pt-7 pb-4 top-0\">      <div class=\"header-menu-wrapper d-flex flex-column flex-self-end flex-lg-row flex-justify-between flex-auto p-3 p-lg-0 rounded rounded-lg-0 mt-3 mt-lg-0\">          <nav class=\"mt-0 px-3 px-lg-0 mb-3 mb-lg-0\" aria-label=\"Global\">            <ul class=\"d-lg-flex list-style-none\">                <li class=\"HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item\">      <button type=\"button\" class=\"HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-3 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target\" aria-expanded=\"false\">        Product        <svg opacity=\"0.5\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-chevron-down HeaderMenu-icon ml-1\">    <path d=\"M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z\"></path></svg>      </button>      <div class=\"HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 py-2 py-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 d-lg-flex dropdown-menu-wide\">          <div class=\"px-lg-4 border-lg-right mb-4 mb-lg-0 pr-lg-7\">            <ul class=\"list-style-none f5\" >                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}\" href=\"/features/actions\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-workflow color-fg-subtle mr-3\">    <path d=\"M1 3a2 2 0 0 1 2-2h6.5a2 2 0 0 1 2 2v6.5a2 2 0 0 1-2 2H7v4.063C7 16.355 7.644 17 8.438 17H12.5v-2.5a2 2 0 0 1 2-2H21a2 2 0 0 1 2 2V21a2 2 0 0 1-2 2h-6.5a2 2 0 0 1-2-2v-2.5H8.437A2.939 2.939 0 0 1 5.5 15.562V11.5H3a2 2 0 0 1-2-2Zm2-.5a.5.5 0 0 0-.5.5v6.5a.5.5 0 0 0 .5.5h6.5a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5ZM14.5 14a.5.5 0 0 0-.5.5V21a.5.5 0 0 0 .5.5H21a.5.5 0 0 0 .5-.5v-6.5a.5.5 0 0 0-.5-.5Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Actions</div>        Automate any workflow      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}\" href=\"/features/packages\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-package color-fg-subtle mr-3\">    <path d=\"M12.876.64V.639l8.25 4.763c.541.313.875.89.875 1.515v9.525a1.75 1.75 0 0 1-.875 1.516l-8.25 4.762a1.748 1.748 0 0 1-1.75 0l-8.25-4.763a1.75 1.75 0 0 1-.875-1.515V6.917c0-.625.334-1.202.875-1.515L11.126.64a1.748 1.748 0 0 1 1.75 0Zm-1 1.298L4.251 6.34l7.75 4.474 7.75-4.474-7.625-4.402a.248.248 0 0 0-.25 0Zm.875 19.123 7.625-4.402a.25.25 0 0 0 .125-.216V7.639l-7.75 4.474ZM3.501 7.64v8.803c0 .09.048.172.125.216l7.625 4.402v-8.947Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Packages</div>        Host and manage packages      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}\" href=\"/features/security\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-shield-check color-fg-subtle mr-3\">    <path d=\"M16.53 9.78a.75.75 0 0 0-1.06-1.06L11 13.19l-1.97-1.97a.75.75 0 0 0-1.06 1.06l2.5 2.5a.75.75 0 0 0 1.06 0l5-5Z\"></path><path d=\"m12.54.637 8.25 2.675A1.75 1.75 0 0 1 22 4.976V10c0 6.19-3.771 10.704-9.401 12.83a1.704 1.704 0 0 1-1.198 0C5.77 20.705 2 16.19 2 10V4.976c0-.758.489-1.43 1.21-1.664L11.46.637a1.748 1.748 0 0 1 1.08 0Zm-.617 1.426-8.25 2.676a.249.249 0 0 0-.173.237V10c0 5.46 3.28 9.483 8.43 11.426a.199.199 0 0 0 .14 0C17.22 19.483 20.5 15.461 20.5 10V4.976a.25.25 0 0 0-.173-.237l-8.25-2.676a.253.253 0 0 0-.154 0Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Security</div>        Find and fix vulnerabilities      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}\" href=\"/features/codespaces\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-codespaces color-fg-subtle mr-3\">    <path d=\"M3.5 3.75C3.5 2.784 4.284 2 5.25 2h13.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 18.75 13H5.25a1.75 1.75 0 0 1-1.75-1.75Zm-2 12c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v4a1.75 1.75 0 0 1-1.75 1.75H3.25a1.75 1.75 0 0 1-1.75-1.75ZM5.25 3.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h13.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Zm-2 12a.25.25 0 0 0-.25.25v4c0 .138.112.25.25.25h17.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25Z\"></path><path d=\"M10 17.75a.75.75 0 0 1 .75-.75h6.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1-.75-.75Zm-4 0a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1-.75-.75Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Codespaces</div>        Instant dev environments      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Copilot&quot;,&quot;label&quot;:&quot;ref_cta:Copilot;&quot;}\" href=\"/features/copilot\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-copilot color-fg-subtle mr-3\">    <path d=\"M23.922 16.992c-.861 1.495-5.859 5.023-11.922 5.023-6.063 0-11.061-3.528-11.922-5.023A.641.641 0 0 1 0 16.736v-2.869a.841.841 0 0 1 .053-.22c.372-.935 1.347-2.292 2.605-2.656.167-.429.414-1.055.644-1.517a10.195 10.195 0 0 1-.052-1.086c0-1.331.282-2.499 1.132-3.368.397-.406.89-.717 1.474-.952 1.399-1.136 3.392-2.093 6.122-2.093 2.731 0 4.767.957 6.166 2.093.584.235 1.077.546 1.474.952.85.869 1.132 2.037 1.132 3.368 0 .368-.014.733-.052 1.086.23.462.477 1.088.644 1.517 1.258.364 2.233 1.721 2.605 2.656a.832.832 0 0 1 .053.22v2.869a.641.641 0 0 1-.078.256ZM12.172 11h-.344a4.323 4.323 0 0 1-.355.508C10.703 12.455 9.555 13 7.965 13c-1.725 0-2.989-.359-3.782-1.259a2.005 2.005 0 0 1-.085-.104L4 11.741v6.585c1.435.779 4.514 2.179 8 2.179 3.486 0 6.565-1.4 8-2.179v-6.585l-.098-.104s-.033.045-.085.104c-.793.9-2.057 1.259-3.782 1.259-1.59 0-2.738-.545-3.508-1.492a4.323 4.323 0 0 1-.355-.508h-.016.016Zm.641-2.935c.136 1.057.403 1.913.878 2.497.442.544 1.134.938 2.344.938 1.573 0 2.292-.337 2.657-.751.384-.435.558-1.15.558-2.361 0-1.14-.243-1.847-.705-2.319-.477-.488-1.319-.862-2.824-1.025-1.487-.161-2.192.138-2.533.529-.269.307-.437.808-.438 1.578v.021c0 .265.021.562.063.893Zm-1.626 0c.042-.331.063-.628.063-.894v-.02c-.001-.77-.169-1.271-.438-1.578-.341-.391-1.046-.69-2.533-.529-1.505.163-2.347.537-2.824 1.025-.462.472-.705 1.179-.705 2.319 0 1.211.175 1.926.558 2.361.365.414 1.084.751 2.657.751 1.21 0 1.902-.394 2.344-.938.475-.584.742-1.44.878-2.497Z\"></path><path d=\"M14.5 14.25a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Zm-5 0a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Copilot</div>        Write better code with AI      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}\" href=\"/features/code-review\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-code-review color-fg-subtle mr-3\">    <path d=\"M10.3 6.74a.75.75 0 0 1-.04 1.06l-2.908 2.7 2.908 2.7a.75.75 0 1 1-1.02 1.1l-3.5-3.25a.75.75 0 0 1 0-1.1l3.5-3.25a.75.75 0 0 1 1.06.04Zm3.44 1.06a.75.75 0 1 1 1.02-1.1l3.5 3.25a.75.75 0 0 1 0 1.1l-3.5 3.25a.75.75 0 1 1-1.02-1.1l2.908-2.7-2.908-2.7Z\"></path><path d=\"M1.5 4.25c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v12.5a1.75 1.75 0 0 1-1.75 1.75h-9.69l-3.573 3.573A1.458 1.458 0 0 1 5 21.043V18.5H3.25a1.75 1.75 0 0 1-1.75-1.75ZM3.25 4a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h2.5a.75.75 0 0 1 .75.75v3.19l3.72-3.72a.749.749 0 0 1 .53-.22h10a.25.25 0 0 0 .25-.25V4.25a.25.25 0 0 0-.25-.25Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Code review</div>        Manage code changes      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}\" href=\"/features/issues\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-issue-opened color-fg-subtle mr-3\">    <path d=\"M12 1c6.075 0 11 4.925 11 11s-4.925 11-11 11S1 18.075 1 12 5.925 1 12 1ZM2.5 12a9.5 9.5 0 0 0 9.5 9.5 9.5 9.5 0 0 0 9.5-9.5A9.5 9.5 0 0 0 12 2.5 9.5 9.5 0 0 0 2.5 12Zm9.5 2a2 2 0 1 1-.001-3.999A2 2 0 0 1 12 14Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Issues</div>        Plan and track work      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}\" href=\"/features/discussions\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-comment-discussion color-fg-subtle mr-3\">    <path d=\"M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 14.25 14H8.061l-2.574 2.573A1.458 1.458 0 0 1 3 15.543V14H1.75A1.75 1.75 0 0 1 0 12.25v-9.5C0 1.784.784 1 1.75 1ZM1.5 2.75v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Z\"></path><path d=\"M22.5 8.75a.25.25 0 0 0-.25-.25h-3.5a.75.75 0 0 1 0-1.5h3.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 22.25 20H21v1.543a1.457 1.457 0 0 1-2.487 1.03L15.939 20H10.75A1.75 1.75 0 0 1 9 18.25v-1.465a.75.75 0 0 1 1.5 0v1.465c0 .138.112.25.25.25h5.5a.75.75 0 0 1 .53.22l2.72 2.72v-2.19a.75.75 0 0 1 .75-.75h2a.25.25 0 0 0 .25-.25v-9.5Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Discussions</div>        Collaborate outside of code      </div>    </a></li>            </ul>          </div>          <div class=\"px-lg-4\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"product-explore-heading\">Explore</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"product-explore-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to All features&quot;,&quot;label&quot;:&quot;ref_cta:All features;&quot;}\" href=\"/features\">      All features    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Documentation&quot;,&quot;label&quot;:&quot;ref_cta:Documentation;&quot;}\" href=\"https://docs.github.com\">      Documentation    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to GitHub Skills&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Skills;&quot;}\" href=\"https://skills.github.com/\">      GitHub Skills    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Blog&quot;,&quot;label&quot;:&quot;ref_cta:Blog;&quot;}\" href=\"https://github.blog\">      Blog    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>            </ul>          </div>      </div></li>                <li class=\"HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item\">      <button type=\"button\" class=\"HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-3 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target\" aria-expanded=\"false\">        Solutions        <svg opacity=\"0.5\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-chevron-down HeaderMenu-icon ml-1\">    <path d=\"M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z\"></path></svg>      </button>      <div class=\"HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 py-2 py-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 px-lg-4\">          <div class=\"border-bottom pb-3 mb-3\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"solutions-for-heading\">For</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"solutions-for-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Enterprise&quot;,&quot;label&quot;:&quot;ref_cta:Enterprise;&quot;}\" href=\"/enterprise\">      Enterprise    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Teams&quot;,&quot;label&quot;:&quot;ref_cta:Teams;&quot;}\" href=\"/team\">      Teams    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Startups&quot;,&quot;label&quot;:&quot;ref_cta:Startups;&quot;}\" href=\"/enterprise/startups\">      Startups    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Education&quot;,&quot;label&quot;:&quot;ref_cta:Education;&quot;}\" href=\"https://education.github.com\">      Education    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>            </ul>          </div>          <div class=\"border-bottom pb-3 mb-3\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"solutions-by-solution-heading\">By Solution</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"solutions-by-solution-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to CI/CD &amp;amp; Automation&quot;,&quot;label&quot;:&quot;ref_cta:CI/CD &amp;amp; Automation;&quot;}\" href=\"/solutions/ci-cd/\">      CI/CD &amp; Automation    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to DevOps&quot;,&quot;label&quot;:&quot;ref_cta:DevOps;&quot;}\" href=\"/solutions/devops/\">      DevOps    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to DevSecOps&quot;,&quot;label&quot;:&quot;ref_cta:DevSecOps;&quot;}\" href=\"https://resources.github.com/devops/fundamentals/devsecops/\">      DevSecOps    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>            </ul>          </div>          <div class=\"\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"solutions-resources-heading\">Resources</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"solutions-resources-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Learning Pathways&quot;,&quot;label&quot;:&quot;ref_cta:Learning Pathways;&quot;}\" href=\"https://resources.github.com/learn/pathways/\">      Learning Pathways    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to White papers, Ebooks, Webinars&quot;,&quot;label&quot;:&quot;ref_cta:White papers, Ebooks, Webinars;&quot;}\" href=\"https://resources.github.com/\">      White papers, Ebooks, Webinars    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Customer Stories&quot;,&quot;label&quot;:&quot;ref_cta:Customer Stories;&quot;}\" href=\"/customer-stories\">      Customer Stories    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Partners&quot;,&quot;label&quot;:&quot;ref_cta:Partners;&quot;}\" href=\"https://partner.github.com/\">      Partners    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>            </ul>          </div>      </div></li>                <li class=\"HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item\">      <button type=\"button\" class=\"HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-3 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target\" aria-expanded=\"false\">        Open Source        <svg opacity=\"0.5\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-chevron-down HeaderMenu-icon ml-1\">    <path d=\"M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z\"></path></svg>      </button>      <div class=\"HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 py-2 py-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 px-lg-4\">          <div class=\"border-bottom pb-3 mb-3\">            <ul class=\"list-style-none f5\" >                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}\" href=\"/sponsors\">            <div>        <div class=\"color-fg-default h4\">GitHub Sponsors</div>        Fund open source developers      </div>    </a></li>            </ul>          </div>          <div class=\"border-bottom pb-3 mb-3\">            <ul class=\"list-style-none f5\" >                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}\" href=\"/readme\">            <div>        <div class=\"color-fg-default h4\">The ReadME Project</div>        GitHub community articles      </div>    </a></li>            </ul>          </div>          <div class=\"\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"open-source-repositories-heading\">Repositories</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"open-source-repositories-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to Topics&quot;,&quot;label&quot;:&quot;ref_cta:Topics;&quot;}\" href=\"/topics\">      Topics    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to Trending&quot;,&quot;label&quot;:&quot;ref_cta:Trending;&quot;}\" href=\"/trending\">      Trending    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to Collections&quot;,&quot;label&quot;:&quot;ref_cta:Collections;&quot;}\" href=\"/collections\">      Collections    </a></li>            </ul>          </div>      </div></li>                <li class=\"HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item\">    <a class=\"HeaderMenu-link no-underline px-0 px-lg-2 py-3 py-lg-2 d-block d-lg-inline-block\" data-analytics-event=\"{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}\" href=\"/pricing\">Pricing</a></li>            </ul>          </nav>        <div class=\"d-lg-flex flex-items-center mb-3 mb-lg-0 text-center text-lg-left ml-3\" style=\"\">                <qbsearch-input class=\"search-input\" data-scope=\"repo:jefflau/jest-fetch-mock\" data-custom-scopes-path=\"/search/custom_scopes\" data-delete-custom-scopes-csrf=\"493hEumRV56lbdf1p_TI-WcsWznRfk0BdJVZ33TGff8Alfw-LoTacWANsPPE1rqQEsVUJvJRAB-lyjc0ZRIClw\" data-max-custom-scopes=\"10\" data-header-redesign-enabled=\"false\" data-initial-value=\"\" data-blackbird-suggestions-path=\"/search/suggestions\" data-jump-to-suggestions-path=\"/_graphql/GetSuggestedNavigationDestinations\" data-current-repository=\"jefflau/jest-fetch-mock\" data-current-org=\"\" data-current-owner=\"jefflau\" data-logged-in=\"false\" data-copilot-chat-enabled=\"false\" data-blackbird-indexed-repo-csrf=\"<esi:include src=&quot;/_esi/rails_csrf_token_form_hidden?r=WJ8aAJKDdOlJVZlLPmsIFjOriFfswsSPH3gC%2BCWK9nfHimebQL7Pj%2BWcf26UrChu0uEn7MKteauI05sJvLcoI3S28s39qVOsACQ8ur7WRXCcyg%2FFEOrl8yBAKS%2BBGqs3ilq1EZkPnlJ4VvJ3GjivSXiDIqPNTIrnTX81JGjKA%2FXz553Ks57J2i9TSxB%2FnB3BMcws%2FgEeduZWiQLdW1m1APNRYU5I8N2rwOSNfnAbyGvd%2FLsap0pCKyJnVki8fFvE8u%2BGOIFvLiOJ9MVRv0baKBDwcb2KIkswwFIJ4eEJkAV%2Bm7Lg%2BEGe%2BncjHnkgUa79oB4GpdNJyEN0Rciuc7U%2BtWp9dn%2Fs%2FOUgTtkunJHstrzgByMgpHSS6eWbt4hiJv3msOZVQ3JNVBlgnsthXVE%2FnurZs6x33agW7huzv9gUzoo0VOxaoNySZ%2BFVdVpwnFlE2gZoZZqWB3AnU%2FHAkIjrgKY7tCpCJOxKN8WNzAR5YUnNwfvyA6CijmQgnQdQbRolHdIY%2BFGeTfCo3Mjy6gein%2B4N8AJzbg%3D%3D--t%2BgWd67m5kplJ6af--gR1YVttfvfuUGD%2BEcjxXLw%3D%3D&quot; />\">  <div    class=\"search-input-container search-with-dialog position-relative d-flex flex-row flex-items-center mr-4 rounded\"    data-action=\"click:qbsearch-input#searchInputContainerClicked\"  >      <button        type=\"button\"        class=\"header-search-button placeholder  input-button form-control d-flex flex-1 flex-self-stretch flex-items-center no-wrap width-full py-0 pl-2 pr-0 text-left border-0 box-shadow-none\"        data-target=\"qbsearch-input.inputButton\"        placeholder=\"Search or jump to...\"        data-hotkey=s,/        autocapitalize=\"off\"        data-action=\"click:qbsearch-input#handleExpand\"      >        <div class=\"mr-2 color-fg-muted\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-search\">    <path d=\"M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z\"></path></svg>        </div>        <span class=\"flex-1\" data-target=\"qbsearch-input.inputButtonText\">Search or jump to...</span>          <div class=\"d-flex\" data-target=\"qbsearch-input.hotkeyIndicator\">            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"20\" aria-hidden=\"true\" class=\"mr-1\"><path fill=\"none\" stroke=\"#979A9C\" opacity=\".4\" d=\"M3.5.5h12c1.7 0 3 1.3 3 3v13c0 1.7-1.3 3-3 3h-12c-1.7 0-3-1.3-3-3v-13c0-1.7 1.3-3 3-3z\"></path><path fill=\"#979A9C\" d=\"M11.8 6L8 15.1h-.9L10.8 6h1z\"></path></svg>          </div>      </button>    <input type=\"hidden\" name=\"type\" class=\"js-site-search-type-field\">    <div class=\"Overlay--hidden \" data-modal-dialog-overlay>  <modal-dialog data-action=\"close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose\" data-target=\"qbsearch-input.searchSuggestionsDialog\" role=\"dialog\" id=\"search-suggestions-dialog\" aria-modal=\"true\" aria-labelledby=\"search-suggestions-dialog-header\" data-view-component=\"true\" class=\"Overlay Overlay--width-large Overlay--height-auto\">      <h1 id=\"search-suggestions-dialog-header\" class=\"sr-only\">Search code, repositories, users, issues, pull requests...</h1>    <div class=\"Overlay-body Overlay-body--paddingNone\">                <div data-view-component=\"true\">        <div class=\"search-suggestions position-fixed width-full color-shadow-large border color-fg-default color-bg-default overflow-hidden d-flex flex-column query-builder-container\"          style=\"border-radius: 12px;\"          data-target=\"qbsearch-input.queryBuilderContainer\"          hidden        >          <!-- '\"` --><!-- </textarea></xmp> --></option></form><form id=\"query-builder-test-form\" action=\"\" accept-charset=\"UTF-8\" method=\"get\">  <query-builder data-target=\"qbsearch-input.queryBuilder\" id=\"query-builder-query-builder-test\" data-filter-key=\":\" data-view-component=\"true\" class=\"QueryBuilder search-query-builder\">    <div class=\"FormControl FormControl--fullWidth\">      <label id=\"query-builder-test-label\" for=\"query-builder-test\" class=\"FormControl-label sr-only\">        Search      </label>      <div        class=\"QueryBuilder-StyledInput width-fit \"        data-target=\"query-builder.styledInput\"      >          <span id=\"query-builder-test-leadingvisual-wrap\" class=\"FormControl-input-leadingVisualWrap QueryBuilder-leadingVisualWrap\">            <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-search FormControl-input-leadingVisual\">    <path d=\"M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z\"></path></svg>          </span>        <div data-target=\"query-builder.styledInputContainer\" class=\"QueryBuilder-StyledInputContainer\">          <div            aria-hidden=\"true\"            class=\"QueryBuilder-StyledInputContent\"            data-target=\"query-builder.styledInputContent\"          ></div>          <div class=\"QueryBuilder-InputWrapper\">            <div aria-hidden=\"true\" class=\"QueryBuilder-Sizer\" data-target=\"query-builder.sizer\"></div>            <input id=\"query-builder-test\" name=\"query-builder-test\" value=\"\" autocomplete=\"off\" type=\"text\" role=\"combobox\" spellcheck=\"false\" aria-expanded=\"false\" aria-describedby=\"validation-7dbeec11-6360-40e0-8024-b7dba26a14c9\" data-target=\"query-builder.input\" data-action=\"          input:query-builder#inputChange          blur:query-builder#inputBlur          keydown:query-builder#inputKeydown          focus:query-builder#inputFocus        \" data-view-component=\"true\" class=\"FormControl-input QueryBuilder-Input FormControl-medium\" />          </div>        </div>          <span class=\"sr-only\" id=\"query-builder-test-clear\">Clear</span>          <button role=\"button\" id=\"query-builder-test-clear-button\" aria-labelledby=\"query-builder-test-clear query-builder-test-label\" data-target=\"query-builder.clearButton\" data-action=\"                click:query-builder#clear                focus:query-builder#clearButtonFocus                blur:query-builder#clearButtonBlur              \" variant=\"small\" hidden=\"hidden\" type=\"button\" data-view-component=\"true\" class=\"Button Button--iconOnly Button--invisible Button--medium mr-1 px-2 py-0 d-flex flex-items-center rounded-1 color-fg-muted\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x-circle-fill Button-visual\">    <path d=\"M2.343 13.657A8 8 0 1 1 13.658 2.343 8 8 0 0 1 2.343 13.657ZM6.03 4.97a.751.751 0 0 0-1.042.018.751.751 0 0 0-.018 1.042L6.94 8 4.97 9.97a.749.749 0 0 0 .326 1.275.749.749 0 0 0 .734-.215L8 9.06l1.97 1.97a.749.749 0 0 0 1.275-.326.749.749 0 0 0-.215-.734L9.06 8l1.97-1.97a.749.749 0 0 0-.326-1.275.749.749 0 0 0-.734.215L8 6.94Z\"></path></svg></button>      </div>      <template id=\"search-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-search\">    <path d=\"M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z\"></path></svg></template><template id=\"code-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code\">    <path d=\"m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z\"></path></svg></template><template id=\"file-code-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-file-code\">    <path d=\"M4 1.75C4 .784 4.784 0 5.75 0h5.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v8.586A1.75 1.75 0 0 1 14.25 15h-9a.75.75 0 0 1 0-1.5h9a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 10 4.25V1.5H5.75a.25.25 0 0 0-.25.25v2.5a.75.75 0 0 1-1.5 0Zm1.72 4.97a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734l1.47-1.47-1.47-1.47a.75.75 0 0 1 0-1.06ZM3.28 7.78 1.81 9.25l1.47 1.47a.751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018l-2-2a.75.75 0 0 1 0-1.06l2-2a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Zm8.22-6.218V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg></template><template id=\"history-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-history\">    <path d=\"m.427 1.927 1.215 1.215a8.002 8.002 0 1 1-1.6 5.685.75.75 0 1 1 1.493-.154 6.5 6.5 0 1 0 1.18-4.458l1.358 1.358A.25.25 0 0 1 3.896 6H.25A.25.25 0 0 1 0 5.75V2.104a.25.25 0 0 1 .427-.177ZM7.75 4a.75.75 0 0 1 .75.75v2.992l2.028.812a.75.75 0 0 1-.557 1.392l-2.5-1A.751.751 0 0 1 7 8.25v-3.5A.75.75 0 0 1 7.75 4Z\"></path></svg></template><template id=\"repo-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo\">    <path d=\"M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.495 2.495 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.486 2.486 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.249.249 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z\"></path></svg></template><template id=\"bookmark-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-bookmark\">    <path d=\"M3 2.75C3 1.784 3.784 1 4.75 1h6.5c.966 0 1.75.784 1.75 1.75v11.5a.75.75 0 0 1-1.227.579L8 11.722l-3.773 3.107A.751.751 0 0 1 3 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v9.91l3.023-2.489a.75.75 0 0 1 .954 0l3.023 2.49V2.75a.25.25 0 0 0-.25-.25Z\"></path></svg></template><template id=\"plus-circle-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-plus-circle\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm7.25-3.25v2.5h2.5a.75.75 0 0 1 0 1.5h-2.5v2.5a.75.75 0 0 1-1.5 0v-2.5h-2.5a.75.75 0 0 1 0-1.5h2.5v-2.5a.75.75 0 0 1 1.5 0Z\"></path></svg></template><template id=\"circle-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-dot-fill\">    <path d=\"M8 4a4 4 0 1 1 0 8 4 4 0 0 1 0-8Z\"></path></svg></template><template id=\"trash-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-trash\">    <path d=\"M11 1.75V3h2.25a.75.75 0 0 1 0 1.5H2.75a.75.75 0 0 1 0-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75ZM4.496 6.675l.66 6.6a.25.25 0 0 0 .249.225h5.19a.25.25 0 0 0 .249-.225l.66-6.6a.75.75 0 0 1 1.492.149l-.66 6.6A1.748 1.748 0 0 1 10.595 15h-5.19a1.75 1.75 0 0 1-1.741-1.575l-.66-6.6a.75.75 0 1 1 1.492-.15ZM6.5 1.75V3h3V1.75a.25.25 0 0 0-.25-.25h-2.5a.25.25 0 0 0-.25.25Z\"></path></svg></template><template id=\"team-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-people\">    <path d=\"M2 5.5a3.5 3.5 0 1 1 5.898 2.549 5.508 5.508 0 0 1 3.034 4.084.75.75 0 1 1-1.482.235 4 4 0 0 0-7.9 0 .75.75 0 0 1-1.482-.236A5.507 5.507 0 0 1 3.102 8.05 3.493 3.493 0 0 1 2 5.5ZM11 4a3.001 3.001 0 0 1 2.22 5.018 5.01 5.01 0 0 1 2.56 3.012.749.749 0 0 1-.885.954.752.752 0 0 1-.549-.514 3.507 3.507 0 0 0-2.522-2.372.75.75 0 0 1-.574-.73v-.352a.75.75 0 0 1 .416-.672A1.5 1.5 0 0 0 11 5.5.75.75 0 0 1 11 4Zm-5.5-.5a2 2 0 1 0-.001 3.999A2 2 0 0 0 5.5 3.5Z\"></path></svg></template><template id=\"project-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-project\">    <path d=\"M1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25V1.75C0 .784.784 0 1.75 0ZM1.5 1.75v12.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25ZM11.75 3a.75.75 0 0 1 .75.75v7.5a.75.75 0 0 1-1.5 0v-7.5a.75.75 0 0 1 .75-.75Zm-8.25.75a.75.75 0 0 1 1.5 0v5.5a.75.75 0 0 1-1.5 0ZM8 3a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5A.75.75 0 0 1 8 3Z\"></path></svg></template><template id=\"pencil-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-pencil\">    <path d=\"M11.013 1.427a1.75 1.75 0 0 1 2.474 0l1.086 1.086a1.75 1.75 0 0 1 0 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 0 1-.927-.928l.929-3.25c.081-.286.235-.547.445-.758l8.61-8.61Zm.176 4.823L9.75 4.81l-6.286 6.287a.253.253 0 0 0-.064.108l-.558 1.953 1.953-.558a.253.253 0 0 0 .108-.064Zm1.238-3.763a.25.25 0 0 0-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 0 0 0-.354Z\"></path></svg></template><template id=\"copilot-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-copilot\">    <path d=\"M7.998 15.035c-4.562 0-7.873-2.914-7.998-3.749V9.338c.085-.628.677-1.686 1.588-2.065.013-.07.024-.143.036-.218.029-.183.06-.384.126-.612-.201-.508-.254-1.084-.254-1.656 0-.87.128-1.769.693-2.484.579-.733 1.494-1.124 2.724-1.261 1.206-.134 2.262.034 2.944.765.05.053.096.108.139.165.044-.057.094-.112.143-.165.682-.731 1.738-.899 2.944-.765 1.23.137 2.145.528 2.724 1.261.566.715.693 1.614.693 2.484 0 .572-.053 1.148-.254 1.656.066.228.098.429.126.612.012.076.024.148.037.218.924.385 1.522 1.471 1.591 2.095v1.872c0 .766-3.351 3.795-8.002 3.795Zm0-1.485c2.28 0 4.584-1.11 5.002-1.433V7.862l-.023-.116c-.49.21-1.075.291-1.727.291-1.146 0-2.059-.327-2.71-.991A3.222 3.222 0 0 1 8 6.303a3.24 3.24 0 0 1-.544.743c-.65.664-1.563.991-2.71.991-.652 0-1.236-.081-1.727-.291l-.023.116v4.255c.419.323 2.722 1.433 5.002 1.433ZM6.762 2.83c-.193-.206-.637-.413-1.682-.297-1.019.113-1.479.404-1.713.7-.247.312-.369.789-.369 1.554 0 .793.129 1.171.308 1.371.162.181.519.379 1.442.379.853 0 1.339-.235 1.638-.54.315-.322.527-.827.617-1.553.117-.935-.037-1.395-.241-1.614Zm4.155-.297c-1.044-.116-1.488.091-1.681.297-.204.219-.359.679-.242 1.614.091.726.303 1.231.618 1.553.299.305.784.54 1.638.54.922 0 1.28-.198 1.442-.379.179-.2.308-.578.308-1.371 0-.765-.123-1.242-.37-1.554-.233-.296-.693-.587-1.713-.7Z\"></path><path d=\"M6.25 9.037a.75.75 0 0 1 .75.75v1.501a.75.75 0 0 1-1.5 0V9.787a.75.75 0 0 1 .75-.75Zm4.25.75v1.501a.75.75 0 0 1-1.5 0V9.787a.75.75 0 0 1 1.5 0Z\"></path></svg></template><template id=\"workflow-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-workflow\">    <path d=\"M0 1.75C0 .784.784 0 1.75 0h3.5C6.216 0 7 .784 7 1.75v3.5A1.75 1.75 0 0 1 5.25 7H4v4a1 1 0 0 0 1 1h4v-1.25C9 9.784 9.784 9 10.75 9h3.5c.966 0 1.75.784 1.75 1.75v3.5A1.75 1.75 0 0 1 14.25 16h-3.5A1.75 1.75 0 0 1 9 14.25v-.75H5A2.5 2.5 0 0 1 2.5 11V7h-.75A1.75 1.75 0 0 1 0 5.25Zm1.75-.25a.25.25 0 0 0-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 0 0 .25-.25v-3.5a.25.25 0 0 0-.25-.25Zm9 9a.25.25 0 0 0-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 0 0 .25-.25v-3.5a.25.25 0 0 0-.25-.25Z\"></path></svg></template><template id=\"book-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-book\">    <path d=\"M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z\"></path></svg></template><template id=\"code-review-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code-review\">    <path d=\"M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0 1 14.25 13H8.061l-2.574 2.573A1.458 1.458 0 0 1 3 14.543V13H1.75A1.75 1.75 0 0 1 0 11.25v-8.5C0 1.784.784 1 1.75 1ZM1.5 2.75v8.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-8.5a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Zm5.28 1.72a.75.75 0 0 1 0 1.06L5.31 7l1.47 1.47a.751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018l-2-2a.75.75 0 0 1 0-1.06l2-2a.75.75 0 0 1 1.06 0Zm2.44 0a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L10.69 7 9.22 5.53a.75.75 0 0 1 0-1.06Z\"></path></svg></template><template id=\"codespaces-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-codespaces\">    <path d=\"M0 11.25c0-.966.784-1.75 1.75-1.75h12.5c.966 0 1.75.784 1.75 1.75v3A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25Zm2-9.5C2 .784 2.784 0 3.75 0h8.5C13.216 0 14 .784 14 1.75v5a1.75 1.75 0 0 1-1.75 1.75h-8.5A1.75 1.75 0 0 1 2 6.75Zm1.75-.25a.25.25 0 0 0-.25.25v5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-5a.25.25 0 0 0-.25-.25Zm-2 9.5a.25.25 0 0 0-.25.25v3c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-3a.25.25 0 0 0-.25-.25Z\"></path><path d=\"M7 12.75a.75.75 0 0 1 .75-.75h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1-.75-.75Zm-4 0a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1-.75-.75Z\"></path></svg></template><template id=\"comment-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-comment\">    <path d=\"M1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 13.25 12H9.06l-2.573 2.573A1.458 1.458 0 0 1 4 13.543V12H2.75A1.75 1.75 0 0 1 1 10.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h4.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path></svg></template><template id=\"comment-discussion-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-comment-discussion\">    <path d=\"M1.75 1h8.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 10.25 10H7.061l-2.574 2.573A1.458 1.458 0 0 1 2 11.543V10h-.25A1.75 1.75 0 0 1 0 8.25v-5.5C0 1.784.784 1 1.75 1ZM1.5 2.75v5.5c0 .138.112.25.25.25h1a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h3.5a.25.25 0 0 0 .25-.25v-5.5a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25Zm13 2a.25.25 0 0 0-.25-.25h-.5a.75.75 0 0 1 0-1.5h.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 14.25 12H14v1.543a1.458 1.458 0 0 1-2.487 1.03L9.22 12.28a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l2.22 2.22v-2.19a.75.75 0 0 1 .75-.75h1a.25.25 0 0 0 .25-.25Z\"></path></svg></template><template id=\"organization-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-organization\">    <path d=\"M1.75 16A1.75 1.75 0 0 1 0 14.25V1.75C0 .784.784 0 1.75 0h8.5C11.216 0 12 .784 12 1.75v12.5c0 .085-.006.168-.018.25h2.268a.25.25 0 0 0 .25-.25V8.285a.25.25 0 0 0-.111-.208l-1.055-.703a.749.749 0 1 1 .832-1.248l1.055.703c.487.325.779.871.779 1.456v5.965A1.75 1.75 0 0 1 14.25 16h-3.5a.766.766 0 0 1-.197-.026c-.099.017-.2.026-.303.026h-3a.75.75 0 0 1-.75-.75V14h-1v1.25a.75.75 0 0 1-.75.75Zm-.25-1.75c0 .138.112.25.25.25H4v-1.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 .75.75v1.25h2.25a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25ZM3.75 6h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5ZM3 3.75A.75.75 0 0 1 3.75 3h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 3.75Zm4 3A.75.75 0 0 1 7.75 6h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 7 6.75ZM7.75 3h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5ZM3 9.75A.75.75 0 0 1 3.75 9h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 9.75ZM7.75 9h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5Z\"></path></svg></template><template id=\"rocket-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-rocket\">    <path d=\"M14.064 0h.186C15.216 0 16 .784 16 1.75v.186a8.752 8.752 0 0 1-2.564 6.186l-.458.459c-.314.314-.641.616-.979.904v3.207c0 .608-.315 1.172-.833 1.49l-2.774 1.707a.749.749 0 0 1-1.11-.418l-.954-3.102a1.214 1.214 0 0 1-.145-.125L3.754 9.816a1.218 1.218 0 0 1-.124-.145L.528 8.717a.749.749 0 0 1-.418-1.11l1.71-2.774A1.748 1.748 0 0 1 3.31 4h3.204c.288-.338.59-.665.904-.979l.459-.458A8.749 8.749 0 0 1 14.064 0ZM8.938 3.623h-.002l-.458.458c-.76.76-1.437 1.598-2.02 2.5l-1.5 2.317 2.143 2.143 2.317-1.5c.902-.583 1.74-1.26 2.499-2.02l.459-.458a7.25 7.25 0 0 0 2.123-5.127V1.75a.25.25 0 0 0-.25-.25h-.186a7.249 7.249 0 0 0-5.125 2.123ZM3.56 14.56c-.732.732-2.334 1.045-3.005 1.148a.234.234 0 0 1-.201-.064.234.234 0 0 1-.064-.201c.103-.671.416-2.273 1.15-3.003a1.502 1.502 0 1 1 2.12 2.12Zm6.94-3.935c-.088.06-.177.118-.266.175l-2.35 1.521.548 1.783 1.949-1.2a.25.25 0 0 0 .119-.213ZM3.678 8.116 5.2 5.766c.058-.09.117-.178.176-.266H3.309a.25.25 0 0 0-.213.119l-1.2 1.95ZM12 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg></template><template id=\"shield-check-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-shield-check\">    <path d=\"m8.533.133 5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667l5.25-1.68a1.748 1.748 0 0 1 1.066 0Zm-.61 1.429.001.001-5.25 1.68a.251.251 0 0 0-.174.237V7c0 1.36.275 2.666 1.057 3.859.784 1.194 2.121 2.342 4.366 3.298a.196.196 0 0 0 .154 0c2.245-.957 3.582-2.103 4.366-3.297C13.225 9.666 13.5 8.358 13.5 7V3.48a.25.25 0 0 0-.174-.238l-5.25-1.68a.25.25 0 0 0-.153 0ZM11.28 6.28l-3.5 3.5a.75.75 0 0 1-1.06 0l-1.5-1.5a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l.97.97 2.97-2.97a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z\"></path></svg></template><template id=\"heart-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-heart\">    <path d=\"m8 14.25.345.666a.75.75 0 0 1-.69 0l-.008-.004-.018-.01a7.152 7.152 0 0 1-.31-.17 22.055 22.055 0 0 1-3.434-2.414C2.045 10.731 0 8.35 0 5.5 0 2.836 2.086 1 4.25 1 5.797 1 7.153 1.802 8 3.02 8.847 1.802 10.203 1 11.75 1 13.914 1 16 2.836 16 5.5c0 2.85-2.045 5.231-3.885 6.818a22.066 22.066 0 0 1-3.744 2.584l-.018.01-.006.003h-.002ZM4.25 2.5c-1.336 0-2.75 1.164-2.75 3 0 2.15 1.58 4.144 3.365 5.682A20.58 20.58 0 0 0 8 13.393a20.58 20.58 0 0 0 3.135-2.211C12.92 9.644 14.5 7.65 14.5 5.5c0-1.836-1.414-3-2.75-3-1.373 0-2.609.986-3.029 2.456a.749.749 0 0 1-1.442 0C6.859 3.486 5.623 2.5 4.25 2.5Z\"></path></svg></template><template id=\"server-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-server\">    <path d=\"M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v4c0 .372-.116.717-.314 1 .198.283.314.628.314 1v4a1.75 1.75 0 0 1-1.75 1.75H1.75A1.75 1.75 0 0 1 0 12.75v-4c0-.358.109-.707.314-1a1.739 1.739 0 0 1-.314-1v-4C0 1.784.784 1 1.75 1ZM1.5 2.75v4c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Zm.25 5.75a.25.25 0 0 0-.25.25v4c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25ZM7 4.75A.75.75 0 0 1 7.75 4h4.5a.75.75 0 0 1 0 1.5h-4.5A.75.75 0 0 1 7 4.75ZM7.75 10h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM3 4.75A.75.75 0 0 1 3.75 4h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 4.75ZM3.75 10h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5Z\"></path></svg></template><template id=\"globe-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-globe\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM5.78 8.75a9.64 9.64 0 0 0 1.363 4.177c.255.426.542.832.857 1.215.245-.296.551-.705.857-1.215A9.64 9.64 0 0 0 10.22 8.75Zm4.44-1.5a9.64 9.64 0 0 0-1.363-4.177c-.307-.51-.612-.919-.857-1.215a9.927 9.927 0 0 0-.857 1.215A9.64 9.64 0 0 0 5.78 7.25Zm-5.944 1.5H1.543a6.507 6.507 0 0 0 4.666 5.5c-.123-.181-.24-.365-.352-.552-.715-1.192-1.437-2.874-1.581-4.948Zm-2.733-1.5h2.733c.144-2.074.866-3.756 1.58-4.948.12-.197.237-.381.353-.552a6.507 6.507 0 0 0-4.666 5.5Zm10.181 1.5c-.144 2.074-.866 3.756-1.58 4.948-.12.197-.237.381-.353.552a6.507 6.507 0 0 0 4.666-5.5Zm2.733-1.5a6.507 6.507 0 0 0-4.666-5.5c.123.181.24.365.353.552.714 1.192 1.436 2.874 1.58 4.948Z\"></path></svg></template><template id=\"issue-opened-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-issue-opened\">    <path d=\"M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path><path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z\"></path></svg></template><template id=\"device-mobile-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-device-mobile\">    <path d=\"M3.75 0h8.5C13.216 0 14 .784 14 1.75v12.5A1.75 1.75 0 0 1 12.25 16h-8.5A1.75 1.75 0 0 1 2 14.25V1.75C2 .784 2.784 0 3.75 0ZM3.5 1.75v12.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25ZM8 13a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg></template><template id=\"package-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-package\">    <path d=\"m8.878.392 5.25 3.045c.54.314.872.89.872 1.514v6.098a1.75 1.75 0 0 1-.872 1.514l-5.25 3.045a1.75 1.75 0 0 1-1.756 0l-5.25-3.045A1.75 1.75 0 0 1 1 11.049V4.951c0-.624.332-1.201.872-1.514L7.122.392a1.75 1.75 0 0 1 1.756 0ZM7.875 1.69l-4.63 2.685L8 7.133l4.755-2.758-4.63-2.685a.248.248 0 0 0-.25 0ZM2.5 5.677v5.372c0 .09.047.171.125.216l4.625 2.683V8.432Zm6.25 8.271 4.625-2.683a.25.25 0 0 0 .125-.216V5.677L8.75 8.432Z\"></path></svg></template><template id=\"credit-card-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-credit-card\">    <path d=\"M10.75 9a.75.75 0 0 0 0 1.5h1.5a.75.75 0 0 0 0-1.5h-1.5Z\"></path><path d=\"M0 3.75C0 2.784.784 2 1.75 2h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0 1 14.25 14H1.75A1.75 1.75 0 0 1 0 12.25ZM14.5 6.5h-13v5.75c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25Zm0-2.75a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25V5h13Z\"></path></svg></template><template id=\"play-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-play\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z\"></path></svg></template><template id=\"gift-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-gift\">    <path d=\"M2 2.75A2.75 2.75 0 0 1 4.75 0c.983 0 1.873.42 2.57 1.232.268.318.497.668.68 1.042.183-.375.411-.725.68-1.044C9.376.42 10.266 0 11.25 0a2.75 2.75 0 0 1 2.45 4h.55c.966 0 1.75.784 1.75 1.75v2c0 .698-.409 1.301-1 1.582v4.918A1.75 1.75 0 0 1 13.25 16H2.75A1.75 1.75 0 0 1 1 14.25V9.332C.409 9.05 0 8.448 0 7.75v-2C0 4.784.784 4 1.75 4h.55c-.192-.375-.3-.8-.3-1.25ZM7.25 9.5H2.5v4.75c0 .138.112.25.25.25h4.5Zm1.5 0v5h4.5a.25.25 0 0 0 .25-.25V9.5Zm0-4V8h5.5a.25.25 0 0 0 .25-.25v-2a.25.25 0 0 0-.25-.25Zm-7 0a.25.25 0 0 0-.25.25v2c0 .138.112.25.25.25h5.5V5.5h-5.5Zm3-4a1.25 1.25 0 0 0 0 2.5h2.309c-.233-.818-.542-1.401-.878-1.793-.43-.502-.915-.707-1.431-.707ZM8.941 4h2.309a1.25 1.25 0 0 0 0-2.5c-.516 0-1 .205-1.43.707-.337.392-.646.975-.879 1.793Z\"></path></svg></template><template id=\"code-square-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code-square\">    <path d=\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25Zm7.47 3.97a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L10.69 8 9.22 6.53a.75.75 0 0 1 0-1.06ZM6.78 6.53 5.31 8l1.47 1.47a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215l-2-2a.75.75 0 0 1 0-1.06l2-2a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z\"></path></svg></template><template id=\"device-desktop-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-device-desktop\">    <path d=\"M14.25 1c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 14.25 12h-3.727c.099 1.041.52 1.872 1.292 2.757A.752.752 0 0 1 11.25 16h-6.5a.75.75 0 0 1-.565-1.243c.772-.885 1.192-1.716 1.292-2.757H1.75A1.75 1.75 0 0 1 0 10.25v-7.5C0 1.784.784 1 1.75 1ZM1.75 2.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25ZM9.018 12H6.982a5.72 5.72 0 0 1-.765 2.5h3.566a5.72 5.72 0 0 1-.765-2.5Z\"></path></svg></template>        <div class=\"position-relative\">                <ul                  role=\"listbox\"                  class=\"ActionListWrap QueryBuilder-ListWrap\"                  aria-label=\"Suggestions\"                  data-action=\"                    combobox-commit:query-builder#comboboxCommit                    mousedown:query-builder#resultsMousedown                  \"                  data-target=\"query-builder.resultsList\"                  data-persist-list=false                  id=\"query-builder-test-results\"                ></ul>        </div>      <div class=\"FormControl-inlineValidation\" id=\"validation-7dbeec11-6360-40e0-8024-b7dba26a14c9\" hidden=\"hidden\">        <span class=\"FormControl-inlineValidation--visual\">          <svg aria-hidden=\"true\" height=\"12\" viewBox=\"0 0 12 12\" version=\"1.1\" width=\"12\" data-view-component=\"true\" class=\"octicon octicon-alert-fill\">    <path d=\"M4.855.708c.5-.896 1.79-.896 2.29 0l4.675 8.351a1.312 1.312 0 0 1-1.146 1.954H1.33A1.313 1.313 0 0 1 .183 9.058ZM7 7V3H5v4Zm-1 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z\"></path></svg>        </span>        <span></span></div>    </div>    <div data-target=\"query-builder.screenReaderFeedback\" aria-live=\"polite\" aria-atomic=\"true\" class=\"sr-only\"></div></query-builder></form>          <div class=\"d-flex flex-row color-fg-muted px-3 text-small color-bg-default search-feedback-prompt\">            <a target=\"_blank\" href=\"https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax\" data-view-component=\"true\" class=\"Link color-fg-accent text-normal ml-2\">              Search syntax tips</a>            <div class=\"d-flex flex-1\"></div>          </div>        </div></div>    </div></modal-dialog></div>  </div>  <div data-action=\"click:qbsearch-input#retract\" class=\"dark-backdrop position-fixed\" hidden data-target=\"qbsearch-input.darkBackdrop\"></div>  <div class=\"color-fg-default\">    <dialog-helper>  <dialog data-target=\"qbsearch-input.feedbackDialog\" data-action=\"close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose\" id=\"feedback-dialog\" aria-modal=\"true\" aria-labelledby=\"feedback-dialog-title\" aria-describedby=\"feedback-dialog-description\" data-view-component=\"true\" class=\"Overlay Overlay-whenNarrow Overlay--size-medium Overlay--motion-scaleFade\">    <div data-view-component=\"true\" class=\"Overlay-header\">  <div class=\"Overlay-headerContentWrap\">    <div class=\"Overlay-titleWrap\">      <h1 class=\"Overlay-title \" id=\"feedback-dialog-title\">        Provide feedback      </h1>    </div>    <div class=\"Overlay-actionWrap\">      <button data-close-dialog-id=\"feedback-dialog\" aria-label=\"Close\" type=\"button\" data-view-component=\"true\" class=\"close-button Overlay-closeButton\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg></button>    </div>  </div></div>      <scrollable-region data-labelled-by=\"feedback-dialog-title\">        <div data-view-component=\"true\" class=\"Overlay-body\">        <!-- '\"` --><!-- </textarea></xmp> --></option></form><form id=\"code-search-feedback-form\" data-turbo=\"false\" action=\"/search/feedback\" accept-charset=\"UTF-8\" method=\"post\"><input type=\"hidden\" data-csrf=\"true\" name=\"authenticity_token\" value=\"HQ7kzIkh6caGwKQ+zopJwQjKfnIGd17iXJELP0EVtgTlcP6lVQkQReSgufG9iBp8eG1YvD3gb6ny7muNDGPzRw==\" />          <p>We read every piece of feedback, and take your input very seriously.</p>          <textarea name=\"feedback\" class=\"form-control width-full mb-2\" style=\"height: 120px\" id=\"feedback\"></textarea>          <input name=\"include_email\" id=\"include_email\" aria-label=\"Include my email address so I can be contacted\" class=\"form-control mr-2\" type=\"checkbox\">          <label for=\"include_email\" style=\"font-weight: normal\">Include my email address so I can be contacted</label></form></div>      </scrollable-region>      <div data-view-component=\"true\" class=\"Overlay-footer Overlay-footer--alignEnd\">          <button data-close-dialog-id=\"feedback-dialog\" type=\"button\" data-view-component=\"true\" class=\"btn\">    Cancel</button>          <button form=\"code-search-feedback-form\" data-action=\"click:qbsearch-input#submitFeedback\" type=\"submit\" data-view-component=\"true\" class=\"btn-primary btn\">    Submit feedback</button></div></dialog></dialog-helper>    <custom-scopes data-target=\"qbsearch-input.customScopesManager\">    <dialog-helper>  <dialog data-target=\"custom-scopes.customScopesModalDialog\" data-action=\"close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose\" id=\"custom-scopes-dialog\" aria-modal=\"true\" aria-labelledby=\"custom-scopes-dialog-title\" aria-describedby=\"custom-scopes-dialog-description\" data-view-component=\"true\" class=\"Overlay Overlay-whenNarrow Overlay--size-medium Overlay--motion-scaleFade\">    <div data-view-component=\"true\" class=\"Overlay-header Overlay-header--divided\">  <div class=\"Overlay-headerContentWrap\">    <div class=\"Overlay-titleWrap\">      <h1 class=\"Overlay-title \" id=\"custom-scopes-dialog-title\">        Saved searches      </h1>        <h2 id=\"custom-scopes-dialog-description\" class=\"Overlay-description\">Use saved searches to filter your results more quickly</h2>    </div>    <div class=\"Overlay-actionWrap\">      <button data-close-dialog-id=\"custom-scopes-dialog\" aria-label=\"Close\" type=\"button\" data-view-component=\"true\" class=\"close-button Overlay-closeButton\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg></button>    </div>  </div></div>      <scrollable-region data-labelled-by=\"custom-scopes-dialog-title\">        <div data-view-component=\"true\" class=\"Overlay-body\">        <div data-target=\"custom-scopes.customScopesModalDialogFlash\"></div>        <div hidden class=\"create-custom-scope-form\" data-target=\"custom-scopes.createCustomScopeForm\">        <!-- '\"` --><!-- </textarea></xmp> --></option></form><form id=\"custom-scopes-dialog-form\" data-turbo=\"false\" action=\"/search/custom_scopes\" accept-charset=\"UTF-8\" method=\"post\"><input type=\"hidden\" data-csrf=\"true\" name=\"authenticity_token\" value=\"qvlTQGrquToj1dz6aA4Y32mkPu8jWXJ0O7Lgd32Yawf/2cLI5kas4T2PeCeWZD08X/zFYesvGLojWZbDM98uDw==\" />          <div data-target=\"custom-scopes.customScopesModalDialogFlash\"></div>          <input type=\"hidden\" id=\"custom_scope_id\" name=\"custom_scope_id\" data-target=\"custom-scopes.customScopesIdField\">          <div class=\"form-group\">            <label for=\"custom_scope_name\">Name</label>            <auto-check src=\"/search/custom_scopes/check_name\" required>              <input                type=\"text\"                name=\"custom_scope_name\"                id=\"custom_scope_name\"                data-target=\"custom-scopes.customScopesNameField\"                class=\"form-control\"                autocomplete=\"off\"                placeholder=\"github-ruby\"                required                maxlength=\"50\">              <input type=\"hidden\" data-csrf=\"true\" value=\"EuPie8uQG+IkWjHgEokMHgZcI8JjyQMbPPlFLJnUzjSlW8hQzSmQrO5B4zWRJuVHLBRpBygSUr5broQr1tpfTw==\" />            </auto-check>          </div>          <div class=\"form-group\">            <label for=\"custom_scope_query\">Query</label>            <input              type=\"text\"              name=\"custom_scope_query\"              id=\"custom_scope_query\"              data-target=\"custom-scopes.customScopesQueryField\"              class=\"form-control\"              autocomplete=\"off\"              placeholder=\"(repo:mona/a OR repo:mona/b) AND lang:python\"              required              maxlength=\"500\">          </div>          <p class=\"text-small color-fg-muted\">            To see all available qualifiers, see our <a class=\"Link--inTextBlock\" href=\"https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax\">documentation</a>.          </p></form>        </div>        <div data-target=\"custom-scopes.manageCustomScopesForm\">          <div data-target=\"custom-scopes.list\"></div>        </div></div>      </scrollable-region>      <div data-view-component=\"true\" class=\"Overlay-footer Overlay-footer--alignEnd Overlay-footer--divided\">          <button data-action=\"click:custom-scopes#customScopesCancel\" type=\"button\" data-view-component=\"true\" class=\"btn\">    Cancel</button>          <button form=\"custom-scopes-dialog-form\" data-action=\"click:custom-scopes#customScopesSubmit\" data-target=\"custom-scopes.customScopesSubmitButton\" type=\"submit\" data-view-component=\"true\" class=\"btn-primary btn\">    Create saved search</button></div></dialog></dialog-helper>    </custom-scopes>  </div></qbsearch-input><input type=\"hidden\" data-csrf=\"true\" class=\"js-data-jump-to-suggestions-path-csrf\" value=\"8jv1JxJNTa/Se3svbDSYX9NG3PvzA9plbB1febrOJc8ssiQ6BYr5dYSqfhprI0QUP8eAHZ4lHU6ux7x9Xnah8g==\" />          <div class=\"position-relative mr-lg-3 d-lg-inline-block\">            <a href=\"/login?return_to=https%3A%2F%2Fgithub.com%2Fjefflau%2Fjest-fetch-mock\"              class=\"HeaderMenu-link HeaderMenu-link--sign-in flex-shrink-0 no-underline d-block d-lg-inline-block border border-lg-0 rounded rounded-lg-0 p-2 p-lg-0\"              data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/jefflau/jest-fetch-mock&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"95162561e7c1ee0a0441c94c774abae2f32d4059261d2a67b9ffc942a7a40b86\"              data-ga-click=\"(Logged out) Header, clicked Sign in, text:sign-in\">              Sign in            </a>          </div>            <a href=\"/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&amp;source=header-repo&amp;source_repo=jefflau%2Fjest-fetch-mock\"              class=\"HeaderMenu-link HeaderMenu-link--sign-up flex-shrink-0 d-none d-lg-inline-block no-underline border color-border-default rounded px-2 py-1\"              data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/jefflau/jest-fetch-mock&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"95162561e7c1ee0a0441c94c774abae2f32d4059261d2a67b9ffc942a7a40b86\"              data-analytics-event=\"{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/&lt;user-name&gt;/&lt;repo-name&gt;;ref_cta:Sign up;ref_loc:header logged out&quot;}\"            >              Sign up            </a>        </div>      </div>    </div>  </div></header>      <div hidden=\"hidden\" data-view-component=\"true\" class=\"js-stale-session-flash stale-session-flash flash flash-warn flash-full mb-3\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-alert\">    <path d=\"M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>        <span class=\"js-stale-session-flash-signed-in\" hidden>You signed in with another tab or window. <a class=\"Link--inTextBlock\" href=\"\">Reload</a> to refresh your session.</span>        <span class=\"js-stale-session-flash-signed-out\" hidden>You signed out in another tab or window. <a class=\"Link--inTextBlock\" href=\"\">Reload</a> to refresh your session.</span>        <span class=\"js-stale-session-flash-switched\" hidden>You switched accounts on another tab or window. <a class=\"Link--inTextBlock\" href=\"\">Reload</a> to refresh your session.</span>    <button id=\"icon-button-199e6ed3-05b2-4340-88b3-491508ed0643\" aria-labelledby=\"tooltip-436c4960-9213-4247-b56c-5f5e5cbcc749\" type=\"button\" data-view-component=\"true\" class=\"Button Button--iconOnly Button--invisible Button--medium flash-close js-flash-close\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x Button-visual\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg></button><tool-tip id=\"tooltip-436c4960-9213-4247-b56c-5f5e5cbcc749\" for=\"icon-button-199e6ed3-05b2-4340-88b3-491508ed0643\" popover=\"manual\" data-direction=\"s\" data-type=\"label\" data-view-component=\"true\" class=\"sr-only position-absolute\">Dismiss alert</tool-tip>  </div>    </div>  <div id=\"start-of-content\" class=\"show-on-focus\"></div>    <div id=\"js-flash-container\" data-turbo-replace>  <template class=\"js-flash-template\">    <div class=\"flash flash-full   {{ className }}\">  <div class=\"px-2\" >    <button autofocus class=\"flash-close js-flash-close\" type=\"button\" aria-label=\"Dismiss this message\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg>    </button>    <div aria-atomic=\"true\" role=\"alert\" class=\"js-flash-alert\">            <div>{{ message }}</div>    </div>  </div></div>  </template></div>        <include-fragment class=\"js-notification-shelf-include-fragment\" data-base-src=\"https://github.com/notifications/beta/shelf\"></include-fragment>  <div    class=\"application-main \"    data-commit-hovercards-enabled    data-discussion-hovercards-enabled    data-issue-and-pr-hovercards-enabled  >        <div itemscope itemtype=\"http://schema.org/SoftwareSourceCode\" class=\"\">    <main id=\"js-repo-pjax-container\" >                <div id=\"repository-container-header\"  class=\"pt-3 hide-full-screen\" style=\"background-color: var(--page-header-bgColor, var(--color-page-header-bg));\" data-turbo-replace>      <div class=\"d-flex flex-wrap flex-justify-end mb-3  px-3 px-md-4 px-lg-5\" style=\"gap: 1rem;\">        <div class=\"flex-auto min-width-0 width-fit mr-3\">              <div class=\" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo color-fg-muted mr-2\">    <path d=\"M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.495 2.495 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.486 2.486 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.249.249 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z\"></path></svg>        <span class=\"author flex-self-stretch\" itemprop=\"author\">      <a class=\"url fn\" rel=\"author\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jefflau/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"/jefflau\">        jefflau</a>    </span>    <span class=\"mx-1 flex-self-stretch color-fg-muted\">/</span>    <strong itemprop=\"name\" class=\"mr-2 flex-self-stretch\">      <a data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" href=\"/jefflau/jest-fetch-mock\">jest-fetch-mock</a>    </strong>    <span></span><span class=\"Label Label--secondary v-align-middle mr-1\">Public</span>  </div>        </div>        <div id=\"repository-details-container\" data-turbo-replace>            <ul class=\"pagehead-actions flex-shrink-0 d-none d-md-inline\" style=\"padding: 2px 0;\">            <li>            <a href=\"/login?return_to=%2Fjefflau%2Fjest-fetch-mock\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/jefflau/jest-fetch-mock&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"5e25f0ecb5250ec09ba114f2ef63bb608d2f52ba1866b4b6f60821cbab80b188\" aria-label=\"You must be signed in to change notification settings\" data-view-component=\"true\" class=\"tooltipped tooltipped-s btn-sm btn\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-bell mr-2\">    <path d=\"M8 16a2 2 0 0 0 1.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 0 0 8 16ZM3 5a5 5 0 0 1 10 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.519 1.519 0 0 1 13.482 13H2.518a1.516 1.516 0 0 1-1.263-2.36l1.703-2.554A.255.255 0 0 0 3 7.947Zm5-3.5A3.5 3.5 0 0 0 4.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.017.017 0 0 0-.003.01l.001.006c0 .002.002.004.004.006l.006.004.007.001h10.964l.007-.001.006-.004.004-.006.001-.007a.017.017 0 0 0-.003-.01l-1.703-2.554a1.745 1.745 0 0 1-.294-.97V5A3.5 3.5 0 0 0 8 1.5Z\"></path></svg>Notifications</a>  </li>  <li>          <a icon=\"repo-forked\" id=\"fork-button\" href=\"/login?return_to=%2Fjefflau%2Fjest-fetch-mock\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;repo details fork button&quot;,&quot;repository_id&quot;:66015788,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/jefflau/jest-fetch-mock&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"c0965a8eaf4d4ec2761bd8d66da57945d3ffdae39ab3f16188e8519546d6471f\" data-view-component=\"true\" class=\"btn-sm btn\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo-forked mr-2\">    <path d=\"M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z\"></path></svg>Fork    <span id=\"repo-network-counter\" data-pjax-replace=\"true\" data-turbo-replace=\"true\" title=\"117\" data-view-component=\"true\" class=\"Counter\">117</span></a>  </li>  <li>        <div data-view-component=\"true\" class=\"BtnGroup d-flex\">        <a href=\"/login?return_to=%2Fjefflau%2Fjest-fetch-mock\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:66015788,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/jefflau/jest-fetch-mock&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"147ebf7e54895b4d1949575386264cfb291371b7bda2a8f958dcd105fef43556\" aria-label=\"You must be signed in to star a repository\" data-view-component=\"true\" class=\"tooltipped tooltipped-s btn-sm btn BtnGroup-item\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-star v-align-text-bottom d-inline-block mr-2\">    <path d=\"M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z\"></path></svg><span data-view-component=\"true\" class=\"d-inline\">          Star</span>          <span id=\"repo-stars-counter-star\" aria-label=\"868 users starred this repository\" data-singular-suffix=\"user starred this repository\" data-plural-suffix=\"users starred this repository\" data-turbo-replace=\"true\" title=\"868\" data-view-component=\"true\" class=\"Counter js-social-count\">868</span></a>        <button aria-label=\"You must be signed in to add this repository to a list\" type=\"button\" disabled=\"disabled\" data-view-component=\"true\" class=\"btn-sm btn BtnGroup-item px-2\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-triangle-down\">    <path d=\"m4.427 7.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.396 7H4.604a.25.25 0 0 0-.177.427Z\"></path></svg></button></div>  </li>    <li>            </li></ul>        </div>      </div>        <div id=\"responsive-meta-container\" data-turbo-replace>      <div class=\"d-block d-md-none mb-2 px-3 px-md-4 px-lg-5\">      <p class=\"f4 mb-3 \">        Jest mock for fetch      </p>          <h3 class=\"sr-only\">License</h3>  <div class=\"mb-2\">    <a href=\"/jefflau/jest-fetch-mock/blob/master/LICENSE.md\"      class=\"Link--muted\"            data-analytics-event=\"{&quot;category&quot;:&quot;Repository Overview&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;location:sidebar;file:license&quot;}\"    >      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-law mr-2\">    <path d=\"M8.75.75V2h.985c.304 0 .603.08.867.231l1.29.736c.038.022.08.033.124.033h2.234a.75.75 0 0 1 0 1.5h-.427l2.111 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.006.005-.01.01-.045.04c-.21.176-.441.327-.686.45C14.556 10.78 13.88 11 13 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L12.178 4.5h-.162c-.305 0-.604-.079-.868-.231l-1.29-.736a.245.245 0 0 0-.124-.033H8.75V13h2.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1 0-1.5h2.5V3.5h-.984a.245.245 0 0 0-.124.033l-1.289.737c-.265.15-.564.23-.869.23h-.162l2.112 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.016.015-.045.04c-.21.176-.441.327-.686.45C4.556 10.78 3.88 11 3 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L2.178 4.5H1.75a.75.75 0 0 1 0-1.5h2.234a.249.249 0 0 0 .125-.033l1.288-.737c.265-.15.564-.23.869-.23h.984V.75a.75.75 0 0 1 1.5 0Zm2.945 8.477c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L13 6.327Zm-10 0c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L3 6.327Z\"></path></svg>     MIT license    </a>  </div>    <div class=\"mb-3\">        <a class=\"Link--secondary no-underline mr-3\" href=\"/jefflau/jest-fetch-mock/stargazers\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-star mr-1\">    <path d=\"M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z\"></path></svg>          <span class=\"text-bold\">868</span>          stars</a>        <a class=\"Link--secondary no-underline mr-3\" href=\"/jefflau/jest-fetch-mock/forks\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo-forked mr-1\">    <path d=\"M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z\"></path></svg>          <span class=\"text-bold\">117</span>          forks</a>          <a class=\"Link--secondary no-underline mr-3 d-inline-block\" href=\"/jefflau/jest-fetch-mock/branches\">            <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-git-branch mr-1\">    <path d=\"M9.5 3.25a2.25 2.25 0 1 1 3 2.122V6A2.5 2.5 0 0 1 10 8.5H6a1 1 0 0 0-1 1v1.128a2.251 2.251 0 1 1-1.5 0V5.372a2.25 2.25 0 1 1 1.5 0v1.836A2.493 2.493 0 0 1 6 7h4a1 1 0 0 0 1-1v-.628A2.25 2.25 0 0 1 9.5 3.25Zm-6 0a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Zm8.25-.75a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5ZM4.25 12a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Z\"></path></svg>            <span>Branches</span></a>          <a class=\"Link--secondary no-underline d-inline-block\" href=\"/jefflau/jest-fetch-mock/tags\">            <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-tag mr-1\">    <path d=\"M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.752 1.752 0 0 1 1 7.775Zm1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z\"></path></svg>            <span>Tags</span></a>        <a class=\"Link--secondary no-underline d-inline-block\" href=\"/jefflau/jest-fetch-mock/activity\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-pulse mr-1\">    <path d=\"M6 2c.306 0 .582.187.696.471L10 10.731l1.304-3.26A.751.751 0 0 1 12 7h3.25a.75.75 0 0 1 0 1.5h-2.742l-1.812 4.528a.751.751 0 0 1-1.392 0L6 4.77 4.696 8.03A.75.75 0 0 1 4 8.5H.75a.75.75 0 0 1 0-1.5h2.742l1.812-4.529A.751.751 0 0 1 6 2Z\"></path></svg>          <span>Activity</span></a>    </div>      <div class=\"d-flex flex-wrap gap-2\">        <div class=\"flex-1\">            <div data-view-component=\"true\" class=\"BtnGroup d-flex\">        <a href=\"/login?return_to=%2Fjefflau%2Fjest-fetch-mock\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:66015788,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/jefflau/jest-fetch-mock&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"147ebf7e54895b4d1949575386264cfb291371b7bda2a8f958dcd105fef43556\" aria-label=\"You must be signed in to star a repository\" data-view-component=\"true\" class=\"tooltipped tooltipped-s btn-sm btn btn-block BtnGroup-item\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-star v-align-text-bottom d-inline-block mr-2\">    <path d=\"M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z\"></path></svg><span data-view-component=\"true\" class=\"d-inline\">          Star</span></a>        <button aria-label=\"You must be signed in to add this repository to a list\" type=\"button\" disabled=\"disabled\" data-view-component=\"true\" class=\"btn-sm btn BtnGroup-item px-2\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-triangle-down\">    <path d=\"m4.427 7.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.396 7H4.604a.25.25 0 0 0-.177.427Z\"></path></svg></button></div>        </div>        <div class=\"flex-1\">                <a href=\"/login?return_to=%2Fjefflau%2Fjest-fetch-mock\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/jefflau/jest-fetch-mock&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"5e25f0ecb5250ec09ba114f2ef63bb608d2f52ba1866b4b6f60821cbab80b188\" aria-label=\"You must be signed in to change notification settings\" data-view-component=\"true\" class=\"tooltipped tooltipped-s btn-sm btn btn-block\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-bell mr-2\">    <path d=\"M8 16a2 2 0 0 0 1.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 0 0 8 16ZM3 5a5 5 0 0 1 10 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.519 1.519 0 0 1 13.482 13H2.518a1.516 1.516 0 0 1-1.263-2.36l1.703-2.554A.255.255 0 0 0 3 7.947Zm5-3.5A3.5 3.5 0 0 0 4.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.017.017 0 0 0-.003.01l.001.006c0 .002.002.004.004.006l.006.004.007.001h10.964l.007-.001.006-.004.004-.006.001-.007a.017.017 0 0 0-.003-.01l-1.703-2.554a1.745 1.745 0 0 1-.294-.97V5A3.5 3.5 0 0 0 8 1.5Z\"></path></svg>Notifications</a>        </div>          <span>                      </span>      </div>  </div></div>          <nav data-pjax=\"#js-repo-pjax-container\" aria-label=\"Repository\" data-view-component=\"true\" class=\"js-repo-nav js-sidenav-container-pjax js-responsive-underlinenav overflow-hidden UnderlineNav px-3 px-md-4 px-lg-5\">  <ul data-view-component=\"true\" class=\"UnderlineNav-body list-style-none\">      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"code-tab\" href=\"/jefflau/jest-fetch-mock\" data-tab-item=\"i0code-tab\" data-selected-links=\"repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments repo_attestations /jefflau/jest-fetch-mock\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g c\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Code&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" aria-current=\"page\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item selected\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z\"></path></svg>        <span data-content=\"Code\">Code</span>          <span id=\"code-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"Not available\" data-view-component=\"true\" class=\"Counter\"></span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"issues-tab\" href=\"/jefflau/jest-fetch-mock/issues\" data-tab-item=\"i1issues-tab\" data-selected-links=\"repo_issues repo_labels repo_milestones /jefflau/jest-fetch-mock/issues\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g i\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Issues&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-issue-opened UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path><path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z\"></path></svg>        <span data-content=\"Issues\">Issues</span>          <span id=\"issues-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"65\" data-view-component=\"true\" class=\"Counter\">65</span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"pull-requests-tab\" href=\"/jefflau/jest-fetch-mock/pulls\" data-tab-item=\"i2pull-requests-tab\" data-selected-links=\"repo_pulls checks /jefflau/jest-fetch-mock/pulls\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g p\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Pull requests&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-git-pull-request UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M1.5 3.25a2.25 2.25 0 1 1 3 2.122v5.256a2.251 2.251 0 1 1-1.5 0V5.372A2.25 2.25 0 0 1 1.5 3.25Zm5.677-.177L9.573.677A.25.25 0 0 1 10 .854V2.5h1A2.5 2.5 0 0 1 13.5 5v5.628a2.251 2.251 0 1 1-1.5 0V5a1 1 0 0 0-1-1h-1v1.646a.25.25 0 0 1-.427.177L7.177 3.427a.25.25 0 0 1 0-.354ZM3.75 2.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm0 9.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm8.25.75a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Z\"></path></svg>        <span data-content=\"Pull requests\">Pull requests</span>          <span id=\"pull-requests-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"21\" data-view-component=\"true\" class=\"Counter\">21</span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"actions-tab\" href=\"/jefflau/jest-fetch-mock/actions\" data-tab-item=\"i3actions-tab\" data-selected-links=\"repo_actions /jefflau/jest-fetch-mock/actions\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g a\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Actions&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-play UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z\"></path></svg>        <span data-content=\"Actions\">Actions</span>          <span id=\"actions-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"Not available\" data-view-component=\"true\" class=\"Counter\"></span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"projects-tab\" href=\"/jefflau/jest-fetch-mock/projects\" data-tab-item=\"i4projects-tab\" data-selected-links=\"repo_projects new_repo_project repo_project /jefflau/jest-fetch-mock/projects\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g b\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Projects&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-table UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25ZM6.5 6.5v8h7.75a.25.25 0 0 0 .25-.25V6.5Zm8-1.5V1.75a.25.25 0 0 0-.25-.25H6.5V5Zm-13 1.5v7.75c0 .138.112.25.25.25H5v-8ZM5 5V1.5H1.75a.25.25 0 0 0-.25.25V5Z\"></path></svg>        <span data-content=\"Projects\">Projects</span>          <span id=\"projects-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"1\" data-view-component=\"true\" class=\"Counter\">1</span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"security-tab\" href=\"/jefflau/jest-fetch-mock/security\" data-tab-item=\"i5security-tab\" data-selected-links=\"security overview alerts policy token_scanning code_scanning /jefflau/jest-fetch-mock/security\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g s\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Security&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-shield UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M7.467.133a1.748 1.748 0 0 1 1.066 0l5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667Zm.61 1.429a.25.25 0 0 0-.153 0l-5.25 1.68a.25.25 0 0 0-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.196.196 0 0 0 .154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.251.251 0 0 0-.174-.237l-5.25-1.68ZM8.75 4.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 1.5 0ZM9 10.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>        <span data-content=\"Security\">Security</span>          <include-fragment src=\"/jefflau/jest-fetch-mock/security/overall-count\" accept=\"text/fragment+html\"></include-fragment>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"insights-tab\" href=\"/jefflau/jest-fetch-mock/pulse\" data-tab-item=\"i6insights-tab\" data-selected-links=\"repo_graphs repo_contributors dependency_graph dependabot_updates pulse people community /jefflau/jest-fetch-mock/pulse\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Insights&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-graph UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M1.5 1.75V13.5h13.75a.75.75 0 0 1 0 1.5H.75a.75.75 0 0 1-.75-.75V1.75a.75.75 0 0 1 1.5 0Zm14.28 2.53-5.25 5.25a.75.75 0 0 1-1.06 0L7 7.06 4.28 9.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.25-3.25a.75.75 0 0 1 1.06 0L10 7.94l4.72-4.72a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z\"></path></svg>        <span data-content=\"Insights\">Insights</span>          <span id=\"insights-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"Not available\" data-view-component=\"true\" class=\"Counter\"></span>    </a></li></ul>    <div style=\"visibility:hidden;\" data-view-component=\"true\" class=\"UnderlineNav-actions js-responsive-underlinenav-overflow position-absolute pr-3 pr-md-4 pr-lg-5 right-0\">      <action-menu data-select-variant=\"none\" data-view-component=\"true\">  <focus-group direction=\"vertical\" mnemonics retain>    <button id=\"action-menu-741f0a0a-3c4e-4a92-ab95-67c82d917d37-button\" popovertarget=\"action-menu-741f0a0a-3c4e-4a92-ab95-67c82d917d37-overlay\" aria-controls=\"action-menu-741f0a0a-3c4e-4a92-ab95-67c82d917d37-list\" aria-haspopup=\"true\" aria-labelledby=\"tooltip-4f7b319c-9e53-4522-96dc-a53f46850989\" type=\"button\" data-view-component=\"true\" class=\"Button Button--iconOnly Button--secondary Button--medium UnderlineNav-item\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-kebab-horizontal Button-visual\">    <path d=\"M8 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3ZM1.5 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Zm13 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path></svg></button><tool-tip id=\"tooltip-4f7b319c-9e53-4522-96dc-a53f46850989\" for=\"action-menu-741f0a0a-3c4e-4a92-ab95-67c82d917d37-button\" popover=\"manual\" data-direction=\"s\" data-type=\"label\" data-view-component=\"true\" class=\"sr-only position-absolute\">Additional navigation options</tool-tip><anchored-position id=\"action-menu-741f0a0a-3c4e-4a92-ab95-67c82d917d37-overlay\" anchor=\"action-menu-741f0a0a-3c4e-4a92-ab95-67c82d917d37-button\" align=\"start\" side=\"outside-bottom\" anchor-offset=\"normal\" popover=\"auto\" data-view-component=\"true\">  <div data-view-component=\"true\" class=\"Overlay Overlay--size-auto\">          <div data-view-component=\"true\" class=\"Overlay-body Overlay-body--paddingNone\">          <div data-view-component=\"true\">  <ul aria-labelledby=\"action-menu-741f0a0a-3c4e-4a92-ab95-67c82d917d37-button\" id=\"action-menu-741f0a0a-3c4e-4a92-ab95-67c82d917d37-list\" role=\"menu\" data-view-component=\"true\" class=\"ActionListWrap--inset ActionListWrap\">      <li hidden=\"hidden\" data-menu-item=\"i0code-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-794b5ce5-ce72-4079-9a94-8a1b6c5c7124\" href=\"/jefflau/jest-fetch-mock\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code\">    <path d=\"m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Code</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i1issues-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-7529e977-af41-435b-aef0-f64fabaa2869\" href=\"/jefflau/jest-fetch-mock/issues\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-issue-opened\">    <path d=\"M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path><path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Issues</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i2pull-requests-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-760b9722-ad95-43d7-90ce-e6e2c7df4527\" href=\"/jefflau/jest-fetch-mock/pulls\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-git-pull-request\">    <path d=\"M1.5 3.25a2.25 2.25 0 1 1 3 2.122v5.256a2.251 2.251 0 1 1-1.5 0V5.372A2.25 2.25 0 0 1 1.5 3.25Zm5.677-.177L9.573.677A.25.25 0 0 1 10 .854V2.5h1A2.5 2.5 0 0 1 13.5 5v5.628a2.251 2.251 0 1 1-1.5 0V5a1 1 0 0 0-1-1h-1v1.646a.25.25 0 0 1-.427.177L7.177 3.427a.25.25 0 0 1 0-.354ZM3.75 2.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm0 9.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm8.25.75a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Pull requests</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i3actions-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-ad3a46e9-6c51-4dd9-8ec3-a769d0bbc7a7\" href=\"/jefflau/jest-fetch-mock/actions\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-play\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Actions</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i4projects-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-b438257d-b12a-4f5c-aeb1-defc2ffb3777\" href=\"/jefflau/jest-fetch-mock/projects\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-table\">    <path d=\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25ZM6.5 6.5v8h7.75a.25.25 0 0 0 .25-.25V6.5Zm8-1.5V1.75a.25.25 0 0 0-.25-.25H6.5V5Zm-13 1.5v7.75c0 .138.112.25.25.25H5v-8ZM5 5V1.5H1.75a.25.25 0 0 0-.25.25V5Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Projects</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i5security-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-4e12082b-5db3-4f90-816d-fe3ea39f89bc\" href=\"/jefflau/jest-fetch-mock/security\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-shield\">    <path d=\"M7.467.133a1.748 1.748 0 0 1 1.066 0l5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667Zm.61 1.429a.25.25 0 0 0-.153 0l-5.25 1.68a.25.25 0 0 0-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.196.196 0 0 0 .154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.251.251 0 0 0-.174-.237l-5.25-1.68ZM8.75 4.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 1.5 0ZM9 10.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Security</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i6insights-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-aadee4e5-53d1-416a-9e66-62465c6e23a9\" href=\"/jefflau/jest-fetch-mock/pulse\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-graph\">    <path d=\"M1.5 1.75V13.5h13.75a.75.75 0 0 1 0 1.5H.75a.75.75 0 0 1-.75-.75V1.75a.75.75 0 0 1 1.5 0Zm14.28 2.53-5.25 5.25a.75.75 0 0 1-1.06 0L7 7.06 4.28 9.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.25-3.25a.75.75 0 0 1 1.06 0L10 7.94l4.72-4.72a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Insights</span></a>    </li></ul>  </div></div>      </div></anchored-position>  </focus-group></action-menu></div></nav>  </div>  <turbo-frame id=\"repo-content-turbo-frame\" target=\"_top\" data-turbo-action=\"advance\" class=\"\">    <div id=\"repo-content-pjax-container\" class=\"repository-content \" >                <h1 class='sr-only'>jefflau/jest-fetch-mock</h1>  <div class=\"clearfix container-xl px-md-4 px-lg-5 px-3\">    <div>  <div id=\"spoof-warning\" class=\"mt-0 pb-3\" hidden aria-hidden>  <div data-view-component=\"true\" class=\"flash flash-warn mt-0 clearfix\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-alert float-left mt-1\">    <path d=\"M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>      <div class=\"overflow-hidden\">This commit does not belong to any branch on this repository, and may belong to a fork outside of the repository.</div>  </div></div>  <include-fragment src=\"/jefflau/jest-fetch-mock/spoofed_commit_check/800c40d9c73455281901fe527fc26fb1165cc528\" data-test-selector=\"spoofed-commit-check\"></include-fragment>  <div style=\"max-width: 100%\" data-view-component=\"true\" class=\"Layout Layout--flowRow-until-md react-repos-overview-margin Layout--sidebarPosition-end Layout--sidebarPosition-flowRow-end\">  <div data-view-component=\"true\" class=\"Layout-main\">        <script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/react-lib-1fbfc5be2c18.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_octicons-react_dist_index_esm_js-node_modules_primer_react_lib-es-2e8e7c-adc8451a70cf.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Box_Box_js-8f8c5e2a2cbf.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Button_Button_js-67fe00b5266a.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_ActionList_index_js-2dd4d13d3ae6.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Overlay_Overlay_js-node_modules_primer_react_lib-es-fa1130-829932cf63db.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Text_Text_js-node_modules_primer_react_lib-esm_Text-85a14b-236dc9716ad0.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_ActionMenu_ActionMenu_js-eaf74522e470.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_react-router-dom_dist_index_js-3b41341d50fe.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Dialog_js-node_modules_primer_react_lib-esm_Label_L-857e1c-77794958a54a.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_UnderlineNav_index_js-89fa5806aa3c.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_AvatarStack_AvatarStack_js-node_modules_primer_reac-e445e7-175b51e43dcc.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_react-core_create-browser-history_ts-ui_packages_react-core_AppContextProvider_ts-809ab9-bf008735d0bb.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_paths_index_ts-7137b25aa38b.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_ref-selector_RefSelector_tsx-dbbdef4348e2.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_commit-attribution_index_ts-ui_packages_commit-checks-status_index_ts-ui_packages-ffbe33-4c4ddf7d268d.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_react-code-view_components_directory_DirectoryContent_index_ts-app_assets_-1fd1f5-c96303590595.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/repos-overview-523b8f59ec33.js\"></script><react-partial  partial-name=\"repos-overview\"  data-ssr=\"true\">    <script type=\"application/json\" data-target=\"react-partial.embeddedData\">{\"props\":{\"initialPayload\":{\"allShortcutsEnabled\":false,\"path\":\"/\",\"repo\":{\"id\":66015788,\"defaultBranch\":\"master\",\"name\":\"jest-fetch-mock\",\"ownerLogin\":\"jefflau\",\"currentUserCanPush\":false,\"isFork\":false,\"isEmpty\":false,\"createdAt\":\"2016-08-18T17:05:43.000Z\",\"ownerAvatar\":\"https://avatars.githubusercontent.com/u/1221141?v=4\",\"public\":true,\"private\":false,\"isOrgOwned\":false},\"currentUser\":null,\"refInfo\":{\"name\":\"master\",\"listCacheKey\":\"v0:1677902488.65169\",\"canEdit\":false,\"refType\":\"branch\",\"currentOid\":\"800c40d9c73455281901fe527fc26fb1165cc528\"},\"tree\":{\"items\":[{\"name\":\".github/workflows\",\"path\":\".github/workflows\",\"contentType\":\"directory\",\"hasSimplifiedPath\":true},{\"name\":\"src\",\"path\":\"src\",\"contentType\":\"directory\"},{\"name\":\"tests\",\"path\":\"tests\",\"contentType\":\"directory\"},{\"name\":\"types\",\"path\":\"types\",\"contentType\":\"directory\"},{\"name\":\".eslintrc.js\",\"path\":\".eslintrc.js\",\"contentType\":\"file\"},{\"name\":\".gitignore\",\"path\":\".gitignore\",\"contentType\":\"file\"},{\"name\":\".npmignore\",\"path\":\".npmignore\",\"contentType\":\"file\"},{\"name\":\".prettierignore\",\"path\":\".prettierignore\",\"contentType\":\"file\"},{\"name\":\"LICENSE.md\",\"path\":\"LICENSE.md\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"README.md\",\"contentType\":\"file\"},{\"name\":\"package.json\",\"path\":\"package.json\",\"contentType\":\"file\"},{\"name\":\"setupJest.js\",\"path\":\"setupJest.js\",\"contentType\":\"file\"},{\"name\":\"tsconfig.json\",\"path\":\"tsconfig.json\",\"contentType\":\"file\"},{\"name\":\"yarn.lock\",\"path\":\"yarn.lock\",\"contentType\":\"file\"}],\"templateDirectorySuggestionUrl\":null,\"readme\":null,\"totalCount\":14,\"showBranchInfobar\":false},\"fileTree\":null,\"fileTreeProcessingTime\":null,\"foldersToFetch\":[],\"treeExpanded\":false,\"symbolsExpanded\":false,\"isOverview\":true,\"overview\":{\"banners\":{\"shouldRecommendReadme\":false,\"isPersonalRepo\":false,\"showUseActionBanner\":false,\"actionSlug\":null,\"actionId\":null,\"showProtectBranchBanner\":false,\"recentlyTouchedDataChannel\":null,\"publishBannersInfo\":{\"dismissActionNoticePath\":\"/settings/dismiss-notice/publish_action_from_repo\",\"releasePath\":\"/jefflau/jest-fetch-mock/releases/new?marketplace=true\",\"showPublishActionBanner\":false},\"interactionLimitBanner\":null,\"showInvitationBanner\":false,\"inviterName\":null},\"codeButton\":{\"contactPath\":\"/contact\",\"isEnterprise\":false,\"local\":{\"protocolInfo\":{\"httpAvailable\":true,\"sshAvailable\":null,\"httpUrl\":\"https://github.com/jefflau/jest-fetch-mock.git\",\"showCloneWarning\":null,\"sshUrl\":null,\"sshCertificatesRequired\":null,\"sshCertificatesAvailable\":null,\"ghCliUrl\":\"gh repo clone jefflau/jest-fetch-mock\",\"defaultProtocol\":\"http\",\"newSshKeyUrl\":\"/settings/ssh/new\",\"setProtocolPath\":\"/users/set_protocol\"},\"platformInfo\":{\"cloneUrl\":\"https://desktop.github.com\",\"showVisualStudioCloneButton\":false,\"visualStudioCloneUrl\":\"https://windows.github.com\",\"showXcodeCloneButton\":false,\"xcodeCloneUrl\":\"https://developer.apple.com\",\"zipballUrl\":\"/jefflau/jest-fetch-mock/archive/refs/heads/master.zip\"}},\"newCodespacePath\":\"/codespaces/new?hide_repo_select=true\\u0026repo=66015788\"},\"popovers\":{\"rename\":null,\"renamedParentRepo\":null},\"commitCount\":\"225\",\"overviewFiles\":[{\"displayName\":\"README.md\",\"repoName\":\"jest-fetch-mock\",\"refName\":\"master\",\"path\":\"README.md\",\"preferredFileType\":\"readme\",\"tabName\":\"README\",\"richText\":\"\\u003carticle class=\\\"markdown-body entry-content container-lg\\\" itemprop=\\\"text\\\"\\u003e\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch1 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eJest Fetch Mock\\u003c/h1\\u003e\\u003ca id=\\\"user-content-jest-fetch-mock\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Jest Fetch Mock\\\" href=\\\"#jest-fetch-mock\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003ca target=\\\"_blank\\\" rel=\\\"noopener noreferrer nofollow\\\" href=\\\"https://camo.githubusercontent.com/687bde66ebacb25516f5981f37959ce8335c6af7d2b40c7cc1875e270fa631c8/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f6a6573742d66657463682d6d6f636b\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/687bde66ebacb25516f5981f37959ce8335c6af7d2b40c7cc1875e270fa631c8/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f6a6573742d66657463682d6d6f636b\\\" alt=\\\"npm downloads\\\" data-canonical-src=\\\"https://img.shields.io/npm/dw/jest-fetch-mock\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\n\\u003ca target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"https://github.com/jefflau/jest-fetch-mock/workflows/Node.js%20CI/badge.svg\\\"\\u003e\\u003cimg src=\\\"https://github.com/jefflau/jest-fetch-mock/workflows/Node.js%20CI/badge.svg\\\" alt=\\\"Node.js CI\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFetch is the canonical way to do HTTP requests in the browser, and it can be used in other environments such as React Native. Jest Fetch Mock allows you to easily mock your \\u003ccode\\u003efetch\\u003c/code\\u003e calls and return the response you need to fake the HTTP requests. It's easy to setup and you don't need a library like \\u003ccode\\u003enock\\u003c/code\\u003e to get going and it uses Jest's built-in support for mocking under the surface. This means that any of the \\u003ccode\\u003ejest.fn()\\u003c/code\\u003e methods are also available. For more information on the jest mock API, check their docs \\u003ca href=\\\"https://facebook.github.io/jest/docs/en/mock-functions.html\\\" rel=\\\"nofollow\\\"\\u003ehere\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIt currently supports the mocking with the \\u003ca href=\\\"https://www.npmjs.com/package/cross-fetch\\\" rel=\\\"nofollow\\\"\\u003e\\u003ccode\\u003ecross-fetch\\u003c/code\\u003e\\u003c/a\\u003e polyfill, so it supports Node.js and any browser-like runtime.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eContents\\u003c/h2\\u003e\\u003ca id=\\\"user-content-contents\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Contents\\\" href=\\\"#contents\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#usage\\\"\\u003eUsage\\u003c/a\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#package-installation\\\"\\u003eInstallation and Setup\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#using-with-create-react-app\\\"\\u003eUsing with Create-React-App\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#api\\\"\\u003eAPI\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#examples\\\"\\u003eExamples\\u003c/a\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#simple-mock-and-assert\\\"\\u003eSimple mock and assert\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#mocking-all-fetches\\\"\\u003eMocking all fetches\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#mocking-a-failed-fetch\\\"\\u003eMocking a failed fetch\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#mocking-multiple-fetches-with-different-responses\\\"\\u003eMocking multiple fetches with different responses\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#mocking-multiple-fetches-with-fetchmockresponses\\\"\\u003eMocking multiple fetches with \\u003ccode\\u003efetch.mockResponses\\u003c/code\\u003e\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#reset-mocks-between-tests-with-fetchresetmocks\\\"\\u003eReset mocks between tests with \\u003ccode\\u003efetch.resetMocks\\u003c/code\\u003e\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#using-fetchmock-to-inspect-the-mock-state-of-each-fetch-call\\\"\\u003eUsing \\u003ccode\\u003efetch.mock\\u003c/code\\u003e to inspect the mock state of each fetch call\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#using-functions-to-mock-slow-servers\\\"\\u003eUsing functions to mock slow servers\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eUsage\\u003c/h2\\u003e\\u003ca id=\\\"user-content-usage\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Usage\\\" href=\\\"#usage\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003ePackage Installation\\u003c/h3\\u003e\\u003ca id=\\\"user-content-package-installation\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Package Installation\\\" href=\\\"#package-installation\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eTo setup your fetch mock you need to do the following things:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"$ npm install --save-dev jest-fetch-mock\\\"\\u003e\\u003cpre class=\\\"notranslate\\\"\\u003e\\u003ccode\\u003e$ npm install --save-dev jest-fetch-mock\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eCreate a \\u003ccode\\u003esetupJest\\u003c/code\\u003e file to setup the mock or add this to an existing \\u003ccode\\u003esetupFile\\u003c/code\\u003e. :\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eTo setup for all tests\\u003c/h3\\u003e\\u003ca id=\\\"user-content-to-setup-for-all-tests\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: To setup for all tests\\\" href=\\\"#to-setup-for-all-tests\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"//setupJest.js or similar file\\nrequire('jest-fetch-mock').enableMocks()\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e//setupJest.js or similar file\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003erequire\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'jest-fetch-mock'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eenableMocks\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAdd the setupFile to your jest config in \\u003ccode\\u003epackage.json\\u003c/code\\u003e:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-json notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"\\u0026quot;jest\\u0026quot;: {\\n  \\u0026quot;automock\\u0026quot;: false,\\n  \\u0026quot;resetMocks\\u0026quot;: false,\\n  \\u0026quot;setupFiles\\u0026quot;: [\\n    \\u0026quot;./setupJest.js\\u0026quot;\\n  ]\\n}\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-ent\\\"\\u003e\\\"jest\\\"\\u003c/span\\u003e: {\\n  \\u003cspan class=\\\"pl-ent\\\"\\u003e\\\"automock\\\"\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003efalse\\u003c/span\\u003e,\\n  \\u003cspan class=\\\"pl-ent\\\"\\u003e\\\"resetMocks\\\"\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003efalse\\u003c/span\\u003e,\\n  \\u003cspan class=\\\"pl-ent\\\"\\u003e\\\"setupFiles\\\"\\u003c/span\\u003e: [\\n    \\u003cspan class=\\\"pl-s\\\"\\u003e\\u003cspan class=\\\"pl-pds\\\"\\u003e\\\"\\u003c/span\\u003e./setupJest.js\\u003cspan class=\\\"pl-pds\\\"\\u003e\\\"\\u003c/span\\u003e\\u003c/span\\u003e\\n  ]\\n}\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eWith this done, you'll have \\u003ccode\\u003efetch\\u003c/code\\u003e and \\u003ccode\\u003efetchMock\\u003c/code\\u003e available on the global scope. Fetch will be used as usual by your code and you'll use \\u003ccode\\u003efetchMock\\u003c/code\\u003e in your tests\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNote: the \\u003ccode\\u003eresetMocks\\u003c/code\\u003e Jest configuration default was changed from \\u003ccode\\u003efalse\\u003c/code\\u003e to \\u003ccode\\u003etrue\\u003c/code\\u003e in Jest 4.0.1.  Therefore the Jest configuration of setting it to \\u003ccode\\u003efalse\\u003c/code\\u003e is required if the \\u003ccode\\u003esetupJest.js\\u003c/code\\u003e is what calls \\\"enableMocks()\\\" (i.e. in the above suggested setup) otherwise you will need to call \\\"enableMocks()\\\" in a \\\"beforeEach\\\" block.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eDefault not mocked\\u003c/h4\\u003e\\u003ca id=\\\"user-content-default-not-mocked\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Default not mocked\\\" href=\\\"#default-not-mocked\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you would like to have the 'fetchMock' available in all tests but not enabled then add \\u003ccode\\u003efetchMock.dontMock()\\u003c/code\\u003e after the \\u003ccode\\u003e...enableMocks()\\u003c/code\\u003e line in \\u003ccode\\u003esetupJest.js\\u003c/code\\u003e:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"// adds the 'fetchMock' global variable and rewires 'fetch' global to call 'fetchMock' instead of the real implementation\\nrequire('jest-fetch-mock').enableMocks()\\n// changes default behavior of fetchMock to use the real 'fetch' implementation and not mock responses\\nfetchMock.dontMock()\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e// adds the 'fetchMock' global variable and rewires 'fetch' global to call 'fetchMock' instead of the real implementation\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003erequire\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'jest-fetch-mock'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eenableMocks\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e// changes default behavior of fetchMock to use the real 'fetch' implementation and not mock responses\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003efetchMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you want a single test file to return to the default behavior of mocking all responses, add the following to the\\ntest file:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"beforeEach(() =\\u0026gt; {\\n  // if you have an existing `beforeEach` just add the following line to it\\n  fetchMock.doMock()\\n})\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-c\\\"\\u003e// if you have an existing `beforeEach` just add the following line to it\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-s1\\\"\\u003efetchMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eTo enable mocking for a specific URL only:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"beforeEach(() =\\u0026gt; {\\n  // if you have an existing `beforeEach` just add the following lines to it\\n  fetchMock.mockIf(/^https?:\\\\/\\\\/example.com.*$/, req =\\u0026gt; {\\n    if (req.url.endsWith('/path1')) {\\n      return 'some response body'\\n    } else if (req.url.endsWith('/path2')) {\\n      return {\\n        body: 'another response body',\\n        headers: {\\n          'X-Some-Response-Header': 'Some header value'\\n        }\\n      }\\n    } else {\\n      return {\\n        status: 404,\\n        body: 'Not Found'\\n      }\\n    }\\n  })\\n})\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-c\\\"\\u003e// if you have an existing `beforeEach` just add the following lines to it\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-s1\\\"\\u003efetchMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-pds\\\"\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e/\\u003c/span\\u003e\\u003cspan class=\\\"pl-cce\\\"\\u003e^\\u003c/span\\u003ehttps?:\\u003cspan class=\\\"pl-cce\\\"\\u003e\\\\/\\u003c/span\\u003e\\u003cspan class=\\\"pl-cce\\\"\\u003e\\\\/\\u003c/span\\u003eexample.com.\\u003cspan class=\\\"pl-c1\\\"\\u003e*\\u003c/span\\u003e\\u003cspan class=\\\"pl-cce\\\"\\u003e$\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e/\\u003c/span\\u003e\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ereq\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eif\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ereq\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eurl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eendsWith\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'/path1'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'some response body'\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eelse\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eif\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ereq\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eurl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eendsWith\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'/path2'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003ebody\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'another response body'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003eheaders\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-s\\\"\\u003e'X-Some-Response-Header'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Some header value'\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eelse\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003estatus\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e404\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003ebody\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Not Found'\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you have changed the default behavior to use the real implementation, you can guarantee the next call to fetch\\nwill be mocked by using the \\u003ccode\\u003emockOnce\\u003c/code\\u003e function:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"fetchMock.mockOnce('the next call to fetch will always return this as the body')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetchMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'the next call to fetch will always return this as the body'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThis function behaves exactly like \\u003ccode\\u003efetchMock.once\\u003c/code\\u003e but guarantees the next call to \\u003ccode\\u003efetch\\u003c/code\\u003e will be mocked even if the\\ndefault behavior of fetchMock is to use the real implementation. You can safely convert all you \\u003ccode\\u003efetchMock.once\\u003c/code\\u003e calls\\nto \\u003ccode\\u003efetchMock.mockOnce\\u003c/code\\u003e without a risk of changing their behavior.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eTo setup for an individual test\\u003c/h3\\u003e\\u003ca id=\\\"user-content-to-setup-for-an-individual-test\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: To setup for an individual test\\\" href=\\\"#to-setup-for-an-individual-test\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFor JavaScript add the following line to the start of your test case (before any other requires)\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"require('jest-fetch-mock').enableMocks()\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003erequire\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'jest-fetch-mock'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eenableMocks\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFor TypeScript/ES6 add the following lines to the start of your test case (before any other imports)\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import { enableFetchMocks } from 'jest-fetch-mock'\\nenableFetchMocks()\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eenableFetchMocks\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'jest-fetch-mock'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eenableFetchMocks\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eTypeScript importing\\u003c/h4\\u003e\\u003ca id=\\\"user-content-typescript-importing\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: TypeScript importing\\\" href=\\\"#typescript-importing\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you are using TypeScript and receive errors about the \\u003ccode\\u003efetchMock\\u003c/code\\u003e global not existing,\\nadd a \\u003ccode\\u003eglobal.d.ts\\u003c/code\\u003e file to the root of your project (or add the following line to an existing global file):\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import 'jest-fetch-mock'\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'jest-fetch-mock'\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you prefer you can also just import the fetchMock in a test case.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import fetchMock from 'jest-fetch-mock'\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003efetchMock\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'jest-fetch-mock'\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eYou may also need to edit your \\u003ccode\\u003etsconfig.json\\u003c/code\\u003e and add \\\"dom\\\" and/or \\\"es2015\\\" and/or \\\"esnext\\\" to the 'compilerConfig.lib' property\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eUsing with Create-React-App\\u003c/h3\\u003e\\u003ca id=\\\"user-content-using-with-create-react-app\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Using with Create-React-App\\\" href=\\\"#using-with-create-react-app\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you are using \\u003ca href=\\\"https://github.com/facebookincubator/create-react-app\\\"\\u003eCreate-React-App\\u003c/a\\u003e (CRA), the code for \\u003ccode\\u003esetupJest.js\\u003c/code\\u003e above should be placed into \\u003ccode\\u003esrc/setupTests.js\\u003c/code\\u003e in the root of your project. CRA automatically uses this filename by convention in the Jest configuration it generates. Similarly, changing to your \\u003ccode\\u003epackage.json\\u003c/code\\u003e is not required as CRA handles this when generating your Jest configuration.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eFor Ejected Create React Apps \\u003cem\\u003eONLY\\u003c/em\\u003e:\\u003c/h3\\u003e\\u003ca id=\\\"user-content-for-ejected-create-react-apps-only\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: For Ejected Create React Apps ONLY:\\\" href=\\\"#for-ejected-create-react-apps-only\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cblockquote\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNote: Keep in mind that if you decide to \\\"eject\\\" before creating src/setupTests.js, the resulting package.json file won't contain any reference to it, so you should manually create the property setupTestFrameworkScriptFile in the configuration for Jest, something like the \\u003ca href=\\\"https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#srcsetuptestsjs-1\\\"\\u003efollowing\\u003c/a\\u003e:\\u003c/p\\u003e\\n\\u003c/blockquote\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-json notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"\\u0026quot;jest\\u0026quot;: {\\n  \\u0026quot;setupTestFrameworkScriptFile\\u0026quot;: \\u0026quot;\\u0026lt;rootDir\\u0026gt;/src/setupTests.js\\u0026quot;\\n }\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-ent\\\"\\u003e\\\"jest\\\"\\u003c/span\\u003e: {\\n  \\u003cspan class=\\\"pl-ent\\\"\\u003e\\\"setupTestFrameworkScriptFile\\\"\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e\\u003cspan class=\\\"pl-pds\\\"\\u003e\\\"\\u003c/span\\u003e\\u0026lt;rootDir\\u0026gt;/src/setupTests.js\\u003cspan class=\\\"pl-pds\\\"\\u003e\\\"\\u003c/span\\u003e\\u003c/span\\u003e\\n }\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eAPI\\u003c/h2\\u003e\\u003ca id=\\\"user-content-api\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: API\\\" href=\\\"#api\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eMock Responses\\u003c/h3\\u003e\\u003ca id=\\\"user-content-mock-responses\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Mock Responses\\\" href=\\\"#mock-responses\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.mockResponse(bodyOrFunction, init): fetch\\u003c/code\\u003e - Mock all fetch calls\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.mockResponseOnce(bodyOrFunction, init): fetch\\u003c/code\\u003e - Mock each fetch call independently\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.once(bodyOrFunction, init): fetch\\u003c/code\\u003e - Alias for \\u003ccode\\u003emockResponseOnce(bodyOrFunction, init)\\u003c/code\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.mockResponses(...responses): fetch\\u003c/code\\u003e - Mock multiple fetch calls independently\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003eEach argument is an array taking \\u003ccode\\u003e[bodyOrFunction, init]\\u003c/code\\u003e\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.mockReject(errorOrFunction): fetch\\u003c/code\\u003e - Mock all fetch calls, letting them fail directly\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.mockRejectOnce(errorOrFunction): fetch\\u003c/code\\u003e - Let the next fetch call fail directly\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.mockAbort(): fetch\\u003c/code\\u003e - Causes all fetch calls to reject with an \\\"Aborted!\\\" error\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.mockAbortOnce(): fetch\\u003c/code\\u003e - Causes the next fetch call to reject with an \\\"Aborted!\\\" error\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eFunctions\\u003c/h3\\u003e\\u003ca id=\\\"user-content-functions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Functions\\\" href=\\\"#functions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eInstead of passing body, it is also possible to pass a function that returns a promise.\\nThe promise should resolve with a string or an object containing body and init props\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003ei.e:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"fetch.mockResponse(() =\\u0026gt; callMyApi().then(res =\\u0026gt; ({ body: 'ok' })))\\n// OR\\nfetch.mockResponse(() =\\u0026gt; callMyApi().then(res =\\u0026gt; 'ok'))\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003ecallMyApi\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ethen\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eres\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003ebody\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'ok'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e// OR\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003ecallMyApi\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ethen\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eres\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'ok'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe function may take an optional \\\"request\\\" parameter of type \\u003ccode\\u003ehttp.Request\\u003c/code\\u003e:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"fetch.mockResponse(req =\\u0026gt;\\n  req.url === 'http://myapi/'\\n    ? callMyApi().then(res =\\u0026gt; 'ok')\\n    : Promise.reject(new Error('bad url'))\\n)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ereq\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-s1\\\"\\u003ereq\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eurl\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e===\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'http://myapi/'\\u003c/span\\u003e\\n    ? \\u003cspan class=\\\"pl-en\\\"\\u003ecallMyApi\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ethen\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eres\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'ok'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    : \\u003cspan class=\\\"pl-v\\\"\\u003ePromise\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ereject\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003enew\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eError\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'bad url'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNote: the request \\\"url\\\" is parsed and then printed using the equivalent of \\u003ccode\\u003enew URL(input).href\\u003c/code\\u003e so it may not match exactly with the URL's passed to \\u003ccode\\u003efetch\\u003c/code\\u003e if they are not fully qualified.\\nFor example, passing \\\"\\u003ca href=\\\"http://foo.com\\\" rel=\\\"nofollow\\\"\\u003ehttp://foo.com\\u003c/a\\u003e\\\" to \\u003ccode\\u003efetch\\u003c/code\\u003e will result in the request URL being \\\"\\u003ca href=\\\"http://foo.com/\\\" rel=\\\"nofollow\\\"\\u003ehttp://foo.com/\\u003c/a\\u003e\\\" (note the trailing slash).\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe same goes for rejects:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"fetch.mockReject(() =\\u0026gt;\\n  doMyAsyncJob().then(res =\\u0026gt; Promise.reject(res.errorToRaise))\\n)\\n// OR\\nfetch.mockReject(req =\\u0026gt;\\n  req.headers.get('content-type') === 'text/plain'\\n    ? Promise.reject('invalid content type')\\n    : doMyAsyncJob().then(res =\\u0026gt; Promise.reject(res.errorToRaise))\\n)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockReject\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003edoMyAsyncJob\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ethen\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eres\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003ePromise\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ereject\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eres\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eerrorToRaise\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e// OR\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockReject\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ereq\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-s1\\\"\\u003ereq\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eheaders\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eget\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'content-type'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e===\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'text/plain'\\u003c/span\\u003e\\n    ? \\u003cspan class=\\\"pl-v\\\"\\u003ePromise\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ereject\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'invalid content type'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    : \\u003cspan class=\\\"pl-en\\\"\\u003edoMyAsyncJob\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ethen\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eres\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003ePromise\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ereject\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eres\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eerrorToRaise\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eMock utilities\\u003c/h3\\u003e\\u003ca id=\\\"user-content-mock-utilities\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Mock utilities\\\" href=\\\"#mock-utilities\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.resetMocks()\\u003c/code\\u003e - Clear previously set mocks so they do not bleed into other mocks\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.enableMocks()\\u003c/code\\u003e - Enable fetch mocking by overriding \\u003ccode\\u003eglobal.fetch\\u003c/code\\u003e and mocking \\u003ccode\\u003enode-fetch\\u003c/code\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.disableMocks()\\u003c/code\\u003e - Disable fetch mocking and restore default implementation of \\u003ccode\\u003efetch\\u003c/code\\u003e and/or \\u003ccode\\u003enode-fetch\\u003c/code\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.mock\\u003c/code\\u003e - The mock state for your fetch calls. Make assertions on the arguments given to \\u003ccode\\u003efetch\\u003c/code\\u003e when called by the functions you are testing. For more information check the \\u003ca href=\\\"https://facebook.github.io/jest/docs/en/mock-functions.html#mock-property\\\" rel=\\\"nofollow\\\"\\u003eJest docs\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFor information on the arguments body and init can take, you can look at the MDN docs on the Response Constructor function, which \\u003ccode\\u003ejest-fetch-mock\\u003c/code\\u003e uses under the surface.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003ca href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/Response/Response\\\" rel=\\\"nofollow\\\"\\u003ehttps://developer.mozilla.org/en-US/docs/Web/API/Response/Response\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eEach mocked response or err\\nor will return a \\u003ca href=\\\"http://facebook.github.io/jest/docs/mock-function-api.html#content\\\" rel=\\\"nofollow\\\"\\u003eMock Function\\u003c/a\\u003e. You can use methods like \\u003ccode\\u003e.toHaveBeenCalledWith\\u003c/code\\u003e to ensure that the mock function was called with specific arguments. For more methods detail, take a look at \\u003ca href=\\\"http://facebook.github.io/jest/docs/expect.html#content\\\" rel=\\\"nofollow\\\"\\u003ethis\\u003c/a\\u003e.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eExamples\\u003c/h2\\u003e\\u003ca id=\\\"user-content-examples\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Examples\\\" href=\\\"#examples\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn most of the complicated examples below, I am testing my action creators in Redux, but it doesn't have to be used with Redux.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eSimple mock and assert\\u003c/h3\\u003e\\u003ca id=\\\"user-content-simple-mock-and-assert\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Simple mock and assert\\\" href=\\\"#simple-mock-and-assert\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn this simple example I won't be using any libraries. It is a simple fetch request, in this case to google.com. First we setup the \\u003ccode\\u003ebeforeEach\\u003c/code\\u003e callback to reset our mocks. This isn't strictly necessary in this example, but since we will probably be mocking fetch more than once, we need to reset it across our tests to assert on the arguments given to fetch. Make sure the function wrapping your test is marked as async.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eOnce we've done that we can start to mock our response. We want to give it an object with a \\u003ccode\\u003edata\\u003c/code\\u003e property and a string value of \\u003ccode\\u003e12345\\u003c/code\\u003e and wrap it in \\u003ccode\\u003eJSON.stringify\\u003c/code\\u003e to JSONify it. Here we use \\u003ccode\\u003emockResponseOnce\\u003c/code\\u003e, but we could also use \\u003ccode\\u003eonce\\u003c/code\\u003e, which is an alias for a call to \\u003ccode\\u003emockResponseOnce\\u003c/code\\u003e.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eWe then call the function that we want to test with the arguments we want to test with. We use \\u003ccode\\u003eawait\\u003c/code\\u003e to wait until the response resolves, and then assert we have got the correct data back.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFinally we can assert on the \\u003ccode\\u003e.mock\\u003c/code\\u003e state that Jest provides for us to test what arguments were given to fetch and how many times it was called\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"//api.js\\nexport function APIRequest(who) {\\n  if (who === 'google') {\\n    return fetch('https://google.com').then(res =\\u0026gt; res.json())\\n  } else {\\n    return 'no argument provided'\\n  }\\n}\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e//api.js\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eexport\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efunction\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAPIRequest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ewho\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-k\\\"\\u003eif\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ewho\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e===\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'google'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'https://google.com'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ethen\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eres\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eres\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ejson\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eelse\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'no argument provided'\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"//api.test.js\\nimport { APIRequest } from './api'\\n\\ndescribe('testing api', () =\\u0026gt; {\\n  beforeEach(() =\\u0026gt; {\\n    fetch.resetMocks()\\n  })\\n\\n  it('calls google and returns data to me', async () =\\u0026gt; {\\n    fetch.mockResponseOnce(JSON.stringify({ data: '12345' }))\\n\\n    //assert on the response\\n    const res = await APIRequest('google')\\n    expect(res.data).toEqual('12345')\\n\\n    //assert on the times called and arguments given to fetch\\n    expect(fetch.mock.calls.length).toEqual(1)\\n    expect(fetch.mock.calls[0][0]).toEqual('https://google.com')\\n  })\\n})\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e//api.test.js\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAPIRequest\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'./api'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'testing api'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eresetMocks\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'calls google and returns data to me'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponseOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003edata\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'12345'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e//assert on the response\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eres\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAPIRequest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'google'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eres\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003edata\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'12345'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e//assert on the times called and arguments given to fetch\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003emock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ecalls\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003elength\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003emock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ecalls\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'https://google.com'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eMocking all fetches\\u003c/h3\\u003e\\u003ca id=\\\"user-content-mocking-all-fetches\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Mocking all fetches\\\" href=\\\"#mocking-all-fetches\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn this example I am mocking just one fetch call. Any additional fetch calls in the same function will also have the same mock response. For more complicated functions with multiple fetch calls, you can check out example 3.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import configureMockStore from 'redux-mock-store' // mock store\\nimport thunk from 'redux-thunk'\\n\\nconst middlewares = [thunk]\\nconst mockStore = configureMockStore(middlewares)\\n\\nimport { getAccessToken } from './accessToken'\\n\\ndescribe('Access token action creators', () =\\u0026gt; {\\n  it('dispatches the correct actions on successful fetch request', () =\\u0026gt; {\\n    fetch.mockResponse(JSON.stringify({ access_token: '12345' }))\\n\\n    const expectedActions = [\\n      { type: 'SET_ACCESS_TOKEN', token: { access_token: '12345' } }\\n    ]\\n    const store = mockStore({ config: { token: '' } })\\n\\n    return (\\n      store\\n        .dispatch(getAccessToken())\\n        //getAccessToken contains the fetch call\\n        .then(() =\\u0026gt; {\\n          // return of async actions\\n          expect(store.getActions()).toEqual(expectedActions)\\n        })\\n    )\\n  })\\n})\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003econfigureMockStore\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'redux-mock-store'\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// mock store\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ethunk\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'redux-thunk'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emiddlewares\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ethunk\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockStore\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003econfigureMockStore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emiddlewares\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003egetAccessToken\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'./accessToken'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'Access token action creators'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dispatches the correct actions on successful fetch request'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaccess_token\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'12345'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eexpectedActions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003etype\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'SET_ACCESS_TOKEN'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003etoken\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaccess_token\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'12345'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockStore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003econfig\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003etoken\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e''\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edispatch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003egetAccessToken\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e//getAccessToken contains the fetch call\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ethen\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-c\\\"\\u003e// return of async actions\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003egetActions\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eexpectedActions\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eMocking a failed fetch\\u003c/h3\\u003e\\u003ca id=\\\"user-content-mocking-a-failed-fetch\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Mocking a failed fetch\\\" href=\\\"#mocking-a-failed-fetch\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn this example I am mocking just one fetch call but this time using the \\u003ccode\\u003emockReject\\u003c/code\\u003e function to simulate a failed request. Any additional fetch calls in the same function will also have the same mock response. For more complicated functions with multiple fetch calls, you can check out example 3.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import configureMockStore from 'redux-mock-store' // mock store\\nimport thunk from 'redux-thunk'\\n\\nconst middlewares = [thunk]\\nconst mockStore = configureMockStore(middlewares)\\n\\nimport { getAccessToken } from './accessToken'\\n\\ndescribe('Access token action creators', () =\\u0026gt; {\\n  it('dispatches the correct actions on a failed fetch request', () =\\u0026gt; {\\n    fetch.mockReject(new Error('fake error message'))\\n\\n    const expectedActions = [\\n      { type: 'SET_ACCESS_TOKEN_FAILED', error: { status: 503 } }\\n    ]\\n    const store = mockStore({ config: { token: '' } })\\n\\n    return (\\n      store\\n        .dispatch(getAccessToken())\\n        //getAccessToken contains the fetch call\\n        .then(() =\\u0026gt; {\\n          // return of async actions\\n          expect(store.getActions()).toEqual(expectedActions)\\n        })\\n    )\\n  })\\n})\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003econfigureMockStore\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'redux-mock-store'\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// mock store\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ethunk\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'redux-thunk'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emiddlewares\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ethunk\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockStore\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003econfigureMockStore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emiddlewares\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003egetAccessToken\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'./accessToken'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'Access token action creators'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dispatches the correct actions on a failed fetch request'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockReject\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003enew\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eError\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'fake error message'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eexpectedActions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003etype\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'SET_ACCESS_TOKEN_FAILED'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eerror\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003estatus\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e503\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockStore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003econfig\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003etoken\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e''\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edispatch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003egetAccessToken\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e//getAccessToken contains the fetch call\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ethen\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-c\\\"\\u003e// return of async actions\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003egetActions\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eexpectedActions\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eMocking aborted fetches\\u003c/h3\\u003e\\u003ca id=\\\"user-content-mocking-aborted-fetches\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Mocking aborted fetches\\\" href=\\\"#mocking-aborted-fetches\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFetches can be mocked to act as if they were aborted during the request. This can be done in 4 ways:\\u003c/p\\u003e\\n\\u003col dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003eUsing `fetch.mockAborted()`\\u003c/li\\u003e\\n\\u003cli\\u003eUsing `fetch.mockAbortedOnce()`\\u003c/li\\u003e\\n\\u003cli\\u003ePassing a request (or request init) with a 'signal' to fetch that has been aborted\\u003c/li\\u003e\\n\\u003cli\\u003ePassing a request (or request init) with a 'signal' to fetch and a async function to `fetch.mockResponse` or `fetch.mockResponseOnce` that causes the signal to abort before returning the response\\u003c/li\\u003e\\n\\u003c/ol\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"describe('Mocking aborts', () =\\u0026gt; {\\n  beforeEach(() =\\u0026gt; {\\n    fetch.resetMocks()\\n    fetch.doMock()\\n    jest.useFakeTimers()\\n  })\\n  afterEach(() =\\u0026gt; {\\n    jest.useRealTimers()\\n  })\\n\\n  it('rejects with an Aborted! Error', () =\\u0026gt; {\\n    fetch.mockAbort()\\n    expect(fetch('/')).rejects.toThrow('Aborted!')\\n  })\\n  it('rejects with an Aborted! Error once then mocks with empty response', async () =\\u0026gt; {\\n    fetch.mockAbortOnce()\\n    await expect(fetch('/')).rejects.toThrow('Aborted!')\\n    await expect(request()).resolves.toEqual('')\\n  })\\n\\n  it('throws when passed an already aborted abort signal', () =\\u0026gt; {\\n    const c = new AbortController()\\n    c.abort()\\n    expect(() =\\u0026gt; fetch('/', { signal: c.signal })).toThrow('Aborted!')\\n  })\\n\\n  it('rejects when aborted before resolved', async () =\\u0026gt; {\\n    const c = new AbortController()\\n    fetch.mockResponse(async () =\\u0026gt; {\\n      jest.advanceTimersByTime(60)\\n      return ''\\n    })\\n    setTimeout(() =\\u0026gt; c.abort(), 50)\\n    await expect(fetch('/', { signal: c.signal })).rejects.toThrow('Aborted!')\\n  })\\n})\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'Mocking aborts'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eresetMocks\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003ejest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003euseFakeTimers\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eafterEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003ejest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003euseRealTimers\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'rejects with an Aborted! Error'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockAbort\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'/'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003erejects\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoThrow\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'Aborted!'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'rejects with an Aborted! Error once then mocks with empty response'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockAbortOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'/'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003erejects\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoThrow\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'Aborted!'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003erequest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eresolves\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e''\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'throws when passed an already aborted abort signal'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ec\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003enew\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAbortController\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003ec\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eabort\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'/'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003esignal\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s1\\\"\\u003ec\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003esignal\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoThrow\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'Aborted!'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'rejects when aborted before resolved'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ec\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003enew\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAbortController\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003ejest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eadvanceTimersByTime\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e60\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e''\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003esetTimeout\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ec\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eabort\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e50\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'/'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003esignal\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s1\\\"\\u003ec\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003esignal\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003erejects\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoThrow\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'Aborted!'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eMocking a redirected response\\u003c/h3\\u003e\\u003ca id=\\\"user-content-mocking-a-redirected-response\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Mocking a redirected response\\\" href=\\\"#mocking-a-redirected-response\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSet the counter option \\u0026gt;= 1 in the response init object to mock a redirected response \\u003ca href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/Response/redirected\\\" rel=\\\"nofollow\\\"\\u003ehttps://developer.mozilla.org/en-US/docs/Web/API/Response/redirected\\u003c/a\\u003e. Note, this will only work in Node.js as it's a feature of node fetch's response class \\u003ca href=\\\"https://github.com/node-fetch/node-fetch/blob/master/src/response.js#L39\\\"\\u003ehttps://github.com/node-fetch/node-fetch/blob/master/src/response.js#L39\\u003c/a\\u003e.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"fetchMock.mockResponse(\\u0026quot;\\u0026lt;main\\u0026gt;\\u0026lt;/main\\u0026gt;\\u0026quot;, {\\n  counter: 1,\\n  status: 200,\\n  statusText: \\u0026quot;ok\\u0026quot;,\\n});\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetchMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"\\u0026lt;main\\u0026gt;\\u0026lt;/main\\u0026gt;\\\"\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-c1\\\"\\u003ecounter\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-c1\\\"\\u003estatus\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e200\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-c1\\\"\\u003estatusText\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"ok\\\"\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e;\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eMocking multiple fetches with different responses\\u003c/h3\\u003e\\u003ca id=\\\"user-content-mocking-multiple-fetches-with-different-responses\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Mocking multiple fetches with different responses\\\" href=\\\"#mocking-multiple-fetches-with-different-responses\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn this next example, the store does not yet have a token, so we make a request to get an access token first. This means that we need to mock two different responses, one for each of the fetches. Here we can use \\u003ccode\\u003efetch.mockResponseOnce\\u003c/code\\u003e or \\u003ccode\\u003efetch.once\\u003c/code\\u003e to mock the response only once and call it twice. Because we return the mocked function, we can chain this jQuery style. It internally uses Jest's \\u003ccode\\u003emockImplementationOnce\\u003c/code\\u003e. You can read more about it on the \\u003ca href=\\\"https://facebook.github.io/jest/docs/mock-functions.html#content\\\" rel=\\\"nofollow\\\"\\u003eJest documentation\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import configureMockStore from 'redux-mock-store'\\nimport thunk from 'redux-thunk'\\n\\nconst middlewares = [thunk]\\nconst mockStore = configureMockStore(middlewares)\\n\\nimport { getAnimeDetails } from './animeDetails'\\n\\ndescribe('Anime details action creators', () =\\u0026gt; {\\n  it('dispatches requests for an access token before requesting for animeDetails', () =\\u0026gt; {\\n    fetch\\n      .once(JSON.stringify({ access_token: '12345' }))\\n      .once(JSON.stringify({ name: 'naruto' }))\\n\\n    const expectedActions = [\\n      { type: 'SET_ACCESS_TOKEN', token: { access_token: '12345' } },\\n      { type: 'SET_ANIME_DETAILS', animeDetails: { name: 'naruto' } }\\n    ]\\n    const store = mockStore({ config: { token: null } })\\n\\n    return (\\n      store\\n        .dispatch(getAnimeDetails('21049'))\\n        //getAnimeDetails contains the 2 fetch calls\\n        .then(() =\\u0026gt; {\\n          // return of async actions\\n          expect(store.getActions()).toEqual(expectedActions)\\n        })\\n    )\\n  })\\n})\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003econfigureMockStore\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'redux-mock-store'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ethunk\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'redux-thunk'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emiddlewares\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ethunk\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockStore\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003econfigureMockStore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emiddlewares\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003egetAnimeDetails\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'./animeDetails'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'Anime details action creators'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dispatches requests for an access token before requesting for animeDetails'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eonce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaccess_token\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'12345'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eonce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'naruto'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eexpectedActions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003etype\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'SET_ACCESS_TOKEN'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003etoken\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaccess_token\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'12345'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003etype\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'SET_ANIME_DETAILS'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eanimeDetails\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'naruto'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockStore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003econfig\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003etoken\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003enull\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edispatch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003egetAnimeDetails\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'21049'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e//getAnimeDetails contains the 2 fetch calls\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ethen\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-c\\\"\\u003e// return of async actions\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003egetActions\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eexpectedActions\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eMocking multiple fetches with \\u003ccode\\u003efetch.mockResponses\\u003c/code\\u003e\\u003c/h3\\u003e\\u003ca id=\\\"user-content-mocking-multiple-fetches-with-fetchmockresponses\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Mocking multiple fetches with fetch.mockResponses\\\" href=\\\"#mocking-multiple-fetches-with-fetchmockresponses\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003ccode\\u003efetch.mockResponses\\u003c/code\\u003e takes as many arguments as you give it, all of which are arrays representing each Response Object. It will then call the \\u003ccode\\u003emockImplementationOnce\\u003c/code\\u003e for each response object you give it. This reduces the amount of boilerplate code you need to write. An alternative is to use \\u003ccode\\u003e.once\\u003c/code\\u003e and chain it multiple times if you don't like wrapping each response arguments in a tuple/array.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn this example our actionCreator calls \\u003ccode\\u003efetch\\u003c/code\\u003e 4 times, once for each season of the year and then concatenates the results into one final array. You'd have to write \\u003ccode\\u003efetch.mockResponseOnce\\u003c/code\\u003e 4 times to achieve the same thing:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"describe('getYear action creator', () =\\u0026gt; {\\n  it('dispatches the correct actions on successful getSeason fetch request', () =\\u0026gt; {\\n    fetch.mockResponses(\\n      [\\n        JSON.stringify([{ name: 'naruto', average_score: 79 }]),\\n        { status: 200 }\\n      ],\\n      [\\n        JSON.stringify([{ name: 'bleach', average_score: 68 }]),\\n        { status: 200 }\\n      ],\\n      [\\n        JSON.stringify([{ name: 'one piece', average_score: 80 }]),\\n        { status: 200 }\\n      ],\\n      [\\n        JSON.stringify([{ name: 'shingeki', average_score: 91 }]),\\n        { status: 200 }\\n      ]\\n    )\\n\\n    const expectedActions = [\\n      {\\n        type: 'FETCH_ANIMELIST_REQUEST'\\n      },\\n      {\\n        type: 'SET_YEAR',\\n        payload: {\\n          animes: [\\n            { name: 'naruto', average_score: 7.9 },\\n            { name: 'bleach', average_score: 6.8 },\\n            { name: 'one piece', average_score: 8 },\\n            { name: 'shingeki', average_score: 9.1 }\\n          ],\\n          year: 2016\\n        }\\n      },\\n      {\\n        type: 'FETCH_ANIMELIST_COMPLETE'\\n      }\\n    ]\\n    const store = mockStore({\\n      config: {\\n        token: { access_token: 'wtw45CmyEuh4P621IDVxWkgVr5QwTg3wXEc4Z7Cv' }\\n      },\\n      years: []\\n    })\\n\\n    return (\\n      store\\n        .dispatch(getYear(2016))\\n        //This calls fetch 4 times, once for each season\\n        .then(() =\\u0026gt; {\\n          // return of async actions\\n          expect(store.getActions()).toEqual(expectedActions)\\n        })\\n    )\\n  })\\n})\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'getYear action creator'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dispatches the correct actions on successful getSeason fetch request'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponses\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'naruto'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e79\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003estatus\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e200\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'bleach'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e68\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003estatus\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e200\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'one piece'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e80\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003estatus\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e200\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'shingeki'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e91\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003estatus\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e200\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eexpectedActions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003etype\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'FETCH_ANIMELIST_REQUEST'\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003etype\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'SET_YEAR'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003epayload\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-c1\\\"\\u003eanimes\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n            \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'naruto'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e7.9\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n            \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'bleach'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e6.8\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n            \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'one piece'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e8\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n            \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'shingeki'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e9.1\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-c1\\\"\\u003eyear\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e2016\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003etype\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'FETCH_ANIMELIST_COMPLETE'\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003emockStore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-c1\\\"\\u003econfig\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003etoken\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaccess_token\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'wtw45CmyEuh4P621IDVxWkgVr5QwTg3wXEc4Z7Cv'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-c1\\\"\\u003eyears\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edispatch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003egetYear\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e2016\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e//This calls fetch 4 times, once for each season\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ethen\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-c\\\"\\u003e// return of async actions\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003egetActions\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eexpectedActions\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eReset mocks between tests with \\u003ccode\\u003efetch.resetMocks\\u003c/code\\u003e\\u003c/h3\\u003e\\u003ca id=\\\"user-content-reset-mocks-between-tests-with-fetchresetmocks\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Reset mocks between tests with fetch.resetMocks\\\" href=\\\"#reset-mocks-between-tests-with-fetchresetmocks\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003ccode\\u003efetch.resetMocks\\u003c/code\\u003e resets the \\u003ccode\\u003efetch\\u003c/code\\u003e mock to give fresh mock data in between tests. It only resets the \\u003ccode\\u003efetch\\u003c/code\\u003e calls as to not disturb any other mocked functionality.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"describe('getYear action creator', () =\\u0026gt; {\\n  beforeEach(() =\\u0026gt; {\\n      fetch.resetMocks();\\n  });\\n  it('dispatches the correct actions on successful getSeason fetch request', () =\\u0026gt; {\\n\\n    fetch.mockResponses(\\n      [\\n        JSON.stringify([ {name: 'naruto', average_score: 79} ]), { status: 200}\\n      ],\\n      [\\n        JSON.stringify([ {name: 'bleach', average_score: 68} ]), { status: 200}\\n      ]\\n    )\\n\\n    const expectedActions = [\\n      {\\n        type: 'FETCH_ANIMELIST_REQUEST'\\n      },\\n      {\\n        type: 'SET_YEAR',\\n        payload: {\\n          animes: [\\n            {name: 'naruto', average_score: 7.9},\\n            {name: 'bleach', average_score: 6.8}\\n          ],\\n          year: 2016,\\n        }\\n      },\\n      {\\n        type: 'FETCH_ANIMELIST_COMPLETE'\\n      }\\n    ]\\n    const store = mockStore({\\n      config: { token: { access_token: 'wtw45CmyEuh4P621IDVxWkgVr5QwTg3wXEc4Z7Cv' }},\\n      years: []\\n    })\\n\\n    return store.dispatch(getYear(2016))\\n      //This calls fetch 2 times, once for each season\\n      .then(() =\\u0026gt; { // return of async actions\\n        expect(store.getActions()).toEqual(expectedActions)\\n      })\\n  });\\n  it('dispatches the correct actions on successful getSeason fetch request', () =\\u0026gt; {\\n\\n    fetch.mockResponses(\\n      [\\n        JSON.stringify([ {name: 'bleach', average_score: 68} ]), { status: 200}\\n      ],\\n      [\\n        JSON.stringify([ {name: 'one piece', average_score: 80} ]), { status: 200}\\n      ],\\n      [\\n        JSON.stringify([ {name: 'shingeki', average_score: 91} ]), { status: 200}\\n      ]\\n    )\\n\\n    const expectedActions = [\\n      {\\n        type: 'FETCH_ANIMELIST_REQUEST'\\n      },\\n      {\\n        type: 'SET_YEAR',\\n        payload: {\\n          animes: [\\n            {name: 'bleach', average_score: 6.8},\\n            {name: 'one piece', average_score: 8},\\n            {name: 'shingeki', average_score: 9.1}\\n          ],\\n          year: 2016,\\n        }\\n      },\\n      {\\n        type: 'FETCH_ANIMELIST_COMPLETE'\\n      }\\n    ]\\n    const store = mockStore({\\n      config: { token: { access_token: 'wtw45CmyEuh4P621IDVxWkgVr5QwTg3wXEc4Z7Cv' }},\\n      years: []\\n    })\\n\\n    return store.dispatch(getYear(2016))\\n      //This calls fetch 3 times, once for each season\\n      .then(() =\\u0026gt; { // return of async actions\\n        expect(store.getActions()).toEqual(expectedActions)\\n      })\\n      ,\\n\\n  })\\n})\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'getYear action creator'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eresetMocks\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e;\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e;\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dispatches the correct actions on successful getSeason fetch request'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponses\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'naruto'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e79\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003estatus\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e200\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'bleach'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e68\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003estatus\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e200\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eexpectedActions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003etype\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'FETCH_ANIMELIST_REQUEST'\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003etype\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'SET_YEAR'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003epayload\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-c1\\\"\\u003eanimes\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n            \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'naruto'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e7.9\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n            \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'bleach'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e6.8\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-c1\\\"\\u003eyear\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e2016\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003etype\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'FETCH_ANIMELIST_COMPLETE'\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003emockStore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-c1\\\"\\u003econfig\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003etoken\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaccess_token\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'wtw45CmyEuh4P621IDVxWkgVr5QwTg3wXEc4Z7Cv'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-c1\\\"\\u003eyears\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edispatch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003egetYear\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e2016\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-c\\\"\\u003e//This calls fetch 2 times, once for each season\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ethen\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// return of async actions\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003egetActions\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eexpectedActions\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e;\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dispatches the correct actions on successful getSeason fetch request'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponses\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'bleach'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e68\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003estatus\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e200\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'one piece'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e80\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003estatus\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e200\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'shingeki'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e91\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003estatus\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e200\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eexpectedActions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003etype\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'FETCH_ANIMELIST_REQUEST'\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003etype\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'SET_YEAR'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003epayload\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-c1\\\"\\u003eanimes\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\n            \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'bleach'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e6.8\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n            \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'one piece'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e8\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n            \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ename\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'shingeki'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaverage_score\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e9.1\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-c1\\\"\\u003eyear\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e2016\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c1\\\"\\u003etype\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'FETCH_ANIMELIST_COMPLETE'\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003emockStore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-c1\\\"\\u003econfig\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003etoken\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eaccess_token\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'wtw45CmyEuh4P621IDVxWkgVr5QwTg3wXEc4Z7Cv'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-c1\\\"\\u003eyears\\u003c/span\\u003e: \\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edispatch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003egetYear\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e2016\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-c\\\"\\u003e//This calls fetch 3 times, once for each season\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003ethen\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// return of async actions\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003egetActions\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eexpectedActions\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eUsing \\u003ccode\\u003efetch.mock\\u003c/code\\u003e to inspect the mock state of each fetch call\\u003c/h3\\u003e\\u003ca id=\\\"user-content-using-fetchmock-to-inspect-the-mock-state-of-each-fetch-call\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Using fetch.mock to inspect the mock state of each fetch call\\\" href=\\\"#using-fetchmock-to-inspect-the-mock-state-of-each-fetch-call\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003ccode\\u003efetch.mock\\u003c/code\\u003e by default uses \\u003ca href=\\\"https://facebook.github.io/jest/docs/en/mock-functions.html#mock-property\\\" rel=\\\"nofollow\\\"\\u003eJest's mocking functions\\u003c/a\\u003e. Therefore you can make assertions on the mock state. In this example we have an arbitrary function that makes a different fetch request based on the argument you pass to it. In our test, we run Jest's \\u003ccode\\u003ebeforeEach()\\u003c/code\\u003e and make sure to reset our mock before each \\u003ccode\\u003eit()\\u003c/code\\u003e block as we will make assertions on the arguments we are passing to \\u003ccode\\u003efetch()\\u003c/code\\u003e. The most uses property is the \\u003ccode\\u003efetch.mock.calls\\u003c/code\\u003e array. It can give you information on each call, and their arguments which you can use for your \\u003ccode\\u003eexpect()\\u003c/code\\u003e calls. Jest also comes with some nice aliases for the most used ones.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"// api.js\\n\\nimport 'cross-fetch'\\n\\nexport function APIRequest(who) {\\n  if (who === 'facebook') {\\n    return fetch('https://facebook.com')\\n  } else if (who === 'twitter') {\\n    return fetch('https://twitter.com')\\n  } else {\\n    return fetch('https://google.com')\\n  }\\n}\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e// api.js\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'cross-fetch'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eexport\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efunction\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAPIRequest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ewho\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-k\\\"\\u003eif\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ewho\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e===\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'facebook'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'https://facebook.com'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eelse\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eif\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ewho\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e===\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'twitter'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'https://twitter.com'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eelse\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'https://google.com'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"// api.test.js\\nimport { APIRequest } from './api'\\n\\ndescribe('testing api', () =\\u0026gt; {\\n  beforeEach(() =\\u0026gt; {\\n    fetch.resetMocks()\\n  })\\n\\n  it('calls google by default', () =\\u0026gt; {\\n    fetch.mockResponse(JSON.stringify({ secret_data: '12345' }))\\n    APIRequest()\\n\\n    expect(fetch.mock.calls.length).toEqual(1)\\n    expect(fetch.mock.calls[0][0]).toEqual('https://google.com')\\n  })\\n\\n  it('calls facebook', () =\\u0026gt; {\\n    fetch.mockResponse(JSON.stringify({ secret_data: '12345' }))\\n    APIRequest('facebook')\\n\\n    expect(fetch.mock.calls.length).toEqual(2)\\n    expect(fetch.mock.calls[0][0]).toEqual(\\n      'https://facebook.com/someOtherResource'\\n    )\\n    expect(fetch.mock.calls[1][0]).toEqual('https://facebook.com')\\n  })\\n\\n  it('calls twitter', () =\\u0026gt; {\\n    fetch.mockResponse(JSON.stringify({ secret_data: '12345' }))\\n    APIRequest('twitter')\\n\\n    expect(fetch).toBeCalled() // alias for expect(fetch.mock.calls.length).toEqual(1);\\n    expect(fetch).toBeCalledWith('https://twitter.com') // alias for expect(fetch.mock.calls[0][0]).toEqual();\\n  })\\n})\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e// api.test.js\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAPIRequest\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'./api'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'testing api'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eresetMocks\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'calls google by default'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003esecret_data\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'12345'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-v\\\"\\u003eAPIRequest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003emock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ecalls\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003elength\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003emock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ecalls\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'https://google.com'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'calls facebook'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003esecret_data\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'12345'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-v\\\"\\u003eAPIRequest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'facebook'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003emock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ecalls\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003elength\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003emock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ecalls\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s\\\"\\u003e'https://facebook.com/someOtherResource'\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003emock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003ecalls\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e[\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e]\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'https://facebook.com'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'calls twitter'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eJSON\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003estringify\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003esecret_data\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'12345'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-v\\\"\\u003eAPIRequest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'twitter'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoBeCalled\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// alias for expect(fetch.mock.calls.length).toEqual(1);\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoBeCalledWith\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'https://twitter.com'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// alias for expect(fetch.mock.calls[0][0]).toEqual();\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eUsing functions to mock slow servers\\u003c/h3\\u003e\\u003ca id=\\\"user-content-using-functions-to-mock-slow-servers\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Using functions to mock slow servers\\\" href=\\\"#using-functions-to-mock-slow-servers\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eBy default you will want to have your fetch mock return immediately. However if you have some custom logic that needs to tests for slower servers, you can do this by passing it a function and returning a promise when your function resolves\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"// api.test.js\\nimport { request } from './api'\\n\\ndescribe('testing timeouts', () =\\u0026gt; {\\n  it('resolves with function and timeout', async () =\\u0026gt; {\\n    fetch.mockResponseOnce(\\n      () =\\u0026gt;\\n        new Promise(resolve =\\u0026gt; setTimeout(() =\\u0026gt; resolve({ body: 'ok' }), 100))\\n    )\\n    try {\\n      const response = await request()\\n      expect(response).toEqual('ok')\\n    } catch (e) {\\n      throw e\\n    }\\n  })\\n})\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e// api.test.js\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003erequest\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'./api'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'testing timeouts'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'resolves with function and timeout'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponseOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003enew\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003ePromise\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eresolve\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003esetTimeout\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eresolve\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003ebody\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'ok'\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e100\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003etry\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eresponse\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003erequest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eresponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'ok'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003ecatch\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ee\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003ethrow\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ee\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eConditional Mocking\\u003c/h3\\u003e\\u003ca id=\\\"user-content-conditional-mocking\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Conditional Mocking\\\" href=\\\"#conditional-mocking\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn some test scenarios, you may want to temporarily disable (or enable) mocking for all requests or the next (or a certain number of) request(s).\\nYou may want to only mock fetch requests to some URLs that match a given request path while in others you may want to mock\\nall requests except those matching a given request path. You may even want to conditionally mock based on request headers.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe conditional mock functions cause \\u003ccode\\u003ejest-fetch-mock\\u003c/code\\u003e to pass fetches through to the concrete fetch implementation conditionally.\\nCalling \\u003ccode\\u003efetch.dontMock\\u003c/code\\u003e, \\u003ccode\\u003efetch.doMock\\u003c/code\\u003e, \\u003ccode\\u003efetch.doMockIf\\u003c/code\\u003e or \\u003ccode\\u003efetch.dontMockIf\\u003c/code\\u003e overrides the default behavior\\nof mocking/not mocking all requests. \\u003ccode\\u003efetch.dontMockOnce\\u003c/code\\u003e, \\u003ccode\\u003efetch.doMockOnce\\u003c/code\\u003e, \\u003ccode\\u003efetch.doMockOnceIf\\u003c/code\\u003e and \\u003ccode\\u003efetch.dontMockOnceIf\\u003c/code\\u003e only overrides the behavior\\nfor the next call to \\u003ccode\\u003efetch\\u003c/code\\u003e, then returns to the default behavior (either mocking all requests or mocking the requests based on the last call to\\n\\u003ccode\\u003efetch.dontMock\\u003c/code\\u003e, \\u003ccode\\u003efetch.doMock\\u003c/code\\u003e, \\u003ccode\\u003efetch.doMockIf\\u003c/code\\u003e and \\u003ccode\\u003efetch.dontMockIf\\u003c/code\\u003e).\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eCalling \\u003ccode\\u003efetch.resetMocks()\\u003c/code\\u003e will return to the default behavior of mocking all fetches with a text response of empty string.\\u003c/p\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.dontMock()\\u003c/code\\u003e - Change the default behavior to not mock any fetches until \\u003ccode\\u003efetch.resetMocks()\\u003c/code\\u003e or \\u003ccode\\u003efetch.doMock()\\u003c/code\\u003e is called\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.doMock(bodyOrFunction?, responseInit?)\\u003c/code\\u003e - Reverses \\u003ccode\\u003efetch.dontMock()\\u003c/code\\u003e. This is the default state after \\u003ccode\\u003efetch.resetMocks()\\u003c/code\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.dontMockOnce()\\u003c/code\\u003e - For the next fetch, do not mock then return to the default behavior for subsequent fetches. Can be chained.\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.doMockOnce(bodyOrFunction?, responseInit?)\\u003c/code\\u003e or \\u003ccode\\u003efetch.mockOnce\\u003c/code\\u003e - For the next fetch, mock the response then return to the default behavior for subsequent fetches. Can be chained.\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.doMockIf(urlOrPredicate, bodyOrFunction?, responseInit?):fetch\\u003c/code\\u003e or \\u003ccode\\u003efetch.mockIf\\u003c/code\\u003e - causes all fetches to be not be mocked unless they match the given string/RegExp/predicate\\n(i.e. \\\"only mock 'fetch' if the request is for the given URL otherwise, use the real fetch implementation\\\")\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.dontMockIf(urlOrPredicate, bodyOrFunction?, responseInit?):fetch\\u003c/code\\u003e - causes all fetches to be mocked unless they match the given string/RegExp/predicate\\n(i.e. \\\"don't mock 'fetch' if the request is for the given URL, otherwise mock the request\\\")\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.doMockOnceIf(urlOrPredicate, bodyOrFunction?, responseInit?):fetch\\u003c/code\\u003e or \\u003ccode\\u003efetch.mockOnceIf\\u003c/code\\u003e - causes the next fetch to be mocked if it matches the given string/RegExp/predicate. Can be chained.\\n(i.e. \\\"only mock 'fetch' if the next request is for the given URL otherwise, use the default behavior\\\")\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.dontMockOnceIf(urlOrPredicate):fetch\\u003c/code\\u003e - causes the next fetch to be not be mocked if it matches the given string/RegExp/predicate. Can be chained.\\n(i.e. \\\"don't mock 'fetch' if the next request is for the given URL, otherwise use the default behavior\\\")\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003efetch.isMocking(input, init):boolean\\u003c/code\\u003e - test utility function to see if the given url/request would be mocked.\\nThis is not a read only operation and any \\\"MockOnce\\\" will evaluate (and return to the default behavior)\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFor convenience, all the conditional mocking functions also accept optional parameters after the 1st parameter that call\\n\\u003ccode\\u003emockResponse\\u003c/code\\u003e or \\u003ccode\\u003emockResponseOnce\\u003c/code\\u003e respectively. This allows you to conditionally mock a response in a single call.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eConditional Mocking examples\\u003c/h4\\u003e\\u003ca id=\\\"user-content-conditional-mocking-examples\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Conditional Mocking examples\\\" href=\\\"#conditional-mocking-examples\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"\\ndescribe('conditional mocking', () =\\u0026gt; {\\n  const realResponse = 'REAL FETCH RESPONSE'\\n  const mockedDefaultResponse = 'MOCKED DEFAULT RESPONSE'\\n  const testUrl = defaultRequestUri\\n  let crossFetchSpy\\n  beforeEach(() =\\u0026gt; {\\n    fetch.resetMocks()\\n    fetch.mockResponse(mockedDefaultResponse)\\n    crossFetchSpy = jest\\n      .spyOn(require('cross-fetch'), 'fetch')\\n      .mockImplementation(async () =\\u0026gt;\\n        Promise.resolve(new Response(realResponse))\\n      )\\n  })\\n\\n  afterEach(() =\\u0026gt; {\\n    crossFetchSpy.mockRestore()\\n  })\\n\\n  const expectMocked = async (uri, response = mockedDefaultResponse) =\\u0026gt; {\\n    return expect(request(uri)).resolves.toEqual(response)\\n  }\\n  const expectUnmocked = async uri =\\u0026gt; {\\n    return expect(request(uri)).resolves.toEqual(realResponse)\\n  }\\n\\n  describe('once', () =\\u0026gt; {\\n    it('default', async () =\\u0026gt; {\\n      const otherResponse = 'other response'\\n      fetch.once(otherResponse)\\n      await expectMocked(defaultRequestUri, otherResponse)\\n      await expectMocked()\\n    })\\n    it('dont mock once then mock twice', async () =\\u0026gt; {\\n      const otherResponse = 'other response'\\n      fetch\\n        .dontMockOnce()\\n        .once(otherResponse)\\n        .once(otherResponse)\\n\\n      await expectUnmocked()\\n      await expectMocked(defaultRequestUri, otherResponse)\\n      await expectMocked()\\n    })\\n  })\\n\\n  describe('doMockIf', () =\\u0026gt; {\\n    it(\\u0026quot;doesn't mock normally\\u0026quot;, async () =\\u0026gt; {\\n      fetch.doMockIf('http://foo')\\n      await expectUnmocked()\\n      await expectUnmocked()\\n    })\\n    it('mocks when matches string', async () =\\u0026gt; {\\n      fetch.doMockIf(testUrl)\\n      await expectMocked()\\n      await expectMocked()\\n    })\\n    it('mocks when matches regex', async () =\\u0026gt; {\\n      fetch.doMockIf(new RegExp(testUrl))\\n      await expectMocked()\\n      await expectMocked()\\n    })\\n    it('mocks when matches predicate', async () =\\u0026gt; {\\n      fetch.doMockIf(input =\\u0026gt; input.url === testUrl)\\n      await expectMocked()\\n      await expectMocked()\\n    })\\n  })\\n\\n  describe('dontMockIf', () =\\u0026gt; {\\n    it('mocks normally', async () =\\u0026gt; {\\n      fetch.dontMockIf('http://foo')\\n      await expectMocked()\\n      await expectMocked()\\n    })\\n    it('doesnt mock when matches string', async () =\\u0026gt; {\\n      fetch.dontMockIf(testUrl)\\n      await expectUnmocked()\\n      await expectUnmocked()\\n    })\\n    it('doesnt mock when matches regex', async () =\\u0026gt; {\\n      fetch.dontMockIf(new RegExp(testUrl))\\n      await expectUnmocked()\\n      await expectUnmocked()\\n    })\\n    it('doesnt mock when matches predicate', async () =\\u0026gt; {\\n      fetch.dontMockIf(input =\\u0026gt; input.url === testUrl)\\n      await expectUnmocked()\\n      await expectUnmocked()\\n    })\\n  })\\n\\n  describe('doMockOnceIf (default mocked)', () =\\u0026gt; {\\n    it(\\u0026quot;doesn't mock normally\\u0026quot;, async () =\\u0026gt; {\\n      fetch.doMockOnceIf('http://foo')\\n      await expectUnmocked()\\n      await expectMocked()\\n    })\\n    it('mocks when matches string', async () =\\u0026gt; {\\n      fetch.doMockOnceIf(testUrl)\\n      await expectMocked()\\n      await expectMocked()\\n    })\\n    it('mocks when matches regex', async () =\\u0026gt; {\\n      fetch.doMockOnceIf(new RegExp(testUrl))\\n      await expectMocked()\\n      await expectMocked()\\n    })\\n    it('mocks when matches predicate', async () =\\u0026gt; {\\n      fetch.doMockOnceIf(input =\\u0026gt; input.url === testUrl)\\n      await expectMocked()\\n      await expectMocked()\\n    })\\n  })\\n\\n  describe('dontMockOnceIf (default mocked)', () =\\u0026gt; {\\n    it('mocks normally', async () =\\u0026gt; {\\n      fetch.dontMockOnceIf('http://foo')\\n      await expectMocked()\\n      await expectMocked()\\n    })\\n    it('doesnt mock when matches string', async () =\\u0026gt; {\\n      fetch.dontMockOnceIf(testUrl)\\n      await expectUnmocked()\\n      await expectMocked()\\n    })\\n    it('doesnt mock when matches regex', async () =\\u0026gt; {\\n      fetch.dontMockOnceIf(new RegExp(testUrl))\\n      await expectUnmocked()\\n      await expectMocked()\\n    })\\n    it('doesnt mock when matches predicate', async () =\\u0026gt; {\\n      fetch.dontMockOnceIf(input =\\u0026gt; input.url === testUrl)\\n      await expectUnmocked()\\n      await expectMocked()\\n    })\\n  })\\n\\n  describe('doMockOnceIf (default unmocked)', () =\\u0026gt; {\\n    beforeEach(() =\\u0026gt; {\\n      fetch.dontMock()\\n    })\\n    it(\\u0026quot;doesn't mock normally\\u0026quot;, async () =\\u0026gt; {\\n      fetch.doMockOnceIf('http://foo')\\n      await expectUnmocked()\\n      await expectUnmocked()\\n    })\\n    it('mocks when matches string', async () =\\u0026gt; {\\n      fetch.doMockOnceIf(testUrl)\\n      await expectMocked()\\n      await expectUnmocked()\\n    })\\n    it('mocks when matches regex', async () =\\u0026gt; {\\n      fetch.doMockOnceIf(new RegExp(testUrl))\\n      await expectMocked()\\n      await expectUnmocked()\\n    })\\n    it('mocks when matches predicate', async () =\\u0026gt; {\\n      fetch.doMockOnceIf(input =\\u0026gt; input.url === testUrl)\\n      await expectMocked()\\n      await expectUnmocked()\\n    })\\n  })\\n\\n  describe('dontMockOnceIf (default unmocked)', () =\\u0026gt; {\\n    beforeEach(() =\\u0026gt; {\\n      fetch.dontMock()\\n    })\\n    it('mocks normally', async () =\\u0026gt; {\\n      fetch.dontMockOnceIf('http://foo')\\n      await expectMocked()\\n      await expectUnmocked()\\n    })\\n    it('doesnt mock when matches string', async () =\\u0026gt; {\\n      fetch.dontMockOnceIf(testUrl)\\n      await expectUnmocked()\\n      await expectUnmocked()\\n    })\\n    it('doesnt mock when matches regex', async () =\\u0026gt; {\\n      fetch.dontMockOnceIf(new RegExp(testUrl))\\n      await expectUnmocked()\\n      await expectUnmocked()\\n    })\\n    it('doesnt mock when matches predicate', async () =\\u0026gt; {\\n      fetch.dontMockOnceIf(input =\\u0026gt; input.url === testUrl)\\n      await expectUnmocked()\\n      await expectUnmocked()\\n    })\\n  })\\n\\n  describe('dont/do mock', () =\\u0026gt; {\\n    test('dontMock', async () =\\u0026gt; {\\n      fetch.dontMock()\\n      await expectUnmocked()\\n      await expectUnmocked()\\n    })\\n    test('dontMockOnce', async () =\\u0026gt; {\\n      fetch.dontMockOnce()\\n      await expectUnmocked()\\n      await expectMocked()\\n    })\\n    test('doMock', async () =\\u0026gt; {\\n      fetch.dontMock()\\n      fetch.doMock()\\n      await expectMocked()\\n      await expectMocked()\\n    })\\n    test('doMockOnce', async () =\\u0026gt; {\\n      fetch.dontMock()\\n      fetch.doMockOnce()\\n      await expectMocked()\\n      await expectUnmocked()\\n    })\\n  })\\n\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'conditional mocking'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003erealResponse\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'REAL FETCH RESPONSE'\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockedDefaultResponse\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'MOCKED DEFAULT RESPONSE'\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-k\\\"\\u003elet\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ecrossFetchSpy\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eresetMocks\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emockedDefaultResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003ecrossFetchSpy\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ejest\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003espyOn\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003erequire\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'cross-fetch'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'fetch'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockImplementation\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-v\\\"\\u003ePromise\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eresolve\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003enew\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003erealResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eafterEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003ecrossFetchSpy\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockRestore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003euri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eresponse\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockedDefaultResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003erequest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003euri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eresolves\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eresponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003euri\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003erequest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003euri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eresolves\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003erealResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'once'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'default'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eotherResponse\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'other response'\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eonce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eotherResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eotherResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dont mock once then mock twice'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eotherResponse\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'other response'\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eonce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eotherResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eonce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eotherResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eotherResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doMockIf'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"doesn't mock normally\\\"\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'http://foo'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'mocks when matches string'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'mocks when matches regex'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003enew\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eRegExp\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'mocks when matches predicate'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003einput\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003einput\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eurl\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e===\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dontMockIf'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'mocks normally'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'http://foo'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doesnt mock when matches string'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doesnt mock when matches regex'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003enew\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eRegExp\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doesnt mock when matches predicate'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003einput\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003einput\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eurl\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e===\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doMockOnceIf (default mocked)'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"doesn't mock normally\\\"\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'http://foo'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'mocks when matches string'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'mocks when matches regex'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003enew\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eRegExp\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'mocks when matches predicate'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003einput\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003einput\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eurl\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e===\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dontMockOnceIf (default mocked)'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'mocks normally'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'http://foo'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doesnt mock when matches string'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doesnt mock when matches regex'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003enew\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eRegExp\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doesnt mock when matches predicate'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003einput\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003einput\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eurl\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e===\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doMockOnceIf (default unmocked)'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"doesn't mock normally\\\"\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'http://foo'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'mocks when matches string'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'mocks when matches regex'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003enew\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eRegExp\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'mocks when matches predicate'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003einput\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003einput\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eurl\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e===\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dontMockOnceIf (default unmocked)'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'mocks normally'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'http://foo'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doesnt mock when matches string'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doesnt mock when matches regex'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003enew\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eRegExp\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eit\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doesnt mock when matches predicate'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003einput\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003einput\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eurl\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e===\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dont/do mock'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003etest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dontMock'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003etest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dontMockOnce'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003etest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doMock'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003etest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doMockOnce'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const expectMocked = async (uri, response = mockedDefaultResponse) =\\u0026gt; {\\n  return expect(request(uri)).resolves.toEqual(response)\\n}\\nconst expectUnmocked = async uri =\\u0026gt; {\\n  return expect(request(uri)).resolves.toEqual(realResponse)\\n}\\n\\ndescribe('conditional mocking complex', () =\\u0026gt; {\\n  const realResponse = 'REAL FETCH RESPONSE'\\n  const mockedDefaultResponse = 'MOCKED DEFAULT RESPONSE'\\n  const testUrl = defaultRequestUri\\n  let crossFetchSpy\\n  beforeEach(() =\\u0026gt; {\\n    fetch.resetMocks()\\n    fetch.mockResponse(mockedDefaultResponse)\\n    crossFetchSpy = jest\\n      .spyOn(require('cross-fetch'), 'fetch')\\n      .mockImplementation(async () =\\u0026gt;\\n        Promise.resolve(new Response(realResponse))\\n      )\\n  })\\n\\n  afterEach(() =\\u0026gt; {\\n    crossFetchSpy.mockRestore()\\n  })\\n\\n  describe('complex example', () =\\u0026gt; {\\n    const alternativeUrl = 'http://bar'\\n    const alternativeBody = 'ALTERNATIVE RESPONSE'\\n    beforeEach(() =\\u0026gt; {\\n      fetch\\n        // .mockResponse(mockedDefaultResponse) // set above - here for clarity\\n        .mockResponseOnce('1') // 1\\n        .mockResponseOnce('2') // 2\\n        .mockResponseOnce(async uri =\\u0026gt;\\n          uri === alternativeUrl ? alternativeBody : '3'\\n        ) // 3\\n        .mockResponseOnce('4') // 4\\n        .mockResponseOnce('5') // 5\\n        .mockResponseOnce(async uri =\\u0026gt;\\n          uri === alternativeUrl ? alternativeBody : mockedDefaultResponse\\n        ) // 6\\n    })\\n\\n    describe('default (`doMock`)', () =\\u0026gt; {\\n      beforeEach(() =\\u0026gt; {\\n        fetch\\n          // .doMock()    // the default - here for clarify\\n          .dontMockOnceIf(alternativeUrl)\\n          .doMockOnceIf(alternativeUrl)\\n          .doMockOnce()\\n          .dontMockOnce()\\n      })\\n\\n      test('defaultRequestUri', async () =\\u0026gt; {\\n        await expectMocked(defaultRequestUri, '1') // 1\\n        await expectUnmocked(defaultRequestUri) // 2\\n        await expectMocked(defaultRequestUri, '3') // 3\\n        await expectUnmocked(defaultRequestUri) // 4\\n        // after .once('..')\\n        await expectMocked(defaultRequestUri, '5') // 5\\n        await expectMocked(defaultRequestUri, mockedDefaultResponse) // 6\\n        // default 'isMocked' (not 'Once')\\n        await expectMocked(defaultRequestUri, mockedDefaultResponse) // 7\\n      })\\n\\n      test('alternativeUrl', async () =\\u0026gt; {\\n        await expectUnmocked(alternativeUrl) // 1\\n        await expectMocked(alternativeUrl, '2') // 2\\n        await expectMocked(alternativeUrl, alternativeBody) // 3\\n        await expectUnmocked(alternativeUrl) // 4\\n        // after .once('..')\\n        await expectMocked(alternativeUrl, '5') // 5\\n        await expectMocked(alternativeUrl, alternativeBody) // 6\\n        // default 'isMocked' (not 'Once')\\n        await expectMocked(alternativeUrl, mockedDefaultResponse) // 7\\n      })\\n    })\\n\\n    describe('dontMock', () =\\u0026gt; {\\n      beforeEach(() =\\u0026gt; {\\n        fetch\\n          .dontMock()\\n          .dontMockOnceIf(alternativeUrl)\\n          .doMockOnceIf(alternativeUrl)\\n          .doMockOnce()\\n          .dontMockOnce()\\n      })\\n\\n      test('defaultRequestUri', async () =\\u0026gt; {\\n        await expectMocked(defaultRequestUri, '1') // 1\\n        await expectUnmocked(defaultRequestUri) // 2\\n        await expectMocked(defaultRequestUri, '3') // 3\\n        await expectUnmocked(defaultRequestUri) // 4\\n        // after .once('..')\\n        await expectUnmocked(defaultRequestUri) // 5\\n        await expectUnmocked(defaultRequestUri) // 6\\n        // default 'isMocked' (not 'Once')\\n        await expectUnmocked(defaultRequestUri) // 7\\n      })\\n\\n      test('alternativeUrl', async () =\\u0026gt; {\\n        await expectUnmocked(alternativeUrl) // 1\\n        await expectMocked(alternativeUrl, '2') // 2\\n        await expectMocked(alternativeUrl, alternativeBody) // 3\\n        await expectUnmocked(alternativeUrl) // 4\\n        // after .once('..')\\n        await expectUnmocked(alternativeUrl) // 5\\n        await expectUnmocked(alternativeUrl) // 6\\n        // default 'isMocked' (not 'Once')\\n        await expectUnmocked(alternativeUrl) // 7\\n      })\\n    })\\n\\n    describe('doMockIf(alternativeUrl)', () =\\u0026gt; {\\n      beforeEach(() =\\u0026gt; {\\n        fetch\\n          .doMockIf(alternativeUrl)\\n          .dontMockOnceIf(alternativeUrl)\\n          .doMockOnceIf(alternativeUrl)\\n          .doMockOnce()\\n          .dontMockOnce()\\n      })\\n\\n      test('defaultRequestUri', async () =\\u0026gt; {\\n        await expectMocked(defaultRequestUri, '1') // 1\\n        await expectUnmocked(defaultRequestUri) // 2\\n        await expectMocked(defaultRequestUri, '3') // 3\\n        await expectUnmocked(defaultRequestUri) // 4\\n        // after .once('..')\\n        await expectUnmocked(defaultRequestUri) // 5\\n        await expectUnmocked(defaultRequestUri) // 6\\n        // default 'isMocked' (not 'Once')\\n        await expectUnmocked(defaultRequestUri) // 7\\n      })\\n\\n      test('alternativeUrl', async () =\\u0026gt; {\\n        await expectUnmocked(alternativeUrl) // 1\\n        await expectMocked(alternativeUrl, '2') // 2\\n        await expectMocked(alternativeUrl, alternativeBody) // 3\\n        await expectUnmocked(alternativeUrl) // 4\\n        // after .once('..')\\n        await expectMocked(alternativeUrl, '5') // 5\\n        await expectMocked(alternativeUrl, alternativeBody) // 6\\n        // default 'isMocked' (not 'Once')\\n        await expectMocked(alternativeUrl, mockedDefaultResponse) // 7\\n      })\\n    })\\n\\n    describe('dontMockIf(alternativeUrl)', () =\\u0026gt; {\\n      beforeEach(() =\\u0026gt; {\\n        fetch\\n          .dontMockIf(alternativeUrl)\\n          .dontMockOnceIf(alternativeUrl)\\n          .doMockOnceIf(alternativeUrl)\\n          .doMockOnce()\\n          .dontMockOnce()\\n      })\\n\\n      test('defaultRequestUri', async () =\\u0026gt; {\\n        await expectMocked(defaultRequestUri, '1') // 1\\n        await expectUnmocked(defaultRequestUri) // 2\\n        await expectMocked(defaultRequestUri, '3') // 3\\n        await expectUnmocked(defaultRequestUri) // 4\\n        // after .once('..')\\n        await expectMocked(defaultRequestUri, '5') // 5\\n        await expectMocked(defaultRequestUri, mockedDefaultResponse) // 6\\n        // default 'isMocked' (not 'Once')\\n        await expectMocked(defaultRequestUri, mockedDefaultResponse) // 7\\n      })\\n\\n      test('alternativeUrl', async () =\\u0026gt; {\\n        await expectUnmocked(alternativeUrl) // 1\\n        await expectMocked(alternativeUrl, '2') // 2\\n        await expectMocked(alternativeUrl, alternativeBody) // 3\\n        await expectUnmocked(alternativeUrl) // 4\\n        // after .once('..')\\n        await expectUnmocked(alternativeUrl) // 5\\n        await expectUnmocked(alternativeUrl) // 6\\n        // default 'isMocked' (not 'Once')\\n        await expectUnmocked(alternativeUrl) // 7\\n      })\\n    })\\n  })\\n})\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003euri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eresponse\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockedDefaultResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003erequest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003euri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eresolves\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eresponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003euri\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpect\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003erequest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003euri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eresolves\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003etoEqual\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003erealResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'conditional mocking complex'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003erealResponse\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'REAL FETCH RESPONSE'\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockedDefaultResponse\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'MOCKED DEFAULT RESPONSE'\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etestUrl\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-k\\\"\\u003elet\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ecrossFetchSpy\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eresetMocks\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emockedDefaultResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003ecrossFetchSpy\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ejest\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003espyOn\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003erequire\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'cross-fetch'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'fetch'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockImplementation\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-v\\\"\\u003ePromise\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eresolve\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003enew\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003erealResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003eafterEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003ecrossFetchSpy\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockRestore\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n  \\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'complex example'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'http://bar'\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003econst\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeBody\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'ALTERNATIVE RESPONSE'\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// .mockResponse(mockedDefaultResponse) // set above - here for clarity\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponseOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 1\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponseOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 2\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponseOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003euri\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-s1\\\"\\u003euri\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e===\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e ? \\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeBody\\u003c/span\\u003e : \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 3\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponseOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'4'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 4\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponseOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'5'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 5\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003emockResponseOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003euri\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-s1\\\"\\u003euri\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e===\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e ? \\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeBody\\u003c/span\\u003e : \\u003cspan class=\\\"pl-s1\\\"\\u003emockedDefaultResponse\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 6\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'default (`doMock`)'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-c\\\"\\u003e// .doMock()    // the default - here for clarify\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n      \\u003cspan class=\\\"pl-en\\\"\\u003etest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'defaultRequestUri'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 1\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 2\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 3\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 4\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// after .once('..')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'5'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 5\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockedDefaultResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 6\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// default 'isMocked' (not 'Once')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockedDefaultResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 7\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n      \\u003cspan class=\\\"pl-en\\\"\\u003etest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'alternativeUrl'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 1\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 2\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeBody\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 3\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 4\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// after .once('..')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'5'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 5\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeBody\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 6\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// default 'isMocked' (not 'Once')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockedDefaultResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 7\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dontMock'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMock\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n      \\u003cspan class=\\\"pl-en\\\"\\u003etest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'defaultRequestUri'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 1\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 2\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 3\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 4\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// after .once('..')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 5\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 6\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// default 'isMocked' (not 'Once')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 7\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n      \\u003cspan class=\\\"pl-en\\\"\\u003etest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'alternativeUrl'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 1\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 2\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeBody\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 3\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 4\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// after .once('..')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 5\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 6\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// default 'isMocked' (not 'Once')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 7\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'doMockIf(alternativeUrl)'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n      \\u003cspan class=\\\"pl-en\\\"\\u003etest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'defaultRequestUri'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 1\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 2\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 3\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 4\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// after .once('..')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 5\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 6\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// default 'isMocked' (not 'Once')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 7\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n      \\u003cspan class=\\\"pl-en\\\"\\u003etest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'alternativeUrl'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 1\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 2\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeBody\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 3\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 4\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// after .once('..')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'5'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 5\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeBody\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 6\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// default 'isMocked' (not 'Once')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockedDefaultResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 7\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-en\\\"\\u003edescribe\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dontMockIf(alternativeUrl)'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-en\\\"\\u003ebeforeEach\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003efetch\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnceIf\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edoMockOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n          \\u003cspan class=\\\"pl-kos\\\"\\u003e.\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003edontMockOnce\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n      \\u003cspan class=\\\"pl-en\\\"\\u003etest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'defaultRequestUri'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 1\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 2\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 3\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 4\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// after .once('..')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'5'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 5\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockedDefaultResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 6\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// default 'isMocked' (not 'Once')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003edefaultRequestUri\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emockedDefaultResponse\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 7\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\n      \\u003cspan class=\\\"pl-en\\\"\\u003etest\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'alternativeUrl'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 1\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 2\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectMocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e,\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeBody\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 3\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 4\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// after .once('..')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 5\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 6\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e// default 'isMocked' (not 'Once')\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eexpectUnmocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e(\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ealternativeUrl\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e// 7\\u003c/span\\u003e\\n      \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n  \\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003c/article\\u003e\",\"loaded\":true,\"timedOut\":false,\"errorMessage\":null,\"headerInfo\":{\"toc\":[{\"level\":1,\"text\":\"Jest Fetch Mock\",\"anchor\":\"jest-fetch-mock\",\"htmlText\":\"Jest Fetch Mock\"},{\"level\":2,\"text\":\"Contents\",\"anchor\":\"contents\",\"htmlText\":\"Contents\"},{\"level\":2,\"text\":\"Usage\",\"anchor\":\"usage\",\"htmlText\":\"Usage\"},{\"level\":3,\"text\":\"Package Installation\",\"anchor\":\"package-installation\",\"htmlText\":\"Package Installation\"},{\"level\":3,\"text\":\"To setup for all tests\",\"anchor\":\"to-setup-for-all-tests\",\"htmlText\":\"To setup for all tests\"},{\"level\":4,\"text\":\"Default not mocked\",\"anchor\":\"default-not-mocked\",\"htmlText\":\"Default not mocked\"},{\"level\":3,\"text\":\"To setup for an individual test\",\"anchor\":\"to-setup-for-an-individual-test\",\"htmlText\":\"To setup for an individual test\"},{\"level\":4,\"text\":\"TypeScript importing\",\"anchor\":\"typescript-importing\",\"htmlText\":\"TypeScript importing\"},{\"level\":3,\"text\":\"Using with Create-React-App\",\"anchor\":\"using-with-create-react-app\",\"htmlText\":\"Using with Create-React-App\"},{\"level\":3,\"text\":\"For Ejected Create React Apps ONLY:\",\"anchor\":\"for-ejected-create-react-apps-only\",\"htmlText\":\"For Ejected Create React Apps ONLY:\"},{\"level\":2,\"text\":\"API\",\"anchor\":\"api\",\"htmlText\":\"API\"},{\"level\":3,\"text\":\"Mock Responses\",\"anchor\":\"mock-responses\",\"htmlText\":\"Mock Responses\"},{\"level\":3,\"text\":\"Functions\",\"anchor\":\"functions\",\"htmlText\":\"Functions\"},{\"level\":3,\"text\":\"Mock utilities\",\"anchor\":\"mock-utilities\",\"htmlText\":\"Mock utilities\"},{\"level\":2,\"text\":\"Examples\",\"anchor\":\"examples\",\"htmlText\":\"Examples\"},{\"level\":3,\"text\":\"Simple mock and assert\",\"anchor\":\"simple-mock-and-assert\",\"htmlText\":\"Simple mock and assert\"},{\"level\":3,\"text\":\"Mocking all fetches\",\"anchor\":\"mocking-all-fetches\",\"htmlText\":\"Mocking all fetches\"},{\"level\":3,\"text\":\"Mocking a failed fetch\",\"anchor\":\"mocking-a-failed-fetch\",\"htmlText\":\"Mocking a failed fetch\"},{\"level\":3,\"text\":\"Mocking aborted fetches\",\"anchor\":\"mocking-aborted-fetches\",\"htmlText\":\"Mocking aborted fetches\"},{\"level\":3,\"text\":\"Mocking a redirected response\",\"anchor\":\"mocking-a-redirected-response\",\"htmlText\":\"Mocking a redirected response\"},{\"level\":3,\"text\":\"Mocking multiple fetches with different responses\",\"anchor\":\"mocking-multiple-fetches-with-different-responses\",\"htmlText\":\"Mocking multiple fetches with different responses\"},{\"level\":3,\"text\":\"Mocking multiple fetches with fetch.mockResponses\",\"anchor\":\"mocking-multiple-fetches-with-fetchmockresponses\",\"htmlText\":\"Mocking multiple fetches with fetch.mockResponses\"},{\"level\":3,\"text\":\"Reset mocks between tests with fetch.resetMocks\",\"anchor\":\"reset-mocks-between-tests-with-fetchresetmocks\",\"htmlText\":\"Reset mocks between tests with fetch.resetMocks\"},{\"level\":3,\"text\":\"Using fetch.mock to inspect the mock state of each fetch call\",\"anchor\":\"using-fetchmock-to-inspect-the-mock-state-of-each-fetch-call\",\"htmlText\":\"Using fetch.mock to inspect the mock state of each fetch call\"},{\"level\":3,\"text\":\"Using functions to mock slow servers\",\"anchor\":\"using-functions-to-mock-slow-servers\",\"htmlText\":\"Using functions to mock slow servers\"},{\"level\":3,\"text\":\"Conditional Mocking\",\"anchor\":\"conditional-mocking\",\"htmlText\":\"Conditional Mocking\"},{\"level\":4,\"text\":\"Conditional Mocking examples\",\"anchor\":\"conditional-mocking-examples\",\"htmlText\":\"Conditional Mocking examples\"}],\"siteNavLoginPath\":\"/login?return_to=https%3A%2F%2Fgithub.com%2Fjefflau%2Fjest-fetch-mock\"}},{\"displayName\":\"LICENSE.md\",\"repoName\":\"jest-fetch-mock\",\"refName\":\"master\",\"path\":\"LICENSE.md\",\"preferredFileType\":\"license\",\"tabName\":\"MIT\",\"richText\":null,\"loaded\":false,\"timedOut\":false,\"errorMessage\":null,\"headerInfo\":{\"toc\":null,\"siteNavLoginPath\":\"/login?return_to=https%3A%2F%2Fgithub.com%2Fjefflau%2Fjest-fetch-mock\"}}],\"overviewFilesProcessingTime\":35.948485000000005}},\"appPayload\":{\"helpUrl\":\"https://docs.github.com\",\"findFileWorkerPath\":\"/assets-cdn/worker/find-file-worker-32bb159cc57c.js\",\"findInFileWorkerPath\":\"/assets-cdn/worker/find-in-file-worker-c6704d501c10.js\",\"githubDevUrl\":null,\"enabled_features\":{\"code_nav_ui_events\":false,\"copilot_conversational_ux\":false,\"copilot_conversational_ux_embedding_update\":false,\"copilot_popover_file_editor_header\":false,\"copilot_smell_icebreaker_ux\":true,\"copilot_workspace\":false,\"codeview_firefox_inert\":true}}}}</script>  <div data-target=\"react-partial.reactRoot\"><style data-styled=\"true\" data-styled-version=\"5.3.6\">.cgQnMS{font-weight:600;font-size:32px;margin:0;}/*!sc*/data-styled.g1[id=\"Heading__StyledHeading-sc-1c1dgg0-0\"]{content:\"cgQnMS,\"}/*!sc*/.izjvBm{margin-top:16px;margin-bottom:16px;}/*!sc*/.rPQgy{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}/*!sc*/.eUMEDg{margin-bottom:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;row-gap:16px;}/*!sc*/.eLcVee{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;padding-bottom:16px;padding-top:8px;}/*!sc*/.hsfLlq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;gap:8px;}/*!sc*/@media screen and (max-width:320px){.hsfLlq{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}}/*!sc*/.gpKoUz{position:relative;}/*!sc*/@media screen and (max-width:380px){.gpKoUz .ref-selector-button-text-container{max-width:80px;}}/*!sc*/@media screen and (max-width:320px){.gpKoUz{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}.gpKoUz .overview-ref-selector{width:100%;}.gpKoUz .overview-ref-selector > span{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}.gpKoUz .overview-ref-selector > span > span[data-component=\"text\"]{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}}/*!sc*/.kkrdEu{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}/*!sc*/.bKgizp{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;}/*!sc*/.iPGYsi{margin-right:4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.dKmYfk{font-size:14px;min-width:0;max-width:125px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}/*!sc*/.trpoQ{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;pointer-events:none;}/*!sc*/.laYubZ{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (max-width:1079px){.laYubZ{display:none;}}/*!sc*/.swnaL{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (min-width:1080px){.swnaL{display:none;}}/*!sc*/@media screen and (max-width:543px){.swnaL{display:none;}}/*!sc*/.bWpuBf{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding-left:8px;gap:8px;}/*!sc*/.grHjNb{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;gap:8px;}/*!sc*/@media screen and (max-width:543px){.grHjNb{display:none;}}/*!sc*/.dXTsqj{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (max-width:1011px){.dXTsqj{display:none;}}/*!sc*/.dCOrmu{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (min-width:1012px){.dCOrmu{display:none;}}/*!sc*/@media screen and (max-width:544px){.bVvbgP{display:none;}}/*!sc*/.bNDvfp{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (min-width:544px){.bNDvfp{display:none;}}/*!sc*/.yfPnm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;gap:16px;}/*!sc*/.cAQuiW{width:100%;border-collapse:separate;border-spacing:0;border:1px solid;border-color:var(--borderColor-default,var(--color-border-default,#d0d7de));border-radius:6px;table-layout:fixed;overflow:unset;}/*!sc*/.iiUlLN{height:0px;line-height:0px;}/*!sc*/.iiUlLN tr{height:0px;font-size:0px;}/*!sc*/.jmggSN{padding:16px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));font-size:12px;text-align:left;height:40px;}/*!sc*/.jmggSN th{padding-left:16px;background-color:var(--bgColor-muted,var(--color-canvas-subtle,#f6f8fa));}/*!sc*/.kvYunM{width:100%;border-top-left-radius:6px;}/*!sc*/@media screen and (min-width:544px){.kvYunM{display:none;}}/*!sc*/.hrLuxA{width:40%;border-top-left-radius:6px;}/*!sc*/@media screen and (max-width:543px){.hrLuxA{display:none;}}/*!sc*/@media screen and (max-width:543px){.ePjhhA{display:none;}}/*!sc*/.cuEKae{text-align:right;padding-right:16px;width:136px;border-top-right-radius:6px;}/*!sc*/.jEbBOT{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));font-size:12px;height:40px;}/*!sc*/.bTxCvM{background-color:var(--bgColor-muted,var(--color-canvas-subtle,#f6f8fa));padding:4px;border-top-left-radius:6px;border-top-right-radius:6px;}/*!sc*/.eYedVD{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:8px;min-width:273px;padding-right:8px;padding-left:16px;padding-top:8px;padding-bottom:8px;}/*!sc*/.jGfYmh{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;gap:8px;}/*!sc*/.lhFvfi{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}/*!sc*/.bqgLjk{display:inherit;}/*!sc*/@media screen and (min-width:544px){.bqgLjk{display:none;}}/*!sc*/@media screen and (min-width:768px){.bqgLjk{display:none;}}/*!sc*/.epsqEd{text-align:center;vertical-align:center;height:40px;border-top:1px solid;border-color:var(--borderColor-default,var(--color-border-default,#d0d7de));}/*!sc*/.ldpruc{border-top:1px solid var(--borderColor-default,var(--color-border-default));cursor:pointer;}/*!sc*/.ehcSsh{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;gap:16px;}/*!sc*/.iGmlUb{border:1px solid;border-color:var(--borderColor-default,var(--color-border-default,#d0d7de));border-radius:6px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}/*!sc*/@media screen and (max-width:543px){.iGmlUb{margin-left:-16px;margin-right:-16px;max-width:calc(100% + 32px);}}/*!sc*/@media screen and (min-width:544px){.iGmlUb{max-width:100%;}}/*!sc*/.iRQGXA{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;border-bottom:1px solid;border-bottom-color:var(--borderColor-default,var(--color-border-default,#d0d7de));-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-right:8px;position:-webkit-sticky;position:sticky;top:0;background-color:var(--bgColor-default,var(--color-canvas-default,#ffffff));z-index:1;border-top-left-radius:6px;border-top-right-radius:6px;}/*!sc*/.dvTdPK{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding-left:8px;padding-right:8px;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;border-bottom:none;border-bottom-color:var(--borderColor-muted,var(--color-border-muted,hsla(210,18%,87%,1)));align:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:48px;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;}/*!sc*/.gwuIGu{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}/*!sc*/.kOxwQs{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;margin-right:8px;}/*!sc*/.kOgeFj{font-weight:600;}/*!sc*/.bJMeLZ{padding:32px;overflow:auto;}/*!sc*/data-styled.g2[id=\"Box-sc-g0xbh4-0\"]{content:\"izjvBm,rPQgy,eUMEDg,eLcVee,hsfLlq,gpKoUz,kkrdEu,bKgizp,iPGYsi,dKmYfk,trpoQ,laYubZ,swnaL,bWpuBf,grHjNb,dXTsqj,dCOrmu,bVvbgP,bNDvfp,yfPnm,cAQuiW,iiUlLN,jmggSN,kvYunM,hrLuxA,ePjhhA,cuEKae,jEbBOT,bTxCvM,eYedVD,jGfYmh,lhFvfi,bqgLjk,epsqEd,ldpruc,ehcSsh,iGmlUb,iRQGXA,dvTdPK,gwuIGu,kOxwQs,kOgeFj,bJMeLZ,\"}/*!sc*/.bOMzPg{min-width:0;}/*!sc*/.eUGNHp{font-weight:600;}/*!sc*/.dALsKK{color:var(--fgColor-default,var(--color-fg-default,#1F2328));}/*!sc*/data-styled.g6[id=\"Text-sc-17v1xeu-0\"]{content:\"bOMzPg,eUGNHp,dALsKK,\"}/*!sc*/.dheQRw{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));-webkit-text-decoration:none;text-decoration:none;}/*!sc*/[data-a11y-link-underlines='true'] .Link__StyledLink-sc-14289xe-0[data-inline='true']{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.dheQRw:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.dheQRw:is(button){display:inline-block;padding:0;font-size:inherit;white-space:nowrap;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;}/*!sc*/.vLMkZ{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));-webkit-text-decoration:none;text-decoration:none;position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;color:var(--fgColor-default,var(--color-fg-default,#1F2328));text-align:center;-webkit-text-decoration:none;text-decoration:none;line-height:calc(20/14);border-radius:6px;font-size:14px;padding-left:8px;padding-right:8px;padding-top:calc((2rem - 1.25rem) / 2);padding-bottom:calc((2rem - 1.25rem) / 2);}/*!sc*/[data-a11y-link-underlines='true'] .Link__StyledLink-sc-14289xe-0[data-inline='true']{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.vLMkZ:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.vLMkZ:is(button){display:inline-block;padding:0;font-size:inherit;white-space:nowrap;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;}/*!sc*/.vLMkZ span[data-component=\"icon\"]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/@media (hover:hover){.vLMkZ:hover{background-color:var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));-webkit-transition:background .12s ease-out;transition:background .12s ease-out;-webkit-text-decoration:none;text-decoration:none;}}/*!sc*/.vLMkZ:focus{outline:2px solid transparent;}/*!sc*/.vLMkZ:focus{box-shadow:inset 0 0 0 2px var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.vLMkZ:focus:not(:focus-visible){box-shadow:none;}/*!sc*/.vLMkZ:focus-visible{outline:2px solid transparent;box-shadow:inset 0 0 0 2px var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.vLMkZ span[data-content]::before{content:attr(data-content);display:block;height:0;font-weight:600;visibility:hidden;white-space:nowrap;}/*!sc*/.vLMkZ::after{position:absolute;right:50%;bottom:calc(50% - 25px);width:100%;height:2px;content:\"\";background-color:var(--underlineNav-borderColor-active,var(--color-primer-border-active,#fd8c73));border-radius:0;-webkit-transform:translate(50%,-50%);-ms-transform:translate(50%,-50%);transform:translate(50%,-50%);}/*!sc*/@media (forced-colors:active){.vLMkZ::after{background-color:LinkText;}}/*!sc*/.bhqztV{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));-webkit-text-decoration:none;text-decoration:none;position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;color:var(--fgColor-default,var(--color-fg-default,#1F2328));text-align:center;-webkit-text-decoration:none;text-decoration:none;line-height:calc(20/14);border-radius:6px;font-size:14px;padding-left:8px;padding-right:8px;padding-top:calc((2rem - 1.25rem) / 2);padding-bottom:calc((2rem - 1.25rem) / 2);}/*!sc*/[data-a11y-link-underlines='true'] .Link__StyledLink-sc-14289xe-0[data-inline='true']{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.bhqztV:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.bhqztV:is(button){display:inline-block;padding:0;font-size:inherit;white-space:nowrap;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;}/*!sc*/.bhqztV span[data-component=\"icon\"]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/@media (hover:hover){.bhqztV:hover{background-color:var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));-webkit-transition:background .12s ease-out;transition:background .12s ease-out;-webkit-text-decoration:none;text-decoration:none;}}/*!sc*/.bhqztV:focus{outline:2px solid transparent;}/*!sc*/.bhqztV:focus{box-shadow:inset 0 0 0 2px var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.bhqztV:focus:not(:focus-visible){box-shadow:none;}/*!sc*/.bhqztV:focus-visible{outline:2px solid transparent;box-shadow:inset 0 0 0 2px var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.bhqztV span[data-content]::before{content:attr(data-content);display:block;height:0;font-weight:600;visibility:hidden;white-space:nowrap;}/*!sc*/.bhqztV::after{position:absolute;right:50%;bottom:calc(50% - 25px);width:100%;height:2px;content:\"\";background-color:transparent;border-radius:0;-webkit-transform:translate(50%,-50%);-ms-transform:translate(50%,-50%);transform:translate(50%,-50%);}/*!sc*/@media (forced-colors:active){.bhqztV::after{background-color:transparent;}}/*!sc*/data-styled.g8[id=\"Link__StyledLink-sc-14289xe-0\"]{content:\"dheQRw,vLMkZ,bhqztV,\"}/*!sc*/.izDscS{border-radius:6px;border:1px solid;border-color:var(--button-default-borderColor-rest,var(--button-default-borderColor-rest,var(--color-btn-border,rgba(31,35,40,0.15))));font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:var(--button-default-bgColor-rest,var(--color-btn-bg,#f6f8fa));box-shadow:var(--button-default-shadow-resting,var(--color-btn-shadow,0 1px 0 rgba(31,35,40,0.04))),var(--button-default-shadow-inset,var(--color-btn-inset-shadow,inset 0 1px 0 rgba(255,255,255,0.25)));}/*!sc*/.izDscS:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.izDscS:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.izDscS:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.izDscS[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.izDscS[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.izDscS:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.izDscS:active{-webkit-transition:none;transition:none;}/*!sc*/.izDscS[data-inactive]{cursor:auto;}/*!sc*/.izDscS:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));border-color:var(--button-default-borderColor-disabled,var(--button-default-borderColor-rest,var(--color-btn-border,rgba(31,35,40,0.15))));}/*!sc*/.izDscS:disabled [data-component=ButtonCounter]{color:inherit;}/*!sc*/@media (forced-colors:active){.izDscS:focus{outline:solid 1px transparent;}}/*!sc*/.izDscS [data-component=ButtonCounter]{font-size:12px;background-color:var(--buttonCounter-default-bgColor-rest,var(--color-btn-counter-bg,rgba(31,35,40,0.08)));}/*!sc*/.izDscS[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.izDscS[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.izDscS[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.izDscS[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.izDscS[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.izDscS[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.izDscS[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.izDscS[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.izDscS[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.izDscS[data-block=\"block\"]{width:100%;}/*!sc*/.izDscS[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.izDscS[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.izDscS [data-component=\"leadingVisual\"]{grid-area:leadingVisual;}/*!sc*/.izDscS [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.izDscS [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.izDscS [data-component=\"trailingAction\"]{margin-right:-4px;}/*!sc*/.izDscS [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.izDscS [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.izDscS:hover:not([disabled]):not([data-inactive]){background-color:var(--button-default-bgColor-hover,var(--color-btn-hover-bg,#f3f4f6));border-color:var(--button-default-borderColor-hover,var(--button-default-borderColor-hover,var(--color-btn-hover-border,rgba(31,35,40,0.15))));}/*!sc*/.izDscS:active:not([disabled]):not([data-inactive]){background-color:var(--button-default-bgColor-active,var(--color-btn-active-bg,hsla(220,14%,93%,1)));border-color:var(--button-default-borderColor-active,var(--button-default-borderColor-active,var(--color-btn-active-border,rgba(31,35,40,0.15))));}/*!sc*/.izDscS[aria-expanded=true]{background-color:var(--button-default-bgColor-active,var(--color-btn-active-bg,hsla(220,14%,93%,1)));border-color:var(--button-default-borderColor-active,var(--button-default-borderColor-active,var(--color-btn-active-border,rgba(31,35,40,0.15))));}/*!sc*/.izDscS [data-component=\"leadingVisual\"],.izDscS [data-component=\"trailingVisual\"],.izDscS [data-component=\"trailingAction\"]{color:var(--button-color,var(--fgColor-muted,var(--color-fg-muted,#656d76)));}/*!sc*/.izDscS{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/.izDscS svg{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.izDscS > span{width:inherit;}/*!sc*/.cuOWTR{border-radius:6px;border:1px solid;border-color:transparent;font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:transparent;box-shadow:none;}/*!sc*/.cuOWTR:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.cuOWTR:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.cuOWTR:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.cuOWTR[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.cuOWTR[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.cuOWTR:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.cuOWTR:active{-webkit-transition:none;transition:none;}/*!sc*/.cuOWTR[data-inactive]{cursor:auto;}/*!sc*/.cuOWTR:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.cuOWTR:disabled [data-component=ButtonCounter],.cuOWTR:disabled [data-component=\"leadingVisual\"],.cuOWTR:disabled [data-component=\"trailingAction\"]{color:inherit;}/*!sc*/@media (forced-colors:active){.cuOWTR:focus{outline:solid 1px transparent;}}/*!sc*/.cuOWTR [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.cuOWTR[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.cuOWTR[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.cuOWTR[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.cuOWTR[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.cuOWTR[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.cuOWTR[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.cuOWTR[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.cuOWTR[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.cuOWTR[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.cuOWTR[data-block=\"block\"]{width:100%;}/*!sc*/.cuOWTR[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.cuOWTR[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.cuOWTR [data-component=\"leadingVisual\"]{grid-area:leadingVisual;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.cuOWTR [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.cuOWTR [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.cuOWTR [data-component=\"trailingAction\"]{margin-right:-4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.cuOWTR [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.cuOWTR [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.cuOWTR:hover:not([disabled]){background-color:var(--control-transparent-bgColor-hover,var(--color-action-list-item-default-hover-bg,rgba(208,215,222,0.32)));}/*!sc*/.cuOWTR:active:not([disabled]){background-color:var(--control-transparent-bgColor-active,var(--color-action-list-item-default-active-bg,rgba(208,215,222,0.48)));}/*!sc*/.cuOWTR[aria-expanded=true]{background-color:var(--control-transparent-bgColor-selected,var(--color-action-list-item-default-selected-bg,rgba(208,215,222,0.24)));}/*!sc*/.cuOWTR[data-component=\"IconButton\"][data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.cuOWTR[data-no-visuals]{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.cuOWTR:has([data-component=\"ButtonCounter\"]){color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));}/*!sc*/.cuOWTR:disabled[data-no-visuals]{color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.cuOWTR:disabled[data-no-visuals] [data-component=ButtonCounter]{color:inherit;}/*!sc*/.cuOWTR{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));padding-left:4px;padding-right:4px;}/*!sc*/.cuOWTR span[data-component=\"leadingVisual\"]{margin-right:4px !important;}/*!sc*/.tDSzd{border-radius:6px;border:1px solid;border-color:transparent;font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:transparent;box-shadow:none;}/*!sc*/.tDSzd:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.tDSzd:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.tDSzd:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.tDSzd[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.tDSzd[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.tDSzd:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.tDSzd:active{-webkit-transition:none;transition:none;}/*!sc*/.tDSzd[data-inactive]{cursor:auto;}/*!sc*/.tDSzd:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.tDSzd:disabled [data-component=ButtonCounter],.tDSzd:disabled [data-component=\"leadingVisual\"],.tDSzd:disabled [data-component=\"trailingAction\"]{color:inherit;}/*!sc*/@media (forced-colors:active){.tDSzd:focus{outline:solid 1px transparent;}}/*!sc*/.tDSzd [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.tDSzd[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.tDSzd[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.tDSzd[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.tDSzd[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.tDSzd[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.tDSzd[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.tDSzd[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.tDSzd[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.tDSzd[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.tDSzd[data-block=\"block\"]{width:100%;}/*!sc*/.tDSzd[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.tDSzd[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.tDSzd [data-component=\"leadingVisual\"]{grid-area:leadingVisual;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.tDSzd [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.tDSzd [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.tDSzd [data-component=\"trailingAction\"]{margin-right:-4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.tDSzd [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.tDSzd [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.tDSzd:hover:not([disabled]){background-color:var(--control-transparent-bgColor-hover,var(--color-action-list-item-default-hover-bg,rgba(208,215,222,0.32)));}/*!sc*/.tDSzd:active:not([disabled]){background-color:var(--control-transparent-bgColor-active,var(--color-action-list-item-default-active-bg,rgba(208,215,222,0.48)));}/*!sc*/.tDSzd[aria-expanded=true]{background-color:var(--control-transparent-bgColor-selected,var(--color-action-list-item-default-selected-bg,rgba(208,215,222,0.24)));}/*!sc*/.tDSzd[data-component=\"IconButton\"][data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.tDSzd[data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.tDSzd:has([data-component=\"ButtonCounter\"]){color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));}/*!sc*/.tDSzd:disabled[data-no-visuals]{color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.tDSzd:disabled[data-no-visuals] [data-component=ButtonCounter]{color:inherit;}/*!sc*/.ftZGca{border-radius:6px;border:1px solid;border-color:var(--button-default-borderColor-rest,var(--button-default-borderColor-rest,var(--color-btn-border,rgba(31,35,40,0.15))));font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:var(--button-default-bgColor-rest,var(--color-btn-bg,#f6f8fa));box-shadow:var(--button-default-shadow-resting,var(--color-btn-shadow,0 1px 0 rgba(31,35,40,0.04))),var(--button-default-shadow-inset,var(--color-btn-inset-shadow,inset 0 1px 0 rgba(255,255,255,0.25)));}/*!sc*/.ftZGca:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.ftZGca:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.ftZGca:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.ftZGca[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.ftZGca[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.ftZGca:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.ftZGca:active{-webkit-transition:none;transition:none;}/*!sc*/.ftZGca[data-inactive]{cursor:auto;}/*!sc*/.ftZGca:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));border-color:var(--button-default-borderColor-disabled,var(--button-default-borderColor-rest,var(--color-btn-border,rgba(31,35,40,0.15))));}/*!sc*/.ftZGca:disabled [data-component=ButtonCounter]{color:inherit;}/*!sc*/@media (forced-colors:active){.ftZGca:focus{outline:solid 1px transparent;}}/*!sc*/.ftZGca [data-component=ButtonCounter]{font-size:12px;background-color:var(--buttonCounter-default-bgColor-rest,var(--color-btn-counter-bg,rgba(31,35,40,0.08)));}/*!sc*/.ftZGca[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.ftZGca[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.ftZGca[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.ftZGca[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.ftZGca[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.ftZGca[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.ftZGca[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.ftZGca[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.ftZGca[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.ftZGca[data-block=\"block\"]{width:100%;}/*!sc*/.ftZGca[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.ftZGca[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.ftZGca [data-component=\"leadingVisual\"]{grid-area:leadingVisual;}/*!sc*/.ftZGca [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.ftZGca [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.ftZGca [data-component=\"trailingAction\"]{margin-right:-4px;}/*!sc*/.ftZGca [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.ftZGca [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.ftZGca:hover:not([disabled]):not([data-inactive]){background-color:var(--button-default-bgColor-hover,var(--color-btn-hover-bg,#f3f4f6));border-color:var(--button-default-borderColor-hover,var(--button-default-borderColor-hover,var(--color-btn-hover-border,rgba(31,35,40,0.15))));}/*!sc*/.ftZGca:active:not([disabled]):not([data-inactive]){background-color:var(--button-default-bgColor-active,var(--color-btn-active-bg,hsla(220,14%,93%,1)));border-color:var(--button-default-borderColor-active,var(--button-default-borderColor-active,var(--color-btn-active-border,rgba(31,35,40,0.15))));}/*!sc*/.ftZGca[aria-expanded=true]{background-color:var(--button-default-bgColor-active,var(--color-btn-active-bg,hsla(220,14%,93%,1)));border-color:var(--button-default-borderColor-active,var(--button-default-borderColor-active,var(--color-btn-active-border,rgba(31,35,40,0.15))));}/*!sc*/.ftZGca [data-component=\"leadingVisual\"],.ftZGca [data-component=\"trailingVisual\"],.ftZGca [data-component=\"trailingAction\"]{color:var(--button-color,var(--fgColor-muted,var(--color-fg-muted,#656d76)));}/*!sc*/.gYvpXq{border-radius:6px;border:1px solid;border-color:var(--button-primary-borderColor-rest,var(--color-btn-primary-border,rgba(31,35,40,0.15)));font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-primary-fgColor-rest,var(--color-btn-primary-text,#ffffff));background-color:var(--button-primary-bgColor-rest,var(--color-btn-primary-bg,#1f883d));box-shadow:var(--shadow-resting-small,var(--color-btn-primary-shadow,0 1px 0 rgba(31,35,40,0.1)));}/*!sc*/.gYvpXq:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.gYvpXq:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.gYvpXq:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.gYvpXq[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.gYvpXq[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.gYvpXq:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.gYvpXq:active{-webkit-transition:none;transition:none;}/*!sc*/.gYvpXq[data-inactive]{cursor:auto;}/*!sc*/.gYvpXq:disabled{cursor:not-allowed;box-shadow:none;color:var(--button-primary-fgColor-disabled,var(--color-btn-primary-disabled-text,rgba(255,255,255,0.8)));background-color:var(--button-primary-bgColor-disabled,var(--color-btn-primary-disabled-bg,#94d3a2));border-color:var(--button-primary-borderColor-disabled,var(--color-btn-primary-disabled-border,rgba(31,35,40,0.15)));}/*!sc*/.gYvpXq:disabled [data-component=ButtonCounter]{color:inherit;}/*!sc*/@media (forced-colors:active){.gYvpXq:focus{outline:solid 1px transparent;}}/*!sc*/.gYvpXq [data-component=ButtonCounter]{font-size:12px;background-color:var(--buttonCounter-primary-bgColor-rest,var(--color-btn-primary-counter-bg,rgba(0,45,17,0.2)));color:var(--button-primary-fgColor-rest,var(--color-btn-primary-text,#ffffff));}/*!sc*/.gYvpXq[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.gYvpXq[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.gYvpXq[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.gYvpXq[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.gYvpXq[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.gYvpXq[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.gYvpXq[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.gYvpXq[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.gYvpXq[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.gYvpXq[data-block=\"block\"]{width:100%;}/*!sc*/.gYvpXq[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.gYvpXq[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.gYvpXq [data-component=\"leadingVisual\"]{grid-area:leadingVisual;}/*!sc*/.gYvpXq [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.gYvpXq [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.gYvpXq [data-component=\"trailingAction\"]{margin-right:-4px;}/*!sc*/.gYvpXq [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.gYvpXq [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.gYvpXq:hover:not([disabled]):not([data-inactive]){color:btn.primary.hoverText;background-color:var(--button-primary-bgColor-hover,var(--color-btn-primary-hover-bg,#1a7f37));}/*!sc*/.gYvpXq:focus:not([disabled]){box-shadow:inset 0 0 0 3px;}/*!sc*/.gYvpXq:focus-visible:not([disabled]){box-shadow:inset 0 0 0 3px;}/*!sc*/.gYvpXq:active:not([disabled]):not([data-inactive]){background-color:var(--button-primary-bgColor-active,var(--color-btn-primary-selected-bg,hsla(137,66%,28%,1)));box-shadow:var(--button-primary-shadow-selected,var(--color-btn-primary-selected-shadow,inset 0 1px 0 rgba(0,45,17,0.2)));}/*!sc*/.gYvpXq[aria-expanded=true]{background-color:var(--button-primary-bgColor-active,var(--color-btn-primary-selected-bg,hsla(137,66%,28%,1)));box-shadow:var(--button-primary-shadow-selected,var(--color-btn-primary-selected-shadow,inset 0 1px 0 rgba(0,45,17,0.2)));}/*!sc*/.gYvpXq svg{color:fg.primary;}/*!sc*/.fAkXQN{border-radius:6px;border:1px solid;border-color:transparent;font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--fgColor-default,var(--color-fg-default,#1F2328));background-color:transparent;box-shadow:none;}/*!sc*/.fAkXQN:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.fAkXQN:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.fAkXQN:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.fAkXQN[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.fAkXQN[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.fAkXQN:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.fAkXQN:active{-webkit-transition:none;transition:none;}/*!sc*/.fAkXQN[data-inactive]{cursor:auto;}/*!sc*/.fAkXQN:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.fAkXQN:disabled [data-component=ButtonCounter],.fAkXQN:disabled [data-component=\"leadingVisual\"],.fAkXQN:disabled [data-component=\"trailingAction\"]{color:inherit;}/*!sc*/@media (forced-colors:active){.fAkXQN:focus{outline:solid 1px transparent;}}/*!sc*/.fAkXQN [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.fAkXQN[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.fAkXQN[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.fAkXQN[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.fAkXQN[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.fAkXQN[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.fAkXQN[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.fAkXQN[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.fAkXQN[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.fAkXQN[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.fAkXQN[data-block=\"block\"]{width:100%;}/*!sc*/.fAkXQN[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.fAkXQN[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.fAkXQN [data-component=\"leadingVisual\"]{grid-area:leadingVisual;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.fAkXQN [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.fAkXQN [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.fAkXQN [data-component=\"trailingAction\"]{margin-right:-4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.fAkXQN [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.fAkXQN [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.fAkXQN:hover:not([disabled]){background-color:var(--control-transparent-bgColor-hover,var(--color-action-list-item-default-hover-bg,rgba(208,215,222,0.32)));-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.fAkXQN:active:not([disabled]){background-color:var(--control-transparent-bgColor-active,var(--color-action-list-item-default-active-bg,rgba(208,215,222,0.48)));-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.fAkXQN[aria-expanded=true]{background-color:var(--control-transparent-bgColor-selected,var(--color-action-list-item-default-selected-bg,rgba(208,215,222,0.24)));}/*!sc*/.fAkXQN[data-component=\"IconButton\"][data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.fAkXQN[data-no-visuals]{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.fAkXQN:has([data-component=\"ButtonCounter\"]){color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));}/*!sc*/.fAkXQN:disabled[data-no-visuals]{color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.fAkXQN:disabled[data-no-visuals] [data-component=ButtonCounter]{color:inherit;}/*!sc*/.fAkXQN:focus:not([disabled]){-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.jPraEl{border-radius:6px;border:1px solid;border-color:transparent;font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:transparent;box-shadow:none;}/*!sc*/.jPraEl:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.jPraEl:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.jPraEl:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.jPraEl[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.jPraEl[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.jPraEl:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.jPraEl:active{-webkit-transition:none;transition:none;}/*!sc*/.jPraEl[data-inactive]{cursor:auto;}/*!sc*/.jPraEl:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.jPraEl:disabled [data-component=ButtonCounter],.jPraEl:disabled [data-component=\"leadingVisual\"],.jPraEl:disabled [data-component=\"trailingAction\"]{color:inherit;}/*!sc*/@media (forced-colors:active){.jPraEl:focus{outline:solid 1px transparent;}}/*!sc*/.jPraEl [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.jPraEl[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.jPraEl[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.jPraEl[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.jPraEl[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.jPraEl[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.jPraEl[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.jPraEl[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.jPraEl[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.jPraEl[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.jPraEl[data-block=\"block\"]{width:100%;}/*!sc*/.jPraEl[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.jPraEl[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.jPraEl [data-component=\"leadingVisual\"]{grid-area:leadingVisual;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.jPraEl [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.jPraEl [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.jPraEl [data-component=\"trailingAction\"]{margin-right:-4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.jPraEl [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.jPraEl [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.jPraEl:hover:not([disabled]){background-color:var(--control-transparent-bgColor-hover,var(--color-action-list-item-default-hover-bg,rgba(208,215,222,0.32)));}/*!sc*/.jPraEl:active:not([disabled]){background-color:var(--control-transparent-bgColor-active,var(--color-action-list-item-default-active-bg,rgba(208,215,222,0.48)));}/*!sc*/.jPraEl[aria-expanded=true]{background-color:var(--control-transparent-bgColor-selected,var(--color-action-list-item-default-selected-bg,rgba(208,215,222,0.24)));}/*!sc*/.jPraEl[data-component=\"IconButton\"][data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.jPraEl[data-no-visuals]{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.jPraEl:has([data-component=\"ButtonCounter\"]){color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));}/*!sc*/.jPraEl:disabled[data-no-visuals]{color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.jPraEl:disabled[data-no-visuals] [data-component=ButtonCounter]{color:inherit;}/*!sc*/.jPraEl{color:var(--fgColor-muted,var(--color-fg-subtle,#6e7781));padding-left:8px;padding-right:8px;}/*!sc*/data-styled.g9[id=\"types__StyledButton-sc-ws60qy-0\"]{content:\"izDscS,cuOWTR,tDSzd,ftZGca,gYvpXq,fAkXQN,jPraEl,\"}/*!sc*/.rTZSs{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;-webkit-clip:rect(0,0,0,0);clip:rect(0,0,0,0);white-space:nowrap;border-width:0;}/*!sc*/data-styled.g10[id=\"_VisuallyHidden__VisuallyHidden-sc-11jhm7a-0\"]{content:\"rTZSs,\"}/*!sc*/.fUpWeN{display:inline-block;overflow:hidden;text-overflow:ellipsis;vertical-align:top;white-space:nowrap;max-width:125px;max-width:100%;}/*!sc*/data-styled.g15[id=\"Truncate__StyledTruncate-sc-23o1d2-0\"]{content:\"fUpWeN,\"}/*!sc*/.dMjscx{position:relative;display:inline-block;}/*!sc*/.dMjscx::before{position:absolute;z-index:1000001;display:none;width:0px;height:0px;color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));pointer-events:none;content:'';border:6px solid transparent;opacity:0;}/*!sc*/.dMjscx::after{position:absolute;z-index:1000000;display:none;padding:0.5em 0.75em;font:normal normal 11px/1.5 -apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Noto Sans\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\";-webkit-font-smoothing:subpixel-antialiased;color:var(--fgColor-onEmphasis,var(--color-fg-on-emphasis,#ffffff));text-align:center;-webkit-text-decoration:none;text-decoration:none;text-shadow:none;text-transform:none;-webkit-letter-spacing:normal;-moz-letter-spacing:normal;-ms-letter-spacing:normal;letter-spacing:normal;word-wrap:break-word;white-space:pre;pointer-events:none;content:attr(aria-label);background:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));border-radius:6px;opacity:0;}/*!sc*/@-webkit-keyframes tooltip-appear{from{opacity:0;}to{opacity:1;}}/*!sc*/@keyframes tooltip-appear{from{opacity:0;}to{opacity:1;}}/*!sc*/.dMjscx:hover::before,.dMjscx:active::before,.dMjscx:focus::before,.dMjscx:focus-within::before,.dMjscx:hover::after,.dMjscx:active::after,.dMjscx:focus::after,.dMjscx:focus-within::after{display:inline-block;-webkit-text-decoration:none;text-decoration:none;-webkit-animation-name:tooltip-appear;animation-name:tooltip-appear;-webkit-animation-duration:0.1s;animation-duration:0.1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;-webkit-animation-delay:0.4s;animation-delay:0.4s;}/*!sc*/.dMjscx.tooltipped-no-delay:hover::before,.dMjscx.tooltipped-no-delay:active::before,.dMjscx.tooltipped-no-delay:focus::before,.dMjscx.tooltipped-no-delay:focus-within::before,.dMjscx.tooltipped-no-delay:hover::after,.dMjscx.tooltipped-no-delay:active::after,.dMjscx.tooltipped-no-delay:focus::after,.dMjscx.tooltipped-no-delay:focus-within::after{-webkit-animation-delay:0s;animation-delay:0s;}/*!sc*/.dMjscx.tooltipped-multiline:hover::after,.dMjscx.tooltipped-multiline:active::after,.dMjscx.tooltipped-multiline:focus::after,.dMjscx.tooltipped-multiline:focus-within::after{display:table-cell;}/*!sc*/.dMjscx.tooltipped-s::after,.dMjscx.tooltipped-se::after,.dMjscx.tooltipped-sw::after{top:100%;right:50%;margin-top:6px;}/*!sc*/.dMjscx.tooltipped-s::before,.dMjscx.tooltipped-se::before,.dMjscx.tooltipped-sw::before{top:auto;right:50%;bottom:-7px;margin-right:-6px;border-bottom-color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));}/*!sc*/.dMjscx.tooltipped-se::after{right:auto;left:50%;margin-left:-16px;}/*!sc*/.dMjscx.tooltipped-sw::after{margin-right:-16px;}/*!sc*/.dMjscx.tooltipped-n::after,.dMjscx.tooltipped-ne::after,.dMjscx.tooltipped-nw::after{right:50%;bottom:100%;margin-bottom:6px;}/*!sc*/.dMjscx.tooltipped-n::before,.dMjscx.tooltipped-ne::before,.dMjscx.tooltipped-nw::before{top:-7px;right:50%;bottom:auto;margin-right:-6px;border-top-color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));}/*!sc*/.dMjscx.tooltipped-ne::after{right:auto;left:50%;margin-left:-16px;}/*!sc*/.dMjscx.tooltipped-nw::after{margin-right:-16px;}/*!sc*/.dMjscx.tooltipped-s::after,.dMjscx.tooltipped-n::after{-webkit-transform:translateX(50%);-ms-transform:translateX(50%);transform:translateX(50%);}/*!sc*/.dMjscx.tooltipped-w::after{right:100%;bottom:50%;margin-right:6px;-webkit-transform:translateY(50%);-ms-transform:translateY(50%);transform:translateY(50%);}/*!sc*/.dMjscx.tooltipped-w::before{top:50%;bottom:50%;left:-7px;margin-top:-6px;border-left-color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));}/*!sc*/.dMjscx.tooltipped-e::after{bottom:50%;left:100%;margin-left:6px;-webkit-transform:translateY(50%);-ms-transform:translateY(50%);transform:translateY(50%);}/*!sc*/.dMjscx.tooltipped-e::before{top:50%;right:-7px;bottom:50%;margin-top:-6px;border-right-color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));}/*!sc*/.dMjscx.tooltipped-multiline::after{width:-webkit-max-content;width:-moz-max-content;width:max-content;max-width:250px;word-wrap:break-word;white-space:pre-line;border-collapse:separate;}/*!sc*/.dMjscx.tooltipped-multiline.tooltipped-s::after,.dMjscx.tooltipped-multiline.tooltipped-n::after{right:auto;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);}/*!sc*/.dMjscx.tooltipped-multiline.tooltipped-w::after,.dMjscx.tooltipped-multiline.tooltipped-e::after{right:100%;}/*!sc*/.dMjscx.tooltipped-align-right-2::after{right:0;margin-right:0;}/*!sc*/.dMjscx.tooltipped-align-right-2::before{right:15px;}/*!sc*/.dMjscx.tooltipped-align-left-2::after{left:0;margin-left:0;}/*!sc*/.dMjscx.tooltipped-align-left-2::before{left:10px;}/*!sc*/data-styled.g18[id=\"Tooltip__TooltipBase-sc-17tf59c-0\"]{content:\"dMjscx,\"}/*!sc*/.bPgibo{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;list-style:none;white-space:nowrap;padding-top:0;padding-bottom:0;padding-left:0;padding-right:0;margin:0;margin-bottom:-1px;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:8px;position:relative;}/*!sc*/data-styled.g103[id=\"UnderlineNav__NavigationList-sc-1jfr31k-0\"]{content:\"bPgibo,\"}/*!sc*/</style> <!-- --> <!-- --> <div class=\"Box-sc-g0xbh4-0 izjvBm\"><div class=\"Box-sc-g0xbh4-0 rPQgy\"><div class=\"Box-sc-g0xbh4-0 eUMEDg\"></div></div><div class=\"Box-sc-g0xbh4-0 eLcVee\"><div class=\"Box-sc-g0xbh4-0 hsfLlq\"><div class=\"Box-sc-g0xbh4-0 gpKoUz\"><button type=\"button\" id=\"branch-picker-repos-header-ref-selector\" aria-haspopup=\"true\" tabindex=\"0\" aria-label=\"master branch\" data-testid=\"anchor-button\" class=\"types__StyledButton-sc-ws60qy-0 izDscS overview-ref-selector\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"text\"><div class=\"Box-sc-g0xbh4-0 bKgizp\"><div class=\"Box-sc-g0xbh4-0 iPGYsi\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-git-branch\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M9.5 3.25a2.25 2.25 0 1 1 3 2.122V6A2.5 2.5 0 0 1 10 8.5H6a1 1 0 0 0-1 1v1.128a2.251 2.251 0 1 1-1.5 0V5.372a2.25 2.25 0 1 1 1.5 0v1.836A2.493 2.493 0 0 1 6 7h4a1 1 0 0 0 1-1v-.628A2.25 2.25 0 0 1 9.5 3.25Zm-6 0a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Zm8.25-.75a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5ZM4.25 12a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Z\"></path></svg></div><div class=\"Box-sc-g0xbh4-0 dKmYfk ref-selector-button-text-container\"><span class=\"Text-sc-17v1xeu-0 bOMzPg\">\u00a0<!-- -->master</span></div></div></span><span data-component=\"trailingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-triangle-down\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m4.427 7.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.396 7H4.604a.25.25 0 0 0-.177.427Z\"></path></svg></span></span></button><button hidden=\"\" data-hotkey-scope=\"read-only-cursor-text-area\"></button></div><div class=\"Box-sc-g0xbh4-0 laYubZ\"><a style=\"--button-color:fg.muted\" type=\"button\" href=\"/jefflau/jest-fetch-mock/branches\" class=\"types__StyledButton-sc-ws60qy-0 cuOWTR\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-git-branch\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M9.5 3.25a2.25 2.25 0 1 1 3 2.122V6A2.5 2.5 0 0 1 10 8.5H6a1 1 0 0 0-1 1v1.128a2.251 2.251 0 1 1-1.5 0V5.372a2.25 2.25 0 1 1 1.5 0v1.836A2.493 2.493 0 0 1 6 7h4a1 1 0 0 0 1-1v-.628A2.25 2.25 0 0 1 9.5 3.25Zm-6 0a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Zm8.25-.75a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5ZM4.25 12a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Z\"></path></svg></span><span data-component=\"text\">Branches</span></span></a><a style=\"--button-color:fg.muted\" type=\"button\" href=\"/jefflau/jest-fetch-mock/tags\" class=\"types__StyledButton-sc-ws60qy-0 cuOWTR\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-tag\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.752 1.752 0 0 1 1 7.775Zm1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z\"></path></svg></span><span data-component=\"text\">Tags</span></span></a></div><div class=\"Box-sc-g0xbh4-0 swnaL\"><a style=\"--button-color:fg.muted\" type=\"button\" aria-label=\"Go to Branches page\" href=\"/jefflau/jest-fetch-mock/branches\" data-no-visuals=\"true\" class=\"types__StyledButton-sc-ws60qy-0 tDSzd\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-git-branch\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M9.5 3.25a2.25 2.25 0 1 1 3 2.122V6A2.5 2.5 0 0 1 10 8.5H6a1 1 0 0 0-1 1v1.128a2.251 2.251 0 1 1-1.5 0V5.372a2.25 2.25 0 1 1 1.5 0v1.836A2.493 2.493 0 0 1 6 7h4a1 1 0 0 0 1-1v-.628A2.25 2.25 0 0 1 9.5 3.25Zm-6 0a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Zm8.25-.75a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5ZM4.25 12a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Z\"></path></svg></a><a style=\"--button-color:fg.muted\" type=\"button\" aria-label=\"Go to Tags page\" href=\"/jefflau/jest-fetch-mock/tags\" data-no-visuals=\"true\" class=\"types__StyledButton-sc-ws60qy-0 tDSzd\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-tag\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.752 1.752 0 0 1 1 7.775Zm1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z\"></path></svg></a></div></div><div class=\"Box-sc-g0xbh4-0 bWpuBf\"><div class=\"Box-sc-g0xbh4-0 grHjNb\"><div class=\"Box-sc-g0xbh4-0 dXTsqj\"><!--$!--><template></template><!--/$--></div><div class=\"Box-sc-g0xbh4-0 dCOrmu\"><button type=\"button\" data-no-visuals=\"true\" class=\"types__StyledButton-sc-ws60qy-0 ftZGca\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"text\">Go to file</span></span></button></div><div class=\"react-directory-add-file-icon\"></div><div class=\"react-directory-remove-file-icon\"></div></div><button type=\"button\" id=\":R2il5:\" aria-haspopup=\"true\" tabindex=\"0\" class=\"types__StyledButton-sc-ws60qy-0 gYvpXq\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><div class=\"Box-sc-g0xbh4-0 bVvbgP\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-code\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z\"></path></svg></div></span><span data-component=\"text\">Code</span></span><span data-component=\"trailingAction\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-triangle-down\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m4.427 7.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.396 7H4.604a.25.25 0 0 0-.177.427Z\"></path></svg></span></button><div class=\"Box-sc-g0xbh4-0 bNDvfp\"><button data-component=\"IconButton\" type=\"button\" aria-label=\"Open more actions menu\" id=\":R3il5:\" aria-haspopup=\"true\" tabindex=\"0\" data-no-visuals=\"true\" class=\"types__StyledButton-sc-ws60qy-0 ftZGca\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-kebab-horizontal\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M8 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3ZM1.5 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Zm13 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path></svg></button></div></div></div><div class=\"Box-sc-g0xbh4-0 yfPnm\"><div data-hpc=\"true\" class=\"Box-sc-g0xbh4-0\"><button hidden=\"\" data-testid=\"focus-next-element-button\" data-hotkey=\"j\" data-hotkey-scope=\"read-only-cursor-text-area\"></button><button hidden=\"\" data-hotkey=\"j\"></button><button hidden=\"\" data-testid=\"focus-previous-element-button\" data-hotkey=\"k\" data-hotkey-scope=\"read-only-cursor-text-area\"></button><button hidden=\"\" data-hotkey=\"k\"></button><h2 class=\"Heading__StyledHeading-sc-1c1dgg0-0 cgQnMS sr-only\" data-testid=\"screen-reader-heading\" id=\"folders-and-files\">Folders and files</h2><table aria-labelledby=\"folders-and-files\" class=\"Box-sc-g0xbh4-0 cAQuiW\"><thead class=\"Box-sc-g0xbh4-0 iiUlLN\"><tr class=\"Box-sc-g0xbh4-0 jmggSN\"><th colSpan=\"2\" class=\"Box-sc-g0xbh4-0 kvYunM\"><span class=\"Text-sc-17v1xeu-0 eUGNHp\">Name</span></th><th colSpan=\"1\" class=\"Box-sc-g0xbh4-0 hrLuxA\"><span class=\"Text-sc-17v1xeu-0 eUGNHp\">Name</span></th><th class=\"Box-sc-g0xbh4-0 ePjhhA\"><div title=\"Last commit message\" class=\"Truncate__StyledTruncate-sc-23o1d2-0 fUpWeN\"><span class=\"Text-sc-17v1xeu-0 eUGNHp\">Last commit message</span></div></th><th colSpan=\"1\" class=\"Box-sc-g0xbh4-0 cuEKae\"><div title=\"Last commit date\" class=\"Truncate__StyledTruncate-sc-23o1d2-0 fUpWeN\"><span class=\"Text-sc-17v1xeu-0 eUGNHp\">Last commit date</span></div></th></tr></thead><tbody><tr class=\"Box-sc-g0xbh4-0 jEbBOT\"><td colSpan=\"3\" class=\"Box-sc-g0xbh4-0 bTxCvM\"><div class=\"Box-sc-g0xbh4-0 eYedVD\"><h2 class=\"Heading__StyledHeading-sc-1c1dgg0-0 cgQnMS sr-only\" data-testid=\"screen-reader-heading\">Latest commit</h2><div style=\"width:120px\" class=\"Skeleton Skeleton--text\" data-testid=\"loading\">\u00a0</div><div class=\"Box-sc-g0xbh4-0 jGfYmh\"><div data-testid=\"latest-commit-details\" class=\"Box-sc-g0xbh4-0 lhFvfi\"></div><h2 class=\"Heading__StyledHeading-sc-1c1dgg0-0 cgQnMS sr-only\" data-testid=\"screen-reader-heading\">History</h2><a class=\"types__StyledButton-sc-ws60qy-0 fAkXQN react-last-commit-history-group\" href=\"/jefflau/jest-fetch-mock/commits/master/\" data-size=\"small\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-history\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m.427 1.927 1.215 1.215a8.002 8.002 0 1 1-1.6 5.685.75.75 0 1 1 1.493-.154 6.5 6.5 0 1 0 1.18-4.458l1.358 1.358A.25.25 0 0 1 3.896 6H.25A.25.25 0 0 1 0 5.75V2.104a.25.25 0 0 1 .427-.177ZM7.75 4a.75.75 0 0 1 .75.75v2.992l2.028.812a.75.75 0 0 1-.557 1.392l-2.5-1A.751.751 0 0 1 7 8.25v-3.5A.75.75 0 0 1 7.75 4Z\"></path></svg></span><span data-component=\"text\"><span class=\"Text-sc-17v1xeu-0 dALsKK\">225 Commits</span></span></span></a><div class=\"Box-sc-g0xbh4-0 bqgLjk\"></div><span role=\"tooltip\" aria-label=\"Commit history\" class=\"Tooltip__TooltipBase-sc-17tf59c-0 dMjscx tooltipped-n\"><a class=\"types__StyledButton-sc-ws60qy-0 fAkXQN react-last-commit-history-icon\" href=\"/jefflau/jest-fetch-mock/commits/master/\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-history\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m.427 1.927 1.215 1.215a8.002 8.002 0 1 1-1.6 5.685.75.75 0 1 1 1.493-.154 6.5 6.5 0 1 0 1.18-4.458l1.358 1.358A.25.25 0 0 1 3.896 6H.25A.25.25 0 0 1 0 5.75V2.104a.25.25 0 0 1 .427-.177ZM7.75 4a.75.75 0 0 1 .75.75v2.992l2.028.812a.75.75 0 0 1-.557 1.392l-2.5-1A.751.751 0 0 1 7 8.25v-3.5A.75.75 0 0 1 7.75 4Z\"></path></svg></span></span></a></span></div></div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-0\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"This path skips through empty directories\" aria-label=\".github/workflows, (Directory)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/tree/master/.github/workflows\"><span class=\"react-directory-default-color\" data-testid=\"path-name-segment\">.github/</span><span class=\"\" data-testid=\"path-name-segment\">workflows</span></a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"This path skips through empty directories\" aria-label=\".github/workflows, (Directory)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/tree/master/.github/workflows\"><span class=\"react-directory-default-color\" data-testid=\"path-name-segment\">.github/</span><span class=\"\" data-testid=\"path-name-segment\">workflows</span></a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-1\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"src\" aria-label=\"src, (Directory)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/tree/master/src\">src</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"src\" aria-label=\"src, (Directory)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/tree/master/src\">src</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-2\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"tests\" aria-label=\"tests, (Directory)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/tree/master/tests\">tests</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"tests\" aria-label=\"tests, (Directory)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/tree/master/tests\">tests</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-3\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"types\" aria-label=\"types, (Directory)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/tree/master/types\">types</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"types\" aria-label=\"types, (Directory)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/tree/master/types\">types</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-4\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".eslintrc.js\" aria-label=\".eslintrc.js, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/.eslintrc.js\">.eslintrc.js</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".eslintrc.js\" aria-label=\".eslintrc.js, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/.eslintrc.js\">.eslintrc.js</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-5\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".gitignore\" aria-label=\".gitignore, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/.gitignore\">.gitignore</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".gitignore\" aria-label=\".gitignore, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/.gitignore\">.gitignore</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-6\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".npmignore\" aria-label=\".npmignore, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/.npmignore\">.npmignore</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".npmignore\" aria-label=\".npmignore, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/.npmignore\">.npmignore</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-7\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".prettierignore\" aria-label=\".prettierignore, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/.prettierignore\">.prettierignore</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".prettierignore\" aria-label=\".prettierignore, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/.prettierignore\">.prettierignore</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-8\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"LICENSE.md\" aria-label=\"LICENSE.md, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/LICENSE.md\">LICENSE.md</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"LICENSE.md\" aria-label=\"LICENSE.md, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/LICENSE.md\">LICENSE.md</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-9\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"README.md\" aria-label=\"README.md, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/README.md\">README.md</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"README.md\" aria-label=\"README.md, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/README.md\">README.md</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-10\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"package.json\" aria-label=\"package.json, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/package.json\">package.json</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"package.json\" aria-label=\"package.json, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/package.json\">package.json</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-11\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"setupJest.js\" aria-label=\"setupJest.js, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/setupJest.js\">setupJest.js</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"setupJest.js\" aria-label=\"setupJest.js, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/setupJest.js\">setupJest.js</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-12\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"tsconfig.json\" aria-label=\"tsconfig.json, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/tsconfig.json\">tsconfig.json</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"tsconfig.json\" aria-label=\"tsconfig.json, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/tsconfig.json\">tsconfig.json</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-13\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"yarn.lock\" aria-label=\"yarn.lock, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/yarn.lock\">yarn.lock</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"yarn.lock\" aria-label=\"yarn.lock, (File)\" class=\"Link--primary\" href=\"/jefflau/jest-fetch-mock/blob/master/yarn.lock\">yarn.lock</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"Box-sc-g0xbh4-0 epsqEd show-for-mobile\" data-testid=\"view-all-files-row\"><td colSpan=\"3\" class=\"Box-sc-g0xbh4-0 ldpruc\"><div><button class=\"Link__StyledLink-sc-14289xe-0 dheQRw\">View all files</button></div></td></tr></tbody></table></div><div class=\"Box-sc-g0xbh4-0 ehcSsh\"><div class=\"Box-sc-g0xbh4-0 iGmlUb\"><div class=\"Box-sc-g0xbh4-0 iRQGXA\"><h2 class=\"_VisuallyHidden__VisuallyHidden-sc-11jhm7a-0 rTZSs\">Repository files navigation</h2><nav aria-label=\"Repository files\" class=\"Box-sc-g0xbh4-0 dvTdPK\"><ul role=\"list\" class=\"UnderlineNav__NavigationList-sc-1jfr31k-0 bPgibo\"><li class=\"Box-sc-g0xbh4-0 gwuIGu\"><a href=\"#\" aria-current=\"page\" class=\"Link__StyledLink-sc-14289xe-0 vLMkZ\"><span data-component=\"icon\" class=\"Box-sc-g0xbh4-0 kOxwQs\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-book\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z\"></path></svg></span><span data-component=\"text\" data-content=\"README\" class=\"Box-sc-g0xbh4-0 kOgeFj\">README</span></a></li><li class=\"Box-sc-g0xbh4-0 gwuIGu\"><a href=\"#\" class=\"Link__StyledLink-sc-14289xe-0 bhqztV\"><span data-component=\"icon\" class=\"Box-sc-g0xbh4-0 kOxwQs\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-law\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M8.75.75V2h.985c.304 0 .603.08.867.231l1.29.736c.038.022.08.033.124.033h2.234a.75.75 0 0 1 0 1.5h-.427l2.111 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.006.005-.01.01-.045.04c-.21.176-.441.327-.686.45C14.556 10.78 13.88 11 13 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L12.178 4.5h-.162c-.305 0-.604-.079-.868-.231l-1.29-.736a.245.245 0 0 0-.124-.033H8.75V13h2.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1 0-1.5h2.5V3.5h-.984a.245.245 0 0 0-.124.033l-1.289.737c-.265.15-.564.23-.869.23h-.162l2.112 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.016.015-.045.04c-.21.176-.441.327-.686.45C4.556 10.78 3.88 11 3 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L2.178 4.5H1.75a.75.75 0 0 1 0-1.5h2.234a.249.249 0 0 0 .125-.033l1.288-.737c.265-.15.564-.23.869-.23h.984V.75a.75.75 0 0 1 1.5 0Zm2.945 8.477c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L13 6.327Zm-10 0c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L3 6.327Z\"></path></svg></span><span data-component=\"text\" data-content=\"MIT license\" class=\"Box-sc-g0xbh4-0\">MIT license</span></a></li></ul></nav><button style=\"--button-color:fg.subtle\" type=\"button\" aria-label=\"Outline\" id=\":Rdkl5:\" aria-haspopup=\"true\" tabindex=\"0\" class=\"types__StyledButton-sc-ws60qy-0 jPraEl\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-list-unordered\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M5.75 2.5h8.5a.75.75 0 0 1 0 1.5h-8.5a.75.75 0 0 1 0-1.5Zm0 5h8.5a.75.75 0 0 1 0 1.5h-8.5a.75.75 0 0 1 0-1.5Zm0 5h8.5a.75.75 0 0 1 0 1.5h-8.5a.75.75 0 0 1 0-1.5ZM2 14a1 1 0 1 1 0-2 1 1 0 0 1 0 2Zm1-6a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM2 4a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg></button></div><div class=\"Box-sc-g0xbh4-0 bJMeLZ js-snippet-clipboard-copy-unpositioned\" data-hpc=\"true\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div class=\"markdown-heading\" dir=\"auto\"><h1 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Jest Fetch Mock</h1><a id=\"user-content-jest-fetch-mock\" class=\"anchor-element\" aria-label=\"Permalink: Jest Fetch Mock\" href=\"#jest-fetch-mock\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://camo.githubusercontent.com/687bde66ebacb25516f5981f37959ce8335c6af7d2b40c7cc1875e270fa631c8/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f6a6573742d66657463682d6d6f636b\"><img src=\"https://camo.githubusercontent.com/687bde66ebacb25516f5981f37959ce8335c6af7d2b40c7cc1875e270fa631c8/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f6a6573742d66657463682d6d6f636b\" alt=\"npm downloads\" data-canonical-src=\"https://img.shields.io/npm/dw/jest-fetch-mock\" style=\"max-width: 100%;\"></a><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/jefflau/jest-fetch-mock/workflows/Node.js%20CI/badge.svg\"><img src=\"https://github.com/jefflau/jest-fetch-mock/workflows/Node.js%20CI/badge.svg\" alt=\"Node.js CI\" style=\"max-width: 100%;\"></a></p><p dir=\"auto\">Fetch is the canonical way to do HTTP requests in the browser, and it can be used in other environments such as React Native. Jest Fetch Mock allows you to easily mock your <code>fetch</code> calls and return the response you need to fake the HTTP requests. It's easy to setup and you don't need a library like <code>nock</code> to get going and it uses Jest's built-in support for mocking under the surface. This means that any of the <code>jest.fn()</code> methods are also available. For more information on the jest mock API, check their docs <a href=\"https://facebook.github.io/jest/docs/en/mock-functions.html\" rel=\"nofollow\">here</a></p><p dir=\"auto\">It currently supports the mocking with the <a href=\"https://www.npmjs.com/package/cross-fetch\" rel=\"nofollow\"><code>cross-fetch</code></a> polyfill, so it supports Node.js and any browser-like runtime.</p><div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Contents</h2><a id=\"user-content-contents\" class=\"anchor-element\" aria-label=\"Permalink: Contents\" href=\"#contents\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><ul dir=\"auto\"><li><a href=\"#usage\">Usage</a><ul dir=\"auto\"><li><a href=\"#package-installation\">Installation and Setup</a></li><li><a href=\"#using-with-create-react-app\">Using with Create-React-App</a></li></ul></li><li><a href=\"#api\">API</a></li><li><a href=\"#examples\">Examples</a><ul dir=\"auto\"><li><a href=\"#simple-mock-and-assert\">Simple mock and assert</a></li><li><a href=\"#mocking-all-fetches\">Mocking all fetches</a></li><li><a href=\"#mocking-a-failed-fetch\">Mocking a failed fetch</a></li><li><a href=\"#mocking-multiple-fetches-with-different-responses\">Mocking multiple fetches with different responses</a></li><li><a href=\"#mocking-multiple-fetches-with-fetchmockresponses\">Mocking multiple fetches with <code>fetch.mockResponses</code></a></li><li><a href=\"#reset-mocks-between-tests-with-fetchresetmocks\">Reset mocks between tests with <code>fetch.resetMocks</code></a></li><li><a href=\"#using-fetchmock-to-inspect-the-mock-state-of-each-fetch-call\">Using <code>fetch.mock</code> to inspect the mock state of each fetch call</a></li><li><a href=\"#using-functions-to-mock-slow-servers\">Using functions to mock slow servers</a></li></ul></li></ul><div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Usage</h2><a id=\"user-content-usage\" class=\"anchor-element\" aria-label=\"Permalink: Usage\" href=\"#usage\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Package Installation</h3><a id=\"user-content-package-installation\" class=\"anchor-element\" aria-label=\"Permalink: Package Installation\" href=\"#package-installation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">To setup your fetch mock you need to do the following things:</p><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ npm install --save-dev jest-fetch-mock\"><pre class=\"notranslate\"><code>$ npm install --save-dev jest-fetch-mock</code></pre></div><p dir=\"auto\">Create a <code>setupJest</code> file to setup the mock or add this to an existing <code>setupFile</code>. :</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">To setup for all tests</h3><a id=\"user-content-to-setup-for-all-tests\" class=\"anchor-element\" aria-label=\"Permalink: To setup for all tests\" href=\"#to-setup-for-all-tests\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"//setupJest.js or similar filerequire('jest-fetch-mock').enableMocks()\"><pre><span class=\"pl-c\">//setupJest.js or similar file</span><span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'jest-fetch-mock'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">enableMocks</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div><p dir=\"auto\">Add the setupFile to your jest config in <code>package.json</code>:</p><div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&quot;jest&quot;: {  &quot;automock&quot;: false,  &quot;resetMocks&quot;: false,  &quot;setupFiles&quot;: [    &quot;./setupJest.js&quot;  ]}\"><pre><span class=\"pl-ent\">\"jest\"</span>: {  <span class=\"pl-ent\">\"automock\"</span>: <span class=\"pl-c1\">false</span>,  <span class=\"pl-ent\">\"resetMocks\"</span>: <span class=\"pl-c1\">false</span>,  <span class=\"pl-ent\">\"setupFiles\"</span>: [    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./setupJest.js<span class=\"pl-pds\">\"</span></span>  ]}</pre></div><p dir=\"auto\">With this done, you'll have <code>fetch</code> and <code>fetchMock</code> available on the global scope. Fetch will be used as usual by your code and you'll use <code>fetchMock</code> in your tests</p><p dir=\"auto\">Note: the <code>resetMocks</code> Jest configuration default was changed from <code>false</code> to <code>true</code> in Jest 4.0.1.  Therefore the Jest configuration of setting it to <code>false</code> is required if the <code>setupJest.js</code> is what calls \"enableMocks()\" (i.e. in the above suggested setup) otherwise you will need to call \"enableMocks()\" in a \"beforeEach\" block.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Default not mocked</h4><a id=\"user-content-default-not-mocked\" class=\"anchor-element\" aria-label=\"Permalink: Default not mocked\" href=\"#default-not-mocked\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">If you would like to have the 'fetchMock' available in all tests but not enabled then add <code>fetchMock.dontMock()</code> after the <code>...enableMocks()</code> line in <code>setupJest.js</code>:</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// adds the 'fetchMock' global variable and rewires 'fetch' global to call 'fetchMock' instead of the real implementationrequire('jest-fetch-mock').enableMocks()// changes default behavior of fetchMock to use the real 'fetch' implementation and not mock responsesfetchMock.dontMock()\"><pre><span class=\"pl-c\">// adds the 'fetchMock' global variable and rewires 'fetch' global to call 'fetchMock' instead of the real implementation</span><span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'jest-fetch-mock'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">enableMocks</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-c\">// changes default behavior of fetchMock to use the real 'fetch' implementation and not mock responses</span><span class=\"pl-s1\">fetchMock</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMock</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div><p dir=\"auto\">If you want a single test file to return to the default behavior of mocking all responses, add the following to thetest file:</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"beforeEach(() =&gt; {  // if you have an existing `beforeEach` just add the following line to it  fetchMock.doMock()})\"><pre><span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-c\">// if you have an existing `beforeEach` just add the following line to it</span>  <span class=\"pl-s1\">fetchMock</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMock</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div><p dir=\"auto\">To enable mocking for a specific URL only:</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"beforeEach(() =&gt; {  // if you have an existing `beforeEach` just add the following lines to it  fetchMock.mockIf(/^https?:\\/\\/example.com.*$/, req =&gt; {    if (req.url.endsWith('/path1')) {      return 'some response body'    } else if (req.url.endsWith('/path2')) {      return {        body: 'another response body',        headers: {          'X-Some-Response-Header': 'Some header value'        }      }    } else {      return {        status: 404,        body: 'Not Found'      }    }  })})\"><pre><span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-c\">// if you have an existing `beforeEach` just add the following lines to it</span>  <span class=\"pl-s1\">fetchMock</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockIf</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\"><span class=\"pl-c1\">/</span><span class=\"pl-cce\">^</span>https?:<span class=\"pl-cce\">\\/</span><span class=\"pl-cce\">\\/</span>example.com.<span class=\"pl-c1\">*</span><span class=\"pl-cce\">$</span><span class=\"pl-c1\">/</span></span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">req</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">url</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">endsWith</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/path1'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-k\">return</span> <span class=\"pl-s\">'some response body'</span>    <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">url</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">endsWith</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/path2'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-c1\">body</span>: <span class=\"pl-s\">'another response body'</span><span class=\"pl-kos\">,</span>        <span class=\"pl-c1\">headers</span>: <span class=\"pl-kos\">{</span>          <span class=\"pl-s\">'X-Some-Response-Header'</span>: <span class=\"pl-s\">'Some header value'</span>        <span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">}</span>    <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-c1\">status</span>: <span class=\"pl-c1\">404</span><span class=\"pl-kos\">,</span>        <span class=\"pl-c1\">body</span>: <span class=\"pl-s\">'Not Found'</span>      <span class=\"pl-kos\">}</span>    <span class=\"pl-kos\">}</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div><p dir=\"auto\">If you have changed the default behavior to use the real implementation, you can guarantee the next call to fetchwill be mocked by using the <code>mockOnce</code> function:</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fetchMock.mockOnce('the next call to fetch will always return this as the body')\"><pre><span class=\"pl-s1\">fetchMock</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'the next call to fetch will always return this as the body'</span><span class=\"pl-kos\">)</span></pre></div><p dir=\"auto\">This function behaves exactly like <code>fetchMock.once</code> but guarantees the next call to <code>fetch</code> will be mocked even if thedefault behavior of fetchMock is to use the real implementation. You can safely convert all you <code>fetchMock.once</code> callsto <code>fetchMock.mockOnce</code> without a risk of changing their behavior.</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">To setup for an individual test</h3><a id=\"user-content-to-setup-for-an-individual-test\" class=\"anchor-element\" aria-label=\"Permalink: To setup for an individual test\" href=\"#to-setup-for-an-individual-test\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">For JavaScript add the following line to the start of your test case (before any other requires)</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"require('jest-fetch-mock').enableMocks()\"><pre><span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'jest-fetch-mock'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">enableMocks</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div><p dir=\"auto\">For TypeScript/ES6 add the following lines to the start of your test case (before any other imports)</p><div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { enableFetchMocks } from 'jest-fetch-mock'enableFetchMocks()\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">enableFetchMocks</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'jest-fetch-mock'</span><span class=\"pl-en\">enableFetchMocks</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">TypeScript importing</h4><a id=\"user-content-typescript-importing\" class=\"anchor-element\" aria-label=\"Permalink: TypeScript importing\" href=\"#typescript-importing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">If you are using TypeScript and receive errors about the <code>fetchMock</code> global not existing,add a <code>global.d.ts</code> file to the root of your project (or add the following line to an existing global file):</p><div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import 'jest-fetch-mock'\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s\">'jest-fetch-mock'</span></pre></div><p dir=\"auto\">If you prefer you can also just import the fetchMock in a test case.</p><div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import fetchMock from 'jest-fetch-mock'\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">fetchMock</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'jest-fetch-mock'</span></pre></div><p dir=\"auto\">You may also need to edit your <code>tsconfig.json</code> and add \"dom\" and/or \"es2015\" and/or \"esnext\" to the 'compilerConfig.lib' property</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Using with Create-React-App</h3><a id=\"user-content-using-with-create-react-app\" class=\"anchor-element\" aria-label=\"Permalink: Using with Create-React-App\" href=\"#using-with-create-react-app\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">If you are using <a href=\"https://github.com/facebookincubator/create-react-app\">Create-React-App</a> (CRA), the code for <code>setupJest.js</code> above should be placed into <code>src/setupTests.js</code> in the root of your project. CRA automatically uses this filename by convention in the Jest configuration it generates. Similarly, changing to your <code>package.json</code> is not required as CRA handles this when generating your Jest configuration.</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">For Ejected Create React Apps <em>ONLY</em>:</h3><a id=\"user-content-for-ejected-create-react-apps-only\" class=\"anchor-element\" aria-label=\"Permalink: For Ejected Create React Apps ONLY:\" href=\"#for-ejected-create-react-apps-only\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><blockquote><p dir=\"auto\">Note: Keep in mind that if you decide to \"eject\" before creating src/setupTests.js, the resulting package.json file won't contain any reference to it, so you should manually create the property setupTestFrameworkScriptFile in the configuration for Jest, something like the <a href=\"https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#srcsetuptestsjs-1\">following</a>:</p></blockquote><div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&quot;jest&quot;: {  &quot;setupTestFrameworkScriptFile&quot;: &quot;&lt;rootDir&gt;/src/setupTests.js&quot; }\"><pre><span class=\"pl-ent\">\"jest\"</span>: {  <span class=\"pl-ent\">\"setupTestFrameworkScriptFile\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;rootDir&gt;/src/setupTests.js<span class=\"pl-pds\">\"</span></span> }</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">API</h2><a id=\"user-content-api\" class=\"anchor-element\" aria-label=\"Permalink: API\" href=\"#api\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Mock Responses</h3><a id=\"user-content-mock-responses\" class=\"anchor-element\" aria-label=\"Permalink: Mock Responses\" href=\"#mock-responses\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><ul dir=\"auto\"><li><code>fetch.mockResponse(bodyOrFunction, init): fetch</code> - Mock all fetch calls</li><li><code>fetch.mockResponseOnce(bodyOrFunction, init): fetch</code> - Mock each fetch call independently</li><li><code>fetch.once(bodyOrFunction, init): fetch</code> - Alias for <code>mockResponseOnce(bodyOrFunction, init)</code></li><li><code>fetch.mockResponses(...responses): fetch</code> - Mock multiple fetch calls independently<ul dir=\"auto\"><li>Each argument is an array taking <code>[bodyOrFunction, init]</code></li></ul></li><li><code>fetch.mockReject(errorOrFunction): fetch</code> - Mock all fetch calls, letting them fail directly</li><li><code>fetch.mockRejectOnce(errorOrFunction): fetch</code> - Let the next fetch call fail directly</li><li><code>fetch.mockAbort(): fetch</code> - Causes all fetch calls to reject with an \"Aborted!\" error</li><li><code>fetch.mockAbortOnce(): fetch</code> - Causes the next fetch call to reject with an \"Aborted!\" error</li></ul><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Functions</h3><a id=\"user-content-functions\" class=\"anchor-element\" aria-label=\"Permalink: Functions\" href=\"#functions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Instead of passing body, it is also possible to pass a function that returns a promise.The promise should resolve with a string or an object containing body and init props</p><p dir=\"auto\">i.e:</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fetch.mockResponse(() =&gt; callMyApi().then(res =&gt; ({ body: 'ok' })))// ORfetch.mockResponse(() =&gt; callMyApi().then(res =&gt; 'ok'))\"><pre><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponse</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">callMyApi</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">res</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">body</span>: <span class=\"pl-s\">'ok'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-c\">// OR</span><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponse</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">callMyApi</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">res</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s\">'ok'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span></pre></div><p dir=\"auto\">The function may take an optional \"request\" parameter of type <code>http.Request</code>:</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fetch.mockResponse(req =&gt;  req.url === 'http://myapi/'    ? callMyApi().then(res =&gt; 'ok')    : Promise.reject(new Error('bad url')))\"><pre><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponse</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span> <span class=\"pl-c1\">=&gt;</span>  <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">url</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'http://myapi/'</span>    ? <span class=\"pl-en\">callMyApi</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">res</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s\">'ok'</span><span class=\"pl-kos\">)</span>    : <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reject</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">Error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'bad url'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span></pre></div><p dir=\"auto\">Note: the request \"url\" is parsed and then printed using the equivalent of <code>new URL(input).href</code> so it may not match exactly with the URL's passed to <code>fetch</code> if they are not fully qualified.For example, passing \"<a href=\"http://foo.com\" rel=\"nofollow\">http://foo.com</a>\" to <code>fetch</code> will result in the request URL being \"<a href=\"http://foo.com/\" rel=\"nofollow\">http://foo.com/</a>\" (note the trailing slash).</p><p dir=\"auto\">The same goes for rejects:</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fetch.mockReject(() =&gt;  doMyAsyncJob().then(res =&gt; Promise.reject(res.errorToRaise)))// ORfetch.mockReject(req =&gt;  req.headers.get('content-type') === 'text/plain'    ? Promise.reject('invalid content type')    : doMyAsyncJob().then(res =&gt; Promise.reject(res.errorToRaise)))\"><pre><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockReject</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span>  <span class=\"pl-en\">doMyAsyncJob</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">res</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reject</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">errorToRaise</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-c\">// OR</span><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockReject</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span> <span class=\"pl-c1\">=&gt;</span>  <span class=\"pl-s1\">req</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">headers</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'content-type'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'text/plain'</span>    ? <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reject</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'invalid content type'</span><span class=\"pl-kos\">)</span>    : <span class=\"pl-en\">doMyAsyncJob</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">res</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reject</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">errorToRaise</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Mock utilities</h3><a id=\"user-content-mock-utilities\" class=\"anchor-element\" aria-label=\"Permalink: Mock utilities\" href=\"#mock-utilities\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><ul dir=\"auto\"><li><code>fetch.resetMocks()</code> - Clear previously set mocks so they do not bleed into other mocks</li><li><code>fetch.enableMocks()</code> - Enable fetch mocking by overriding <code>global.fetch</code> and mocking <code>node-fetch</code></li><li><code>fetch.disableMocks()</code> - Disable fetch mocking and restore default implementation of <code>fetch</code> and/or <code>node-fetch</code></li><li><code>fetch.mock</code> - The mock state for your fetch calls. Make assertions on the arguments given to <code>fetch</code> when called by the functions you are testing. For more information check the <a href=\"https://facebook.github.io/jest/docs/en/mock-functions.html#mock-property\" rel=\"nofollow\">Jest docs</a></li></ul><p dir=\"auto\">For information on the arguments body and init can take, you can look at the MDN docs on the Response Constructor function, which <code>jest-fetch-mock</code> uses under the surface.</p><p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Response/Response\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Response/Response</a></p><p dir=\"auto\">Each mocked response or error will return a <a href=\"http://facebook.github.io/jest/docs/mock-function-api.html#content\" rel=\"nofollow\">Mock Function</a>. You can use methods like <code>.toHaveBeenCalledWith</code> to ensure that the mock function was called with specific arguments. For more methods detail, take a look at <a href=\"http://facebook.github.io/jest/docs/expect.html#content\" rel=\"nofollow\">this</a>.</p><div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Examples</h2><a id=\"user-content-examples\" class=\"anchor-element\" aria-label=\"Permalink: Examples\" href=\"#examples\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">In most of the complicated examples below, I am testing my action creators in Redux, but it doesn't have to be used with Redux.</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Simple mock and assert</h3><a id=\"user-content-simple-mock-and-assert\" class=\"anchor-element\" aria-label=\"Permalink: Simple mock and assert\" href=\"#simple-mock-and-assert\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">In this simple example I won't be using any libraries. It is a simple fetch request, in this case to google.com. First we setup the <code>beforeEach</code> callback to reset our mocks. This isn't strictly necessary in this example, but since we will probably be mocking fetch more than once, we need to reset it across our tests to assert on the arguments given to fetch. Make sure the function wrapping your test is marked as async.</p><p dir=\"auto\">Once we've done that we can start to mock our response. We want to give it an object with a <code>data</code> property and a string value of <code>12345</code> and wrap it in <code>JSON.stringify</code> to JSONify it. Here we use <code>mockResponseOnce</code>, but we could also use <code>once</code>, which is an alias for a call to <code>mockResponseOnce</code>.</p><p dir=\"auto\">We then call the function that we want to test with the arguments we want to test with. We use <code>await</code> to wait until the response resolves, and then assert we have got the correct data back.</p><p dir=\"auto\">Finally we can assert on the <code>.mock</code> state that Jest provides for us to test what arguments were given to fetch and how many times it was called</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"//api.jsexport function APIRequest(who) {  if (who === 'google') {    return fetch('https://google.com').then(res =&gt; res.json())  } else {    return 'no argument provided'  }}\"><pre><span class=\"pl-c\">//api.js</span><span class=\"pl-k\">export</span> <span class=\"pl-k\">function</span> <span class=\"pl-v\">APIRequest</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">who</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">who</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'google'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-k\">return</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://google.com'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">res</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">json</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-k\">return</span> <span class=\"pl-s\">'no argument provided'</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span></pre></div><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"//api.test.jsimport { APIRequest } from './api'describe('testing api', () =&gt; {  beforeEach(() =&gt; {    fetch.resetMocks()  })  it('calls google and returns data to me', async () =&gt; {    fetch.mockResponseOnce(JSON.stringify({ data: '12345' }))    //assert on the response    const res = await APIRequest('google')    expect(res.data).toEqual('12345')    //assert on the times called and arguments given to fetch    expect(fetch.mock.calls.length).toEqual(1)    expect(fetch.mock.calls[0][0]).toEqual('https://google.com')  })})\"><pre><span class=\"pl-c\">//api.test.js</span><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">APIRequest</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./api'</span><span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'testing api'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resetMocks</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'calls google and returns data to me'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponseOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">data</span>: <span class=\"pl-s\">'12345'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>    <span class=\"pl-c\">//assert on the response</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">res</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-v\">APIRequest</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'google'</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">data</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'12345'</span><span class=\"pl-kos\">)</span>    <span class=\"pl-c\">//assert on the times called and arguments given to fetch</span>    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mock</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">calls</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mock</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">calls</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://google.com'</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Mocking all fetches</h3><a id=\"user-content-mocking-all-fetches\" class=\"anchor-element\" aria-label=\"Permalink: Mocking all fetches\" href=\"#mocking-all-fetches\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">In this example I am mocking just one fetch call. Any additional fetch calls in the same function will also have the same mock response. For more complicated functions with multiple fetch calls, you can check out example 3.</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import configureMockStore from 'redux-mock-store' // mock storeimport thunk from 'redux-thunk'const middlewares = [thunk]const mockStore = configureMockStore(middlewares)import { getAccessToken } from './accessToken'describe('Access token action creators', () =&gt; {  it('dispatches the correct actions on successful fetch request', () =&gt; {    fetch.mockResponse(JSON.stringify({ access_token: '12345' }))    const expectedActions = [      { type: 'SET_ACCESS_TOKEN', token: { access_token: '12345' } }    ]    const store = mockStore({ config: { token: '' } })    return (      store        .dispatch(getAccessToken())        //getAccessToken contains the fetch call        .then(() =&gt; {          // return of async actions          expect(store.getActions()).toEqual(expectedActions)        })    )  })})\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">configureMockStore</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'redux-mock-store'</span> <span class=\"pl-c\">// mock store</span><span class=\"pl-k\">import</span> <span class=\"pl-s1\">thunk</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'redux-thunk'</span><span class=\"pl-k\">const</span> <span class=\"pl-s1\">middlewares</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">thunk</span><span class=\"pl-kos\">]</span><span class=\"pl-k\">const</span> <span class=\"pl-s1\">mockStore</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">configureMockStore</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">middlewares</span><span class=\"pl-kos\">)</span><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">getAccessToken</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./accessToken'</span><span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Access token action creators'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dispatches the correct actions on successful fetch request'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponse</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">access_token</span>: <span class=\"pl-s\">'12345'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">expectedActions</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span>      <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'SET_ACCESS_TOKEN'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">token</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">access_token</span>: <span class=\"pl-s\">'12345'</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span>    <span class=\"pl-kos\">]</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">store</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">mockStore</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">config</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">token</span>: <span class=\"pl-s\">''</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>      <span class=\"pl-s1\">store</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">dispatch</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">getAccessToken</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>        <span class=\"pl-c\">//getAccessToken contains the fetch call</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>          <span class=\"pl-c\">// return of async actions</span>          <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">store</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getActions</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">expectedActions</span><span class=\"pl-kos\">)</span>        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Mocking a failed fetch</h3><a id=\"user-content-mocking-a-failed-fetch\" class=\"anchor-element\" aria-label=\"Permalink: Mocking a failed fetch\" href=\"#mocking-a-failed-fetch\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">In this example I am mocking just one fetch call but this time using the <code>mockReject</code> function to simulate a failed request. Any additional fetch calls in the same function will also have the same mock response. For more complicated functions with multiple fetch calls, you can check out example 3.</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import configureMockStore from 'redux-mock-store' // mock storeimport thunk from 'redux-thunk'const middlewares = [thunk]const mockStore = configureMockStore(middlewares)import { getAccessToken } from './accessToken'describe('Access token action creators', () =&gt; {  it('dispatches the correct actions on a failed fetch request', () =&gt; {    fetch.mockReject(new Error('fake error message'))    const expectedActions = [      { type: 'SET_ACCESS_TOKEN_FAILED', error: { status: 503 } }    ]    const store = mockStore({ config: { token: '' } })    return (      store        .dispatch(getAccessToken())        //getAccessToken contains the fetch call        .then(() =&gt; {          // return of async actions          expect(store.getActions()).toEqual(expectedActions)        })    )  })})\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">configureMockStore</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'redux-mock-store'</span> <span class=\"pl-c\">// mock store</span><span class=\"pl-k\">import</span> <span class=\"pl-s1\">thunk</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'redux-thunk'</span><span class=\"pl-k\">const</span> <span class=\"pl-s1\">middlewares</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">thunk</span><span class=\"pl-kos\">]</span><span class=\"pl-k\">const</span> <span class=\"pl-s1\">mockStore</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">configureMockStore</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">middlewares</span><span class=\"pl-kos\">)</span><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">getAccessToken</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./accessToken'</span><span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Access token action creators'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dispatches the correct actions on a failed fetch request'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockReject</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">Error</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'fake error message'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">expectedActions</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span>      <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'SET_ACCESS_TOKEN_FAILED'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">error</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-c1\">503</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span>    <span class=\"pl-kos\">]</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">store</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">mockStore</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">config</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">token</span>: <span class=\"pl-s\">''</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>      <span class=\"pl-s1\">store</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">dispatch</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">getAccessToken</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>        <span class=\"pl-c\">//getAccessToken contains the fetch call</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>          <span class=\"pl-c\">// return of async actions</span>          <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">store</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getActions</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">expectedActions</span><span class=\"pl-kos\">)</span>        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Mocking aborted fetches</h3><a id=\"user-content-mocking-aborted-fetches\" class=\"anchor-element\" aria-label=\"Permalink: Mocking aborted fetches\" href=\"#mocking-aborted-fetches\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Fetches can be mocked to act as if they were aborted during the request. This can be done in 4 ways:</p><ol dir=\"auto\"><li>Using `fetch.mockAborted()`</li><li>Using `fetch.mockAbortedOnce()`</li><li>Passing a request (or request init) with a 'signal' to fetch that has been aborted</li><li>Passing a request (or request init) with a 'signal' to fetch and a async function to `fetch.mockResponse` or `fetch.mockResponseOnce` that causes the signal to abort before returning the response</li></ol><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"describe('Mocking aborts', () =&gt; {  beforeEach(() =&gt; {    fetch.resetMocks()    fetch.doMock()    jest.useFakeTimers()  })  afterEach(() =&gt; {    jest.useRealTimers()  })  it('rejects with an Aborted! Error', () =&gt; {    fetch.mockAbort()    expect(fetch('/')).rejects.toThrow('Aborted!')  })  it('rejects with an Aborted! Error once then mocks with empty response', async () =&gt; {    fetch.mockAbortOnce()    await expect(fetch('/')).rejects.toThrow('Aborted!')    await expect(request()).resolves.toEqual('')  })  it('throws when passed an already aborted abort signal', () =&gt; {    const c = new AbortController()    c.abort()    expect(() =&gt; fetch('/', { signal: c.signal })).toThrow('Aborted!')  })  it('rejects when aborted before resolved', async () =&gt; {    const c = new AbortController()    fetch.mockResponse(async () =&gt; {      jest.advanceTimersByTime(60)      return ''    })    setTimeout(() =&gt; c.abort(), 50)    await expect(fetch('/', { signal: c.signal })).rejects.toThrow('Aborted!')  })})\"><pre><span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Mocking aborts'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resetMocks</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMock</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-s1\">jest</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">useFakeTimers</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">afterEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">jest</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">useRealTimers</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'rejects with an Aborted! Error'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockAbort</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">rejects</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toThrow</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Aborted!'</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'rejects with an Aborted! Error once then mocks with empty response'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockAbortOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-k\">await</span> <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">rejects</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toThrow</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Aborted!'</span><span class=\"pl-kos\">)</span>    <span class=\"pl-k\">await</span> <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">request</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolves</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'throws when passed an already aborted abort signal'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">c</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">AbortController</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-s1\">c</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">abort</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">signal</span>: <span class=\"pl-s1\">c</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">signal</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toThrow</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Aborted!'</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'rejects when aborted before resolved'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">c</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">AbortController</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponse</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">jest</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">advanceTimersByTime</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">60</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">return</span> <span class=\"pl-s\">''</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">setTimeout</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">c</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">abort</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">50</span><span class=\"pl-kos\">)</span>    <span class=\"pl-k\">await</span> <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">signal</span>: <span class=\"pl-s1\">c</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">signal</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">rejects</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toThrow</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Aborted!'</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Mocking a redirected response</h3><a id=\"user-content-mocking-a-redirected-response\" class=\"anchor-element\" aria-label=\"Permalink: Mocking a redirected response\" href=\"#mocking-a-redirected-response\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Set the counter option &gt;= 1 in the response init object to mock a redirected response <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Response/redirected\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Response/redirected</a>. Note, this will only work in Node.js as it's a feature of node fetch's response class <a href=\"https://github.com/node-fetch/node-fetch/blob/master/src/response.js#L39\">https://github.com/node-fetch/node-fetch/blob/master/src/response.js#L39</a>.</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fetchMock.mockResponse(&quot;&lt;main&gt;&lt;/main&gt;&quot;, {  counter: 1,  status: 200,  statusText: &quot;ok&quot;,});\"><pre><span class=\"pl-s1\">fetchMock</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponse</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"&lt;main&gt;&lt;/main&gt;\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-c1\">counter</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span>  <span class=\"pl-c1\">status</span>: <span class=\"pl-c1\">200</span><span class=\"pl-kos\">,</span>  <span class=\"pl-c1\">statusText</span>: <span class=\"pl-s\">\"ok\"</span><span class=\"pl-kos\">,</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Mocking multiple fetches with different responses</h3><a id=\"user-content-mocking-multiple-fetches-with-different-responses\" class=\"anchor-element\" aria-label=\"Permalink: Mocking multiple fetches with different responses\" href=\"#mocking-multiple-fetches-with-different-responses\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">In this next example, the store does not yet have a token, so we make a request to get an access token first. This means that we need to mock two different responses, one for each of the fetches. Here we can use <code>fetch.mockResponseOnce</code> or <code>fetch.once</code> to mock the response only once and call it twice. Because we return the mocked function, we can chain this jQuery style. It internally uses Jest's <code>mockImplementationOnce</code>. You can read more about it on the <a href=\"https://facebook.github.io/jest/docs/mock-functions.html#content\" rel=\"nofollow\">Jest documentation</a></p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import configureMockStore from 'redux-mock-store'import thunk from 'redux-thunk'const middlewares = [thunk]const mockStore = configureMockStore(middlewares)import { getAnimeDetails } from './animeDetails'describe('Anime details action creators', () =&gt; {  it('dispatches requests for an access token before requesting for animeDetails', () =&gt; {    fetch      .once(JSON.stringify({ access_token: '12345' }))      .once(JSON.stringify({ name: 'naruto' }))    const expectedActions = [      { type: 'SET_ACCESS_TOKEN', token: { access_token: '12345' } },      { type: 'SET_ANIME_DETAILS', animeDetails: { name: 'naruto' } }    ]    const store = mockStore({ config: { token: null } })    return (      store        .dispatch(getAnimeDetails('21049'))        //getAnimeDetails contains the 2 fetch calls        .then(() =&gt; {          // return of async actions          expect(store.getActions()).toEqual(expectedActions)        })    )  })})\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">configureMockStore</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'redux-mock-store'</span><span class=\"pl-k\">import</span> <span class=\"pl-s1\">thunk</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'redux-thunk'</span><span class=\"pl-k\">const</span> <span class=\"pl-s1\">middlewares</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">thunk</span><span class=\"pl-kos\">]</span><span class=\"pl-k\">const</span> <span class=\"pl-s1\">mockStore</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">configureMockStore</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">middlewares</span><span class=\"pl-kos\">)</span><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">getAnimeDetails</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./animeDetails'</span><span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Anime details action creators'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dispatches requests for an access token before requesting for animeDetails'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span>      <span class=\"pl-kos\">.</span><span class=\"pl-en\">once</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">access_token</span>: <span class=\"pl-s\">'12345'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>      <span class=\"pl-kos\">.</span><span class=\"pl-en\">once</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'naruto'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">expectedActions</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span>      <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'SET_ACCESS_TOKEN'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">token</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">access_token</span>: <span class=\"pl-s\">'12345'</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>      <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'SET_ANIME_DETAILS'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">animeDetails</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'naruto'</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span>    <span class=\"pl-kos\">]</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">store</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">mockStore</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">config</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">token</span>: <span class=\"pl-c1\">null</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>      <span class=\"pl-s1\">store</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">dispatch</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">getAnimeDetails</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'21049'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>        <span class=\"pl-c\">//getAnimeDetails contains the 2 fetch calls</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>          <span class=\"pl-c\">// return of async actions</span>          <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">store</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getActions</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">expectedActions</span><span class=\"pl-kos\">)</span>        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Mocking multiple fetches with <code>fetch.mockResponses</code></h3><a id=\"user-content-mocking-multiple-fetches-with-fetchmockresponses\" class=\"anchor-element\" aria-label=\"Permalink: Mocking multiple fetches with fetch.mockResponses\" href=\"#mocking-multiple-fetches-with-fetchmockresponses\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\"><code>fetch.mockResponses</code> takes as many arguments as you give it, all of which are arrays representing each Response Object. It will then call the <code>mockImplementationOnce</code> for each response object you give it. This reduces the amount of boilerplate code you need to write. An alternative is to use <code>.once</code> and chain it multiple times if you don't like wrapping each response arguments in a tuple/array.</p><p dir=\"auto\">In this example our actionCreator calls <code>fetch</code> 4 times, once for each season of the year and then concatenates the results into one final array. You'd have to write <code>fetch.mockResponseOnce</code> 4 times to achieve the same thing:</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"describe('getYear action creator', () =&gt; {  it('dispatches the correct actions on successful getSeason fetch request', () =&gt; {    fetch.mockResponses(      [        JSON.stringify([{ name: 'naruto', average_score: 79 }]),        { status: 200 }      ],      [        JSON.stringify([{ name: 'bleach', average_score: 68 }]),        { status: 200 }      ],      [        JSON.stringify([{ name: 'one piece', average_score: 80 }]),        { status: 200 }      ],      [        JSON.stringify([{ name: 'shingeki', average_score: 91 }]),        { status: 200 }      ]    )    const expectedActions = [      {        type: 'FETCH_ANIMELIST_REQUEST'      },      {        type: 'SET_YEAR',        payload: {          animes: [            { name: 'naruto', average_score: 7.9 },            { name: 'bleach', average_score: 6.8 },            { name: 'one piece', average_score: 8 },            { name: 'shingeki', average_score: 9.1 }          ],          year: 2016        }      },      {        type: 'FETCH_ANIMELIST_COMPLETE'      }    ]    const store = mockStore({      config: {        token: { access_token: 'wtw45CmyEuh4P621IDVxWkgVr5QwTg3wXEc4Z7Cv' }      },      years: []    })    return (      store        .dispatch(getYear(2016))        //This calls fetch 4 times, once for each season        .then(() =&gt; {          // return of async actions          expect(store.getActions()).toEqual(expectedActions)        })    )  })})\"><pre><span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'getYear action creator'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dispatches the correct actions on successful getSeason fetch request'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponses</span><span class=\"pl-kos\">(</span>      <span class=\"pl-kos\">[</span>        <span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'naruto'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">79</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>        <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-c1\">200</span> <span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>      <span class=\"pl-kos\">[</span>        <span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'bleach'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">68</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>        <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-c1\">200</span> <span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>      <span class=\"pl-kos\">[</span>        <span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'one piece'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">80</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>        <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-c1\">200</span> <span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>      <span class=\"pl-kos\">[</span>        <span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'shingeki'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">91</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>        <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-c1\">200</span> <span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">]</span>    <span class=\"pl-kos\">)</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">expectedActions</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span>      <span class=\"pl-kos\">{</span>        <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'FETCH_ANIMELIST_REQUEST'</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>      <span class=\"pl-kos\">{</span>        <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'SET_YEAR'</span><span class=\"pl-kos\">,</span>        <span class=\"pl-c1\">payload</span>: <span class=\"pl-kos\">{</span>          <span class=\"pl-c1\">animes</span>: <span class=\"pl-kos\">[</span>            <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'naruto'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">7.9</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>            <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'bleach'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">6.8</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>            <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'one piece'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">8</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>            <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'shingeki'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">9.1</span> <span class=\"pl-kos\">}</span>          <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>          <span class=\"pl-c1\">year</span>: <span class=\"pl-c1\">2016</span>        <span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>      <span class=\"pl-kos\">{</span>        <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'FETCH_ANIMELIST_COMPLETE'</span>      <span class=\"pl-kos\">}</span>    <span class=\"pl-kos\">]</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">store</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">mockStore</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>      <span class=\"pl-c1\">config</span>: <span class=\"pl-kos\">{</span>        <span class=\"pl-c1\">token</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">access_token</span>: <span class=\"pl-s\">'wtw45CmyEuh4P621IDVxWkgVr5QwTg3wXEc4Z7Cv'</span> <span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>      <span class=\"pl-c1\">years</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span>      <span class=\"pl-s1\">store</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">dispatch</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">getYear</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2016</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>        <span class=\"pl-c\">//This calls fetch 4 times, once for each season</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>          <span class=\"pl-c\">// return of async actions</span>          <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">store</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getActions</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">expectedActions</span><span class=\"pl-kos\">)</span>        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Reset mocks between tests with <code>fetch.resetMocks</code></h3><a id=\"user-content-reset-mocks-between-tests-with-fetchresetmocks\" class=\"anchor-element\" aria-label=\"Permalink: Reset mocks between tests with fetch.resetMocks\" href=\"#reset-mocks-between-tests-with-fetchresetmocks\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\"><code>fetch.resetMocks</code> resets the <code>fetch</code> mock to give fresh mock data in between tests. It only resets the <code>fetch</code> calls as to not disturb any other mocked functionality.</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"describe('getYear action creator', () =&gt; {  beforeEach(() =&gt; {      fetch.resetMocks();  });  it('dispatches the correct actions on successful getSeason fetch request', () =&gt; {    fetch.mockResponses(      [        JSON.stringify([ {name: 'naruto', average_score: 79} ]), { status: 200}      ],      [        JSON.stringify([ {name: 'bleach', average_score: 68} ]), { status: 200}      ]    )    const expectedActions = [      {        type: 'FETCH_ANIMELIST_REQUEST'      },      {        type: 'SET_YEAR',        payload: {          animes: [            {name: 'naruto', average_score: 7.9},            {name: 'bleach', average_score: 6.8}          ],          year: 2016,        }      },      {        type: 'FETCH_ANIMELIST_COMPLETE'      }    ]    const store = mockStore({      config: { token: { access_token: 'wtw45CmyEuh4P621IDVxWkgVr5QwTg3wXEc4Z7Cv' }},      years: []    })    return store.dispatch(getYear(2016))      //This calls fetch 2 times, once for each season      .then(() =&gt; { // return of async actions        expect(store.getActions()).toEqual(expectedActions)      })  });  it('dispatches the correct actions on successful getSeason fetch request', () =&gt; {    fetch.mockResponses(      [        JSON.stringify([ {name: 'bleach', average_score: 68} ]), { status: 200}      ],      [        JSON.stringify([ {name: 'one piece', average_score: 80} ]), { status: 200}      ],      [        JSON.stringify([ {name: 'shingeki', average_score: 91} ]), { status: 200}      ]    )    const expectedActions = [      {        type: 'FETCH_ANIMELIST_REQUEST'      },      {        type: 'SET_YEAR',        payload: {          animes: [            {name: 'bleach', average_score: 6.8},            {name: 'one piece', average_score: 8},            {name: 'shingeki', average_score: 9.1}          ],          year: 2016,        }      },      {        type: 'FETCH_ANIMELIST_COMPLETE'      }    ]    const store = mockStore({      config: { token: { access_token: 'wtw45CmyEuh4P621IDVxWkgVr5QwTg3wXEc4Z7Cv' }},      years: []    })    return store.dispatch(getYear(2016))      //This calls fetch 3 times, once for each season      .then(() =&gt; { // return of async actions        expect(store.getActions()).toEqual(expectedActions)      })      ,  })})\"><pre><span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'getYear action creator'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resetMocks</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dispatches the correct actions on successful getSeason fetch request'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponses</span><span class=\"pl-kos\">(</span>      <span class=\"pl-kos\">[</span>        <span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'naruto'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">79</span><span class=\"pl-kos\">}</span> <span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-c1\">200</span><span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>      <span class=\"pl-kos\">[</span>        <span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'bleach'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">68</span><span class=\"pl-kos\">}</span> <span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-c1\">200</span><span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">]</span>    <span class=\"pl-kos\">)</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">expectedActions</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span>      <span class=\"pl-kos\">{</span>        <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'FETCH_ANIMELIST_REQUEST'</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>      <span class=\"pl-kos\">{</span>        <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'SET_YEAR'</span><span class=\"pl-kos\">,</span>        <span class=\"pl-c1\">payload</span>: <span class=\"pl-kos\">{</span>          <span class=\"pl-c1\">animes</span>: <span class=\"pl-kos\">[</span>            <span class=\"pl-kos\">{</span><span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'naruto'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">7.9</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>            <span class=\"pl-kos\">{</span><span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'bleach'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">6.8</span><span class=\"pl-kos\">}</span>          <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>          <span class=\"pl-c1\">year</span>: <span class=\"pl-c1\">2016</span><span class=\"pl-kos\">,</span>        <span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>      <span class=\"pl-kos\">{</span>        <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'FETCH_ANIMELIST_COMPLETE'</span>      <span class=\"pl-kos\">}</span>    <span class=\"pl-kos\">]</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">store</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">mockStore</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>      <span class=\"pl-c1\">config</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">token</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">access_token</span>: <span class=\"pl-s\">'wtw45CmyEuh4P621IDVxWkgVr5QwTg3wXEc4Z7Cv'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>      <span class=\"pl-c1\">years</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">store</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dispatch</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">getYear</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2016</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>      <span class=\"pl-c\">//This calls fetch 2 times, once for each season</span>      <span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">// return of async actions</span>        <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">store</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getActions</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">expectedActions</span><span class=\"pl-kos\">)</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dispatches the correct actions on successful getSeason fetch request'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponses</span><span class=\"pl-kos\">(</span>      <span class=\"pl-kos\">[</span>        <span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'bleach'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">68</span><span class=\"pl-kos\">}</span> <span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-c1\">200</span><span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>      <span class=\"pl-kos\">[</span>        <span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'one piece'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">80</span><span class=\"pl-kos\">}</span> <span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-c1\">200</span><span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>      <span class=\"pl-kos\">[</span>        <span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'shingeki'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">91</span><span class=\"pl-kos\">}</span> <span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">status</span>: <span class=\"pl-c1\">200</span><span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">]</span>    <span class=\"pl-kos\">)</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">expectedActions</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span>      <span class=\"pl-kos\">{</span>        <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'FETCH_ANIMELIST_REQUEST'</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>      <span class=\"pl-kos\">{</span>        <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'SET_YEAR'</span><span class=\"pl-kos\">,</span>        <span class=\"pl-c1\">payload</span>: <span class=\"pl-kos\">{</span>          <span class=\"pl-c1\">animes</span>: <span class=\"pl-kos\">[</span>            <span class=\"pl-kos\">{</span><span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'bleach'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">6.8</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>            <span class=\"pl-kos\">{</span><span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'one piece'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">8</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>            <span class=\"pl-kos\">{</span><span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'shingeki'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">average_score</span>: <span class=\"pl-c1\">9.1</span><span class=\"pl-kos\">}</span>          <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>          <span class=\"pl-c1\">year</span>: <span class=\"pl-c1\">2016</span><span class=\"pl-kos\">,</span>        <span class=\"pl-kos\">}</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>      <span class=\"pl-kos\">{</span>        <span class=\"pl-c1\">type</span>: <span class=\"pl-s\">'FETCH_ANIMELIST_COMPLETE'</span>      <span class=\"pl-kos\">}</span>    <span class=\"pl-kos\">]</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">store</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">mockStore</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>      <span class=\"pl-c1\">config</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">token</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">access_token</span>: <span class=\"pl-s\">'wtw45CmyEuh4P621IDVxWkgVr5QwTg3wXEc4Z7Cv'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>      <span class=\"pl-c1\">years</span>: <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">store</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dispatch</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">getYear</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2016</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>      <span class=\"pl-c\">//This calls fetch 3 times, once for each season</span>      <span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">// return of async actions</span>        <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">store</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getActions</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">expectedActions</span><span class=\"pl-kos\">)</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>      <span class=\"pl-kos\">,</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Using <code>fetch.mock</code> to inspect the mock state of each fetch call</h3><a id=\"user-content-using-fetchmock-to-inspect-the-mock-state-of-each-fetch-call\" class=\"anchor-element\" aria-label=\"Permalink: Using fetch.mock to inspect the mock state of each fetch call\" href=\"#using-fetchmock-to-inspect-the-mock-state-of-each-fetch-call\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\"><code>fetch.mock</code> by default uses <a href=\"https://facebook.github.io/jest/docs/en/mock-functions.html#mock-property\" rel=\"nofollow\">Jest's mocking functions</a>. Therefore you can make assertions on the mock state. In this example we have an arbitrary function that makes a different fetch request based on the argument you pass to it. In our test, we run Jest's <code>beforeEach()</code> and make sure to reset our mock before each <code>it()</code> block as we will make assertions on the arguments we are passing to <code>fetch()</code>. The most uses property is the <code>fetch.mock.calls</code> array. It can give you information on each call, and their arguments which you can use for your <code>expect()</code> calls. Jest also comes with some nice aliases for the most used ones.</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// api.jsimport 'cross-fetch'export function APIRequest(who) {  if (who === 'facebook') {    return fetch('https://facebook.com')  } else if (who === 'twitter') {    return fetch('https://twitter.com')  } else {    return fetch('https://google.com')  }}\"><pre><span class=\"pl-c\">// api.js</span><span class=\"pl-k\">import</span> <span class=\"pl-s\">'cross-fetch'</span><span class=\"pl-k\">export</span> <span class=\"pl-k\">function</span> <span class=\"pl-v\">APIRequest</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">who</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">who</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'facebook'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-k\">return</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://facebook.com'</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">who</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'twitter'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-k\">return</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://twitter.com'</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-k\">return</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://google.com'</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span></pre></div><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// api.test.jsimport { APIRequest } from './api'describe('testing api', () =&gt; {  beforeEach(() =&gt; {    fetch.resetMocks()  })  it('calls google by default', () =&gt; {    fetch.mockResponse(JSON.stringify({ secret_data: '12345' }))    APIRequest()    expect(fetch.mock.calls.length).toEqual(1)    expect(fetch.mock.calls[0][0]).toEqual('https://google.com')  })  it('calls facebook', () =&gt; {    fetch.mockResponse(JSON.stringify({ secret_data: '12345' }))    APIRequest('facebook')    expect(fetch.mock.calls.length).toEqual(2)    expect(fetch.mock.calls[0][0]).toEqual(      'https://facebook.com/someOtherResource'    )    expect(fetch.mock.calls[1][0]).toEqual('https://facebook.com')  })  it('calls twitter', () =&gt; {    fetch.mockResponse(JSON.stringify({ secret_data: '12345' }))    APIRequest('twitter')    expect(fetch).toBeCalled() // alias for expect(fetch.mock.calls.length).toEqual(1);    expect(fetch).toBeCalledWith('https://twitter.com') // alias for expect(fetch.mock.calls[0][0]).toEqual();  })})\"><pre><span class=\"pl-c\">// api.test.js</span><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">APIRequest</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./api'</span><span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'testing api'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resetMocks</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'calls google by default'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponse</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">secret_data</span>: <span class=\"pl-s\">'12345'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>    <span class=\"pl-v\">APIRequest</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mock</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">calls</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mock</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">calls</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://google.com'</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'calls facebook'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponse</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">secret_data</span>: <span class=\"pl-s\">'12345'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>    <span class=\"pl-v\">APIRequest</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'facebook'</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mock</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">calls</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mock</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">calls</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span>      <span class=\"pl-s\">'https://facebook.com/someOtherResource'</span>    <span class=\"pl-kos\">)</span>    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mock</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">calls</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://facebook.com'</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'calls twitter'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponse</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">JSON</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">stringify</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">secret_data</span>: <span class=\"pl-s\">'12345'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>    <span class=\"pl-v\">APIRequest</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'twitter'</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toBeCalled</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// alias for expect(fetch.mock.calls.length).toEqual(1);</span>    <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toBeCalledWith</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://twitter.com'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// alias for expect(fetch.mock.calls[0][0]).toEqual();</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Using functions to mock slow servers</h3><a id=\"user-content-using-functions-to-mock-slow-servers\" class=\"anchor-element\" aria-label=\"Permalink: Using functions to mock slow servers\" href=\"#using-functions-to-mock-slow-servers\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">By default you will want to have your fetch mock return immediately. However if you have some custom logic that needs to tests for slower servers, you can do this by passing it a function and returning a promise when your function resolves</p><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// api.test.jsimport { request } from './api'describe('testing timeouts', () =&gt; {  it('resolves with function and timeout', async () =&gt; {    fetch.mockResponseOnce(      () =&gt;        new Promise(resolve =&gt; setTimeout(() =&gt; resolve({ body: 'ok' }), 100))    )    try {      const response = await request()      expect(response).toEqual('ok')    } catch (e) {      throw e    }  })})\"><pre><span class=\"pl-c\">// api.test.js</span><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">request</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./api'</span><span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'testing timeouts'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'resolves with function and timeout'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponseOnce</span><span class=\"pl-kos\">(</span>      <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span>        <span class=\"pl-k\">new</span> <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">resolve</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">setTimeout</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">body</span>: <span class=\"pl-s\">'ok'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">100</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">)</span>    <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-k\">const</span> <span class=\"pl-s1\">response</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">request</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">response</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'ok'</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-k\">throw</span> <span class=\"pl-s1\">e</span>    <span class=\"pl-kos\">}</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Conditional Mocking</h3><a id=\"user-content-conditional-mocking\" class=\"anchor-element\" aria-label=\"Permalink: Conditional Mocking\" href=\"#conditional-mocking\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">In some test scenarios, you may want to temporarily disable (or enable) mocking for all requests or the next (or a certain number of) request(s).You may want to only mock fetch requests to some URLs that match a given request path while in others you may want to mockall requests except those matching a given request path. You may even want to conditionally mock based on request headers.</p><p dir=\"auto\">The conditional mock functions cause <code>jest-fetch-mock</code> to pass fetches through to the concrete fetch implementation conditionally.Calling <code>fetch.dontMock</code>, <code>fetch.doMock</code>, <code>fetch.doMockIf</code> or <code>fetch.dontMockIf</code> overrides the default behaviorof mocking/not mocking all requests. <code>fetch.dontMockOnce</code>, <code>fetch.doMockOnce</code>, <code>fetch.doMockOnceIf</code> and <code>fetch.dontMockOnceIf</code> only overrides the behaviorfor the next call to <code>fetch</code>, then returns to the default behavior (either mocking all requests or mocking the requests based on the last call to<code>fetch.dontMock</code>, <code>fetch.doMock</code>, <code>fetch.doMockIf</code> and <code>fetch.dontMockIf</code>).</p><p dir=\"auto\">Calling <code>fetch.resetMocks()</code> will return to the default behavior of mocking all fetches with a text response of empty string.</p><ul dir=\"auto\"><li><code>fetch.dontMock()</code> - Change the default behavior to not mock any fetches until <code>fetch.resetMocks()</code> or <code>fetch.doMock()</code> is called</li><li><code>fetch.doMock(bodyOrFunction?, responseInit?)</code> - Reverses <code>fetch.dontMock()</code>. This is the default state after <code>fetch.resetMocks()</code></li><li><code>fetch.dontMockOnce()</code> - For the next fetch, do not mock then return to the default behavior for subsequent fetches. Can be chained.</li><li><code>fetch.doMockOnce(bodyOrFunction?, responseInit?)</code> or <code>fetch.mockOnce</code> - For the next fetch, mock the response then return to the default behavior for subsequent fetches. Can be chained.</li><li><code>fetch.doMockIf(urlOrPredicate, bodyOrFunction?, responseInit?):fetch</code> or <code>fetch.mockIf</code> - causes all fetches to be not be mocked unless they match the given string/RegExp/predicate(i.e. \"only mock 'fetch' if the request is for the given URL otherwise, use the real fetch implementation\")</li><li><code>fetch.dontMockIf(urlOrPredicate, bodyOrFunction?, responseInit?):fetch</code> - causes all fetches to be mocked unless they match the given string/RegExp/predicate(i.e. \"don't mock 'fetch' if the request is for the given URL, otherwise mock the request\")</li><li><code>fetch.doMockOnceIf(urlOrPredicate, bodyOrFunction?, responseInit?):fetch</code> or <code>fetch.mockOnceIf</code> - causes the next fetch to be mocked if it matches the given string/RegExp/predicate. Can be chained.(i.e. \"only mock 'fetch' if the next request is for the given URL otherwise, use the default behavior\")</li><li><code>fetch.dontMockOnceIf(urlOrPredicate):fetch</code> - causes the next fetch to be not be mocked if it matches the given string/RegExp/predicate. Can be chained.(i.e. \"don't mock 'fetch' if the next request is for the given URL, otherwise use the default behavior\")</li><li><code>fetch.isMocking(input, init):boolean</code> - test utility function to see if the given url/request would be mocked.This is not a read only operation and any \"MockOnce\" will evaluate (and return to the default behavior)</li></ul><p dir=\"auto\">For convenience, all the conditional mocking functions also accept optional parameters after the 1st parameter that call<code>mockResponse</code> or <code>mockResponseOnce</code> respectively. This allows you to conditionally mock a response in a single call.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Conditional Mocking examples</h4><a id=\"user-content-conditional-mocking-examples\" class=\"anchor-element\" aria-label=\"Permalink: Conditional Mocking examples\" href=\"#conditional-mocking-examples\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"describe('conditional mocking', () =&gt; {  const realResponse = 'REAL FETCH RESPONSE'  const mockedDefaultResponse = 'MOCKED DEFAULT RESPONSE'  const testUrl = defaultRequestUri  let crossFetchSpy  beforeEach(() =&gt; {    fetch.resetMocks()    fetch.mockResponse(mockedDefaultResponse)    crossFetchSpy = jest      .spyOn(require('cross-fetch'), 'fetch')      .mockImplementation(async () =&gt;        Promise.resolve(new Response(realResponse))      )  })  afterEach(() =&gt; {    crossFetchSpy.mockRestore()  })  const expectMocked = async (uri, response = mockedDefaultResponse) =&gt; {    return expect(request(uri)).resolves.toEqual(response)  }  const expectUnmocked = async uri =&gt; {    return expect(request(uri)).resolves.toEqual(realResponse)  }  describe('once', () =&gt; {    it('default', async () =&gt; {      const otherResponse = 'other response'      fetch.once(otherResponse)      await expectMocked(defaultRequestUri, otherResponse)      await expectMocked()    })    it('dont mock once then mock twice', async () =&gt; {      const otherResponse = 'other response'      fetch        .dontMockOnce()        .once(otherResponse)        .once(otherResponse)      await expectUnmocked()      await expectMocked(defaultRequestUri, otherResponse)      await expectMocked()    })  })  describe('doMockIf', () =&gt; {    it(&quot;doesn't mock normally&quot;, async () =&gt; {      fetch.doMockIf('http://foo')      await expectUnmocked()      await expectUnmocked()    })    it('mocks when matches string', async () =&gt; {      fetch.doMockIf(testUrl)      await expectMocked()      await expectMocked()    })    it('mocks when matches regex', async () =&gt; {      fetch.doMockIf(new RegExp(testUrl))      await expectMocked()      await expectMocked()    })    it('mocks when matches predicate', async () =&gt; {      fetch.doMockIf(input =&gt; input.url === testUrl)      await expectMocked()      await expectMocked()    })  })  describe('dontMockIf', () =&gt; {    it('mocks normally', async () =&gt; {      fetch.dontMockIf('http://foo')      await expectMocked()      await expectMocked()    })    it('doesnt mock when matches string', async () =&gt; {      fetch.dontMockIf(testUrl)      await expectUnmocked()      await expectUnmocked()    })    it('doesnt mock when matches regex', async () =&gt; {      fetch.dontMockIf(new RegExp(testUrl))      await expectUnmocked()      await expectUnmocked()    })    it('doesnt mock when matches predicate', async () =&gt; {      fetch.dontMockIf(input =&gt; input.url === testUrl)      await expectUnmocked()      await expectUnmocked()    })  })  describe('doMockOnceIf (default mocked)', () =&gt; {    it(&quot;doesn't mock normally&quot;, async () =&gt; {      fetch.doMockOnceIf('http://foo')      await expectUnmocked()      await expectMocked()    })    it('mocks when matches string', async () =&gt; {      fetch.doMockOnceIf(testUrl)      await expectMocked()      await expectMocked()    })    it('mocks when matches regex', async () =&gt; {      fetch.doMockOnceIf(new RegExp(testUrl))      await expectMocked()      await expectMocked()    })    it('mocks when matches predicate', async () =&gt; {      fetch.doMockOnceIf(input =&gt; input.url === testUrl)      await expectMocked()      await expectMocked()    })  })  describe('dontMockOnceIf (default mocked)', () =&gt; {    it('mocks normally', async () =&gt; {      fetch.dontMockOnceIf('http://foo')      await expectMocked()      await expectMocked()    })    it('doesnt mock when matches string', async () =&gt; {      fetch.dontMockOnceIf(testUrl)      await expectUnmocked()      await expectMocked()    })    it('doesnt mock when matches regex', async () =&gt; {      fetch.dontMockOnceIf(new RegExp(testUrl))      await expectUnmocked()      await expectMocked()    })    it('doesnt mock when matches predicate', async () =&gt; {      fetch.dontMockOnceIf(input =&gt; input.url === testUrl)      await expectUnmocked()      await expectMocked()    })  })  describe('doMockOnceIf (default unmocked)', () =&gt; {    beforeEach(() =&gt; {      fetch.dontMock()    })    it(&quot;doesn't mock normally&quot;, async () =&gt; {      fetch.doMockOnceIf('http://foo')      await expectUnmocked()      await expectUnmocked()    })    it('mocks when matches string', async () =&gt; {      fetch.doMockOnceIf(testUrl)      await expectMocked()      await expectUnmocked()    })    it('mocks when matches regex', async () =&gt; {      fetch.doMockOnceIf(new RegExp(testUrl))      await expectMocked()      await expectUnmocked()    })    it('mocks when matches predicate', async () =&gt; {      fetch.doMockOnceIf(input =&gt; input.url === testUrl)      await expectMocked()      await expectUnmocked()    })  })  describe('dontMockOnceIf (default unmocked)', () =&gt; {    beforeEach(() =&gt; {      fetch.dontMock()    })    it('mocks normally', async () =&gt; {      fetch.dontMockOnceIf('http://foo')      await expectMocked()      await expectUnmocked()    })    it('doesnt mock when matches string', async () =&gt; {      fetch.dontMockOnceIf(testUrl)      await expectUnmocked()      await expectUnmocked()    })    it('doesnt mock when matches regex', async () =&gt; {      fetch.dontMockOnceIf(new RegExp(testUrl))      await expectUnmocked()      await expectUnmocked()    })    it('doesnt mock when matches predicate', async () =&gt; {      fetch.dontMockOnceIf(input =&gt; input.url === testUrl)      await expectUnmocked()      await expectUnmocked()    })  })  describe('dont/do mock', () =&gt; {    test('dontMock', async () =&gt; {      fetch.dontMock()      await expectUnmocked()      await expectUnmocked()    })    test('dontMockOnce', async () =&gt; {      fetch.dontMockOnce()      await expectUnmocked()      await expectMocked()    })    test('doMock', async () =&gt; {      fetch.dontMock()      fetch.doMock()      await expectMocked()      await expectMocked()    })    test('doMockOnce', async () =&gt; {      fetch.dontMock()      fetch.doMockOnce()      await expectMocked()      await expectUnmocked()    })  })\"><pre><span class=\"pl-s1\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'conditional mocking'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">realResponse</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'REAL FETCH RESPONSE'</span>  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">mockedDefaultResponse</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'MOCKED DEFAULT RESPONSE'</span>  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">testUrl</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">defaultRequestUri</span>  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">crossFetchSpy</span>  <span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resetMocks</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponse</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">mockedDefaultResponse</span><span class=\"pl-kos\">)</span>    <span class=\"pl-s1\">crossFetchSpy</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">jest</span>      <span class=\"pl-kos\">.</span><span class=\"pl-en\">spyOn</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'cross-fetch'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'fetch'</span><span class=\"pl-kos\">)</span>      <span class=\"pl-kos\">.</span><span class=\"pl-en\">mockImplementation</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span>        <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">Response</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">realResponse</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>      <span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">afterEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">crossFetchSpy</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockRestore</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-k\">const</span> <span class=\"pl-en\">expectMocked</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">uri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">response</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">mockedDefaultResponse</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-k\">return</span> <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">request</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">uri</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolves</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">response</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span>  <span class=\"pl-k\">const</span> <span class=\"pl-en\">expectUnmocked</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-s1\">uri</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-k\">return</span> <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">request</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">uri</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolves</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">realResponse</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span>  <span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'once'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'default'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-k\">const</span> <span class=\"pl-s1\">otherResponse</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'other response'</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">once</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">otherResponse</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">otherResponse</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dont mock once then mock twice'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-k\">const</span> <span class=\"pl-s1\">otherResponse</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'other response'</span>      <span class=\"pl-s1\">fetch</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">once</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">otherResponse</span><span class=\"pl-kos\">)</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">once</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">otherResponse</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">otherResponse</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doMockIf'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"doesn't mock normally\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'http://foo'</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mocks when matches string'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mocks when matches regex'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockIf</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mocks when matches predicate'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">input</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">input</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">url</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dontMockIf'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mocks normally'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'http://foo'</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doesnt mock when matches string'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doesnt mock when matches regex'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockIf</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doesnt mock when matches predicate'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">input</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">input</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">url</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doMockOnceIf (default mocked)'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"doesn't mock normally\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'http://foo'</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mocks when matches string'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mocks when matches regex'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mocks when matches predicate'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">input</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">input</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">url</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dontMockOnceIf (default mocked)'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mocks normally'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'http://foo'</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doesnt mock when matches string'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doesnt mock when matches regex'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doesnt mock when matches predicate'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">input</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">input</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">url</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doMockOnceIf (default unmocked)'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMock</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"doesn't mock normally\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'http://foo'</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mocks when matches string'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mocks when matches regex'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mocks when matches predicate'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">input</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">input</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">url</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dontMockOnceIf (default unmocked)'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMock</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mocks normally'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'http://foo'</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doesnt mock when matches string'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doesnt mock when matches regex'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">RegExp</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">it</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doesnt mock when matches predicate'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">input</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">input</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">url</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">testUrl</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dont/do mock'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dontMock'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMock</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dontMockOnce'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doMock'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMock</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMock</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doMockOnce'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMock</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div><div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const expectMocked = async (uri, response = mockedDefaultResponse) =&gt; {  return expect(request(uri)).resolves.toEqual(response)}const expectUnmocked = async uri =&gt; {  return expect(request(uri)).resolves.toEqual(realResponse)}describe('conditional mocking complex', () =&gt; {  const realResponse = 'REAL FETCH RESPONSE'  const mockedDefaultResponse = 'MOCKED DEFAULT RESPONSE'  const testUrl = defaultRequestUri  let crossFetchSpy  beforeEach(() =&gt; {    fetch.resetMocks()    fetch.mockResponse(mockedDefaultResponse)    crossFetchSpy = jest      .spyOn(require('cross-fetch'), 'fetch')      .mockImplementation(async () =&gt;        Promise.resolve(new Response(realResponse))      )  })  afterEach(() =&gt; {    crossFetchSpy.mockRestore()  })  describe('complex example', () =&gt; {    const alternativeUrl = 'http://bar'    const alternativeBody = 'ALTERNATIVE RESPONSE'    beforeEach(() =&gt; {      fetch        // .mockResponse(mockedDefaultResponse) // set above - here for clarity        .mockResponseOnce('1') // 1        .mockResponseOnce('2') // 2        .mockResponseOnce(async uri =&gt;          uri === alternativeUrl ? alternativeBody : '3'        ) // 3        .mockResponseOnce('4') // 4        .mockResponseOnce('5') // 5        .mockResponseOnce(async uri =&gt;          uri === alternativeUrl ? alternativeBody : mockedDefaultResponse        ) // 6    })    describe('default (`doMock`)', () =&gt; {      beforeEach(() =&gt; {        fetch          // .doMock()    // the default - here for clarify          .dontMockOnceIf(alternativeUrl)          .doMockOnceIf(alternativeUrl)          .doMockOnce()          .dontMockOnce()      })      test('defaultRequestUri', async () =&gt; {        await expectMocked(defaultRequestUri, '1') // 1        await expectUnmocked(defaultRequestUri) // 2        await expectMocked(defaultRequestUri, '3') // 3        await expectUnmocked(defaultRequestUri) // 4        // after .once('..')        await expectMocked(defaultRequestUri, '5') // 5        await expectMocked(defaultRequestUri, mockedDefaultResponse) // 6        // default 'isMocked' (not 'Once')        await expectMocked(defaultRequestUri, mockedDefaultResponse) // 7      })      test('alternativeUrl', async () =&gt; {        await expectUnmocked(alternativeUrl) // 1        await expectMocked(alternativeUrl, '2') // 2        await expectMocked(alternativeUrl, alternativeBody) // 3        await expectUnmocked(alternativeUrl) // 4        // after .once('..')        await expectMocked(alternativeUrl, '5') // 5        await expectMocked(alternativeUrl, alternativeBody) // 6        // default 'isMocked' (not 'Once')        await expectMocked(alternativeUrl, mockedDefaultResponse) // 7      })    })    describe('dontMock', () =&gt; {      beforeEach(() =&gt; {        fetch          .dontMock()          .dontMockOnceIf(alternativeUrl)          .doMockOnceIf(alternativeUrl)          .doMockOnce()          .dontMockOnce()      })      test('defaultRequestUri', async () =&gt; {        await expectMocked(defaultRequestUri, '1') // 1        await expectUnmocked(defaultRequestUri) // 2        await expectMocked(defaultRequestUri, '3') // 3        await expectUnmocked(defaultRequestUri) // 4        // after .once('..')        await expectUnmocked(defaultRequestUri) // 5        await expectUnmocked(defaultRequestUri) // 6        // default 'isMocked' (not 'Once')        await expectUnmocked(defaultRequestUri) // 7      })      test('alternativeUrl', async () =&gt; {        await expectUnmocked(alternativeUrl) // 1        await expectMocked(alternativeUrl, '2') // 2        await expectMocked(alternativeUrl, alternativeBody) // 3        await expectUnmocked(alternativeUrl) // 4        // after .once('..')        await expectUnmocked(alternativeUrl) // 5        await expectUnmocked(alternativeUrl) // 6        // default 'isMocked' (not 'Once')        await expectUnmocked(alternativeUrl) // 7      })    })    describe('doMockIf(alternativeUrl)', () =&gt; {      beforeEach(() =&gt; {        fetch          .doMockIf(alternativeUrl)          .dontMockOnceIf(alternativeUrl)          .doMockOnceIf(alternativeUrl)          .doMockOnce()          .dontMockOnce()      })      test('defaultRequestUri', async () =&gt; {        await expectMocked(defaultRequestUri, '1') // 1        await expectUnmocked(defaultRequestUri) // 2        await expectMocked(defaultRequestUri, '3') // 3        await expectUnmocked(defaultRequestUri) // 4        // after .once('..')        await expectUnmocked(defaultRequestUri) // 5        await expectUnmocked(defaultRequestUri) // 6        // default 'isMocked' (not 'Once')        await expectUnmocked(defaultRequestUri) // 7      })      test('alternativeUrl', async () =&gt; {        await expectUnmocked(alternativeUrl) // 1        await expectMocked(alternativeUrl, '2') // 2        await expectMocked(alternativeUrl, alternativeBody) // 3        await expectUnmocked(alternativeUrl) // 4        // after .once('..')        await expectMocked(alternativeUrl, '5') // 5        await expectMocked(alternativeUrl, alternativeBody) // 6        // default 'isMocked' (not 'Once')        await expectMocked(alternativeUrl, mockedDefaultResponse) // 7      })    })    describe('dontMockIf(alternativeUrl)', () =&gt; {      beforeEach(() =&gt; {        fetch          .dontMockIf(alternativeUrl)          .dontMockOnceIf(alternativeUrl)          .doMockOnceIf(alternativeUrl)          .doMockOnce()          .dontMockOnce()      })      test('defaultRequestUri', async () =&gt; {        await expectMocked(defaultRequestUri, '1') // 1        await expectUnmocked(defaultRequestUri) // 2        await expectMocked(defaultRequestUri, '3') // 3        await expectUnmocked(defaultRequestUri) // 4        // after .once('..')        await expectMocked(defaultRequestUri, '5') // 5        await expectMocked(defaultRequestUri, mockedDefaultResponse) // 6        // default 'isMocked' (not 'Once')        await expectMocked(defaultRequestUri, mockedDefaultResponse) // 7      })      test('alternativeUrl', async () =&gt; {        await expectUnmocked(alternativeUrl) // 1        await expectMocked(alternativeUrl, '2') // 2        await expectMocked(alternativeUrl, alternativeBody) // 3        await expectUnmocked(alternativeUrl) // 4        // after .once('..')        await expectUnmocked(alternativeUrl) // 5        await expectUnmocked(alternativeUrl) // 6        // default 'isMocked' (not 'Once')        await expectUnmocked(alternativeUrl) // 7      })    })  })})\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-en\">expectMocked</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">uri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">response</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">mockedDefaultResponse</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-k\">return</span> <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">request</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">uri</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolves</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">response</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-k\">const</span> <span class=\"pl-en\">expectUnmocked</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">async</span> <span class=\"pl-s1\">uri</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-k\">return</span> <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">request</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">uri</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">resolves</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">realResponse</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'conditional mocking complex'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">realResponse</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'REAL FETCH RESPONSE'</span>  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">mockedDefaultResponse</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'MOCKED DEFAULT RESPONSE'</span>  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">testUrl</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">defaultRequestUri</span>  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">crossFetchSpy</span>  <span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resetMocks</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>    <span class=\"pl-s1\">fetch</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponse</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">mockedDefaultResponse</span><span class=\"pl-kos\">)</span>    <span class=\"pl-s1\">crossFetchSpy</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">jest</span>      <span class=\"pl-kos\">.</span><span class=\"pl-en\">spyOn</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'cross-fetch'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'fetch'</span><span class=\"pl-kos\">)</span>      <span class=\"pl-kos\">.</span><span class=\"pl-en\">mockImplementation</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span>        <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">Response</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">realResponse</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>      <span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">afterEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-s1\">crossFetchSpy</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">mockRestore</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'complex example'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">alternativeUrl</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'http://bar'</span>    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">alternativeBody</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'ALTERNATIVE RESPONSE'</span>    <span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-s1\">fetch</span>        <span class=\"pl-c\">// .mockResponse(mockedDefaultResponse) // set above - here for clarity</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponseOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'1'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 1</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponseOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'2'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 2</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponseOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-s1\">uri</span> <span class=\"pl-c1\">=&gt;</span>          <span class=\"pl-s1\">uri</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">alternativeUrl</span> ? <span class=\"pl-s1\">alternativeBody</span> : <span class=\"pl-s\">'3'</span>        <span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 3</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponseOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'4'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 4</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponseOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'5'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 5</span>        <span class=\"pl-kos\">.</span><span class=\"pl-en\">mockResponseOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-s1\">uri</span> <span class=\"pl-c1\">=&gt;</span>          <span class=\"pl-s1\">uri</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">alternativeUrl</span> ? <span class=\"pl-s1\">alternativeBody</span> : <span class=\"pl-s1\">mockedDefaultResponse</span>        <span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 6</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'default (`doMock`)'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-s1\">fetch</span>          <span class=\"pl-c\">// .doMock()    // the default - here for clarify</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>      <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'defaultRequestUri'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'1'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 1</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 2</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'3'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 3</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 4</span>        <span class=\"pl-c\">// after .once('..')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'5'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 5</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">mockedDefaultResponse</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 6</span>        <span class=\"pl-c\">// default 'isMocked' (not 'Once')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">mockedDefaultResponse</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 7</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>      <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'alternativeUrl'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 1</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'2'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 2</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">alternativeBody</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 3</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 4</span>        <span class=\"pl-c\">// after .once('..')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'5'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 5</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">alternativeBody</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 6</span>        <span class=\"pl-c\">// default 'isMocked' (not 'Once')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">mockedDefaultResponse</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 7</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dontMock'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-s1\">fetch</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMock</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>      <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'defaultRequestUri'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'1'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 1</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 2</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'3'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 3</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 4</span>        <span class=\"pl-c\">// after .once('..')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 5</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 6</span>        <span class=\"pl-c\">// default 'isMocked' (not 'Once')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 7</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>      <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'alternativeUrl'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 1</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'2'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 2</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">alternativeBody</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 3</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 4</span>        <span class=\"pl-c\">// after .once('..')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 5</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 6</span>        <span class=\"pl-c\">// default 'isMocked' (not 'Once')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 7</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'doMockIf(alternativeUrl)'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-s1\">fetch</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>      <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'defaultRequestUri'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'1'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 1</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 2</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'3'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 3</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 4</span>        <span class=\"pl-c\">// after .once('..')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 5</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 6</span>        <span class=\"pl-c\">// default 'isMocked' (not 'Once')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 7</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>      <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'alternativeUrl'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 1</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'2'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 2</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">alternativeBody</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 3</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 4</span>        <span class=\"pl-c\">// after .once('..')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'5'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 5</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">alternativeBody</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 6</span>        <span class=\"pl-c\">// default 'isMocked' (not 'Once')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">mockedDefaultResponse</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 7</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-en\">describe</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'dontMockIf(alternativeUrl)'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>      <span class=\"pl-en\">beforeEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-s1\">fetch</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnceIf</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">doMockOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>          <span class=\"pl-kos\">.</span><span class=\"pl-en\">dontMockOnce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>      <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'defaultRequestUri'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'1'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 1</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 2</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'3'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 3</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 4</span>        <span class=\"pl-c\">// after .once('..')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'5'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 5</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">mockedDefaultResponse</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 6</span>        <span class=\"pl-c\">// default 'isMocked' (not 'Once')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">defaultRequestUri</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">mockedDefaultResponse</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 7</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>      <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'alternativeUrl'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 1</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'2'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 2</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectMocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">alternativeBody</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 3</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 4</span>        <span class=\"pl-c\">// after .once('..')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 5</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 6</span>        <span class=\"pl-c\">// default 'isMocked' (not 'Once')</span>        <span class=\"pl-k\">await</span> <span class=\"pl-en\">expectUnmocked</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">alternativeUrl</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// 7</span>      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div></article></div></div></div></div></div> <!-- --> <!-- --> <script type=\"application/json\" id=\"__PRIMER_DATA__\">{\"resolvedServerColorMode\":\"day\"}</script></div></react-partial>        <input type=\"hidden\" data-csrf=\"true\" value=\"381KlDL3G8T1sBJrHn8skcvSnIWC//zS0PCmEwAI6ts4J00lY6maRD+9uS8pe0P/IhdYf0OvIBLmfpvHbSEzmg==\" /></div>  <div data-view-component=\"true\" class=\"Layout-sidebar\">            <div class=\"BorderGrid about-margin\" data-pjax>        <div class=\"BorderGrid-row\">          <div class=\"BorderGrid-cell\">            <div class=\"hide-sm hide-md\">  <h2 class=\"mb-3 h4\">About</h2>      <p class=\"f4 my-3\">        Jest mock for fetch      </p>    <h3 class=\"sr-only\">Resources</h3>    <div class=\"mt-2\">      <a class=\"Link--muted\" data-analytics-event=\"{&quot;category&quot;:&quot;Repository Overview&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;location:sidebar;file:readme&quot;}\" href=\"#readme-ov-file\">        <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-book mr-2\">    <path d=\"M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z\"></path></svg>        Readme</a>    </div>      <h3 class=\"sr-only\">License</h3>  <div class=\"mt-2\">    <a href=\"#MIT-1-ov-file\"      class=\"Link--muted\"            data-analytics-event=\"{&quot;category&quot;:&quot;Repository Overview&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;location:sidebar;file:license&quot;}\"    >      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-law mr-2\">    <path d=\"M8.75.75V2h.985c.304 0 .603.08.867.231l1.29.736c.038.022.08.033.124.033h2.234a.75.75 0 0 1 0 1.5h-.427l2.111 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.006.005-.01.01-.045.04c-.21.176-.441.327-.686.45C14.556 10.78 13.88 11 13 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L12.178 4.5h-.162c-.305 0-.604-.079-.868-.231l-1.29-.736a.245.245 0 0 0-.124-.033H8.75V13h2.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1 0-1.5h2.5V3.5h-.984a.245.245 0 0 0-.124.033l-1.289.737c-.265.15-.564.23-.869.23h-.162l2.112 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.016.015-.045.04c-.21.176-.441.327-.686.45C4.556 10.78 3.88 11 3 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L2.178 4.5H1.75a.75.75 0 0 1 0-1.5h2.234a.249.249 0 0 0 .125-.033l1.288-.737c.265-.15.564-.23.869-.23h.984V.75a.75.75 0 0 1 1.5 0Zm2.945 8.477c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L13 6.327Zm-10 0c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L3 6.327Z\"></path></svg>     MIT license    </a>  </div>  <include-fragment  src=\"/jefflau/jest-fetch-mock/hovercards/citation/sidebar_partial?tree_name=master\">  </include-fragment>  <div class=\"mt-2\">    <a href=\"/jefflau/jest-fetch-mock/activity\" data-view-component=\"true\" class=\"Link Link--muted\">      <svg text=\"gray\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-pulse mr-2\">    <path d=\"M6 2c.306 0 .582.187.696.471L10 10.731l1.304-3.26A.751.751 0 0 1 12 7h3.25a.75.75 0 0 1 0 1.5h-2.742l-1.812 4.528a.751.751 0 0 1-1.392 0L6 4.77 4.696 8.03A.75.75 0 0 1 4 8.5H.75a.75.75 0 0 1 0-1.5h2.742l1.812-4.529A.751.751 0 0 1 6 2Z\"></path></svg>      <span class=\"color-fg-muted\">Activity</span></a>  </div>  <h3 class=\"sr-only\">Stars</h3>  <div class=\"mt-2\">    <a href=\"/jefflau/jest-fetch-mock/stargazers\" data-view-component=\"true\" class=\"Link Link--muted\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-star mr-2\">    <path d=\"M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z\"></path></svg>      <strong>868</strong>      stars</a>  </div>  <h3 class=\"sr-only\">Watchers</h3>  <div class=\"mt-2\">    <a href=\"/jefflau/jest-fetch-mock/watchers\" data-view-component=\"true\" class=\"Link Link--muted\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-eye mr-2\">    <path d=\"M8 2c1.981 0 3.671.992 4.933 2.078 1.27 1.091 2.187 2.345 2.637 3.023a1.62 1.62 0 0 1 0 1.798c-.45.678-1.367 1.932-2.637 3.023C11.67 13.008 9.981 14 8 14c-1.981 0-3.671-.992-4.933-2.078C1.797 10.83.88 9.576.43 8.898a1.62 1.62 0 0 1 0-1.798c.45-.677 1.367-1.931 2.637-3.022C4.33 2.992 6.019 2 8 2ZM1.679 7.932a.12.12 0 0 0 0 .136c.411.622 1.241 1.75 2.366 2.717C5.176 11.758 6.527 12.5 8 12.5c1.473 0 2.825-.742 3.955-1.715 1.124-.967 1.954-2.096 2.366-2.717a.12.12 0 0 0 0-.136c-.412-.621-1.242-1.75-2.366-2.717C10.824 4.242 9.473 3.5 8 3.5c-1.473 0-2.825.742-3.955 1.715-1.124.967-1.954 2.096-2.366 2.717ZM8 10a2 2 0 1 1-.001-3.999A2 2 0 0 1 8 10Z\"></path></svg>      <strong>6</strong>      watching</a>  </div>  <h3 class=\"sr-only\">Forks</h3>  <div class=\"mt-2\">    <a href=\"/jefflau/jest-fetch-mock/forks\" data-view-component=\"true\" class=\"Link Link--muted\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo-forked mr-2\">    <path d=\"M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z\"></path></svg>      <strong>117</strong>      forks</a>  </div>    <div class=\"mt-2\">      <a class=\"Link--muted\" href=\"/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fjefflau%2Fjest-fetch-mock&amp;report=jefflau+%28user%29\">          Report repository</a>    </div></div>          </div>        </div>                    <div class=\"BorderGrid-row\">              <div class=\"BorderGrid-cell\">                <h2 class=\"h4 mb-3\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\">  <a href=\"/jefflau/jest-fetch-mock/releases\" data-view-component=\"true\" class=\"Link--primary no-underline Link\">    Releases      <span title=\"5\" data-view-component=\"true\" class=\"Counter\">5</span></a></h2>  <a class=\"Link--primary d-flex no-underline\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" href=\"/jefflau/jest-fetch-mock/releases/tag/3.0.0\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-tag flex-shrink-0 mt-1 color-fg-success\">    <path d=\"M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.752 1.752 0 0 1 1 7.775Zm1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z\"></path></svg>    <div class=\"ml-2 min-width-0\">      <div class=\"d-flex\">        <span class=\"css-truncate css-truncate-target text-bold mr-2\" style=\"max-width: none;\">Conditional Mocking, Request Based Responses, Enable/Disable Facade, and Abort Mocking</span>        <span title=\"Label: Latest\" data-view-component=\"true\" class=\"Label Label--success flex-shrink-0\">          Latest</span>      </div>      <div class=\"text-small color-fg-muted\"><relative-time datetime=\"2019-12-18T07:03:36Z\" class=\"no-wrap\">Dec 18, 2019</relative-time></div>    </div></a>    <div data-view-component=\"true\" class=\"mt-3\">      <a text=\"small\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" href=\"/jefflau/jest-fetch-mock/releases\" data-view-component=\"true\" class=\"Link\">        + 4 releases</a></div>              </div>            </div>                            <div class=\"BorderGrid-row\">              <div class=\"BorderGrid-cell\">                <h2 class=\"h4 mb-3\">  <a href=\"/users/jefflau/packages?repo_name=jest-fetch-mock\" data-view-component=\"true\" class=\"Link--primary no-underline Link d-flex flex-items-center\">    Packages      <span title=\"0\" hidden=\"hidden\" data-view-component=\"true\" class=\"Counter ml-1\">0</span></a></h2>      <div class=\"text-small color-fg-muted\">        No packages published <br>      </div>              </div>            </div>                    <div class=\"BorderGrid-row\" >              <div class=\"BorderGrid-cell\">                  <h2 class=\"h4 mb-3\">    <a href=\"/jefflau/jest-fetch-mock/network/dependents\" data-view-component=\"true\" class=\"Link--primary no-underline Link\">      Used by <span title=\"32,827\" data-view-component=\"true\" class=\"Counter\">32.8k</span></a>  </h2>  <a class=\"d-flex flex-items-center\" href=\"/jefflau/jest-fetch-mock/network/dependents\">    <ul class=\"hx_flex-avatar-stack list-style-none min-width-0\">          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar\" src=\"https://avatars.githubusercontent.com/u/39118750?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@js-tasks-ru\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar avatar-user\" src=\"https://avatars.githubusercontent.com/u/138859317?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@stats-nerd\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar\" src=\"https://avatars.githubusercontent.com/u/131972263?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@codacy-open-source-project-scans\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar avatar-user\" src=\"https://avatars.githubusercontent.com/u/93048087?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@a2425rdl\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar avatar-user\" src=\"https://avatars.githubusercontent.com/u/6085015?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@diegofelipemoreno\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar avatar-user\" src=\"https://avatars.githubusercontent.com/u/80364620?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@jeoffydev\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar avatar-user\" src=\"https://avatars.githubusercontent.com/u/126812090?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@jetie000\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar avatar-user\" src=\"https://avatars.githubusercontent.com/u/150397093?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@Polonane\" />          </li>    </ul>      <span class=\"px-2 text-bold text-small no-wrap\">        + 32,819      </span>  </a>              </div>            </div>                    <div class=\"BorderGrid-row\">              <div class=\"BorderGrid-cell\">                <h2 class=\"h4 mb-3\">  <a href=\"/jefflau/jest-fetch-mock/graphs/contributors\" data-view-component=\"true\" class=\"Link--primary no-underline Link d-flex flex-items-center\">    Contributors      <span title=\"35\" data-view-component=\"true\" class=\"Counter ml-1\">35</span></a></h2>      <ul class=\"list-style-none d-flex flex-wrap mb-n2\">    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/jefflau\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/jefflau/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/1221141?s=64&amp;v=4\" alt=\"@jefflau\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/yinzara\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/yinzara/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/671855?s=64&amp;v=4\" alt=\"@yinzara\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/hally9k\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/hally9k/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/3803536?s=64&amp;v=4\" alt=\"@hally9k\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/phra\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/phra/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/984628?s=64&amp;v=4\" alt=\"@phra\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/AllenFang\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/AllenFang/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/5351390?s=64&amp;v=4\" alt=\"@AllenFang\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/alexeyeryshev\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/alexeyeryshev/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/7483130?s=64&amp;v=4\" alt=\"@alexeyeryshev\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/Guria\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/Guria/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/36270?s=64&amp;v=4\" alt=\"@Guria\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/bjacquet\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/bjacquet/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/63157?s=64&amp;v=4\" alt=\"@bjacquet\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/dsebastien\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/dsebastien/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/89887?s=64&amp;v=4\" alt=\"@dsebastien\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/keeganwatkins\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/keeganwatkins/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/151459?s=64&amp;v=4\" alt=\"@keeganwatkins\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/JasonBerry\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/JasonBerry/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/216330?s=64&amp;v=4\" alt=\"@JasonBerry\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/rnicholus\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/rnicholus/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/593312?s=64&amp;v=4\" alt=\"@rnicholus\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/gotofritz\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/gotofritz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/604900?s=64&amp;v=4\" alt=\"@gotofritz\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/forivall\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/forivall/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/760204?s=64&amp;v=4\" alt=\"@forivall\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li></ul>  <div data-view-component=\"true\" class=\"mt-3\">    <a text=\"small\" href=\"/jefflau/jest-fetch-mock/graphs/contributors\" data-view-component=\"true\" class=\"Link\">      + 21 contributors</a></div>              </div>            </div>                            <div class=\"BorderGrid-row\">              <div class=\"BorderGrid-cell\">                <h2 class=\"h4 mb-3\">Languages</h2><div class=\"mb-2\">  <span data-view-component=\"true\" class=\"Progress\">    <span style=\"background-color:#f1e05a !important;;width: 90.4%;\" itemprop=\"keywords\" aria-label=\"JavaScript 90.4\" data-view-component=\"true\" class=\"Progress-item color-bg-success-emphasis\"></span>    <span style=\"background-color:#3178c6 !important;;width: 9.6%;\" itemprop=\"keywords\" aria-label=\"TypeScript 9.6\" data-view-component=\"true\" class=\"Progress-item color-bg-success-emphasis\"></span></span></div><ul class=\"list-style-none\">    <li class=\"d-inline\">        <a class=\"d-inline-flex flex-items-center flex-nowrap Link--secondary no-underline text-small mr-3\" href=\"/jefflau/jest-fetch-mock/search?l=javascript\"  data-ga-click=\"Repository, language stats search click, location:repo overview\">          <svg style=\"color:#f1e05a;\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-dot-fill mr-2\">    <path d=\"M8 4a4 4 0 1 1 0 8 4 4 0 0 1 0-8Z\"></path></svg>          <span class=\"color-fg-default text-bold mr-1\">JavaScript</span>          <span>90.4%</span>        </a>    </li>    <li class=\"d-inline\">        <a class=\"d-inline-flex flex-items-center flex-nowrap Link--secondary no-underline text-small mr-3\" href=\"/jefflau/jest-fetch-mock/search?l=typescript\"  data-ga-click=\"Repository, language stats search click, location:repo overview\">          <svg style=\"color:#3178c6;\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-dot-fill mr-2\">    <path d=\"M8 4a4 4 0 1 1 0 8 4 4 0 0 1 0-8Z\"></path></svg>          <span class=\"color-fg-default text-bold mr-1\">TypeScript</span>          <span>9.6%</span>        </a>    </li></ul>              </div>            </div>              </div></div>  </div></div>  </div>  </div></turbo-frame>    </main>  </div>  </div>          <footer class=\"footer pt-8 pb-6 f6 color-fg-muted p-responsive\" role=\"contentinfo\" >  <h2 class='sr-only'>Footer</h2>    <div class=\"d-flex flex-justify-center flex-items-center flex-column-reverse flex-lg-row flex-wrap flex-lg-nowrap\">    <div class=\"d-flex flex-items-center flex-shrink-0 mx-2\">      <a aria-label=\"Homepage\" title=\"GitHub\" class=\"footer-octicon mr-2\" href=\"https://github.com\">        <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-mark-github\">    <path d=\"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z\"></path></svg></a>      <span>        &copy; 2024 GitHub,&nbsp;Inc.      </span>    </div>    <nav aria-label=\"Footer\">      <h3 class=\"sr-only\" id=\"sr-footer-heading\">Footer navigation</h3>      <ul class=\"list-style-none d-flex flex-justify-center flex-wrap mb-2 mb-lg-0\" aria-labelledby=\"sr-footer-heading\">          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to Terms&quot;,&quot;label&quot;:&quot;text:terms&quot;}\" href=\"https://docs.github.com/site-policy/github-terms/github-terms-of-service\" data-view-component=\"true\" class=\"Link--secondary Link\">Terms</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to privacy&quot;,&quot;label&quot;:&quot;text:privacy&quot;}\" href=\"https://docs.github.com/site-policy/privacy-policies/github-privacy-statement\" data-view-component=\"true\" class=\"Link--secondary Link\">Privacy</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to security&quot;,&quot;label&quot;:&quot;text:security&quot;}\" href=\"/security\" data-view-component=\"true\" class=\"Link--secondary Link\">Security</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to status&quot;,&quot;label&quot;:&quot;text:status&quot;}\" href=\"https://www.githubstatus.com/\" data-view-component=\"true\" class=\"Link--secondary Link\">Status</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to docs&quot;,&quot;label&quot;:&quot;text:docs&quot;}\" href=\"https://docs.github.com\" data-view-component=\"true\" class=\"Link--secondary Link\">Docs</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to contact&quot;,&quot;label&quot;:&quot;text:contact&quot;}\" href=\"https://support.github.com?tags=dotcom-footer\" data-view-component=\"true\" class=\"Link--secondary Link\">Contact</a>          </li>          <li class=\"mx-2\" >  <cookie-consent-link>    <button type=\"button\" class=\"Link--secondary underline-on-hover border-0 p-0 color-bg-transparent\" data-action=\"click:cookie-consent-link#showConsentManagement\">      Manage cookies    </button>  </cookie-consent-link></li><li class=\"mx-2\">  <cookie-consent-link>    <button type=\"button\" class=\"Link--secondary underline-on-hover border-0 p-0 color-bg-transparent\" data-action=\"click:cookie-consent-link#showConsentManagement\">      Do not share my personal information    </button>  </cookie-consent-link></li>      </ul>    </nav>  </div></footer>    <cookie-consent id=\"cookie-consent-banner\" class=\"position-fixed bottom-0 left-0\" style=\"z-index: 999999\" data-initial-cookie-consent-allowed=\"\" data-cookie-consent-required=\"false\"></cookie-consent>  <div id=\"ajax-error-message\" class=\"ajax-error-message flash flash-error\" hidden>    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-alert\">    <path d=\"M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>    <button type=\"button\" class=\"flash-close js-ajax-error-dismiss\" aria-label=\"Dismiss error\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg>    </button>    You can\u2019t perform that action at this time.  </div>    <template id=\"site-details-dialog\">  <details class=\"details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm\" open>    <summary role=\"button\" aria-label=\"Close dialog\"></summary>    <details-dialog class=\"Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal\">      <button class=\"Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0\" type=\"button\" aria-label=\"Close dialog\" data-close-dialog>        <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg>      </button>      <div class=\"octocat-spinner my-6 js-details-dialog-spinner\"></div>    </details-dialog>  </details></template>    <div class=\"Popover js-hovercard-content position-absolute\" style=\"display: none; outline: none;\" tabindex=\"0\">  <div class=\"Popover-message Popover-message--bottom-left Popover-message--large Box color-shadow-large\" style=\"width:360px;\">  </div></div>    <template id=\"snippet-clipboard-copy-button\">  <div class=\"zeroclipboard-container position-absolute right-0 top-0\">    <clipboard-copy aria-label=\"Copy\" class=\"ClipboardButton btn js-clipboard-copy m-2 p-0 tooltipped-no-delay\" data-copy-feedback=\"Copied!\" data-tooltip-direction=\"w\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-copy js-clipboard-copy-icon m-2\">    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path></svg>      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2\">    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path></svg>    </clipboard-copy>  </div></template><template id=\"snippet-clipboard-copy-button-unpositioned\">  <div class=\"zeroclipboard-container\">    <clipboard-copy aria-label=\"Copy\" class=\"ClipboardButton btn btn-invisible js-clipboard-copy m-2 p-0 tooltipped-no-delay d-flex flex-justify-center flex-items-center\" data-copy-feedback=\"Copied!\" data-tooltip-direction=\"w\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-copy js-clipboard-copy-icon\">    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path></svg>      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-check js-clipboard-check-icon color-fg-success d-none\">    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path></svg>    </clipboard-copy>  </div></template>    </div>    <div id=\"js-global-screen-reader-notice\" class=\"sr-only\" aria-live=\"polite\" aria-atomic=\"true\" ></div>    <div id=\"js-global-screen-reader-notice-assertive\" class=\"sr-only\" aria-live=\"assertive\" aria-atomic=\"true\"></div>  </body></html>",
  "embeddings": []
}
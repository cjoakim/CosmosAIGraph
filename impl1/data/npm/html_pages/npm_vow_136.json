{
  "libtype": "npm",
  "libname": "vow",
  "url": "http://dfilatov.github.io/vow/",
  "html": "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/><link rel=\"stylesheet\" href=\"index.css\"/></head><body class=\"body body__page\"><div class=\"toolbar\"><span class=\"link action action_type_expand-all\">expand all</span> / <span class=\"link action action_type_collapse-all\">collapse all</span></div><div class=\"module\"><h1 class=\"module__name\">vow</h1><dl class=\"module__prop\"><dt class=\"module__prop-name\">version</dt><dd class=\"module__prop-val\">0.4.18</dd></dl><dl class=\"module__prop\"><dt class=\"module__prop-name\">author</dt><dd class=\"module__prop-val\">Filatov Dmitry <a class=\"link\" href=\"mailto:dfilatov@yandex-team.ru\">dfilatov@yandex-team.ru</a></dd></dl><dl class=\"module__prop\"><dt class=\"module__prop-name\">license</dt><dd class=\"module__prop-val\"><div class=\"description\"><p>Dual licensed under the MIT and GPL licenses:</p><ul><li><a href=\"http://www.opensource.org/licenses/mit-license.php\">http://www.opensource.org/licenses/mit-license.php</a></li><li><a href=\"http://www.gnu.org/licenses/gpl.html\">http://www.gnu.org/licenses/gpl.html</a></li></ul></div></dd></dl><dl class=\"module__prop\"><dt class=\"module__prop-name\">exports</dt><dd class=\"module__prop-val\"><div class=\"js-type js-type_type_object\"><span class=\"js-type__name\">Object </span>{<dl class=\"js-type__prop\"><dt class=\"js-type__key\">Deferred</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_class details\"><span class=\"js-type__name details__opener\">Class</span><div class=\"details__content\"><div class=\"description\"><p>The <code>Deferred</code> class is used to encapsulate newly-created promise object along with functions that resolve, reject or notify it.</p></div><dl class=\"cons\"><dt class=\"cons__name\">constructor</dt><dd class=\"cons__desc\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> ()<div class=\"details__content\"><div class=\"description\"><p>You can use <code>vow.defer()</code> instead of using this constructor.</p><p><code>new vow.Deferred()</code> gives the same result as <code>vow.defer()</code>.</p></div></div></div></dd></dl><div class=\"block\"><div class=\"block__header\">instance methods</div><div class=\"block__content\"><dl class=\"js-type__prop\"><dt class=\"js-type__key\">promise</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> () \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns the corresponding promise.</p></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">resolve</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span></span>)<div class=\"details__content\"><div class=\"description\"><p>Resolves the corresponding promise with the given <code>value</code>.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><div class=\"block\"><div class=\"block__header\">example</div><div class=\"block__content\"><div class=\"description\"><pre><code class=\"lang-js\"><span class=\"keyword\">var</span> defer = vow.defer(),    promise = defer.promise();promise.then(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(value)</span> {</span>    <span class=\"comment\">// value is \"'success'\" here</span>});defer.resolve(<span class=\"string\">'success'</span>);</code></pre></div></div></div></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">reject</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">reason</span></span>)<div class=\"details__content\"><div class=\"description\"><p>Rejects the corresponding promise with the given <code>reason</code>.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">reason</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><div class=\"block\"><div class=\"block__header\">example</div><div class=\"block__content\"><div class=\"description\"><pre><code class=\"lang-js\"><span class=\"keyword\">var</span> defer = vow.defer(),    promise = defer.promise();promise.fail(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(reason)</span> {</span>    <span class=\"comment\">// reason is \"'something is wrong'\" here</span>});defer.reject(<span class=\"string\">'something is wrong'</span>);</code></pre></div></div></div></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">notify</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span></span>)<div class=\"details__content\"><div class=\"description\"><p>Notifies the corresponding promise with the given <code>value</code>.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><div class=\"block\"><div class=\"block__header\">example</div><div class=\"block__content\"><div class=\"description\"><pre><code class=\"lang-js\"><span class=\"keyword\">var</span> defer = vow.defer(),    promise = defer.promise();promise.progress(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(value)</span> {</span>    <span class=\"comment\">// value is \"'20%'\", \"'40%'\" here</span>});defer.notify(<span class=\"string\">'20%'</span>);defer.notify(<span class=\"string\">'40%'</span>);</code></pre></div></div></div></div></div></dd></dl></div></div></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">Promise</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_class details\"><span class=\"js-type__name details__opener\">Class</span><div class=\"details__content\"><div class=\"description\"><p>The <code>Promise</code> class is used when you want to give to the caller something to subscribe to,but not the ability to resolve or reject the deferred.</p></div><dl class=\"cons\"><dt class=\"cons__name\">constructor</dt><dd class=\"cons__desc\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">resolver</span></span>)<div class=\"details__content\"><div class=\"description\"><p>You should use this constructor directly only if you are going to use <code>vow</code> as DOM Promises implementation.In other case you should use <code>vow.defer()</code> and <code>defer.promise()</code> methods.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">resolver</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>See <a href=\"https://github.com/domenic/promises-unwrapping/blob/master/README.md#the-promise-constructor\">https://github.com/domenic/promises-unwrapping/blob/master/README.md#the-promise-constructor</a> for details.</p></div></dd></dl></div></div><div class=\"block\"><div class=\"block__header\">example</div><div class=\"block__content\"><div class=\"description\"><pre><code class=\"lang-js\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fetchJSON</span><span class=\"params\">(url)</span> {</span>    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> vow.Promise(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(resolve, reject, notify)</span> {</span>        <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();        xhr.open(<span class=\"string\">'GET'</span>, url);        xhr.responseType = <span class=\"string\">'json'</span>;        xhr.send();        xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> {</span>            <span class=\"keyword\">if</span>(xhr.response) {                resolve(xhr.response);            }            <span class=\"keyword\">else</span> {                reject(<span class=\"keyword\">new</span> TypeError());            }        };    });}</code></pre></div></div></div></div></div></dd></dl><div class=\"block\"><div class=\"block__header\">instance methods</div><div class=\"block__content\"><dl class=\"js-type__prop\"><dt class=\"js-type__key\">valueOf</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> () \u2192 <span class=\"js-type__name\">*</span><div class=\"details__content\"><div class=\"description\"><p>Returns the value of the fulfilled promise or the reason in case of rejection.</p></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">isResolved</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> () \u2192 <span class=\"js-type__name\">Boolean</span><div class=\"details__content\"><div class=\"description\"><p>Returns <code>true</code> if the promise is resolved.</p></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">Boolean</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">isFulfilled</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> () \u2192 <span class=\"js-type__name\">Boolean</span><div class=\"details__content\"><div class=\"description\"><p>Returns <code>true</code> if the promise is fulfilled.</p></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">Boolean</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">isRejected</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> () \u2192 <span class=\"js-type__name\">Boolean</span><div class=\"details__content\"><div class=\"description\"><p>Returns <code>true</code> if the promise is rejected.</p></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">Boolean</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">then</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param params__param_optional\">onFulfilled</span><span class=\"params__param params__param_optional\">, onRejected</span><span class=\"params__param params__param_optional\">, onProgress</span><span class=\"params__param params__param_optional\">, ctx</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Adds reactions to the promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onFulfilled<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided value after the promise has been fulfilled</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onRejected<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided reason after the promise has been rejected</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onProgress<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided value after the promise has been notified</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callbacks execution</p></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"><p>A new promise, see <a href=\"https://github.com/promises-aplus/promises-spec\">https://github.com/promises-aplus/promises-spec</a> for details</p></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">catch</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">onRejected</span><span class=\"params__param params__param_optional\">, ctx</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Adds only a rejection reaction. This method is a shorthand for <code>promise.then(undefined, onRejected)</code>.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">onRejected</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be called with a provided &#39;reason&#39; as argument after the promise has been rejected</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callback execution</p></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">fail</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">onRejected</span><span class=\"params__param params__param_optional\">, ctx</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Adds only a rejection reaction. This method is a shorthand for <code>promise.then(null, onRejected)</code>. It&#39;s also an alias for <code>catch</code>.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">onRejected</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback to be called with the value after promise has been rejected</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callback execution</p></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">always</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">onResolved</span><span class=\"params__param params__param_optional\">, ctx</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Adds a resolving reaction (for both fulfillment and rejection).</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">onResolved</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with the promise as an argument, after the promise has been resolved.</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callback execution</p></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">finally</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">onFinalized</span><span class=\"params__param params__param_optional\">, ctx</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Adds a resolving reaction (for both fulfillment and rejection). The returned promise will be fullfiled with the same value or rejected with the same reason as the original promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">onFinalized</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked after the promise has been resolved.</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callback execution</p></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">progress</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">onProgress</span><span class=\"params__param params__param_optional\">, ctx</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Adds a progress reaction.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">onProgress</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be called with a provided value when the promise has been notified</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callback execution</p></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">spread</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param params__param_optional\">onFulfilled</span><span class=\"params__param params__param_optional\">, onRejected</span><span class=\"params__param params__param_optional\">, ctx</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Like <code>promise.then</code>, but &quot;spreads&quot; the array into a variadic value handler.It is useful with the <code>vow.all</code> and the <code>vow.allResolved</code> methods.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onFulfilled<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided value after the promise has been fulfilled</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onRejected<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided reason after the promise has been rejected</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callbacks execution</p></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl><div class=\"block\"><div class=\"block__header\">example</div><div class=\"block__content\"><div class=\"description\"><pre><code class=\"lang-js\"><span class=\"keyword\">var</span> defer1 = vow.defer(),    defer2 = vow.defer();vow.all([defer1.promise(), defer2.promise()]).spread(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(arg1, arg2)</span> {</span>    <span class=\"comment\">// arg1 is \"1\", arg2 is \"'two'\" here</span>});defer1.resolve(<span class=\"number\">1</span>);defer2.resolve(<span class=\"string\">'two'</span>);</code></pre></div></div></div></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">done</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param params__param_optional\">onFulfilled</span><span class=\"params__param params__param_optional\">, onRejected</span><span class=\"params__param params__param_optional\">, onProgress</span><span class=\"params__param params__param_optional\">, ctx</span></span>)<div class=\"details__content\"><div class=\"description\"><p>Like <code>then</code>, but terminates a chain of promises.If the promise has been rejected, this method throws it&#39;s &quot;reason&quot; as an exception in a future turn of the event loop.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onFulfilled<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided value after the promise has been fulfilled</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onRejected<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided reason after the promise has been rejected</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onProgress<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided value after the promise has been notified</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callbacks execution</p></div></dd></dl></div></div><div class=\"block\"><div class=\"block__header\">example</div><div class=\"block__content\"><div class=\"description\"><pre><code class=\"lang-js\"><span class=\"keyword\">var</span> defer = vow.defer();defer.reject(Error(<span class=\"string\">'Internal error'</span>));defer.promise().done(); <span class=\"comment\">// exception to be thrown</span></code></pre></div></div></div></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">delay</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">delay</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns a new promise that will be fulfilled in <code>delay</code> milliseconds if the promise is fulfilled,or immediately rejected if the promise is rejected.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">delay</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Number</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">timeout</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">timeout</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns a new promise that will be rejected in <code>timeout</code> millisecondsif the promise is not resolved beforehand.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">timeout</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Number</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl><div class=\"block\"><div class=\"block__header\">example</div><div class=\"block__content\"><div class=\"description\"><pre><code class=\"lang-js\"><span class=\"keyword\">var</span> defer = vow.defer(),    promiseWithTimeout1 = defer.promise().timeout(<span class=\"number\">50</span>),    promiseWithTimeout2 = defer.promise().timeout(<span class=\"number\">200</span>);setTimeout(    <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> {</span>        defer.resolve(<span class=\"string\">'ok'</span>);    },    <span class=\"number\">100</span>);promiseWithTimeout1.fail(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(reason)</span> {</span>    <span class=\"comment\">// promiseWithTimeout to be rejected in 50ms</span>});promiseWithTimeout2.then(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(value)</span> {</span>    <span class=\"comment\">// promiseWithTimeout to be fulfilled with \"'ok'\" value</span>});</code></pre></div></div></div></div></div></dd></dl></div></div><div class=\"block\"><div class=\"block__header\">class methods</div><div class=\"block__content\"><dl class=\"js-type__prop\"><dt class=\"js-type__key\">cast</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Coerces the given <code>value</code> to a promise, or returns the <code>value</code> if it&#39;s already a promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">all</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">iterable</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns a promise, that will be fulfilled only after all the items in <code>iterable</code> are fulfilled.If any of the <code>iterable</code> items gets rejected, then the returned promise will be rejected.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">iterable</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Array | Object</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">race</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">iterable</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns a promise, that will be fulfilled only when any of the items in <code>iterable</code> are fulfilled.If any of the <code>iterable</code> items gets rejected, then the returned promise will be rejected.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">iterable</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Array</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">resolve</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns a promise that has already been resolved with the given <code>value</code>.If <code>value</code> is a promise, the returned promise will have <code>value</code>&#39;s state.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">reject</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">reason</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns a promise that has already been rejected with the given <code>reason</code>.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">reason</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl></div></div></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">defer</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> () \u2192 <span class=\"js-type__name\">vow:Deferred</span><div class=\"details__content\"><div class=\"description\"><p>Creates a new deferred. This method is a factory method for <code>vow:Deferred</code> class.It&#39;s equivalent to <code>new vow.Deferred()</code>.</p></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Deferred</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">when</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span><span class=\"params__param params__param_optional\">, onFulfilled</span><span class=\"params__param params__param_optional\">, onRejected</span><span class=\"params__param params__param_optional\">, onProgress</span><span class=\"params__param params__param_optional\">, ctx</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Static equivalent to <code>promise.then</code>.If <code>value</code> is not a promise, then <code>value</code> is treated as a fulfilled promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onFulfilled<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided value after the promise has been fulfilled</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onRejected<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided reason after the promise has been rejected</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onProgress<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided value after the promise has been notified</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callbacks execution</p></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">fail</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span><span class=\"params__param\">, onRejected</span><span class=\"params__param params__param_optional\">, ctx</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Static equivalent to <code>promise.fail</code>.If <code>value</code> is not a promise, then <code>value</code> is treated as a fulfilled promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl><dl class=\"params__param\"><dt class=\"params__param-name\">onRejected</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided reason after the promise has been rejected</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callback execution</p></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">always</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span><span class=\"params__param\">, onResolved</span><span class=\"params__param params__param_optional\">, ctx</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Static equivalent to <code>promise.always</code>.If <code>value</code> is not a promise, then <code>value</code> is treated as a fulfilled promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl><dl class=\"params__param\"><dt class=\"params__param-name\">onResolved</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with the promise as an argument, after the promise has been resolved.</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callback execution</p></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">progress</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span><span class=\"params__param\">, onProgress</span><span class=\"params__param params__param_optional\">, ctx</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Static equivalent to <code>promise.progress</code>.If <code>value</code> is not a promise, then <code>value</code> is treated as a fulfilled promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl><dl class=\"params__param\"><dt class=\"params__param-name\">onProgress</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided value after the promise has been notified</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callback execution</p></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">spread</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span><span class=\"params__param params__param_optional\">, onFulfilled</span><span class=\"params__param params__param_optional\">, onRejected</span><span class=\"params__param params__param_optional\">, ctx</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Static equivalent to <code>promise.spread</code>.If <code>value</code> is not a promise, then <code>value</code> is treated as a fulfilled promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onFulfilled<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided value after the promise has been fulfilled</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onRejected<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided reason after the promise has been rejected</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callbacks execution</p></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">done</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span><span class=\"params__param params__param_optional\">, onFulfilled</span><span class=\"params__param params__param_optional\">, onRejected</span><span class=\"params__param params__param_optional\">, onProgress</span><span class=\"params__param params__param_optional\">, ctx</span></span>)<div class=\"details__content\"><div class=\"description\"><p>Static equivalent to <code>promise.done</code>.If <code>value</code> is not a promise, then <code>value</code> is treated as a fulfilled promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onFulfilled<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided value after the promise has been fulfilled</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onRejected<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided reason after the promise has been rejected</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">onProgress<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"><p>Callback that will be invoked with a provided value after the promise has been notified</p></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">ctx<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Object</div><div class=\"description\"><p>Context of the callbacks execution</p></div></dd></dl></div></div></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">isPromise</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span></span>) \u2192 <span class=\"js-type__name\">Boolean</span><div class=\"details__content\"><div class=\"description\"><p>Checks whether the given <code>value</code> is a promise-like object</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">Boolean</div><div class=\"description\"></div></dd></dl><div class=\"block\"><div class=\"block__header\">example</div><div class=\"block__content\"><div class=\"description\"><pre><code class=\"lang-js\">vow.isPromise(<span class=\"string\">'something'</span>); <span class=\"comment\">// returns false</span>vow.isPromise(vow.defer().promise()); <span class=\"comment\">// returns true</span>vow.isPromise({ then : <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> {</span> }); <span class=\"comment\">// returns true</span></code></pre></div></div></div></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">cast</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Coerces the given <code>value</code> to a promise, or returns the <code>value</code> if it&#39;s already a promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">valueOf</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span></span>) \u2192 <span class=\"js-type__name\">*</span><div class=\"details__content\"><div class=\"description\"><p>Static equivalent to <code>promise.valueOf</code>.If <code>value</code> is not a promise, then <code>value</code> is treated as a fulfilled promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">isFulfilled</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span></span>) \u2192 <span class=\"js-type__name\">Boolean</span><div class=\"details__content\"><div class=\"description\"><p>Static equivalent to <code>promise.isFulfilled</code>.If <code>value</code> is not a promise, then <code>value</code> is treated as a fulfilled promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">Boolean</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">isRejected</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span></span>) \u2192 <span class=\"js-type__name\">Boolean</span><div class=\"details__content\"><div class=\"description\"><p>Static equivalent to <code>promise.isRejected</code>.If <code>value</code> is not a promise, then <code>value</code> is treated as a fulfilled promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">Boolean</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">isResolved</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span></span>) \u2192 <span class=\"js-type__name\">Boolean</span><div class=\"details__content\"><div class=\"description\"><p>Static equivalent to <code>promise.isResolved</code>.If <code>value</code> is not a promise, then <code>value</code> is treated as a fulfilled promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">Boolean</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">resolve</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns a promise that has already been resolved with the given <code>value</code>.If <code>value</code> is a promise, the returned promise will have <code>value</code>&#39;s state.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">fulfill</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns a promise that has already been fulfilled with the given <code>value</code>.If <code>value</code> is a promise, the returned promise will be fulfilled with the fulfill/rejection value of <code>value</code>.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">reject</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">reason</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns a promise that has already been rejected with the given <code>reason</code>.If <code>reason</code> is a promise, the returned promise will be rejected with the fulfill/rejection value of <code>reason</code>.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">reason</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">invoke</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">fn</span><span class=\"params__param params__param_optional\">, args</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Invokes the given function <code>fn</code> with arguments <code>args</code></p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">fn</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Function</div><div class=\"description\"></div></dd></dl><dl class=\"params__param params__param_optional\"><dt class=\"params__param-name\">args<sup class=\"params__param-optional\">optional</sup></dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">...*</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl><div class=\"block\"><div class=\"block__header\">example</div><div class=\"block__content\"><div class=\"description\"><pre><code class=\"lang-js\"><span class=\"keyword\">var</span> promise1 = vow.invoke(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(value)</span> {</span>        <span class=\"keyword\">return</span> value;    }, <span class=\"string\">'ok'</span>),    promise2 = vow.invoke(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> {</span>        <span class=\"keyword\">throw</span> Error();    });promise1.isFulfilled(); <span class=\"comment\">// true</span>promise1.valueOf(); <span class=\"comment\">// 'ok'</span>promise2.isRejected(); <span class=\"comment\">// true</span>promise2.valueOf(); <span class=\"comment\">// instance of Error</span></code></pre></div></div></div></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">all</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">iterable</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns a promise, that will be fulfilled only after all the items in <code>iterable</code> are fulfilled.If any of the <code>iterable</code> items gets rejected, the promise will be rejected.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">iterable</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Array | Object</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl><div class=\"block\"><div class=\"block__header\">examples</div><div class=\"block__content\"><div class=\"description\"><p>with array:</p><pre><code class=\"lang-js\"><span class=\"keyword\">var</span> defer1 = vow.defer(),    defer2 = vow.defer();vow.all([defer1.promise(), defer2.promise(), <span class=\"number\">3</span>])    .then(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(value)</span> {</span>         <span class=\"comment\">// value is \"[1, 2, 3]\" here</span>    });defer1.resolve(<span class=\"number\">1</span>);defer2.resolve(<span class=\"number\">2</span>);</code></pre></div><div class=\"description\"><p>with object:</p><pre><code class=\"lang-js\"><span class=\"keyword\">var</span> defer1 = vow.defer(),    defer2 = vow.defer();vow.all({ p1 : defer1.promise(), p2 : defer2.promise(), p3 : <span class=\"number\">3</span> })    .then(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(value)</span> {</span>         <span class=\"comment\">// value is \"{ p1 : 1, p2 : 2, p3 : 3 }\" here</span>    });defer1.resolve(<span class=\"number\">1</span>);defer2.resolve(<span class=\"number\">2</span>);</code></pre></div></div></div></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">allResolved</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">iterable</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns a promise, that will be fulfilled only after all the items in <code>iterable</code> are resolved.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">iterable</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Array | Object</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl><div class=\"block\"><div class=\"block__header\">example</div><div class=\"block__content\"><div class=\"description\"><pre><code class=\"lang-js\"><span class=\"keyword\">var</span> defer1 = vow.defer(),    defer2 = vow.defer();vow.allResolved([defer1.promise(), defer2.promise()]).spread(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(promise1, promise2)</span> {</span>    promise1.isRejected(); <span class=\"comment\">// returns true</span>    promise1.valueOf(); <span class=\"comment\">// returns \"'error'\"</span>    promise2.isFulfilled(); <span class=\"comment\">// returns true</span>    promise2.valueOf(); <span class=\"comment\">// returns \"'ok'\"</span>});defer1.reject(<span class=\"string\">'error'</span>);defer2.resolve(<span class=\"string\">'ok'</span>);</code></pre></div></div></div></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">any</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">iterable</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns a promise, that will be fulfilled if any of the items in <code>iterable</code> is fulfilled.If all of the <code>iterable</code> items get rejected, the promise will be rejected (with the reason of the first rejected item).</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">iterable</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Array</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">anyResolved</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">iterable</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Returns a promise, that will be fulfilled only when any of the items in <code>iterable</code> is fulfilled.If any of the <code>iterable</code> items gets rejected, the promise will be rejected.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">iterable</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Array</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">delay</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span><span class=\"params__param\">, delay</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Static equivalent to <code>promise.delay</code>.If <code>value</code> is not a promise, then <code>value</code> is treated as a fulfilled promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl><dl class=\"params__param\"><dt class=\"params__param-name\">delay</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Number</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl><dl class=\"js-type__prop\"><dt class=\"js-type__key\">timeout</dt><dd class=\"js-type__val\"><div class=\"js-type js-type_type_function details\"><span class=\"js-type__name details__opener\">Function</span> (<span class=\"params params_view_list\"><span class=\"params__param\">value</span><span class=\"params__param\">, timeout</span></span>) \u2192 <span class=\"js-type__name\">vow:Promise</span><div class=\"details__content\"><div class=\"description\"><p>Static equivalent to <code>promise.timeout</code>.If <code>value</code> is not a promise, then <code>value</code> is treated as a fulfilled promise.</p></div><div class=\"block\"><div class=\"block__header\">arguments</div><div class=\"block__content params params_view_table\"><dl class=\"params__param\"><dt class=\"params__param-name\">value</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">*</div><div class=\"description\"></div></dd></dl><dl class=\"params__param\"><dt class=\"params__param-name\">timeout</dt><dd class=\"params__param-desc\"><div class=\"js-type__name\">Number</div><div class=\"description\"></div></dd></dl></div></div><dl class=\"returns\"><dt class=\"returns__name\">returns</dt><dd class=\"returns__desc\"><div class=\"js-type__name\">vow:Promise</div><div class=\"description\"></div></dd></dl></div></div></dd></dl>}</div></dd></dl></div><script type=\"text/javascript\" src=\"//yandex.st/jquery/2.0.3/jquery.js\"></script><script type=\"text/javascript\" src=\"index.js\"></script><script type=\"text/javascript\" src=\"metrika.js\"></script></body></html>",
  "embeddings": []
}
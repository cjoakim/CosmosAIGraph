{
  "libtype": "npm",
  "libname": "first-mate",
  "url": "http://atom.github.io/first-mate",
  "html": "<!doctype html><html>  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"chrome=1\">    <title>first-mate by atom</title>    <link rel=\"stylesheet\" href=\"stylesheets/styles.css\">    <link rel=\"stylesheet\" href=\"stylesheets/pygment_trac.css\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\">    <!--[if lt IE 9]>    <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>    <![endif]-->  </head>  <body>    <div class=\"wrapper\">      <header>        <h1>first-mate</h1>        <p>TextMate helpers</p>        <p class=\"view\"><a href=\"https://github.com/atom/first-mate\">View the Project on GitHub <small>atom/first-mate</small></a></p>        <ul>          <li><a href=\"https://github.com/atom/first-mate/zipball/master\">Download <strong>ZIP File</strong></a></li>          <li><a href=\"https://github.com/atom/first-mate/tarball/master\">Download <strong>TAR Ball</strong></a></li>          <li><a href=\"https://github.com/atom/first-mate\">View On <strong>GitHub</strong></a></li>        </ul>      </header>      <section>        <h1><a name=\"first-mate-\" class=\"anchor\" href=\"#first-mate-\"><span class=\"octicon octicon-link\"></span></a>First Mate <a href=\"https://travis-ci.org/atom/first-mate\"><img src=\"https://travis-ci.org/atom/first-mate.png\" alt=\"Build Status\"></a></h1><p>TextMate helpers</p><h2><a name=\"installing\" class=\"anchor\" href=\"#installing\"><span class=\"octicon octicon-link\"></span></a>Installing</h2><div class=\"highlight highlight-sh\"><pre>npm install first-mate</pre></div><h2><a name=\"using\" class=\"anchor\" href=\"#using\"><span class=\"octicon octicon-link\"></span></a>Using</h2><h3><a name=\"scopeselector\" class=\"anchor\" href=\"#scopeselector\"><span class=\"octicon octicon-link\"></span></a>ScopeSelector</h3><div class=\"highlight highlight-coffeescript\"><pre><span class=\"p\">{</span><span class=\"nx\">ScopeSelector</span><span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span> <span class=\"s\">'first-mate'</span><span class=\"nv\">selector = </span><span class=\"k\">new</span> <span class=\"nx\">ScopeSelector</span><span class=\"p\">(</span><span class=\"s\">'a | b'</span><span class=\"p\">)</span><span class=\"nx\">selector</span><span class=\"p\">.</span><span class=\"nx\">matches</span><span class=\"p\">([</span><span class=\"s\">'c'</span><span class=\"p\">])</span> <span class=\"c1\"># false</span><span class=\"nx\">selector</span><span class=\"p\">.</span><span class=\"nx\">matches</span><span class=\"p\">([</span><span class=\"s\">'a'</span><span class=\"p\">])</span> <span class=\"c1\"># true</span></pre></div><h3><a name=\"grammarregistry\" class=\"anchor\" href=\"#grammarregistry\"><span class=\"octicon octicon-link\"></span></a>GrammarRegistry</h3><div class=\"highlight highlight-coffeescript\"><pre><span class=\"p\">{</span><span class=\"nx\">GrammarRegistry</span><span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span> <span class=\"s\">'first-mate'</span><span class=\"nv\">registry = </span><span class=\"k\">new</span> <span class=\"nx\">GrammarRegistry</span><span class=\"p\">()</span><span class=\"nv\">grammar = </span><span class=\"nx\">registry</span><span class=\"p\">.</span><span class=\"nx\">loadGrammarSync</span><span class=\"p\">(</span><span class=\"s\">'./spec/fixtures/javascript.json'</span><span class=\"p\">)</span><span class=\"p\">{</span><span class=\"nx\">tokens</span><span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">grammar</span><span class=\"p\">.</span><span class=\"nx\">tokenizeLine</span><span class=\"p\">(</span><span class=\"s\">'var offset = 3;'</span><span class=\"p\">)</span><span class=\"k\">for</span> <span class=\"p\">{</span><span class=\"nx\">value</span><span class=\"p\">,</span> <span class=\"nx\">scopes</span><span class=\"p\">}</span> <span class=\"k\">in</span> <span class=\"nx\">tokens</span>  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s\">\"Token text: '</span><span class=\"si\">#{</span><span class=\"nx\">value</span><span class=\"si\">}</span><span class=\"s\">' with scopes: </span><span class=\"si\">#{</span><span class=\"nx\">scopes</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"p\">)</span></pre></div><h4><a name=\"loadgrammargrammarpath-callback\" class=\"anchor\" href=\"#loadgrammargrammarpath-callback\"><span class=\"octicon octicon-link\"></span></a>loadGrammar(grammarPath, callback)</h4><p>Asynchronously load a grammar and add it to the registry.</p><p><code>grammarPath</code> - A string path to the grammar file.</p><p><code>callback</code> - A function to call after the grammar is read and added to theregistry.  The callback receives <code>(error, grammar)</code> arguments.</p><h4><a name=\"loadgrammarsyncgrammarpath\" class=\"anchor\" href=\"#loadgrammarsyncgrammarpath\"><span class=\"octicon octicon-link\"></span></a>loadGrammarSync(grammarPath)</h4><p>Synchronously load a grammar and add it to the registry.</p><p><code>grammarPath</code> - A string path to the grammar file.</p><p>Returns a <code>Grammar</code> instance.</p><h3><a name=\"grammar\" class=\"anchor\" href=\"#grammar\"><span class=\"octicon octicon-link\"></span></a>Grammar</h3><h4><a name=\"tokenizelineline-rulestack-firstline\" class=\"anchor\" href=\"#tokenizelineline-rulestack-firstline\"><span class=\"octicon octicon-link\"></span></a>tokenizeLine(line, [ruleStack], [firstLine])</h4><p>Generate the tokenize for the given line of text.</p><p><code>line</code> - The string text of the line.</p><p><code>ruleStack</code> - An array of Rule objects that was returned from a previous callto this method.</p><p><code>firstLine</code> - <code>true</code> to indicate that the very first line is being tokenized.</p><p>Returns an object with a <code>tokens</code> key pointing to an array of token objectsand a <code>ruleStack</code> key pointing to an array of rules to pass to this methodon future calls for lines proceeding the line that was just tokenized.</p><h4><a name=\"tokenizelinestext\" class=\"anchor\" href=\"#tokenizelinestext\"><span class=\"octicon octicon-link\"></span></a>tokenizeLines(text)</h4><p><code>text</code> - The string text possibly containing newlines.</p><p>Returns an array of tokens for each line tokenized.</p><h2><a name=\"developing\" class=\"anchor\" href=\"#developing\"><span class=\"octicon octicon-link\"></span></a>Developing</h2><ul><li>Clone the repository</li><li>Run <code>npm install</code></li><li>Run <code>npm test</code> to run the specs</li><li>Run <code>npm run benchmark</code> to benchmark fully tokenizing jQuery 2.0.3</li></ul>      </section>      <footer>        <p>This project is maintained by <a href=\"https://github.com/atom\">atom</a></p>        <p><small>Hosted on GitHub Pages &mdash; Theme by <a href=\"https://github.com/orderedlist\">orderedlist</a></small></p>      </footer>    </div>    <script src=\"javascripts/scale.fix.js\"></script>      </body></html>",
  "embeddings": []
}
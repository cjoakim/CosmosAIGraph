{
  "libtype": "npm",
  "libname": "service-worker-mock",
  "url": "https://github.com/pinterest/service-workers/tree/master/packages/service-worker-mock",
  "html": "{\"payload\":{\"allShortcutsEnabled\":false,\"path\":\"packages/service-worker-mock\",\"repo\":{\"id\":78587680,\"defaultBranch\":\"master\",\"name\":\"service-workers\",\"ownerLogin\":\"zackargyle\",\"currentUserCanPush\":false,\"isFork\":false,\"isEmpty\":false,\"createdAt\":\"2017-01-11T00:34:59.000Z\",\"ownerAvatar\":\"https://avatars.githubusercontent.com/u/3934294?v=4\",\"public\":true,\"private\":false,\"isOrgOwned\":false},\"currentUser\":null,\"refInfo\":{\"name\":\"master\",\"listCacheKey\":\"v0:1581533886.0\",\"canEdit\":false,\"refType\":\"branch\",\"currentOid\":\"526ee36ece5a761dfaa0464442f3ad6d9da56f8c\"},\"tree\":{\"items\":[{\"name\":\"__tests__\",\"path\":\"packages/service-worker-mock/__tests__\",\"contentType\":\"directory\"},{\"name\":\"models\",\"path\":\"packages/service-worker-mock/models\",\"contentType\":\"directory\"},{\"name\":\"utils\",\"path\":\"packages/service-worker-mock/utils\",\"contentType\":\"directory\"},{\"name\":\"LICENSE\",\"path\":\"packages/service-worker-mock/LICENSE\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"packages/service-worker-mock/README.md\",\"contentType\":\"file\"},{\"name\":\"fetch.js\",\"path\":\"packages/service-worker-mock/fetch.js\",\"contentType\":\"file\"},{\"name\":\"index.js\",\"path\":\"packages/service-worker-mock/index.js\",\"contentType\":\"file\"},{\"name\":\"package.json\",\"path\":\"packages/service-worker-mock/package.json\",\"contentType\":\"file\"},{\"name\":\"yarn.lock\",\"path\":\"packages/service-worker-mock/yarn.lock\",\"contentType\":\"file\"}],\"templateDirectorySuggestionUrl\":null,\"readme\":{\"displayName\":\"README.md\",\"richText\":\"<article class=\\\"markdown-body entry-content container-lg\\\" itemprop=\\\"text\\\"><div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h1 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Service Worker Mock</h1><a id=\\\"user-content-service-worker-mock\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Service Worker Mock\\\" href=\\\"#service-worker-mock\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">A mock service worker environment generator.</p>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Why?</h2><a id=\\\"user-content-why\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Why?\\\" href=\\\"#why\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">Testing service workers is difficult. Each file produces side-effects by calls to <code>self.addEventListener</code>, and the service worker environment is unlike a normal web or node context. This package makes it easy to turn a Node.js environment into a faux service worker environment. Additionally, it adds some helpful methods for testing integrations.</p>\\n<p dir=\\\"auto\\\">The service worker mock creates an environment with the following properties, based on the current <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\\\" rel=\\\"nofollow\\\">Mozilla Service Worker Docs</a>.</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const env = {\\n  // Environment polyfills\\n  skipWaiting: Function,\\n  caches: CacheStorage,\\n  clients: Clients,\\n  registration: ServiceWorkerRegistration,\\n  addEventListener: Function,\\n  Request: constructor Function,\\n  Response: constructor Function,\\n  URL: constructor Function,\\n\\n  // Test helpers\\n  listeners: Map,\\n  trigger: Function,\\n  snapshot: Function,\\n};\\\"><pre><span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">env</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-c\\\">// Environment polyfills</span>\\n  <span class=\\\"pl-c1\\\">skipWaiting</span>: <span class=\\\"pl-v\\\">Function</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">caches</span>: <span class=\\\"pl-v\\\">CacheStorage</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">clients</span>: <span class=\\\"pl-v\\\">Clients</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">registration</span>: <span class=\\\"pl-v\\\">ServiceWorkerRegistration</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">addEventListener</span>: <span class=\\\"pl-v\\\">Function</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">Request</span>: <span class=\\\"pl-s1\\\">constructor</span> <span class=\\\"pl-v\\\">Function</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">Response</span>: <span class=\\\"pl-s1\\\">constructor</span> <span class=\\\"pl-v\\\">Function</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">URL</span>: <span class=\\\"pl-s1\\\">constructor</span> <span class=\\\"pl-v\\\">Function</span><span class=\\\"pl-kos\\\">,</span>\\n\\n  <span class=\\\"pl-c\\\">// Test helpers</span>\\n  <span class=\\\"pl-c1\\\">listeners</span>: <span class=\\\"pl-v\\\">Map</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">trigger</span>: <span class=\\\"pl-v\\\">Function</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">snapshot</span>: <span class=\\\"pl-v\\\">Function</span><span class=\\\"pl-kos\\\">,</span>\\n<span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">;</span></pre></div>\\n<table>\\n<thead>\\n<tr>\\n<th>Test Helper</th>\\n<th>description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>listeners</code></td>\\n<td>[<code>Map</code>] A key/value map of active listeners (<code>install</code>/<code>activate</code>/<code>fetch</code>/etc).</td>\\n</tr>\\n<tr>\\n<td><code>trigger</code></td>\\n<td>[<code>Function</code>] Used to trigger active listeners (<code>await self.trigger('install')</code>).</td>\\n</tr>\\n<tr>\\n<td><code>snapshot</code></td>\\n<td>[<code>Function</code>] Used to generate a snapshot of the service worker internals (see below).</td>\\n</tr>\\n</tbody>\\n</table>\\n<table>\\n<thead>\\n<tr>\\n<th>Snapshot Property</th>\\n<th>description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>caches</code></td>\\n<td>[<code>Object</code>] A key/value map of current cache contents.</td>\\n</tr>\\n<tr>\\n<td><code>clients</code></td>\\n<td>[<code>Array</code>] A list of active clients.</td>\\n</tr>\\n<tr>\\n<td><code>notifications</code></td>\\n<td>[<code>Array</code>] A list of active notifications</td>\\n</tr>\\n</tbody>\\n</table>\\n<p dir=\\\"auto\\\">Additionally we provide a fetch mock in <code>service-worker-mock/fetch</code> to easily get up and running (see Getting Started for example).</p>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Getting Started</h2><a id=\\\"user-content-getting-started\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Getting Started\\\" href=\\\"#getting-started\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">The service worker mock is best used by applying its result to the global scope, then calling <code>require('../sw.js')</code> with the path to your service worker file. The file will use the global mocks for things like adding event listeners.</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const makeServiceWorkerEnv = require('service-worker-mock');\\nconst makeFetchMock = require('service-worker-mock/fetch');\\n\\ndescribe('Service worker', () =&gt; {\\n  beforeEach(() =&gt; {\\n    Object.assign(\\n      global,\\n      makeServiceWorkerEnv(),\\n      makeFetchMock(),\\n      // If you're using sinon ur similar you'd probably use below instead of makeFetchMock\\n      // fetch: sinon.stub().returns(Promise.resolve())\\n    );\\n    jest.resetModules();\\n  });\\n  it('should add listeners', () =&gt; {\\n    require('../sw.js');\\n    expect(self.listeners.get('install')).toBeDefined();\\n    expect(self.listeners.get('activate')).toBeDefined();\\n    expect(self.listeners.get('fetch')).toBeDefined();\\n  });\\n});\\\"><pre><span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">makeServiceWorkerEnv</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'service-worker-mock'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">makeFetchMock</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'service-worker-mock/fetch'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n\\n<span class=\\\"pl-en\\\">describe</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'Service worker'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-en\\\">beforeEach</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-kos\\\">{</span>\\n    <span class=\\\"pl-v\\\">Object</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">assign</span><span class=\\\"pl-kos\\\">(</span>\\n      <span class=\\\"pl-s1\\\">global</span><span class=\\\"pl-kos\\\">,</span>\\n      <span class=\\\"pl-s1\\\">makeServiceWorkerEnv</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">,</span>\\n      <span class=\\\"pl-s1\\\">makeFetchMock</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">,</span>\\n      <span class=\\\"pl-c\\\">// If you're using sinon ur similar you'd probably use below instead of makeFetchMock</span>\\n      <span class=\\\"pl-c\\\">// fetch: sinon.stub().returns(Promise.resolve())</span>\\n    <span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n    <span class=\\\"pl-s1\\\">jest</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">resetModules</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n  <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n  <span class=\\\"pl-en\\\">it</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'should add listeners'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-kos\\\">{</span>\\n    <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'../sw.js'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n    <span class=\\\"pl-en\\\">expect</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">self</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">listeners</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">get</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'install'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">toBeDefined</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n    <span class=\\\"pl-en\\\">expect</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">self</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">listeners</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">get</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'activate'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">toBeDefined</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n    <span class=\\\"pl-en\\\">expect</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">self</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">listeners</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">get</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'fetch'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">toBeDefined</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n  <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n<span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Use</h2><a id=\\\"user-content-use\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Use\\\" href=\\\"#use\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">The following is an example snippet derived from <a href=\\\"https://github.com/pinterest/service-workers/blob/master/packages/service-worker-mock/__tests__/basic.js\\\"><strong>tests</strong>/basic.js</a>. The test is based on the <a href=\\\"https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/basic/service-worker.js\\\">service worker example</a> provided by Google. In it, we will verify that on <code>activate</code>, the service worker deletes old caches and creates the new one.</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const makeServiceWorkerEnv = require('service-worker-mock');\\n\\ndescribe('Service worker', () =&gt; {\\n  beforeEach(() =&gt; {\\n    Object.assign(global, makeServiceWorkerEnv());\\n    jest.resetModules();\\n  });\\n  \\n  it('should delete old caches on activate', async () =&gt; {\\n      require('../sw.js');\\n\\n      // Create old cache\\n      await self.caches.open('OLD_CACHE');\\n      expect(self.snapshot().caches.OLD_CACHE).toBeDefined();\\n\\n      // Activate and verify old cache is removed\\n      await self.trigger('activate');\\n      expect(self.snapshot().caches.OLD_CACHE).toBeUndefined();\\n      expect(self.snapshot().caches['precache-v1']).toBeDefined();\\n  });\\n});\\\"><pre><span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">makeServiceWorkerEnv</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'service-worker-mock'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n\\n<span class=\\\"pl-en\\\">describe</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'Service worker'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-en\\\">beforeEach</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-kos\\\">{</span>\\n    <span class=\\\"pl-v\\\">Object</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">assign</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">global</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-s1\\\">makeServiceWorkerEnv</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n    <span class=\\\"pl-s1\\\">jest</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">resetModules</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n  <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n  \\n  <span class=\\\"pl-en\\\">it</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'should delete old caches on activate'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-k\\\">async</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-kos\\\">{</span>\\n      <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'../sw.js'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n\\n      <span class=\\\"pl-c\\\">// Create old cache</span>\\n      <span class=\\\"pl-k\\\">await</span> <span class=\\\"pl-s1\\\">self</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">caches</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">open</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'OLD_CACHE'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n      <span class=\\\"pl-en\\\">expect</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">self</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">snapshot</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">caches</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">OLD_CACHE</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">toBeDefined</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n\\n      <span class=\\\"pl-c\\\">// Activate and verify old cache is removed</span>\\n      <span class=\\\"pl-k\\\">await</span> <span class=\\\"pl-s1\\\">self</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">trigger</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'activate'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n      <span class=\\\"pl-en\\\">expect</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">self</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">snapshot</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">caches</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">OLD_CACHE</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">toBeUndefined</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n      <span class=\\\"pl-en\\\">expect</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">self</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">snapshot</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">caches</span><span class=\\\"pl-kos\\\">[</span><span class=\\\"pl-s\\\">'precache-v1'</span><span class=\\\"pl-kos\\\">]</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">toBeDefined</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n  <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span>\\n<span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">;</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">License</h2><a id=\\\"user-content-license\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: License\\\" href=\\\"#license\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">MIT</p>\\n</article>\",\"errorMessage\":null,\"headerInfo\":{\"toc\":[{\"level\":1,\"text\":\"Service Worker Mock\",\"anchor\":\"service-worker-mock\",\"htmlText\":\"Service Worker Mock\"},{\"level\":2,\"text\":\"Why?\",\"anchor\":\"why\",\"htmlText\":\"Why?\"},{\"level\":2,\"text\":\"Getting Started\",\"anchor\":\"getting-started\",\"htmlText\":\"Getting Started\"},{\"level\":2,\"text\":\"Use\",\"anchor\":\"use\",\"htmlText\":\"Use\"},{\"level\":2,\"text\":\"License\",\"anchor\":\"license\",\"htmlText\":\"License\"}],\"siteNavLoginPath\":\"/login?return_to=https%3A%2F%2Fgithub.com%2Fzackargyle%2Fservice-workers%2Ftree%2Fmaster%2Fpackages%2Fservice-worker-mock\"}},\"totalCount\":9,\"showBranchInfobar\":false},\"fileTree\":{\"packages\":{\"items\":[{\"name\":\"generate-service-worker\",\"path\":\"packages/generate-service-worker\",\"contentType\":\"directory\"},{\"name\":\"service-worker-mock\",\"path\":\"packages/service-worker-mock\",\"contentType\":\"directory\"},{\"name\":\"service-worker-plugin\",\"path\":\"packages/service-worker-plugin\",\"contentType\":\"directory\"}],\"totalCount\":3},\"\":{\"items\":[{\"name\":\".github\",\"path\":\".github\",\"contentType\":\"directory\"},{\"name\":\"demo\",\"path\":\"demo\",\"contentType\":\"directory\"},{\"name\":\"packages\",\"path\":\"packages\",\"contentType\":\"directory\"},{\"name\":\"scripts\",\"path\":\"scripts\",\"contentType\":\"directory\"},{\"name\":\"testing\",\"path\":\"testing\",\"contentType\":\"directory\"},{\"name\":\".babelrc\",\"path\":\".babelrc\",\"contentType\":\"file\"},{\"name\":\".editorconfig\",\"path\":\".editorconfig\",\"contentType\":\"file\"},{\"name\":\".eslintignore\",\"path\":\".eslintignore\",\"contentType\":\"file\"},{\"name\":\".eslintrc.json\",\"path\":\".eslintrc.json\",\"contentType\":\"file\"},{\"name\":\".gitignore\",\"path\":\".gitignore\",\"contentType\":\"file\"},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"README.md\",\"contentType\":\"file\"},{\"name\":\"package.json\",\"path\":\"package.json\",\"contentType\":\"file\"},{\"name\":\"yarn.lock\",\"path\":\"yarn.lock\",\"contentType\":\"file\"}],\"totalCount\":14}},\"fileTreeProcessingTime\":6.048444,\"foldersToFetch\":[],\"treeExpanded\":true,\"symbolsExpanded\":false,\"csrf_tokens\":{\"/zackargyle/service-workers/branches\":{\"post\":\"SdlpTyybNJC3ni-6_Vax23jFoPMuTwoskbo6xhrmP8p6Cm2x5YYc4BnYgTWNNdw3siaXOfHJr1tWr3BCsvNC_w\"},\"/zackargyle/service-workers/branches/fetch_and_merge/master\":{\"post\":\"T14wXHEpBUukkFzmqVLsqMbYncSi4WI2RTWwRQOaEis4TPRuFbqUj5n1_0j5NBmxuRa8Li-ZjxvL9VwsuVmAJg\"},\"/zackargyle/service-workers/branches/fetch_and_merge/master?discard_changes=true\":{\"post\":\"u-M3lDHqFT7edk-uHe0_i00bReFGHoIFQMO4Y89pAJLM8fOmVXmE-uMT7ABNi8qSMtVkC8tmbyjOA1QKdaqSnw\"}}},\"title\":\"service-workers/packages/service-worker-mock at master \u00b7 zackargyle/service-workers\"}",
  "embeddings": []
}
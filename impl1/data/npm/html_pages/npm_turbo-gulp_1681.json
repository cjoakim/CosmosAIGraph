{
  "libtype": "npm",
  "libname": "turbo-gulp",
  "url": "https://demurgos.github.io/turbo-gulp",
  "html": "<!doctype html><html class=\"default no-js\"><head><meta charset=\"utf-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><title>Web Build Tools</title><meta name=\"description\" content=\"\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><link rel=\"stylesheet\" href=\"assets/css/main.css\"></head><body><header><div class=\"tsd-page-toolbar\"><div class=\"container\"><div class=\"table-wrap\"><div class=\"table-cell\" id=\"tsd-search\" data-index=\"assets/js/search.js\" data-base=\".\"><div class=\"field\"><label for=\"tsd-search-field\" class=\"tsd-widget search no-caption\">Search</label><input id=\"tsd-search-field\" type=\"text\" /></div><ul class=\"results\"><li class=\"state loading\">Preparing search index...</li><li class=\"state failure\">The search index is not available</li></ul><a href=\"index.html\" class=\"title\">Web Build Tools</a></div><div class=\"table-cell\" id=\"tsd-widgets\"><div id=\"tsd-filter\"><a href=\"#\" class=\"tsd-widget options no-caption\" data-toggle=\"options\">Options</a><div class=\"tsd-filter-group\"><div class=\"tsd-select\" id=\"tsd-filter-visibility\"><span class=\"tsd-select-label\">All</span><ul class=\"tsd-select-list\"><li data-value=\"public\">Public</li><li data-value=\"protected\">Public/Protected</li><li data-value=\"private\" class=\"selected\">All</li></ul></div><input type=\"checkbox\" id=\"tsd-filter-inherited\" checked /><label class=\"tsd-widget\" for=\"tsd-filter-inherited\">Inherited</label><input type=\"checkbox\" id=\"tsd-filter-externals\" checked /><label class=\"tsd-widget\" for=\"tsd-filter-externals\">Externals</label><input type=\"checkbox\" id=\"tsd-filter-only-exported\" /><label class=\"tsd-widget\" for=\"tsd-filter-only-exported\">Only exported</label></div></div><a href=\"#\" class=\"tsd-widget menu no-caption\" data-toggle=\"menu\">Menu</a></div></div></div></div><div class=\"tsd-page-title\"><div class=\"container\"><ul class=\"tsd-breadcrumb\"><li><a href=\"globals.html\">Globals</a></li></ul><h1>Web Build Tools</h1></div></div></header><div class=\"container container-main\"><div class=\"row\"><div class=\"col-8 col-content\"><div class=\"tsd-panel tsd-typography\"><a href=\"#turbo-gulp\" id=\"turbo-gulp\" style=\"color: inherit; text-decoration: none;\"><h1>Turbo Gulp</h1></a><p>Gulp tasks to boost high-quality projects.</p><p><a href=\"https://www.npmjs.com/package/turbo-gulp\"><img src=\"https://img.shields.io/npm/v/turbo-gulp.svg\" alt=\"npm\"></a><a href=\"https://github.com/demurgos/turbo-gulp\"><img src=\"https://img.shields.io/badge/Github-demurgos%2Fturbo--gulp-blue.svg\" alt=\"GitHub repository\"></a><a href=\"https://travis-ci.org/demurgos/turbo-gulp\"><img src=\"https://img.shields.io/travis/com/demurgos/turbo-gulp/master.svg\" alt=\"Build status\"></a><a href=\"https://codecov.io/gh/demurgos/turbo-gulp\"><img src=\"https://codecov.io/gh/demurgos/turbo-gulp/branch/master/graph/badge.svg\" alt=\"Codecov\"></a></p><p>This package was known as <code>demurgos-web-build-tools</code> before <code>v0.15.2</code> (2017-11-09).</p><p>This project started out because I wanted to avoid repeating complex configurations in every one of my projects.I solved it by centralizing most of logic for the tasks I need in this package. To further reduce the overhead of theconfiguration, the defaults use a sensible directory structure for Node projects.</p><p>The main features are:</p><ul><li>Support for multiple targets in a single project (for example <code>lib</code> and <code>example</code>)</li><li>Typescript builds, with support for custom typings, watch mode and custom compiler options</li><li>Tslint verification with type information</li><li>Mocha unit tests</li><li>Code coverage with <code>c8</code></li><li>Typedoc generation</li><li>Assets management: copy resources</li></ul><a href=\"#installation\" id=\"installation\" style=\"color: inherit; text-decoration: none;\"><h2>Installation</h2></a><p>Install the library as a dev-dependency:</p><pre><code class=\"language-shell\">npm install -D turbo-gulp</code></pre><p>Builds of the master branch are also regularly released using the <code>next</code> tag:</p><pre><code class=\"language-shell\">npm install -D turbo-gulp@next</code></pre><a href=\"#quick-start\" id=\"quick-start\" style=\"color: inherit; text-decoration: none;\"><h2>Quick start</h2></a><p><strong>TODO</strong>: Add better guide to configure repo and Travis CI, code coverage and codecov integrations.For the moment, take a look at this reference project: <a href=\"https://github.com/demurgos/incident\">Incident</a>.</p><p>Then use it in your Gulp file, here is an example:</p><pre><code class=\"language-typescript\"><span class=\"hljs-comment\">// Import the build tools and the gulp instance for this project</span><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> buildTools <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"turbo-gulp\"</span>;<span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> gulp <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"gulp\"</span>;<span class=\"hljs-comment\">// Project config shared by all the targets</span><span class=\"hljs-keyword\">const</span> project: buildTools.Project = {  root: __dirname,  packageJson: <span class=\"hljs-string\">\"package.json\"</span>,  buildDir: <span class=\"hljs-string\">\"build\"</span>,  distDir: <span class=\"hljs-string\">\"dist\"</span>,  srcDir: <span class=\"hljs-string\">\"src\"</span>,};<span class=\"hljs-comment\">// Configuration for a \"library\" target</span><span class=\"hljs-keyword\">const</span> lib: buildTools.LibTarget = {  <span class=\"hljs-comment\">// Project-wide config</span>  project,  <span class=\"hljs-comment\">// Name (used as a prefix for the tasks)</span>  name: <span class=\"hljs-string\">\"lib\"</span>,  <span class=\"hljs-comment\">// Override srcDir</span>  srcDir: <span class=\"hljs-string\">\"src/lib\"</span>,  scripts: [<span class=\"hljs-string\">\"**/*.ts\"</span>],  mainModule: <span class=\"hljs-string\">\"index\"</span>,  tscOptions: {    skipLibCheck: <span class=\"hljs-literal\">true</span>,  },  typedoc: {    dir: <span class=\"hljs-string\">\"typedoc\"</span>,    name: <span class=\"hljs-string\">\"Example lib\"</span>,  },  copy: [    {      name: <span class=\"hljs-string\">\"json\"</span>,      files: [<span class=\"hljs-string\">\"**/*.json\"</span>],    },  ],  clean: {    dirs: [<span class=\"hljs-string\">\"build/lib\"</span>, <span class=\"hljs-string\">\"dist/lib\"</span>],  },};<span class=\"hljs-comment\">// Generate and register project-wide tasks</span>buildTools.projectTasks.registerAll(gulp, project);<span class=\"hljs-comment\">// Generate and register the tasks for the lib target</span>buildTools.registerLibTasks(gulp, lib);</code></pre><p>You can then start using the tasks, for example <code>gulp lib:build</code>. Use <code>gulp --tasks</code> to list all the tasks.Check the documentation for the list of available tasks and configuration.</p><a href=\"#recommended-project-layout\" id=\"recommended-project-layout\" style=\"color: inherit; text-decoration: none;\"><h2>Recommended project layout</h2></a><p>Here</p><pre><code class=\"language-text\">.\u251c\u2500\u2500 build/          # Development builds\u251c\u2500\u2500 dist/           # Distributed files (this goes to npm)\u251c\u2500\u2500 docs/           # Custom documentation for the library\u251c\u2500\u2500 src/            # Scripts, assets and tests| \u251c\u2500\u2500 lib/          # Library source code| \u2514\u2500\u2500 test/         # Tests source code\u251c\u2500\u2500 CHANGELOG.md    # Description of the changes for each version\u251c\u2500\u2500 CONTRIBUTING.md # How to build and work on the project\u251c\u2500\u2500 LICENSE.md      # License file\u251c\u2500\u2500 NOTICE.md       # Notice for third-party tools (required by some licenses)\u251c\u2500\u2500 README.md       # Projects presentation\u251c\u2500\u2500 package.json    # Project&#39;s metadata\u251c\u2500\u2500 tsconfig.ts     # Default TS config file, used for the gulp file and to help the IDE\u2514\u2500\u2500 gulpfile.ts     # Definition of Gulp tasks</code></pre><a href=\"#usage\" id=\"usage\" style=\"color: inherit; text-decoration: none;\"><h2>Usage</h2></a><p>The build tools use the following hierarchy:</p><ul><li><strong>Project</strong>: It represents a unit of code to implement a library or application, it usually corresponds toa git repo or a single gulp file. A project is a set of targets (see below). The project configuration is shared byall the targets, it defines the general structure of your project: what is the root directory, the build directory,the base Typescript options, etc.</li><li><strong>Target</strong>: A target represents a unit of output. You can have some shared source code and use it to build multipletargets: for example, a library importable by other projects, a runnable demo, a test build using Mocha, a bundledversion for the browser, etc. The target options are specific to each type of output and allow you to configure howeach task is applied.</li><li><strong>Task</strong>: A task represents an operation provided by a target: <code>build</code>, <code>run</code>, <code>test</code>, etc. This is what you actuallyuse when calling Gulp. The task names have the form <code>targetName:taskName</code>. For example to generate the documentationof the library target <code>lib</code> using Typedoc, you can use <code>gulp lib:typedoc</code>. There are main tasks to do high-levelactions, and other tasks for fine-grained that are mostly available to integrate with other tools.</li></ul><a href=\"#license\" id=\"license\" style=\"color: inherit; text-decoration: none;\"><h2>License</h2></a><p><a href=\"./LICENSE.md\">MIT License</a></p></div></div><div class=\"col-4 col-menu menu-sticky-wrap menu-highlight\"><nav class=\"tsd-navigation primary\"><ul><li class=\"globals  \"><a href=\"globals.html\"><em>Globals</em></a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/index.html\">index</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/options_clean.html\">options/clean</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/project.html\">project</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/project_tasks_bump_major.html\">project-<wbr>tasks/bump-<wbr>major</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/project_tasks_bump_minor.html\">project-<wbr>tasks/bump-<wbr>minor</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/project_tasks_bump_patch.html\">project-<wbr>tasks/bump-<wbr>patch</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/project_tasks_format.html\">project-<wbr>tasks/format</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/project_tasks_index.html\">project-<wbr>tasks/index</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/project_tasks_lint.html\">project-<wbr>tasks/lint</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/project_tasks_tsconfig_json.html\">project-<wbr>tasks/tsconfig-<wbr>json</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/project_tasks_tslint_json.html\">project-<wbr>tasks/tslint-<wbr>json</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/require_all.html\">require-<wbr>all</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/target.html\">target</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/target_tasks_build_typescript.html\">target-<wbr>tasks/build-<wbr>typescript</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/target_tasks_clean.html\">target-<wbr>tasks/clean</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/target_tasks_copy.html\">target-<wbr>tasks/copy</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/target_tasks_coverage.html\">target-<wbr>tasks/coverage</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/target_tasks_mocha.html\">target-<wbr>tasks/mocha</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/target_tasks_mocha_main.html\">target-<wbr>tasks/mocha-<wbr>main</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/target_tasks_tsconfig_json.html\">target-<wbr>tasks/tsconfig-<wbr>json</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/target_tasks_typedoc.html\">target-<wbr>tasks/typedoc</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/targets_base.html\">targets/base</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/targets_lib.html\">targets/lib</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/targets_mocha.html\">targets/mocha</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/targets_node.html\">targets/node</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/types.html\">types</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/typescript.html\">typescript</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/utils_async_done.html\">utils/async-<wbr>done</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/utils_branch_publish.html\">utils/branch-<wbr>publish</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/utils_coverage.html\">utils/coverage</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/utils_git.html\">utils/git</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/utils_matcher.html\">utils/matcher</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/utils_mocha.html\">utils/mocha</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/utils_node_async.html\">utils/node-<wbr>async</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/utils_npm_publish.html\">utils/npm-<wbr>publish</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/utils_project.html\">utils/project</a></li><li class=\" tsd-kind-external-module\"><a href=\"modules/utils_utils.html\">utils/utils</a></li></ul></nav><nav class=\"tsd-navigation secondary menu-sticky\"><ul class=\"before-current\"></ul></nav></div></div></div><footer class=\"with-border-bottom\"><div class=\"container\"><h2>Legend</h2><div class=\"tsd-legend-group\"><ul class=\"tsd-legend\"><li class=\"tsd-kind-module\"><span class=\"tsd-kind-icon\">Module</span></li><li class=\"tsd-kind-object-literal\"><span class=\"tsd-kind-icon\">Object literal</span></li><li class=\"tsd-kind-variable\"><span class=\"tsd-kind-icon\">Variable</span></li><li class=\"tsd-kind-function\"><span class=\"tsd-kind-icon\">Function</span></li><li class=\"tsd-kind-function tsd-has-type-parameter\"><span class=\"tsd-kind-icon\">Function with type parameter</span></li><li class=\"tsd-kind-index-signature\"><span class=\"tsd-kind-icon\">Index signature</span></li><li class=\"tsd-kind-type-alias\"><span class=\"tsd-kind-icon\">Type alias</span></li><li class=\"tsd-kind-type-alias tsd-has-type-parameter\"><span class=\"tsd-kind-icon\">Type alias with type parameter</span></li></ul><ul class=\"tsd-legend\"><li class=\"tsd-kind-enum\"><span class=\"tsd-kind-icon\">Enumeration</span></li><li class=\"tsd-kind-enum-member\"><span class=\"tsd-kind-icon\">Enumeration member</span></li><li class=\"tsd-kind-property tsd-parent-kind-enum\"><span class=\"tsd-kind-icon\">Property</span></li><li class=\"tsd-kind-method tsd-parent-kind-enum\"><span class=\"tsd-kind-icon\">Method</span></li></ul><ul class=\"tsd-legend\"><li class=\"tsd-kind-interface\"><span class=\"tsd-kind-icon\">Interface</span></li><li class=\"tsd-kind-interface tsd-has-type-parameter\"><span class=\"tsd-kind-icon\">Interface with type parameter</span></li><li class=\"tsd-kind-constructor tsd-parent-kind-interface\"><span class=\"tsd-kind-icon\">Constructor</span></li><li class=\"tsd-kind-property tsd-parent-kind-interface\"><span class=\"tsd-kind-icon\">Property</span></li><li class=\"tsd-kind-method tsd-parent-kind-interface\"><span class=\"tsd-kind-icon\">Method</span></li><li class=\"tsd-kind-index-signature tsd-parent-kind-interface\"><span class=\"tsd-kind-icon\">Index signature</span></li></ul><ul class=\"tsd-legend\"><li class=\"tsd-kind-class\"><span class=\"tsd-kind-icon\">Class</span></li><li class=\"tsd-kind-class tsd-has-type-parameter\"><span class=\"tsd-kind-icon\">Class with type parameter</span></li><li class=\"tsd-kind-constructor tsd-parent-kind-class\"><span class=\"tsd-kind-icon\">Constructor</span></li><li class=\"tsd-kind-property tsd-parent-kind-class\"><span class=\"tsd-kind-icon\">Property</span></li><li class=\"tsd-kind-method tsd-parent-kind-class\"><span class=\"tsd-kind-icon\">Method</span></li><li class=\"tsd-kind-accessor tsd-parent-kind-class\"><span class=\"tsd-kind-icon\">Accessor</span></li><li class=\"tsd-kind-index-signature tsd-parent-kind-class\"><span class=\"tsd-kind-icon\">Index signature</span></li></ul><ul class=\"tsd-legend\"><li class=\"tsd-kind-constructor tsd-parent-kind-class tsd-is-inherited\"><span class=\"tsd-kind-icon\">Inherited constructor</span></li><li class=\"tsd-kind-property tsd-parent-kind-class tsd-is-inherited\"><span class=\"tsd-kind-icon\">Inherited property</span></li><li class=\"tsd-kind-method tsd-parent-kind-class tsd-is-inherited\"><span class=\"tsd-kind-icon\">Inherited method</span></li><li class=\"tsd-kind-accessor tsd-parent-kind-class tsd-is-inherited\"><span class=\"tsd-kind-icon\">Inherited accessor</span></li></ul><ul class=\"tsd-legend\"><li class=\"tsd-kind-property tsd-parent-kind-class tsd-is-protected\"><span class=\"tsd-kind-icon\">Protected property</span></li><li class=\"tsd-kind-method tsd-parent-kind-class tsd-is-protected\"><span class=\"tsd-kind-icon\">Protected method</span></li><li class=\"tsd-kind-accessor tsd-parent-kind-class tsd-is-protected\"><span class=\"tsd-kind-icon\">Protected accessor</span></li></ul><ul class=\"tsd-legend\"><li class=\"tsd-kind-property tsd-parent-kind-class tsd-is-private\"><span class=\"tsd-kind-icon\">Private property</span></li><li class=\"tsd-kind-method tsd-parent-kind-class tsd-is-private\"><span class=\"tsd-kind-icon\">Private method</span></li><li class=\"tsd-kind-accessor tsd-parent-kind-class tsd-is-private\"><span class=\"tsd-kind-icon\">Private accessor</span></li></ul><ul class=\"tsd-legend\"><li class=\"tsd-kind-property tsd-parent-kind-class tsd-is-static\"><span class=\"tsd-kind-icon\">Static property</span></li><li class=\"tsd-kind-call-signature tsd-parent-kind-class tsd-is-static\"><span class=\"tsd-kind-icon\">Static method</span></li></ul></div></div></footer><div class=\"container tsd-generator\"><p>Generated using <a href=\"https://typedoc.org/\" target=\"_blank\">TypeDoc</a></p></div><div class=\"overlay\"></div><script src=\"assets/js/main.js\"></script><script>if (location.protocol == 'file:') document.write('<script src=\"assets/js/search.js\"><' + '/script>');</script></body></html>",
  "embeddings": []
}
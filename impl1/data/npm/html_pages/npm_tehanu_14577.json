{
  "libtype": "npm",
  "libname": "tehanu",
  "url": "https://github.com/prantlf/tehanu/tree/master/packages/index#readme",
  "html": "{\"payload\":{\"allShortcutsEnabled\":false,\"path\":\"packages/index\",\"repo\":{\"id\":365626803,\"defaultBranch\":\"master\",\"name\":\"tehanu\",\"ownerLogin\":\"prantlf\",\"currentUserCanPush\":false,\"isFork\":false,\"isEmpty\":false,\"createdAt\":\"2021-05-08T23:02:40.000Z\",\"ownerAvatar\":\"https://avatars.githubusercontent.com/u/733193?v=4\",\"public\":true,\"private\":false,\"isOrgOwned\":false},\"currentUser\":null,\"refInfo\":{\"name\":\"master\",\"listCacheKey\":\"v0:1654439521.389914\",\"canEdit\":false,\"refType\":\"branch\",\"currentOid\":\"2798ef43f256a28171089d06df2fd03402c5679b\"},\"tree\":{\"items\":[{\"name\":\"lib\",\"path\":\"packages/index/lib\",\"contentType\":\"directory\"},{\"name\":\"test\",\"path\":\"packages/index/test\",\"contentType\":\"directory\"},{\"name\":\"README.md\",\"path\":\"packages/index/README.md\",\"contentType\":\"file\"},{\"name\":\"build.js\",\"path\":\"packages/index/build.js\",\"contentType\":\"file\"},{\"name\":\"install-run.png\",\"path\":\"packages/index/install-run.png\",\"contentType\":\"file\"},{\"name\":\"package.json\",\"path\":\"packages/index/package.json\",\"contentType\":\"file\"}],\"templateDirectorySuggestionUrl\":null,\"readme\":{\"displayName\":\"README.md\",\"richText\":\"<article class=\\\"markdown-body entry-content container-lg\\\" itemprop=\\\"text\\\"><div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h1 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Test Harness Core</h1><a id=\\\"user-content-test-harness-core\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Test Harness Core\\\" href=\\\"#test-harness-core\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\"><a href=\\\"http://badge.fury.io/js/tehanu\\\" rel=\\\"nofollow\\\"><img src=\\\"https://camo.githubusercontent.com/a80059360c980e8ccabf8935c377c2c62a3ca3903b1ce93bf288e2550e96fe5e/68747470733a2f2f62616467652e667572792e696f2f6a732f746568616e752e706e67\\\" alt=\\\"NPM version\\\" data-canonical-src=\\\"https://badge.fury.io/js/tehanu.png\\\" style=\\\"max-width: 100%;\\\"></a></p>\\n<p dir=\\\"auto\\\">Provides a <a href=\\\"https://github.com/prantlf/tehanu#readme\\\">framework</a> for creation and execution of test suites.</p>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Synopsis</h2><a id=\\\"user-content-synopsis\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Synopsis\\\" href=\\\"#synopsis\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\"><a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"/prantlf/tehanu/blob/master/packages/index/install-run.png\\\"><img src=\\\"/prantlf/tehanu/raw/master/packages/index/install-run.png\\\" alt=\\\"Install and run\\\" style=\\\"max-width: 100%;\\\"></a></p>\\n<p dir=\\\"auto\\\">test.cjs:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const test = require('tehanu')(__filename)\\n\\ntest('dummy', () =&gt; {})\\\"><pre><span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">test</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'tehanu'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">__filename</span><span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-s1\\\">test</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'dummy'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-kos\\\">{</span><span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n<p dir=\\\"auto\\\">test.mjs:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import tehanu from 'tehanu'\\n\\nconst test = tehanu('sum')\\n\\ntest('dummy', () =&gt; {})\\\"><pre><span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-s1\\\">tehanu</span> <span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s\\\">'tehanu'</span>\\n\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">test</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">tehanu</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'sum'</span><span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-s1\\\">test</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'dummy'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-kos\\\">{</span><span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n<p dir=\\\"auto\\\">test.mjs (unnamed suite):</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import test from 'tehanu/suite'\\n\\ntest('dummy', () =&gt; {})\\\"><pre><span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-s1\\\">test</span> <span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s\\\">'tehanu/suite'</span>\\n\\n<span class=\\\"pl-en\\\">test</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'dummy'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-kos\\\">{</span><span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Installation</h2><a id=\\\"user-content-installation\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Installation\\\" href=\\\"#installation\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">You can install the test harness using your favourite Node.js package manager:</p>\\n<div class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"npm i -D tehanu\\nyarn add -D tehanu\\npnpm i -D tehanu\\\"><pre class=\\\"notranslate\\\"><code>npm i -D tehanu\\nyarn add -D tehanu\\npnpm i -D tehanu\\n</code></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Test Suite</h2><a id=\\\"user-content-test-suite\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Test Suite\\\" href=\\\"#test-suite\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">The default export of the <code>tehanu</code> module:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const tehanu = require('tehanu')\\\"><pre><span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">tehanu</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'tehanu'</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n<p dir=\\\"auto\\\">is a test suite factory function:</p>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"tehanu(name: string): (...) =&gt; void\\\"><pre><span class=\\\"pl-en\\\">tehanu</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">name</span>: <span class=\\\"pl-s1\\\">string</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-kos\\\">(</span>...<span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-k\\\">void</span></pre></div>\\n<p dir=\\\"auto\\\">If the <code>name</code> of the suite is an absolute path and it starts with the current process path (<code>process.cwd()</code>), usually supplied as <code>__filename</code>, the leading current process path will be trimmed and only the relative path to the current process path will be used. If you want to trim all the path and leave just the file name, you can use the expression <code>require('path').basename(__filename)</code> instead of just <code>__filename</code>. The same will work with <code>import.meta.url</code> in ES modules.</p>\\n<p dir=\\\"auto\\\">Calling test suite factory function will create a new test suite:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const test = tehanu(__filename)\\\"><pre><span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">test</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">tehanu</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">__filename</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n<p dir=\\\"auto\\\">and return a test factory function:</p>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"test(name: string, fn: () =&gt; void | Promise): void\\\"><pre><span class=\\\"pl-en\\\">test</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">name</span>: <span class=\\\"pl-s1\\\">string</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-en\\\">fn</span>: <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-c1\\\">&gt;</span> <span class=\\\"pl-k\\\">void</span> <span class=\\\"pl-c1\\\">|</span> <span class=\\\"pl-smi\\\">Promise</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-k\\\">void</span></pre></div>\\n<p dir=\\\"auto\\\">Calling the test factory function will add another test to the test suite:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"test('one number', () =&gt; ...)\\\"><pre><span class=\\\"pl-en\\\">test</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'one number'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> ...<span class=\\\"pl-kos\\\">)</span></pre></div>\\n<p dir=\\\"auto\\\">A test suite is usually alone in a single test file:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const test = require('tehanu')(__filename)\\n\\ntest('one number', () =&gt; ...)\\\"><pre><span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">test</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'tehanu'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">__filename</span><span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-s1\\\">test</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'one number'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> ...<span class=\\\"pl-kos\\\">)</span></pre></div>\\n<p dir=\\\"auto\\\">But a single test file may include more test suites:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const tehanu = require('tehanu')\\nconst test1 = tehanu('add')\\nconst test2 = tehanu('remove')\\n\\ntest1('add one', () =&gt; ...)\\ntest2('remove one', () =&gt; ...)\\\"><pre><span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">tehanu</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'tehanu'</span><span class=\\\"pl-kos\\\">)</span>\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">test1</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">tehanu</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'add'</span><span class=\\\"pl-kos\\\">)</span>\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">test2</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">tehanu</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'remove'</span><span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-s1\\\">test1</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'add one'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> ...<span class=\\\"pl-kos\\\">)</span>\\n<span class=\\\"pl-s1\\\">test2</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'remove one'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> ...<span class=\\\"pl-kos\\\">)</span></pre></div>\\n<p dir=\\\"auto\\\">Multiple source files with test suites can be executed either by <a href=\\\"#../teru#readme\\\"><code>teru</code> - the test runner</a>, or by creating a test suite index, which can be executed by <code>node</code>:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"require('./sum1.test')\\nrequire('./sum2.test')\\\"><pre><span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'./sum1.test'</span><span class=\\\"pl-kos\\\">)</span>\\n<span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'./sum2.test'</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n<p dir=\\\"auto\\\">ESM modules are supported too:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import tehanu from 'tehanu'\\n\\nconst test = tehanu(import.meta.url)\\n\\ntest('one number', () =&gt; ...)\\\"><pre><span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-s1\\\">tehanu</span> <span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s\\\">'tehanu'</span>\\n\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">test</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">tehanu</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-k\\\">import</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">meta</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">url</span><span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-s1\\\">test</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'one number'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> ...<span class=\\\"pl-kos\\\">)</span></pre></div>\\n<p dir=\\\"auto\\\">with a shortcut to an unnamed test suite creation:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import test from 'tehanu/suite'\\n\\ntest('one number', () =&gt; ...)\\\"><pre><span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-s1\\\">test</span> <span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s\\\">'tehanu/suite'</span>\\n\\n<span class=\\\"pl-en\\\">test</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'one number'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> ...<span class=\\\"pl-kos\\\">)</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Setup and Tear Down</h2><a id=\\\"user-content-setup-and-tear-down\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Setup and Tear Down\\\" href=\\\"#setup-and-tear-down\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">The test factory function carries properties exposing methods for adding callbacks to execute before and after the tests:</p>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"// Adds callbacks to execute before and after all tests in a test suite\\nbefore(fn: () =&gt; void | Promise): void\\nafter(fn: () =&gt; void | Promise): void\\n// Adds callbacks to execute before and after each test in a test suite\\nbeforeEach(fn: () =&gt; void | Promise): void\\nbeforeEach(fn: () =&gt; void | Promise): void\\\"><pre><span class=\\\"pl-c\\\">// Adds callbacks to execute before and after all tests in a test suite</span>\\n<span class=\\\"pl-en\\\">before</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-en\\\">fn</span>: <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-c1\\\">&gt;</span> <span class=\\\"pl-k\\\">void</span> <span class=\\\"pl-c1\\\">|</span> <span class=\\\"pl-smi\\\">Promise</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-k\\\">void</span>\\n<span class=\\\"pl-en\\\">after</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-en\\\">fn</span>: <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-c1\\\">&gt;</span> <span class=\\\"pl-k\\\">void</span> <span class=\\\"pl-c1\\\">|</span> <span class=\\\"pl-smi\\\">Promise</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-k\\\">void</span>\\n<span class=\\\"pl-c\\\">// Adds callbacks to execute before and after each test in a test suite</span>\\n<span class=\\\"pl-en\\\">beforeEach</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-en\\\">fn</span>: <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-c1\\\">&gt;</span> <span class=\\\"pl-k\\\">void</span> <span class=\\\"pl-c1\\\">|</span> <span class=\\\"pl-smi\\\">Promise</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-k\\\">void</span>\\n<span class=\\\"pl-en\\\">beforeEach</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-en\\\">fn</span>: <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-c1\\\">&gt;</span> <span class=\\\"pl-k\\\">void</span> <span class=\\\"pl-c1\\\">|</span> <span class=\\\"pl-smi\\\">Promise</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-k\\\">void</span></pre></div>\\n<p dir=\\\"auto\\\">The callbacks can be registered anywhere in the source file and will be executed in the declared order:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const test = require('tehanu')(__filename)\\n\\ntest.before(() =&gt; ...)\\ntest('one number', () =&gt; ...)\\\"><pre><span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">test</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'tehanu'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">__filename</span><span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-s1\\\">test</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">before</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> ...<span class=\\\"pl-kos\\\">)</span>\\n<span class=\\\"pl-s1\\\">test</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'one number'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> ...<span class=\\\"pl-kos\\\">)</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Limiting and Skipping Tests</h2><a id=\\\"user-content-limiting-and-skipping-tests\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Limiting and Skipping Tests\\\" href=\\\"#limiting-and-skipping-tests\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">The test factory function carries properties exposing methods for limiting the test execution only to selected tests and to skip selected tests:</p>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"// Adds the test to a limited set of tests to execute\\nonly(name: string, fn?: () =&gt; void | Promise): void\\n// Removes the test from the set of tests to execute\\nskip(name: string, fn: () =&gt; void | Promise): void\\\"><pre><span class=\\\"pl-c\\\">// Adds the test to a limited set of tests to execute</span>\\n<span class=\\\"pl-en\\\">only</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">name</span>: <span class=\\\"pl-s1\\\">string</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-en\\\">fn</span>?: <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-c1\\\">&gt;</span> <span class=\\\"pl-k\\\">void</span> <span class=\\\"pl-c1\\\">|</span> <span class=\\\"pl-smi\\\">Promise</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-k\\\">void</span>\\n<span class=\\\"pl-c\\\">// Removes the test from the set of tests to execute</span>\\n<span class=\\\"pl-en\\\">skip</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">name</span>: <span class=\\\"pl-s1\\\">string</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-en\\\">fn</span>: <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-c1\\\">&gt;</span> <span class=\\\"pl-k\\\">void</span> <span class=\\\"pl-c1\\\">|</span> <span class=\\\"pl-smi\\\">Promise</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-k\\\">void</span></pre></div>\\n<p dir=\\\"auto\\\">The <code>.only</code> suffix can be temporarily inserted to the test sources to limit the test execution only to a few tests to make debugging easier. The <code>.skip</code> suffix can be temporarily inserted to the test sources to exclude the execution of some tests until they are fixed:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const test = require('tehanu')(__filename)\\n\\ntest.only('one number', () =&gt; ...)\\ntest.skip('two numbers', () =&gt; ...)\\\"><pre><span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">test</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'tehanu'</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">__filename</span><span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-s1\\\">test</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">only</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'one number'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> ...<span class=\\\"pl-kos\\\">)</span>\\n<span class=\\\"pl-s1\\\">test</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">skip</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'two numbers'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> ...<span class=\\\"pl-kos\\\">)</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Test Execution</h2><a id=\\\"user-content-test-execution\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Test Execution\\\" href=\\\"#test-execution\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">Tests are executed automatically once all tests suites get loaded. It is ensured by starting the execution from a <code>setImmediate</code> callback. All tests and test suites have to be declared synchronously in test sources.</p>\\n<p dir=\\\"auto\\\">If you want to suppress the automatic test execution, set the <code>autostart</code> property in <code>package.json</code> to <code>false</code>:</p>\\n<div class=\\\"highlight highlight-source-json notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"&quot;tehanu&quot;: {\\n  &quot;autostart&quot;: false\\n}\\\"><pre><span class=\\\"pl-ent\\\">\\\"tehanu\\\"</span>: {\\n  <span class=\\\"pl-ent\\\">\\\"autostart\\\"</span>: <span class=\\\"pl-c1\\\">false</span>\\n}</pre></div>\\n<p dir=\\\"auto\\\">If your tests run in the browser, set the <code>autostart</code> property on the global <code>tehanu</code> object to <code>false</code>:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"(window.tehanu || (window.tehanu = {}).autostart = false\\\"><pre><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-smi\\\">window</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">tehanu</span> <span class=\\\"pl-c1\\\">||</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-smi\\\">window</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">tehanu</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-kos\\\">{</span><span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">autostart</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-c1\\\">false</span></pre></div>\\n<p dir=\\\"auto\\\">The loaded tests can be executed manually using either the <code>schedule</code> or the <code>run</code> method:</p>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const { schedule, run } = require('tehanu')\\n\\ninterface Options {\\n  reporter?: Reporter,\\n  bail?: boolean,\\n  parallel?: boolean,\\n  parallelSuites?: boolean\\n}\\n\\nschedule(options?: Options): void\\nrun(options?: Options): Promise\\\"><pre><span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-kos\\\">{</span> schedule<span class=\\\"pl-kos\\\">,</span> run <span class=\\\"pl-kos\\\">}</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'tehanu'</span><span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-k\\\">interface</span> <span class=\\\"pl-smi\\\">Options</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-c1\\\">reporter</span>?: <span class=\\\"pl-smi\\\">Reporter</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">bail</span>?: <span class=\\\"pl-smi\\\">boolean</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">parallel</span>?: <span class=\\\"pl-smi\\\">boolean</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">parallelSuites</span>?: <span class=\\\"pl-smi\\\">boolean</span>\\n<span class=\\\"pl-kos\\\">}</span>\\n\\n<span class=\\\"pl-en\\\">schedule</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">options</span>?: <span class=\\\"pl-smi\\\">Options</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-k\\\">void</span>\\n<span class=\\\"pl-en\\\">run</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">options</span>?: <span class=\\\"pl-smi\\\">Options</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-smi\\\">Promise</span></pre></div>\\n<p dir=\\\"auto\\\">The method <code>schedule</code> ensures that the test suites are processed just once, even if it is called multiple times. It also reads the default options from the <code>tehanu</code> object in <code>package.json</code>, or in the browser. It also works well together with <a href=\\\"/prantlf/tehanu/blob/master/packages/teru#readme\\\">teru</a>. The method <code>run</code> executes the test suites right away and is not compatible with <a href=\\\"/prantlf/tehanu/blob/master/packages/teru#readme\\\">teru</a>.</p>\\n<p dir=\\\"auto\\\">The <code>tehanu</code> object in <code>package.json</code>, or in the browser, or the options for the <code>schedule</code> and <code>run</code> methods can contain the following additional properties to control the test run:</p>\\n<ul dir=\\\"auto\\\">\\n<li><code>bail</code>: if set to <code>true</code>, the test execution will be aborter after the first failure occurs.</li>\\n<li><code>parallel</code>: if set to <code>true</code>, the test suites will be executed concurrently.</li>\\n<li><code>parallelSuites</code>: if set to <code>true</code>, the tests within one test suite will be executed concurrently.</li>\\n</ul>\\n<p dir=\\\"auto\\\">If a test fails, the exit code of the process running the tests will be set to <code>1</code>.</p>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Reporters</h2><a id=\\\"user-content-reporters\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Reporters\\\" href=\\\"#reporters\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">No reporter is used by default, which means that only errors thrown from the failed tests will be printed on the console. A reporter can print more information about the test progress and can be provided by a couple of ways.</p>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Declarative</h3><a id=\\\"user-content-declarative\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Declarative\\\" href=\\\"#declarative\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">If you install one or multiple reporters as dependencies, the first one will be chosen automatically:</p>\\n<div class=\\\"highlight highlight-source-json notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"&quot;devDependencies&quot;: {\\n  &quot;tehanu&quot;: &quot;1.0.0&quot;,\\n  &quot;tehanu-repo-coco&quot;: &quot;1.0.0&quot;\\n}\\\"><pre><span class=\\\"pl-ent\\\">\\\"devDependencies\\\"</span>: {\\n  <span class=\\\"pl-ent\\\">\\\"tehanu\\\"</span>: <span class=\\\"pl-s\\\"><span class=\\\"pl-pds\\\">\\\"</span>1.0.0<span class=\\\"pl-pds\\\">\\\"</span></span>,\\n  <span class=\\\"pl-ent\\\">\\\"tehanu-repo-coco\\\"</span>: <span class=\\\"pl-s\\\"><span class=\\\"pl-pds\\\">\\\"</span>1.0.0<span class=\\\"pl-pds\\\">\\\"</span></span>\\n}</pre></div>\\n<p dir=\\\"auto\\\">If you install multiple reporters, you can choose one of them explicitly:</p>\\n<div class=\\\"highlight highlight-source-json notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"&quot;tehanu&quot;: {\\n  &quot;reporter&quot;: &quot;tehanu-repo-tape&quot;\\n},\\n&quot;devDependencies&quot;: {\\n  &quot;tehanu&quot;: &quot;1.0.0&quot;,\\n  &quot;tehanu-repo-coco&quot;: &quot;1.0.0&quot;,\\n  &quot;tehanu-repo-tape&quot;: &quot;1.0.0&quot;\\n}\\\"><pre><span class=\\\"pl-ent\\\">\\\"tehanu\\\"</span>: {\\n  <span class=\\\"pl-ent\\\">\\\"reporter\\\"</span>: <span class=\\\"pl-s\\\"><span class=\\\"pl-pds\\\">\\\"</span>tehanu-repo-tape<span class=\\\"pl-pds\\\">\\\"</span></span>\\n},\\n<span class=\\\"pl-ent\\\">\\\"devDependencies\\\"</span>: {\\n  <span class=\\\"pl-ent\\\">\\\"tehanu\\\"</span>: <span class=\\\"pl-s\\\"><span class=\\\"pl-pds\\\">\\\"</span>1.0.0<span class=\\\"pl-pds\\\">\\\"</span></span>,\\n  <span class=\\\"pl-ent\\\">\\\"tehanu-repo-coco\\\"</span>: <span class=\\\"pl-s\\\"><span class=\\\"pl-pds\\\">\\\"</span>1.0.0<span class=\\\"pl-pds\\\">\\\"</span></span>,\\n  <span class=\\\"pl-ent\\\">\\\"tehanu-repo-tape\\\"</span>: <span class=\\\"pl-s\\\"><span class=\\\"pl-pds\\\">\\\"</span>1.0.0<span class=\\\"pl-pds\\\">\\\"</span></span>\\n}</pre></div>\\n<p dir=\\\"auto\\\">If you run the tests in the browser, you can supply the reporter by the global <code>tehanu</code> object:</p>\\n<div class=\\\"highlight highlight-text-html-basic notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"&lt;script src=node_modules/tehanu/dist/index.min.js&gt;&lt;/script&gt;\\n&lt;script src=node_modules/tehanu-repo-tape/dist/index.min.js&gt;&lt;/script&gt;\\n&lt;script src=test/index.js&gt;&lt;/script&gt;\\n&lt;script&gt;\\n  (window.tehanu || (window.tehanu = {}).reporter = tehanuTape\\n&lt;/script&gt;\\\"><pre><span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-ent\\\">script</span> <span class=\\\"pl-c1\\\">src</span>=<span class=\\\"pl-s\\\">node_modules/tehanu/dist/index.min.js</span><span class=\\\"pl-kos\\\">&gt;</span><span class=\\\"pl-kos\\\">&lt;/</span><span class=\\\"pl-ent\\\">script</span><span class=\\\"pl-kos\\\">&gt;</span>\\n<span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-ent\\\">script</span> <span class=\\\"pl-c1\\\">src</span>=<span class=\\\"pl-s\\\">node_modules/tehanu-repo-tape/dist/index.min.js</span><span class=\\\"pl-kos\\\">&gt;</span><span class=\\\"pl-kos\\\">&lt;/</span><span class=\\\"pl-ent\\\">script</span><span class=\\\"pl-kos\\\">&gt;</span>\\n<span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-ent\\\">script</span> <span class=\\\"pl-c1\\\">src</span>=<span class=\\\"pl-s\\\">test/index.js</span><span class=\\\"pl-kos\\\">&gt;</span><span class=\\\"pl-kos\\\">&lt;/</span><span class=\\\"pl-ent\\\">script</span><span class=\\\"pl-kos\\\">&gt;</span>\\n<span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-ent\\\">script</span><span class=\\\"pl-kos\\\">&gt;</span>\\n  <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-smi\\\">window</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">tehanu</span> <span class=\\\"pl-c1\\\">||</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-smi\\\">window</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">tehanu</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-kos\\\">{</span><span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">reporter</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">tehanuTape</span>\\n<span class=\\\"pl-kos\\\">&lt;/</span><span class=\\\"pl-ent\\\">script</span><span class=\\\"pl-kos\\\">&gt;</span></pre></div>\\n<div class=\\\"highlight highlight-text-html-basic notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"&lt;script type=module&gt;\\n  import tape from 'node_modules/tehanu-repo-tape/dist/index.min.mjs'\\n  import 'test/dist/index.js'\\n\\n  (window.tehanu || (window.tehanu = {}).reporter = tape\\n&lt;/script&gt;\\\"><pre><span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-ent\\\">script</span> <span class=\\\"pl-c1\\\">type</span>=<span class=\\\"pl-s\\\">module</span><span class=\\\"pl-kos\\\">&gt;</span>\\n  <span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-s1\\\">tape</span> <span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s\\\">'node_modules/tehanu-repo-tape/dist/index.min.mjs'</span>\\n  <span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-s\\\">'test/dist/index.js'</span><span class=\\\"pl-kos\\\"></span>\\n\\n  <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-smi\\\">window</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">tehanu</span> <span class=\\\"pl-c1\\\">||</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-smi\\\">window</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">tehanu</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-kos\\\">{</span><span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">reporter</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">tape</span>\\n<span class=\\\"pl-kos\\\">&lt;/</span><span class=\\\"pl-ent\\\">script</span><span class=\\\"pl-kos\\\">&gt;</span></pre></div>\\n<p dir=\\\"auto\\\">But you do not have to do it with <code>tape</code>, because this reporter registers to the <code>tehanu</code> object automatically for convenience:</p>\\n<div class=\\\"highlight highlight-text-html-basic notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"&lt;script src=node_modules/tehanu/dist/index.min.js&gt;&lt;/script&gt;\\n&lt;script src=node_modules/tehanu-repo-tape/dist/index.min.js&gt;&lt;/script&gt;\\n&lt;script src=test/index.js&gt;&lt;/script&gt;\\\"><pre><span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-ent\\\">script</span> <span class=\\\"pl-c1\\\">src</span>=<span class=\\\"pl-s\\\">node_modules/tehanu/dist/index.min.js</span><span class=\\\"pl-kos\\\">&gt;</span><span class=\\\"pl-kos\\\">&lt;/</span><span class=\\\"pl-ent\\\">script</span><span class=\\\"pl-kos\\\">&gt;</span>\\n<span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-ent\\\">script</span> <span class=\\\"pl-c1\\\">src</span>=<span class=\\\"pl-s\\\">node_modules/tehanu-repo-tape/dist/index.min.js</span><span class=\\\"pl-kos\\\">&gt;</span><span class=\\\"pl-kos\\\">&lt;/</span><span class=\\\"pl-ent\\\">script</span><span class=\\\"pl-kos\\\">&gt;</span>\\n<span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-ent\\\">script</span> <span class=\\\"pl-c1\\\">src</span>=<span class=\\\"pl-s\\\">test/index.js</span><span class=\\\"pl-kos\\\">&gt;</span><span class=\\\"pl-kos\\\">&lt;/</span><span class=\\\"pl-ent\\\">script</span><span class=\\\"pl-kos\\\">&gt;</span></pre></div>\\n<div class=\\\"highlight highlight-text-html-basic notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"&lt;script type=module&gt;\\n  import 'node_modules/tehanu-repo-tape/dist/index.min.mjs'\\n  import 'test/dist/index.js'\\n&lt;/script&gt;\\\"><pre><span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-ent\\\">script</span> <span class=\\\"pl-c1\\\">type</span>=<span class=\\\"pl-s\\\">module</span><span class=\\\"pl-kos\\\">&gt;</span>\\n  <span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-s\\\">'node_modules/tehanu-repo-tape/dist/index.min.mjs'</span>\\n  <span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-s\\\">'test/dist/index.js'</span>\\n<span class=\\\"pl-kos\\\">&lt;/</span><span class=\\\"pl-ent\\\">script</span><span class=\\\"pl-kos\\\">&gt;</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Programmatic</h3><a id=\\\"user-content-programmatic\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Programmatic\\\" href=\\\"#programmatic\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">If you execute the functions <code>schedule</code> or <code>run</code> yourself, you can pass a <code>reporter</code> object to them:</p>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const { factory, schedule } = require('tehanu')\\nconst test = factory('sum')\\n\\ntest('dummy', () =&gt; {})\\n\\nconst reporter = {\\n  start() {},\\n  startSuite() {},\\n  ok({ name }) { console.info(`DONE: ${name} `) },\\n  fail({ name }, { stack }) {\\n    console.error(`FAIL: ${name}\\n\\n${stack}`)\\n  },\\n  bail() {},\\n  skip() {},\\n  endSuite() {},\\n  end() {}\\n}\\n\\nschedule({ reporter })\\\"><pre><span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-kos\\\">{</span> factory<span class=\\\"pl-kos\\\">,</span> schedule <span class=\\\"pl-kos\\\">}</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'tehanu'</span><span class=\\\"pl-kos\\\">)</span>\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">test</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">factory</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'sum'</span><span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-en\\\">test</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">'dummy'</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-kos\\\">{</span><span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">reporter</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-en\\\">start</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-kos\\\">{</span><span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-en\\\">startSuite</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-kos\\\">{</span><span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-en\\\">ok</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">{</span> name <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-kos\\\">{</span> <span class=\\\"pl-smi\\\">console</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">info</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">`DONE: <span class=\\\"pl-s1\\\"><span class=\\\"pl-kos\\\">${</span><span class=\\\"pl-s1\\\">name</span><span class=\\\"pl-kos\\\">}</span></span> `</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-en\\\">fail</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">{</span> name <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">{</span> stack <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-kos\\\">{</span>\\n    <span class=\\\"pl-smi\\\">console</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">error</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">`FAIL: <span class=\\\"pl-s1\\\"><span class=\\\"pl-kos\\\">${</span><span class=\\\"pl-s1\\\">name</span><span class=\\\"pl-kos\\\">}</span></span></span>\\n<span class=\\\"pl-s\\\"></span>\\n<span class=\\\"pl-s\\\"><span class=\\\"pl-s1\\\"><span class=\\\"pl-kos\\\">${</span><span class=\\\"pl-s1\\\">stack</span><span class=\\\"pl-kos\\\">}</span></span>`</span><span class=\\\"pl-kos\\\">)</span>\\n  <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-en\\\">bail</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-kos\\\">{</span><span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-en\\\">skip</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-kos\\\">{</span><span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-en\\\">endSuite</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-kos\\\">{</span><span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-en\\\">end</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-kos\\\">{</span><span class=\\\"pl-kos\\\">}</span>\\n<span class=\\\"pl-kos\\\">}</span>\\n\\n<span class=\\\"pl-en\\\">schedule</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">{</span> reporter <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n<p dir=\\\"auto\\\">A reporter has to implement the <code>Reporter</code> interface:</p>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"export interface Test {\\n  readonly name: string\\n  readonly fn?: () =&gt; void | Promise\\n}\\n\\ninterface Reporter {\\n  start(): void\\n  startSuite(name: string, tests: Test[]): void\\n  ok(test: Test): void\\n  fail(test: Test, err: Error): void\\n  bail(): void\\n  skip(test: Test): void\\n  endSuite(): void\\n  end(): void\\n}\\\"><pre><span class=\\\"pl-k\\\">export</span> <span class=\\\"pl-k\\\">interface</span> <span class=\\\"pl-smi\\\">Test</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-k\\\">readonly</span> <span class=\\\"pl-c1\\\">name</span>: <span class=\\\"pl-smi\\\">string</span>\\n  <span class=\\\"pl-k\\\">readonly</span> <span class=\\\"pl-c1\\\">fn</span>?: <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-smi\\\"><span class=\\\"pl-k\\\">void</span></span> <span class=\\\"pl-c1\\\">|</span> <span class=\\\"pl-smi\\\">Promise</span>\\n<span class=\\\"pl-kos\\\">}</span>\\n\\n<span class=\\\"pl-k\\\">interface</span> <span class=\\\"pl-smi\\\">Reporter</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-c1\\\">start</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-smi\\\"><span class=\\\"pl-k\\\">void</span></span>\\n  <span class=\\\"pl-c1\\\">startSuite</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">name</span>: <span class=\\\"pl-smi\\\">string</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-s1\\\">tests</span>: <span class=\\\"pl-smi\\\">Test</span><span class=\\\"pl-kos\\\">[</span><span class=\\\"pl-kos\\\">]</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-smi\\\"><span class=\\\"pl-k\\\">void</span></span>\\n  <span class=\\\"pl-c1\\\">ok</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">test</span>: <span class=\\\"pl-smi\\\">Test</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-smi\\\"><span class=\\\"pl-k\\\">void</span></span>\\n  <span class=\\\"pl-c1\\\">fail</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">test</span>: <span class=\\\"pl-smi\\\">Test</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-s1\\\">err</span>: <span class=\\\"pl-smi\\\">Error</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-smi\\\"><span class=\\\"pl-k\\\">void</span></span>\\n  <span class=\\\"pl-c1\\\">bail</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-smi\\\"><span class=\\\"pl-k\\\">void</span></span>\\n  <span class=\\\"pl-c1\\\">skip</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">test</span>: <span class=\\\"pl-smi\\\">Test</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-smi\\\"><span class=\\\"pl-k\\\">void</span></span>\\n  <span class=\\\"pl-c1\\\">endSuite</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-smi\\\"><span class=\\\"pl-k\\\">void</span></span>\\n  <span class=\\\"pl-c1\\\">end</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-smi\\\"><span class=\\\"pl-k\\\">void</span></span>\\n<span class=\\\"pl-kos\\\">}</span></pre></div>\\n</article>\",\"errorMessage\":null,\"headerInfo\":{\"toc\":[{\"level\":1,\"text\":\"Test Harness Core\",\"anchor\":\"test-harness-core\",\"htmlText\":\"Test Harness Core\"},{\"level\":2,\"text\":\"Synopsis\",\"anchor\":\"synopsis\",\"htmlText\":\"Synopsis\"},{\"level\":2,\"text\":\"Installation\",\"anchor\":\"installation\",\"htmlText\":\"Installation\"},{\"level\":2,\"text\":\"Test Suite\",\"anchor\":\"test-suite\",\"htmlText\":\"Test Suite\"},{\"level\":2,\"text\":\"Setup and Tear Down\",\"anchor\":\"setup-and-tear-down\",\"htmlText\":\"Setup and Tear Down\"},{\"level\":2,\"text\":\"Limiting and Skipping Tests\",\"anchor\":\"limiting-and-skipping-tests\",\"htmlText\":\"Limiting and Skipping Tests\"},{\"level\":2,\"text\":\"Test Execution\",\"anchor\":\"test-execution\",\"htmlText\":\"Test Execution\"},{\"level\":2,\"text\":\"Reporters\",\"anchor\":\"reporters\",\"htmlText\":\"Reporters\"},{\"level\":3,\"text\":\"Declarative\",\"anchor\":\"declarative\",\"htmlText\":\"Declarative\"},{\"level\":3,\"text\":\"Programmatic\",\"anchor\":\"programmatic\",\"htmlText\":\"Programmatic\"}],\"siteNavLoginPath\":\"/login?return_to=https%3A%2F%2Fgithub.com%2Fprantlf%2Ftehanu%2Ftree%2Fmaster%2Fpackages%2Findex\"}},\"totalCount\":6,\"showBranchInfobar\":false},\"fileTree\":{\"packages\":{\"items\":[{\"name\":\"coco\",\"path\":\"packages/coco\",\"contentType\":\"directory\"},{\"name\":\"index\",\"path\":\"packages/index\",\"contentType\":\"directory\"},{\"name\":\"tape\",\"path\":\"packages/tape\",\"contentType\":\"directory\"},{\"name\":\"teas\",\"path\":\"packages/teas\",\"contentType\":\"directory\"},{\"name\":\"tenbo\",\"path\":\"packages/tenbo\",\"contentType\":\"directory\"},{\"name\":\"teru\",\"path\":\"packages/teru\",\"contentType\":\"directory\"}],\"totalCount\":6},\"\":{\"items\":[{\"name\":\".github\",\"path\":\".github\",\"contentType\":\"directory\"},{\"name\":\".vscode\",\"path\":\".vscode\",\"contentType\":\"directory\"},{\"name\":\"benchmarks\",\"path\":\"benchmarks\",\"contentType\":\"directory\"},{\"name\":\"examples\",\"path\":\"examples\",\"contentType\":\"directory\"},{\"name\":\"packages\",\"path\":\"packages\",\"contentType\":\"directory\"},{\"name\":\".editorconfig\",\"path\":\".editorconfig\",\"contentType\":\"file\"},{\"name\":\".gitignore\",\"path\":\".gitignore\",\"contentType\":\"file\"},{\"name\":\"CHANGES.md\",\"path\":\"CHANGES.md\",\"contentType\":\"file\"},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"README.md\",\"contentType\":\"file\"},{\"name\":\"package.json\",\"path\":\"package.json\",\"contentType\":\"file\"},{\"name\":\"pnpm-lock.yaml\",\"path\":\"pnpm-lock.yaml\",\"contentType\":\"file\"},{\"name\":\"pnpm-workspace.yaml\",\"path\":\"pnpm-workspace.yaml\",\"contentType\":\"file\"}],\"totalCount\":13}},\"fileTreeProcessingTime\":2.490803,\"foldersToFetch\":[],\"treeExpanded\":true,\"symbolsExpanded\":false,\"csrf_tokens\":{\"/prantlf/tehanu/branches\":{\"post\":\"mHqtfsfpaWM9dYWytEFgdKEiKMEK6msA4OrYRbF_Q6brX-7-Ae6gQ6qDobD4dMU8HTm5d13mClOdy7h2iofP2g\"},\"/prantlf/tehanu/branches/fetch_and_merge/master\":{\"post\":\"fJBFEBmLHZp97bGvhobdk6pvioLsHMoB3vB97xKpC5mpC6wPs0CjxeQa8UjnP-YjiyD2WwN5J586Oq-MB44fxQ\"},\"/prantlf/tehanu/branches/fetch_and_merge/master?discard_changes=true\":{\"post\":\"JJzUtflBlOWWQcIWEgXpkWF0WT_MpRYW95vXzE_4xx_xBz2qU4oqug-2gvFzvNIhQDsl5iPA-4gTUQWvWt_TQw\"}}},\"title\":\"tehanu/packages/index at master \u00b7 prantlf/tehanu\"}",
  "embeddings": []
}
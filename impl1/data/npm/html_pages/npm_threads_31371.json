{
  "libtype": "npm",
  "libname": "threads",
  "url": "https://threads.js.org",
  "html": "<!DOCTYPE html><html lang=\"en\">  <head><!-- Global site tag (gtag.js) - Google Analytics -->  <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-69261150-2\"></script>  <script>    window.dataLayer = window.dataLayer || [];    function gtag() { dataLayer.push(arguments); }    gtag('js', new Date());          gtag('config', 'UA-69261150-2', { 'anonymize_ip': true, 'storage': 'none' });      </script><meta charset=\"utf-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\"><title>Web worker meets worker threads - threads.js</title><meta name=\"description\" content=\"Make web workers & worker threads as simple as a function call \u2013 worker library for node.js, web and electron. JavaScript/TypeScript, supports webpack.\"><link rel=\"canonical\" href=\"https://threads.js.org/\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"threads.js\" href=\"/feed.xml\"><!-- start favicons snippet, use https://realfavicongenerator.net/ --><link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/assets/apple-touch-icon.png\"><link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/assets/favicon-32x32.png\"><link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/assets/favicon-16x16.png\"><link rel=\"manifest\" href=\"/assets/site.webmanifest\"><link rel=\"mask-icon\" href=\"/assets/safari-pinned-tab.svg\" color=\"#fc4d50\"><link rel=\"shortcut icon\" href=\"/assets/favicon.ico\"><meta name=\"msapplication-TileColor\" content=\"#ffc40d\"><meta name=\"msapplication-config\" content=\"/assets/browserconfig.xml\"><meta name=\"theme-color\" content=\"#ffffff\"><!-- end favicons snippet --><link rel=\"stylesheet\" href=\"/assets/css/main.css\"><link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.0.13/css/all.css\" ><link rel=\"stylesheet\" href=\"/assets/main.css\"><script>(function() {  window.isArray = function(val) {    return Object.prototype.toString.call(val) === '[object Array]';  };  window.isString = function(val) {    return typeof val === 'string';  };  window.hasEvent = function(event) {    return 'on'.concat(event) in window.document;  };  window.isOverallScroller = function(node) {    return node === document.documentElement || node === document.body || node === window;  };  window.isFormElement = function(node) {    var tagName = node.tagName;    return tagName === 'INPUT' || tagName === 'SELECT' || tagName === 'TEXTAREA';  };  window.pageLoad = (function () {    var loaded = false, cbs = [];    window.addEventListener('load', function () {      var i;      loaded = true;      if (cbs.length > 0) {        for (i = 0; i < cbs.length; i++) {          cbs[i]();        }      }    });    return {      then: function(cb) {        cb && (loaded ? cb() : (cbs.push(cb)));      }    };  })();})();(function() {  window.throttle = function(func, wait) {    var args, result, thisArg, timeoutId, lastCalled = 0;    function trailingCall() {      lastCalled = new Date;      timeoutId = null;      result = func.apply(thisArg, args);    }    return function() {      var now = new Date,        remaining = wait - (now - lastCalled);      args = arguments;      thisArg = this;      if (remaining <= 0) {        clearTimeout(timeoutId);        timeoutId = null;        lastCalled = now;        result = func.apply(thisArg, args);      } else if (!timeoutId) {        timeoutId = setTimeout(trailingCall, remaining);      }      return result;    };  };})();(function() {  var Set = (function() {    var add = function(item) {      var i, data = this._data;      for (i = 0; i < data.length; i++) {        if (data[i] === item) {          return;        }      }      this.size ++;      data.push(item);      return data;    };    var Set = function(data) {      this.size = 0;      this._data = [];      var i;      if (data.length > 0) {        for (i = 0; i < data.length; i++) {          add.call(this, data[i]);        }      }    };    Set.prototype.add = add;    Set.prototype.get = function(index) { return this._data[index]; };    Set.prototype.has = function(item) {      var i, data = this._data;      for (i = 0; i < data.length; i++) {        if (this.get(i) === item) {          return true;        }      }      return false;    };    Set.prototype.is = function(map) {      if (map._data.length !== this._data.length) { return false; }      var i, j, flag, tData = this._data, mData = map._data;      for (i = 0; i < tData.length; i++) {        for (flag = false, j = 0; j < mData.length; j++) {          if (tData[i] === mData[j]) {            flag = true;            break;          }        }        if (!flag) { return false; }      }      return true;    };    Set.prototype.values = function() {      return this._data;    };    return Set;  })();  window.Lazyload = (function(doc) {    var queue = {js: [], css: []}, sources = {js: {}, css: {}}, context = this;    var createNode = function(name, attrs) {      var node = doc.createElement(name), attr;      for (attr in attrs) {        if (attrs.hasOwnProperty(attr)) {          node.setAttribute(attr, attrs[attr]);        }      }      return node;    };    var end = function(type, url) {      var s, q, qi, cbs, i, j, cur, val, flag;      if (type === 'js' || type ==='css') {        s = sources[type], q = queue[type];        s[url] = true;        for (i = 0; i < q.length; i++) {          cur = q[i];          if (cur.urls.has(url)) {            qi = cur, val = qi.urls.values();            qi && (cbs = qi.callbacks);            for (flag = true, j = 0; j < val.length; j++) {              cur = val[j];              if (!s[cur]) {                flag = false;              }            }            if (flag && cbs && cbs.length > 0) {              for (j = 0; j < cbs.length; j++) {                cbs[j].call(context);              }              qi.load = true;            }          }        }      }    };    var load = function(type, urls, callback) {      var s, q, qi, node, i, cur,        _urls = typeof urls === 'string' ? new Set([urls]) : new Set(urls), val, url;      if (type === 'js' || type ==='css') {        s = sources[type], q = queue[type];        for (i = 0; i < q.length; i++) {          cur = q[i];          if (_urls.is(cur.urls)) {            qi = cur;            break;          }        }        val = _urls.values();        if (qi) {          callback && (qi.load || qi.callbacks.push(callback));          callback && (qi.load && callback());        } else {          q.push({            urls: _urls,            callbacks: callback ? [callback] : [],            load: false          });          for (i = 0; i < val.length; i++) {            node = null, url = val[i];            if (s[url] === undefined) {              (type === 'js' ) && (node = createNode('script', { src: url }));              (type === 'css') && (node = createNode('link', { rel: 'stylesheet', href: url }));              if (node) {                node.onload = (function(type, url) {                  return function() {                    end(type, url);                  };                })(type, url);                (doc.head || doc.body).appendChild(node);                s[url] = false;              }            }          }        }      }    };    return {      js: function(url, callback) {        load('js', url, callback);      },      css: function(url, callback) {        load('css', url, callback);      }    };  })(this.document);})();</script><script>  (function() {    var TEXT_VARIABLES = {      version: '2.2.6',      sources: {        font_awesome: 'https://use.fontawesome.com/releases/v5.0.13/css/all.css',        jquery: 'https://unpkg.com/jquery@3.4.1/dist/jquery.min.js',        leancloud_js_sdk: '//cdn1.lncld.net/static/js/3.4.1/av-min.js',        chart: 'https://unpkg.com/chart.js@2.7.2/dist/Chart.min.js',        gitalk: {          js: 'https://unpkg.com/gitalk@1.2.2/dist/gitalk.min.js',          css: 'https://unpkg.com/gitalk@1.2.2/dist/gitalk.css'        },        valine: 'https//unpkg.com/valine/dist/Valine.min.js',        mathjax: 'https://unpkg.com/mathjax@2.7.4/unpacked/MathJax.js?config=TeX-MML-AM_CHTML',        mermaid: 'https://unpkg.com/mermaid@8.0.0-rc.8/dist/mermaid.min.js'      },      site: {        toc: {          selectors: 'h1,h2,h3'        }      },      paths: {        search_js: '/assets/search.js'      }    };    window.TEXT_VARIABLES = TEXT_VARIABLES;  })();</script></head>  <body>    <div class=\"root\" data-is-touch=\"false\">      <div class=\"layout--page js-page-root\"><div class=\"page__main js-page-main page__viewport cell cell--auto\">      <div class=\"page__main-inner\"><div class=\"page__header d-print-none\"><header class=\"header\"><div class=\"main\">      <div class=\"header__title\">        <div class=\"header__brand\"><svg width=\"112px\" height=\"112px\" viewBox=\"0 0 112 112\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">    <defs>        <filter x=\"-5.4%\" y=\"-5.4%\" width=\"110.8%\" height=\"110.8%\" filterUnits=\"objectBoundingBox\" id=\"filter-1\">            <feOffset dx=\"0\" dy=\"0\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"></feOffset>            <feGaussianBlur stdDeviation=\"1.5\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\"></feGaussianBlur>            <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.371339598 0\" type=\"matrix\" in=\"shadowBlurOuter1\" result=\"shadowMatrixOuter1\"></feColorMatrix>            <feMerge>                <feMergeNode in=\"shadowMatrixOuter1\"></feMergeNode>                <feMergeNode in=\"SourceGraphic\"></feMergeNode>            </feMerge>        </filter>    </defs>    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">        <g transform=\"translate(-13.000000, -13.000000)\">            <g filter=\"url(#filter-1)\" transform=\"translate(9.000000, 9.000000)\">                <rect stroke=\"#FFFFFF\" stroke-width=\"5\" x=\"18.5\" y=\"18.5\" width=\"83\" height=\"83\" rx=\"5\"></rect>                <path d=\"M29,24 L91,24 C93.7614237,24 96,26.2385763 96,29 L96,91 C96,93.7614237 93.7614237,96 91,96 L29,96 C26.2385763,96 24,93.7614237 24,91 L24,29 C24,26.2385763 26.2385763,24 29,24 Z M36,34 L55,34 C56.1045695,34 57,34.8954305 57,36 L57,55 C57,56.1045695 56.1045695,57 55,57 L36,57 C34.8954305,57 34,56.1045695 34,55 L34,36 C34,34.8954305 34.8954305,34 36,34 Z M36,64 L42,64 C43.1045695,64 44,64.8954305 44,66 L44,85 C44,86.1045695 43.1045695,87 42,87 L36,87 C34.8954305,87 34,86.1045695 34,85 L34,66 C34,64.8954305 34.8954305,64 36,64 Z M49,64 L55,64 C56.1045695,64 57,64.8954305 57,66 L57,85 C57,86.1045695 56.1045695,87 55,87 L49,87 C47.8954305,87 47,86.1045695 47,85 L47,66 C47,64.8954305 47.8954305,64 49,64 Z M65,34 L84,34 C85.1045695,34 86,34.8954305 86,36 L86,55 C86,56.1045695 85.1045695,57 84,57 L65,57 C63.8954305,57 63,56.1045695 63,55 L63,36 C63,34.8954305 63.8954305,34 65,34 Z M65,64 L71,64 C72.1045695,64 73,64.8954305 73,66 L73,85 C73,86.1045695 72.1045695,87 71,87 L65,87 C63.8954305,87 63,86.1045695 63,85 L63,66 C63,64.8954305 63.8954305,64 65,64 Z M78,64 L84,64 C85.1045695,64 86,64.8954305 86,66 L86,85 C86,86.1045695 85.1045695,87 84,87 L78,87 C76.8954305,87 76,86.1045695 76,85 L76,66 C76,64.8954305 76.8954305,64 78,64 Z\" fill=\"#FFFFFF\"></path>                <g transform=\"translate(35.000000, 0.000000)\" fill=\"#FFFFFF\" stroke=\"#FFFFFF\">                    <path d=\"M0.75,15.875 L5.25,15.875 L5.25,9.40052915 C4.95647914,8.15788847 3.71117415,7.38847483 2.46853346,7.68199569 C1.61651032,7.88324982 0.951254128,8.54850602 0.75,9.40052915 L0.75,9.40052915 L0.75,15.875 Z\"></path>                    <path d=\"M33.9375,15.875 L38.4375,15.875 L38.4375,9.40052915 C38.1439791,8.15788847 36.8986741,7.38847483 35.6560335,7.68199569 C34.8040103,7.88324982 34.1387541,8.54850602 33.9375,9.40052915 L33.9375,9.40052915 L33.9375,15.875 Z\"></path>                    <path d=\"M22.875,15.875 L27.375,15.875 L27.375,9.40052915 C27.0814791,8.15788847 25.8361741,7.38847483 24.5935335,7.68199569 C23.7415103,7.88324982 23.0762541,8.54850602 22.875,9.40052915 L22.875,9.40052915 L22.875,15.875 Z\"></path>                    <path d=\"M11.8125,15.875 L16.3125,15.875 L16.3125,9.40052915 C16.0189791,8.15788847 14.7736741,7.38847483 13.5310335,7.68199569 C12.6790103,7.88324982 12.0137541,8.54850602 11.8125,9.40052915 L11.8125,9.40052915 L11.8125,15.875 Z\"></path>                    <path d=\"M45,16 L49.5,16 L49.5,9.52552915 C49.2064791,8.28288847 47.9611741,7.51347483 46.7185335,7.80699569 C45.8665103,8.00824982 45.2012541,8.67350602 45,9.52552915 L45,9.52552915 L45,16 Z\"></path>                </g>                <g transform=\"translate(60.000000, 112.000000) rotate(180.000000) translate(-60.000000, -112.000000) translate(35.000000, 104.000000)\" fill=\"#FFFFFF\" stroke=\"#FFFFFF\">                    <path d=\"M0.75,15.875 L5.25,15.875 L5.25,9.40052915 C4.95647914,8.15788847 3.71117415,7.38847483 2.46853346,7.68199569 C1.61651032,7.88324982 0.951254128,8.54850602 0.75,9.40052915 L0.75,9.40052915 L0.75,15.875 Z\"></path>                    <path d=\"M33.9375,15.875 L38.4375,15.875 L38.4375,9.40052915 C38.1439791,8.15788847 36.8986741,7.38847483 35.6560335,7.68199569 C34.8040103,7.88324982 34.1387541,8.54850602 33.9375,9.40052915 L33.9375,9.40052915 L33.9375,15.875 Z\"></path>                    <path d=\"M22.875,15.875 L27.375,15.875 L27.375,9.40052915 C27.0814791,8.15788847 25.8361741,7.38847483 24.5935335,7.68199569 C23.7415103,7.88324982 23.0762541,8.54850602 22.875,9.40052915 L22.875,9.40052915 L22.875,15.875 Z\"></path>                    <path d=\"M11.8125,15.875 L16.3125,15.875 L16.3125,9.40052915 C16.0189791,8.15788847 14.7736741,7.38847483 13.5310335,7.68199569 C12.6790103,7.88324982 12.0137541,8.54850602 11.8125,9.40052915 L11.8125,9.40052915 L11.8125,15.875 Z\"></path>                    <path d=\"M45,16 L49.5,16 L49.5,9.52552915 C49.2064791,8.28288847 47.9611741,7.51347483 46.7185335,7.80699569 C45.8665103,8.00824982 45.2012541,8.67350602 45,9.52552915 L45,9.52552915 L45,16 Z\"></path>                </g>                <g transform=\"translate(112.000000, 60.000000) rotate(90.000000) translate(-112.000000, -60.000000) translate(87.000000, 52.000000)\" fill=\"#FFFFFF\" stroke=\"#FFFFFF\">                    <path d=\"M0.75,15.875 L5.25,15.875 L5.25,9.40052915 C4.95647914,8.15788847 3.71117415,7.38847483 2.46853346,7.68199569 C1.61651032,7.88324982 0.951254128,8.54850602 0.75,9.40052915 L0.75,9.40052915 L0.75,15.875 Z\"></path>                    <path d=\"M33.9375,15.875 L38.4375,15.875 L38.4375,9.40052915 C38.1439791,8.15788847 36.8986741,7.38847483 35.6560335,7.68199569 C34.8040103,7.88324982 34.1387541,8.54850602 33.9375,9.40052915 L33.9375,9.40052915 L33.9375,15.875 Z\"></path>                    <path d=\"M22.875,15.875 L27.375,15.875 L27.375,9.40052915 C27.0814791,8.15788847 25.8361741,7.38847483 24.5935335,7.68199569 C23.7415103,7.88324982 23.0762541,8.54850602 22.875,9.40052915 L22.875,9.40052915 L22.875,15.875 Z\"></path>                    <path d=\"M11.8125,15.875 L16.3125,15.875 L16.3125,9.40052915 C16.0189791,8.15788847 14.7736741,7.38847483 13.5310335,7.68199569 C12.6790103,7.88324982 12.0137541,8.54850602 11.8125,9.40052915 L11.8125,9.40052915 L11.8125,15.875 Z\"></path>                    <path d=\"M45,16 L49.5,16 L49.5,9.52552915 C49.2064791,8.28288847 47.9611741,7.51347483 46.7185335,7.80699569 C45.8665103,8.00824982 45.2012541,8.67350602 45,9.52552915 L45,9.52552915 L45,16 Z\"></path>                </g>                <g transform=\"translate(8.000000, 60.000000) rotate(270.000000) translate(-8.000000, -60.000000) translate(-17.000000, 52.000000)\" fill=\"#FFFFFF\" stroke=\"#FFFFFF\">                    <path d=\"M0.75,15.875 L5.25,15.875 L5.25,9.40052915 C4.95647914,8.15788847 3.71117415,7.38847483 2.46853346,7.68199569 C1.61651032,7.88324982 0.951254128,8.54850602 0.75,9.40052915 L0.75,9.40052915 L0.75,15.875 Z\"></path>                    <path d=\"M33.9375,15.875 L38.4375,15.875 L38.4375,9.40052915 C38.1439791,8.15788847 36.8986741,7.38847483 35.6560335,7.68199569 C34.8040103,7.88324982 34.1387541,8.54850602 33.9375,9.40052915 L33.9375,9.40052915 L33.9375,15.875 Z\"></path>                    <path d=\"M22.875,15.875 L27.375,15.875 L27.375,9.40052915 C27.0814791,8.15788847 25.8361741,7.38847483 24.5935335,7.68199569 C23.7415103,7.88324982 23.0762541,8.54850602 22.875,9.40052915 L22.875,9.40052915 L22.875,15.875 Z\"></path>                    <path d=\"M11.8125,15.875 L16.3125,15.875 L16.3125,9.40052915 C16.0189791,8.15788847 14.7736741,7.38847483 13.5310335,7.68199569 C12.6790103,7.88324982 12.0137541,8.54850602 11.8125,9.40052915 L11.8125,9.40052915 L11.8125,15.875 Z\"></path>                    <path d=\"M45,16 L49.5,16 L49.5,9.52552915 C49.2064791,8.28288847 47.9611741,7.51347483 46.7185335,7.80699569 C45.8665103,8.00824982 45.2012541,8.67350602 45,9.52552915 L45,9.52552915 L45,16 Z\"></path>                </g>            </g>        </g>    </g></svg><a title=\"Make web workers & worker threads as simple as a function call \u2013 worker library for node.js, web and electron. JavaScript/TypeScript, supports webpack.\" href=\"/\">threads.js</a></div></div><nav class=\"navigation\">        <ul><li class=\"navigation__item navigation__item--active\"><a href=\"/\">Home</a></li><li class=\"navigation__item\"><a href=\"/getting-started\">Quick start</a></li><li class=\"navigation__item\"><a href=\"/usage\">Usage</a></li><li class=\"navigation__item\"><a href=\"https://github.com/andywer/threads.js\"><i aria-label=\"GitHub\" class=\"fab fa-github\" style=\"font-size: 1.33em; line-height: 1.33em\"></i></a></li></ul>      </nav></div>  </header></div><div class=\"page__content\"><div class =\"main\"><div class=\"grid grid--reverse\">              <div class=\"col-aside d-print-none js-col-aside\"></div>              <div class=\"col-main cell cell--auto\"><!-- start custom main top snippet --><!-- end custom main top snippet --><article itemscope itemtype=\"http://schema.org/WebPage\"><meta itemprop=\"headline\" content=\"Web worker meets worker threads\"><meta itemprop=\"author\" content=\"Andy Wermke\"/><div class=\"js-article-content\"><div class=\"layout--home\"></div><script>/*(function () {})();*/</script><style>  article a:not(.button) {    font-weight: inherit;  }  h1 img {    width: 500px;    max-width: 100%;  }  section {    align-items: center;    display: flex;    flex-direction: column;  }  section h2 {    border: none;    font-size: 2.3rem;    line-height: 100%;    margin-top: 0;  }  .index-features-list {    display: flex;    flex-wrap: wrap;    justify-content: center;    list-style-type: none;    padding: 0;  }  .index-features-list > li {    display: flex;    flex-basis: 45%;    margin: 1rem 1rem 0.5rem;    min-width: 300px;    max-width: 400px;  }  .index-feature-icon {    align-self: center;    color: hsl(210, 95%, 36%);    display: inline-block;    text-align: center;  }  .card__header {    color: inherit !important;    cursor: default !important;    text-decoration: none !important;  }  .card__content h4 {    font-size: 1.1rem;  }  .card__header > .logos {    color: inherit;    font-size: 1.2rem;  }  .card__header > .logos > i {    margin: 0 0.1rem;  }  .card-flex {    flex-basis: 90% !important;  }  @media (min-width: 600px) {    .card-flex {      flex-basis: 46% !important;    }  }  @media (min-width: 800px) {    .card-flex {      flex-basis: 28% !important;    }  }  .highlight pre {    border-radius: 0.4rem;  }  .highlight pre.command-prompt {    color: #f8f8f8;  }  .command-prompt:before {    content: \"> \";    opacity: 0.8;  }</style><section class=\"hero\" style=\"position: relative\">  <div class=\"my-5\">    <h1 class=\"text-center\">      <a href=\"https://threads.js.org/\">        <img alt=\"threads.js\" src=\"/assets/logo-label.png\" />      </a>    </h1>    <p>      Make web workers &amp; worker threads as simple as a function call.    </p>    <div class=\"highlighter-rouge my-4\">      <div class=\"highlight\">        <pre class=\"command-prompt highlight px-4 py-3\">npm install threads</pre>      </div>    </div>    <p class=\"text-center mt-4\">      <a class=\"button button--primary button--rounded button--xxl mt-4 mx-2\" href=\"/getting-started\">        Getting started      </a>      <a class=\"button button--secondary button--rounded button--xxl mt-4 mx-2\" href=\"/usage\">        Documentation      </a>    </p>  </div></section><hr /><section class=\"my-5\">  <h2 class=\"text-center\">Transparent API</h2>  <p class=\"mt-3 text-center\">    Write code once, run it everywhere \u2013 in web workers and node worker threads.  </p>  <p class=\"mt-1 text-center\">    Call workers transparently, await results. It's never been easier.  </p>  <div class=\"d-flex flex-column\">    <div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// master.js</span><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">spawn</span><span class=\"p\">,</span> <span class=\"nx\">Thread</span><span class=\"p\">,</span> <span class=\"nx\">Worker</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">threads</span><span class=\"dl\">\"</span><span class=\"kd\">const</span> <span class=\"nx\">auth</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">spawn</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nx\">Worker</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">./workers/auth</span><span class=\"dl\">\"</span><span class=\"p\">))</span><span class=\"kd\">const</span> <span class=\"nx\">hashed</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">auth</span><span class=\"p\">.</span><span class=\"nx\">hashPassword</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Super secret password</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">1234</span><span class=\"dl\">\"</span><span class=\"p\">)</span><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Hashed password:</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">hashed</span><span class=\"p\">)</span><span class=\"k\">await</span> <span class=\"nx\">Thread</span><span class=\"p\">.</span><span class=\"nx\">terminate</span><span class=\"p\">(</span><span class=\"nx\">auth</span><span class=\"p\">)</span></code></pre></div>    </div>    <div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// workers/auth.js</span><span class=\"k\">import</span> <span class=\"nx\">sha256</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">js-sha256</span><span class=\"dl\">\"</span><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">expose</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">threads/worker</span><span class=\"dl\">\"</span><span class=\"nx\">expose</span><span class=\"p\">({</span>  <span class=\"nx\">hashPassword</span><span class=\"p\">(</span><span class=\"nx\">password</span><span class=\"p\">,</span> <span class=\"nx\">salt</span><span class=\"p\">)</span> <span class=\"p\">{</span>    <span class=\"k\">return</span> <span class=\"nx\">sha256</span><span class=\"p\">(</span><span class=\"nx\">password</span> <span class=\"o\">+</span> <span class=\"nx\">salt</span><span class=\"p\">)</span>  <span class=\"p\">}</span><span class=\"p\">})</span></code></pre></div>    </div>  </div></section><hr /><section class=\"my-5\">  <h2 class=\"text-center\">Modern features</h2>  <p class=\"mt-3 text-center\">    Designed for modern day JavaScript and TypeScript code.  </p>  <ul class=\"index-features-list\">    <li>      <span class=\"index-feature-icon mr-4\">        <i class=\"fab fa-3x fa-js-square\"></i>      </span>      <div>        <h4 class=\"m-0\">Async functions &amp; observables</h4>        <p>          Built on functional paradigms and with modern APIs in mind, threads.js makes it easy to write clear, declarative code.        </p>      </div>    </li>    <li>      <span class=\"index-feature-icon mr-4\">        <i class=\"fas fa-3x fa-check-square\"></i>      </span>      <div>        <h4 class=\"m-0\">Statically typed using TypeScript</h4>        <p>          Completely written in TypeScript \u2013 providing a robust code base and always shipping up-to-date types out of the box.        </p>      </div>    </li>    <li>      <span class=\"index-feature-icon mr-4\">        <i class=\"fas fa-3x fa-box\"></i>      </span>      <div>        <h4 class=\"m-0\">Webpack &amp; other bundlers</h4>        <p>          Works great with <a href=\"https://webpack.js.org/\" rel=\"nofollow noopener\" target=\"_blank\">webpack</a> \u2013 just need to add one extra plugin!<br />          Works with other bundlers, too.        </p>      </div>    </li>  </ul></section><hr /><section class=\"my-5\">  <h2 class=\"text-center\">Use cases</h2>  <p class=\"mt-3 text-center\">    Web workers and worker threads turn out to be pretty versatile.  </p>  <ul class=\"index-features-list\">    <li>      <span class=\"index-feature-icon mr-4\">        <i class=\"fas fa-3x fa-forward\"></i>      </span>      <div>        <h4 class=\"m-0\">Speed-up CPU-bound code</h4>        <p>          Outsourcing calculation-intensive code to one or multiple workers can improve performance drastically.        </p>      </div>    </li>    <li>      <span class=\"index-feature-icon mr-4\">        <i class=\"fas fa-3x fa-list-alt\"></i>      </span>      <div>        <h4 class=\"m-0\">Thread pools</h4>        <p>          Manage bulk tasks by using a thread pool. The pool will dispatch the tasks to workers in a controlled and predictable way.        </p>      </div>    </li>    <li>      <span class=\"index-feature-icon mr-4\">        <i class=\"fas fa-3x fa-desktop\"></i>      </span>      <div>        <h4 class=\"m-0\">Smooth UI transitions</h4>        <p>          Offload business logic from the main thread, since this is where the rendering happens. Enjoy smooth 60 FPS.        </p>      </div>    </li>    <li>      <span class=\"index-feature-icon mr-4\">        <i class=\"fas fa-3x fa-shield-alt\"></i>      </span>      <div>        <h4 class=\"m-0\">Shield sensitive functionality</h4>        <p>          Security-relevant code should be shielded from other application code. Use worker to sandbox code and create secure enclaves.        </p>      </div>    </li>  </ul></section><hr /><section class=\"index-features my-5\">  <h2 class=\"text-center\">Supported platforms</h2>  <p class=\"mt-3 text-center\">    Serves as an abstraction layer for different worker implementations.  </p>  <div class=\"mt-3\">    <div class=\"grid\" style=\"justify-content: center\">      <div class=\"card cell m-3 card-flex\">        <div class=\"card__content text-center\">          <div class=\"card__header\">            <div class=\"logos\"><i class=\"fab fa-node-js\"></i></div>          </div>          <h4>Node.js 12+</h4>          <p>            Using native <a href=\"https://nodejs.org/api/worker_threads.html\" rel=\"nofollow noopener\" target=\"_blank\">worker threads</a>          </p>        </div>      </div>      <div class=\"card cell m-3 card-flex\">        <div class=\"card__content text-center\">          <div class=\"card__header\">            <div class=\"logos\"><i class=\"fab fa-node-js\"></i></div>          </div>          <h4>Node.js 8 to 11</h4>          <p>            Using <a href=\"https://github.com/avoidwork/tiny-worker\" rel=\"nofollow noopener\" target=\"_blank\">tiny-worker</a>          </p>        </div>      </div>      <div class=\"card cell m-3 card-flex\">        <div class=\"card__content text-center\">          <div class=\"card__header\">            <div class=\"logos\">              <i class=\"fab fa-chrome\"></i>              <i class=\"fab fa-firefox\"></i>              <i class=\"fab fa-safari\"></i>              <i class=\"fab fa-edge\"></i>            </div>          </div>          <h4>Web browsers</h4>          <p>            Using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API\" rel=\"nofollow noopener\" target=\"_blank\">web workers</a>          </p>        </div>      </div>      <div class=\"card cell cell--sm-11 cell--lg-4 m-3\">        <div class=\"card__content text-center\">          <div class=\"card__header\">            <div class=\"logos\">              <i class=\"fab fa-windows\"></i>              <i class=\"fab fa-apple\"></i>              <i class=\"fab fa-linux\"></i>            </div>          </div>          <p>            Tested on all major desktop operating systems          </p>        </div>      </div>    </div>  </div></section><section>  <div class=\"my-3\">    <p class=\"text-center\">      <a class=\"button button--primary button--rounded button--xxl mt-4 mx-2\" href=\"/getting-started\">        <i class=\"fas fa-arrow-right mr-2\" style=\"font-size: 90%\"></i>        Get started      </a>    </p>  </div></section><!-- TODO: Section --><p><!-- Link: Repository -->  <!-- Link: Releases -->  <!-- Link: Issues --><!-- --- --></p></div><section class=\"page__comments d-print-none\"></section></article><!-- start custom main bottom snippet --><!-- end custom main bottom snippet --></div>            </div></div></div><div class=\"page__footer d-print-none\"><footer class=\"footer py-4 js-page-footer\">  <div class=\"main\"><div itemscope itemtype=\"http://schema.org/Person\">      <meta itemprop=\"name\" content=\"Andy Wermke\"><meta itemprop=\"url\" content=\"https://github.com/andywer\"><div class=\"footer__author-links\"><div class=\"author-links\">  <ul class=\"menu menu--nowrap menu--inline\"><link itemprop=\"url\" href=\"https://github.com/andywer\"></ul></div></div>    </div><div class=\"site-info mt-2\">      <div>\u00a9 threads.js 2019,        Powered by <a title=\"Jekyll is a simple, blog-aware, static site generator.\" href=\"http://jekyllrb.com/\">Jekyll</a> & <a        title=\"TeXt is a super customizable Jekyll theme.\" href=\"https://github.com/kitian616/jekyll-TeXt-theme\">TeXt Theme</a>.      </div>    </div>  </div></footer></div></div>    </div><script>(function() {  var SOURCES = window.TEXT_VARIABLES.sources;  window.Lazyload.js(SOURCES.jquery, function() {    var $body = $('body'), $window = $(window);    var $pageRoot = $('.js-page-root'), $pageMain = $('.js-page-main');    var activeCount = 0;    function modal(options) {      var $root = this, visible, onChange, hideWhenWindowScroll = false;      var scrollTop;      function setOptions(options) {        var _options = options || {};        visible = _options.initialVisible === undefined ? false : show;        onChange = _options.onChange;        hideWhenWindowScroll = _options.hideWhenWindowScroll;      }      function init() {        setState(visible);      }      function setState(isShow) {        if (isShow === visible) {          return;        }        visible = isShow;        if (visible) {          activeCount++;          scrollTop = $(window).scrollTop() || $pageMain.scrollTop();          $root.addClass('modal--show');          $pageMain.scrollTop(scrollTop);          activeCount === 1 && ($pageRoot.addClass('show-modal'), $body.addClass('of-hidden'));          hideWhenWindowScroll && window.hasEvent('touchstart') && $window.on('scroll', hide);          $window.on('keyup', handleKeyup);        } else {          activeCount > 0 && activeCount--;          $root.removeClass('modal--show');          $window.scrollTop(scrollTop);          activeCount === 0 && ($pageRoot.removeClass('show-modal'), $body.removeClass('of-hidden'));          hideWhenWindowScroll && window.hasEvent('touchstart') && $window.off('scroll', hide);          $window.off('keyup', handleKeyup);        }        onChange && onChange(visible);      }      function show() {        setState(true);      }      function hide() {        setState(false);      }      function handleKeyup(e) {        // Char Code: 27  ESC        if (e.which ===  27) {          hide();        }      }      setOptions(options);      init();      return {        show: show,        hide: hide,        $el: $root      };    }    $.fn.modal = modal;  });})();</script><div class=\"modal modal--overflow page__search-modal d-print-none js-page-search-modal\"></div></div><script>(function() {  var SOURCES = window.TEXT_VARIABLES.sources;  window.Lazyload.js(SOURCES.jquery, function() {    function scrollToAnchor(anchor, duration, callback) {      var $root = this;      $root.animate({ scrollTop: $(anchor).position().top }, duration, function() {        window.history.replaceState(null, '', window.location.href.split('#')[0] + anchor);        callback && callback();      });    }    $.fn.scrollToAnchor = scrollToAnchor;  });})();(function() {  var SOURCES = window.TEXT_VARIABLES.sources;  window.Lazyload.js(SOURCES.jquery, function() {    function affix(options) {      var $root = this, $window = $(window), $scrollTarget, $scroll,        offsetBottom = 0, scrollTarget = window, scroll = window.document, disabled = false, isOverallScroller = true,        rootTop, rootLeft, rootHeight, scrollBottom, rootBottomTop,        hasInit = false, curState;      function setOptions(options) {        var _options = options || {};        _options.offsetBottom && (offsetBottom = _options.offsetBottom);        _options.scrollTarget && (scrollTarget = _options.scrollTarget);        _options.scroll && (scroll = _options.scroll);        _options.disabled !== undefined && (disabled = _options.disabled);        $scrollTarget = $(scrollTarget);        isOverallScroller = window.isOverallScroller($scrollTarget[0]);        $scroll = $(scroll);      }      function preCalc() {        top();        rootHeight = $root.outerHeight();        rootTop = $root.offset().top + (isOverallScroller ? 0 :  $scrollTarget.scrollTop());        rootLeft = $root.offset().left;      }      function calc(needPreCalc) {        needPreCalc && preCalc();        scrollBottom = $scroll.outerHeight() - offsetBottom - rootHeight;        rootBottomTop = scrollBottom - rootTop;      }      function top() {        if (curState !== 'top') {          $root.removeClass('fixed').css({            left: 0,            top: 0          });          curState = 'top';        }      }      function fixed() {        if (curState !== 'fixed') {          $root.addClass('fixed').css({            left: rootLeft + 'px',            top: 0          });          curState = 'fixed';        }      }      function bottom() {        if (curState !== 'bottom') {          $root.removeClass('fixed').css({            left: 0,            top: rootBottomTop + 'px'          });          curState = 'bottom';        }      }      function setState() {        var scrollTop = $scrollTarget.scrollTop();        if (scrollTop >= rootTop && scrollTop <= scrollBottom) {          fixed();        } else if (scrollTop < rootTop) {          top();        } else {          bottom();        }      }      function init() {        if(!hasInit) {          var interval, timeout;          calc(true); setState();          // run calc every 100 millisecond          interval = setInterval(function() {            calc();          }, 100);          timeout = setTimeout(function() {            clearInterval(interval);          }, 45000);          window.pageLoad.then(function() {            setTimeout(function() {              clearInterval(interval);              clearTimeout(timeout);            }, 3000);          });          $scrollTarget.on('scroll', function() {            disabled || setState();          });          $window.on('resize', function() {            disabled || (calc(true), setState());          });          hasInit = true;        }      }      setOptions(options);      if (!disabled) {        init();      }      $window.on('resize', window.throttle(function() {        init();      }, 200));      return {        setOptions: setOptions,        refresh: function() {          calc(true, { animation: false }); setState();        }      };    }    $.fn.affix = affix;  });})();(function() {  var SOURCES = window.TEXT_VARIABLES.sources;  window.Lazyload.js(SOURCES.jquery, function() {    function toc(options) {      var $root = this, $window = $(window), $scrollTarget, $scroller, $tocUl = $('<ul class=\"toc toc--ellipsis\"></ul>'), $tocLi, $headings, $activeLast, $activeCur,        selectors = 'h1,h2,h3', container = 'body', scrollTarget = window, scroller = 'html, body', disabled = false,        headingsPos, scrolling = false, hasRendered = false, hasInit = false;      function setOptions(options) {        var _options = options || {};        _options.selectors && (selectors = _options.selectors);        _options.container && (container = _options.container);        _options.scrollTarget && (scrollTarget = _options.scrollTarget);        _options.scroller && (scroller = _options.scroller);        _options.disabled !== undefined && (disabled = _options.disabled);        $headings = $(container).find(selectors).filter('[id]');        $scrollTarget = $(scrollTarget);        $scroller = $(scroller);      }      function calc() {        headingsPos = [];        $headings.each(function() {          headingsPos.push(Math.floor($(this).position().top));        });      }      function setState(element, disabled) {        var scrollTop = $scrollTarget.scrollTop(), i;        if (disabled || !headingsPos || headingsPos.length < 1) { return; }        if (element) {          $activeCur = element;        } else {          for (i = 0; i < headingsPos.length; i++) {            if (scrollTop >= headingsPos[i]) {              $activeCur = $tocLi.eq(i);            } else {              $activeCur || ($activeCur = $tocLi.eq(i));              break;            }          }        }        $activeLast && $activeLast.removeClass('active');        ($activeLast = $activeCur).addClass('active');      }      function render() {        if(!hasRendered) {          $root.append($tocUl);          $headings.each(function() {            var $this = $(this);            $tocUl.append($('<li></li>').addClass('toc-' + $this.prop('tagName').toLowerCase())              .append($('<a></a>').text($this.text()).attr('href', '#' + $this.prop('id'))));          });          $tocLi = $tocUl.children('li');          $tocUl.on('click', 'a', function(e) {            e.preventDefault();            var $this = $(this);            scrolling = true;            setState($this.parent());            $scroller.scrollToAnchor($this.attr('href'), 400, function() {              scrolling = false;            });          });        }        hasRendered = true;      }      function init() {        var interval, timeout;        if(!hasInit) {          render(); calc(); setState(null, scrolling);          // run calc every 100 millisecond          interval = setInterval(function() {            calc();          }, 100);          timeout = setTimeout(function() {            clearInterval(interval);          }, 45000);          window.pageLoad.then(function() {            setTimeout(function() {              clearInterval(interval);              clearTimeout(timeout);            }, 3000);          });          $scrollTarget.on('scroll', function() {            disabled || setState(null, scrolling);          });          $window.on('resize', window.throttle(function() {            if (!disabled) {              render(); calc(); setState(null, scrolling);            }          }, 100));        }        hasInit = true;      }      setOptions(options);      if (!disabled) {        init();      }      $window.on('resize', window.throttle(function() {        init();      }, 200));      return {        setOptions: setOptions      };    }    $.fn.toc = toc;  });})();/*(function () {})();*/</script>    </div>    <script>(function () {  var $root = document.getElementsByClassName('root')[0];  if (window.hasEvent('touchstart')) {    $root.dataset.isTouch = true;    document.addEventListener('touchstart', function(){}, false);  }})();</script>  </body></html>",
  "embeddings": []
}
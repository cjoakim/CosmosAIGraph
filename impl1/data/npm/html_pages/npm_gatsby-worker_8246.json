{
  "libtype": "npm",
  "libname": "gatsby-worker",
  "url": "https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-worker#readme",
  "html": "{\"payload\":{\"allShortcutsEnabled\":false,\"path\":\"packages/gatsby-worker\",\"repo\":{\"id\":36040894,\"defaultBranch\":\"master\",\"name\":\"gatsby\",\"ownerLogin\":\"gatsbyjs\",\"currentUserCanPush\":false,\"isFork\":false,\"isEmpty\":false,\"createdAt\":\"2015-05-21T22:43:05.000Z\",\"ownerAvatar\":\"https://avatars.githubusercontent.com/u/12551863?v=4\",\"public\":true,\"private\":false,\"isOrgOwned\":true},\"currentUser\":null,\"refInfo\":{\"name\":\"master\",\"listCacheKey\":\"v0:1709597366.0\",\"canEdit\":false,\"refType\":\"branch\",\"currentOid\":\"7661bb92f2f21ea09399476579efe9fbb2fbb7db\"},\"tree\":{\"items\":[{\"name\":\"src\",\"path\":\"packages/gatsby-worker/src\",\"contentType\":\"directory\"},{\"name\":\".babelrc\",\"path\":\"packages/gatsby-worker/.babelrc\",\"contentType\":\"file\"},{\"name\":\".gitignore\",\"path\":\"packages/gatsby-worker/.gitignore\",\"contentType\":\"file\"},{\"name\":\".npmignore\",\"path\":\"packages/gatsby-worker/.npmignore\",\"contentType\":\"file\"},{\"name\":\"CHANGELOG.md\",\"path\":\"packages/gatsby-worker/CHANGELOG.md\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"packages/gatsby-worker/README.md\",\"contentType\":\"file\"},{\"name\":\"package.json\",\"path\":\"packages/gatsby-worker/package.json\",\"contentType\":\"file\"},{\"name\":\"tsconfig.json\",\"path\":\"packages/gatsby-worker/tsconfig.json\",\"contentType\":\"file\"}],\"templateDirectorySuggestionUrl\":null,\"readme\":{\"displayName\":\"README.md\",\"richText\":\"<article class=\\\"markdown-body entry-content container-lg\\\" itemprop=\\\"text\\\"><div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h1 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">gatsby-worker</h1><a id=\\\"user-content-gatsby-worker\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: gatsby-worker\\\" href=\\\"#gatsby-worker\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">Utility to execute tasks in forked processes. Highly inspired by <a href=\\\"https://www.npmjs.com/package/jest-worker\\\" rel=\\\"nofollow\\\"><code>jest-worker</code></a>.</p>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Example</h2><a id=\\\"user-content-example\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Example\\\" href=\\\"#example\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">File <code>worker.ts</code>:</p>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"export async function heavyTask(param: string): Promise&lt;string&gt; {\\n  // using workers is ideal for CPU intensive tasks\\n  return await heavyProcessing(param)\\n}\\n\\nexport async function setupStep(param: string): Promise&lt;void&gt; {\\n  await heavySetup(param)\\n}\\\"><pre><span class=\\\"pl-k\\\">export</span> <span class=\\\"pl-k\\\">async</span> <span class=\\\"pl-k\\\">function</span> <span class=\\\"pl-en\\\">heavyTask</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">param</span>: <span class=\\\"pl-smi\\\">string</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-smi\\\">Promise</span><span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-smi\\\">string</span><span class=\\\"pl-kos\\\">&gt;</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-c\\\">// using workers is ideal for CPU intensive tasks</span>\\n  <span class=\\\"pl-k\\\">return</span> <span class=\\\"pl-k\\\">await</span> <span class=\\\"pl-en\\\">heavyProcessing</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">param</span><span class=\\\"pl-kos\\\">)</span>\\n<span class=\\\"pl-kos\\\">}</span>\\n\\n<span class=\\\"pl-k\\\">export</span> <span class=\\\"pl-k\\\">async</span> <span class=\\\"pl-k\\\">function</span> <span class=\\\"pl-en\\\">setupStep</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">param</span>: <span class=\\\"pl-smi\\\">string</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-smi\\\">Promise</span><span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-smi\\\"><span class=\\\"pl-k\\\">void</span></span><span class=\\\"pl-kos\\\">&gt;</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-k\\\">await</span> <span class=\\\"pl-en\\\">heavySetup</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">param</span><span class=\\\"pl-kos\\\">)</span>\\n<span class=\\\"pl-kos\\\">}</span></pre></div>\\n<p dir=\\\"auto\\\">File <code>parent.ts</code>:</p>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import { WorkerPool } from &quot;gatsby-worker&quot;\\n\\nconst workerPool = new WorkerPool&lt;typeof import(&quot;./worker&quot;)&gt;(\\n  require.resolve(`./worker`),\\n  {\\n    numWorkers: 5,\\n    env: {\\n      CUSTOM_ENV_VAR_TO_SET_IN_WORKER: `foo`,\\n    },\\n    silent: false,\\n  }\\n)\\n\\n// queue a task on all workers\\nconst arrayOfPromises = workerPool.all.setupStep(`bar`)\\n\\n// queue a task on single worker\\nconst singlePromise = workerPool.single.heavyTask(`baz`)\\\"><pre><span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-kos\\\">{</span> <span class=\\\"pl-smi\\\">WorkerPool</span> <span class=\\\"pl-kos\\\">}</span> <span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s\\\">\\\"gatsby-worker\\\"</span>\\n\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">workerPool</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-k\\\">new</span> <span class=\\\"pl-smi\\\">WorkerPool</span><span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-k\\\">typeof</span> <span class=\\\"pl-k\\\">import</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">\\\"./worker\\\"</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">&gt;</span><span class=\\\"pl-kos\\\">(</span>\\n  <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">resolve</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">`./worker`</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-kos\\\">{</span>\\n    <span class=\\\"pl-c1\\\">numWorkers</span>: <span class=\\\"pl-c1\\\">5</span><span class=\\\"pl-kos\\\">,</span>\\n    <span class=\\\"pl-c1\\\">env</span>: <span class=\\\"pl-kos\\\">{</span>\\n      <span class=\\\"pl-c1\\\">CUSTOM_ENV_VAR_TO_SET_IN_WORKER</span>: <span class=\\\"pl-s\\\">`foo`</span><span class=\\\"pl-kos\\\">,</span>\\n    <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">,</span>\\n    <span class=\\\"pl-c1\\\">silent</span>: <span class=\\\"pl-c1\\\">false</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-kos\\\">}</span>\\n<span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-c\\\">// queue a task on all workers</span>\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">arrayOfPromises</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">workerPool</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">all</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">setupStep</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">`bar`</span><span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-c\\\">// queue a task on single worker</span>\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">singlePromise</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">workerPool</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">single</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">heavyTask</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">`baz`</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">API</h2><a id=\\\"user-content-api\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: API\\\" href=\\\"#api\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Constructor</h3><a id=\\\"user-content-constructor\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Constructor\\\" href=\\\"#constructor\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"// TypeOfWorkerModule allows to type exposed functions ensuring type safety.\\n// It will convert sync methods to async and discard/disallow usage of exports\\n// that are not functions. Recommended to use with `&lt;typeof import(&quot;path_to_worker_module&quot;)&gt;`.\\nconst workerPool = new WorkerPool&lt;TypeOfWorkerModule&gt;(\\n  // Absolute path to worker module. Recommended to use with `require.resolve`\\n  workerPath: string,\\n  // Not required options\\n  options?: {\\n    // Number of workers to spawn. Defaults to `1` if not defined.\\n    numWorkers?: number\\n    // Additional env vars to set in worker. Worker will inherit env vars of parent process\\n    // as well as additional `GATSBY_WORKER_ID` env var (starting with &quot;1&quot; for first worker)\\n    env?: Record&lt;string, string&gt;,\\n    // Whether or not the output from forked process should ignored. Defaults to `false` if not defined.\\n    silent?: boolean,\\n  }\\n)\\\"><pre><span class=\\\"pl-c\\\">// TypeOfWorkerModule allows to type exposed functions ensuring type safety.</span>\\n<span class=\\\"pl-c\\\">// It will convert sync methods to async and discard/disallow usage of exports</span>\\n<span class=\\\"pl-c\\\">// that are not functions. Recommended to use with `&lt;typeof import(\\\"path_to_worker_module\\\")&gt;`.</span>\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">workerPool</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-k\\\">new</span> <span class=\\\"pl-smi\\\">WorkerPool</span><span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-smi\\\">TypeOfWorkerModule</span><span class=\\\"pl-kos\\\">&gt;</span><span class=\\\"pl-kos\\\">(</span>\\n  <span class=\\\"pl-c\\\">// Absolute path to worker module. Recommended to use with `require.resolve`</span>\\n  <span class=\\\"pl-s1\\\">workerPath</span>: string<span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c\\\">// Not required options</span>\\n  <span class=\\\"pl-s1\\\">options</span>?: <span class=\\\"pl-kos\\\">{</span>\\n    <span class=\\\"pl-c\\\">// Number of workers to spawn. Defaults to `1` if not defined.</span>\\n    <span class=\\\"pl-s1\\\">numWorkers</span>?: number\\n    <span class=\\\"pl-c\\\">// Additional env vars to set in worker. Worker will inherit env vars of parent process</span>\\n    <span class=\\\"pl-c\\\">// as well as additional `GATSBY_WORKER_ID` env var (starting with \\\"1\\\" for first worker)</span>\\n    <span class=\\\"pl-s1\\\">env</span>?: <span class=\\\"pl-smi\\\">Record</span><span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-smi\\\">string</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-smi\\\">string</span><span class=\\\"pl-kos\\\">&gt;</span><span class=\\\"pl-kos\\\">,</span>\\n    <span class=\\\"pl-c\\\">// Whether or not the output from forked process should ignored. Defaults to `false` if not defined.</span>\\n    <span class=\\\"pl-s1\\\">silent</span>?: <span class=\\\"pl-s1\\\">boolean</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-kos\\\">}</span>\\n<span class=\\\"pl-kos\\\">)</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"><code>.single</code></h3><a id=\\\"user-content-single\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: .single\\\" href=\\\"#single\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"// Exports of the worker module become available under `.single` property of `WorkerPool` instance.\\n// Calling those will either start executing immediately if there are any idle workers or queue them\\n// to be executed once a worker become idle.\\nconst singlePromise = workerPool.single.heavyTask(`baz`)\\\"><pre><span class=\\\"pl-c\\\">// Exports of the worker module become available under `.single` property of `WorkerPool` instance.</span>\\n<span class=\\\"pl-c\\\">// Calling those will either start executing immediately if there are any idle workers or queue them</span>\\n<span class=\\\"pl-c\\\">// to be executed once a worker become idle.</span>\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">singlePromise</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">workerPool</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">single</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">heavyTask</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">`baz`</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"><code>.all</code></h3><a id=\\\"user-content-all\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: .all\\\" href=\\\"#all\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"// Exports of the worker module become available under `.all` property of `WorkerPool` instance.\\n// Calling those will ensure a function is executed on all workers. Best usage for this is performing\\n// setup/bootstrap of workers.\\nconst arrayOfPromises = workerPool.all.setupStep(`baz`)\\\"><pre><span class=\\\"pl-c\\\">// Exports of the worker module become available under `.all` property of `WorkerPool` instance.</span>\\n<span class=\\\"pl-c\\\">// Calling those will ensure a function is executed on all workers. Best usage for this is performing</span>\\n<span class=\\\"pl-c\\\">// setup/bootstrap of workers.</span>\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">arrayOfPromises</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">workerPool</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">all</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">setupStep</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">`baz`</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"><code>.end</code></h3><a id=\\\"user-content-end\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: .end\\\" href=\\\"#end\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"// Used to shutdown `WorkerPool`. If there are any in progress or queued tasks, promises for those will be rejected as they won't be able to complete.\\nconst arrayOfPromises = workerPool.end()\\\"><pre><span class=\\\"pl-c\\\">// Used to shutdown `WorkerPool`. If there are any in progress or queued tasks, promises for those will be rejected as they won't be able to complete.</span>\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">arrayOfPromises</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">workerPool</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">end</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"><code>isWorker</code></h3><a id=\\\"user-content-isworker\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: isWorker\\\" href=\\\"#isworker\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"// Determine if current context is executed in worker context. Useful for conditional handling depending on context.\\nimport { isWorker } from &quot;gatsby-worker&quot;\\n\\nif (isWorker) {\\n  // this is executed in worker context\\n} else {\\n  // this is NOT executed in worker context\\n}\\\"><pre><span class=\\\"pl-c\\\">// Determine if current context is executed in worker context. Useful for conditional handling depending on context.</span>\\n<span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-kos\\\">{</span> <span class=\\\"pl-s1\\\">isWorker</span> <span class=\\\"pl-kos\\\">}</span> <span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s\\\">\\\"gatsby-worker\\\"</span>\\n\\n<span class=\\\"pl-k\\\">if</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">isWorker</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-c\\\">// this is executed in worker context</span>\\n<span class=\\\"pl-kos\\\">}</span> <span class=\\\"pl-k\\\">else</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-c\\\">// this is NOT executed in worker context</span>\\n<span class=\\\"pl-kos\\\">}</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Messaging</h3><a id=\\\"user-content-messaging\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Messaging\\\" href=\\\"#messaging\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\"><code>gatsby-worker</code> allows sending messages from worker to main and from main to worker at any time.</p>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Sending messages from worker</h4><a id=\\\"user-content-sending-messages-from-worker\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Sending messages from worker\\\" href=\\\"#sending-messages-from-worker\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">File <code>message-types.ts</code>:</p>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"// `gatsby-worker` supports message types. Creating common module that centralize possible messages\\n// that is shared by worker and parent will ensure messages type safety.\\ninterface IPingMessage {\\n  type: `PING`\\n}\\n\\ninterface IAnotherMessageFromChild {\\n  type: `OTHER_MESSAGE_FROM_CHILD`\\n  payload: {\\n    foo: string\\n  }\\n}\\n\\nexport type MessagesFromChild = IPingMessage | IAnotherMessageFromChild\\n\\ninterface IPongMessage {\\n  type: `PONG`\\n}\\n\\ninterface IAnotherMessageFromParent {\\n  type: `OTHER_MESSAGE_FROM_PARENT`\\n  payload: {\\n    foo: string\\n  }\\n}\\n\\nexport type MessagesFromParent = IPongMessage | IAnotherMessageFromParent\\\"><pre><span class=\\\"pl-c\\\">// `gatsby-worker` supports message types. Creating common module that centralize possible messages</span>\\n<span class=\\\"pl-c\\\">// that is shared by worker and parent will ensure messages type safety.</span>\\n<span class=\\\"pl-k\\\">interface</span> <span class=\\\"pl-smi\\\">IPingMessage</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-c1\\\">type</span>: `PING`\\n<span class=\\\"pl-kos\\\">}</span>\\n\\n<span class=\\\"pl-k\\\">interface</span> <span class=\\\"pl-smi\\\">IAnotherMessageFromChild</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-c1\\\">type</span>: `OTHER_MESSAGE_FROM_CHILD`\\n  <span class=\\\"pl-c1\\\">payload</span>: <span class=\\\"pl-kos\\\">{</span>\\n    <span class=\\\"pl-c1\\\">foo</span>: <span class=\\\"pl-smi\\\">string</span>\\n  <span class=\\\"pl-kos\\\">}</span>\\n<span class=\\\"pl-kos\\\">}</span>\\n\\n<span class=\\\"pl-k\\\">export</span> <span class=\\\"pl-k\\\">type</span> <span class=\\\"pl-smi\\\">MessagesFromChild</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-smi\\\">IPingMessage</span> <span class=\\\"pl-c1\\\">|</span> <span class=\\\"pl-smi\\\">IAnotherMessageFromChild</span>\\n\\n<span class=\\\"pl-k\\\">interface</span> <span class=\\\"pl-smi\\\">IPongMessage</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-c1\\\">type</span>: `PONG`\\n<span class=\\\"pl-kos\\\">}</span>\\n\\n<span class=\\\"pl-k\\\">interface</span> <span class=\\\"pl-smi\\\">IAnotherMessageFromParent</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-c1\\\">type</span>: `OTHER_MESSAGE_FROM_PARENT`\\n  <span class=\\\"pl-c1\\\">payload</span>: <span class=\\\"pl-kos\\\">{</span>\\n    <span class=\\\"pl-c1\\\">foo</span>: <span class=\\\"pl-smi\\\">string</span>\\n  <span class=\\\"pl-kos\\\">}</span>\\n<span class=\\\"pl-kos\\\">}</span>\\n\\n<span class=\\\"pl-k\\\">export</span> <span class=\\\"pl-k\\\">type</span> <span class=\\\"pl-smi\\\">MessagesFromParent</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-smi\\\">IPongMessage</span> <span class=\\\"pl-c1\\\">|</span> <span class=\\\"pl-smi\\\">IAnotherMessageFromParent</span></pre></div>\\n<p dir=\\\"auto\\\">File <code>worker.ts</code>:</p>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import { getMessenger } from &quot;gatsby-worker&quot;\\n\\nimport { MessagesFromParent, MessagesFromChild } from &quot;./message-types&quot;\\n\\nconst messenger = getMessenger&lt;MessagesFromParent, MessagesFromChild&gt;()\\n// messenger might be `undefined` if `getMessenger`\\n// is called NOT in worker context\\nif (messenger) {\\n  // send a message to a parent\\n  messenger.send({ type: `PING` })\\n  messenger.send({\\n    type: `OTHER_MESSAGE_FROM_CHILD`,\\n    payload: {\\n      foo: `bar`,\\n    },\\n  })\\n\\n  // following would cause type error as message like that is\\n  // not part of MessagesFromChild type union\\n  // messenger.send({ type: `NOT_PART_OF_TYPES` })\\n\\n  // start listening to messages from parent\\n  messenger.onMessage(msg =&gt; {\\n    switch (msg.type) {\\n      case `PONG`: {\\n        // handle PONG message\\n        break\\n      }\\n      case `OTHER_MESSAGE_FROM_PARENT`: {\\n        // msg.payload.foo will be typed as `string` here\\n        // handle\\n        break\\n      }\\n\\n      // following would cause type error as there is no msg with\\n      // given type as part of MessagesFromParent type union\\n      // case `NOT_PART_OF_TYPES`: {}\\n    }\\n  })\\n}\\\"><pre><span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-kos\\\">{</span> <span class=\\\"pl-s1\\\">getMessenger</span> <span class=\\\"pl-kos\\\">}</span> <span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s\\\">\\\"gatsby-worker\\\"</span>\\n\\n<span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-kos\\\">{</span> <span class=\\\"pl-smi\\\">MessagesFromParent</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-smi\\\">MessagesFromChild</span> <span class=\\\"pl-kos\\\">}</span> <span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s\\\">\\\"./message-types\\\"</span>\\n\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">messenger</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">getMessenger</span><span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-smi\\\">MessagesFromParent</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-smi\\\">MessagesFromChild</span><span class=\\\"pl-kos\\\">&gt;</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">)</span>\\n<span class=\\\"pl-c\\\">// messenger might be `undefined` if `getMessenger`</span>\\n<span class=\\\"pl-c\\\">// is called NOT in worker context</span>\\n<span class=\\\"pl-k\\\">if</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">messenger</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-c\\\">// send a message to a parent</span>\\n  <span class=\\\"pl-s1\\\">messenger</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">send</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">{</span> <span class=\\\"pl-c1\\\">type</span>: <span class=\\\"pl-s\\\">`PING`</span> <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span>\\n  <span class=\\\"pl-s1\\\">messenger</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">send</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">{</span>\\n    <span class=\\\"pl-c1\\\">type</span>: <span class=\\\"pl-s\\\">`OTHER_MESSAGE_FROM_CHILD`</span><span class=\\\"pl-kos\\\">,</span>\\n    <span class=\\\"pl-c1\\\">payload</span>: <span class=\\\"pl-kos\\\">{</span>\\n      <span class=\\\"pl-c1\\\">foo</span>: <span class=\\\"pl-s\\\">`bar`</span><span class=\\\"pl-kos\\\">,</span>\\n    <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span>\\n\\n  <span class=\\\"pl-c\\\">// following would cause type error as message like that is</span>\\n  <span class=\\\"pl-c\\\">// not part of MessagesFromChild type union</span>\\n  <span class=\\\"pl-c\\\">// messenger.send({ type: `NOT_PART_OF_TYPES` })</span>\\n\\n  <span class=\\\"pl-c\\\">// start listening to messages from parent</span>\\n  <span class=\\\"pl-s1\\\">messenger</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">onMessage</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">msg</span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-kos\\\">{</span>\\n    <span class=\\\"pl-k\\\">switch</span> <span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">msg</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">type</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-kos\\\">{</span>\\n      <span class=\\\"pl-k\\\">case</span> <span class=\\\"pl-s\\\">`PONG`</span>: <span class=\\\"pl-kos\\\">{</span>\\n        <span class=\\\"pl-c\\\">// handle PONG message</span>\\n        <span class=\\\"pl-k\\\">break</span>\\n      <span class=\\\"pl-kos\\\">}</span>\\n      <span class=\\\"pl-k\\\">case</span> <span class=\\\"pl-s\\\">`OTHER_MESSAGE_FROM_PARENT`</span>: <span class=\\\"pl-kos\\\">{</span>\\n        <span class=\\\"pl-c\\\">// msg.payload.foo will be typed as `string` here</span>\\n        <span class=\\\"pl-c\\\">// handle</span>\\n        <span class=\\\"pl-k\\\">break</span>\\n      <span class=\\\"pl-kos\\\">}</span>\\n\\n      <span class=\\\"pl-c\\\">// following would cause type error as there is no msg with</span>\\n      <span class=\\\"pl-c\\\">// given type as part of MessagesFromParent type union</span>\\n      <span class=\\\"pl-c\\\">// case `NOT_PART_OF_TYPES`: {}</span>\\n    <span class=\\\"pl-kos\\\">}</span>\\n  <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span>\\n<span class=\\\"pl-kos\\\">}</span></pre></div>\\n<p dir=\\\"auto\\\">File <code>parent.ts</code>:</p>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import { getMessenger } from &quot;gatsby-worker&quot;\\n\\nimport { MessagesFromParent, MessagesFromChild } from &quot;./message-types&quot;\\n\\nconst workerPool = new WorkerPool&lt;\\n  typeof import(&quot;./worker&quot;),\\n  MessagesFromParent,\\n  MessagesFromChild\\n&gt;(\\n  workerPath: require.resolve(`./worker`)\\n)\\n\\n// `sendMessage` on WorkerPool instance requires second parameter\\n// `workerId` to specify to which worker to send message to\\n// (`workerId` starts at 1 for first worker).\\nworkerPool.sendMessage(\\n  {\\n    type: `OTHER_MESSAGE_FROM_PARENT`,\\n    payload: {\\n      foo: `baz`\\n    }\\n  },\\n  1\\n)\\n\\n// start listening to messages from child\\n// `onMessage` callback will be called with message sent from worker\\n// and `workerId` (to identify which worker send this message)\\nworkerPool.onMessage((msg: MessagesFromChild, workerId: number): void =&gt; {\\n  switch(msg.type) {\\n    case: `PING`: {\\n      // send message back making sure we send it back to same worker\\n      // that sent `PING` message\\n      workerPool.sendMessage({ type: `PONG` }, workerId)\\n      break\\n    }\\n  }\\n})\\\"><pre><span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-kos\\\">{</span> <span class=\\\"pl-s1\\\">getMessenger</span> <span class=\\\"pl-kos\\\">}</span> <span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s\\\">\\\"gatsby-worker\\\"</span>\\n\\n<span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-kos\\\">{</span> <span class=\\\"pl-smi\\\">MessagesFromParent</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-smi\\\">MessagesFromChild</span> <span class=\\\"pl-kos\\\">}</span> <span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s\\\">\\\"./message-types\\\"</span>\\n\\n<span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">workerPool</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-k\\\">new</span> <span class=\\\"pl-smi\\\">WorkerPool</span><span class=\\\"pl-kos\\\">&lt;</span>\\n  <span class=\\\"pl-k\\\">typeof</span> <span class=\\\"pl-k\\\">import</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">\\\"./worker\\\"</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-smi\\\">MessagesFromParent</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-smi\\\">MessagesFromChild</span>\\n<span class=\\\"pl-kos\\\">&gt;</span><span class=\\\"pl-kos\\\">(</span>\\n  <span class=\\\"pl-s1\\\">workerPath</span>: require<span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">resolve</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">`./worker`</span><span class=\\\"pl-kos\\\">)</span>\\n<span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-c\\\">// `sendMessage` on WorkerPool instance requires second parameter</span>\\n<span class=\\\"pl-c\\\">// `workerId` to specify to which worker to send message to</span>\\n<span class=\\\"pl-c\\\">// (`workerId` starts at 1 for first worker).</span>\\n<span class=\\\"pl-s1\\\">workerPool</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">sendMessage</span><span class=\\\"pl-kos\\\">(</span>\\n  <span class=\\\"pl-kos\\\">{</span>\\n    <span class=\\\"pl-c1\\\">type</span>: <span class=\\\"pl-s\\\">`OTHER_MESSAGE_FROM_PARENT`</span><span class=\\\"pl-kos\\\">,</span>\\n    <span class=\\\"pl-c1\\\">payload</span>: <span class=\\\"pl-kos\\\">{</span>\\n      <span class=\\\"pl-c1\\\">foo</span>: <span class=\\\"pl-s\\\">`baz`</span>\\n    <span class=\\\"pl-kos\\\">}</span>\\n  <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">1</span>\\n<span class=\\\"pl-kos\\\">)</span>\\n\\n<span class=\\\"pl-c\\\">// start listening to messages from child</span>\\n<span class=\\\"pl-c\\\">// `onMessage` callback will be called with message sent from worker</span>\\n<span class=\\\"pl-c\\\">// and `workerId` (to identify which worker send this message)</span>\\n<span class=\\\"pl-s1\\\">workerPool</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">onMessage</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">msg</span>: <span class=\\\"pl-smi\\\">MessagesFromChild</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-s1\\\">workerId</span>: <span class=\\\"pl-smi\\\">number</span><span class=\\\"pl-kos\\\">)</span>: <span class=\\\"pl-smi\\\"><span class=\\\"pl-k\\\">void</span></span> <span class=\\\"pl-c1\\\">=&gt;</span> <span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-k\\\">switch</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">msg</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-c1\\\">type</span><span class=\\\"pl-kos\\\">)</span> <span class=\\\"pl-kos\\\">{</span>\\n    <span class=\\\"pl-k\\\">case</span>: <span class=\\\"pl-s\\\">`PING`</span>: <span class=\\\"pl-kos\\\">{</span>\\n      <span class=\\\"pl-c\\\">// send message back making sure we send it back to same worker</span>\\n      <span class=\\\"pl-c\\\">// that sent `PING` message</span>\\n      <span class=\\\"pl-s1\\\">workerPool</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">sendMessage</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">{</span> <span class=\\\"pl-c1\\\">type</span>: <span class=\\\"pl-s\\\">`PONG`</span> <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-s1\\\">workerId</span><span class=\\\"pl-kos\\\">)</span>\\n      <span class=\\\"pl-k\\\">break</span>\\n    <span class=\\\"pl-kos\\\">}</span>\\n  <span class=\\\"pl-kos\\\">}</span>\\n<span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Usage with unit tests</h2><a id=\\\"user-content-usage-with-unit-tests\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Usage with unit tests\\\" href=\\\"#usage-with-unit-tests\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">If you are working with source files that need transpilation, you will need to make it possible to load untranspiled modules in child processes.\\nThis can be done with <code>@babel/register</code> (or similar depending on your build toolchain). Example setup:</p>\\n<div class=\\\"highlight highlight-source-ts notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"const testWorkerPool = new WorkerPool&lt;WorkerModuleType&gt;(workerModule, {\\n  numWorkers,\\n  env: {\\n    NODE_OPTIONS: `--require ${require.resolve(`./ts-register`)}`,\\n  },\\n})\\\"><pre><span class=\\\"pl-k\\\">const</span> <span class=\\\"pl-s1\\\">testWorkerPool</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-k\\\">new</span> <span class=\\\"pl-smi\\\">WorkerPool</span><span class=\\\"pl-kos\\\">&lt;</span><span class=\\\"pl-smi\\\">WorkerModuleType</span><span class=\\\"pl-kos\\\">&gt;</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">workerModule</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-kos\\\">{</span>\\n  numWorkers<span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">env</span>: <span class=\\\"pl-kos\\\">{</span>\\n    <span class=\\\"pl-c1\\\">NODE_OPTIONS</span>: <span class=\\\"pl-s\\\">`--require <span class=\\\"pl-s1\\\"><span class=\\\"pl-kos\\\">${</span><span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">resolve</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">`./ts-register`</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">}</span></span>`</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">,</span>\\n<span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n<p dir=\\\"auto\\\">This will execute additional module before allowing adding runtime support for new JavaScript syntax or support for TypeScript. Example <code>ts-register.js</code>:</p>\\n<div class=\\\"highlight highlight-source-js notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"// spawned process won't use jest config (or other testing framework equivalent) to support TS, so we need to add support ourselves\\nrequire(`@babel/register`)({\\n  extensions: [`.js`, `.ts`],\\n  configFile: require.resolve(relativePathToYourBabelConfig),\\n  ignore: [/node_modules/],\\n})\\\"><pre><span class=\\\"pl-c\\\">// spawned process won't use jest config (or other testing framework equivalent) to support TS, so we need to add support ourselves</span>\\n<span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s\\\">`@babel/register`</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-kos\\\">{</span>\\n  <span class=\\\"pl-c1\\\">extensions</span>: <span class=\\\"pl-kos\\\">[</span><span class=\\\"pl-s\\\">`.js`</span><span class=\\\"pl-kos\\\">,</span> <span class=\\\"pl-s\\\">`.ts`</span><span class=\\\"pl-kos\\\">]</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">configFile</span>: <span class=\\\"pl-en\\\">require</span><span class=\\\"pl-kos\\\">.</span><span class=\\\"pl-en\\\">resolve</span><span class=\\\"pl-kos\\\">(</span><span class=\\\"pl-s1\\\">relativePathToYourBabelConfig</span><span class=\\\"pl-kos\\\">)</span><span class=\\\"pl-kos\\\">,</span>\\n  <span class=\\\"pl-c1\\\">ignore</span>: <span class=\\\"pl-kos\\\">[</span><span class=\\\"pl-pds\\\"><span class=\\\"pl-c1\\\">/</span>node_modules<span class=\\\"pl-c1\\\">/</span></span><span class=\\\"pl-kos\\\">]</span><span class=\\\"pl-kos\\\">,</span>\\n<span class=\\\"pl-kos\\\">}</span><span class=\\\"pl-kos\\\">)</span></pre></div>\\n</article>\",\"errorMessage\":null,\"headerInfo\":{\"toc\":[{\"level\":1,\"text\":\"gatsby-worker\",\"anchor\":\"gatsby-worker\",\"htmlText\":\"gatsby-worker\"},{\"level\":2,\"text\":\"Example\",\"anchor\":\"example\",\"htmlText\":\"Example\"},{\"level\":2,\"text\":\"API\",\"anchor\":\"api\",\"htmlText\":\"API\"},{\"level\":3,\"text\":\"Constructor\",\"anchor\":\"constructor\",\"htmlText\":\"Constructor\"},{\"level\":3,\"text\":\".single\",\"anchor\":\"single\",\"htmlText\":\".single\"},{\"level\":3,\"text\":\".all\",\"anchor\":\"all\",\"htmlText\":\".all\"},{\"level\":3,\"text\":\".end\",\"anchor\":\"end\",\"htmlText\":\".end\"},{\"level\":3,\"text\":\"isWorker\",\"anchor\":\"isworker\",\"htmlText\":\"isWorker\"},{\"level\":3,\"text\":\"Messaging\",\"anchor\":\"messaging\",\"htmlText\":\"Messaging\"},{\"level\":4,\"text\":\"Sending messages from worker\",\"anchor\":\"sending-messages-from-worker\",\"htmlText\":\"Sending messages from worker\"},{\"level\":2,\"text\":\"Usage with unit tests\",\"anchor\":\"usage-with-unit-tests\",\"htmlText\":\"Usage with unit tests\"}],\"siteNavLoginPath\":\"/login?return_to=https%3A%2F%2Fgithub.com%2Fgatsbyjs%2Fgatsby%2Ftree%2Fmaster%2Fpackages%2Fgatsby-worker\"}},\"totalCount\":8,\"showBranchInfobar\":false},\"fileTree\":{\"packages\":{\"items\":[{\"name\":\"babel-plugin-remove-graphql-queries\",\"path\":\"packages/babel-plugin-remove-graphql-queries\",\"contentType\":\"directory\"},{\"name\":\"babel-preset-gatsby-package\",\"path\":\"packages/babel-preset-gatsby-package\",\"contentType\":\"directory\"},{\"name\":\"babel-preset-gatsby\",\"path\":\"packages/babel-preset-gatsby\",\"contentType\":\"directory\"},{\"name\":\"create-gatsby\",\"path\":\"packages/create-gatsby\",\"contentType\":\"directory\"},{\"name\":\"gatsby-adapter-netlify\",\"path\":\"packages/gatsby-adapter-netlify\",\"contentType\":\"directory\"},{\"name\":\"gatsby-cli\",\"path\":\"packages/gatsby-cli\",\"contentType\":\"directory\"},{\"name\":\"gatsby-codemods\",\"path\":\"packages/gatsby-codemods\",\"contentType\":\"directory\"},{\"name\":\"gatsby-core-utils\",\"path\":\"packages/gatsby-core-utils\",\"contentType\":\"directory\"},{\"name\":\"gatsby-cypress\",\"path\":\"packages/gatsby-cypress\",\"contentType\":\"directory\"},{\"name\":\"gatsby-design-tokens\",\"path\":\"packages/gatsby-design-tokens\",\"contentType\":\"directory\"},{\"name\":\"gatsby-dev-cli\",\"path\":\"packages/gatsby-dev-cli\",\"contentType\":\"directory\"},{\"name\":\"gatsby-graphiql-explorer\",\"path\":\"packages/gatsby-graphiql-explorer\",\"contentType\":\"directory\"},{\"name\":\"gatsby-legacy-polyfills\",\"path\":\"packages/gatsby-legacy-polyfills\",\"contentType\":\"directory\"},{\"name\":\"gatsby-link\",\"path\":\"packages/gatsby-link\",\"contentType\":\"directory\"},{\"name\":\"gatsby-page-utils\",\"path\":\"packages/gatsby-page-utils\",\"contentType\":\"directory\"},{\"name\":\"gatsby-parcel-config\",\"path\":\"packages/gatsby-parcel-config\",\"contentType\":\"directory\"},{\"name\":\"gatsby-parcel-namer-relative-to-cwd\",\"path\":\"packages/gatsby-parcel-namer-relative-to-cwd\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-benchmark-reporting\",\"path\":\"packages/gatsby-plugin-benchmark-reporting\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-canonical-urls\",\"path\":\"packages/gatsby-plugin-canonical-urls\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-catch-links\",\"path\":\"packages/gatsby-plugin-catch-links\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-coffeescript\",\"path\":\"packages/gatsby-plugin-coffeescript\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-cxs\",\"path\":\"packages/gatsby-plugin-cxs\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-emotion\",\"path\":\"packages/gatsby-plugin-emotion\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-facebook-analytics\",\"path\":\"packages/gatsby-plugin-facebook-analytics\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-feed\",\"path\":\"packages/gatsby-plugin-feed\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-flow\",\"path\":\"packages/gatsby-plugin-flow\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-fullstory\",\"path\":\"packages/gatsby-plugin-fullstory\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-gatsby-cloud\",\"path\":\"packages/gatsby-plugin-gatsby-cloud\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-google-analytics\",\"path\":\"packages/gatsby-plugin-google-analytics\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-google-gtag\",\"path\":\"packages/gatsby-plugin-google-gtag\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-google-tagmanager\",\"path\":\"packages/gatsby-plugin-google-tagmanager\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-image\",\"path\":\"packages/gatsby-plugin-image\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-jss\",\"path\":\"packages/gatsby-plugin-jss\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-layout\",\"path\":\"packages/gatsby-plugin-layout\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-less\",\"path\":\"packages/gatsby-plugin-less\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-lodash\",\"path\":\"packages/gatsby-plugin-lodash\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-manifest\",\"path\":\"packages/gatsby-plugin-manifest\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-mdx\",\"path\":\"packages/gatsby-plugin-mdx\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-no-sourcemaps\",\"path\":\"packages/gatsby-plugin-no-sourcemaps\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-nprogress\",\"path\":\"packages/gatsby-plugin-nprogress\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-offline\",\"path\":\"packages/gatsby-plugin-offline\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-page-creator\",\"path\":\"packages/gatsby-plugin-page-creator\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-postcss\",\"path\":\"packages/gatsby-plugin-postcss\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-preact\",\"path\":\"packages/gatsby-plugin-preact\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-preload-fonts\",\"path\":\"packages/gatsby-plugin-preload-fonts\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-react-css-modules\",\"path\":\"packages/gatsby-plugin-react-css-modules\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-react-helmet\",\"path\":\"packages/gatsby-plugin-react-helmet\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-sass\",\"path\":\"packages/gatsby-plugin-sass\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-schema-snapshot\",\"path\":\"packages/gatsby-plugin-schema-snapshot\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-sharp\",\"path\":\"packages/gatsby-plugin-sharp\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-sitemap\",\"path\":\"packages/gatsby-plugin-sitemap\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-styled-components\",\"path\":\"packages/gatsby-plugin-styled-components\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-styled-jsx\",\"path\":\"packages/gatsby-plugin-styled-jsx\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-styletron\",\"path\":\"packages/gatsby-plugin-styletron\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-stylus\",\"path\":\"packages/gatsby-plugin-stylus\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-subfont\",\"path\":\"packages/gatsby-plugin-subfont\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-twitter\",\"path\":\"packages/gatsby-plugin-twitter\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-typescript\",\"path\":\"packages/gatsby-plugin-typescript\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-typography\",\"path\":\"packages/gatsby-plugin-typography\",\"contentType\":\"directory\"},{\"name\":\"gatsby-plugin-utils\",\"path\":\"packages/gatsby-plugin-utils\",\"contentType\":\"directory\"},{\"name\":\"gatsby-react-router-scroll\",\"path\":\"packages/gatsby-react-router-scroll\",\"contentType\":\"directory\"},{\"name\":\"gatsby-remark-autolink-headers\",\"path\":\"packages/gatsby-remark-autolink-headers\",\"contentType\":\"directory\"},{\"name\":\"gatsby-remark-code-repls\",\"path\":\"packages/gatsby-remark-code-repls\",\"contentType\":\"directory\"},{\"name\":\"gatsby-remark-copy-linked-files\",\"path\":\"packages/gatsby-remark-copy-linked-files\",\"contentType\":\"directory\"},{\"name\":\"gatsby-remark-custom-blocks\",\"path\":\"packages/gatsby-remark-custom-blocks\",\"contentType\":\"directory\"},{\"name\":\"gatsby-remark-embed-snippet\",\"path\":\"packages/gatsby-remark-embed-snippet\",\"contentType\":\"directory\"},{\"name\":\"gatsby-remark-graphviz\",\"path\":\"packages/gatsby-remark-graphviz\",\"contentType\":\"directory\"},{\"name\":\"gatsby-remark-images-contentful\",\"path\":\"packages/gatsby-remark-images-contentful\",\"contentType\":\"directory\"},{\"name\":\"gatsby-remark-images\",\"path\":\"packages/gatsby-remark-images\",\"contentType\":\"directory\"},{\"name\":\"gatsby-remark-katex\",\"path\":\"packages/gatsby-remark-katex\",\"contentType\":\"directory\"},{\"name\":\"gatsby-remark-prismjs\",\"path\":\"packages/gatsby-remark-prismjs\",\"contentType\":\"directory\"},{\"name\":\"gatsby-remark-responsive-iframe\",\"path\":\"packages/gatsby-remark-responsive-iframe\",\"contentType\":\"directory\"},{\"name\":\"gatsby-remark-smartypants\",\"path\":\"packages/gatsby-remark-smartypants\",\"contentType\":\"directory\"},{\"name\":\"gatsby-script\",\"path\":\"packages/gatsby-script\",\"contentType\":\"directory\"},{\"name\":\"gatsby-sharp\",\"path\":\"packages/gatsby-sharp\",\"contentType\":\"directory\"},{\"name\":\"gatsby-source-contentful\",\"path\":\"packages/gatsby-source-contentful\",\"contentType\":\"directory\"},{\"name\":\"gatsby-source-drupal\",\"path\":\"packages/gatsby-source-drupal\",\"contentType\":\"directory\"},{\"name\":\"gatsby-source-faker\",\"path\":\"packages/gatsby-source-faker\",\"contentType\":\"directory\"},{\"name\":\"gatsby-source-filesystem\",\"path\":\"packages/gatsby-source-filesystem\",\"contentType\":\"directory\"},{\"name\":\"gatsby-source-graphql\",\"path\":\"packages/gatsby-source-graphql\",\"contentType\":\"directory\"},{\"name\":\"gatsby-source-hacker-news\",\"path\":\"packages/gatsby-source-hacker-news\",\"contentType\":\"directory\"},{\"name\":\"gatsby-source-lever\",\"path\":\"packages/gatsby-source-lever\",\"contentType\":\"directory\"},{\"name\":\"gatsby-source-medium\",\"path\":\"packages/gatsby-source-medium\",\"contentType\":\"directory\"},{\"name\":\"gatsby-source-mongodb\",\"path\":\"packages/gatsby-source-mongodb\",\"contentType\":\"directory\"},{\"name\":\"gatsby-source-npm-package-search\",\"path\":\"packages/gatsby-source-npm-package-search\",\"contentType\":\"directory\"},{\"name\":\"gatsby-source-shopify\",\"path\":\"packages/gatsby-source-shopify\",\"contentType\":\"directory\"},{\"name\":\"gatsby-source-wikipedia\",\"path\":\"packages/gatsby-source-wikipedia\",\"contentType\":\"directory\"},{\"name\":\"gatsby-source-wordpress\",\"path\":\"packages/gatsby-source-wordpress\",\"contentType\":\"directory\"},{\"name\":\"gatsby-telemetry\",\"path\":\"packages/gatsby-telemetry\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-asciidoc\",\"path\":\"packages/gatsby-transformer-asciidoc\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-csv\",\"path\":\"packages/gatsby-transformer-csv\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-documentationjs\",\"path\":\"packages/gatsby-transformer-documentationjs\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-excel\",\"path\":\"packages/gatsby-transformer-excel\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-hjson\",\"path\":\"packages/gatsby-transformer-hjson\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-javascript-frontmatter\",\"path\":\"packages/gatsby-transformer-javascript-frontmatter\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-javascript-static-exports\",\"path\":\"packages/gatsby-transformer-javascript-static-exports\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-json\",\"path\":\"packages/gatsby-transformer-json\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-pdf\",\"path\":\"packages/gatsby-transformer-pdf\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-react-docgen\",\"path\":\"packages/gatsby-transformer-react-docgen\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-remark\",\"path\":\"packages/gatsby-transformer-remark\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-screenshot\",\"path\":\"packages/gatsby-transformer-screenshot\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-sharp\",\"path\":\"packages/gatsby-transformer-sharp\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-sqip\",\"path\":\"packages/gatsby-transformer-sqip\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-toml\",\"path\":\"packages/gatsby-transformer-toml\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-xml\",\"path\":\"packages/gatsby-transformer-xml\",\"contentType\":\"directory\"},{\"name\":\"gatsby-transformer-yaml\",\"path\":\"packages/gatsby-transformer-yaml\",\"contentType\":\"directory\"},{\"name\":\"gatsby-worker\",\"path\":\"packages/gatsby-worker\",\"contentType\":\"directory\"},{\"name\":\"gatsby\",\"path\":\"packages/gatsby\",\"contentType\":\"directory\"}],\"totalCount\":108},\"\":{\"items\":[{\"name\":\".circleci\",\"path\":\".circleci\",\"contentType\":\"directory\"},{\"name\":\".github\",\"path\":\".github\",\"contentType\":\"directory\"},{\"name\":\".yarn\",\"path\":\".yarn\",\"contentType\":\"directory\"},{\"name\":\"benchmarks\",\"path\":\"benchmarks\",\"contentType\":\"directory\"},{\"name\":\"deprecated-packages\",\"path\":\"deprecated-packages\",\"contentType\":\"directory\"},{\"name\":\"docs\",\"path\":\"docs\",\"contentType\":\"directory\"},{\"name\":\"e2e-tests\",\"path\":\"e2e-tests\",\"contentType\":\"directory\"},{\"name\":\"examples\",\"path\":\"examples\",\"contentType\":\"directory\"},{\"name\":\"integration-tests\",\"path\":\"integration-tests\",\"contentType\":\"directory\"},{\"name\":\"packages\",\"path\":\"packages\",\"contentType\":\"directory\"},{\"name\":\"peril\",\"path\":\"peril\",\"contentType\":\"directory\"},{\"name\":\"scripts\",\"path\":\"scripts\",\"contentType\":\"directory\"},{\"name\":\"starters\",\"path\":\"starters\",\"contentType\":\"directory\"},{\"name\":\"types\",\"path\":\"types\",\"contentType\":\"directory\"},{\"name\":\".babelrc.js\",\"path\":\".babelrc.js\",\"contentType\":\"file\"},{\"name\":\".dockerignore\",\"path\":\".dockerignore\",\"contentType\":\"file\"},{\"name\":\".editorconfig\",\"path\":\".editorconfig\",\"contentType\":\"file\"},{\"name\":\".eslintignore\",\"path\":\".eslintignore\",\"contentType\":\"file\"},{\"name\":\".eslintrc.js\",\"path\":\".eslintrc.js\",\"contentType\":\"file\"},{\"name\":\".gitattributes\",\"path\":\".gitattributes\",\"contentType\":\"file\"},{\"name\":\".gitignore\",\"path\":\".gitignore\",\"contentType\":\"file\"},{\"name\":\".gitpod.Dockerfile\",\"path\":\".gitpod.Dockerfile\",\"contentType\":\"file\"},{\"name\":\".gitpod.yml\",\"path\":\".gitpod.yml\",\"contentType\":\"file\"},{\"name\":\".jestSetup.js\",\"path\":\".jestSetup.js\",\"contentType\":\"file\"},{\"name\":\".npmignore\",\"path\":\".npmignore\",\"contentType\":\"file\"},{\"name\":\".nvmrc\",\"path\":\".nvmrc\",\"contentType\":\"file\"},{\"name\":\".prettierignore\",\"path\":\".prettierignore\",\"contentType\":\"file\"},{\"name\":\".prettierrc.js\",\"path\":\".prettierrc.js\",\"contentType\":\"file\"},{\"name\":\".yarnrc\",\"path\":\".yarnrc\",\"contentType\":\"file\"},{\"name\":\"CHANGELOG.md\",\"path\":\"CHANGELOG.md\",\"contentType\":\"file\"},{\"name\":\"CODEOWNERS\",\"path\":\"CODEOWNERS\",\"contentType\":\"file\"},{\"name\":\"CODE_OF_CONDUCT.md\",\"path\":\"CODE_OF_CONDUCT.md\",\"contentType\":\"file\"},{\"name\":\"CONTRIBUTING.md\",\"path\":\"CONTRIBUTING.md\",\"contentType\":\"file\"},{\"name\":\"GOVERNANCE.md\",\"path\":\"GOVERNANCE.md\",\"contentType\":\"file\"},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"README.md\",\"contentType\":\"file\"},{\"name\":\"SECURITY.md\",\"path\":\"SECURITY.md\",\"contentType\":\"file\"},{\"name\":\"jest-transformer.js\",\"path\":\"jest-transformer.js\",\"contentType\":\"file\"},{\"name\":\"jest.config.js\",\"path\":\"jest.config.js\",\"contentType\":\"file\"},{\"name\":\"jest.environment.ts\",\"path\":\"jest.environment.ts\",\"contentType\":\"file\"},{\"name\":\"lerna.json\",\"path\":\"lerna.json\",\"contentType\":\"file\"},{\"name\":\"markdown.config.js\",\"path\":\"markdown.config.js\",\"contentType\":\"file\"},{\"name\":\"package.json\",\"path\":\"package.json\",\"contentType\":\"file\"},{\"name\":\"peril.settings.json\",\"path\":\"peril.settings.json\",\"contentType\":\"file\"},{\"name\":\"renovate.json5\",\"path\":\"renovate.json5\",\"contentType\":\"file\"},{\"name\":\"tsconfig.json\",\"path\":\"tsconfig.json\",\"contentType\":\"file\"},{\"name\":\"yarn.lock\",\"path\":\"yarn.lock\",\"contentType\":\"file\"}],\"totalCount\":47}},\"fileTreeProcessingTime\":11.399769000000001,\"foldersToFetch\":[],\"treeExpanded\":true,\"symbolsExpanded\":false,\"csrf_tokens\":{\"/gatsbyjs/gatsby/branches\":{\"post\":\"WX84ySEtH3oZ2enzhTpQtj7hkgnsKa0cdXMIH4V7K5PJbb8V6UjQG4YdEdOATzr34iHOcIURa419POJei2JZCQ\"},\"/gatsbyjs/gatsby/branches/fetch_and_merge/master\":{\"post\":\"7bzmBC3F1C7I5KadcMnnuXkWAPW7hHAD4h7H8l28XIxK76kZ-V7ATOMqUtIvbIjpTA500W0g8BE7p7XPza9TdA\"},\"/gatsbyjs/gatsby/branches/fetch_and_merge/master?discard_changes=true\":{\"post\":\"LOYTFoRmtb4V0xv-ESBpKrdR7u8wjh1C6xqA-rL55JqLtVwLUP2h3D4d77FOhQZ6gkmay-YqnVAyo_LHIurrYg\"}}},\"title\":\"gatsby/packages/gatsby-worker at master \u00b7 gatsbyjs/gatsby\"}",
  "embeddings": []
}
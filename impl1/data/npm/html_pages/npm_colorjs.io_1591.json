{
  "libtype": "npm",
  "libname": "colorjs.io",
  "url": "https://colorjs.io",
  "html": "<!DOCTYPE html><html><head><title>Color.js: Let\u2019s get serious about color</title><meta name=\"viewport\" content=\"width=device-width\" /><link rel=\"shortcut icon\" href=\"./logo.svg\"><link rel=\"stylesheet\" href=\"./assets/css/style.css\"><script src=\"./color.js\" type=\"module\"></script><link rel=\"stylesheet\" href=\"./assets/css/home.css\"></head><body class=\" language-javascript \"><header><nav><a href=\"./get/\">Get<span class=\"wide\"> Color.js</span></a><div class=\"menu\"><a href=\"./docs/\">Docs</a><ul><li><a href='/docs/the-color-object'>The Color object</a></li><li><a href='/docs/spaces'>Supported color spaces</a></li><li><a href='/docs/color-difference'>Color difference</a></li><li><a href='/docs/manipulation'>Color manipulation</a></li><li><a href='/docs/contrast'>Contrast</a></li><li><a href='/docs/gamut-mapping'>Gamut Mapping</a></li><li><a href='/docs/interpolation'>Interpolation</a></li><li><a href='/docs/adaptation'>Chromatic Adaptation</a></li><li><a href='/docs/output'>Output</a></li><li><a href='/docs/procedural'>Procedural, tree-shakable API</a></li></ul></div><a href=\"./api/\">API</a><a href=\"./notebook/\">Play!</a><a href=\"./apps/\">Demos</a><a href=\"./test/\" class=\"footer\">Tests</a><a href=\"https://github.com/LeaVerou/color.js\">GitHub</a><a href=\"https://github.com/LeaVerou/color.js/issues/new\" class=\"footer\">File bug</a></nav><hgroup class=\"logo\"><img src=\"logo.svg\" alt=\"\"><h1>Color.js<a class=\"version-number\" href=\"https://github.com/LeaVerou/color.js/releases/\" target=\"_blank\" title=\"View changelog\">v0.5.0</a></h1><h2>Let's get serious about color</h2></hgroup><div id=\"features\"><article><h4>Fully color space aware</h3><p>Each color belongs to a color space; operations are color space agnostic.Modules for <a href='/docs/spaces'>a wide variety of color spaces</a>,including Lab/LCh, OKLab/OKLCh,sRGB and friends (HSL/HSV/HWB), Display P3,J<sub>z</sub>a<sub>z</sub>b<sub>z</sub>, REC.2100 and many <a href='/docs/spaces'>more</a>.</p></article><article><h4>Doesn't gloss over color science</h3><p>Actual <a href='/docs/gamut-mapping'>gamut mapping</a> instead of na\u00efve clipping,multiple <a href='/docs/color-difference'>DeltaE</a> methods (76, CMC, 2000, J<sub>z</sub>),multiple <a href='/docs/adaptation'>chromatic adaptation</a> methods (von Kries, Bradford, CAT02, CAT16),all with sensible defaults</p></article><article><h4>Up to date with CSS Color 4</h3><p>Every <a href=\"https://drafts.csswg.org/css-color-4/\">CSS Color 4</a> format & color space supported for both <a href='/docs/the-color-object'>input</a> and <a href='/docs/output'>output</a>, whether your browser supports it or not.</p></article><article><h4>Readable, object-oriented API</h3><p>Color objects for multiple operations on the same color, and static Color.something() functions for one-off calculations</p></article><article><h4>Modular & Extensible</h3><p>Use only what you need, or a bundle. Client-side or Node. Deep extensibility with <a href=\"api/#Hooks-hooks.js\">hooks</a>. </p></article><article><h4>Fast & efficient</h3><p><a href='/docs/procedural'>Procedural, tree-shakeable API</a> available for performance sensitive tasks and reduced bundle size</p></article></div></header><main><header class=\"readme-only\"><h1>Color.js: Let\u2019s get serious about color</h1><p><a href=\"https://app.netlify.com/sites/colorjs/deploys\"><img src=\"https://api.netlify.com/api/v1/badges/a6208d72-3d48-43ab-9132-b9f31f828609/deploy-status\" alt=\"Netlify Status\"></a><a href=\"https://npmjs.com/package/colorjs.io\"><img src=\"https://img.shields.io/npm/dw/colorjs.io\" alt=\"npm\"></a></p><p><a href=\"https://colorjs.io\">Official website</a> \u2022 <a href=\"CONTRIBUTING.md\">Contribution guide</a></p><p>Color.js is a color conversion and modification library originally created by two of the editors of the CSS Color specifications: Lea Verou and Chris Lilley.They continue to work on it, but are also joined by an exceptional small grassroots team of co-maintainers.</p><h2>Features</h2><ul><li><strong>Color space agnostic</strong>: Each color object is basically a list of coords and a color space reference. Operations are color space agnostic.Modules for <a href='https://colorjs.io/docs/spaces'>a wide variety of color spaces</a>,including Lab/LCh, OKLab/OKLCh,sRGB and friends (HSL/HSV/HWB), Display P3,J<sub>z</sub>a<sub>z</sub>b<sub>z</sub>, REC.2100 and many <a href='https://colorjs.io/docs/spaces'>more</a>.</li><li><strong>Doesn't gloss over color science</strong>: Actual <a href='/docs/gamut-mapping'>gamut mapping</a> instead of na\u00efve clipping,multiple <a href='https://colorjs.io/docs/color-difference'>DeltaE</a> methods (76, CMC, 2000, J<sub>z</sub>),multiple <a href='https://colorjs.io/docs/adaptation'>chromatic adaptation</a> methods (von Kries, Bradford, CAT02, CAT16),all with sensible defaults</li><li><strong>Up to date with CSS Color 4</strong>: Every <a href=\"https://drafts.csswg.org/css-color-4/\">CSS Color 4</a> format &amp; color space supported for both <a href='/docs/the-color-object'>input</a> and <a href='https://colorjs.io/docs/output'>output</a>, whether your browser supports it or not.</li><li><strong>Readable, object-oriented API</strong>: Color objects for multiple operations on the same color, and static <code>Color.something()</code> functions for one-off calculations</li><li><strong>Modular &amp; Extensible</strong>: Use only what you need, or a bundle. Client-side or Node. Deep extensibility with <a href=\"https://colorjs.io/api/#Hooks-hooks.js\">hooks</a>.</li><li><strong>Fast &amp; efficient</strong>: <a href='https://colorjs.io/docs/procedural'>Procedural, tree-shakeable API</a> available for performance sensitive tasks and reduced bundle size</li></ul></header><section><h2>Impact</h2><ul><li>Has been used to create demos for several W3C specifications</li><li>Has been used by browsers to test their CSS Color 4/5 implementations</li><li>Over <a href=\"https://limonte.dev/total-npm-downloads/?package=colorjs.io\">2 million total npm downloads</a>!</li><li>Used by several <a href=\"https://www.npmjs.com/browse/depended/colorjs.io\">high impact projects</a>, including <a href=\"https://sass-lang.com/\">Sass</a>, <a href=\"https://open-props.style/\">Open Props</a>, <a href=\"https://www.deque.com/axe/\">axe</a> accessibility testing engine, and <a href=\"https://www.oddcontrast.com/\">OddContrast</a> and <a href=\"https://gradient.style/\">CSS HD Gradients</a> color tools</li><li>Parts of Color.js\u2019s API are used as a testing ground for the design of a <a href=\"https://github.com/wicg/color-api\">native <code>Color</code> object for the Web platform</a>.</li></ul></section><section class=\"cn-ignore\"><h2>Installation</h2><p>Color.js is designed make simple things easy, and complex things possible, and that extends to installation as well.</p><p>For quick experiments, you can just import Color.js directly from the CDN (kindly provided by the awesome folks at <a href=\"https://netlify.com\">Netlify</a>) with all modules included:</p><pre><code class=\"language-js\">import Color from &quot;https://colorjs.io/dist/color.js&quot;;</code></pre><p>You can also install via npm if you\u2019d prefer:</p><pre><code>npm install colorjs.io</code></pre><p>Whether you\u2019re using NPM, the CDN, or local files, Color.js allows you to also import specific modules by directly importing from <code>src</code>:</p><ul><li><code>https://colorjs.io/src/</code> for the CDN</li><li>`node_modules/colorjs.io/src/ for NPM</li></ul><p>For example:</p><pre><code class=\"language-js\">import Color from &quot;https://colorjs.io/src/color.js&quot;;import p3 from &quot;https://colorjs.io/src/spaces/p3.js&quot;;import rec2020 from &quot;https://colorjs.io/src/spaces/rec2020.js&quot;;import deltaE200 from &quot;https://colorjs.io/src/deltaE/deltaE2000.js&quot;;</code></pre><p>Warning: To use <code>import</code> statements in a browser, your <code>&lt;script&gt;</code> needs <code>type=&quot;module&quot;</code></p><p>Are you old school and prefer to simply have a global <code>Color</code> variable?We\u2019ve got you covered!Just include the following script in your HTML:</p><pre><code class=\"language-html\">&lt;script src=&quot;https://colorjs.io/dist/color.global.js&quot;&gt;&lt;/script&gt;</code></pre><p class=\"read-more\"><a href=\"https://colorjs.io/get\">Read more about installation</a></p></section><section><h2>Reading colors</h2><p>Any color from CSS Color Level 4 should work:</p><pre><code class=\"language-js\">let color = new Color(&quot;slategray&quot;);let color2 = new Color(&quot;hwb(60 30% 40% / .5)&quot;);let color3 = new Color(&quot;color(display-p3 0 1 0 / .9)&quot;);let color4 = new Color(&quot;lch(50% 80 30)&quot;);</code></pre><p>You can also create <code>Color</code> objects manually:</p><pre><code class=\"language-js\">let color2 = new Color(&quot;hwb&quot;, [60, 30, 40], .5);let color3 = new Color({space: &quot;p3&quot;, coords: [0, 1, 0], alpha: .9});</code></pre><p class=\"read-more\"><a href='https://colorjs.io/docs/the-color-object'>Read more about color objects</a></section><section><h2>Manipulating colors</h2><p>You can use properties to modify coordinatesof any color space and convert back</p><pre><code class=\"language-js\">let color = new Color(&quot;slategray&quot;);color.lch.l = 80; // Set coord directly in any color spacecolor.lch.c *= 1.2; // saturate by increasing LCH chroma by 20%color.hwb.w += 10; // any other color space also available</code></pre><p>To modify coordinates in any color space you use <code>color.set()</code> and <code>color.setAll()</code>:</p><pre><code class=\"language-js\">let color = new Color(&quot;slategray&quot;);// Multiple coordinatescolor.set({&quot;lch.l&quot;: 80, // set lightness to 80&quot;lch.c&quot;: c =&gt; c * 1.2 // Relative manipulation});// Set single coordinatecolor.set(&quot;hwb.w&quot;, w =&gt; w + 10);</code></pre><p>Coordinates of the color's color space are available without a prefix:</p><pre><code class=\"language-js\">let color = new Color(&quot;slategray&quot;).to(&quot;lch&quot;);// Multiple coordinatescolor.set({l: 80, // set lightness to 80c: c =&gt; c * 1.2 // Relative manipulation});// Set single coordinatecolor.set(&quot;h&quot;, 30);</code></pre><p>Chaining-style modifications are also supported:</p><pre><code class=\"language-js\">let color = new Color(&quot;lch(50% 50 10)&quot;);color = color.set({h: h =&gt; h + 180,c: 60}).lighten();</code></pre><p>You can also use properties:</p><pre><code class=\"language-js\">let color = new Color(&quot;slategray&quot;);color.lch.l = 80; // Set coord directly in any color spacecolor.lch.c *= 1.2; // saturate by increasing LCH chroma by 20%color.hwb.w += 10; // any other color space also available</code></pre><p>Coordinates of the color's color space are available without a prefix:</p><pre><code class=\"language-js\">let color = new Color(&quot;slategray&quot;).to(&quot;lch&quot;);color.l = 80; // Set LCH lightnesscolor.c *= 1.2; // saturate by increasing LCH chroma</code></pre><p class=\"read-more\"><a href='https://colorjs.io/docs/manipulation'>Read more about color manipulation</a></p></section><section><h2>Converting between color spaces &amp; stringifying</h2><p>Convert to any color space:</p><pre><code class=\"language-js\">let color = new Color(&quot;slategray&quot;);color.to(&quot;lch&quot;) // Convert to LCH</code></pre><p>Output in any color space</p><pre><code class=\"language-js\">let color = new Color(&quot;slategray&quot;);color + &quot;&quot;; // default stringificationcolor.to(&quot;p3&quot;).toString({precision: 3});</code></pre><p>Clip to gamut or don't</p><pre><code class=\"language-js\">let color = new Color(&quot;p3&quot;, [0, 1, 0]);color.to(&quot;srgb&quot;) + &quot;&quot;; // Default toString()color.to(&quot;srgb&quot;).toString({inGamut: false});</code></pre><p class=\"read-more\"><a href='https://colorjs.io/docs/output'>Read more about output</a></p></section><section><h2>Interpolation</h2><p>Get a function that accepts a percentage:</p><pre><code class=\"language-js\">let color = new Color(&quot;p3&quot;, [0, 1, 0]);let redgreen = color.range(&quot;red&quot;, {space: &quot;lch&quot;, // interpolation spaceoutputSpace: &quot;srgb&quot;});redgreen(.5); // midpoint</code></pre><p>Interpolation by discrete steps:</p><pre><code class=\"language-js\">let color = new Color(&quot;p3&quot;, [0, 1, 0]);color.steps(&quot;red&quot;, {space: &quot;lch&quot;,outputSpace: &quot;srgb&quot;,maxDeltaE: 3, // max deltaE between consecutive stepssteps: 10 // min number of steps});</code></pre><p>Shortcut for specific points in the range:</p><pre><code class=\"language-js\">let color = new Color(&quot;p3&quot;, [0, 1, 0]);let redgreen = color.mix(&quot;red&quot;, .5, {space: &quot;lch&quot;, outputSpace: &quot;srgb&quot;});let reddishGreen = color.mix(&quot;red&quot;, .25, {space: &quot;lch&quot;, outputSpace: &quot;srgb&quot;});</code></pre><p>Static syntax  (every color method has a static one too):</p><pre><code class=\"language-js\">Color.mix(&quot;color(display-p3 0 1 0)&quot;, &quot;red&quot;, .5);</code></pre><p class=\"read-more\"><a href='https://colorjs.io/docs/interpolation'>Read more about interpolation</a></p></section></main><aside class=\"carbon\"><script async src=\"//cdn.carbonads.com/carbon.js?serve=CEAIPK7J&placement=colorjsio\" id=\"_carbonads_js\"></script></aside><footer>Created by <a href=\"http://lea.verou.me\">Lea Verou</a> (co-editor of CSS Color 4 and 5)and <a href=\"https://svgees.us\">Chris Lilley</a> (co-editor of CSS Color 3, 4, and 5; W3C representative to ICC).Co-maintained by <a href=\"https://github.com/facelessuser\">Isaac Muse</a>,<a href=\"https://github.com/jgerigmeyer\">Jonny Gerig Meyer</a>,and <a href=\"https://github.com/MysteryBlokHed\">Adam Thompson-Sharpe</a>,with lots of help from a <a href=\"https://github.com/color-js/color.js/graphs/contributors\">community of contributors</a>.<nav><a href=\"./get/\">Get<span class=\"wide\"> Color.js</span></a><div class=\"menu\"><a href=\"./docs/\">Docs</a><ul><li><a href='/docs/the-color-object'>The Color object</a></li><li><a href='/docs/spaces'>Supported color spaces</a></li><li><a href='/docs/color-difference'>Color difference</a></li><li><a href='/docs/manipulation'>Color manipulation</a></li><li><a href='/docs/contrast'>Contrast</a></li><li><a href='/docs/gamut-mapping'>Gamut Mapping</a></li><li><a href='/docs/interpolation'>Interpolation</a></li><li><a href='/docs/adaptation'>Chromatic Adaptation</a></li><li><a href='/docs/output'>Output</a></li><li><a href='/docs/procedural'>Procedural, tree-shakable API</a></li></ul></div><a href=\"./api/\">API</a><a href=\"./notebook/\">Play!</a><a href=\"./apps/\">Demos</a><a href=\"./test/\" class=\"footer\">Tests</a><a href=\"https://github.com/LeaVerou/color.js\">GitHub</a><a href=\"https://github.com/LeaVerou/color.js/issues/new\" class=\"footer\">File bug</a></nav></footer><script src=\"./assets/js/prism.js\"></script><script src=\"https://blissfuljs.com/bliss.shy.js\"></script><script src=\"https://live.prismjs.com/src/prism-live.js?load=javascript\" async></script><script src=\"./assets/js/index.js\" type=\"module\"></script></body></html>",
  "embeddings": []
}
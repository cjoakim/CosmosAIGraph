{
  "libtype": "npm",
  "libname": "simplifyify",
  "url": "https://jstools.dev/simplifyify",
  "html": "<!DOCTYPE html><html lang=\"en-US\"><head>  <meta charset='utf-8'>  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">      <!-- Google Analytics -->    <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-68102273-3\"></script>    <script>      window.dataLayer = window.dataLayer || [];      function gtag(){dataLayer.push(arguments);}      gtag('js', new Date());      gtag('config', 'UA-68102273-3');    </script>    <link rel=\"stylesheet\" href=\"https://jstools.dev/css/style.css?v=1\" media=\"screen\" type=\"text/css\">  <link rel=\"stylesheet\" href=\"https://jstools.dev/css/print.css\" media=\"print\" type=\"text/css\">  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"https://jstools.dev/favicon-32x32.png\">  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"https://jstools.dev/favicon-16x16.png\">  <!--[if lt IE 9]>    <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>  <![endif]--><!-- Begin Jekyll SEO tag v2.6.1 --><title>Simplifyify | A simplified Browserify and Watchify CLI</title><meta name=\"generator\" content=\"Jekyll v3.9.0\" /><meta property=\"og:title\" content=\"Simplifyify\" /><meta property=\"og:locale\" content=\"en_US\" /><meta name=\"description\" content=\"A simplified Browserify and Watchify CLI\" /><meta property=\"og:description\" content=\"A simplified Browserify and Watchify CLI\" /><link rel=\"canonical\" href=\"https://jstools.dev/simplifyify/\" /><meta property=\"og:url\" content=\"https://jstools.dev/simplifyify/\" /><meta property=\"og:site_name\" content=\"Simplifyify\" /><meta property=\"og:image\" content=\"https://jstools.dev/img/logos/card.png\" /><meta name=\"twitter:card\" content=\"summary\" /><meta property=\"twitter:image\" content=\"https://jstools.dev/img/logos/card.png\" /><meta property=\"twitter:title\" content=\"Simplifyify\" /><meta name=\"twitter:site\" content=\"@JSDevTools\" /><meta name=\"twitter:creator\" content=\"@JSDevTools\" /><script type=\"application/ld+json\">{\"image\":\"https://jstools.dev/img/logos/card.png\",\"@type\":\"WebSite\",\"headline\":\"Simplifyify\",\"publisher\":{\"@type\":\"Organization\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https://jstools.dev/img/logos/logo.png\"}},\"url\":\"https://jstools.dev/simplifyify/\",\"description\":\"A simplified Browserify and Watchify CLI\",\"name\":\"Simplifyify\",\"@context\":\"https://schema.org\"}</script><!-- End Jekyll SEO tag --></head>  <body>    <header>  <div class=\"inner\">    <a href=\"https://jstools.dev/simplifyify/\">      <h1>Simplifyify</h1>    </a>    <h2>A simplified Browserify and Watchify CLI</h2>    <div class=\"buttons\">      <a href=\"https://jstools.dev/\" class=\"button logo-button\"><span>JavaScript Dev Tools</span></a>              <a href=\"https://github.com/JS-DevTools/simplifyify\" class=\"button github-button\"><small>View project on</small> GitHub</a>                </div>  </div></header><div id=\"content-wrapper\" class=\"inner\">  <main id=\"main-content\">    <h1 id=\"simplifyify\">Simplifyify</h1><h4 id=\"a-simplified-browserify-and-watchify-cli\">A simplified Browserify and Watchify CLI</h4><p><a href=\"https://github.com/JS-DevTools/simplifyify/actions\"><img src=\"https://jstools.dev/img/badges/os-badges.svg\" alt=\"Cross-Platform Compatibility\" /></a><a href=\"https://github.com/JS-DevTools/simplifyify/actions\"><img src=\"https://github.com/JS-DevTools/simplifyify/workflows/CI-CD/badge.svg\" alt=\"Build Status\" /></a></p><p><a href=\"https://coveralls.io/github/JS-DevTools/simplifyify?branch=master\"><img src=\"https://coveralls.io/repos/github/JS-DevTools/simplifyify/badge.svg?branch=master\" alt=\"Coverage Status\" /></a><a href=\"https://david-dm.org/JS-DevTools/simplifyify\"><img src=\"https://david-dm.org/JS-DevTools/simplifyify.svg\" alt=\"Dependencies\" /></a></p><p><a href=\"https://www.npmjs.com/package/@jsdevtools/simplifyify\"><img src=\"https://img.shields.io/npm/v/@jsdevtools/simplifyify.svg\" alt=\"npm\" /></a><a href=\"LICENSE\"><img src=\"https://img.shields.io/npm/l/@jsdevtools/simplifyify.svg\" alt=\"License\" /></a><a href=\"https://plant.treeware.earth/JS-DevTools/simplifyify\"><img src=\"https://img.shields.io/badge/Treeware-%F0%9F%8C%B3-lightgreen\" alt=\"Buy us a tree\" /></a></p><p>I constantly find myself using the same Browserify plug-ins and transforms on every project, and I always end up writing pretty much the same Gulp script over and over again.  Simplifyify is the solution to that problem.</p><h2 id=\"features\">Features</h2><ul>  <li>Supports <a href=\"https://github.com/isaacs/node-glob#glob-primer\">globs</a>, even on Windows</li>  <li>Supports Browserify <a href=\"#browserify-transforms\">transforms</a> and <a href=\"#browserify-plugins\">plugins</a>, such as Babel, CoffeeScript, TypeScript, etc.</li>  <li>Built-in support for TypeScript. Enabled automatically if the entry file has a <code class=\"language-plaintext highlighter-rouge\">.ts</code> or <code class=\"language-plaintext highlighter-rouge\">.tsx</code> extension</li>  <li>Has a programmatic <a href=\"#api\">API</a>, for use with build tools like Grunt, Gulp, Broccoli, etc.</li>  <li>Bundle everything into one big file, or create different bundles for each part of your app (see <a href=\"#examples\">examples below</a>)</li>  <li>Add a banner with version, date, license, etc. via <a href=\"https://www.npmjs.com/package/browserify-banner\">browserify-banner</a></li>  <li>One command creates all the files you need:    <ul>      <li><code class=\"language-plaintext highlighter-rouge\">--bundle</code> bundles your code and nothing else. Useful during development</li>      <li><code class=\"language-plaintext highlighter-rouge\">--debug</code> creates <em>external</em> source-maps (<code class=\"language-plaintext highlighter-rouge\">.map</code>) using <a href=\"https://www.npmjs.com/package/exorcist\">exorcist</a></li>      <li><code class=\"language-plaintext highlighter-rouge\">--minify</code> shrinks your code using <a href=\"https://www.npmjs.com/package/uglifyify\">uglifyify</a> <em>and</em> <a href=\"https://github.com/mishoo/UglifyJS2/tree/harmony\">Uglify-ES</a></li>      <li><code class=\"language-plaintext highlighter-rouge\">--coverage</code> adds code-coverage instrumentation using <a href=\"https://istanbul.js.org/\">istanbul</a></li>      <li><code class=\"language-plaintext highlighter-rouge\">--watch</code> uses <a href=\"https://www.npmjs.com/package/watchify\">watchify</a> for <em>fast</em> differential re-builds as files change</li>    </ul>  </li></ul><h2 id=\"related-projects\">Related Projects</h2><ul>  <li>    <p><a href=\"https://jstools.dev/globify\">globify</a><br />Run browserify and watchify with globs - even on Windows</p>  </li>  <li>    <p><a href=\"https://jstools.dev/sourcemapify\">sourcemapify</a><br />Sourcemap plugin for Browserify</p>  </li>  <li>    <p><a href=\"https://jstools.dev/browserify-banner\">browserify-banner</a><br />Add a comment (and/or code) to the top of your Browserify bundle</p>  </li></ul><h2 id=\"installation\">Installation</h2><p>Install using <a href=\"https://docs.npmjs.com/about-npm/\">npm</a>:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>npm <span class=\"nb\">install</span> @jsdevtools/simplifyify</code></pre></div></div><h2 id=\"usage\">Usage</h2><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Usage: simplifyify [options] &lt;source-files...&gt;Options:  -b, --bundle              Create a non-minified bundle (*.js) for each source file.                            This is the default if no other output option is set.  -m, --minify              Create a minified bundle (*.min.js) for each source file.  -c, --coverage            Create a bundle with code-coverage instrumentation                            (*.coverage.js) for each source file.  -d, --debug               Create a source map (*.js.map) for each bundle  -w, --watch               Watch source file(s) and rebuild the bundle(s) automatically  -o, --outfile &lt;filespec&gt;  The output file or directory.                            May include a filename pattern (e.g. \"*.bundle.js\")  -x, --exclude &lt;filespec&gt;  File path or glob pattern to exclude.                            Don't forget to put quotes around glob patterns  -s, --standalone &lt;name&gt;   Export as a named UMD bundle (e.g. \"my.cool.module\")                            May include a wildcard (e.g. \"MyLib.*\")Arguments:  &lt;source-files...&gt;         One or more file paths and/or glob patterns.                            Don't forget to put quotes around glob patterns.                            A separate Browserify bundle will be created                            for each source file.</code></pre></div></div><h2 id=\"examples\">Examples</h2><h4 id=\"one-entry-file--one-output-file\">One entry file \u2013&gt; one output file</h4><p>In the simplest usage, you can use Simplifyify to bundle all of your code into a single file:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>simplifyify src/index.jssrc/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> src/index.bundle.js                <span class=\"c\"># &lt;-- unminified code</span></code></pre></div></div><p>By default, the output file is at the same path as the entry file, but with a <code class=\"language-plaintext highlighter-rouge\">.bundle.js</code> extension.  You can customize this using the <code class=\"language-plaintext highlighter-rouge\">--outfile</code> argument:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>simplifyify src/index.js <span class=\"nt\">--outfile</span> dist/my-package.jssrc/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/my-package.js                 <span class=\"c\"># &lt;-- unminified code</span></code></pre></div></div><p>If you want the bundled code to be minified, then add the <code class=\"language-plaintext highlighter-rouge\">--minify</code> flag:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>simplifyify src/index.js <span class=\"nt\">--outfile</span> dist/my-package.js <span class=\"nt\">--minify</span>src/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/my-package.js                 <span class=\"c\"># &lt;-- minified code</span></code></pre></div></div><p>What if you also want a source map (<code class=\"language-plaintext highlighter-rouge\">.map</code>) file?  Just add the <code class=\"language-plaintext highlighter-rouge\">--debug</code> flag.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>simplifyify src/index.js <span class=\"nt\">--outfile</span> dist/my-package.js <span class=\"nt\">--minify</span> <span class=\"nt\">--debug</span>src/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/my-package.js                 <span class=\"c\"># &lt;-- minified code</span>src/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/my-package.js.map             <span class=\"c\"># &lt;-- source map</span></code></pre></div></div><h4 id=\"one-entry-file--multiple-output-files\">One entry file \u2013&gt; multiple output files</h4><p>Simplifyify can output multiple bundles of your code in a single command.  Let\u2019s say you want to create an unminified bundle for development (with a source map), a minified bundle for production (with a source map), and a test bundle (with code-coverage instrumentation) for testing:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>simplifyify src/index.js <span class=\"nt\">--outfile</span> dist/my-package.js <span class=\"nt\">--bundle</span> <span class=\"nt\">--debug</span> <span class=\"nt\">--minify</span> <span class=\"nt\">--coverage</span>src/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/my-package.js                 <span class=\"c\"># &lt;-- unminified code</span>src/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/my-package.js.map             <span class=\"c\"># &lt;-- source map</span>src/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/my-package.min.js             <span class=\"c\"># &lt;-- minified code</span>src/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/my-package.min.js.map         <span class=\"c\"># &lt;-- source map</span>src/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/my-package.coverage.js        <span class=\"c\"># &lt;-- code-coverage</span></code></pre></div></div><h4 id=\"multiple-entry-files--multiple-output-files-for-each\">Multiple entry files \u2013&gt; multiple output files <em>for each</em></h4><p>In many applications, it doesn\u2019t make sense for <em>all</em> of your code to be bundled into one huge file.  Maybe you want to create separate bundles for each folder, or for each component or section of your app.  Simplifyify makes this easy.  It will create separate bundles for each entry file that you specify.  For example:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>simplifyify src/store.js src/cart.js src/checkout.js <span class=\"nt\">--outfile</span> dist <span class=\"nt\">--bundle</span> <span class=\"nt\">--minify</span> <span class=\"nt\">--debug</span>src/store.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/store.js                      <span class=\"c\"># &lt;-- unminified code</span>src/store.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/store.js.map                  <span class=\"c\"># &lt;-- source map</span>src/store.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/store.min.js                  <span class=\"c\"># &lt;-- minified code</span>src/store.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/store.min.js.map              <span class=\"c\"># &lt;-- source map</span>src/cart.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/cart.js                        <span class=\"c\"># &lt;-- unminified code</span>src/cart.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/cart.js.map                    <span class=\"c\"># &lt;-- source map</span>src/cart.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/cart.min.js                    <span class=\"c\"># &lt;-- minified code</span>src/cart.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/cart.min.js.map                <span class=\"c\"># &lt;-- source map</span>src/checkout.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/checkout.js                <span class=\"c\"># &lt;-- unminified code</span>src/checkout.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/checkout.js.map            <span class=\"c\"># &lt;-- source map</span>src/checkout.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/checkout.min.js            <span class=\"c\"># &lt;-- minified code</span>src/checkout.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/checkout.min.js.map        <span class=\"c\"># &lt;-- source map</span></code></pre></div></div><p>Specifying each entry file can quickly become cumbersome though.  That\u2019s where <a href=\"https://github.com/isaacs/node-glob#glob-primer\">globs</a> come in.  You can specify one or more globs, and Simplifyify will create a separate bundle for each file that matches the glob pattern.  For example:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>simplifyify <span class=\"s2\">\"src/*/index.js\"</span> <span class=\"nt\">--outfile</span> <span class=\"s2\">\"dist/*.bundle.js\"</span> <span class=\"nt\">--bundle</span> <span class=\"nt\">--minify</span> <span class=\"nt\">--debug</span>src/store/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/store/index.bundle.js               <span class=\"c\"># &lt;-- unminified code</span>src/store/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/store/index.bundle.js.map           <span class=\"c\"># &lt;-- source map</span>src/store/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/store/index.bundle.min.js           <span class=\"c\"># &lt;-- minified code</span>src/store/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/store/index.bundle.min.js.map       <span class=\"c\"># &lt;-- source map</span>src/cart/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/cart/index.bundle.js                 <span class=\"c\"># &lt;-- unminified code</span>src/cart/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/cart/index.bundle.js.map             <span class=\"c\"># &lt;-- source map</span>src/cart/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/cart/index.bundle.min.js             <span class=\"c\"># &lt;-- minified code</span>src/cart/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/cart/index.bundle.min.js.map         <span class=\"c\"># &lt;-- source map</span>src/checkout/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/checkout/index.bundle.js         <span class=\"c\"># &lt;-- unminified code</span>src/checkout/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/checkout/index.bundle.js.map     <span class=\"c\"># &lt;-- source map</span>src/checkout/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/checkout/index.bundle.min.js     <span class=\"c\"># &lt;-- minified code</span>src/checkout/index.js <span class=\"nt\">--</span><span class=\"o\">&gt;</span> dist/checkout/index.bundle.min.js.map <span class=\"c\"># &lt;-- source map</span></code></pre></div></div><blockquote>  <p><strong>TIP:</strong> Don\u2019t forget to put quotes around your glob patterns! Otherwise, some shells (e.g. Bash) will try to expand them themselves, which may or may not work</p></blockquote><h2 id=\"browserify-transforms\">Browserify Transforms</h2><p>Simplifyify honors the <a href=\"https://github.com/substack/node-browserify#browserifytransform\"><code class=\"language-plaintext highlighter-rouge\">browserify.transform</code></a> field in your <code class=\"language-plaintext highlighter-rouge\">package.json</code> file.  For example, the following configuration uses <a href=\"https://github.com/babel/babelify\">Babelify</a> to transform your ES6 code to ES5:</p><div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">  </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"my-package\"</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"nl\">\"version\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"1.2.3\"</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"nl\">\"browserify\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"nl\">\"transform\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"babelify\"</span><span class=\"p\">]</span><span class=\"w\">  </span><span class=\"p\">},</span><span class=\"w\">  </span><span class=\"nl\">\"devDependencies\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"nl\">\"babelify\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"^10.0.0\"</span><span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span></code></pre></div></div><p>You can also specify options for your transforms.  The exact options depend on the transform you\u2019re using.  Here\u2019s an example that configures <a href=\"https://github.com/babel/babelify\">Babelify</a> and also modifies Simplifyify\u2019s default config for <a href=\"https://www.npmjs.com/package/uglifyify\">uglifyify</a>:</p><div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">  </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"my-package\"</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"nl\">\"version\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"1.2.3\"</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"nl\">\"browserify\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"nl\">\"transform\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">      </span><span class=\"p\">[</span><span class=\"s2\">\"babelify\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">        </span><span class=\"nl\">\"presets\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"@babel/preset-env\"</span><span class=\"p\">]</span><span class=\"w\">      </span><span class=\"p\">}],</span><span class=\"w\">      </span><span class=\"p\">[</span><span class=\"s2\">\"uglifyify\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">        </span><span class=\"nl\">\"mangle\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">        </span><span class=\"nl\">\"compress\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">          </span><span class=\"nl\">\"sequences\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">          </span><span class=\"nl\">\"dead_code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">          </span><span class=\"nl\">\"booleans\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">          </span><span class=\"nl\">\"conditionals\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">          </span><span class=\"nl\">\"if_return\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\">          </span><span class=\"nl\">\"drop_console\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\">          </span><span class=\"nl\">\"keep_fnames\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\">        </span><span class=\"p\">},</span><span class=\"w\">        </span><span class=\"nl\">\"output\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">          </span><span class=\"nl\">\"comments\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\">      </span><span class=\"p\">}]</span><span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\">  </span><span class=\"p\">},</span><span class=\"w\">  </span><span class=\"nl\">\"devDependencies\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"nl\">\"@babel/preset-env\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"^7.0.0\"</span><span class=\"p\">,</span><span class=\"w\">    </span><span class=\"nl\">\"babelify\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"^10.0.0\"</span><span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span></code></pre></div></div><h2 id=\"browserify-plugins\">Browserify Plugins</h2><p>The same technique described above for Browserify transforms also works for Browserify plugins.  Just add a <code class=\"language-plaintext highlighter-rouge\">browserify.plugins</code> field to your <code class=\"language-plaintext highlighter-rouge\">package.json</code> file.  For example, the following configuration configures <a href=\"https://github.com/TypeStrong/tsify/\">TSify</a> to transpile your TypeScript code, and <a href=\"https://github.com/JS-DevTools/browserify-banner\">browserify-banner</a> to add a banner comment to the top of your output file(s).</p><div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">  </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"my-package\"</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"nl\">\"version\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"1.2.3\"</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"nl\">\"browserify\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"nl\">\"plugins\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">      </span><span class=\"p\">[</span><span class=\"s2\">\"browserify-banner\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">        </span><span class=\"nl\">\"template\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"&lt;%= pkg.name %&gt; v&lt;%= pkg.version %&gt;\"</span><span class=\"w\">      </span><span class=\"p\">}],</span><span class=\"w\">      </span><span class=\"p\">[</span><span class=\"s2\">\"tsify\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">        </span><span class=\"nl\">\"target\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"esnext\"</span><span class=\"p\">,</span><span class=\"w\">        </span><span class=\"nl\">\"module\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"commonjs\"</span><span class=\"p\">,</span><span class=\"w\">        </span><span class=\"nl\">\"moduleResolution\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"node\"</span><span class=\"p\">,</span><span class=\"w\">        </span><span class=\"nl\">\"jsx\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"react\"</span><span class=\"w\">      </span><span class=\"p\">}]</span><span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\">  </span><span class=\"p\">},</span><span class=\"w\">  </span><span class=\"nl\">\"devDependencies\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"nl\">\"typescript\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"^3.0.3\"</span><span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span></code></pre></div></div><h2 id=\"api\">API</h2><p>Simplifyify also has a programmatic API, so you can use it directly in your build scripts (Gulp, Grunt, Broccoli, etc.)</p><p><a href=\"https://github.com/JS-DevTools/simplifyify/blob/6709bb5bbf59b327b4ced3e833078de8db006b5a/lib/index.js#L9-L28\">Here\u2019s the API definition</a>, and <a href=\"https://github.com/JS-DevTools/simplifyify/blob/6709bb5bbf59b327b4ced3e833078de8db006b5a/bin/simplifyify.js#L71-L102\">here\u2019s a full example</a>. Just pass an array of strings (file paths and/or glob patterns) and an options param.  You get back an <a href=\"https://nodejs.org/api/events.html#events_class_events_eventemitter\"><code class=\"language-plaintext highlighter-rouge\">EventEmitter</code></a>, which fires all the Browserify &amp; Watchify events.</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">var</span> <span class=\"nx\">simplifyify</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">@jsdevtools/simplifyify</span><span class=\"dl\">\"</span><span class=\"p\">);</span><span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">task</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">browserify</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">done</span><span class=\"p\">)</span> <span class=\"p\">{</span>  <span class=\"nx\">simplifyify</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">lib/*.module.js</span><span class=\"dl\">\"</span><span class=\"p\">,</span>    <span class=\"p\">{</span>        <span class=\"na\">outfile</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">dist/*.bundle.js</span><span class=\"dl\">\"</span><span class=\"p\">,</span>        <span class=\"na\">debug</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>        <span class=\"na\">minify</span><span class=\"p\">:</span> <span class=\"kc\">true</span>    <span class=\"p\">})</span>    <span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">end</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>        <span class=\"c1\">// Finished successfully!</span>        <span class=\"nx\">done</span><span class=\"p\">();</span>    <span class=\"p\">})</span>    <span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">error</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">{</span>        <span class=\"c1\">// Something went wrong</span>        <span class=\"nx\">done</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span>    <span class=\"p\">});</span><span class=\"p\">});</span></code></pre></div></div><h2 id=\"contributing\">Contributing</h2><p>Contributions, enhancements, and bug-fixes are welcome!  <a href=\"https://github.com/JS-DevTools/simplifyify/issues\">Open an issue</a> on GitHub and <a href=\"https://github.com/JS-DevTools/simplifyify/pulls\">submit a pull request</a>.</p><h4 id=\"building\">Building</h4><p>To build the project locally on your computer:</p><ol>  <li>    <p><strong>Clone this repo</strong><br /><code class=\"language-plaintext highlighter-rouge\">git clone https://github.com/JS-DevTools/simplifyify.git</code></p>  </li>  <li>    <p><strong>Install dependencies</strong><br /><code class=\"language-plaintext highlighter-rouge\">npm install</code></p>  </li>  <li>    <p><strong>Run the tests</strong><br /><code class=\"language-plaintext highlighter-rouge\">npm test</code></p>  </li></ol><h2 id=\"license\">License</h2><p>Simplifyify is 100% free and open-source, under the <a href=\"/simplifyify/LICENSE\">MIT license</a>. Use it however you want.</p><p>This package is <a href=\"http://treeware.earth\">Treeware</a>. If you use it in production, then we ask that you <a href=\"https://plant.treeware.earth/JS-DevTools/simplifyify\"><strong>buy the world a tree</strong></a> to thank us for our work. By contributing to the Treeware forest you\u2019ll be creating employment for local families and restoring wildlife habitats.</p><h2 id=\"big-thanks-to\">Big Thanks To</h2><p>Thanks to these awesome companies for their support of Open Source developers \u2764</p><p><a href=\"https://github.com/open-source\"><img src=\"https://jstools.dev/img/badges/github.svg\" alt=\"GitHub\" /></a><a href=\"https://www.npmjs.com/\"><img src=\"https://jstools.dev/img/badges/npm.svg\" alt=\"NPM\" /></a><a href=\"https://coveralls.io\"><img src=\"https://jstools.dev/img/badges/coveralls.svg\" alt=\"Coveralls\" /></a><a href=\"https://travis-ci.com\"><img src=\"https://jstools.dev/img/badges/travis-ci.svg\" alt=\"Travis CI\" /></a><a href=\"https://saucelabs.com\"><img src=\"https://jstools.dev/img/badges/sauce-labs.svg\" alt=\"SauceLabs\" /></a></p>  </main>  <footer id=\"footer\">              <p class=\"repo-owner\">        <a href=\"https://github.com/JS-DevTools/simplifyify\">simplifyify</a> is maintained by        <a href=\"https://github.com/JS-DevTools\">JS-DevTools</a>.      </p>      </footer></div>  </body></html>",
  "embeddings": []
}
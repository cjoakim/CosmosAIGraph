{
  "libtype": "npm",
  "libname": "clipanion",
  "url": "https://mael.dev/clipanion/",
  "html": "<!doctype html><html lang=\"en\" dir=\"ltr\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"><meta name=\"generator\" content=\"Docusaurus v2.0.0-beta.14\"><link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"Clipanion\" href=\"/clipanion/opensearch.xml\"><title data-react-helmet=\"true\">Clipanion | Clipanion</title><meta data-react-helmet=\"true\" property=\"og:title\" content=\"Clipanion | Clipanion\"><meta data-react-helmet=\"true\" name=\"twitter:card\" content=\"summary_large_image\"><meta data-react-helmet=\"true\" name=\"description\" content=\"Type-safe CLI library with no runtime dependencies\"><meta data-react-helmet=\"true\" property=\"og:description\" content=\"Type-safe CLI library with no runtime dependencies\"><meta data-react-helmet=\"true\" property=\"og:url\" content=\"https://mael.dev/clipanion//clipanion/\"><meta data-react-helmet=\"true\" name=\"docsearch:language\" content=\"en\"><meta data-react-helmet=\"true\" name=\"docsearch:docusaurus_tag\" content=\"default\"><link data-react-helmet=\"true\" rel=\"icon\" href=\"/clipanion/logo.svg\"><link data-react-helmet=\"true\" rel=\"canonical\" href=\"https://mael.dev/clipanion//clipanion/\"><link data-react-helmet=\"true\" rel=\"alternate\" href=\"https://mael.dev/clipanion//clipanion/\" hreflang=\"en\"><link data-react-helmet=\"true\" rel=\"alternate\" href=\"https://mael.dev/clipanion//clipanion/\" hreflang=\"x-default\"><link data-react-helmet=\"true\" rel=\"preconnect\" href=\"https://BH4D9OD16A-dsn.algolia.net\" crossorigin=\"anonymous\"><script data-react-helmet=\"true\">function maybeInsertBanner(){window.__DOCUSAURUS_INSERT_BASEURL_BANNER&&insertBanner()}function insertBanner(){var n=document.getElementById(\"docusaurus-base-url-issue-banner-container\");if(n){n.innerHTML='\\n<div id=\"docusaurus-base-url-issue-banner\" style=\"border: thick solid red; background-color: rgb(255, 230, 179); margin: 20px; padding: 20px; font-size: 20px;\">\\n   <p style=\"font-weight: bold; font-size: 30px;\">Your Docusaurus site did not load properly.</p>\\n   <p>A very common reason is a wrong site <a href=\"https://docusaurus.io/docs/docusaurus.config.js/#baseurl\" style=\"font-weight: bold;\">baseUrl configuration</a>.</p>\\n   <p>Current configured baseUrl = <span style=\"font-weight: bold; color: red;\">/clipanion/</span> </p>\\n   <p>We suggest trying baseUrl = <span id=\"docusaurus-base-url-issue-banner-suggestion-container\" style=\"font-weight: bold; color: green;\"></span></p>\\n</div>\\n';var e=document.getElementById(\"docusaurus-base-url-issue-banner-suggestion-container\"),s=window.location.pathname,r=\"/\"===s.substr(-1)?s:s+\"/\";e.innerHTML=r}}window.__DOCUSAURUS_INSERT_BASEURL_BANNER=!0,document.addEventListener(\"DOMContentLoaded\",maybeInsertBanner)</script><link rel=\"stylesheet\" href=\"/clipanion/assets/css/styles.357c5dd1.css\"><link rel=\"preload\" href=\"/clipanion/assets/js/runtime~main.22c66ed3.js\" as=\"script\"><link rel=\"preload\" href=\"/clipanion/assets/js/main.c90af61c.js\" as=\"script\"></head><body><script>!function(){function t(t){document.documentElement.setAttribute(\"data-theme\",t)}var e=function(){var t=null;try{t=localStorage.getItem(\"theme\")}catch(t){}return t}();t(null!==e?e:\"light\")}()</script><div id=\"__docusaurus\"><div id=\"docusaurus-base-url-issue-banner-container\"></div><div><a href=\"#\" class=\"skipToContent_-mhh\">Skip to main content</a></div><nav class=\"navbar navbar--fixed-top\"><div class=\"navbar__inner\"><div class=\"navbar__items\"><button aria-label=\"Navigation bar toggle\" class=\"navbar__toggle clean-btn\" type=\"button\" tabindex=\"0\"><svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" aria-hidden=\"true\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M4 7h22M4 15h22M4 23h22\"></path></svg></button><a class=\"navbar__brand\" href=\"/clipanion/\"><div class=\"navbar__logo\"><img src=\"/clipanion/logo.svg\" alt=\"Clipanion Logo\" class=\"themedImage_Slhs themedImage--light_wbQW\"><img src=\"/clipanion/logo.svg\" alt=\"Clipanion Logo\" class=\"themedImage_Slhs themedImage--dark_u-Kn\"></div><b class=\"navbar__title\">Clipanion</b></a><a class=\"navbar__item navbar__link\" href=\"/clipanion/docs/\">Docs</a><a href=\"https://mael.dev/packages\" target=\"_self\" rel=\"noopener noreferrer\" class=\"navbar__item navbar__link\"><span>See Also<svg width=\"13.5\" height=\"13.5\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"iconExternalLink_N0ea\"><path fill=\"currentColor\" d=\"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z\"></path></svg></span></a></div><div class=\"navbar__items navbar__items--right\"><a href=\"https://github.com/arcanis/clipanion\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"navbar__item navbar__link\"><span>GitHub<svg width=\"13.5\" height=\"13.5\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"iconExternalLink_N0ea\"><path fill=\"currentColor\" d=\"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z\"></path></svg></span></a><div class=\"toggle_GI8j toggle_Dexr toggleDisabled_RINO\"><div class=\"toggleTrack_oM32\" role=\"button\" tabindex=\"-1\"><div class=\"toggleTrackCheck_266G\"><span class=\"toggleIcon_vI+w\">\ud83c\udf1c</span></div><div class=\"toggleTrackX_FTHE\"><span class=\"toggleIcon_vI+w\">\ud83c\udf1e</span></div><div class=\"toggleTrackThumb_dQYN\"></div></div><input type=\"checkbox\" class=\"toggleScreenReader_afT2\" aria-label=\"Switch between dark and light mode\"></div><div class=\"searchBox_VDhG\"><button type=\"button\" class=\"DocSearch DocSearch-Button\" aria-label=\"Search\"><span class=\"DocSearch-Button-Container\"><svg width=\"20\" height=\"20\" class=\"DocSearch-Search-Icon\" viewBox=\"0 0 20 20\"><path d=\"M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z\" stroke=\"currentColor\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg><span class=\"DocSearch-Button-Placeholder\">Search</span></span><span class=\"DocSearch-Button-Keys\"></span></button></div></div></div><div role=\"presentation\" class=\"navbar-sidebar__backdrop\"></div></nav><div class=\"main-wrapper\"><header class=\"hero hero--primary heroBanner_etFc\" style=\"background-image:url(&#x27;data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20fill%3D%22%23000000%22%20fill-opacity%3D%220.05%22%20width%3D%2252%22%20height%3D%2252%22%20viewBox%3D%220%200%2052%2052%22%3E%3Cpath%20d%3D%22M0%2017.83V0h17.83a3%203%200%200%201-5.66%202H5.9A5%205%200%200%201%202%205.9v6.27a3%203%200%200%201-2%205.66zm0%2018.34a3%203%200%200%201%202%205.66v6.27A5%205%200%200%201%205.9%2052h6.27a3%203%200%200%201%205.66%200H0V36.17zM36.17%2052a3%203%200%200%201%205.66%200h6.27a5%205%200%200%201%203.9-3.9v-6.27a3%203%200%200%201%200-5.66V52H36.17zM0%2031.93v-9.78a5%205%200%200%201%203.8.72l4.43-4.43a3%203%200%201%201%201.42%201.41L5.2%2024.28a5%205%200%200%201%200%205.52l4.44%204.43a3%203%200%201%201-1.42%201.42L3.8%2031.2a5%205%200%200%201-3.8.72zm52-14.1a3%203%200%200%201%200-5.66V5.9A5%205%200%200%201%2048.1%202h-6.27a3%203%200%200%201-5.66-2H52v17.83zm0%2014.1a4.97%204.97%200%200%201-1.72-.72l-4.43%204.44a3%203%200%201%201-1.41-1.42l4.43-4.43a5%205%200%200%201%200-5.52l-4.43-4.43a3%203%200%201%201%201.41-1.41l4.43%204.43c.53-.35%201.12-.6%201.72-.72v9.78zM22.15%200h9.78a5%205%200%200%201-.72%203.8l4.44%204.43a3%203%200%201%201-1.42%201.42L29.8%205.2a5%205%200%200%201-5.52%200l-4.43%204.44a3%203%200%201%201-1.41-1.42l4.43-4.43a5%205%200%200%201-.72-3.8zm0%2052c.13-.6.37-1.19.72-1.72l-4.43-4.43a3%203%200%201%201%201.41-1.41l4.43%204.43a5%205%200%200%201%205.52%200l4.43-4.43a3%203%200%201%201%201.42%201.41l-4.44%204.43c.36.53.6%201.12.72%201.72h-9.78zm9.75-24a5%205%200%200%201-3.9%203.9v6.27a3%203%200%201%201-2%200V31.9a5%205%200%200%201-3.9-3.9h-6.27a3%203%200%201%201%200-2h6.27a5%205%200%200%201%203.9-3.9v-6.27a3%203%200%201%201%202%200v6.27a5%205%200%200%201%203.9%203.9h6.27a3%203%200%201%201%200%202H31.9z%22%2F%3E%3C%2Fsvg%3E&#x27;)\"><div class=\"container\"><div class=\"heroContainer_S8D4\"><div class=\"heroInfo_uHiW\"><h1 class=\"hero__title\">Clipanion</h1><p class=\"hero__subtitle\">Type-safe CLI library with no runtime dependencies</p><div class=\"buttons_+YzY\"><a class=\"button button--outline button--secondary button--lg getStarted_1ic1\" href=\"/clipanion/docs\">Overview</a><a class=\"button button--outline button--secondary button--lg getStarted_1ic1\" href=\"/clipanion/docs/getting-started\">Get Started</a></div></div><div class=\"heroCode_0s2g\"><div class=\"shiki-twoslash-fragment\"><pre class=\"shiki min-light twoslash lsp\" style=\"background-color:#ffffff;color:#24292eff\"><div class=\"language-id\">ts</div><div class=\"code-container\"><code><div class=\"line\"><span style=\"color:#D32F2F\">import</span><span style=\"color:#24292EFF\"> {<data-lsp lsp=\"Base abstract class for CLI commands. The main thing to remember is todeclare an async `execute` member function that will be called when thecommand is invoked from the CLI, and optionally a `paths` property todeclare the set of paths under which the command should be exposed.(alias) class Command&lt;Context extends BaseContext = BaseContext&gt;import Command\">Command</data-lsp></span><span style=\"color:#212121\">,</span><span style=\"color:#24292EFF\"> <data-lsp lsp=\"import Option\">Option</data-lsp></span><span style=\"color:#212121\">,</span><span style=\"color:#24292EFF\"> <data-lsp lsp=\"An all-in-one helper that simultaneously instantiate a CLI and immediatelyexecutes it. All parameters are optional except the command classes andwill be filled by sensible values for the current environment (for examplethe argv argument will default to `process.argv`, etc).Just like `Cli#runExit`, this function will set the `process.exitCode` valuebefore returning.(alias) function runExit&lt;Context extends BaseContext = BaseContext&gt;(commandClasses: RunCommandNoContext&lt;Context&gt;): Promise&lt;void&gt; (+7 overloads)import runExit\">runExit</data-lsp>} </span><span style=\"color:#D32F2F\">from</span><span style=\"color:#24292EFF\"> </span><span style=\"color:#22863A\">&#x27;clipanion&#x27;</span><span style=\"color:#24292EFF\">;</span></div><div class=\"line\">\u00a0</div><div class=\"line\"><span style=\"color:#6F42C1\"><data-lsp lsp=\"An all-in-one helper that simultaneously instantiate a CLI and immediatelyexecutes it. All parameters are optional except the command classes andwill be filled by sensible values for the current environment (for examplethe argv argument will default to `process.argv`, etc).Just like `Cli#runExit`, this function will set the `process.exitCode` valuebefore returning.(alias) runExit&lt;BaseContext&gt;(commandClasses: RunCommand&lt;BaseContext&gt;): Promise&lt;void&gt; (+7 overloads)import runExit\">runExit</data-lsp></span><span style=\"color:#24292EFF\">(</span><span style=\"color:#D32F2F\">class</span><span style=\"color:#24292EFF\"> </span><span style=\"color:#6F42C1\"><data-lsp lsp=\"(local class) MainCommand\">MainCommand</data-lsp></span><span style=\"color:#24292EFF\"> </span><span style=\"color:#D32F2F\">extends</span><span style=\"color:#24292EFF\"> </span><span style=\"color:#6F42C1\"><data-lsp lsp=\"Base abstract class for CLI commands. The main thing to remember is todeclare an async `execute` member function that will be called when thecommand is invoked from the CLI, and optionally a `paths` property todeclare the set of paths under which the command should be exposed.(alias) class Command&lt;Context extends BaseContext = BaseContext&gt;import Command\">Command</data-lsp></span><span style=\"color:#24292EFF\"> {</span></div><div class=\"line\"><span style=\"color:#24292EFF\">  <data-lsp lsp=\"(property) MainCommand.name: string\">name</data-lsp> </span><span style=\"color:#D32F2F\">=</span><span style=\"color:#24292EFF\"> </span><span style=\"color:#1976D2\"><data-lsp lsp=\"import Option\">Option</data-lsp></span><span style=\"color:#6F42C1\">.<data-lsp lsp=\"Used to annotate positional options. Such options will be stringsunless they are provided a schema, which will then be used for coercion.Be careful: this function is order-dependent! Make sure to define yourpositional options in the same order you expect to find them on thecommand line.function String(): string (+8 overloads)\">String</data-lsp></span><span style=\"color:#24292EFF\">();</span></div><div class=\"line\">\u00a0</div><div class=\"line\"><span style=\"color:#24292EFF\">  </span><span style=\"color:#D32F2F\">async</span><span style=\"color:#24292EFF\"> </span><span style=\"color:#6F42C1\"><data-lsp lsp=\"Standard function that&#x27;ll get executed by `Cli#run` and `Cli#runExit`.Expected to return an exit code or nothing (which Clipanion will treatas if 0 had been returned).(method) MainCommand.execute(): Promise&lt;void&gt;\">execute</data-lsp></span><span style=\"color:#24292EFF\">() {</span></div><div class=\"line\"><span style=\"color:#24292EFF\">    </span><span style=\"color:#1976D2\">this</span><span style=\"color:#6F42C1\">.</span><span style=\"color:#1976D2\"><data-lsp lsp=\"Predefined variable that will be populated with the context of theapplication.(property) Command&lt;BaseContext&gt;.context: BaseContext\">context</data-lsp></span><span style=\"color:#6F42C1\">.</span><span style=\"color:#1976D2\"><data-lsp lsp=\"The output stream of the CLI.(property) stdout: internal.Writable\">stdout</data-lsp></span><span style=\"color:#6F42C1\">.<data-lsp lsp=\"(method) internal.Writable.write(chunk: any, cb?: ((error: Error | null | undefined) =&gt; void) | undefined): boolean (+1 overload)\">write</data-lsp></span><span style=\"color:#24292EFF\">(</span><span style=\"color:#22863A\">`Hello </span><span style=\"color:#D32F2F\">${</span><span style=\"color:#1976D2\">this</span><span style=\"color:#24292EFF\">.<data-lsp lsp=\"(property) MainCommand.name: string\">name</data-lsp></span><span style=\"color:#D32F2F\">}</span><span style=\"color:#22863A\">!\\n`</span><span style=\"color:#24292EFF\">);</span></div><div class=\"line\"><span style=\"color:#24292EFF\">  }</span></div><div class=\"line\"><span style=\"color:#24292EFF\">})</span></div></code></div></pre><pre class=\"shiki nord twoslash lsp\" style=\"background-color:#2e3440ff;color:#d8dee9ff\"><div class=\"language-id\">ts</div><div class=\"code-container\"><code><div class=\"line\"><span style=\"color:#81A1C1\">import</span><span style=\"color:#D8DEE9FF\"> </span><span style=\"color:#ECEFF4\">{</span><span style=\"color:#D8DEE9\"><data-lsp lsp=\"Base abstract class for CLI commands. The main thing to remember is todeclare an async `execute` member function that will be called when thecommand is invoked from the CLI, and optionally a `paths` property todeclare the set of paths under which the command should be exposed.(alias) class Command&lt;Context extends BaseContext = BaseContext&gt;import Command\">Command</data-lsp></span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#D8DEE9FF\"> </span><span style=\"color:#D8DEE9\"><data-lsp lsp=\"import Option\">Option</data-lsp></span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#D8DEE9FF\"> </span><span style=\"color:#D8DEE9\"><data-lsp lsp=\"An all-in-one helper that simultaneously instantiate a CLI and immediatelyexecutes it. All parameters are optional except the command classes andwill be filled by sensible values for the current environment (for examplethe argv argument will default to `process.argv`, etc).Just like `Cli#runExit`, this function will set the `process.exitCode` valuebefore returning.(alias) function runExit&lt;Context extends BaseContext = BaseContext&gt;(commandClasses: RunCommandNoContext&lt;Context&gt;): Promise&lt;void&gt; (+7 overloads)import runExit\">runExit</data-lsp></span><span style=\"color:#ECEFF4\">}</span><span style=\"color:#D8DEE9FF\"> </span><span style=\"color:#81A1C1\">from</span><span style=\"color:#D8DEE9FF\"> </span><span style=\"color:#ECEFF4\">&#x27;</span><span style=\"color:#A3BE8C\">clipanion</span><span style=\"color:#ECEFF4\">&#x27;</span><span style=\"color:#81A1C1\">;</span></div><div class=\"line\">\u00a0</div><div class=\"line\"><span style=\"color:#88C0D0\"><data-lsp lsp=\"An all-in-one helper that simultaneously instantiate a CLI and immediatelyexecutes it. All parameters are optional except the command classes andwill be filled by sensible values for the current environment (for examplethe argv argument will default to `process.argv`, etc).Just like `Cli#runExit`, this function will set the `process.exitCode` valuebefore returning.(alias) runExit&lt;BaseContext&gt;(commandClasses: RunCommand&lt;BaseContext&gt;): Promise&lt;void&gt; (+7 overloads)import runExit\">runExit</data-lsp></span><span style=\"color:#D8DEE9FF\">(</span><span style=\"color:#81A1C1\">class</span><span style=\"color:#D8DEE9FF\"> </span><span style=\"color:#8FBCBB\"><data-lsp lsp=\"(local class) MainCommand\">MainCommand</data-lsp></span><span style=\"color:#D8DEE9FF\"> </span><span style=\"color:#81A1C1\">extends</span><span style=\"color:#D8DEE9FF\"> </span><span style=\"color:#8FBCBB\"><data-lsp lsp=\"Base abstract class for CLI commands. The main thing to remember is todeclare an async `execute` member function that will be called when thecommand is invoked from the CLI, and optionally a `paths` property todeclare the set of paths under which the command should be exposed.(alias) class Command&lt;Context extends BaseContext = BaseContext&gt;import Command\">Command</data-lsp></span><span style=\"color:#D8DEE9FF\"> </span><span style=\"color:#ECEFF4\">{</span></div><div class=\"line\"><span style=\"color:#D8DEE9FF\">  <data-lsp lsp=\"(property) MainCommand.name: string\">name</data-lsp> </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#D8DEE9FF\"> </span><span style=\"color:#D8DEE9\"><data-lsp lsp=\"import Option\">Option</data-lsp></span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\"><data-lsp lsp=\"Used to annotate positional options. Such options will be stringsunless they are provided a schema, which will then be used for coercion.Be careful: this function is order-dependent! Make sure to define yourpositional options in the same order you expect to find them on thecommand line.function String(): string (+8 overloads)\">String</data-lsp></span><span style=\"color:#D8DEE9FF\">()</span><span style=\"color:#81A1C1\">;</span></div><div class=\"line\">\u00a0</div><div class=\"line\"><span style=\"color:#D8DEE9FF\">  </span><span style=\"color:#81A1C1\">async</span><span style=\"color:#D8DEE9FF\"> </span><span style=\"color:#88C0D0\"><data-lsp lsp=\"Standard function that&#x27;ll get executed by `Cli#run` and `Cli#runExit`.Expected to return an exit code or nothing (which Clipanion will treatas if 0 had been returned).(method) MainCommand.execute(): Promise&lt;void&gt;\">execute</data-lsp></span><span style=\"color:#ECEFF4\">()</span><span style=\"color:#D8DEE9FF\"> </span><span style=\"color:#ECEFF4\">{</span></div><div class=\"line\"><span style=\"color:#D8DEE9FF\">    </span><span style=\"color:#81A1C1\">this</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#D8DEE9\"><data-lsp lsp=\"Predefined variable that will be populated with the context of theapplication.(property) Command&lt;BaseContext&gt;.context: BaseContext\">context</data-lsp></span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#D8DEE9\"><data-lsp lsp=\"The output stream of the CLI.(property) stdout: internal.Writable\">stdout</data-lsp></span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\"><data-lsp lsp=\"(method) internal.Writable.write(chunk: any, cb?: ((error: Error | null | undefined) =&gt; void) | undefined): boolean (+1 overload)\">write</data-lsp></span><span style=\"color:#D8DEE9FF\">(</span><span style=\"color:#ECEFF4\">`</span><span style=\"color:#A3BE8C\">Hello </span><span style=\"color:#ECEFF4\">${</span><span style=\"color:#81A1C1\">this</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#D8DEE9\"><data-lsp lsp=\"(property) MainCommand.name: string\">name</data-lsp></span><span style=\"color:#ECEFF4\">}</span><span style=\"color:#A3BE8C\">!</span><span style=\"color:#EBCB8B\">\\n</span><span style=\"color:#ECEFF4\">`</span><span style=\"color:#D8DEE9FF\">)</span><span style=\"color:#81A1C1\">;</span></div><div class=\"line\"><span style=\"color:#D8DEE9FF\">  </span><span style=\"color:#ECEFF4\">}</span></div><div class=\"line\"><span style=\"color:#ECEFF4\">}</span><span style=\"color:#D8DEE9FF\">)</span></div></code></div></pre></div></div></div></div></header><main><section class=\"features_n4mZ\"><div class=\"container\"><div class=\"row\"><div class=\"col col--4\"><h3>Type Safe</h3><p>Clipanion provides type inference for the options you declare: no duplicated types to write and keep in sync.</p></div><div class=\"col col--4\"><h3>Tooling Integration</h3><p>Because it uses standard ES6 classes, tools like ESLint can easily lint your options to detect the unused ones.</p></div><div class=\"col col--4\"><h3>Feature Complete</h3><p>Clipanion supports subcommands, arrays, counters, execution contexts, error handling, option proxying, and much more.</p></div><div class=\"col col--4\"><h3>Soundness</h3><p>Clipanion unifies your commands into a proper state machine. It gives little room for bugs, and unlocks command overloads.</p></div><div class=\"col col--4\"><h3>Tree Shaking</h3><p>The core is implemented using a functional approach, letting most bundlers only keep what you actually use.</p></div><div class=\"col col--4\"><h3>Battle Tested</h3><p>Clipanion is used to power Yarn - likely one of the most complex CLI used everyday by the JavaScript community.</p></div></div></div></section></main></div><footer class=\"footer footer--dark\"><div class=\"container container-fluid\"><div class=\"row footer__links\"><div class=\"col footer__col\"><div class=\"footer__title\">Community</div><ul class=\"footer__items\"><li class=\"footer__item\"><a href=\"https://discordapp.com/invite/yarnpkg\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"footer__link-item\"><span>Discord<svg width=\"13.5\" height=\"13.5\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"iconExternalLink_N0ea\"><path fill=\"currentColor\" d=\"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z\"></path></svg></span></a></li><li class=\"footer__item\"><a href=\"https://twitter.com/arcanis\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"footer__link-item\"><span>Twitter<svg width=\"13.5\" height=\"13.5\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"iconExternalLink_N0ea\"><path fill=\"currentColor\" d=\"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z\"></path></svg></span></a></li></ul></div><div class=\"col footer__col\"><div class=\"footer__title\">More</div><ul class=\"footer__items\"><li class=\"footer__item\"><a href=\"https://github.com/arcanis/clipanion\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"footer__link-item\"><span>GitHub<svg width=\"13.5\" height=\"13.5\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"iconExternalLink_N0ea\"><path fill=\"currentColor\" d=\"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z\"></path></svg></span></a></li><li class=\"footer__item\"><a href=\"https://mael.dev/packages\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"footer__link-item\"><span>See Also<svg width=\"13.5\" height=\"13.5\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"iconExternalLink_N0ea\"><path fill=\"currentColor\" d=\"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z\"></path></svg></span></a></li></ul></div><div class=\"col footer__col\"><div class=\"footer__title\"></div><ul class=\"footer__items\"></ul></div></div><div class=\"footer__bottom text--center\"><div class=\"footer__copyright\">Copyright \u00a9 2024 Ma\u00ebl Nison. Documentation built with Docusaurus.</div></div></div></footer></div><script src=\"/clipanion/assets/js/runtime~main.22c66ed3.js\"></script><script src=\"/clipanion/assets/js/main.c90af61c.js\"></script></body></html>",
  "embeddings": []
}
{
  "libtype": "npm",
  "libname": "prettyjson",
  "url": "http://rafeca.com/prettyjson",
  "html": "<!doctype html><html>  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"chrome=1\">    <title>prettyjson by rafeca</title>    <link rel=\"stylesheet\" href=\"stylesheets/styles.css\">    <link rel=\"stylesheet\" href=\"stylesheets/pygment_trac.css\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\">    <!--[if lt IE 9]>    <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>    <![endif]-->  </head>  <body>    <div class=\"wrapper\">      <header>        <h1>prettyjson</h1>        <p>Package for formatting JSON data in a coloured YAML-style, perfect for CLI output</p>        <p class=\"view\"><a href=\"https://github.com/rafeca/prettyjson\">View the Project on GitHub <small>rafeca/prettyjson</small></a></p>        <ul>          <li><a href=\"https://github.com/rafeca/prettyjson/zipball/master\">Download <strong>ZIP File</strong></a></li>          <li><a href=\"https://github.com/rafeca/prettyjson/tarball/master\">Download <strong>TAR Ball</strong></a></li>          <li><a href=\"https://github.com/rafeca/prettyjson\">View On <strong>GitHub</strong></a></li>        </ul>      </header>      <section>        <h1><a id=\"prettyjson---\" class=\"anchor\" href=\"#prettyjson---\" aria-hidden=\"true\"><span class=\"octicon octicon-link\"></span></a>prettyjson <a href=\"http://travis-ci.org/rafeca/prettyjson\"><img src=\"https://secure.travis-ci.org/rafeca/prettyjson.png\" alt=\"Build Status\"></a> <a href=\"http://badge.fury.io/js/prettyjson\"><img src=\"https://badge.fury.io/js/prettyjson.png\" alt=\"NPM version\"></a> <a href=\"https://coveralls.io/r/rafeca/prettyjson?branch=master\"><img src=\"https://coveralls.io/repos/rafeca/prettyjson/badge.png?branch=master\" alt=\"Coverage Status\"></a></h1><p>Package for formatting JSON data in a coloured YAML-style, perfect for CLI output.</p><h2><a id=\"how-to-install\" class=\"anchor\" href=\"#how-to-install\" aria-hidden=\"true\"><span class=\"octicon octicon-link\"></span></a>How to install</h2><p>Just install it via NPM:</p><div class=\"highlight highlight-bash\"><pre>$ npm install -g prettyjson</pre></div><p>This will install <code>prettyjson</code> globally, so it will be added automaticallyto your <code>PATH</code>.</p><h2><a id=\"using-it-from-the-cli\" class=\"anchor\" href=\"#using-it-from-the-cli\" aria-hidden=\"true\"><span class=\"octicon octicon-link\"></span></a>Using it (from the CLI)</h2><p>This package installs a command line interface to render JSON data in a moreconvenient way. You can use the CLI in three different ways:</p><p><strong>Decode a JSON file:</strong> If you want to see the contents of a JSON file, just passit as the first argument to the CLI:</p><div class=\"highlight highlight-bash\"><pre>$ prettyjson package.json</pre></div><p><img src=\"https://raw.github.com/rafeca/prettyjson/master/images/example3.png\" alt=\"Example 1\"></p><p><strong>Decode the stdin:</strong> You can also pipe the result of a command (for example anHTTP request) to the CLI to see the JSON result in a clearer way:</p><div class=\"highlight highlight-bash\"><pre>$ curl https://api.github.com/users/rafeca <span class=\"pl-k\">|</span> prettyjson</pre></div><p><img src=\"https://raw.github.com/rafeca/prettyjson/master/images/example4.png\" alt=\"Example 2\"></p><p><strong>Decode random strings:</strong> if you call the CLI with no arguments, you'll get aprompt where you can past JSON strings and they'll be automatically displayed in a clearer way:</p><p><img src=\"https://raw.github.com/rafeca/prettyjson/master/images/example5.png\" alt=\"Example 3\"></p><h3><a id=\"command-line-options\" class=\"anchor\" href=\"#command-line-options\" aria-hidden=\"true\"><span class=\"octicon octicon-link\"></span></a>Command line options</h3><p>It's possible to customize the output through some command line options:</p><div class=\"highlight highlight-bash\"><pre><span class=\"pl-c\"># Change colors</span>$ prettyjson --string=red --keys=blue --dash=yellow --number=green package.json<span class=\"pl-c\"># Do not use colors</span>$ prettyjson --nocolor=1 package.json<span class=\"pl-c\"># Change indentation</span>$ prettyjson --indent=4 package.json</pre></div><p><strong>Deprecation Notice</strong>: The old configuration through environment variables isdeprecated and it will be removed in the next major version (1.0.0).</p><h2><a id=\"using-it-from-nodejs\" class=\"anchor\" href=\"#using-it-from-nodejs\" aria-hidden=\"true\"><span class=\"octicon octicon-link\"></span></a>Using it (from Node.js)</h2><p>It's pretty easy to use it. You just have to include it in your script and callthe <code>render()</code> method:</p><div class=\"highlight highlight-javascript\"><pre><span class=\"pl-s\">var</span> prettyjson <span class=\"pl-k\">=</span> <span class=\"pl-s3\">require</span>(<span class=\"pl-s1\"><span class=\"pl-pds\">'</span>prettyjson<span class=\"pl-pds\">'</span></span>);<span class=\"pl-s\">var</span> data <span class=\"pl-k\">=</span> {  username<span class=\"pl-k\">:</span> <span class=\"pl-s1\"><span class=\"pl-pds\">'</span>rafeca<span class=\"pl-pds\">'</span></span>,  url<span class=\"pl-k\">:</span> <span class=\"pl-s1\"><span class=\"pl-pds\">'</span>https://github.com/rafeca<span class=\"pl-pds\">'</span></span>,  twitter_account<span class=\"pl-k\">:</span> <span class=\"pl-s1\"><span class=\"pl-pds\">'</span>https://twitter.com/rafeca<span class=\"pl-pds\">'</span></span>,  projects<span class=\"pl-k\">:</span> [<span class=\"pl-s1\"><span class=\"pl-pds\">'</span>prettyprint<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s1\"><span class=\"pl-pds\">'</span>connfu<span class=\"pl-pds\">'</span></span>]};<span class=\"pl-s\">var</span> options <span class=\"pl-k\">=</span> {  noColor<span class=\"pl-k\">:</span> <span class=\"pl-c1\">true</span>};<span class=\"pl-en\">console</span><span class=\"pl-s3\">.log</span>(prettyjson.render(data, options));</pre></div><p>And will output:</p><p><img src=\"https://raw.github.com/rafeca/prettyjson/master/images/example1.png\" alt=\"Example 4\"></p><p>You can also configure the colors of the hash keys and array dashes(using <a href=\"https://github.com/Marak/colors.js\">colors.js</a> colors syntax):</p><div class=\"highlight highlight-javascript\"><pre><span class=\"pl-s\">var</span> prettyjson <span class=\"pl-k\">=</span> <span class=\"pl-s3\">require</span>(<span class=\"pl-s1\"><span class=\"pl-pds\">'</span>prettyjson<span class=\"pl-pds\">'</span></span>);<span class=\"pl-s\">var</span> data <span class=\"pl-k\">=</span> {  username<span class=\"pl-k\">:</span> <span class=\"pl-s1\"><span class=\"pl-pds\">'</span>rafeca<span class=\"pl-pds\">'</span></span>,  url<span class=\"pl-k\">:</span> <span class=\"pl-s1\"><span class=\"pl-pds\">'</span>https://github.com/rafeca<span class=\"pl-pds\">'</span></span>,  twitter_account<span class=\"pl-k\">:</span> <span class=\"pl-s1\"><span class=\"pl-pds\">'</span>https://twitter.com/rafeca<span class=\"pl-pds\">'</span></span>,  projects<span class=\"pl-k\">:</span> [<span class=\"pl-s1\"><span class=\"pl-pds\">'</span>prettyprint<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s1\"><span class=\"pl-pds\">'</span>connfu<span class=\"pl-pds\">'</span></span>]};<span class=\"pl-en\">console</span><span class=\"pl-s3\">.log</span>(prettyjson.render(data, {  keysColor<span class=\"pl-k\">:</span> <span class=\"pl-s1\"><span class=\"pl-pds\">'</span>rainbow<span class=\"pl-pds\">'</span></span>,  dashColor<span class=\"pl-k\">:</span> <span class=\"pl-s1\"><span class=\"pl-pds\">'</span>magenta<span class=\"pl-pds\">'</span></span>,  stringColor<span class=\"pl-k\">:</span> <span class=\"pl-s1\"><span class=\"pl-pds\">'</span>white<span class=\"pl-pds\">'</span></span>}));</pre></div><p>Will output something like:</p><p><img src=\"https://raw.github.com/rafeca/prettyjson/master/images/example2.png\" alt=\"Example 5\"></p><h2><a id=\"running-tests\" class=\"anchor\" href=\"#running-tests\" aria-hidden=\"true\"><span class=\"octicon octicon-link\"></span></a>Running Tests</h2><p>To run the test suite first invoke the following command within the repo,installing the development dependencies:</p><div class=\"highlight highlight-bash\"><pre>$ npm install</pre></div><p>then run the tests:</p><div class=\"highlight highlight-bash\"><pre>$ npm <span class=\"pl-s3\">test</span></pre></div><p>On windows, you can run the tests with:</p><div class=\"highlight highlight-cmd\"><pre>C:\\git\\prettyjson<span class=\"pl-k\">&gt;</span> npm run-script testwin</pre></div>      </section>      <footer>        <p>This project is maintained by <a href=\"https://github.com/rafeca\">rafeca</a></p>        <p><small>Hosted on GitHub Pages &mdash; Theme by <a href=\"https://github.com/orderedlist\">orderedlist</a></small></p>      </footer>    </div>    <script src=\"javascripts/scale.fix.js\"></script>              <script type=\"text/javascript\">            var gaJsHost = ((\"https:\" == document.location.protocol) ? \"https://ssl.\" : \"http://www.\");            document.write(unescape(\"%3Cscript src='\" + gaJsHost + \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));          </script>          <script type=\"text/javascript\">            try {              var pageTracker = _gat._getTracker(\"UA-6212472-4\");            pageTracker._trackPageview();            } catch(err) {}          </script>  </body></html>",
  "embeddings": []
}
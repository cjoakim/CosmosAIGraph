{
  "libtype": "npm",
  "libname": "proj4",
  "url": "https://proj4js.github.io/proj4js/",
  "html": "<!DOCTYPE html><html lang=\"en-US\">  <head>    <meta charset='utf-8'>    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <link rel=\"stylesheet\" href=\"/assets/css/style.css?v=1d61a5e4c25467fc9f759e22d595aa644e75fad7\">    <link rel=\"stylesheet\" type=\"text/css\" href=\"/assets/css/print.css\" media=\"print\">    <!--[if lt IE 9]>    <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>    <![endif]--><!-- Begin Jekyll SEO tag v2.7.1 --><title>PROJ4JS | Proj4js</title><meta name=\"generator\" content=\"Jekyll v3.9.0\" /><meta property=\"og:title\" content=\"PROJ4JS\" /><meta property=\"og:locale\" content=\"en_US\" /><meta name=\"description\" content=\"JavaScript library to transform coordinates from one coordinate system to another, including datum transformations\" /><meta property=\"og:description\" content=\"JavaScript library to transform coordinates from one coordinate system to another, including datum transformations\" /><link rel=\"canonical\" href=\"http://proj4js.org/\" /><meta property=\"og:url\" content=\"http://proj4js.org/\" /><meta property=\"og:site_name\" content=\"Proj4js\" /><meta name=\"twitter:card\" content=\"summary\" /><meta property=\"twitter:title\" content=\"PROJ4JS\" /><script type=\"application/ld+json\">{\"description\":\"JavaScript library to transform coordinates from one coordinate system to another, including datum transformations\",\"url\":\"http://proj4js.org/\",\"@type\":\"WebSite\",\"headline\":\"PROJ4JS\",\"name\":\"Proj4js\",\"@context\":\"https://schema.org\"}</script><!-- End Jekyll SEO tag -->    <!-- start custom head snippets, customize with your own _includes/head-custom.html file --><!-- Setup Google Analytics -->  <script>    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    ga('create', 'UA-46333772-1', 'auto');    ga('send', 'pageview');  </script><!-- You can set your favicon here --><!-- link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico\" --><!-- end custom head snippets -->  </head>  <body>    <div id=\"container\">      <div class=\"inner\">        <header>          <h1>PROJ4JS</h1>          <h2>JavaScript library to transform coordinates from one coordinate system to another, including datum transformations</h2>        </header>        <section id=\"downloads\" class=\"clearfix\">                  </section>        <hr>        <section id=\"main_content\">          <h1 id=\"proj4js-\">PROJ4JS <a href=\"https://travis-ci.org/proj4js/proj4js\"><img src=\"https://api.travis-ci.org/proj4js/proj4js.svg?branch=master\" alt=\"Build Status\"></a></h1><p>Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.Originally a port of <a href=\"https://proj.org/\">PROJ</a> (<a href=\"https://proj.org/faq.html#what-happened-to-proj-4\">then known as PROJ.4</a>) and GCTCP C (<a href=\"https://web.archive.org/web/20130523091752/http://edcftp.cr.usgs.gov/pub/software/gctpc/\">Archive</a>) it isa part of the <a href=\"https://trac.osgeo.org/metacrs/wiki\">MetaCRS</a> group of projects.</p><h2 id=\"installing\">Installing</h2><p>Depending on your preferences</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>npm <span class=\"nb\">install </span>proj4bower <span class=\"nb\">install </span>proj4component <span class=\"nb\">install </span>proj4js/proj4js</code></pre></div></div><p>or just manually grab the file <code class=\"language-plaintext highlighter-rouge\">proj4.js</code> from the <a href=\"https://github.com/proj4js/proj4js/releases\">latest release</a>\u2019s <code class=\"language-plaintext highlighter-rouge\">dist/</code> folder.</p><p>If you do not want to download anything, Proj4js is also hosted on <a href=\"https://www.cdnjs.com/libraries/proj4js\">cdnjs</a> for direct use in your browser applications.</p><h2 id=\"using\">Using</h2><p>The basic signature is:</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">proj4</span><span class=\"p\">(</span><span class=\"nx\">fromProjection</span><span class=\"p\">[,</span> <span class=\"nx\">toProjection</span><span class=\"p\">,</span> <span class=\"nx\">coordinates</span><span class=\"p\">])</span></code></pre></div></div><p>Projections can be proj or wkt strings.</p><p>Coordinates may an object of the form <code class=\"language-plaintext highlighter-rouge\">{x:x,y:y}</code> or an array of the form <code class=\"language-plaintext highlighter-rouge\">[x,y]</code>.</p><p>When all 3 arguments  are given, the result is that the coordinates are transformed from projection1 to projection 2. And returned in the same format that they were given in.</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">var</span> <span class=\"nx\">firstProjection</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">PROJCS[\"NAD83 / Massachusetts Mainland\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.01745329251994328,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],PROJECTION[\"Lambert_Conformal_Conic_2SP\"],PARAMETER[\"standard_parallel_1\",42.68333333333333],PARAMETER[\"standard_parallel_2\",41.71666666666667],PARAMETER[\"latitude_of_origin\",41],PARAMETER[\"central_meridian\",-71.5],PARAMETER[\"false_easting\",200000],PARAMETER[\"false_northing\",750000],AUTHORITY[\"EPSG\",\"26986\"],AXIS[\"X\",EAST],AXIS[\"Y\",NORTH]]</span><span class=\"dl\">'</span><span class=\"p\">;</span><span class=\"kd\">var</span> <span class=\"nx\">secondProjection</span> <span class=\"o\">=</span> <span class=\"dl\">\"</span><span class=\"s2\">+proj=gnom +lat_0=90 +lon_0=0 +x_0=6300000 +y_0=6300000 +ellps=WGS84 +datum=WGS84 +units=m +no_defs</span><span class=\"dl\">\"</span><span class=\"p\">;</span><span class=\"c1\">//I'm not going to redefine those two in latter examples.</span><span class=\"nx\">proj4</span><span class=\"p\">(</span><span class=\"nx\">firstProjection</span><span class=\"p\">,</span><span class=\"nx\">secondProjection</span><span class=\"p\">,[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">]);</span><span class=\"c1\">// [-2690666.2977344505, 3662659.885459918]</span></code></pre></div></div><p>If only 1 projection is given then it is assumed that it is being projected <em>from</em> WGS84 (fromProjection is WGS84).</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">proj4</span><span class=\"p\">(</span><span class=\"nx\">firstProjection</span><span class=\"p\">,[</span><span class=\"o\">-</span><span class=\"mi\">71</span><span class=\"p\">,</span><span class=\"mi\">41</span><span class=\"p\">]);</span><span class=\"c1\">// [242075.00535055372, 750123.32090043]</span></code></pre></div></div><p>If no coordinates are given an object with two methods is returned, its methods are <code class=\"language-plaintext highlighter-rouge\">forward</code> which projects from the first projection to the second and <code class=\"language-plaintext highlighter-rouge\">inverse</code> which projects from the second to the first.</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">proj4</span><span class=\"p\">(</span><span class=\"nx\">firstProjection</span><span class=\"p\">,</span><span class=\"nx\">secondProjection</span><span class=\"p\">).</span><span class=\"nx\">forward</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">]);</span><span class=\"c1\">// [-2690666.2977344505, 3662659.885459918]</span><span class=\"nx\">proj4</span><span class=\"p\">(</span><span class=\"nx\">secondProjection</span><span class=\"p\">,</span><span class=\"nx\">firstProjection</span><span class=\"p\">).</span><span class=\"nx\">inverse</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">]);</span><span class=\"c1\">// [-2690666.2977344505, 3662659.885459918]</span></code></pre></div></div><p>And as above if only one projection is given, it\u2019s assumed to be coming from wgs84:</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">proj4</span><span class=\"p\">(</span><span class=\"nx\">firstProjection</span><span class=\"p\">).</span><span class=\"nx\">forward</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mi\">71</span><span class=\"p\">,</span><span class=\"mi\">41</span><span class=\"p\">]);</span><span class=\"c1\">// [242075.00535055372, 750123.32090043]</span><span class=\"nx\">proj4</span><span class=\"p\">(</span><span class=\"nx\">firstProjection</span><span class=\"p\">).</span><span class=\"nx\">inverse</span><span class=\"p\">([</span><span class=\"mf\">242075.00535055372</span><span class=\"p\">,</span> <span class=\"mf\">750123.32090043</span><span class=\"p\">]);</span><span class=\"c1\">//[-71, 40.99999999999986]</span><span class=\"c1\">//the floating points to answer your question</span></code></pre></div></div><h2 id=\"named-projections\">Named Projections</h2><p>If you prefer to define a projection as a string and reference it that way, you may use the proj4.defs method which can be called 2 ways, with a name and projection:</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">proj4</span><span class=\"p\">.</span><span class=\"nx\">defs</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">WGS84</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees</span><span class=\"dl\">\"</span><span class=\"p\">);</span></code></pre></div></div><p>or with an array</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">proj4</span><span class=\"p\">.</span><span class=\"nx\">defs</span><span class=\"p\">([</span>  <span class=\"p\">[</span>    <span class=\"dl\">'</span><span class=\"s1\">EPSG:4326</span><span class=\"dl\">'</span><span class=\"p\">,</span>    <span class=\"dl\">'</span><span class=\"s1\">+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees</span><span class=\"dl\">'</span><span class=\"p\">],</span>  <span class=\"p\">[</span>    <span class=\"dl\">'</span><span class=\"s1\">EPSG:4269</span><span class=\"dl\">'</span><span class=\"p\">,</span>    <span class=\"dl\">'</span><span class=\"s1\">+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees</span><span class=\"dl\">'</span>  <span class=\"p\">]</span><span class=\"p\">]);</span></code></pre></div></div><p>you can then do</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">proj4</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">EPSG:4326</span><span class=\"dl\">'</span><span class=\"p\">);</span></code></pre></div></div><p>instead of writing out the whole proj definition, by default proj4 has the following projections predefined:</p><ul>  <li>\u2018EPSG:4326\u2019, which has the following alias    <ul>      <li>\u2018WGS84\u2019</li>    </ul>  </li>  <li>\u2018EPSG:4269\u2019</li>  <li>\u2018EPSG:3857\u2019, which has the following aliases    <ul>      <li>\u2018EPSG:3785\u2019</li>      <li>\u2018GOOGLE\u2019</li>      <li>\u2018EPSG:900913\u2019</li>      <li>\u2018EPSG:102113\u2019</li>    </ul>  </li></ul><p>Defined projections can also be accessed through the proj4.defs function (<code class=\"language-plaintext highlighter-rouge\">proj4.defs('EPSG:4326')</code>).</p><p>proj4.defs can also be used to define a named alias:</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">proj4</span><span class=\"p\">.</span><span class=\"nx\">defs</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">urn:x-ogc:def:crs:EPSG:4326</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">proj4</span><span class=\"p\">.</span><span class=\"nx\">defs</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">EPSG:4326</span><span class=\"dl\">'</span><span class=\"p\">));</span></code></pre></div></div><h2 id=\"axis-order\">Axis order</h2><p>By default, proj4 uses <code class=\"language-plaintext highlighter-rouge\">[x,y]</code> axis order for projected (cartesian) coordinate systems and <code class=\"language-plaintext highlighter-rouge\">[x=longitude,y=latitude]</code> for geographic coordinates. To enforce the axis order of the provided proj or wkt string, use the</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">proj4</span><span class=\"p\">(</span><span class=\"nx\">fromProjection</span><span class=\"p\">,</span> <span class=\"nx\">toProjection</span><span class=\"p\">).</span><span class=\"nx\">forward</span><span class=\"p\">(</span><span class=\"nx\">coordinate</span><span class=\"p\">,</span> <span class=\"nx\">enforceAxis</span><span class=\"p\">);</span><span class=\"nx\">proj4</span><span class=\"p\">(</span><span class=\"nx\">fromProjection</span><span class=\"p\">,</span> <span class=\"nx\">toProjection</span><span class=\"p\">).</span><span class=\"nx\">inverse</span><span class=\"p\">(</span><span class=\"nx\">coordinate</span><span class=\"p\">,</span> <span class=\"nx\">enforceAxis</span><span class=\"p\">);</span></code></pre></div></div><p>signatures with <code class=\"language-plaintext highlighter-rouge\">enforceAxis</code> set to <code class=\"language-plaintext highlighter-rouge\">true</code>:</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">proj4</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">+proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees +axis=neu</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">firstProjection</span><span class=\"p\">).</span><span class=\"nx\">forward</span><span class=\"p\">([</span><span class=\"mi\">41</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">71</span><span class=\"p\">],</span> <span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"c1\">// [242075.00535055372, 750123.32090043]</span><span class=\"nx\">proj4</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">+proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees +axis=neu</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">firstProjection</span><span class=\"p\">).</span><span class=\"nx\">inverse</span><span class=\"p\">([</span><span class=\"mf\">242075.00535055372</span><span class=\"p\">,</span> <span class=\"mf\">750123.32090043</span><span class=\"p\">],</span> <span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"c1\">//[40.99999999999986, -71]</span><span class=\"c1\">//the floating points to answer your question</span></code></pre></div></div><h2 id=\"grid-based-datum-adjustments\">Grid Based Datum Adjustments</h2><p>To use <code class=\"language-plaintext highlighter-rouge\">+nadgrids=</code> in a proj definition, first read your NTv2 <code class=\"language-plaintext highlighter-rouge\">.gsb</code> file (e.g. from https://github.com/OSGeo/proj-datumgrid) into an ArrayBuffer, then pass it to <code class=\"language-plaintext highlighter-rouge\">proj4.nadgrid</code>. E.g:</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">const</span> <span class=\"nx\">buffer</span> <span class=\"o\">=</span> <span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nx\">readFileSync</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">ntv2.gsb</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">buffer</span><span class=\"nx\">proj4</span><span class=\"p\">.</span><span class=\"nx\">nadgrid</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">key</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">buffer</span><span class=\"p\">);</span></code></pre></div></div><p>then use the given key in your definition, e.g. <code class=\"language-plaintext highlighter-rouge\">+nadgrids=@key,null</code>. See <a href=\"https://proj.org/usage/transformation.html?highlight=nadgrids#grid-based-datum-adjustments\">Grid Based Datum Adjustments</a>.</p><h2 id=\"typescript\">TypeScript</h2><p>TypeScript implementation was added to the <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped\">DefinitelyTyped repository</a>.</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>npm <span class=\"nb\">install</span> <span class=\"nt\">--save</span> @types/proj4</code></pre></div></div><h2 id=\"developing\">Developing</h2><p>To set up build tools make sure you have node and grunt-cli installed and then run <code class=\"language-plaintext highlighter-rouge\">npm install</code>.</p><p>To do the complete build and browser tests run:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>node_modules/.bin/grunt</code></pre></div></div><p>To run node tests run:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>npm <span class=\"nb\">test</span></code></pre></div></div><p>To run node tests with coverage run:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>npm <span class=\"nb\">test</span> <span class=\"nt\">--coverage</span></code></pre></div></div><p>To create a build with only default projections (latlon and Mercator) run:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>node_modules/.bin/grunt build</code></pre></div></div><p>To create a build with only custom projections include a comma separated list of projections codes (the file name in \u2018lib/projections\u2019 without the \u2018.js\u2019) after a colon, e.g.:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>node_modules/.bin/grunt build:tmerc<span class=\"c\">#includes transverse Mercator</span>node_modules/.bin/grunt build:lcc<span class=\"c\">#includes lambert conformal conic</span>node_modules/.bin/grunt build:omerc,moll<span class=\"c\">#includes oblique Mercator and Mollweide</span></code></pre></div></div>        </section>        <footer>                  Proj4js is maintained by <a href=\"https://github.com/proj4js\">proj4js</a><br>                  This page was generated by <a href=\"https://pages.github.com\">GitHub Pages</a>.        </footer>      </div>    </div>  </body></html>",
  "embeddings": []
}
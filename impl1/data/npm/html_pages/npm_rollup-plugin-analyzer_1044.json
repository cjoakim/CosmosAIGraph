{
  "libtype": "npm",
  "libname": "rollup-plugin-analyzer",
  "url": "http://rollup-plugin-analyzer.doesdev.com/",
  "html": "<!DOCTYPE html><html lang=\"en-US\">  <head>    <meta charset='utf-8'>    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <link rel=\"stylesheet\" href=\"/assets/css/style.css?v=0cbf5d0df632a7a15d0d47d2a935f7246c282a89\">    <!-- start custom head snippets, customize with your own _includes/head-custom.html file --><!-- Setup theme-color --><!-- start theme color meta headers --><meta name=\"theme-color\" content=\"#151515\"><meta name=\"msapplication-navbutton-color\" content=\"#151515\"><meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\"><!-- end theme color meta headers --><!-- Setup Google Analytics --><!-- You can set your favicon here --><!-- link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico\" --><!-- end custom head snippets --><!-- Begin Jekyll SEO tag v2.8.0 --><title>rollup-plugin-analyzer | Mad metrics for your rollup bundles, know all the things</title><meta name=\"generator\" content=\"Jekyll v3.9.3\" /><meta property=\"og:title\" content=\"rollup-plugin-analyzer\" /><meta property=\"og:locale\" content=\"en_US\" /><meta name=\"description\" content=\"Mad metrics for your rollup bundles, know all the things\" /><meta property=\"og:description\" content=\"Mad metrics for your rollup bundles, know all the things\" /><link rel=\"canonical\" href=\"http://rollup-plugin-analyzer.doesdev.com/\" /><meta property=\"og:url\" content=\"http://rollup-plugin-analyzer.doesdev.com/\" /><meta property=\"og:site_name\" content=\"rollup-plugin-analyzer\" /><meta property=\"og:type\" content=\"website\" /><meta name=\"twitter:card\" content=\"summary\" /><meta property=\"twitter:title\" content=\"rollup-plugin-analyzer\" /><script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"WebSite\",\"description\":\"Mad metrics for your rollup bundles, know all the things\",\"headline\":\"rollup-plugin-analyzer\",\"name\":\"rollup-plugin-analyzer\",\"url\":\"http://rollup-plugin-analyzer.doesdev.com/\"}</script><!-- End Jekyll SEO tag -->  </head>  <body>    <header>      <div class=\"container\">        <a id=\"a-title\" href=\"/\">          <h1>rollup-plugin-analyzer</h1>        </a>        <h2>Mad metrics for your rollup bundles, know all the things</h2>        <section id=\"downloads\">                    <a href=\"https://github.com/doesdev/rollup-plugin-analyzer\" class=\"btn btn-github\"><span class=\"icon\"></span>View on GitHub</a>        </section>      </div>    </header>    <div class=\"container\">      <section id=\"main_content\">        <p><a href=\"https://vshymanskyy.github.io/StandWithUkraine\"><img src=\"https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg\" alt=\"SWUbanner\" /></a></p><h1 id=\"rollup-plugin-analyzer\">rollup-plugin-analyzer</h1><blockquote>  <p>Mad metrics for your rollup bundles, know all the things</p></blockquote><p><a href=\"https://npmjs.org/package/rollup-plugin-analyzer\"><img src=\"https://img.shields.io/npm/v/rollup-plugin-analyzer?style=for-the-badge\" alt=\"npm\" /></a>   <a href=\"https://travis-ci.com/doesdev/rollup-plugin-analyzer\"><img src=\"https://img.shields.io/travis/com/doesdev/rollup-plugin-analyzer?style=for-the-badge\" alt=\"Travis (.com)\" /></a>   <a href=\"https://github.com/doesdev/rollup-plugin-analyzer/network/dependents\"><img src=\"https://img.shields.io/librariesio/dependents/npm/rollup-plugin-analyzer?style=for-the-badge\" alt=\"Dependents (via libraries.io)\" /></a>   <a href=\"https://npmcharts.com/compare/rollup-plugin-analyzer?minimal=true&amp;interval=7\"><img src=\"https://img.shields.io/npm/dm/rollup-plugin-analyzer?style=for-the-badge\" alt=\"npm\" /></a></p><h2 id=\"toc\">TOC</h2><ul>  <li><a href=\"#install\">Install</a></li>  <li><a href=\"#usage\">Usage</a>    <ul>      <li><a href=\"#importing-or-requiring\">Importing or Requiring</a>        <ul>          <li><a href=\"#import-as-es-module\">Import as ES Module</a></li>          <li><a href=\"#requiring-as-cjs\">Requiring as CJS</a></li>        </ul>      </li>      <li><a href=\"#usage-from-rollup-config\">Usage from rollup config</a></li>      <li><a href=\"#usage-from-build-script\">Usage from build script</a></li>      <li><a href=\"#ci-usage-example\">CI usage example</a></li>      <li><a href=\"#results\">Example results</a></li>      <li><a href=\"#results--with--summaryonly--enabled-\">Example results (with <code class=\"language-plaintext highlighter-rouge\">summaryOnly</code> enabled)</a></li>    </ul>  </li>  <li><a href=\"#options\">Options</a></li>  <li><a href=\"#faq\">FAQ</a></li>  <li><a href=\"#license\">License</a></li></ul><h2 id=\"install\">Install</h2><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>npm <span class=\"nb\">install</span> <span class=\"nt\">--save-dev</span> rollup-plugin-analyzer</code></pre></div></div><h2 id=\"usage\">Usage</h2><h3 id=\"importing-or-requiring\">Importing or Requiring</h3><h4 id=\"import-as-es-module\">Import as ES Module</h4><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"nx\">analyze</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">rollup-plugin-analyzer</span><span class=\"dl\">'</span></code></pre></div></div><h4 id=\"requiring-as-cjs\">Requiring as CJS</h4><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">const</span> <span class=\"nx\">analyze</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">rollup-plugin-analyzer</span><span class=\"dl\">'</span><span class=\"p\">)</span></code></pre></div></div><h3 id=\"usage-from-rollup-config\">Usage from rollup config</h3><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"p\">{</span>  <span class=\"na\">entry</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">module.js</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"na\">dest</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">index.js</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"na\">format</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">cjs</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nx\">analyze</span><span class=\"p\">()]</span><span class=\"p\">}</span></code></pre></div></div><h3 id=\"usage-from-build-script\">Usage from build script</h3><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">rollup</span><span class=\"p\">({</span>  <span class=\"na\">entry</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">main.js</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nx\">analyze</span><span class=\"p\">()]</span><span class=\"p\">}).</span><span class=\"nx\">then</span><span class=\"p\">(...)</span></code></pre></div></div><h3 id=\"ci-usage-example\">CI usage example</h3><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">const</span> <span class=\"nx\">limitBytes</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"nx\">e6</span><span class=\"kd\">const</span> <span class=\"nx\">onAnalysis</span> <span class=\"o\">=</span> <span class=\"p\">({</span> <span class=\"nx\">bundleSize</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">bundleSize</span> <span class=\"o\">&lt;</span> <span class=\"nx\">limitBytes</span><span class=\"p\">)</span> <span class=\"k\">return</span>  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`Bundle size exceeds </span><span class=\"p\">${</span><span class=\"nx\">limitBytes</span><span class=\"p\">}</span><span class=\"s2\"> bytes: </span><span class=\"p\">${</span><span class=\"nx\">bundleSize</span><span class=\"p\">}</span><span class=\"s2\"> bytes`</span><span class=\"p\">)</span>  <span class=\"k\">return</span> <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"p\">}</span><span class=\"nx\">rollup</span><span class=\"p\">({</span>  <span class=\"na\">entry</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">main.js</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nx\">analyze</span><span class=\"p\">({</span> <span class=\"nx\">onAnalysis</span><span class=\"p\">,</span> <span class=\"na\">skipFormatted</span><span class=\"p\">:</span> <span class=\"kc\">true</span> <span class=\"p\">})]</span><span class=\"p\">}).</span><span class=\"nx\">then</span><span class=\"p\">(...)</span></code></pre></div></div><h3 id=\"results\">results</h3><p>logged to console on rollup completion</p><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">-----------------------------</span>Rollup File Analysis<span class=\"nt\">-----------------------------</span>bundle size:    2.809 KBoriginal size:  11.436 KBcode reduction: 75.44 %module count:   5\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591file:            /virtual-insanity.jsbundle space:    90.64 %rendered size:   2.546 KBoriginal size:   2.57 KBcode reduction:  0.93 %dependents:      1  - /jamiroquai.js\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591file:            /bundle-a.jsbundle space:    4.27 %rendered size:   120 Bytesoriginal size:   309 Bytescode reduction:  61.17 %dependents:      0\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591file:            /jamiroquai.jsbundle space:    2.95 %rendered size:   83 Bytesoriginal size:   169 Bytescode reduction:  50.89 %dependents:      1  - /the-alphabet-but-incomplete.js...</code></pre></div></div><h3 id=\"results-with-summaryonly-enabled\">results (with <code class=\"language-plaintext highlighter-rouge\">summaryOnly</code> enabled)</h3><div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">-----------------------------</span>Rollup File Analysis<span class=\"nt\">-----------------------------</span>bundle size:    2.809 KBoriginal size:  11.436 KBcode reduction: 75.44 %module count:   5/virtual-insanity.js\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591 90.64 % <span class=\"o\">(</span>2.546 KB<span class=\"o\">)</span>/bundle-a.js\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 4.27 % <span class=\"o\">(</span>120 Bytes<span class=\"o\">)</span>/jamiroquai.js\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 2.95 % <span class=\"o\">(</span>83 Bytes<span class=\"o\">)</span>/the-alphabet-but-incomplete.js\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 1.17 % <span class=\"o\">(</span>33 Bytes<span class=\"o\">)</span>/the-declaration-of-independence.js\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 0.96 % <span class=\"o\">(</span>27 Bytes<span class=\"o\">)</span></code></pre></div></div><h2 id=\"options\">Options</h2><ul>  <li><strong>stdout</strong> - <em>optional</em>    <ul>      <li>type: Boolean</li>      <li>default: <code class=\"language-plaintext highlighter-rouge\">false</code></li>      <li>description: Print to stdout (console.log) instead of stderr (console.error)</li>    </ul>  </li>  <li><strong>limit</strong> - <em>optional</em>    <ul>      <li>type: Number</li>      <li>default: <code class=\"language-plaintext highlighter-rouge\">null</code></li>      <li>description: Limit number of files to output analysis of, sorted by DESC size</li>    </ul>  </li>  <li><strong>filter</strong> - <em>optional</em>    <ul>      <li>        <table>          <tbody>            <tr>              <td>type: Array</td>              <td>String</td>              <td>Function</td>            </tr>          </tbody>        </table>      </li>      <li>default: <code class=\"language-plaintext highlighter-rouge\">null</code></li>      <li>description: Filter module to output in analysis results.        <ul>          <li>If a string is passed, checks if module name contains the string</li>          <li>If array it checks the same for each string in the array</li>          <li>If function, return a boolean to indicate if a module should be in analysis results</li>          <li>This only suppresses the modules details, it does not affect the summary output</li>          <li>If you would like it to filter from summary info as well set <code class=\"language-plaintext highlighter-rouge\">filterSummary</code> to <code class=\"language-plaintext highlighter-rouge\">true</code></li>        </ul>      </li>      <li>notes: Function receives <code class=\"language-plaintext highlighter-rouge\">module</code> object specified below, should return boolean</li>    </ul>  </li>  <li><strong>filterSummary</strong> - <em>optional</em>    <ul>      <li>type: Boolean</li>      <li>default: <code class=\"language-plaintext highlighter-rouge\">false</code></li>      <li>description: If <code class=\"language-plaintext highlighter-rouge\">true</code> the <code class=\"language-plaintext highlighter-rouge\">filter</code> and <code class=\"language-plaintext highlighter-rouge\">limit</code> options will also remove any filtered out module data from the summary</li>    </ul>  </li>  <li><strong>root</strong> - <em>optional</em>    <ul>      <li>type: String</li>      <li>default: <code class=\"language-plaintext highlighter-rouge\">process.cwd()</code></li>      <li>description: Application directory, used to display file paths relatively</li>    </ul>  </li>  <li><strong>hideDeps</strong> - <em>optional</em>    <ul>      <li>type: Boolean</li>      <li>default: <code class=\"language-plaintext highlighter-rouge\">false</code></li>      <li>description: Don\u2019t itemize dependents in the formatted output</li>    </ul>  </li>  <li><strong>showExports</strong> - <em>optional</em>    <ul>      <li>type: Boolean</li>      <li>default: <code class=\"language-plaintext highlighter-rouge\">false</code></li>      <li>description: Show used and unused exports</li>    </ul>  </li>  <li><strong>summaryOnly</strong> - <em>optional</em>    <ul>      <li>type: Boolean</li>      <li>default: <code class=\"language-plaintext highlighter-rouge\">false</code></li>      <li>description: Only output bundle summary and module usage bar graphs</li>    </ul>  </li>  <li><strong>skipFormatted</strong> - <em>optional</em>    <ul>      <li>type: Boolean</li>      <li>default: <code class=\"language-plaintext highlighter-rouge\">false</code></li>      <li>description: Don\u2019t output formatted string</li>    </ul>  </li>  <li><strong>writeTo</strong> - <em>optional</em>    <ul>      <li>type: Function</li>      <li>default: <code class=\"language-plaintext highlighter-rouge\">null</code></li>      <li>description: Callback to be invoked with formatted string</li>      <li>function will be invoked with:        <ul>          <li><strong>analysisString</strong> <em>(String)</em></li>        </ul>      </li>    </ul>  </li>  <li><strong>transformModuleId</strong> - <em>optional</em>    <ul>      <li>type: Function</li>      <li>default: <code class=\"language-plaintext highlighter-rouge\">null</code></li>      <li>description: Modify module ids</li>      <li>function will be invoked with:        <ul>          <li><strong>id</strong> <em>(String)</em> - path of module / rollup module id</li>        </ul>      </li>      <li>function should return:        <ul>          <li><strong>id</strong> <em>(String)</em> - desired final module id to display in analysis results</li>        </ul>      </li>      <li>example: <code class=\"language-plaintext highlighter-rouge\">(id) =&gt; id.replace(/^\\0(?:commonjs-proxy:)?/, '')</code></li>    </ul>  </li>  <li><strong>onAnalysis</strong> - <em>optional</em>    <ul>      <li>type: Function</li>      <li>default: <code class=\"language-plaintext highlighter-rouge\">null</code></li>      <li>description: Callback to be invoked with analysis object</li>      <li>function will be invoked with:        <ul>          <li><strong>analysisObject</strong> <em>(Object)</em>            <ul>              <li><strong>bundleSize</strong> <em>(Number)</em> - rendered bundle size in bytes</li>              <li><strong>bundleOrigSize</strong> <em>(Number)</em> - original bundle size in bytes</li>              <li><strong>bundleReduction</strong> <em>(Number)</em> - percentage of rendered bundle size reduction</li>              <li><strong>moduleCount</strong> <em>(Number)</em> - Count of all included modules</li>              <li><strong>modules</strong> <em>(Array)</em> - array of <code class=\"language-plaintext highlighter-rouge\">module</code> analysis objects                <ul>                  <li><strong>module</strong> <em>(Object)</em>                    <ul>                      <li><strong>id</strong> <em>(String)</em> - path of module / rollup module id</li>                      <li><strong>size</strong> <em>(Number)</em> - size of rendered module code in bytes</li>                      <li><strong>origSize</strong> <em>(Number)</em> - size of module\u2019s original code in bytes</li>                      <li><strong>dependents</strong> <em>(Array)</em> - list of dependent module ids / paths</li>                      <li><strong>percent</strong> <em>(Number)</em> - percentage of module size relative to entire bundle</li>                      <li><strong>reduction</strong> <em>(Number)</em> - percentage of rendered size reduction</li>                      <li><strong>renderedExports</strong> <em>(Array)</em> - list of used named exports</li>                      <li><strong>removedExports</strong> <em>(Array)</em> - list of unused named exports</li>                    </ul>                  </li>                </ul>              </li>            </ul>          </li>        </ul>      </li>    </ul>  </li></ul><h2 id=\"faq\">FAQ</h2><h4 id=\"why-is-the-reported-size-not-the-same-as-the-file-on-disk\">Why is the reported size not the same as the file on disk?</h4><p>This module is geared towards the details of the individual modules that make up the bundle and their relative impact to bundle size. That\u2019s a detailed way of saying, it doesn\u2019t really care about size on disk. There are other options which focus on size on disk as well as delivery size which can be used alongside this module (or in place of if your concern is not per module impact). In particular <a href=\"https://github.com/TrySound/rollup-plugin-size-snapshot\">rollup-plugin-size-snapshot</a> seems like a great option for that.</p><p>Getting a bit further into the details, rather than just intent, of why the reported size differs from that on disk. We get the module data from Rollup which reports it after chunk (module) resolution and tree-shaking, but before post-processing (such as minification and compression). We then add the sizes of each of those modules together, this is the <code class=\"language-plaintext highlighter-rouge\">bundle size</code> that we report.</p><p>That means it won\u2019t account for post-processing from other plugins and also won\u2019t account for post-processing by Rollup itself, which includes boilerplate / shims depending on what the output format is (CJS, ESM, iife, etc\u2026).</p><h4 id=\"why-am-i-seeing-multiple-analysis-outputs-emitted\">Why am I seeing multiple analysis outputs emitted?</h4><p>Rollup allows you to output to multiple files. If you are outputting to multiple files you will get a distinct analysis for each output file. Each analysis will contain data on the files imported by the respective target.</p><p>One way to manipulate the number of reports in this scenario is through the <code class=\"language-plaintext highlighter-rouge\">onAnalysis</code> callback option:</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// Track iterations over output files</span><span class=\"kd\">let</span> <span class=\"nx\">analyzePluginIterations</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"p\">{</span>  <span class=\"na\">input</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">myIsomorphicModule.js</span><span class=\"dl\">'</span><span class=\"p\">,</span>  <span class=\"na\">output</span><span class=\"p\">:</span> <span class=\"p\">[</span>    <span class=\"p\">{</span>      <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">myIsomorphicModule</span><span class=\"dl\">'</span><span class=\"p\">,</span>      <span class=\"na\">format</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">cjs</span><span class=\"dl\">'</span><span class=\"p\">,</span>      <span class=\"na\">entryFileNames</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">[name].cjs</span><span class=\"dl\">'</span>    <span class=\"p\">},</span>    <span class=\"p\">{</span>      <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">myIsomorphicModule</span><span class=\"dl\">'</span><span class=\"p\">,</span>      <span class=\"na\">format</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">es</span><span class=\"dl\">'</span><span class=\"p\">,</span>      <span class=\"na\">entryFileNames</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">[name].mjs</span><span class=\"dl\">'</span>    <span class=\"p\">}</span>  <span class=\"p\">],</span>  <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>    <span class=\"nx\">analyze</span><span class=\"p\">({</span>      <span class=\"na\">onAnalysis</span><span class=\"p\">:</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">analyzePluginIterations</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>          <span class=\"k\">throw</span> <span class=\"dl\">''</span><span class=\"p\">;</span> <span class=\"c1\">// We only want reports on the first output</span>        <span class=\"p\">}</span>        <span class=\"nx\">analyzePluginIterations</span><span class=\"o\">++</span><span class=\"p\">;</span>      <span class=\"p\">}</span>    <span class=\"p\">})</span>  <span class=\"p\">]</span><span class=\"p\">}</span></code></pre></div></div><h2 id=\"license\">License</h2><p>MIT \u00a9 <a href=\"https://github.com/doesdev\">Andrew Carpenter</a></p>      </section>    </div>  </body></html>",
  "embeddings": []
}
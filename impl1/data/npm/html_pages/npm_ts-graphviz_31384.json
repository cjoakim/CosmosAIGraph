{
  "libtype": "npm",
  "libname": "ts-graphviz",
  "url": "https://ts-graphviz.github.io/ts-graphviz/",
  "html": "<!DOCTYPE html><html class=\"default\" lang=\"en\"><head><meta charSet=\"utf-8\"/><meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\"/><title>ts-graphviz</title><meta name=\"description\" content=\"Documentation for ts-graphviz\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><link rel=\"stylesheet\" href=\"assets/style.css\"/><link rel=\"stylesheet\" href=\"assets/highlight.css\"/><script defer src=\"assets/main.js\"></script><script async src=\"assets/search.js\" id=\"tsd-search-script\"></script><script async src=\"assets/navigation.js\" id=\"tsd-nav-script\"></script></head><body><script>document.documentElement.dataset.theme = localStorage.getItem(\"tsd-theme\") || \"os\"</script><header class=\"tsd-page-toolbar\"><div class=\"tsd-toolbar-contents container\"><div class=\"table-cell\" id=\"tsd-search\" data-base=\".\"><div class=\"field\"><label for=\"tsd-search-field\" class=\"tsd-widget tsd-toolbar-icon search no-caption\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><use href=\"#icon-search\"></use></svg></label><input type=\"text\" id=\"tsd-search-field\" aria-label=\"Search\"/></div><div class=\"field\"><div id=\"tsd-toolbar-links\"></div></div><ul class=\"results\"><li class=\"state loading\">Preparing search index...</li><li class=\"state failure\">The search index is not available</li></ul><a href=\"index.html\" class=\"title\">ts-graphviz</a></div><div class=\"table-cell\" id=\"tsd-widgets\"><a href=\"#\" class=\"tsd-widget tsd-toolbar-icon menu no-caption\" data-toggle=\"menu\" aria-label=\"Menu\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><use href=\"#icon-menu\"></use></svg></a></div></div></header><div class=\"container container-main\"><div class=\"col-content\"><div class=\"tsd-page-title\"><h2>ts-graphviz</h2></div><div class=\"tsd-panel tsd-typography\"><div align=\"center\"><p><a href=\"https://app.codacy.com/gh/ts-graphviz/ts-graphviz?utm_source=github.com&utm_medium=referral&utm_content=ts-graphviz/ts-graphviz&utm_campaign=Badge_Grade_Settings\"><img src=\"https://api.codacy.com/project/badge/Grade/d6485f9858ed4b3e8ef76611a2896bc4\" alt=\"Codacy Badge\"></a><a href=\"https://github.com/kamiazya/ts-graphviz/actions?workflow=NodeCI\"><img src=\"https://github.com/kamiazya/ts-graphviz/workflows/NodeCI/badge.svg\" alt=\"GitHub Action\"></a><a href=\"https://badge.fury.io/js/ts-graphviz\"><img src=\"https://badge.fury.io/js/ts-graphviz.svg\" alt=\"npm version\"></a><a href=\"https://opensource.org/licenses/MIT\"><img src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" alt=\"License: MIT\"></a><a href=\"http://makeapullrequest.com\"><img src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg\" alt=\"PRs Welcome\"></a></p><p><img src=\"https://img.shields.io/node/v/ts-graphviz\" alt=\"node version\"><a href=\"https://github.com/denoland/deno\"><img src=\"https://img.shields.io/badge/deno-%5E1.28.0-black?logo=deno\" alt=\"deno version\"></a><img src=\"https://img.shields.io/npm/dm/ts-graphviz\" alt=\"npm\"><a href=\"#md:contributors\"><img src=\"https://img.shields.io/github/all-contributors/ts-graphviz/ts-graphviz?color=orange\" alt=\"All Contributors\"></a><a href=\"https://tidelift.com/subscription/pkg/npm-ts-graphviz?utm_source=npm-ts-graphviz&utm_medium=readme\"><img src=\"https://tidelift.com/badges/package/npm/ts-graphviz?style=flat\" alt=\"Tidelift\"></a></p><a id=\"md:ts-graphviz\" class=\"tsd-anchor\"></a><h1><a href=\"#md:ts-graphviz\">ts-graphviz</a></h1><p><a href=\"https://graphviz.gitlab.io/\">Graphviz</a> library for TypeScript.</p><p>\ud83d\udd17</p><p><a href=\"https://github.com/ts-graphviz/ts-graphviz\"><img src=\"https://img.shields.io/badge/-GitHub-181717?logo=GitHub&style=flat\" alt=\"GitHub\"></a><a href=\"https://www.npmjs.com/package/ts-graphviz\"><img src=\"https://img.shields.io/badge/-npm-CB3837?logo=npm&style=flat\" alt=\"npm\"></a><a href=\"https://yarnpkg.com/package/ts-graphviz\"><img src=\"https://img.shields.io/badge/-yarn-ffffff?logo=Yarn&style=flat\" alt=\"yarn\"></a><a href=\"https://ts-graphviz.github.io/ts-graphviz/\"><img src=\"https://img.shields.io/badge/-Refarence-3178C6?logo=TypeScript&style=flat&logoColor=fff\" alt=\"Refarence\"></a><a href=\"https://github.com/sponsors/kamiazya\"><img src=\"https://img.shields.io/badge/-GitHub%20Suponser-fff?logo=GitHub%20Sponsors&style=flat\" alt=\"Suponser\"></a></p><p><a href=\"https://biomejs.dev/\"><img src=\"https://img.shields.io/badge/format%20with-Biome-F7B911?logo=biome&style=flat\" alt=\"format: Biome\"></a><a href=\"https://vitest.dev/\"><img src=\"https://img.shields.io/badge/tested%20with-Vitest-6E9F18?logo=vitest&style=flat\" alt=\"test: Vitest\"></a><a href=\"https://rollupjs.org/\"><img src=\"https://img.shields.io/badge/build%20with-Vite-646CFF?logo=vite&style=flat\" alt=\"build: Vite\"></a></p></div><hr><a id=\"md:key-features-\u2728\" class=\"tsd-anchor\"></a><h2><a href=\"#md:key-features-\u2728\">Key Features \u2728</a></h2><p><code>ts-graphviz</code> package provides models and ASTs for the Graphviz DOT language fully integrated with TypeScript.</p><ul><li><strong>TypeScript-friendly API</strong><ul><li>It provides models in the DOT language. TypeScript type definitions are also provided for attributes and even attribute types.</li></ul></li><li><strong>Freedom from programming paradigms</strong><ul><li>Designed to be object-oriented, it provides APIs that can be adapted to both imperative and declarative APIs. You can choose the paradigm that best fits your project.</li></ul></li><li><strong>Suitable for any use cases</strong><ul><li>Both a high-layer API to provide models and a low-layer API to handle ASTs are provided to address any use cases.</li></ul></li><li><strong>Modular and Extensible</strong><ul><li>The library is split into multiple packages, each serving a specific purpose. This modular design allows users to pick and choose the functionality they need, resulting in improved maintainability and flexibility.</li></ul></li><li><strong>Cross Platform</strong><ul><li>It supports both Node.js and Deno and Browser.</li></ul></li><li><strong>Customizable</strong><ul><li>It provides a way to extend the library&#39;s type system to customize graph visualization solutions to meet specific needs.</li></ul></li></ul><a id=\"md:installation-\ud83d\udcbd\" class=\"tsd-anchor\"></a><h2><a href=\"#md:installation-\ud83d\udcbd\">Installation \ud83d\udcbd</a></h2><a id=\"md:nodejs\" class=\"tsd-anchor\"></a><h3><a href=\"#md:nodejs\">Node.js</a></h3><p>This package can then be installed using a package manager.</p><pre><code class=\"language-bash\"><span class=\"hl-0\"># npm</span><br/><span class=\"hl-1\">$</span><span class=\"hl-2\"> </span><span class=\"hl-3\">npm</span><span class=\"hl-2\"> </span><span class=\"hl-3\">install</span><span class=\"hl-2\"> </span><span class=\"hl-4\">-S</span><span class=\"hl-2\"> </span><span class=\"hl-3\">ts-graphviz</span><br/><span class=\"hl-0\"># or yarn</span><br/><span class=\"hl-1\">$</span><span class=\"hl-2\"> </span><span class=\"hl-3\">yarn</span><span class=\"hl-2\"> </span><span class=\"hl-3\">add</span><span class=\"hl-2\"> </span><span class=\"hl-3\">ts-graphviz</span><br/><span class=\"hl-0\"># or pnpm</span><br/><span class=\"hl-1\">$</span><span class=\"hl-2\"> </span><span class=\"hl-3\">pnpm</span><span class=\"hl-2\"> </span><span class=\"hl-3\">add</span><span class=\"hl-2\"> </span><span class=\"hl-3\">ts-graphviz</span></code><button>Copy</button></pre><blockquote><p><strong>Note</strong> Want to try before installing? Check out <a href=\"https://npm.runkit.com/ts-graphviz\">Runkit</a> to see how it works.</p></blockquote><a id=\"md:deno-\ud83e\udd95\" class=\"tsd-anchor\"></a><h3><a href=\"#md:deno-\ud83e\udd95\">Deno \ud83e\udd95</a></h3><p><a href=\"https://deno.land/manual/node/npm_specifiers\">Deno v1.28 and above supports npm</a>.</p><p>You can install and use the package by specifying the following:</p><pre><code class=\"language-ts\"><span class=\"hl-5\">import</span><span class=\"hl-2\"> { </span><span class=\"hl-6\">toDot</span><span class=\"hl-2\"> } </span><span class=\"hl-5\">from</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;npm:ts-graphviz&#39;</span><span class=\"hl-2\">;</span></code><button>Copy</button></pre><a id=\"md:usage-\ud83d\udcd1\" class=\"tsd-anchor\"></a><h2><a href=\"#md:usage-\ud83d\udcd1\">Usage \ud83d\udcd1</a></h2><p>This section provides an overview of the package.</p><p>For more detailed API specifications, please refer to the comments in the TypeScript type definitions and the <a href=\"https://ts-graphviz.github.io/ts-graphviz/\">document</a> automatically generated based on them.</p><a id=\"md:ts-graphviz-module-\ud83d\udea9\" class=\"tsd-anchor\"></a><h3><a href=\"#md:ts-graphviz-module-\ud83d\udea9\"><code>ts-graphviz</code> Module \ud83d\udea9</a></h3><p>This module provides <strong>Model</strong>, an interface for working with the DOT language in JavaScript/TypeScript.</p><p><img src=\"./media/ts-graphviz.svg\" alt=\"ts-graphviz\"></p><a id=\"md:object-oriented-\u2764\ufe0f\" class=\"tsd-anchor\"></a><h4><a href=\"#md:object-oriented-\u2764\ufe0f\">Object-Oriented \u2764\ufe0f</a></h4><p><strong>Model</strong> is designed to be object-oriented and provides classes <code>Digraph</code>, <code>Graph</code>, <code>Subgraph</code>, <code>Node</code>, and <code>Edge</code>.</p><p>Provides a <code>toDot</code> function to convert <strong>Model</strong> to <strong>DOT</strong> (DOT language string).</p><pre><code class=\"language-typescript\"><span class=\"hl-5\">import</span><span class=\"hl-2\"> { </span><span class=\"hl-6\">attribute</span><span class=\"hl-2\"> </span><span class=\"hl-5\">as</span><span class=\"hl-2\"> </span><span class=\"hl-6\">_</span><span class=\"hl-2\">, </span><span class=\"hl-6\">Digraph</span><span class=\"hl-2\">, </span><span class=\"hl-6\">Subgraph</span><span class=\"hl-2\">, </span><span class=\"hl-6\">Node</span><span class=\"hl-2\">, </span><span class=\"hl-6\">Edge</span><span class=\"hl-2\">, </span><span class=\"hl-6\">toDot</span><span class=\"hl-2\"> } </span><span class=\"hl-5\">from</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;ts-graphviz&#39;</span><span class=\"hl-2\">;</span><br/><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">G</span><span class=\"hl-2\"> = </span><span class=\"hl-4\">new</span><span class=\"hl-2\"> </span><span class=\"hl-1\">Digraph</span><span class=\"hl-2\">();</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">A</span><span class=\"hl-2\"> = </span><span class=\"hl-4\">new</span><span class=\"hl-2\"> </span><span class=\"hl-1\">Subgraph</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;A&#39;</span><span class=\"hl-2\">);</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">node1</span><span class=\"hl-2\"> = </span><span class=\"hl-4\">new</span><span class=\"hl-2\"> </span><span class=\"hl-1\">Node</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;node1&#39;</span><span class=\"hl-2\">, {</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">[_.color]:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;red&#39;</span><br/><span class=\"hl-2\">});</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">node2</span><span class=\"hl-2\"> = </span><span class=\"hl-4\">new</span><span class=\"hl-2\"> </span><span class=\"hl-1\">Node</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;node2&#39;</span><span class=\"hl-2\">, {</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">[_.color]:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;blue&#39;</span><br/><span class=\"hl-2\">});</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">edge</span><span class=\"hl-2\"> = </span><span class=\"hl-4\">new</span><span class=\"hl-2\"> </span><span class=\"hl-1\">Edge</span><span class=\"hl-2\">([</span><span class=\"hl-6\">node1</span><span class=\"hl-2\">, </span><span class=\"hl-6\">node2</span><span class=\"hl-2\">], {</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">[_.label]:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;Edge Label&#39;</span><span class=\"hl-2\">,</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">[_.color]:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;pink&#39;</span><br/><span class=\"hl-2\">});</span><br/><span class=\"hl-7\">G</span><span class=\"hl-2\">.</span><span class=\"hl-1\">addSubgraph</span><span class=\"hl-2\">(</span><span class=\"hl-7\">A</span><span class=\"hl-2\">);</span><br/><span class=\"hl-7\">A</span><span class=\"hl-2\">.</span><span class=\"hl-1\">addNode</span><span class=\"hl-2\">(</span><span class=\"hl-6\">node1</span><span class=\"hl-2\">);</span><br/><span class=\"hl-7\">A</span><span class=\"hl-2\">.</span><span class=\"hl-1\">addNode</span><span class=\"hl-2\">(</span><span class=\"hl-6\">node2</span><span class=\"hl-2\">);</span><br/><span class=\"hl-7\">A</span><span class=\"hl-2\">.</span><span class=\"hl-1\">addEdge</span><span class=\"hl-2\">(</span><span class=\"hl-6\">edge</span><span class=\"hl-2\">);</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">dot</span><span class=\"hl-2\"> = </span><span class=\"hl-1\">toDot</span><span class=\"hl-2\">(</span><span class=\"hl-7\">G</span><span class=\"hl-2\">);</span><br/><span class=\"hl-0\">// digraph {</span><br/><span class=\"hl-0\">//   subgraph &quot;A&quot; {</span><br/><span class=\"hl-0\">//     &quot;node1&quot; [</span><br/><span class=\"hl-0\">//       color = &quot;red&quot;,</span><br/><span class=\"hl-0\">//     ];</span><br/><span class=\"hl-0\">//     &quot;node2&quot; [</span><br/><span class=\"hl-0\">//       color = &quot;blue&quot;,</span><br/><span class=\"hl-0\">//     ];</span><br/><span class=\"hl-0\">//     &quot;node1&quot; -&gt; &quot;node2&quot; [</span><br/><span class=\"hl-0\">//       label = &quot;Edge Label&quot;,</span><br/><span class=\"hl-0\">//       color = &quot;pink&quot;,</span><br/><span class=\"hl-0\">//     ];</span><br/><span class=\"hl-0\">//   }</span><br/><span class=\"hl-0\">// }</span></code><button>Copy</button></pre><details><summary>Advanced Usage</summary><a id=\"md:custom-class-\ud83e\udd16\" class=\"tsd-anchor\"></a><h5><a href=\"#md:custom-class-\ud83e\udd16\">Custom Class \ud83e\udd16</a></h5><p>You can also add your own implementation by inheriting from the class.</p><pre><code class=\"language-typescript\"><span class=\"hl-5\">import</span><span class=\"hl-2\"> { </span><span class=\"hl-6\">Digraph</span><span class=\"hl-2\">, </span><span class=\"hl-6\">Node</span><span class=\"hl-2\">, </span><span class=\"hl-6\">Edge</span><span class=\"hl-2\">, </span><span class=\"hl-6\">EdgeTargetTuple</span><span class=\"hl-2\">, </span><span class=\"hl-6\">attribute</span><span class=\"hl-2\"> </span><span class=\"hl-5\">as</span><span class=\"hl-2\"> </span><span class=\"hl-6\">_</span><span class=\"hl-2\">, </span><span class=\"hl-6\">toDot</span><span class=\"hl-2\"> } </span><span class=\"hl-5\">from</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;ts-graphviz&#39;</span><span class=\"hl-2\">;</span><br/><br/><span class=\"hl-4\">class</span><span class=\"hl-2\"> </span><span class=\"hl-8\">MyCustomDigraph</span><span class=\"hl-2\"> </span><span class=\"hl-4\">extends</span><span class=\"hl-2\"> </span><span class=\"hl-8\">Digraph</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">  </span><span class=\"hl-4\">constructor</span><span class=\"hl-2\">() {</span><br/><span class=\"hl-2\">    </span><span class=\"hl-4\">super</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;G&#39;</span><span class=\"hl-2\">, {</span><br/><span class=\"hl-2\">      </span><span class=\"hl-6\">[_.label]:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;This is Custom Digraph&#39;</span><span class=\"hl-2\">,</span><br/><span class=\"hl-2\">    });</span><br/><span class=\"hl-2\">  }</span><br/><span class=\"hl-2\">}</span><br/><span class=\"hl-4\">class</span><span class=\"hl-2\"> </span><span class=\"hl-8\">MyCustomNode</span><span class=\"hl-2\"> </span><span class=\"hl-4\">extends</span><span class=\"hl-2\"> </span><span class=\"hl-8\">Node</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">  </span><span class=\"hl-4\">constructor</span><span class=\"hl-2\">(</span><span class=\"hl-6\">id</span><span class=\"hl-2\">: </span><span class=\"hl-8\">string</span><span class=\"hl-2\">) {</span><br/><span class=\"hl-2\">    </span><span class=\"hl-4\">super</span><span class=\"hl-2\">(</span><span class=\"hl-3\">`node_</span><span class=\"hl-4\">${</span><span class=\"hl-6\">id</span><span class=\"hl-4\">}</span><span class=\"hl-3\">`</span><span class=\"hl-2\">, {</span><br/><span class=\"hl-2\">      </span><span class=\"hl-6\">[_.label]:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">`This is Custom Node </span><span class=\"hl-4\">${</span><span class=\"hl-6\">id</span><span class=\"hl-4\">}</span><span class=\"hl-3\">`</span><span class=\"hl-2\">,</span><br/><span class=\"hl-2\">    });</span><br/><span class=\"hl-2\">  }</span><br/><span class=\"hl-2\">}</span><br/><br/><span class=\"hl-4\">class</span><span class=\"hl-2\"> </span><span class=\"hl-8\">MyCustomEdge</span><span class=\"hl-2\"> </span><span class=\"hl-4\">extends</span><span class=\"hl-2\"> </span><span class=\"hl-8\">Edge</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">  </span><span class=\"hl-4\">constructor</span><span class=\"hl-2\">(</span><span class=\"hl-6\">targets</span><span class=\"hl-2\">: </span><span class=\"hl-8\">EdgeTargetTuple</span><span class=\"hl-2\">) {</span><br/><span class=\"hl-2\">    </span><span class=\"hl-4\">super</span><span class=\"hl-2\">(</span><span class=\"hl-6\">targets</span><span class=\"hl-2\">, {</span><br/><span class=\"hl-2\">      </span><span class=\"hl-6\">[_.label]:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;This is Custom Edge&#39;</span><span class=\"hl-2\">,</span><br/><span class=\"hl-2\">    });</span><br/><span class=\"hl-2\">  }</span><br/><span class=\"hl-2\">}</span><br/><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">digraph</span><span class=\"hl-2\"> = </span><span class=\"hl-4\">new</span><span class=\"hl-2\"> </span><span class=\"hl-1\">MyCustomDigraph</span><span class=\"hl-2\">();</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">node1</span><span class=\"hl-2\"> = </span><span class=\"hl-4\">new</span><span class=\"hl-2\"> </span><span class=\"hl-1\">MyCustomNode</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;A&#39;</span><span class=\"hl-2\">);</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">node2</span><span class=\"hl-2\"> = </span><span class=\"hl-4\">new</span><span class=\"hl-2\"> </span><span class=\"hl-1\">MyCustomNode</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;B&#39;</span><span class=\"hl-2\">);</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">edge</span><span class=\"hl-2\"> = </span><span class=\"hl-4\">new</span><span class=\"hl-2\"> </span><span class=\"hl-1\">MyCustomEdge</span><span class=\"hl-2\">([</span><span class=\"hl-6\">node1</span><span class=\"hl-2\">, </span><span class=\"hl-6\">node2</span><span class=\"hl-2\">]);</span><br/><span class=\"hl-6\">digraph</span><span class=\"hl-2\">.</span><span class=\"hl-1\">addNode</span><span class=\"hl-2\">(</span><span class=\"hl-6\">node1</span><span class=\"hl-2\">);</span><br/><span class=\"hl-6\">digraph</span><span class=\"hl-2\">.</span><span class=\"hl-1\">addNode</span><span class=\"hl-2\">(</span><span class=\"hl-6\">node2</span><span class=\"hl-2\">);</span><br/><span class=\"hl-6\">digraph</span><span class=\"hl-2\">.</span><span class=\"hl-1\">addEdge</span><span class=\"hl-2\">(</span><span class=\"hl-6\">edge</span><span class=\"hl-2\">);</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">dot</span><span class=\"hl-2\"> = </span><span class=\"hl-1\">toDot</span><span class=\"hl-2\">(</span><span class=\"hl-6\">digraph</span><span class=\"hl-2\">);</span><br/><span class=\"hl-0\">// digraph &quot;G&quot; {</span><br/><span class=\"hl-0\">//   label = &quot;This is Custom Digraph&quot;;</span><br/><span class=\"hl-0\">//   &quot;node_A&quot; [</span><br/><span class=\"hl-0\">//     label = &quot;This is Custom Node A&quot;;</span><br/><span class=\"hl-0\">//   ];</span><br/><span class=\"hl-0\">//   &quot;node_B&quot; [</span><br/><span class=\"hl-0\">//     label = &quot;This is Custom Node B&quot;;</span><br/><span class=\"hl-0\">//   ];</span><br/><span class=\"hl-0\">//   &quot;node_A&quot; -&gt; &quot;node_B&quot; [</span><br/><span class=\"hl-0\">//     label = &quot;This is Custom Edge&quot;;</span><br/><span class=\"hl-0\">//   ];</span><br/><span class=\"hl-0\">// }</span></code><button>Copy</button></pre><a id=\"md:models-context-api--with-method-\ud83e\uddc5\" class=\"tsd-anchor\"></a><h5><a href=\"#md:models-context-api--with-method-\ud83e\uddc5\">Models Context API ( <code>with</code> method) \ud83e\uddc5</a></h5><p>You can also use the <em>Models Context API</em> to create custom classes for objects generated inside of Graph.</p><p>The <code>with</code> methods of <code>Digraph</code>, <code>Graph</code>, and <code>Subgraph</code>, which are implementations of <code>GraphBaseModel</code>, are provided to predefine custom models.</p><pre><code class=\"language-typescript\"><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">g</span><span class=\"hl-2\"> = </span><span class=\"hl-4\">new</span><span class=\"hl-2\"> </span><span class=\"hl-1\">Digraph</span><span class=\"hl-2\">();</span><br/><span class=\"hl-6\">g</span><span class=\"hl-2\">.</span><span class=\"hl-1\">with</span><span class=\"hl-2\">({</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">Node:</span><span class=\"hl-2\"> </span><span class=\"hl-6\">MyCustomNode</span><span class=\"hl-2\">,</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">Edge:</span><span class=\"hl-2\"> </span><span class=\"hl-6\">MyCustomEdge</span><span class=\"hl-2\">,</span><br/><span class=\"hl-2\">});</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">a</span><span class=\"hl-2\"> = </span><span class=\"hl-6\">g</span><span class=\"hl-2\">.</span><span class=\"hl-1\">createNode</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;A&#39;</span><span class=\"hl-2\">); </span><span class=\"hl-0\">// MyCustomNode</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">b</span><span class=\"hl-2\"> = </span><span class=\"hl-6\">g</span><span class=\"hl-2\">.</span><span class=\"hl-1\">createNode</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;B&#39;</span><span class=\"hl-2\">); </span><span class=\"hl-0\">// MyCustomNode</span><br/><span class=\"hl-6\">g</span><span class=\"hl-2\">.</span><span class=\"hl-1\">createEdge</span><span class=\"hl-2\">([</span><span class=\"hl-6\">a</span><span class=\"hl-2\">, </span><span class=\"hl-6\">b</span><span class=\"hl-2\">]); </span><span class=\"hl-0\">// MyCustomEdge</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">dot</span><span class=\"hl-2\"> = </span><span class=\"hl-1\">toDot</span><span class=\"hl-2\">(</span><span class=\"hl-6\">g</span><span class=\"hl-2\">);</span><br/><span class=\"hl-0\">// digraph {</span><br/><span class=\"hl-0\">//   &quot;node_A&quot; [</span><br/><span class=\"hl-0\">//     label = &quot;This is Custom Node A&quot;;</span><br/><span class=\"hl-0\">//   ];</span><br/><span class=\"hl-0\">//   &quot;node_B&quot; [</span><br/><span class=\"hl-0\">//     label = &quot;This is Custom Node B&quot;;</span><br/><span class=\"hl-0\">//   ];</span><br/><span class=\"hl-0\">//   &quot;node_A&quot; -&gt; &quot;node_B&quot; [</span><br/><span class=\"hl-0\">//     label = &quot;This is Custom Edge&quot;;</span><br/><span class=\"hl-0\">//   ];</span><br/><span class=\"hl-0\">// }</span></code><button>Copy</button></pre><a id=\"md:fromdot-function-\u23ea\" class=\"tsd-anchor\"></a><h5><a href=\"#md:fromdot-function-\u23ea\"><code>fromDot</code> function \u23ea</a></h5><blockquote><p>The status of this function is ! <a href=\"https://img.shields.io/badge/-beta-orange\">beta</a>.</p></blockquote><p>The main scenario for using this library is to use the <code>toDot</code> function, but it also supports conversions in the reverse direction.</p><p>By converting <strong>DOT</strong> to <strong>Model</strong>, a portion of the code can be written in the DOT language.</p><pre><code class=\"language-typescript\"><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">G</span><span class=\"hl-2\"> = </span><span class=\"hl-1\">fromDot</span><span class=\"hl-2\">(</span><br/><span class=\"hl-2\">  </span><span class=\"hl-3\">`digraph {</span><br/><span class=\"hl-3\">    node_A [</span><br/><span class=\"hl-3\">      label = &quot;This is a Label of Node A&quot;;</span><br/><span class=\"hl-3\">    ];</span><br/><span class=\"hl-3\">  }`</span><span class=\"hl-2\">,</span><br/><span class=\"hl-2\">);</span><br/><br/><span class=\"hl-7\">G</span><span class=\"hl-2\">.</span><span class=\"hl-1\">edge</span><span class=\"hl-2\">([</span><span class=\"hl-3\">&#39;node_A&#39;</span><span class=\"hl-2\">, </span><span class=\"hl-3\">&#39;node_B&#39;</span><span class=\"hl-2\">]);</span><br/><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">dot</span><span class=\"hl-2\"> = </span><span class=\"hl-1\">toDot</span><span class=\"hl-2\">(</span><span class=\"hl-7\">G</span><span class=\"hl-2\">)</span><br/><span class=\"hl-0\">// digraph {</span><br/><span class=\"hl-0\">//   &quot;node_A&quot; [</span><br/><span class=\"hl-0\">//     label = &quot;This is a Label of Node A&quot;;</span><br/><span class=\"hl-0\">//   ];</span><br/><span class=\"hl-0\">//   &quot;node_A&quot; -&gt; &quot;node_B&quot;;</span><br/><span class=\"hl-0\">// }</span></code><button>Copy</button></pre></details><a id=\"md:declarative-api-\ud83d\ude0e\" class=\"tsd-anchor\"></a><h4><a href=\"#md:declarative-api-\ud83d\ude0e\">Declarative API \ud83d\ude0e</a></h4><p>When creating <code>Graph</code> or <code>Digraph</code>, you can use <em>Model Factory</em> to provide a notation more similar to the <strong>DOT</strong> language.</p><p><strong>Model</strong> also has a declarative API, so you can consistently choose a declarative paradigm.</p><pre><code class=\"language-typescript\"><span class=\"hl-5\">import</span><span class=\"hl-2\"> { </span><span class=\"hl-6\">attribute</span><span class=\"hl-2\"> </span><span class=\"hl-5\">as</span><span class=\"hl-2\"> </span><span class=\"hl-6\">_</span><span class=\"hl-2\">, </span><span class=\"hl-6\">digraph</span><span class=\"hl-2\">, </span><span class=\"hl-6\">toDot</span><span class=\"hl-2\"> } </span><span class=\"hl-5\">from</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;ts-graphviz&#39;</span><span class=\"hl-2\">;</span><br/><br/><span class=\"hl-2\"> </span><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">G</span><span class=\"hl-2\"> = </span><span class=\"hl-1\">digraph</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;G&#39;</span><span class=\"hl-2\">, (</span><span class=\"hl-6\">g</span><span class=\"hl-2\">) </span><span class=\"hl-4\">=&gt;</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">  </span><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">a</span><span class=\"hl-2\"> = </span><span class=\"hl-6\">g</span><span class=\"hl-2\">.</span><span class=\"hl-1\">node</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;aa&#39;</span><span class=\"hl-2\">);</span><br/><span class=\"hl-2\">  </span><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">b</span><span class=\"hl-2\"> = </span><span class=\"hl-6\">g</span><span class=\"hl-2\">.</span><span class=\"hl-1\">node</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;bb&#39;</span><span class=\"hl-2\">);</span><br/><span class=\"hl-2\">  </span><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">c</span><span class=\"hl-2\"> = </span><span class=\"hl-6\">g</span><span class=\"hl-2\">.</span><span class=\"hl-1\">node</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;cc&#39;</span><span class=\"hl-2\">);</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">g</span><span class=\"hl-2\">.</span><span class=\"hl-1\">edge</span><span class=\"hl-2\">([</span><span class=\"hl-6\">a</span><span class=\"hl-2\">, </span><span class=\"hl-6\">b</span><span class=\"hl-2\">, </span><span class=\"hl-6\">c</span><span class=\"hl-2\">], {</span><br/><span class=\"hl-2\">    </span><span class=\"hl-6\">[_.color]:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;red&#39;</span><br/><span class=\"hl-2\">  });</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">g</span><span class=\"hl-2\">.</span><span class=\"hl-1\">subgraph</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;A&#39;</span><span class=\"hl-2\">, (</span><span class=\"hl-6\">A</span><span class=\"hl-2\">) </span><span class=\"hl-4\">=&gt;</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">    </span><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">Aa</span><span class=\"hl-2\"> = </span><span class=\"hl-7\">A</span><span class=\"hl-2\">.</span><span class=\"hl-1\">node</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;Aaa&#39;</span><span class=\"hl-2\">, {</span><br/><span class=\"hl-2\">      </span><span class=\"hl-6\">[_.color]:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;pink&#39;</span><br/><span class=\"hl-2\">    });</span><br/><br/><span class=\"hl-2\">    </span><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">Ab</span><span class=\"hl-2\"> = </span><span class=\"hl-7\">A</span><span class=\"hl-2\">.</span><span class=\"hl-1\">node</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;Abb&#39;</span><span class=\"hl-2\">, {</span><br/><span class=\"hl-2\">      </span><span class=\"hl-6\">[_.color]:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;violet&#39;</span><br/><span class=\"hl-2\">    });</span><br/><span class=\"hl-2\">    </span><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">Ac</span><span class=\"hl-2\"> = </span><span class=\"hl-7\">A</span><span class=\"hl-2\">.</span><span class=\"hl-1\">node</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;Acc&#39;</span><span class=\"hl-2\">);</span><br/><span class=\"hl-2\">    </span><span class=\"hl-7\">A</span><span class=\"hl-2\">.</span><span class=\"hl-1\">edge</span><span class=\"hl-2\">([</span><span class=\"hl-6\">Aa</span><span class=\"hl-2\">.</span><span class=\"hl-1\">port</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;a&#39;</span><span class=\"hl-2\">), </span><span class=\"hl-6\">Ab</span><span class=\"hl-2\">, </span><span class=\"hl-6\">Ac</span><span class=\"hl-2\">, </span><span class=\"hl-3\">&#39;E&#39;</span><span class=\"hl-2\">], {</span><br/><span class=\"hl-2\">      </span><span class=\"hl-6\">[_.color]:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;red&#39;</span><br/><span class=\"hl-2\">    });</span><br/><span class=\"hl-2\">  });</span><br/><span class=\"hl-2\">});</span><br/><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">dot</span><span class=\"hl-2\"> = </span><span class=\"hl-1\">toDot</span><span class=\"hl-2\">(</span><span class=\"hl-7\">G</span><span class=\"hl-2\">);</span><br/><span class=\"hl-0\">// digraph &quot;G&quot; {</span><br/><span class=\"hl-0\">//   &quot;aa&quot;;</span><br/><span class=\"hl-0\">//   &quot;bb&quot;;</span><br/><span class=\"hl-0\">//   &quot;cc&quot;;</span><br/><span class=\"hl-0\">//   subgraph &quot;A&quot; {</span><br/><span class=\"hl-0\">//     &quot;Aaa&quot; [</span><br/><span class=\"hl-0\">//       color = &quot;pink&quot;,</span><br/><span class=\"hl-0\">//     ];</span><br/><span class=\"hl-0\">//     &quot;Abb&quot; [</span><br/><span class=\"hl-0\">//       color = &quot;violet&quot;,</span><br/><span class=\"hl-0\">//     ];</span><br/><span class=\"hl-0\">//     &quot;Acc&quot;;</span><br/><span class=\"hl-0\">//     &quot;Aaa&quot;:&quot;a&quot; -&gt; &quot;Abb&quot; -&gt; &quot;Acc&quot; -&gt; &quot;E&quot; [</span><br/><span class=\"hl-0\">//       color = &quot;red&quot;,</span><br/><span class=\"hl-0\">//     ];</span><br/><span class=\"hl-0\">//   }</span><br/><span class=\"hl-0\">//   &quot;aa&quot; -&gt; &quot;bb&quot; -&gt; &quot;cc&quot; [</span><br/><span class=\"hl-0\">//     color = &quot;red&quot;,</span><br/><span class=\"hl-0\">//   ];</span><br/><span class=\"hl-0\">// }</span></code><button>Copy</button></pre><blockquote><p><strong>Note</strong> Of course, we also provide an API for creating strict mode graphs.</p><pre><code class=\"language-typescript\"><span class=\"hl-5\">import</span><span class=\"hl-2\"> { </span><span class=\"hl-6\">strict</span><span class=\"hl-2\">, </span><span class=\"hl-6\">toDot</span><span class=\"hl-2\"> } </span><span class=\"hl-5\">from</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;ts-graphviz&#39;</span><span class=\"hl-2\">;</span><br/><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">G</span><span class=\"hl-2\"> = </span><span class=\"hl-6\">strict</span><span class=\"hl-2\">.</span><span class=\"hl-1\">graph</span><span class=\"hl-2\">(...);</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">dot</span><span class=\"hl-2\"> = </span><span class=\"hl-1\">toDot</span><span class=\"hl-2\">(</span><span class=\"hl-7\">G</span><span class=\"hl-2\">);</span><br/><span class=\"hl-0\">// strict graph {</span><br/><span class=\"hl-0\">// }</span></code><button>Copy</button></pre></blockquote><details><summary>Advanced Usage</summary><a id=\"md:models-context-api--withcontext-function--\ud83d\udc88\" class=\"tsd-anchor\"></a><h5><a href=\"#md:models-context-api--withcontext-function--\ud83d\udc88\">Models Context API ( <code>withContext</code> function ) \ud83d\udc88</a></h5><p>The <code>withContext</code> function returns a <em>Model Factory</em> function.</p><p>This <em>Model Factory</em> provides a means to replace <code>RootGraphModel</code> with a custom class, such as <code>Digraph</code> or <code>Graph</code>.</p><p>This API provides a way to integrate declarative APIs and custom classes.</p><pre><code class=\"language-typescript\"><span class=\"hl-4\">const</span><span class=\"hl-2\"> { </span><span class=\"hl-7\">digraph</span><span class=\"hl-2\"> } = </span><span class=\"hl-1\">withContext</span><span class=\"hl-2\">({</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">Digraph:</span><span class=\"hl-2\"> </span><span class=\"hl-6\">MyCustomDigraph</span><span class=\"hl-2\">,</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">Node:</span><span class=\"hl-2\"> </span><span class=\"hl-6\">MyCustomNode</span><span class=\"hl-2\">,</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">Edge:</span><span class=\"hl-2\"> </span><span class=\"hl-6\">MyCustomEdge</span><span class=\"hl-2\">,</span><br/><span class=\"hl-2\">});</span><br/><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">G</span><span class=\"hl-2\"> = </span><span class=\"hl-1\">digraph</span><span class=\"hl-2\">((</span><span class=\"hl-6\">g</span><span class=\"hl-2\">) </span><span class=\"hl-4\">=&gt;</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">  </span><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">a</span><span class=\"hl-2\"> = </span><span class=\"hl-6\">g</span><span class=\"hl-2\">.</span><span class=\"hl-1\">node</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;A&#39;</span><span class=\"hl-2\">); </span><span class=\"hl-0\">// MyCustomNode</span><br/><span class=\"hl-2\">  </span><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">b</span><span class=\"hl-2\"> = </span><span class=\"hl-6\">g</span><span class=\"hl-2\">.</span><span class=\"hl-1\">node</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;B&#39;</span><span class=\"hl-2\">); </span><span class=\"hl-0\">// MyCustomNode</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">g</span><span class=\"hl-2\">.</span><span class=\"hl-1\">edge</span><span class=\"hl-2\">([</span><span class=\"hl-6\">a</span><span class=\"hl-2\">, </span><span class=\"hl-6\">b</span><span class=\"hl-2\">]); </span><span class=\"hl-0\">// MyCustomEdge</span><br/><span class=\"hl-2\">});</span><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">dot</span><span class=\"hl-2\"> = </span><span class=\"hl-1\">toDot</span><span class=\"hl-2\">(</span><span class=\"hl-6\">g</span><span class=\"hl-2\">);</span><br/><span class=\"hl-0\">// digraph &quot;G&quot; {</span><br/><span class=\"hl-0\">//   label = &quot;This is Custom Digraph&quot;;</span><br/><span class=\"hl-0\">//   &quot;node_A&quot; [</span><br/><span class=\"hl-0\">//     label = &quot;This is Custom Node A&quot;;</span><br/><span class=\"hl-0\">//   ];</span><br/><span class=\"hl-0\">//   &quot;node_B&quot; [</span><br/><span class=\"hl-0\">//     label = &quot;This is Custom Node B&quot;;</span><br/><span class=\"hl-0\">//   ];</span><br/><span class=\"hl-0\">//   &quot;node_A&quot; -&gt; &quot;node_B&quot; [</span><br/><span class=\"hl-0\">//     label = &quot;This is Custom Edge&quot;;</span><br/><span class=\"hl-0\">//   ];</span><br/><span class=\"hl-0\">// }</span></code><button>Copy</button></pre></details><a id=\"md:ts-graphvizadapter-module-\ud83d\udd0c\" class=\"tsd-anchor\"></a><h3><a href=\"#md:ts-graphvizadapter-module-\ud83d\udd0c\"><code>@ts-graphviz/adapter</code> Module \ud83d\udd0c</a></h3><blockquote><p>This module status is <img src=\"https://img.shields.io/badge/-beta-orange\" alt=\"beta\">.</p></blockquote><p>Provides an interface to run Graphviz dot commands.</p><p><a href=\"https://graphviz.gitlab.io/\">Graphviz</a> must be installed so that the dot command can be executed.</p><p>Execute the dot command to output a DOT language string to a stream or file.</p><p><img src=\"./media/adapter-state-machine.svg\" alt=\"Adapter State Machine\"></p><p>This module provides the following functions.</p><ul><li>The <code>toStream</code> function converts <strong>DOT</strong> to <strong>Stream</strong>.<pre><code class=\"language-ts\"><span class=\"hl-5\">import</span><span class=\"hl-2\"> { </span><span class=\"hl-6\">toStream</span><span class=\"hl-2\"> } </span><span class=\"hl-5\">from</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;ts-graphviz/adapter&#39;</span><span class=\"hl-2\">;</span><br/><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">dot</span><span class=\"hl-2\"> = </span><span class=\"hl-3\">`</span><br/><span class=\"hl-3\">  digraph example {</span><br/><span class=\"hl-3\">    node1 [</span><br/><span class=\"hl-3\">      label = &quot;My Node&quot;,</span><br/><span class=\"hl-3\">    ]</span><br/><span class=\"hl-3\">  }</span><br/><span class=\"hl-3\">`</span><span class=\"hl-2\">;</span><br/><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">stream</span><span class=\"hl-2\"> = </span><span class=\"hl-5\">await</span><span class=\"hl-2\"> </span><span class=\"hl-1\">toStream</span><span class=\"hl-2\">(</span><span class=\"hl-6\">dot</span><span class=\"hl-2\">, { </span><span class=\"hl-6\">format:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;svg&#39;</span><span class=\"hl-2\"> });</span><br/><span class=\"hl-0\">// Node.js</span><br/><span class=\"hl-6\">stream</span><span class=\"hl-2\">.</span><span class=\"hl-1\">pipe</span><span class=\"hl-2\">(</span><span class=\"hl-6\">process</span><span class=\"hl-2\">.</span><span class=\"hl-6\">stdout</span><span class=\"hl-2\">);</span><br/><span class=\"hl-0\">// Deno</span><br/><span class=\"hl-5\">await</span><span class=\"hl-2\"> </span><span class=\"hl-6\">stream</span><span class=\"hl-2\">.</span><span class=\"hl-1\">pipeTo</span><span class=\"hl-2\">(</span><span class=\"hl-6\">Deno</span><span class=\"hl-2\">.</span><span class=\"hl-6\">stdout</span><span class=\"hl-2\">.</span><span class=\"hl-6\">writable</span><span class=\"hl-2\">);</span></code><button>Copy</button></pre></li><li>Writes <strong>DOT</strong> to a file at the specified path <code>toFile</code> function<pre><code class=\"language-ts\"><span class=\"hl-5\">import</span><span class=\"hl-2\"> { </span><span class=\"hl-6\">toFile</span><span class=\"hl-2\"> } </span><span class=\"hl-5\">from</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;ts-graphviz/adapter&#39;</span><span class=\"hl-2\">;</span><br/><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">dot</span><span class=\"hl-2\"> = </span><span class=\"hl-3\">`</span><br/><span class=\"hl-3\">  digraph example {</span><br/><span class=\"hl-3\">    node1 [</span><br/><span class=\"hl-3\">      label = &quot;My Node&quot;,</span><br/><span class=\"hl-3\">    ]</span><br/><span class=\"hl-3\">  }</span><br/><span class=\"hl-3\">`</span><span class=\"hl-2\">;</span><br/><br/><span class=\"hl-5\">await</span><span class=\"hl-2\"> </span><span class=\"hl-1\">toFile</span><span class=\"hl-2\">(</span><span class=\"hl-6\">dot</span><span class=\"hl-2\">, </span><span class=\"hl-3\">&#39;./result.svg&#39;</span><span class=\"hl-2\">, { </span><span class=\"hl-6\">format:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;svg&#39;</span><span class=\"hl-2\"> });</span></code><button>Copy</button></pre></li></ul><blockquote><p><strong>Note</strong> Designed to work with Node.js and Deno, Stream is runtime native.</p></blockquote><a id=\"md:ts-graphvizast-module-\ud83d\udd22\" class=\"tsd-anchor\"></a><h3><a href=\"#md:ts-graphvizast-module-\ud83d\udd22\"><code>@ts-graphviz/ast</code> Module \ud83d\udd22</a></h3><blockquote><p>This module status is <img src=\"https://img.shields.io/badge/-beta-orange\" alt=\"beta\">.</p></blockquote><p>An API is provided to handle ASTs for advanced use.</p><p><img src=\"./media/state-machine.svg\" alt=\"State Machine\"></p><p>The following functions are provided as described in the state transition diagram.</p><ul><li>The <code>fromModel</code> function converts <strong>Model</strong> to <strong>AST</strong>.</li><li>The <code>toModel</code> function converts <strong>AST</strong> to <strong>Model</strong>.</li><li>The <code>stringify</code> function converts <strong>AST</strong> to <strong>DOT</strong>.</li><li>The <code>parse</code> function to convert from <strong>DOT</strong> to <strong>AST</strong>.</li></ul><blockquote><p><strong>Note</strong> As you can see from the above figure, the <code>toDot</code> function provided by the <code>ts-graphviz</code> package is a composite of <code>fromModel</code> and <code>stringify</code>. The <code>fromDot</code> function is a composite of <code>parse</code> and <code>toModel</code>.</p></blockquote><p>Detailed usage is TODO.Please refer to the TypeScript type definition.</p><details><summary>The parse function and AST</summary><pre><code class=\"language-typescript\"><span class=\"hl-5\">import</span><span class=\"hl-2\"> { </span><span class=\"hl-6\">parse</span><span class=\"hl-2\"> } </span><span class=\"hl-5\">from</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;@ts-graphviz/ast&#39;</span><span class=\"hl-2\">;</span><br/><br/><span class=\"hl-4\">const</span><span class=\"hl-2\"> </span><span class=\"hl-7\">ast</span><span class=\"hl-2\"> = </span><span class=\"hl-1\">parse</span><span class=\"hl-2\">(</span><span class=\"hl-3\">`</span><br/><span class=\"hl-3\">  digraph example {</span><br/><span class=\"hl-3\">    node1 [</span><br/><span class=\"hl-3\">      label = &quot;My Node&quot;,</span><br/><span class=\"hl-3\">    ]</span><br/><span class=\"hl-3\">  }</span><br/><span class=\"hl-3\">`</span><span class=\"hl-2\">);</span><br/><span class=\"hl-0\">// {</span><br/><span class=\"hl-0\">//   type: &#39;Dot&#39;,</span><br/><span class=\"hl-0\">//   location: {</span><br/><span class=\"hl-0\">//     start: { offset: 3, line: 2, column: 3 },</span><br/><span class=\"hl-0\">//     end: { offset: 68, line: 7, column: 1 }</span><br/><span class=\"hl-0\">//   },</span><br/><span class=\"hl-0\">//   children: [</span><br/><span class=\"hl-0\">//     {</span><br/><span class=\"hl-0\">//       id: {</span><br/><span class=\"hl-0\">//         value: &#39;example&#39;,</span><br/><span class=\"hl-0\">//         quoted: false,</span><br/><span class=\"hl-0\">//         type: &#39;Literal&#39;,</span><br/><span class=\"hl-0\">//         location: {</span><br/><span class=\"hl-0\">//           start: { offset: 11, line: 2, column: 11 },</span><br/><span class=\"hl-0\">//           end: { offset: 18, line: 2, column: 18 }</span><br/><span class=\"hl-0\">//         },</span><br/><span class=\"hl-0\">//         children: []</span><br/><span class=\"hl-0\">//       },</span><br/><span class=\"hl-0\">//       directed: true,</span><br/><span class=\"hl-0\">//       strict: false,</span><br/><span class=\"hl-0\">//       type: &#39;Graph&#39;,</span><br/><span class=\"hl-0\">//       location: {</span><br/><span class=\"hl-0\">//         start: { offset: 3, line: 2, column: 3 },</span><br/><span class=\"hl-0\">//         end: { offset: 67, line: 6, column: 4 }</span><br/><span class=\"hl-0\">//       },</span><br/><span class=\"hl-0\">//       children: [</span><br/><span class=\"hl-0\">//         {</span><br/><span class=\"hl-0\">//           id: {</span><br/><span class=\"hl-0\">//             value: &#39;node1&#39;,</span><br/><span class=\"hl-0\">//             quoted: false,</span><br/><span class=\"hl-0\">//             type: &#39;Literal&#39;,</span><br/><span class=\"hl-0\">//             location: {</span><br/><span class=\"hl-0\">//               start: { offset: 25, line: 3, column: 5 },</span><br/><span class=\"hl-0\">//               end: { offset: 30, line: 3, column: 10 }</span><br/><span class=\"hl-0\">//             },</span><br/><span class=\"hl-0\">//             children: []</span><br/><span class=\"hl-0\">//           },</span><br/><span class=\"hl-0\">//           type: &#39;Node&#39;,</span><br/><span class=\"hl-0\">//           location: {</span><br/><span class=\"hl-0\">//             start: { offset: 25, line: 3, column: 5 },</span><br/><span class=\"hl-0\">//             end: { offset: 63, line: 5, column: 6 }</span><br/><span class=\"hl-0\">//           },</span><br/><span class=\"hl-0\">//           children: [</span><br/><span class=\"hl-0\">//             {</span><br/><span class=\"hl-0\">//               key: {</span><br/><span class=\"hl-0\">//                 value: &#39;label&#39;,</span><br/><span class=\"hl-0\">//                 quoted: false,</span><br/><span class=\"hl-0\">//                 type: &#39;Literal&#39;,</span><br/><span class=\"hl-0\">//                 location: {</span><br/><span class=\"hl-0\">//                   start: { offset: 39, line: 4, column: 7 },</span><br/><span class=\"hl-0\">//                   end: { offset: 44, line: 4, column: 12 }</span><br/><span class=\"hl-0\">//                 },</span><br/><span class=\"hl-0\">//                 children: []</span><br/><span class=\"hl-0\">//               },</span><br/><span class=\"hl-0\">//               value: {</span><br/><span class=\"hl-0\">//                 value: &#39;My Node&#39;,</span><br/><span class=\"hl-0\">//                 quoted: true,</span><br/><span class=\"hl-0\">//                 type: &#39;Literal&#39;,</span><br/><span class=\"hl-0\">//                 location: {</span><br/><span class=\"hl-0\">//                   start: { offset: 47, line: 4, column: 15 },</span><br/><span class=\"hl-0\">//                   end: { offset: 56, line: 4, column: 24 }</span><br/><span class=\"hl-0\">//                 },</span><br/><span class=\"hl-0\">//                 children: []</span><br/><span class=\"hl-0\">//               },</span><br/><span class=\"hl-0\">//               location: {</span><br/><span class=\"hl-0\">//                 start: { offset: 39, line: 4, column: 7 },</span><br/><span class=\"hl-0\">//                 end: { offset: 57, line: 4, column: 25 }</span><br/><span class=\"hl-0\">//               },</span><br/><span class=\"hl-0\">//               type: &#39;Attribute&#39;,</span><br/><span class=\"hl-0\">//               children: []</span><br/><span class=\"hl-0\">//             }</span><br/><span class=\"hl-0\">//           ]</span><br/><span class=\"hl-0\">//         }</span><br/><span class=\"hl-0\">//       ]</span><br/><span class=\"hl-0\">//     }</span><br/><span class=\"hl-0\">//   ]</span><br/><span class=\"hl-0\">// }</span></code><button>Copy</button></pre></details><a id=\"md:extending-the-type-system-\ud83e\uddf0\" class=\"tsd-anchor\"></a><h3><a href=\"#md:extending-the-type-system-\ud83e\uddf0\">Extending the Type System \ud83e\uddf0</a></h3><blockquote><p>The status of this feature is <img src=\"https://img.shields.io/badge/-beta-orange\" alt=\"beta\">.</p></blockquote><p>With ts-graphviz, you can extend the library&#39;s type system to customize graph visualization solutions to meet specific needs.</p><blockquote><p><strong>Note</strong> To allow for customization, types are named with the <code>$</code> symbol.</p><p>If you want to extend a type definition in cases not listed below, check the source code to see if you can extend it with <code>$...</code>.</p><p>If not, please create an issue or pull request.</p></blockquote><a id=\"md:use-case-specifying-custom-graph-layout-and-output-formats\" class=\"tsd-anchor\"></a><h4><a href=\"#md:use-case-specifying-custom-graph-layout-and-output-formats\">Use Case: Specifying Custom Graph Layout and Output Formats</a></h4><pre><code class=\"language-ts\"><span class=\"hl-5\">import</span><span class=\"hl-2\"> { </span><span class=\"hl-6\">$keywords</span><span class=\"hl-2\"> } </span><span class=\"hl-5\">from</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;@ts-graphviz/common&#39;</span><span class=\"hl-2\">;</span><br/><span class=\"hl-5\">import</span><span class=\"hl-2\"> { </span><span class=\"hl-6\">toFile</span><span class=\"hl-2\"> } </span><span class=\"hl-5\">from</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;@ts-graphviz/adapter&#39;</span><span class=\"hl-2\">;</span><br/><br/><span class=\"hl-0\">// 1. Declare the &#39;@ts-graphviz/adapter&#39; module.</span><br/><span class=\"hl-4\">declare</span><span class=\"hl-2\"> </span><span class=\"hl-4\">module</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;@ts-graphviz/adapter&#39;</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">  </span><span class=\"hl-5\">export</span><span class=\"hl-2\"> </span><span class=\"hl-4\">namespace</span><span class=\"hl-2\"> </span><span class=\"hl-8\">Layout</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">    </span><span class=\"hl-0\">// 2. Define the $values interface in the Layout namespace.</span><br/><span class=\"hl-2\">    </span><span class=\"hl-0\">// 3. Inherit from $keywords&lt;&#39;my-custom-algorithm&#39;&gt; and specify the name of the new layout engine in &lt;...&gt;.</span><br/><span class=\"hl-2\">    </span><span class=\"hl-5\">export</span><span class=\"hl-2\"> </span><span class=\"hl-4\">interface</span><span class=\"hl-2\"> </span><span class=\"hl-8\">$values</span><span class=\"hl-2\"> </span><span class=\"hl-4\">extends</span><span class=\"hl-2\"> </span><span class=\"hl-8\">$keywords</span><span class=\"hl-2\">&lt;</span><span class=\"hl-3\">&#39;my-custom-algorithm&#39;</span><span class=\"hl-2\">&gt; {}</span><br/><span class=\"hl-2\">  }</span><br/><br/><span class=\"hl-2\">  </span><span class=\"hl-5\">export</span><span class=\"hl-2\"> </span><span class=\"hl-4\">namespace</span><span class=\"hl-2\"> </span><span class=\"hl-8\">Format</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">    </span><span class=\"hl-0\">// 4. Define the $values interface in the Format namespace.</span><br/><span class=\"hl-2\">    </span><span class=\"hl-0\">// 5. Inherit from $keywords&lt;&#39;mp4&#39;&gt; and specify the name of the new output format in &lt;...&gt;.</span><br/><span class=\"hl-2\">    </span><span class=\"hl-5\">export</span><span class=\"hl-2\"> </span><span class=\"hl-4\">interface</span><span class=\"hl-2\"> </span><span class=\"hl-8\">$values</span><span class=\"hl-2\"> </span><span class=\"hl-4\">extends</span><span class=\"hl-2\"> </span><span class=\"hl-8\">$keywords</span><span class=\"hl-2\">&lt;</span><span class=\"hl-3\">&#39;mp4&#39;</span><span class=\"hl-2\">&gt; {}</span><br/><span class=\"hl-2\">  }</span><br/><span class=\"hl-2\">}</span><br/><br/><span class=\"hl-1\">toFile</span><span class=\"hl-2\">(</span><span class=\"hl-3\">&#39;digraph { a -&gt; b }&#39;</span><span class=\"hl-2\">, </span><span class=\"hl-3\">&#39;/path/to/file&#39;</span><span class=\"hl-2\">, {</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">layout:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;my-custom-algorithm&#39;</span><span class=\"hl-2\">,</span><br/><span class=\"hl-2\">  </span><span class=\"hl-6\">format:</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;mp4&#39;</span><span class=\"hl-2\">,</span><br/><span class=\"hl-2\">});</span></code><button>Copy</button></pre><a id=\"md:use-case-adding-custom-attributes\" class=\"tsd-anchor\"></a><h4><a href=\"#md:use-case-adding-custom-attributes\">Use Case: Adding Custom Attributes</a></h4><pre><code class=\"language-ts\"><span class=\"hl-5\">import</span><span class=\"hl-2\"> { </span><span class=\"hl-6\">$keywords</span><span class=\"hl-2\"> } </span><span class=\"hl-5\">from</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;@ts-graphviz/common&#39;</span><span class=\"hl-2\">;</span><br/><span class=\"hl-5\">import</span><span class=\"hl-2\"> { </span><span class=\"hl-6\">digraph</span><span class=\"hl-2\">, </span><span class=\"hl-6\">toDot</span><span class=\"hl-2\">, </span><span class=\"hl-6\">attribute</span><span class=\"hl-2\"> </span><span class=\"hl-5\">as</span><span class=\"hl-2\"> </span><span class=\"hl-6\">_</span><span class=\"hl-2\"> } </span><span class=\"hl-5\">from</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;ts-graphviz&#39;</span><span class=\"hl-2\">;</span><br/><br/><span class=\"hl-0\">// 1. Declare the &#39;@ts-graphviz/common&#39; module.</span><br/><span class=\"hl-4\">declare</span><span class=\"hl-2\"> </span><span class=\"hl-4\">module</span><span class=\"hl-2\"> </span><span class=\"hl-3\">&#39;@ts-graphviz/common&#39;</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">  </span><span class=\"hl-5\">export</span><span class=\"hl-2\"> </span><span class=\"hl-4\">namespace</span><span class=\"hl-2\"> </span><span class=\"hl-8\">GraphAttributeKey</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">    </span><span class=\"hl-0\">// 2. Define the $values interface in the GraphAttributeKey namespace.</span><br/><span class=\"hl-2\">    </span><span class=\"hl-0\">// 3. Inherit from $keywords&lt;&#39;hoge&#39;&gt; and specify the name of the new attribute in &lt;...&gt;.</span><br/><span class=\"hl-2\">    </span><span class=\"hl-5\">export</span><span class=\"hl-2\"> </span><span class=\"hl-4\">interface</span><span class=\"hl-2\"> </span><span class=\"hl-8\">$values</span><span class=\"hl-2\"> </span><span class=\"hl-4\">extends</span><span class=\"hl-2\"> </span><span class=\"hl-8\">$keywords</span><span class=\"hl-2\">&lt;</span><span class=\"hl-3\">&#39;hoge&#39;</span><span class=\"hl-2\">&gt; {}</span><br/><span class=\"hl-2\">  }</span><br/><br/><span class=\"hl-2\">  </span><span class=\"hl-5\">export</span><span class=\"hl-2\"> </span><span class=\"hl-4\">namespace</span><span class=\"hl-2\"> </span><span class=\"hl-8\">Attribute</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">    </span><span class=\"hl-0\">// 4. Define the $keys interface in the Attribute namespace.</span><br/><span class=\"hl-2\">    </span><span class=\"hl-0\">// 5. Inherit from $keywords&lt;&#39;hoge&#39;&gt; and specify the name of the new attribute in &lt;...&gt;.</span><br/><span class=\"hl-2\">    </span><span class=\"hl-5\">export</span><span class=\"hl-2\"> </span><span class=\"hl-4\">interface</span><span class=\"hl-2\"> </span><span class=\"hl-8\">$keys</span><span class=\"hl-2\"> </span><span class=\"hl-4\">extends</span><span class=\"hl-2\"> </span><span class=\"hl-8\">$keywords</span><span class=\"hl-2\">&lt;</span><span class=\"hl-3\">&#39;hoge&#39;</span><span class=\"hl-2\">&gt; {}</span><br/><br/><span class=\"hl-2\">    </span><span class=\"hl-0\">// 6. Define the $types interface in the Attribute namespace.</span><br/><span class=\"hl-2\">    </span><span class=\"hl-0\">// 7. Specify the new attribute in the key and define its corresponding value in the value.</span><br/><span class=\"hl-2\">    </span><span class=\"hl-5\">export</span><span class=\"hl-2\"> </span><span class=\"hl-4\">interface</span><span class=\"hl-2\"> </span><span class=\"hl-8\">$types</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">      </span><span class=\"hl-6\">hoge</span><span class=\"hl-2\">: </span><span class=\"hl-8\">string</span><span class=\"hl-2\">;</span><br/><span class=\"hl-2\">    }</span><br/><span class=\"hl-2\">  }</span><br/><span class=\"hl-2\">}</span><br/><br/><span class=\"hl-6\">console</span><span class=\"hl-2\">.</span><span class=\"hl-1\">log</span><span class=\"hl-2\">(</span><br/><span class=\"hl-2\">  </span><span class=\"hl-1\">toDot</span><span class=\"hl-2\">(</span><br/><span class=\"hl-2\">    </span><span class=\"hl-1\">digraph</span><span class=\"hl-2\">((</span><span class=\"hl-6\">g</span><span class=\"hl-2\">) </span><span class=\"hl-4\">=&gt;</span><span class=\"hl-2\"> {</span><br/><span class=\"hl-2\">      </span><span class=\"hl-6\">g</span><span class=\"hl-2\">.</span><span class=\"hl-1\">set</span><span class=\"hl-2\">(</span><span class=\"hl-6\">_</span><span class=\"hl-2\">.</span><span class=\"hl-6\">hoge</span><span class=\"hl-2\">, </span><span class=\"hl-3\">&#39;fuga&#39;</span><span class=\"hl-2\">);</span><br/><span class=\"hl-2\">    }),</span><br/><span class=\"hl-2\">  ),</span><br/><span class=\"hl-2\">);</span></code><button>Copy</button></pre><a id=\"md:deep-dive-\ud83c\udfca\u2642\ufe0f\" class=\"tsd-anchor\"></a><h2><a href=\"#md:deep-dive-\ud83c\udfca\u2642\ufe0f\">Deep dive \ud83c\udfca\u200d\u2642\ufe0f</a></h2><a id=\"md:architecture-\ud83c\udfdb\" class=\"tsd-anchor\"></a><h3><a href=\"#md:architecture-\ud83c\udfdb\">Architecture \ud83c\udfdb</a></h3><p>See <a href=\"https://github.com/ts-graphviz/ts-graphviz/blob/main/ARCHITECTURE.md\">ARCHITECTURE.md</a> for more details.</p><a id=\"md:security-\ud83d\udee1\ufe0f\" class=\"tsd-anchor\"></a><h3><a href=\"#md:security-\ud83d\udee1\ufe0f\">Security \ud83d\udee1\ufe0f</a></h3><p>See <a href=\"https://github.com/ts-graphviz/ts-graphviz/blob/main/SECURITY.md\">SECURITY.md</a> for more details.</p><a id=\"md:who39s-using-ts-graphviz-\ud83d\udcdc\" class=\"tsd-anchor\"></a><h2><a href=\"#md:who39s-using-ts-graphviz-\ud83d\udcdc\">Who&#39;s using <code>ts-graphviz</code> \ud83d\udcdc</a></h2><ul><li><a href=\"https://github.com/apollographql\">Apollo GraphQL</a></li><li><a href=\"https://github.com/aws\">AWS</a></li><li><a href=\"https://strongloop.com\">IBM (StrongLoop)</a></li><li><a href=\"https://github.com/csg-tokyo\">The University of Tokyo</a></li><li><a href=\"https://github.com/transmute-industries\">Transmute</a></li></ul><blockquote><p><strong>Note</strong> Let us know that you&#39;re using <code>ts-graphviz</code> on <a href=\"https://github.com/ts-graphviz/ts-graphviz/discussions/736\">GitHub Discussions</a> \ud83d\ude4f</p></blockquote><a id=\"md:related-projects-\ud83d\udcab\" class=\"tsd-anchor\"></a><h2><a href=\"#md:related-projects-\ud83d\udcab\">Related Projects \ud83d\udcab</a></h2><p>Related projects can be found at <a href=\"https://github.com/ts-graphviz\"><strong>ts-graphviz</strong> GitHub Organization</a>.</p><p>The TypeScript/JavaScript ecosystem provides a variety of OSS with the goal of making Graphviz more connected and easier to use.</p><a id=\"md:contributors-\ud83d\udc65\" class=\"tsd-anchor\"></a><h2><a href=\"#md:contributors-\ud83d\udc65\">Contributors \ud83d\udc65</a></h2><p>Thanks goes to these wonderful people (<a href=\"https://allcontributors.org/docs/en/emoji-key\">emoji key</a>):</p><!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --><!-- prettier-ignore-start --><!-- markdownlint-disable --><table>  <tbody>    <tr>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://blog.kamiazya.tech/\"><img src=\"https://avatars0.githubusercontent.com/u/35218186?v=4?s=100\" width=\"100px;\" alt=\"Yuki Yamazaki\"/><br /><sub><b>Yuki Yamazaki</b></sub></a><br /><a href=\"https://github.com/ts-graphviz/ts-graphviz/commits?author=kamiazya\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/ts-graphviz/ts-graphviz/commits?author=kamiazya\" title=\"Tests\">\u26a0\ufe0f</a> <a href=\"https://github.com/ts-graphviz/ts-graphviz/commits?author=kamiazya\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"#ideas-kamiazya\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a></td>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://laysent.com\"><img src=\"https://avatars2.githubusercontent.com/u/1191606?v=4?s=100\" width=\"100px;\" alt=\"LaySent\"/><br /><sub><b>LaySent</b></sub></a><br /><a href=\"https://github.com/ts-graphviz/ts-graphviz/issues?q=author%3Alaysent\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/ts-graphviz/ts-graphviz/commits?author=laysent\" title=\"Tests\">\u26a0\ufe0f</a></td>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/elasticdotventures\"><img src=\"https://avatars0.githubusercontent.com/u/35611074?v=4?s=100\" width=\"100px;\" alt=\"elasticdotventures\"/><br /><sub><b>elasticdotventures</b></sub></a><br /><a href=\"https://github.com/ts-graphviz/ts-graphviz/commits?author=elasticdotventures\" title=\"Documentation\">\ud83d\udcd6</a></td>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/ChristianMurphy\"><img src=\"https://avatars.githubusercontent.com/u/3107513?v=4?s=100\" width=\"100px;\" alt=\"Christian Murphy\"/><br /><sub><b>Christian Murphy</b></sub></a><br /><a href=\"https://github.com/ts-graphviz/ts-graphviz/commits?author=ChristianMurphy\" title=\"Code\">\ud83d\udcbb</a> <a href=\"#ideas-ChristianMurphy\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a> <a href=\"https://github.com/ts-graphviz/ts-graphviz/commits?author=ChristianMurphy\" title=\"Documentation\">\ud83d\udcd6</a></td>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/ArtemAdamenko\"><img src=\"https://avatars.githubusercontent.com/u/2178516?v=4?s=100\" width=\"100px;\" alt=\"Artem\"/><br /><sub><b>Artem</b></sub></a><br /><a href=\"https://github.com/ts-graphviz/ts-graphviz/issues?q=author%3AArtemAdamenko\" title=\"Bug reports\">\ud83d\udc1b</a></td>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/fredericohpandolfo\"><img src=\"https://avatars.githubusercontent.com/u/24229136?v=4?s=100\" width=\"100px;\" alt=\"fredericohpandolfo\"/><br /><sub><b>fredericohpandolfo</b></sub></a><br /><a href=\"https://github.com/ts-graphviz/ts-graphviz/issues?q=author%3Afredericohpandolfo\" title=\"Bug reports\">\ud83d\udc1b</a></td>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/diegoquinteiro\"><img src=\"https://avatars.githubusercontent.com/u/1878108?v=4?s=100\" width=\"100px;\" alt=\"diegoquinteiro\"/><br /><sub><b>diegoquinteiro</b></sub></a><br /><a href=\"https://github.com/ts-graphviz/ts-graphviz/issues?q=author%3Adiegoquinteiro\" title=\"Bug reports\">\ud83d\udc1b</a></td>    </tr>    <tr>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/robross0606\"><img src=\"https://avatars.githubusercontent.com/u/2965467?v=4?s=100\" width=\"100px;\" alt=\"robross0606\"/><br /><sub><b>robross0606</b></sub></a><br /><a href=\"#ideas-robross0606\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a></td>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://blake-regalia.net\"><img src=\"https://avatars.githubusercontent.com/u/1456400?v=4?s=100\" width=\"100px;\" alt=\"Blake Regalia\"/><br /><sub><b>Blake Regalia</b></sub></a><br /><a href=\"https://github.com/ts-graphviz/ts-graphviz/issues?q=author%3Ablake-regalia\" title=\"Bug reports\">\ud83d\udc1b</a></td>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/bigbug\"><img src=\"https://avatars.githubusercontent.com/u/27259?v=4?s=100\" width=\"100px;\" alt=\"bigbug\"/><br /><sub><b>bigbug</b></sub></a><br /><a href=\"#question-bigbug\" title=\"Answering Questions\">\ud83d\udcac</a></td>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/murawakimitsuhiro\"><img src=\"https://avatars.githubusercontent.com/u/13833242?v=4?s=100\" width=\"100px;\" alt=\"mrwk\"/><br /><sub><b>mrwk</b></sub></a><br /><a href=\"#question-murawakimitsuhiro\" title=\"Answering Questions\">\ud83d\udcac</a></td>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/svdvonde\"><img src=\"https://avatars.githubusercontent.com/u/2751783?v=4?s=100\" width=\"100px;\" alt=\"svdvonde\"/><br /><sub><b>svdvonde</b></sub></a><br /><a href=\"#question-svdvonde\" title=\"Answering Questions\">\ud83d\udcac</a></td>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/seethroughdev\"><img src=\"https://avatars.githubusercontent.com/u/203779?v=4?s=100\" width=\"100px;\" alt=\"Adam\"/><br /><sub><b>Adam</b></sub></a><br /><a href=\"#question-seethroughdev\" title=\"Answering Questions\">\ud83d\udcac</a></td>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/trevor-scheer\"><img src=\"https://avatars.githubusercontent.com/u/29644393?v=4?s=100\" width=\"100px;\" alt=\"Trevor Scheer\"/><br /><sub><b>Trevor Scheer</b></sub></a><br /><a href=\"#a11y-trevor-scheer\" title=\"Accessibility\">\ufe0f\ufe0f\ufe0f\ufe0f\u267f\ufe0f</a></td>    </tr>    <tr>      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://pre.ms\"><img src=\"https://avatars.githubusercontent.com/u/238277?v=4?s=100\" width=\"100px;\" alt=\"Prem Pillai\"/><br /><sub><b>Prem Pillai</b></sub></a><br /><a href=\"https://github.com/ts-graphviz/ts-graphviz/issues?q=author%3Acloud-on-prem\" title=\"Bug reports\">\ud83d\udc1b</a></td>    </tr>  </tbody></table><!-- markdownlint-restore --><!-- prettier-ignore-end --><!-- ALL-CONTRIBUTORS-LIST:END --><p>This project follows the <a href=\"https://github.com/all-contributors/all-contributors\">all-contributors</a>specification. Contributions of any kind welcome!</p><a id=\"md:how-to-contribute-\ud83d\udcaa\" class=\"tsd-anchor\"></a><h2><a href=\"#md:how-to-contribute-\ud83d\udcaa\">How to Contribute \ud83d\udcaa</a></h2><p>The easiest way to contribute is to use the library and star <a href=\"https://github.com/ts-graphviz/ts-graphviz\">repository</a>.</p><a id=\"md:questions-\ud83d\udcad\" class=\"tsd-anchor\"></a><h3><a href=\"#md:questions-\ud83d\udcad\">Questions \ud83d\udcad</a></h3><p>Feel free to ask questions on <a href=\"https://github.com/ts-graphviz/ts-graphviz/discussions\">GitHub Discussions</a>.</p><a id=\"md:report-bugs--request-additional-features-\ud83d\udca1\" class=\"tsd-anchor\"></a><h3><a href=\"#md:report-bugs--request-additional-features-\ud83d\udca1\">Report bugs / request additional features \ud83d\udca1</a></h3><p>Please register at <a href=\"https://github.com/ts-graphviz/ts-graphviz/issues/new/choose\">GitHub Issues</a>.</p><a id=\"md:development--bug-fixes-\ud83e\uddd1\ud83d\udcbb\" class=\"tsd-anchor\"></a><h3><a href=\"#md:development--bug-fixes-\ud83e\uddd1\ud83d\udcbb\">Development / Bug Fixes \ud83e\uddd1\u200d\ud83d\udcbb</a></h3><p>See <a href=\"https://github.com/ts-graphviz/ts-graphviz/blob/main/CONTRIBUTING.md\">CONTRIBUTING.md</a>.</p><a id=\"md:financial-support-\ud83d\udcb8\" class=\"tsd-anchor\"></a><h3><a href=\"#md:financial-support-\ud83d\udcb8\">Financial Support \ud83d\udcb8</a></h3><p>Please support <a href=\"https://github.com/sponsors/ts-graphviz\">ts-graphviz</a>.</p><p>Our goal for ts-graphviz is to attract 10 sponsors who can provide ongoing support to help cover development and maintenance costs,and help us continue expanding and improving the library. By achieving this goal, we can ensure that ts-graphviz remains a valuable resourcefor developers who need to analyze and visualize complex graph structures, while also fostering a strong and supportive community of users and sponsors.</p><blockquote><p><strong>Note</strong> Even just a dollar is enough motivation to develop \ud83d\ude0a</p></blockquote><a id=\"md:ts-graphviz-for-enterprise-\ud83c\udfe2\" class=\"tsd-anchor\"></a><h2><a href=\"#md:ts-graphviz-for-enterprise-\ud83c\udfe2\">ts-graphviz for Enterprise \ud83c\udfe2</a></h2><p>Available as part of the Tidelift Subscription.</p><p>The maintainers of ts-graphviz and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open-source dependencies you use to build your applications.Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use.</p><p><a href=\"https://tidelift.com/subscription/pkg/npm-ts-graphviz?utm_source=npm-ts-graphviz&utm_medium=referral&utm_campaign=enterprise&utm_term=repo\">Learn more</a>.</p><a id=\"md:license-\u2696\ufe0f\" class=\"tsd-anchor\"></a><h2><a href=\"#md:license-\u2696\ufe0f\">License \u2696\ufe0f</a></h2><p>This software is released under the MIT License, see <a href=\"https://github.com/ts-graphviz/ts-graphviz/blob/main/LICENSE\">LICENSE</a>.</p></div></div><div class=\"col-sidebar\"><div class=\"page-menu\"><div class=\"tsd-navigation settings\"><details class=\"tsd-index-accordion\"><summary class=\"tsd-accordion-summary\"><h3><svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"><use href=\"#icon-chevronDown\"></use></svg>Settings</h3></summary><div class=\"tsd-accordion-details\"><div class=\"tsd-filter-visibility\"><h4 class=\"uppercase\">Member Visibility</h4><form><ul id=\"tsd-filter-options\"><li class=\"tsd-filter-item\"><label class=\"tsd-filter-input\"><input type=\"checkbox\" id=\"tsd-filter-protected\" name=\"protected\"/><svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><rect class=\"tsd-checkbox-background\" width=\"30\" height=\"30\" x=\"1\" y=\"1\" rx=\"6\" fill=\"none\"></rect><path class=\"tsd-checkbox-checkmark\" d=\"M8.35422 16.8214L13.2143 21.75L24.6458 10.25\" stroke=\"none\" stroke-width=\"3.5\" stroke-linejoin=\"round\" fill=\"none\"></path></svg><span>Protected</span></label></li><li class=\"tsd-filter-item\"><label class=\"tsd-filter-input\"><input type=\"checkbox\" id=\"tsd-filter-inherited\" name=\"inherited\" checked/><svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><rect class=\"tsd-checkbox-background\" width=\"30\" height=\"30\" x=\"1\" y=\"1\" rx=\"6\" fill=\"none\"></rect><path class=\"tsd-checkbox-checkmark\" d=\"M8.35422 16.8214L13.2143 21.75L24.6458 10.25\" stroke=\"none\" stroke-width=\"3.5\" stroke-linejoin=\"round\" fill=\"none\"></path></svg><span>Inherited</span></label></li><li class=\"tsd-filter-item\"><label class=\"tsd-filter-input\"><input type=\"checkbox\" id=\"tsd-filter-external\" name=\"external\"/><svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><rect class=\"tsd-checkbox-background\" width=\"30\" height=\"30\" x=\"1\" y=\"1\" rx=\"6\" fill=\"none\"></rect><path class=\"tsd-checkbox-checkmark\" d=\"M8.35422 16.8214L13.2143 21.75L24.6458 10.25\" stroke=\"none\" stroke-width=\"3.5\" stroke-linejoin=\"round\" fill=\"none\"></path></svg><span>External</span></label></li></ul></form></div><div class=\"tsd-theme-toggle\"><h4 class=\"uppercase\">Theme</h4><select id=\"tsd-theme\"><option value=\"os\">OS</option><option value=\"light\">Light</option><option value=\"dark\">Dark</option></select></div></div></details></div><details open class=\"tsd-index-accordion tsd-page-navigation\"><summary class=\"tsd-accordion-summary\"><h3><svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"><use href=\"#icon-chevronDown\"></use></svg>On This Page</h3></summary><div class=\"tsd-accordion-details\"><ul><li><ul><li><a href=\"#md:ts-graphviz\"><span>ts-<wbr/>graphviz</span></a></li><li><ul><li><a href=\"#md:key-features-\u2728\"><span>Key <wbr/>Features \u2728</span></a></li><li><a href=\"#md:installation-\ud83d\udcbd\"><span>Installation \ud83d\udcbd</span></a></li><li><ul><li><a href=\"#md:nodejs\"><span>Node.js</span></a></li><li><a href=\"#md:deno-\ud83e\udd95\"><span>Deno \ud83e\udd95</span></a></li></ul></li><li><a href=\"#md:usage-\ud83d\udcd1\"><span>Usage \ud83d\udcd1</span></a></li><li><ul><li><a href=\"#md:ts-graphviz-module-\ud83d\udea9\"><span>ts-<wbr/>graphviz <wbr/>Module \ud83d\udea9</span></a></li><li><ul><li><a href=\"#md:object-oriented-\u2764\ufe0f\"><span>Object-<wbr/>Oriented \u2764\ufe0f</span></a></li><li><ul><li><a href=\"#md:custom-class-\ud83e\udd16\"><span>Custom <wbr/>Class \ud83e\udd16</span></a></li><li><a href=\"#md:models-context-api--with-method-\ud83e\uddc5\"><span>Models <wbr/>Context API ( with method) \ud83e\uddc5</span></a></li><li><a href=\"#md:fromdot-function-\u23ea\"><span>from<wbr/>Dot function \u23ea</span></a></li></ul></li><li><a href=\"#md:declarative-api-\ud83d\ude0e\"><span>Declarative API \ud83d\ude0e</span></a></li><li><ul><li><a href=\"#md:models-context-api--withcontext-function--\ud83d\udc88\"><span>Models <wbr/>Context API ( with<wbr/>Context function ) \ud83d\udc88</span></a></li></ul></li></ul></li><li><a href=\"#md:ts-graphvizadapter-module-\ud83d\udd0c\"><span>@ts-<wbr/>graphviz/adapter <wbr/>Module \ud83d\udd0c</span></a></li><li><a href=\"#md:ts-graphvizast-module-\ud83d\udd22\"><span>@ts-<wbr/>graphviz/ast <wbr/>Module \ud83d\udd22</span></a></li><li><a href=\"#md:extending-the-type-system-\ud83e\uddf0\"><span>Extending the <wbr/>Type <wbr/>System \ud83e\uddf0</span></a></li><li><ul><li><a href=\"#md:use-case-specifying-custom-graph-layout-and-output-formats\"><span>Use <wbr/>Case: <wbr/>Specifying <wbr/>Custom <wbr/>Graph <wbr/>Layout and <wbr/>Output <wbr/>Formats</span></a></li><li><a href=\"#md:use-case-adding-custom-attributes\"><span>Use <wbr/>Case: <wbr/>Adding <wbr/>Custom <wbr/>Attributes</span></a></li></ul></li></ul></li><li><a href=\"#md:deep-dive-\ud83c\udfca\u2642\ufe0f\"><span>Deep dive \ud83c\udfca\u200d\u2642\ufe0f</span></a></li><li><ul><li><a href=\"#md:architecture-\ud83c\udfdb\"><span>Architecture \ud83c\udfdb</span></a></li><li><a href=\"#md:security-\ud83d\udee1\ufe0f\"><span>Security \ud83d\udee1\ufe0f</span></a></li></ul></li><li><a href=\"#md:who39s-using-ts-graphviz-\ud83d\udcdc\"><span>Who&#39;s using ts-<wbr/>graphviz \ud83d\udcdc</span></a></li><li><a href=\"#md:related-projects-\ud83d\udcab\"><span>Related <wbr/>Projects \ud83d\udcab</span></a></li><li><a href=\"#md:contributors-\ud83d\udc65\"><span>Contributors \ud83d\udc65</span></a></li><li><a href=\"#md:how-to-contribute-\ud83d\udcaa\"><span>How to <wbr/>Contribute \ud83d\udcaa</span></a></li><li><ul><li><a href=\"#md:questions-\ud83d\udcad\"><span>Questions \ud83d\udcad</span></a></li><li><a href=\"#md:report-bugs--request-additional-features-\ud83d\udca1\"><span>Report bugs / request additional features \ud83d\udca1</span></a></li><li><a href=\"#md:development--bug-fixes-\ud83e\uddd1\ud83d\udcbb\"><span>Development / <wbr/>Bug <wbr/>Fixes \ud83e\uddd1\u200d\ud83d\udcbb</span></a></li><li><a href=\"#md:financial-support-\ud83d\udcb8\"><span>Financial <wbr/>Support \ud83d\udcb8</span></a></li></ul></li><li><a href=\"#md:ts-graphviz-for-enterprise-\ud83c\udfe2\"><span>ts-<wbr/>graphviz for <wbr/>Enterprise \ud83c\udfe2</span></a></li><li><a href=\"#md:license-\u2696\ufe0f\"><span>License \u2696\ufe0f</span></a></li></ul></li></ul></li></ul></div></details></div><div class=\"site-menu\"><nav class=\"tsd-navigation\"><a href=\"index.html\" class=\"current\"><svg class=\"tsd-kind-icon\" viewBox=\"0 0 24 24\"><use href=\"#icon-1\"></use></svg><span>ts-graphviz</span></a><ul class=\"tsd-small-nested-navigation\" id=\"tsd-nav-container\" data-base=\".\"><details class=\"tsd-index-accordion\" data-key=\"@ts-graphviz\"><summary class=\"tsd-accordion-summary\"><svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"><use href=\"#icon-chevronDown\"></use></svg><span>@ts-graphviz</span></summary><div class=\"tsd-accordion-details\"><ul class=\"tsd-nested-navigation\"><li><a href=\"modules/_ts_graphviz_adapter.html\"><svg class=\"tsd-kind-icon\" viewBox=\"0 0 24 24\"><use href=\"#icon-2\"></use></svg>adapter</a></li><li><a href=\"modules/_ts_graphviz_ast.html\"><svg class=\"tsd-kind-icon\" viewBox=\"0 0 24 24\"><use href=\"#icon-2\"></use></svg>ast</a></li><li><a href=\"modules/_ts_graphviz_common.html\"><svg class=\"tsd-kind-icon\" viewBox=\"0 0 24 24\"><use href=\"#icon-2\"></use></svg>common</a></li><li><a href=\"modules/_ts_graphviz_core.html\"><svg class=\"tsd-kind-icon\" viewBox=\"0 0 24 24\"><use href=\"#icon-2\"></use></svg>core</a></li></ul></div></details><li><a href=\"modules/ts_graphviz.html\"><svg class=\"tsd-kind-icon\" viewBox=\"0 0 24 24\"><use href=\"#icon-2\"></use></svg>ts-graphviz</a></li></ul></nav></div></div></div><div class=\"tsd-generator\"><p>Generated using <a href=\"https://typedoc.org/\" target=\"_blank\">TypeDoc</a></p></div><div class=\"overlay\"></div><svg style=\"display: none\"><g id=\"icon-1\"><rect fill=\"var(--color-icon-background)\" stroke=\"var(--color-ts-module)\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"6\"></rect><path d=\"M9.162 16V7.24H10.578L11.514 10.072C11.602 10.328 11.674 10.584 11.73 10.84C11.794 11.088 11.842 11.28 11.874 11.416C11.906 11.28 11.954 11.088 12.018 10.84C12.082 10.584 12.154 10.324 12.234 10.06L13.122 7.24H14.538V16H13.482V12.82C13.482 12.468 13.49 12.068 13.506 11.62C13.53 11.172 13.558 10.716 13.59 10.252C13.622 9.78 13.654 9.332 13.686 8.908C13.726 8.476 13.762 8.1 13.794 7.78L12.366 12.16H11.334L9.894 7.78C9.934 8.092 9.97 8.456 10.002 8.872C10.042 9.28 10.078 9.716 10.11 10.18C10.142 10.636 10.166 11.092 10.182 11.548C10.206 12.004 10.218 12.428 10.218 12.82V16H9.162Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-2\"><rect fill=\"var(--color-icon-background)\" stroke=\"var(--color-ts-module)\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"6\"></rect><path d=\"M9.162 16V7.24H10.578L11.514 10.072C11.602 10.328 11.674 10.584 11.73 10.84C11.794 11.088 11.842 11.28 11.874 11.416C11.906 11.28 11.954 11.088 12.018 10.84C12.082 10.584 12.154 10.324 12.234 10.06L13.122 7.24H14.538V16H13.482V12.82C13.482 12.468 13.49 12.068 13.506 11.62C13.53 11.172 13.558 10.716 13.59 10.252C13.622 9.78 13.654 9.332 13.686 8.908C13.726 8.476 13.762 8.1 13.794 7.78L12.366 12.16H11.334L9.894 7.78C9.934 8.092 9.97 8.456 10.002 8.872C10.042 9.28 10.078 9.716 10.11 10.18C10.142 10.636 10.166 11.092 10.182 11.548C10.206 12.004 10.218 12.428 10.218 12.82V16H9.162Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-4\"><rect fill=\"var(--color-icon-background)\" stroke=\"var(--color-ts-namespace)\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"6\"></rect><path d=\"M9.33 16V7.24H10.77L13.446 14.74C13.43 14.54 13.41 14.296 13.386 14.008C13.37 13.712 13.354 13.404 13.338 13.084C13.33 12.756 13.326 12.448 13.326 12.16V7.24H14.37V16H12.93L10.266 8.5C10.282 8.692 10.298 8.936 10.314 9.232C10.33 9.52 10.342 9.828 10.35 10.156C10.366 10.476 10.374 10.784 10.374 11.08V16H9.33Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-8\"><rect fill=\"var(--color-icon-background)\" stroke=\"var(--color-ts-enum)\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"6\"></rect><path d=\"M9.45 16V7.24H14.49V8.224H10.518V10.936H14.07V11.908H10.518V15.016H14.49V16H9.45Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-16\"><rect fill=\"var(--color-icon-background)\" stroke=\"#FF984D\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"12\"></rect><path d=\"M9.354 16V7.24H12.174C12.99 7.24 13.638 7.476 14.118 7.948C14.606 8.412 14.85 9.036 14.85 9.82C14.85 10.604 14.606 11.232 14.118 11.704C13.638 12.168 12.99 12.4 12.174 12.4H10.434V16H9.354ZM10.434 11.428H12.174C12.646 11.428 13.022 11.284 13.302 10.996C13.59 10.7 13.734 10.308 13.734 9.82C13.734 9.324 13.59 8.932 13.302 8.644C13.022 8.356 12.646 8.212 12.174 8.212H10.434V11.428Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-32\"><rect fill=\"var(--color-icon-background)\" stroke=\"var(--color-ts-variable)\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"6\"></rect><path d=\"M11.106 16L8.85 7.24H9.966L11.454 13.192C11.558 13.608 11.646 13.996 11.718 14.356C11.79 14.708 11.842 14.976 11.874 15.16C11.906 14.976 11.954 14.708 12.018 14.356C12.09 13.996 12.178 13.608 12.282 13.192L13.758 7.24H14.85L12.582 16H11.106Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-64\"><rect fill=\"var(--color-icon-background)\" stroke=\"var(--color-ts-function)\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"6\"></rect><path d=\"M9.39 16V7.24H14.55V8.224H10.446V11.128H14.238V12.112H10.47V16H9.39Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-128\"><rect fill=\"var(--color-icon-background)\" stroke=\"var(--color-ts-class)\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"6\"></rect><path d=\"M11.898 16.1201C11.098 16.1201 10.466 15.8961 10.002 15.4481C9.53803 15.0001 9.30603 14.3841 9.30603 13.6001V9.64012C9.30603 8.85612 9.53803 8.24012 10.002 7.79212C10.466 7.34412 11.098 7.12012 11.898 7.12012C12.682 7.12012 13.306 7.34812 13.77 7.80412C14.234 8.25212 14.466 8.86412 14.466 9.64012H13.386C13.386 9.14412 13.254 8.76412 12.99 8.50012C12.734 8.22812 12.37 8.09212 11.898 8.09212C11.426 8.09212 11.054 8.22412 10.782 8.48812C10.518 8.75212 10.386 9.13212 10.386 9.62812V13.6001C10.386 14.0961 10.518 14.4801 10.782 14.7521C11.054 15.0161 11.426 15.1481 11.898 15.1481C12.37 15.1481 12.734 15.0161 12.99 14.7521C13.254 14.4801 13.386 14.0961 13.386 13.6001H14.466C14.466 14.3761 14.234 14.9921 13.77 15.4481C13.306 15.8961 12.682 16.1201 11.898 16.1201Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-256\"><rect fill=\"var(--color-icon-background)\" stroke=\"var(--color-ts-interface)\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"6\"></rect><path d=\"M9.51 16V15.016H11.298V8.224H9.51V7.24H14.19V8.224H12.402V15.016H14.19V16H9.51Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-512\"><rect fill=\"var(--color-icon-background)\" stroke=\"#4D7FFF\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"12\"></rect><path d=\"M11.898 16.1201C11.098 16.1201 10.466 15.8961 10.002 15.4481C9.53803 15.0001 9.30603 14.3841 9.30603 13.6001V9.64012C9.30603 8.85612 9.53803 8.24012 10.002 7.79212C10.466 7.34412 11.098 7.12012 11.898 7.12012C12.682 7.12012 13.306 7.34812 13.77 7.80412C14.234 8.25212 14.466 8.86412 14.466 9.64012H13.386C13.386 9.14412 13.254 8.76412 12.99 8.50012C12.734 8.22812 12.37 8.09212 11.898 8.09212C11.426 8.09212 11.054 8.22412 10.782 8.48812C10.518 8.75212 10.386 9.13212 10.386 9.62812V13.6001C10.386 14.0961 10.518 14.4801 10.782 14.7521C11.054 15.0161 11.426 15.1481 11.898 15.1481C12.37 15.1481 12.734 15.0161 12.99 14.7521C13.254 14.4801 13.386 14.0961 13.386 13.6001H14.466C14.466 14.3761 14.234 14.9921 13.77 15.4481C13.306 15.8961 12.682 16.1201 11.898 16.1201Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-1024\"><rect fill=\"var(--color-icon-background)\" stroke=\"#FF984D\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"12\"></rect><path d=\"M9.354 16V7.24H12.174C12.99 7.24 13.638 7.476 14.118 7.948C14.606 8.412 14.85 9.036 14.85 9.82C14.85 10.604 14.606 11.232 14.118 11.704C13.638 12.168 12.99 12.4 12.174 12.4H10.434V16H9.354ZM10.434 11.428H12.174C12.646 11.428 13.022 11.284 13.302 10.996C13.59 10.7 13.734 10.308 13.734 9.82C13.734 9.324 13.59 8.932 13.302 8.644C13.022 8.356 12.646 8.212 12.174 8.212H10.434V11.428Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-2048\"><rect fill=\"var(--color-icon-background)\" stroke=\"#FF4DB8\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"12\"></rect><path d=\"M9.162 16V7.24H10.578L11.514 10.072C11.602 10.328 11.674 10.584 11.73 10.84C11.794 11.088 11.842 11.28 11.874 11.416C11.906 11.28 11.954 11.088 12.018 10.84C12.082 10.584 12.154 10.324 12.234 10.06L13.122 7.24H14.538V16H13.482V12.82C13.482 12.468 13.49 12.068 13.506 11.62C13.53 11.172 13.558 10.716 13.59 10.252C13.622 9.78 13.654 9.332 13.686 8.908C13.726 8.476 13.762 8.1 13.794 7.78L12.366 12.16H11.334L9.894 7.78C9.934 8.092 9.97 8.456 10.002 8.872C10.042 9.28 10.078 9.716 10.11 10.18C10.142 10.636 10.166 11.092 10.182 11.548C10.206 12.004 10.218 12.428 10.218 12.82V16H9.162Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-4096\"><rect fill=\"var(--color-icon-background)\" stroke=\"var(--color-ts-function)\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"6\"></rect><path d=\"M9.39 16V7.24H14.55V8.224H10.446V11.128H14.238V12.112H10.47V16H9.39Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-8192\"><rect fill=\"var(--color-icon-background)\" stroke=\"#FF984D\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"12\"></rect><path d=\"M9.354 16V7.24H12.174C12.99 7.24 13.638 7.476 14.118 7.948C14.606 8.412 14.85 9.036 14.85 9.82C14.85 10.604 14.606 11.232 14.118 11.704C13.638 12.168 12.99 12.4 12.174 12.4H10.434V16H9.354ZM10.434 11.428H12.174C12.646 11.428 13.022 11.284 13.302 10.996C13.59 10.7 13.734 10.308 13.734 9.82C13.734 9.324 13.59 8.932 13.302 8.644C13.022 8.356 12.646 8.212 12.174 8.212H10.434V11.428Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-16384\"><rect fill=\"var(--color-icon-background)\" stroke=\"#4D7FFF\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"12\"></rect><path d=\"M11.898 16.1201C11.098 16.1201 10.466 15.8961 10.002 15.4481C9.53803 15.0001 9.30603 14.3841 9.30603 13.6001V9.64012C9.30603 8.85612 9.53803 8.24012 10.002 7.79212C10.466 7.34412 11.098 7.12012 11.898 7.12012C12.682 7.12012 13.306 7.34812 13.77 7.80412C14.234 8.25212 14.466 8.86412 14.466 9.64012H13.386C13.386 9.14412 13.254 8.76412 12.99 8.50012C12.734 8.22812 12.37 8.09212 11.898 8.09212C11.426 8.09212 11.054 8.22412 10.782 8.48812C10.518 8.75212 10.386 9.13212 10.386 9.62812V13.6001C10.386 14.0961 10.518 14.4801 10.782 14.7521C11.054 15.0161 11.426 15.1481 11.898 15.1481C12.37 15.1481 12.734 15.0161 12.99 14.7521C13.254 14.4801 13.386 14.0961 13.386 13.6001H14.466C14.466 14.3761 14.234 14.9921 13.77 15.4481C13.306 15.8961 12.682 16.1201 11.898 16.1201Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-32768\"><rect fill=\"var(--color-icon-background)\" stroke=\"#FF984D\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"12\"></rect><path d=\"M9.354 16V7.24H12.174C12.99 7.24 13.638 7.476 14.118 7.948C14.606 8.412 14.85 9.036 14.85 9.82C14.85 10.604 14.606 11.232 14.118 11.704C13.638 12.168 12.99 12.4 12.174 12.4H10.434V16H9.354ZM10.434 11.428H12.174C12.646 11.428 13.022 11.284 13.302 10.996C13.59 10.7 13.734 10.308 13.734 9.82C13.734 9.324 13.59 8.932 13.302 8.644C13.022 8.356 12.646 8.212 12.174 8.212H10.434V11.428Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-65536\"><rect fill=\"var(--color-icon-background)\" stroke=\"var(--color-ts-type-alias)\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"6\"></rect><path d=\"M11.31 16V8.224H8.91V7.24H14.79V8.224H12.39V16H11.31Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-131072\"><rect fill=\"var(--color-icon-background)\" stroke=\"var(--color-ts-type-alias)\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"6\"></rect><path d=\"M11.31 16V8.224H8.91V7.24H14.79V8.224H12.39V16H11.31Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-262144\"><rect fill=\"var(--color-icon-background)\" stroke=\"#FF4D4D\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"12\"></rect><path d=\"M8.85 16L11.13 7.24H12.582L14.85 16H13.758L13.182 13.672H10.53L9.954 16H8.85ZM10.746 12.76H12.954L12.282 10.06C12.154 9.548 12.054 9.12 11.982 8.776C11.91 8.432 11.866 8.208 11.85 8.104C11.834 8.208 11.79 8.432 11.718 8.776C11.646 9.12 11.546 9.544 11.418 10.048L10.746 12.76Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-524288\"><rect fill=\"var(--color-icon-background)\" stroke=\"#FF4D4D\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"12\"></rect><path d=\"M8.85 16L11.13 7.24H12.582L14.85 16H13.758L13.182 13.672H10.53L9.954 16H8.85ZM10.746 12.76H12.954L12.282 10.06C12.154 9.548 12.054 9.12 11.982 8.776C11.91 8.432 11.866 8.208 11.85 8.104C11.834 8.208 11.79 8.432 11.718 8.776C11.646 9.12 11.546 9.544 11.418 10.048L10.746 12.76Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-1048576\"><rect fill=\"var(--color-icon-background)\" stroke=\"#FF4D4D\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"12\"></rect><path d=\"M8.85 16L11.13 7.24H12.582L14.85 16H13.758L13.182 13.672H10.53L9.954 16H8.85ZM10.746 12.76H12.954L12.282 10.06C12.154 9.548 12.054 9.12 11.982 8.776C11.91 8.432 11.866 8.208 11.85 8.104C11.834 8.208 11.79 8.432 11.718 8.776C11.646 9.12 11.546 9.544 11.418 10.048L10.746 12.76Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-2097152\"><rect fill=\"var(--color-icon-background)\" stroke=\"var(--color-ts-type-alias)\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"6\"></rect><path d=\"M11.31 16V8.224H8.91V7.24H14.79V8.224H12.39V16H11.31Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-4194304\"><rect fill=\"var(--color-icon-background)\" stroke=\"#FF4D82\" stroke-width=\"1.5\" x=\"1\" y=\"1\" width=\"22\" height=\"22\" rx=\"12\"></rect><path d=\"M10.354 17V8.24H13.066C13.586 8.24 14.042 8.348 14.434 8.564C14.826 8.772 15.13 9.064 15.346 9.44C15.562 9.816 15.67 10.256 15.67 10.76C15.67 11.352 15.514 11.86 15.202 12.284C14.898 12.708 14.482 13 13.954 13.16L15.79 17H14.518L12.838 13.28H11.434V17H10.354ZM11.434 12.308H13.066C13.514 12.308 13.874 12.168 14.146 11.888C14.418 11.6 14.554 11.224 14.554 10.76C14.554 10.288 14.418 9.912 14.146 9.632C13.874 9.352 13.514 9.212 13.066 9.212H11.434V12.308Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-chevronDown\"><path d=\"M4.93896 8.531L12 15.591L19.061 8.531L16.939 6.409L12 11.349L7.06098 6.409L4.93896 8.531Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-chevronSmall\"><path d=\"M1.5 5.50969L8 11.6609L14.5 5.50969L12.5466 3.66086L8 7.96494L3.45341 3.66086L1.5 5.50969Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-menu\"><rect x=\"1\" y=\"3\" width=\"14\" height=\"2\" fill=\"var(--color-text)\"></rect><rect x=\"1\" y=\"7\" width=\"14\" height=\"2\" fill=\"var(--color-text)\"></rect><rect x=\"1\" y=\"11\" width=\"14\" height=\"2\" fill=\"var(--color-text)\"></rect></g><g id=\"icon-search\"><path d=\"M15.7824 13.833L12.6666 10.7177C12.5259 10.5771 12.3353 10.499 12.1353 10.499H11.6259C12.4884 9.39596 13.001 8.00859 13.001 6.49937C13.001 2.90909 10.0914 0 6.50048 0C2.90959 0 0 2.90909 0 6.49937C0 10.0896 2.90959 12.9987 6.50048 12.9987C8.00996 12.9987 9.39756 12.4863 10.5008 11.6239V12.1332C10.5008 12.3332 10.5789 12.5238 10.7195 12.6644L13.8354 15.7797C14.1292 16.0734 14.6042 16.0734 14.8948 15.7797L15.7793 14.8954C16.0731 14.6017 16.0731 14.1267 15.7824 13.833ZM6.50048 10.499C4.29094 10.499 2.50018 8.71165 2.50018 6.49937C2.50018 4.29021 4.28781 2.49976 6.50048 2.49976C8.71001 2.49976 10.5008 4.28708 10.5008 6.49937C10.5008 8.70852 8.71314 10.499 6.50048 10.499Z\" fill=\"var(--color-text)\"></path></g><g id=\"icon-anchor\"><g stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5\"></path><path d=\"M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5\"></path></g></g></svg></body></html>",
  "embeddings": []
}
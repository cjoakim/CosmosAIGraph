{
  "libtype": "npm",
  "libname": "listen",
  "url": "http://maxantoni.de/projects/listen.js/",
  "html": "<!DOCTYPE html><html><head><meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"robots\" content=\"index,follow\"><meta name=\"description\" content=\"Listen.js is an open source JavaScript library that makes it easy to wait for mutliple Node-style callbacks and process the results\"><meta name=\"copyright\" content=\"\u00a9 2013 Maximilian Antoni\"><title>listen.js - Wait for multiple callbacks - @mantoni</title><link href=\"../../css/bootstrap.min.css\" rel=\"stylesheet\" media=\"screen\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"http://maxantoni.de/blog/feed.rss\" /><style type=\"text/css\">  body {    padding-top: 60px;  }  h3 {    padding-top: 30px;  }  code {    color: #333;  }  .container-narrow {    margin: 0 auto;    max-width: 700px;  }  .footer {    text-align: center;    padding: 20px 0 40px;  }  ul.inline li {    height: 22px;    vertical-align: bottom;  }</style><link href=\"../../css/bootstrap-responsive.min.css\" rel=\"stylesheet\" media=\"screen\"></head><body><div class=\"navbar navbar-fixed-top\">  <div class=\"navbar-inner\">    <div class=\"container-narrow\">      <ul class=\"nav\">        <li>          <a href=\"../../\"><i class=\"icon-home\"></i> About</a>        </li>        <li>          <a href=\"../../blog/\"><i class=\"icon-bullhorn\"></i> Blog</a>        </li>        <li class=\"active\">          <a href=\"../../projects/\"><i class=\"icon-list\"></i> Projects</a>        </li>      </ul>    </div>  </div></div>  <div class=\"container-narrow\"><a href=\"https://github.com/mantoni/listen.js\"><img style=\"position: absolute; top: 0px; right: 0; border: 0; z-index: 1040;\"src=\"../../img/forkme.png\" alt=\"Fork listen.js on GitHub\"></a><div class=\"page-header\">  <h1>listen.js <small>Wait for multiple callbacks</small>    <a href=\"http://travis-ci.org/mantoni/listen.js\"><img src=\"https:&#x2F;&#x2F;secure.travis-ci.org&#x2F;mantoni&#x2F;listen.js.png?branch=master\" alt=\"Build Status\">    </a>  </h1></div><ul class=\"nav nav-tabs\">  <li class=\"active\">    <a href=\"index.html\">Installation &amp; Usage</a>  </li>  <li>    <a href=\"documentation.html\">Documentation</a>  </li>  <li>    <a href=\"examples.html\">Examples</a>  </li>  <li>    <a href=\"tests.html\">Test Cases</a>  </li></ul><p class=\"lead\">Listen.js is an open source JavaScript library that makes it easy to wait for mutliple Node-style callbacks and process the results</p><div class=\"row-fluid\">    <h3>Install for Node with npm</h3><pre><code>npm install listen</code></pre><h3>Download for browsers</h3><p>Standalone browser package can be <a href=\"http://maxantoni.de/listen.js/\">downloadedhere</a>.</p><p>You can also use npm and bundle it with your application using<a href=\"http://browserify.org\">Browserify</a>.</p><h3>Usage</h3><pre><code class=\"lang-js\">var listen = require(&#39;listen&#39;);var listener = listen();var callbackA = listener();var callbackB = listener();/* * Do async stuff with callbacks. * * Callbacks follow the Node.js convention. They expect an error or null as * the first argument and an optional value as the second: * * Fail: callback(new Error(&#39;ouch!&#39;)); * Return: callback(null, &#39;some return value&#39;); */listener.then(function (err, values) {  /*   * err    - 1) null if no callback err&#39;d   *          2) the error of the callback that err&#39;d   *          3) an error with name ErrorList wrapping multiple errors   *   * values - The non-undefined return values from all callbacks in order of   *          callback creation   */});</code></pre><h3>Resources</h3><ul><li><a href=\"documentation.html\">Documentation</a></li><li><a href=\"examples.html\">Examples</a></li><li><a href=\"https://github.com/mantoni/listen.js\">Source code</a></li><li><a href=\"https://github.com/mantoni/listen.js/issues\">Issue tracker</a></li></ul>    <hr>    <ul class=\"inline\">      <li class=\"muted\">        <small>Last updated: 09. Jun 2013</small>      </li>      <li>        <a href=\"https://twitter.com/share\" class=\"twitter-share-button\" data-via=\"mantoni\" data-text=\"listen.js\">Tweet</a>        <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>      </li>      <li>        <div id=\"fb-root\"></div>        <div id=\"fb-root\"></div>        <script>(function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(d.getElementById(id)) return; js = d.createElement(s); js.id = id; js.src = \"//connect.facebook.net/de_DE/all.js#xfbml=1\"; fjs.parentNode.insertBefore(js, fjs); }(document, 'script', 'facebook-jssdk'));</script>        <div class=\"fb-like\" data-send=\"false\" data-layout=\"button_count\" data-width=\"450\" data-show-faces=\"false\"></div>      </li>      <li>        <div class=\"g-plusone\" data-size=\"medium\" data-annotation=\"bubble\" data-width=\"100\"></div>        <script type=\"text/javascript\">(function() {var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;po.src = 'https://apis.google.com/js/plusone.js';var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);})();</script>      </li>    </ul><ul class=\"pager\">  <li class=\"previous\">    <a href=\"../checked.js/\">&larr; checked.js</a>  </li>  <li class=\"next\">    <a href=\"../hub.js/\">hub.js &rarr;</a>  <li></ul></div><hr></div>  <div class=\"footer\">    <small>&copy; 2013 Maximilian Antoni \u2022      Powered by <a href=\"https://github.com/mantoni/blogdown\">Blogdown</a>      and <a href=\"http://twitter.github.io/bootstrap/\">Bootstrap</a></small>  </div>  <script type=\"text/javascript\">    var _gaq = _gaq || [];    _gaq.push(['_setAccount', 'UA-126897-1']);    _gaq.push(['_trackPageview']);    (function() {      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);    })();  </script></body></html>",
  "embeddings": []
}
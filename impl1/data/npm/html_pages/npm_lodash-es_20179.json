{
  "libtype": "npm",
  "libname": "lodash-es",
  "url": "https://lodash.com/custom-builds",
  "html": "<!doctype html><html class=custom-builds lang=en><meta charset=utf-8><meta content=#3492ff name=theme-color><meta content=\"width=device-width,initial-scale=1\" name=viewport><title>Lodash custom builds</title><link href=/icons/apple-touch-180x180.png rel=apple-touch-icon sizes=180x180><link href=https://github.com/lodash/lodash/commits/master.atom rel=feed type=application/atom+xml><link href=/icons/favicon-32x32.png rel=icon sizes=32x32 type=image/png><link href=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAABAAAAAQAQMAAAAlPW0iAAAABlBMVEVMaXExk//ImxjuAAAAAXRSTlMAQObYZgAAAA9JREFUeAFjIBLU/2MC0wALJgGAaiAmLQAAAABJRU5ErkJggg==\" rel=icon sizes=16x16 type=image/png><link href=/manifest.webmanifest rel=manifest><link href=/icons/safari-pinned-tab-16x16.svg rel=mask-icon color=#3492ff><link href=/docs/4.17.15 rel=prerender pr=1.0><link href=/assets/css/main.css rel=stylesheet><noscript><link href=/vendor/cdn.jsdelivr.net/fontawesome/4.7.0/css/font-awesome.min.css rel=stylesheet></noscript><script async src=/assets/js/boot.js></script><body class=layout-default><header><div class=container><div class=\"header-section logo-section\"><div class=logo><a href=/ title=Lodash>Lodash</a></div><div class=header-group><h1>Lodash</h1><h2>A modern JavaScript utility library delivering modularity, performance & extras.</h2></div></div><div class=header-section><a href=/docs/ class=\"btn primary\">Documentation</a> <a href=https://github.com/lodash/lodash/wiki/FP-Guide class=btn>FP Guide</a></div></div></header><div class=\"container main\"><section><h1>Custom Builds</h1><p>Custom builds make it easy to create lightweight versions of Lodash containing only the features you need. To top it off, we handle all function dependency & alias mapping for you. Review the <a href=https://github.com/lodash/lodash/wiki/Build-Differences>build differences</a> & pick the one that\u2019s right for you.<p>The Lodash command-line interface is available when <a href=https://npmjs.org/package/lodash-cli><code>lodash-cli</code></a> is installed as a global package:<div class=\"highlight shell\"><pre><div>$\u00a0npm\u00a0i\u00a0-g\u00a0npm</div><div>$\u00a0npm\u00a0i\u00a0-g\u00a0lodash-cli</div><div>$\u00a0lodash\u00a0-h</div></pre></div></section><section><h2>Build Types</h2><ul class=chevron><li>Core builds, that are 4 kB, are created using the <code>core</code> modifier.<div class=\"highlight shell\"><pre>lodash\u00a0core</pre></div><li>Strict builds, with <a href=http://www.ecma-international.org/ecma-262/7.0/#sec-strict-mode-of-ecmascript>ES strict mode</a> enabled, are created using the <code>strict</code> modifier.<div class=\"highlight shell\"><pre>lodash\u00a0strict</pre></div><li>Modularized builds, with Lodash split into modules, are created using the <code>modularize</code> modifier.<div class=\"highlight shell\"><pre>lodash\u00a0modularize</pre></div></ul></section><section><h2>Build Commands:</h2><ul class=chevron><li>Use the <code>category</code> command to pass comma separated categories of functions to include in the build. <span class=rwd-line>Valid categories are <em>\u201carray\u201d</em>, <em>\u201ccollection\u201d</em>, <em>\u201cdate\u201d</em>, <em>\u201cfunction\u201d</em>, <em>\u201clang\u201d</em>, <em>\u201cobject\u201d</em>, <em>\u201cnumber\u201d</em>, <em>\u201cseq\u201d</em>, <em>\u201cstring\u201d</em>, & <em>\u201cutil\u201d</em>.</span><div class=\"highlight shell\"><pre>lodash\u00a0category=collection,function</pre></div><li>Use the <code>exports</code> command to pass comma separated names of ways to export the <code>lodash</code> function. <span class=rwd-line>Valid exports are <em>\u201camd\u201d</em>, <em>\u201ccommonjs\u201d</em>, <em>\u201ces\u201d</em>, <em>\u201cglobal\u201d</em>, <em>\u201cnode\u201d</em>, <em>\u201cnpm\u201d</em>, <em>\u201cnone\u201d</em>, & <em>\u201cumd\u201d</em>.</span><div class=\"highlight shell\"><pre>lodash\u00a0exports=amd,node</pre></div><li>Use the <code>iife</code> command to specify code to replace the <a href=http://benalman.com/news/2010/11/immediately-invoked-function-expression/ >IIFE</a> that wraps Lodash.<div class=\"highlight shell\"><pre>lodash\u00a0iife=\"\\!function(window,undefined){%output%}(this)\"</pre></div><li>Use the <code>include</code> command to pass comma separated names of functions to include in the build.<div class=\"highlight shell\"><pre>lodash\u00a0include=each,filter,map</pre></div><li>Use the <code>minus</code> command to pass comma separated function/category names to remove from the build.<div class=\"highlight shell\"><pre>lodash\u00a0minus=result,shuffle</pre></div><li>Use the <code>plus</code> command to pass comma separated function/category names to add to the build.<div class=\"highlight shell\"><pre>lodash\u00a0category=array\u00a0plus=random,template</pre></div><li>Use the <code>template</code> command to pass the file path pattern used to match template files to precompile. <span class=rwd-line><strong>Note:</strong> Precompiled templates are assigned to the <code>_.<span class=me1>templates</span></code> object.</span><div class=\"highlight shell\"><pre>lodash\u00a0template=\"./*.jst\"</pre></div><li>Use the <code>settings</code> command to pass template settings used when precompiling templates.<div class=\"highlight shell\"><pre>lodash\u00a0settings=\"{interpolate:/\\{\\{([sS]+?)\\}\\}/g}\"</pre></div><li>Use the <code>moduleId</code> command to specify the AMD module ID for Lodash or the module ID used to include Lodash in compiled templates. <span class=rwd-line>Use \u201cnone\u201d as the module ID to create compiled templates without a dependency on Lodash.</span><div class=\"highlight shell\"><pre>lodash\u00a0moduleId=underscore</pre></div></ul></section><section><h2>Notes:</h2><ul class=chevron><li>The <code>exports</code> values <em>\u201ces\u201d</em> & <em>\u201cnpm\u201d</em> may only be used in conjunction with the <code>modularize</code> command<li>The <code>modularize</code> command uses the first <code>exports</code> values as its module format, ignoring subsequent values<li>Unless specified by <code>-o</code> or <code>--output</code> all files created are saved to the current working directory</ul><p>The following options are also supported:<ul class=nowrap><li><code>-c</code>, <code>--stdout</code> ................ Write output to standard output<li><code>-d</code>, <code>--development</code> ..... Write only the non-minified development output<li><code>-h</code>, <code>--help</code> .................... Display help information<li><code>-m</code>, <code>--source-map</code> ....... Generate a source map using an optional source map URL<li><code>-o</code>, <code>--output</code> ................ Write output to a given path/filename<li><code>-p</code>, <code>--production</code> ....... Write only the minified production output<li><code>-s</code>, <code>--silent</code> ............... Skip status updates normally logged to the console<li><code>-V</code>, <code>--version</code> ............. Output current version of Lodash</ul></section></div><footer><div class=container><p>Site made with <i aria-label=love class=\"fa fa-heart\"></i> by <a href=https://twitter.com/veksenn>@veksenn</a> & <a href=https://twitter.com/ZTHall>@zthall</a>.<p>Maintained by the <a href=https://github.com/orgs/lodash/people>core team</a> with help from <a href=https://github.com/lodash/lodash/graphs/contributors>our contributors</a>.</div></footer><script async src=/vendor/cdn.jsdelivr.net/npm/lodash@4.17.15/lodash.min.js></script>",
  "embeddings": []
}
{
  "libtype": "npm",
  "libname": "json-schema-ref-parser",
  "url": "https://apitools.dev/json-schema-ref-parser/",
  "html": "<!DOCTYPE html><html lang=\"en-US\"><head>  <meta charset='utf-8'>  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">      <!-- Google Analytics -->    <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-68102273-2\"></script>    <script>      window.dataLayer = window.dataLayer || [];      function gtag(){dataLayer.push(arguments);}      gtag('js', new Date());      gtag('config', 'UA-68102273-2');    </script>    <link rel=\"stylesheet\" href=\"/css/style.css?v=3\" media=\"screen\" type=\"text/css\">  <link rel=\"stylesheet\" href=\"/css/print.css\" media=\"print\" type=\"text/css\">  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\">  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\">  <!--[if lt IE 9]>    <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>  <![endif]--><!-- Begin Jekyll SEO tag v2.8.0 --><title>JSON Schema $Ref Parser | Parse, Resolve, and Dereference JSON Schema $ref pointers in Node and browsers</title><meta name=\"generator\" content=\"Jekyll v3.9.5\" /><meta property=\"og:title\" content=\"JSON Schema $Ref Parser\" /><meta property=\"og:locale\" content=\"en_US\" /><meta name=\"description\" content=\"Parse, Resolve, and Dereference JSON Schema $ref pointers in Node and browsers\" /><meta property=\"og:description\" content=\"Parse, Resolve, and Dereference JSON Schema $ref pointers in Node and browsers\" /><link rel=\"canonical\" href=\"https://apitools.dev/json-schema-ref-parser/\" /><meta property=\"og:url\" content=\"https://apitools.dev/json-schema-ref-parser/\" /><meta property=\"og:site_name\" content=\"JSON Schema $Ref Parser\" /><meta property=\"og:image\" content=\"https://apitools.dev/img/logos/card.png\" /><meta property=\"og:type\" content=\"website\" /><meta name=\"twitter:card\" content=\"summary\" /><meta property=\"twitter:image\" content=\"https://apitools.dev/img/logos/card.png\" /><meta property=\"twitter:title\" content=\"JSON Schema $Ref Parser\" /><meta name=\"twitter:site\" content=\"@APIDevTools\" /><meta name=\"twitter:creator\" content=\"@APIDevTools\" /><script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"WebSite\",\"description\":\"Parse, Resolve, and Dereference JSON Schema $ref pointers in Node and browsers\",\"headline\":\"JSON Schema $Ref Parser\",\"image\":\"https://apitools.dev/img/logos/card.png\",\"name\":\"JSON Schema $Ref Parser\",\"publisher\":{\"@type\":\"Organization\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https://apitools.dev/img/logos/logo.png\"}},\"url\":\"https://apitools.dev/json-schema-ref-parser/\"}</script><!-- End Jekyll SEO tag --></head>  <body>    <header>  <div class=\"inner\">    <a href=\"https://apitools.dev/json-schema-ref-parser/\">      <h1>JSON Schema $Ref Parser</h1>    </a>    <h2>Parse, Resolve, and Dereference JSON Schema $ref pointers in Node and browsers</h2>    <div class=\"buttons\">      <a href=\"https://apitools.dev/\" class=\"button logo-button\"><span>API Dev Tools</span></a>              <a href=\"https://github.com/APIDevTools/json-schema-ref-parser\" class=\"button github-button\"><small>View project on</small> GitHub</a>                </div>  </div></header><div id=\"content-wrapper\" class=\"inner\">  <main id=\"main-content\">    <h1 id=\"json-schema-ref-parser\">JSON Schema $Ref Parser</h1><h4 id=\"parse-resolve-and-dereference-json-schema-ref-pointers\">Parse, Resolve, and Dereference JSON Schema $ref pointers</h4><p><a href=\"https://github.com/APIDevTools/json-schema-ref-parser/actions\"><img src=\"https://github.com/APIDevTools/json-schema-ref-parser/workflows/CI-CD/badge.svg?branch=master\" alt=\"Build Status\" /></a><a href=\"https://coveralls.io/github/APIDevTools/json-schema-ref-parser\"><img src=\"https://coveralls.io/repos/github/APIDevTools/json-schema-ref-parser/badge.svg?branch=master\" alt=\"Coverage Status\" /></a></p><p><a href=\"https://www.npmjs.com/package/@apidevtools/json-schema-ref-parser\"><img src=\"https://img.shields.io/npm/v/@apidevtools/json-schema-ref-parser.svg\" alt=\"npm\" /></a><a href=\"LICENSE\"><img src=\"https://img.shields.io/npm/l/@apidevtools/json-schema-ref-parser.svg\" alt=\"License\" /></a><a href=\"https://plant.treeware.earth/APIDevTools/json-schema-ref-parser\"><img src=\"https://img.shields.io/badge/Treeware-%F0%9F%8C%B3-lightgreen\" alt=\"Buy us a tree\" /></a></p><h2 id=\"the-problem\">The Problem:</h2><p>You\u2019ve got a JSON Schema with <code class=\"language-plaintext highlighter-rouge\">$ref</code> pointers to other files and/or URLs.  Maybe you know all the referenced files ahead of time.  Maybe you don\u2019t.  Maybe some are local files, and others are remote URLs.  Maybe they are a mix of JSON and YAML format.  Maybe some of the files contain cross-references to each other.</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span>  <span class=\"dl\">\"</span><span class=\"s2\">definitions</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>    <span class=\"dl\">\"</span><span class=\"s2\">person</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>      <span class=\"c1\">// references an external file</span>      <span class=\"dl\">\"</span><span class=\"s2\">$ref</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">schemas/people/Bruce-Wayne.json</span><span class=\"dl\">\"</span>    <span class=\"p\">},</span>    <span class=\"dl\">\"</span><span class=\"s2\">place</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>      <span class=\"c1\">// references a sub-schema in an external file</span>      <span class=\"dl\">\"</span><span class=\"s2\">$ref</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">schemas/places.yaml#/definitions/Gotham-City</span><span class=\"dl\">\"</span>    <span class=\"p\">},</span>    <span class=\"dl\">\"</span><span class=\"s2\">thing</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>      <span class=\"c1\">// references a URL</span>      <span class=\"dl\">\"</span><span class=\"s2\">$ref</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">http://wayne-enterprises.com/things/batmobile</span><span class=\"dl\">\"</span>    <span class=\"p\">},</span>    <span class=\"dl\">\"</span><span class=\"s2\">color</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>      <span class=\"c1\">// references a value in an external file via an internal reference</span>      <span class=\"dl\">\"</span><span class=\"s2\">$ref</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#/definitions/thing/properties/colors/black-as-the-night</span><span class=\"dl\">\"</span>    <span class=\"p\">}</span>  <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><h2 id=\"the-solution\">The Solution:</h2><p>JSON Schema $Ref Parser is a full <a href=\"https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03\">JSON Reference</a> and <a href=\"https://tools.ietf.org/html/rfc6901\">JSON Pointer</a> implementation that crawls even the most complex <a href=\"http://json-schema.org/latest/json-schema-core.html\">JSON Schemas</a> and gives you simple, straightforward JavaScript objects.</p><ul>  <li>Use <strong>JSON</strong> or <strong>YAML</strong> schemas \u2014 or even a mix of both!</li>  <li>Supports <code class=\"language-plaintext highlighter-rouge\">$ref</code> pointers to external files and URLs, as well as <a href=\"https://apitools.dev/json-schema-ref-parser/docs/plugins/resolvers.html\">custom sources</a> such as databases</li>  <li>Can <a href=\"https://apitools.dev/json-schema-ref-parser/docs/ref-parser.html#bundlepath-options-callback\">bundle</a> multiple files into a single schema that only has <em>internal</em> <code class=\"language-plaintext highlighter-rouge\">$ref</code> pointers</li>  <li>Can <a href=\"https://apitools.dev/json-schema-ref-parser/docs/ref-parser.html#dereferencepath-options-callback\">dereference</a> your schema, producing a plain-old JavaScript object that\u2019s easy to work with</li>  <li>Supports <a href=\"https://apitools.dev/json-schema-ref-parser/docs/#circular-refs\">circular references</a>, nested references, back-references, and cross-references between files</li>  <li>Maintains object reference equality \u2014 <code class=\"language-plaintext highlighter-rouge\">$ref</code> pointers to the same value always resolve to the same object instance</li>  <li>Tested in Node v10, v12, &amp; v14, and all major web browsers on Windows, Mac, and Linux</li></ul><h2 id=\"example\">Example</h2><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">$RefParser</span><span class=\"p\">.</span><span class=\"nx\">dereference</span><span class=\"p\">(</span><span class=\"nx\">mySchema</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">schema</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">{</span>    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span>  <span class=\"p\">}</span>  <span class=\"k\">else</span> <span class=\"p\">{</span>    <span class=\"c1\">// `schema` is just a normal JavaScript object that contains your entire JSON Schema,</span>    <span class=\"c1\">// including referenced files, combined into a single object</span>    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">schema</span><span class=\"p\">.</span><span class=\"nx\">definitions</span><span class=\"p\">.</span><span class=\"nx\">person</span><span class=\"p\">.</span><span class=\"nx\">properties</span><span class=\"p\">.</span><span class=\"nx\">firstName</span><span class=\"p\">);</span>  <span class=\"p\">}</span><span class=\"p\">})</span></code></pre></div></div><p>Or use <code class=\"language-plaintext highlighter-rouge\">async</code>/<code class=\"language-plaintext highlighter-rouge\">await</code> syntax instead. The following example is the same as above:</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">try</span> <span class=\"p\">{</span>  <span class=\"kd\">let</span> <span class=\"nx\">schema</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">$RefParser</span><span class=\"p\">.</span><span class=\"nx\">dereference</span><span class=\"p\">(</span><span class=\"nx\">mySchema</span><span class=\"p\">);</span>  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">schema</span><span class=\"p\">.</span><span class=\"nx\">definitions</span><span class=\"p\">.</span><span class=\"nx\">person</span><span class=\"p\">.</span><span class=\"nx\">properties</span><span class=\"p\">.</span><span class=\"nx\">firstName</span><span class=\"p\">);</span><span class=\"p\">}</span><span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">{</span>  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span><span class=\"p\">}</span></code></pre></div></div><p>For more detailed examples, please see the <a href=\"https://apitools.dev/json-schema-ref-parser/docs/\">API Documentation</a></p><h2 id=\"installation\">Installation</h2><p>Install using <a href=\"https://docs.npmjs.com/about-npm/\">npm</a>:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>npm <span class=\"nb\">install</span> @apidevtools/json-schema-ref-parser</code></pre></div></div><h2 id=\"usage\">Usage</h2><p>When using JSON Schema $Ref Parser in Node.js apps, you\u2019ll probably want to use <strong>CommonJS</strong> syntax:</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">const</span> <span class=\"nx\">$RefParser</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">@apidevtools/json-schema-ref-parser</span><span class=\"dl\">\"</span><span class=\"p\">);</span></code></pre></div></div><p>When using a transpiler such as <a href=\"https://babeljs.io/\">Babel</a> or <a href=\"https://www.typescriptlang.org/\">TypeScript</a>, or a bundler such as <a href=\"https://webpack.js.org/\">Webpack</a> or <a href=\"https://rollupjs.org/\">Rollup</a>, you can use <strong>ECMAScript modules</strong> syntax instead:</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"nx\">$RefParser</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">@apidevtools/json-schema-ref-parser</span><span class=\"dl\">\"</span><span class=\"p\">;</span></code></pre></div></div><p>If you are using Node.js &lt; 18, you\u2019ll need a polyfill for <code class=\"language-plaintext highlighter-rouge\">fetch</code>, like <a href=\"https://github.com/node-fetch/node-fetch\">node-fetch</a>:</p><div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"nx\">fetch</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">node-fetch</span><span class=\"dl\">\"</span><span class=\"p\">;</span><span class=\"nx\">globalThis</span><span class=\"p\">.</span><span class=\"nx\">fetch</span> <span class=\"o\">=</span> <span class=\"nx\">fetch</span><span class=\"p\">;</span></code></pre></div></div><h2 id=\"browser-support\">Browser support</h2><p>JSON Schema $Ref Parser supports recent versions of every major web browser.  Older browsers may require <a href=\"https://babeljs.io/\">Babel</a> and/or <a href=\"https://babeljs.io/docs/en/next/babel-polyfill\">polyfills</a>.</p><p>To use JSON Schema $Ref Parser in a browser, you\u2019ll need to use a bundling tool such as <a href=\"https://webpack.js.org/\">Webpack</a>, <a href=\"https://rollupjs.org/\">Rollup</a>, <a href=\"https://parceljs.org/\">Parcel</a>, or <a href=\"http://browserify.org/\">Browserify</a>. Some bundlers may require a bit of configuration, such as setting <code class=\"language-plaintext highlighter-rouge\">browser: true</code> in <a href=\"https://github.com/rollup/rollup-plugin-node-resolve\">rollup-plugin-resolve</a>.</p><h4 id=\"webpack-5\">Webpack 5</h4><p>Webpack 5 has dropped the default export of node core modules in favour of polyfills, you\u2019ll need to set them up yourself ( after npm-installing them )Edit your <code class=\"language-plaintext highlighter-rouge\">webpack.config.js</code> :</p><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">.</span><span class=\"nx\">fallback</span> <span class=\"o\">=</span> <span class=\"p\">{</span>    <span class=\"dl\">\"</span><span class=\"s2\">path</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"nx\">require</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">path-browserify</span><span class=\"dl\">\"</span><span class=\"p\">),</span>    <span class=\"dl\">'</span><span class=\"s1\">util</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nx\">require</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">util/</span><span class=\"dl\">'</span><span class=\"p\">),</span>    <span class=\"dl\">'</span><span class=\"s1\">fs</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"nx\">require</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">browserify-fs</span><span class=\"dl\">'</span><span class=\"p\">),</span>    <span class=\"dl\">\"</span><span class=\"s2\">buffer</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"nx\">require</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">buffer/</span><span class=\"dl\">\"</span><span class=\"p\">),</span>    <span class=\"dl\">\"</span><span class=\"s2\">http</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"nx\">require</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">stream-http</span><span class=\"dl\">\"</span><span class=\"p\">),</span>    <span class=\"dl\">\"</span><span class=\"s2\">https</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"nx\">require</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">https-browserify</span><span class=\"dl\">\"</span><span class=\"p\">),</span>    <span class=\"dl\">\"</span><span class=\"s2\">url</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"nx\">require</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">url</span><span class=\"dl\">\"</span><span class=\"p\">),</span>  <span class=\"p\">}</span>  <span class=\"nx\">config</span><span class=\"p\">.</span><span class=\"nx\">plugins</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span>    <span class=\"k\">new</span> <span class=\"nx\">webpack</span><span class=\"p\">.</span><span class=\"nx\">ProvidePlugin</span><span class=\"p\">({</span>      <span class=\"na\">Buffer</span><span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"dl\">'</span><span class=\"s1\">buffer</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">Buffer</span><span class=\"dl\">'</span><span class=\"p\">]</span>    <span class=\"p\">})</span>  <span class=\"p\">)</span></code></pre></div></div><h2 id=\"api-documentation\">API Documentation</h2><p>Full API documentation is available <a href=\"https://apitools.dev/json-schema-ref-parser/docs/\">right here</a></p><h2 id=\"contributing\">Contributing</h2><p>I welcome any contributions, enhancements, and bug-fixes.  <a href=\"https://github.com/APIDevTools/json-schema-ref-parser/issues\">Open an issue</a> on GitHub and <a href=\"https://github.com/APIDevTools/json-schema-ref-parser/pulls\">submit a pull request</a>.</p><h4 id=\"buildingtesting\">Building/Testing</h4><p>To build/test the project locally on your computer:</p><ol>  <li>    <p><strong>Clone this repo</strong><br /><code class=\"language-plaintext highlighter-rouge\">git clone https://github.com/APIDevTools/json-schema-ref-parser.git</code></p>  </li>  <li>    <p><strong>Install dependencies</strong><br /><code class=\"language-plaintext highlighter-rouge\">npm install</code></p>  </li>  <li>    <p><strong>Run the tests</strong><br /><code class=\"language-plaintext highlighter-rouge\">npm test</code></p>  </li></ol><h2 id=\"license\">License</h2><p>JSON Schema $Ref Parser is 100% free and open-source, under the <a href=\"/json-schema-ref-parser/LICENSE\">MIT license</a>. Use it however you want.</p><p>This package is <a href=\"http://treeware.earth\">Treeware</a>. If you use it in production, then we ask that you <a href=\"https://plant.treeware.earth/APIDevTools/json-schema-ref-parser\"><strong>buy the world a tree</strong></a> to thank us for our work. By contributing to the Treeware forest you\u2019ll be creating employment for local families and restoring wildlife habitats.</p><h2 id=\"big-thanks-to\">Big Thanks To</h2><p>Thanks to these awesome companies for their support of Open Source developers \u2764</p><p><a href=\"https://stoplight.io/?utm_source=github&amp;utm_medium=readme&amp;utm_campaign=json_schema_ref_parser\"><img src=\"https://svgshare.com/i/TK5.svg\" alt=\"Stoplight\" /></a><a href=\"https://saucelabs.com\"><img src=\"https://jstools.dev/img/badges/sauce-labs.svg\" alt=\"SauceLabs\" /></a><a href=\"https://coveralls.io\"><img src=\"https://jstools.dev/img/badges/coveralls.svg\" alt=\"Coveralls\" /></a></p>  </main>  <footer id=\"footer\">              <p class=\"repo-owner\">        <a href=\"https://github.com/APIDevTools/json-schema-ref-parser\">json-schema-ref-parser</a> is maintained by        <a href=\"https://github.com/APIDevTools\">APIDevTools</a>.      </p>      </footer></div>  </body></html>",
  "embeddings": []
}
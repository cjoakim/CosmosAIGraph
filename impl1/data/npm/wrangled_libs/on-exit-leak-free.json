{
  "name": "on-exit-leak-free",
  "description": "execute a function on exit without leaking memory, allowing all objects to be garbage collected",
  "keywords": [
    "weak",
    "reference",
    "finalization",
    "registry",
    "process",
    "exit",
    "garbage",
    "collector"
  ],
  "license": "mit",
  "homepage": "https://github.com/mcollina/on-exit-or-gc#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mcollina/on-exit-or-gc.git"
  },
  "version": "2.1.2",
  "devDependencies": {
    "snazzy": "^9.0.0",
    "standard": "^17.0.0",
    "tap": "^16.0.0"
  },
  "users": [],
  "readme": "",
  "dependencies": {},
  "peerDependencies": {},
  "developers": [
    "hello@matteocollina.com"
  ],
  "kwds": "execute a function on exit without leaking memory, allowing all objects to be garbage collected weak reference finalization registry process exit garbage collector",
  "license_kwds": "mit",
  "libtype": "npm",
  "id": "npm_on_exit_leak_free",
  "dependency_ids": [
    "npm_snazzy",
    "npm_standard",
    "npm_tap"
  ]
}